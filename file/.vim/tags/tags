!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	opencv2/cudev/util/detail/type_traits.hpp	/^        typedef typename SelectIf<sizeof(A) >= sizeof(B), A, B>::type type;$/;"	t	struct:cv::cudev::type_traits_detail::LargerDepth
ACCESS_FAST	opencv2/core/mat.hpp	/^    ACCESS_RW=3<<24, ACCESS_MASK=ACCESS_RW, ACCESS_FAST=1<<26 };$/;"	e	enum:cv::__anon272
ACCESS_MASK	opencv2/core/mat.hpp	/^    ACCESS_RW=3<<24, ACCESS_MASK=ACCESS_RW, ACCESS_FAST=1<<26 };$/;"	e	enum:cv::__anon272
ACCESS_READ	opencv2/core/mat.hpp	/^enum { ACCESS_READ=1<<24, ACCESS_WRITE=1<<25,$/;"	e	enum:cv::__anon272
ACCESS_RW	opencv2/core/mat.hpp	/^    ACCESS_RW=3<<24, ACCESS_MASK=ACCESS_RW, ACCESS_FAST=1<<26 };$/;"	e	enum:cv::__anon272
ACCESS_WRITE	opencv2/core/mat.hpp	/^enum { ACCESS_READ=1<<24, ACCESS_WRITE=1<<25,$/;"	e	enum:cv::__anon272
ADAPTIVE_THRESH_GAUSSIAN_C	opencv2/imgproc.hpp	/^    ADAPTIVE_THRESH_GAUSSIAN_C = 1$/;"	e	enum:cv::AdaptiveThresholdTypes
ADAPTIVE_THRESH_MEAN_C	opencv2/imgproc.hpp	/^    ADAPTIVE_THRESH_MEAN_C     = 0,$/;"	e	enum:cv::AdaptiveThresholdTypes
AGAST_5_8	opencv2/features2d.hpp	/^        AGAST_5_8 = 0, AGAST_7_12d = 1, AGAST_7_12s = 2, OAST_9_16 = 3,$/;"	e	enum:cv::AgastFeatureDetector::__anon378
AGAST_7_12d	opencv2/features2d.hpp	/^        AGAST_5_8 = 0, AGAST_7_12d = 1, AGAST_7_12s = 2, OAST_9_16 = 3,$/;"	e	enum:cv::AgastFeatureDetector::__anon378
AGAST_7_12s	opencv2/features2d.hpp	/^        AGAST_5_8 = 0, AGAST_7_12d = 1, AGAST_7_12s = 2, OAST_9_16 = 3,$/;"	e	enum:cv::AgastFeatureDetector::__anon378
AKAZE	opencv2/features2d.hpp	/^class CV_EXPORTS_W AKAZE : public Feature2D$/;"	c	namespace:cv
AKAZEFeaturesFinder	opencv2/stitching/detail/matchers.hpp	/^class CV_EXPORTS AKAZEFeaturesFinder : public detail::FeaturesFinder$/;"	c	namespace:cv::detail
ALGORITHM	opencv2/core.hpp	/^    enum { INT=0, BOOLEAN=1, REAL=2, STRING=3, MAT=4, MAT_VECTOR=5, ALGORITHM=6, FLOAT=7,$/;"	e	enum:cv::Param::__anon344
ALPHA_ATOP	opencv2/cudaimgproc.hpp	/^enum AlphaCompTypes { ALPHA_OVER, ALPHA_IN, ALPHA_OUT, ALPHA_ATOP, ALPHA_XOR, ALPHA_PLUS, ALPHA_OVER_PREMUL, ALPHA_IN_PREMUL, ALPHA_OUT_PREMUL,$/;"	e	enum:cv::cuda::AlphaCompTypes
ALPHA_ATOP_PREMUL	opencv2/cudaimgproc.hpp	/^       ALPHA_ATOP_PREMUL, ALPHA_XOR_PREMUL, ALPHA_PLUS_PREMUL, ALPHA_PREMUL};$/;"	e	enum:cv::cuda::AlphaCompTypes
ALPHA_IN	opencv2/cudaimgproc.hpp	/^enum AlphaCompTypes { ALPHA_OVER, ALPHA_IN, ALPHA_OUT, ALPHA_ATOP, ALPHA_XOR, ALPHA_PLUS, ALPHA_OVER_PREMUL, ALPHA_IN_PREMUL, ALPHA_OUT_PREMUL,$/;"	e	enum:cv::cuda::AlphaCompTypes
ALPHA_IN_PREMUL	opencv2/cudaimgproc.hpp	/^enum AlphaCompTypes { ALPHA_OVER, ALPHA_IN, ALPHA_OUT, ALPHA_ATOP, ALPHA_XOR, ALPHA_PLUS, ALPHA_OVER_PREMUL, ALPHA_IN_PREMUL, ALPHA_OUT_PREMUL,$/;"	e	enum:cv::cuda::AlphaCompTypes
ALPHA_OUT	opencv2/cudaimgproc.hpp	/^enum AlphaCompTypes { ALPHA_OVER, ALPHA_IN, ALPHA_OUT, ALPHA_ATOP, ALPHA_XOR, ALPHA_PLUS, ALPHA_OVER_PREMUL, ALPHA_IN_PREMUL, ALPHA_OUT_PREMUL,$/;"	e	enum:cv::cuda::AlphaCompTypes
ALPHA_OUT_PREMUL	opencv2/cudaimgproc.hpp	/^enum AlphaCompTypes { ALPHA_OVER, ALPHA_IN, ALPHA_OUT, ALPHA_ATOP, ALPHA_XOR, ALPHA_PLUS, ALPHA_OVER_PREMUL, ALPHA_IN_PREMUL, ALPHA_OUT_PREMUL,$/;"	e	enum:cv::cuda::AlphaCompTypes
ALPHA_OVER	opencv2/cudaimgproc.hpp	/^enum AlphaCompTypes { ALPHA_OVER, ALPHA_IN, ALPHA_OUT, ALPHA_ATOP, ALPHA_XOR, ALPHA_PLUS, ALPHA_OVER_PREMUL, ALPHA_IN_PREMUL, ALPHA_OUT_PREMUL,$/;"	e	enum:cv::cuda::AlphaCompTypes
ALPHA_OVER_PREMUL	opencv2/cudaimgproc.hpp	/^enum AlphaCompTypes { ALPHA_OVER, ALPHA_IN, ALPHA_OUT, ALPHA_ATOP, ALPHA_XOR, ALPHA_PLUS, ALPHA_OVER_PREMUL, ALPHA_IN_PREMUL, ALPHA_OUT_PREMUL,$/;"	e	enum:cv::cuda::AlphaCompTypes
ALPHA_PLUS	opencv2/cudaimgproc.hpp	/^enum AlphaCompTypes { ALPHA_OVER, ALPHA_IN, ALPHA_OUT, ALPHA_ATOP, ALPHA_XOR, ALPHA_PLUS, ALPHA_OVER_PREMUL, ALPHA_IN_PREMUL, ALPHA_OUT_PREMUL,$/;"	e	enum:cv::cuda::AlphaCompTypes
ALPHA_PLUS_PREMUL	opencv2/cudaimgproc.hpp	/^       ALPHA_ATOP_PREMUL, ALPHA_XOR_PREMUL, ALPHA_PLUS_PREMUL, ALPHA_PREMUL};$/;"	e	enum:cv::cuda::AlphaCompTypes
ALPHA_PREMUL	opencv2/cudaimgproc.hpp	/^       ALPHA_ATOP_PREMUL, ALPHA_XOR_PREMUL, ALPHA_PLUS_PREMUL, ALPHA_PREMUL};$/;"	e	enum:cv::cuda::AlphaCompTypes
ALPHA_XOR	opencv2/cudaimgproc.hpp	/^enum AlphaCompTypes { ALPHA_OVER, ALPHA_IN, ALPHA_OUT, ALPHA_ATOP, ALPHA_XOR, ALPHA_PLUS, ALPHA_OVER_PREMUL, ALPHA_IN_PREMUL, ALPHA_OUT_PREMUL,$/;"	e	enum:cv::cuda::AlphaCompTypes
ALPHA_XOR_PREMUL	opencv2/cudaimgproc.hpp	/^       ALPHA_ATOP_PREMUL, ALPHA_XOR_PREMUL, ALPHA_PLUS_PREMUL, ALPHA_PREMUL};$/;"	e	enum:cv::cuda::AlphaCompTypes
ANGLE_ROW	opencv2/cudafeatures2d.hpp	/^        ANGLE_ROW,$/;"	e	enum:cv::cuda::ORB::__anon92
ANN_MLP	opencv2/ml.hpp	/^class CV_EXPORTS_W ANN_MLP : public StatModel$/;"	c	namespace:cv::ml
APPEND	opencv2/core/persistence.hpp	/^        APPEND      = 2, \/\/!< value, open the file for appending$/;"	e	enum:cv::FileStorage::Mode
ARM_ROUND	opencv2/core/fast_math.hpp	71;"	d
ARM_ROUND_DBL	opencv2/core/fast_math.hpp	79;"	d
ARM_ROUND_DBL	opencv2/core/fast_math.hpp	81;"	d
ARM_ROUND_FLT	opencv2/core/fast_math.hpp	84;"	d
ARRAY_BUFFER	opencv2/core/opengl.hpp	/^        ARRAY_BUFFER         = 0x8892, \/\/!< The buffer will be used as a source for vertex data$/;"	e	enum:cv::ogl::Buffer::Target
ASGD	opencv2/ml.hpp	/^        ASGD \/\/!< Average Stochastic Gradient Descent$/;"	e	enum:cv::ml::SVMSGD::SvmsgdType
AS_IS	opencv2/stitching/detail/timelapsers.hpp	/^    enum {AS_IS, CROP};$/;"	e	enum:cv::detail::Timelapser::__anon94
ATOMIC_BOOL_LOCK_FREE	5/bits/atomic_lockfree_defines.h	49;"	d
ATOMIC_CHAR16_T_LOCK_FREE	5/bits/atomic_lockfree_defines.h	52;"	d
ATOMIC_CHAR32_T_LOCK_FREE	5/bits/atomic_lockfree_defines.h	53;"	d
ATOMIC_CHAR_LOCK_FREE	5/bits/atomic_lockfree_defines.h	50;"	d
ATOMIC_FLAG_INIT	5/bits/atomic_base.h	157;"	d
ATOMIC_INT_LOCK_FREE	5/bits/atomic_lockfree_defines.h	55;"	d
ATOMIC_LLONG_LOCK_FREE	5/bits/atomic_lockfree_defines.h	57;"	d
ATOMIC_LONG_LOCK_FREE	5/bits/atomic_lockfree_defines.h	56;"	d
ATOMIC_POINTER_LOCK_FREE	5/bits/atomic_lockfree_defines.h	58;"	d
ATOMIC_SHORT_LOCK_FREE	5/bits/atomic_lockfree_defines.h	54;"	d
ATOMIC_VAR_INIT	5/bits/atomic_base.h	123;"	d
ATOMIC_WCHAR_T_LOCK_FREE	5/bits/atomic_lockfree_defines.h	51;"	d
AUTOTUNED	opencv2/flann/defines.h	/^    AUTOTUNED = 255$/;"	e	enum:cvflann::flann_algorithm_t
AUTO_STEP	opencv2/core/mat.hpp	/^    enum { MAGIC_VAL  = 0x42FF0000, AUTO_STEP = 0, CONTINUOUS_FLAG = CV_MAT_CONT_FLAG, SUBMATRIX_FLAG = CV_SUBMAT_FLAG };$/;"	e	enum:cv::Mat::__anon276
AUTO_STEP	opencv2/core/mat.hpp	/^    enum { MAGIC_VAL  = 0x42FF0000, AUTO_STEP = 0, CONTINUOUS_FLAG = CV_MAT_CONT_FLAG, SUBMATRIX_FLAG = CV_SUBMAT_FLAG };$/;"	e	enum:cv::UMat::__anon278
Access	opencv2/core/opengl.hpp	/^    enum Access$/;"	g	class:cv::ogl::Buffer
Accumulator	opencv2/features2d.hpp	/^struct CV_EXPORTS Accumulator$/;"	s	namespace:cv
Accumulator	opencv2/features2d.hpp	/^template<> struct Accumulator<char>   { typedef float Type; };$/;"	s	namespace:cv
Accumulator	opencv2/features2d.hpp	/^template<> struct Accumulator<short>  { typedef float Type; };$/;"	s	namespace:cv
Accumulator	opencv2/features2d.hpp	/^template<> struct Accumulator<unsigned char>  { typedef float Type; };$/;"	s	namespace:cv
Accumulator	opencv2/features2d.hpp	/^template<> struct Accumulator<unsigned short> { typedef float Type; };$/;"	s	namespace:cv
Accumulator	opencv2/flann/dist.h	/^struct Accumulator { typedef T Type; };$/;"	s	namespace:cvflann
Accumulator	opencv2/flann/dist.h	/^struct Accumulator<char>   { typedef float Type; };$/;"	s	namespace:cvflann
Accumulator	opencv2/flann/dist.h	/^struct Accumulator<int> { typedef float Type; };$/;"	s	namespace:cvflann
Accumulator	opencv2/flann/dist.h	/^struct Accumulator<short>  { typedef float Type; };$/;"	s	namespace:cvflann
Accumulator	opencv2/flann/dist.h	/^struct Accumulator<unsigned char>  { typedef float Type; };$/;"	s	namespace:cvflann
Accumulator	opencv2/flann/dist.h	/^struct Accumulator<unsigned int> { typedef float Type; };$/;"	s	namespace:cvflann
Accumulator	opencv2/flann/dist.h	/^struct Accumulator<unsigned short> { typedef float Type; };$/;"	s	namespace:cvflann
ActivationFunctions	opencv2/ml.hpp	/^    enum ActivationFunctions {$/;"	g	class:cv::ml::ANN_MLP
AdaptiveThresholdTypes	opencv2/imgproc.hpp	/^enum AdaptiveThresholdTypes {$/;"	g	namespace:cv
AddParameterType	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct AddParameterType<void> { typedef void type; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
AddParameterType	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <class U> struct AddParameterType { typedef const U& type; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
AddParameterType	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <class U> struct AddParameterType<U&> { typedef U& type; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
AddParameterType	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct AddParameterType<void> { typedef void type; };$/;"	s	namespace:cv::cudev::type_traits_detail
AddParameterType	opencv2/cudev/util/detail/type_traits.hpp	/^    template <class U> struct AddParameterType { typedef const U& type; };$/;"	s	namespace:cv::cudev::type_traits_detail
AddParameterType	opencv2/cudev/util/detail/type_traits.hpp	/^    template <class U> struct AddParameterType<U&> { typedef U& type; };$/;"	s	namespace:cv::cudev::type_traits_detail
Affine3	opencv2/core/affine.hpp	/^    class Affine3$/;"	c	namespace:cv
Affine3	opencv2/core/affine.hpp	/^cv::Affine3<T>::Affine3()$/;"	f	class:cv::Affine3
Affine3	opencv2/core/affine.hpp	/^cv::Affine3<T>::Affine3(const Eigen::Transform<T, 3, Eigen::Affine, (Eigen::RowMajor)>& affine)$/;"	f	class:cv::Affine3
Affine3	opencv2/core/affine.hpp	/^cv::Affine3<T>::Affine3(const Eigen::Transform<T, 3, Eigen::Affine>& affine)$/;"	f	class:cv::Affine3
Affine3	opencv2/core/affine.hpp	/^cv::Affine3<T>::Affine3(const Mat3& R, const Vec3& t)$/;"	f	class:cv::Affine3
Affine3	opencv2/core/affine.hpp	/^cv::Affine3<T>::Affine3(const Mat4& affine)$/;"	f	class:cv::Affine3
Affine3	opencv2/core/affine.hpp	/^cv::Affine3<T>::Affine3(const Vec3& _rvec, const Vec3& t)$/;"	f	class:cv::Affine3
Affine3	opencv2/core/affine.hpp	/^cv::Affine3<T>::Affine3(const cv::Mat& data, const Vec3& t)$/;"	f	class:cv::Affine3
Affine3	opencv2/core/affine.hpp	/^cv::Affine3<T>::Affine3(const float_type* vals) : matrix(vals)$/;"	f	class:cv::Affine3
Affine3d	opencv2/core/affine.hpp	/^    typedef Affine3<double> Affine3d;$/;"	t	namespace:cv
Affine3f	opencv2/core/affine.hpp	/^    typedef Affine3<float> Affine3f;$/;"	t	namespace:cv
AffineBasedEstimator	opencv2/stitching/detail/motion_estimators.hpp	/^class CV_EXPORTS AffineBasedEstimator : public Estimator$/;"	c	namespace:cv::detail
AffineBestOf2NearestMatcher	opencv2/stitching/detail/matchers.hpp	/^    AffineBestOf2NearestMatcher(bool full_affine = false, bool try_use_gpu = false,$/;"	f	class:cv::detail::AffineBestOf2NearestMatcher
AffineBestOf2NearestMatcher	opencv2/stitching/detail/matchers.hpp	/^class CV_EXPORTS AffineBestOf2NearestMatcher : public BestOf2NearestMatcher$/;"	c	namespace:cv::detail
AffineMapPtr	opencv2/cudev/ptr2d/warping.hpp	/^struct AffineMapPtr$/;"	s	namespace:cv::cudev
AffineMapPtrSz	opencv2/cudev/ptr2d/warping.hpp	/^struct AffineMapPtrSz : AffineMapPtr$/;"	s	namespace:cv::cudev
AffineTransformer	opencv2/shape/shape_transformer.hpp	/^class CV_EXPORTS_W AffineTransformer : public ShapeTransformer$/;"	c	namespace:cv
AffineWarper	opencv2/stitching/detail/warpers.hpp	/^    AffineWarper(float scale = 1.f) : PlaneWarper(scale) {}$/;"	f	class:cv::detail::AffineWarper
AffineWarper	opencv2/stitching/detail/warpers.hpp	/^class CV_EXPORTS AffineWarper : public PlaneWarper$/;"	c	namespace:cv::detail
AffineWarper	opencv2/stitching/warpers.hpp	/^class AffineWarper : public WarperCreator$/;"	c	namespace:cv
AgastFeatureDetector	opencv2/features2d.hpp	/^class CV_EXPORTS_W AgastFeatureDetector : public Feature2D$/;"	c	namespace:cv
Algorithm	opencv2/core.hpp	/^class CV_EXPORTS Algorithm;$/;"	m	namespace:cv	typeref:class:cv::CV_EXPORTS
Algorithm	opencv2/core.hpp	/^class CV_EXPORTS_W Algorithm$/;"	c	namespace:cv
AlignExposures	opencv2/photo.hpp	/^class CV_EXPORTS_W AlignExposures : public Algorithm$/;"	c	namespace:cv
AlignMTB	opencv2/photo.hpp	/^class CV_EXPORTS_W AlignMTB : public AlignExposures$/;"	c	namespace:cv
Alloc	opencv2/core/private.hpp	/^    T* Alloc(int size) { m_pBuffer = (T*)ippMalloc(size); return m_pBuffer; }$/;"	f	class:IppAutoBuffer
AllocType	opencv2/core/cuda.hpp	/^    enum AllocType { PAGE_LOCKED = 1, SHARED = 2, WRITE_COMBINED = 4 };$/;"	g	class:cv::cuda::HostMem
Allocate	opencv2/core/wimage.hpp	/^inline void WImageBuffer<T>::Allocate(int width, int height, int nchannels)$/;"	f	class:cv::WImageBuffer
Allocate	opencv2/core/wimage.hpp	/^inline void WImageBufferC<T, C>::Allocate(int width, int height)$/;"	f	class:cv::WImageBufferC
Allocator	opencv2/core/cuda.hpp	/^    class CV_EXPORTS Allocator$/;"	c	class:cv::cuda::GpuMat
Allocator	opencv2/core/cvstd.hpp	/^    explicit Allocator() {}$/;"	f	class:cv::Allocator
Allocator	opencv2/core/cvstd.hpp	/^    explicit Allocator(Allocator const&) {}$/;"	f	class:cv::Allocator
Allocator	opencv2/core/cvstd.hpp	/^    explicit Allocator(Allocator<U> const&) {}$/;"	f	class:cv::Allocator
Allocator	opencv2/core/cvstd.hpp	/^template<typename _Tp> class Allocator$/;"	c	namespace:cv
AlphaCompTypes	opencv2/cudaimgproc.hpp	/^enum AlphaCompTypes { ALPHA_OVER, ALPHA_IN, ALPHA_OUT, ALPHA_ATOP, ALPHA_XOR, ALPHA_PLUS, ALPHA_OVER_PREMUL, ALPHA_IN_PREMUL, ALPHA_OUT_PREMUL,$/;"	g	namespace:cv::cuda
AnnotationInvocationHandler	5/sun/reflect/annotation/AnnotationInvocationHandler.h	/^class sun::reflect::annotation::AnnotationInvocationHandler : public ::java::lang::Object$/;"	c	class:sun::reflect::annotation
AnnotationParser	5/sun/reflect/annotation/AnnotationParser.h	/^class sun::reflect::annotation::AnnotationParser : public ::java::lang::Object$/;"	c	class:sun::reflect::annotation
AnnotationType	5/sun/reflect/annotation/AnnotationType.h	/^class sun::reflect::annotation::AnnotationType : public ::java::lang::Object$/;"	c	class:sun::reflect::annotation
AreaFilter	opencv2/core/cuda/filters.hpp	/^        explicit __host__ __device__ __forceinline__ AreaFilter(const Ptr2D& src_, float scale_x_, float scale_y_)$/;"	f	struct:cv::cuda::device::AreaFilter
AreaFilter	opencv2/core/cuda/filters.hpp	/^    template <typename Ptr2D> struct AreaFilter$/;"	s	namespace:cv::cuda::device
ArrayWrapper	opencv2/cudev/util/type_traits.hpp	/^template <typename T, int COUNT> struct ArrayWrapper$/;"	s	namespace:cv::cudev
Arrays	opencv2/core/base.hpp	/^    class CV_EXPORTS Arrays;$/;"	m	namespace:cv::ogl	typeref:class:cv::ogl::CV_EXPORTS
Arrays	opencv2/core/opengl.hpp	/^class CV_EXPORTS Arrays$/;"	c	namespace:cv::ogl
Arrays	opencv2/core/opengl.hpp	/^cv::ogl::Arrays::Arrays() : size_(0)$/;"	f	class:cv::ogl::Arrays
AtomicUnroll	opencv2/cudev/grid/detail/reduce.hpp	/^    template <typename R> struct AtomicUnroll<R, 1>$/;"	s	namespace:cv::cudev::grid_reduce_detail
AtomicUnroll	opencv2/cudev/grid/detail/reduce.hpp	/^    template <typename R> struct AtomicUnroll<R, 2>$/;"	s	namespace:cv::cudev::grid_reduce_detail
AtomicUnroll	opencv2/cudev/grid/detail/reduce.hpp	/^    template <typename R> struct AtomicUnroll<R, 3>$/;"	s	namespace:cv::cudev::grid_reduce_detail
AtomicUnroll	opencv2/cudev/grid/detail/reduce.hpp	/^    template <typename R> struct AtomicUnroll<R, 4>$/;"	s	namespace:cv::cudev::grid_reduce_detail
AutoBuffer	opencv2/core/utility.hpp	/^AutoBuffer<_Tp, fixed_size>::AutoBuffer()$/;"	f	class:cv::AutoBuffer
AutoBuffer	opencv2/core/utility.hpp	/^AutoBuffer<_Tp, fixed_size>::AutoBuffer(const AutoBuffer<_Tp, fixed_size>& abuf )$/;"	f	class:cv::AutoBuffer
AutoBuffer	opencv2/core/utility.hpp	/^AutoBuffer<_Tp, fixed_size>::AutoBuffer(size_t _size)$/;"	f	class:cv::AutoBuffer
AutoBuffer	opencv2/core/utility.hpp	/^template<typename _Tp, size_t fixed_size = 1024\/sizeof(_Tp)+8> class AutoBuffer$/;"	c	namespace:cv
AutoLock	opencv2/core/utility.hpp	/^    AutoLock(Mutex& m) : mutex(&m) { mutex->lock(); }$/;"	f	class:cv::AutoLock
AutoLock	opencv2/core/utility.hpp	/^class CV_EXPORTS AutoLock$/;"	c	namespace:cv
AutotunedIndex	opencv2/flann/autotuned_index.h	/^    AutotunedIndex(const Matrix<ElementType>& inputData, const IndexParams& params = AutotunedIndexParams(), Distance d = Distance()) :$/;"	f	class:cvflann::AutotunedIndex
AutotunedIndex	opencv2/flann/autotuned_index.h	/^class AutotunedIndex : public NNIndex<Distance>$/;"	c	namespace:cvflann
AutotunedIndexParams	opencv2/flann/autotuned_index.h	/^    AutotunedIndexParams(float target_precision = 0.8, float build_weight = 0.01, float memory_weight = 0, float sample_fraction = 0.1)$/;"	f	struct:cvflann::AutotunedIndexParams
AutotunedIndexParams	opencv2/flann/autotuned_index.h	/^struct AutotunedIndexParams : public IndexParams$/;"	s	namespace:cvflann
AutotunedIndexParams	opencv2/flann/miniflann.hpp	/^struct CV_EXPORTS AutotunedIndexParams : public IndexParams$/;"	s	namespace:cv::flann
Avg	opencv2/cudev/grid/reduce_to_vec.hpp	/^template <typename T> struct Avg : plus<T>$/;"	s	namespace:cv::cudev
AvgBitrate	opencv2/cudacodec.hpp	/^    int AvgBitrate;      \/\/!< NVVE_AVG_BITRATE,$/;"	m	struct:cv::cudacodec::EncoderParams
B2Y	opencv2/core/cuda/detail/color_detail.hpp	/^            B2Y        = 1868,$/;"	e	enum:cv::cuda::device::color_detail::__anon246
B2Y	opencv2/cudev/functional/detail/color_cvt.hpp	/^        B2Y        = 1868,$/;"	e	enum:cv::cudev::color_cvt_detail::__anon396
BACKPROP	opencv2/ml.hpp	/^        BACKPROP=0, \/\/!< The back-propagation algorithm.$/;"	e	enum:cv::ml::ANN_MLP::TrainingMethods
BAND	opencv2/videostab/fast_marching.hpp	/^    enum { INSIDE = 0, BAND = 1, KNOWN = 255 };$/;"	e	enum:cv::videostab::FastMarchingMethod::__anon334
BASE64	opencv2/core/persistence.hpp	/^        BASE64      = 64,     \/\/!< flag, write rawdata in Base64 by default. (consider using WRITE_BASE64)$/;"	e	enum:cv::FileStorage::Mode
BATCH	opencv2/ml.hpp	/^        BATCH = 0,$/;"	e	enum:cv::ml::LogisticRegression::Methods
BFMatcher	opencv2/features2d.hpp	/^class CV_EXPORTS_W BFMatcher : public DescriptorMatcher$/;"	c	namespace:cv
BFRAME	opencv2/cudacodec.hpp	/^        BFRAME = 3$/;"	e	enum:cv::cudacodec::EncoderCallBack::PicType
BLOCKING_SYNC	opencv2/core/cuda.hpp	/^        BLOCKING_SYNC  = 0x01,  \/**< Event uses blocking synchronization *\/$/;"	e	enum:cv::cuda::Event::CreateFlags
BLOCKSIZE	opencv2/flann/allocator.h	/^const  size_t     BLOCKSIZE=8192;$/;"	m	namespace:cvflann
BLOCK_SIZE	opencv2/core/cuda/detail/color_detail.hpp	/^            BLOCK_SIZE = 256$/;"	e	enum:cv::cuda::device::color_detail::__anon246
BLOCK_SIZE	opencv2/cudev/functional/detail/color_cvt.hpp	/^        BLOCK_SIZE = 256$/;"	e	enum:cv::cudev::color_cvt_detail::__anon396
BOOLEAN	opencv2/core.hpp	/^    enum { INT=0, BOOLEAN=1, REAL=2, STRING=3, MAT=4, MAT_VECTOR=5, ALGORITHM=6, FLOAT=7,$/;"	e	enum:cv::Param::__anon344
BORDER_CONSTANT	opencv2/core/base.hpp	/^    BORDER_CONSTANT    = 0, \/\/!< `iiiiii|abcdefgh|iiiiiii`  with some specified `i`$/;"	e	enum:cv::BorderTypes
BORDER_DEFAULT	opencv2/core/base.hpp	/^    BORDER_DEFAULT     = BORDER_REFLECT_101, \/\/!< same as BORDER_REFLECT_101$/;"	e	enum:cv::BorderTypes
BORDER_ISOLATED	opencv2/core/base.hpp	/^    BORDER_ISOLATED    = 16 \/\/!< do not look outside of ROI$/;"	e	enum:cv::BorderTypes
BORDER_REFLECT	opencv2/core/base.hpp	/^    BORDER_REFLECT     = 2, \/\/!< `fedcba|abcdefgh|hgfedcb`$/;"	e	enum:cv::BorderTypes
BORDER_REFLECT101	opencv2/core/base.hpp	/^    BORDER_REFLECT101  = BORDER_REFLECT_101, \/\/!< same as BORDER_REFLECT_101$/;"	e	enum:cv::BorderTypes
BORDER_REFLECT_101	opencv2/core/base.hpp	/^    BORDER_REFLECT_101 = 4, \/\/!< `gfedcb|abcdefgh|gfedcba`$/;"	e	enum:cv::BorderTypes
BORDER_REPLICATE	opencv2/core/base.hpp	/^    BORDER_REPLICATE   = 1, \/\/!< `aaaaaa|abcdefgh|hhhhhhh`$/;"	e	enum:cv::BorderTypes
BORDER_TRANSPARENT	opencv2/core/base.hpp	/^    BORDER_TRANSPARENT = 5, \/\/!< `uvwxyz|absdefgh|ijklmno`$/;"	e	enum:cv::BorderTypes
BORDER_WRAP	opencv2/core/base.hpp	/^    BORDER_WRAP        = 3, \/\/!< `cdefgh|abcdefgh|abcdefg`$/;"	e	enum:cv::BorderTypes
BOWImgDescriptorExtractor	opencv2/features2d.hpp	/^class CV_EXPORTS_W BOWImgDescriptorExtractor$/;"	c	namespace:cv
BOWKMeansTrainer	opencv2/features2d.hpp	/^class CV_EXPORTS_W BOWKMeansTrainer : public BOWTrainer$/;"	c	namespace:cv
BOWTrainer	opencv2/features2d.hpp	/^class CV_EXPORTS_W BOWTrainer$/;"	c	namespace:cv
BRISK	opencv2/features2d.hpp	/^class CV_EXPORTS_W BRISK : public Feature2D$/;"	c	namespace:cv
BRUTEFORCE	opencv2/features2d.hpp	/^        BRUTEFORCE            = 2,$/;"	e	enum:cv::DescriptorMatcher::__anon384
BRUTEFORCE_HAMMING	opencv2/features2d.hpp	/^        BRUTEFORCE_HAMMING    = 4,$/;"	e	enum:cv::DescriptorMatcher::__anon384
BRUTEFORCE_HAMMINGLUT	opencv2/features2d.hpp	/^        BRUTEFORCE_HAMMINGLUT = 5,$/;"	e	enum:cv::DescriptorMatcher::__anon384
BRUTEFORCE_L1	opencv2/features2d.hpp	/^        BRUTEFORCE_L1         = 3,$/;"	e	enum:cv::DescriptorMatcher::__anon384
BRUTEFORCE_SL2	opencv2/features2d.hpp	/^        BRUTEFORCE_SL2        = 6$/;"	e	enum:cv::DescriptorMatcher::__anon384
BRUTE_FORCE	opencv2/ml.hpp	/^        BRUTE_FORCE=1,$/;"	e	enum:cv::ml::KNearest::Types
BUILD_SHARED_LIBS	opencv2/cvconfig.h	2;"	d
BackgroundSubtractor	opencv2/video/background_segm.hpp	/^class CV_EXPORTS_W BackgroundSubtractor : public Algorithm$/;"	c	namespace:cv
BackgroundSubtractorFGD	opencv2/cudalegacy.hpp	/^class CV_EXPORTS BackgroundSubtractorFGD : public cv::BackgroundSubtractor$/;"	c	namespace:cv::cuda
BackgroundSubtractorGMG	opencv2/cudalegacy.hpp	/^class CV_EXPORTS BackgroundSubtractorGMG : public cv::BackgroundSubtractor$/;"	c	namespace:cv::cuda
BackgroundSubtractorKNN	opencv2/video/background_segm.hpp	/^class CV_EXPORTS_W BackgroundSubtractorKNN : public BackgroundSubtractor$/;"	c	namespace:cv
BackgroundSubtractorMOG	opencv2/cudabgsegm.hpp	/^class CV_EXPORTS BackgroundSubtractorMOG : public cv::BackgroundSubtractor$/;"	c	namespace:cv::cuda
BackgroundSubtractorMOG2	opencv2/cudabgsegm.hpp	/^class CV_EXPORTS BackgroundSubtractorMOG2 : public cv::BackgroundSubtractorMOG2$/;"	c	namespace:cv::cuda
BackgroundSubtractorMOG2	opencv2/video/background_segm.hpp	/^class CV_EXPORTS_W BackgroundSubtractorMOG2 : public BackgroundSubtractor$/;"	c	namespace:cv
BadAlign	opencv2/core/base.hpp	/^    BadAlign=                  -21,  \/\/!<$/;"	e	enum:cv::Error::Code
BadAlphaChannel	opencv2/core/base.hpp	/^    BadAlphaChannel=           -18,  \/\/!<$/;"	e	enum:cv::Error::Code
BadCOI	opencv2/core/base.hpp	/^    BadCOI=                    -24,  \/\/!<$/;"	e	enum:cv::Error::Code
BadCallBack	opencv2/core/base.hpp	/^    BadCallBack=               -22,  \/\/!<$/;"	e	enum:cv::Error::Code
BadDataPtr	opencv2/core/base.hpp	/^    BadDataPtr=                -12,  \/\/!<$/;"	e	enum:cv::Error::Code
BadDepth	opencv2/core/base.hpp	/^    BadDepth=                  -17,  \/\/!<$/;"	e	enum:cv::Error::Code
BadImageSize	opencv2/core/base.hpp	/^    BadImageSize=              -10,  \/\/!< image size is invalid$/;"	e	enum:cv::Error::Code
BadModelOrChSeq	opencv2/core/base.hpp	/^    BadModelOrChSeq=           -14,  \/\/!<$/;"	e	enum:cv::Error::Code
BadNumChannel1U	opencv2/core/base.hpp	/^    BadNumChannel1U=           -16,  \/\/!<$/;"	e	enum:cv::Error::Code
BadNumChannels	opencv2/core/base.hpp	/^    BadNumChannels=            -15,  \/\/!<$/;"	e	enum:cv::Error::Code
BadOffset	opencv2/core/base.hpp	/^    BadOffset=                 -11,  \/\/!< offset is invalid$/;"	e	enum:cv::Error::Code
BadOrder	opencv2/core/base.hpp	/^    BadOrder=                  -19,  \/\/!<$/;"	e	enum:cv::Error::Code
BadOrigin	opencv2/core/base.hpp	/^    BadOrigin=                 -20,  \/\/!<$/;"	e	enum:cv::Error::Code
BadROISize	opencv2/core/base.hpp	/^    BadROISize=                -25,  \/\/!<$/;"	e	enum:cv::Error::Code
BadStep	opencv2/core/base.hpp	/^    BadStep=                   -13,  \/\/!<$/;"	e	enum:cv::Error::Code
BadTileSize	opencv2/core/base.hpp	/^    BadTileSize=               -23,  \/\/!<$/;"	e	enum:cv::Error::Code
Ballot	opencv2/core/cuda/emulation.hpp	/^        static __forceinline__ __device__ int Ballot(int predicate)$/;"	f	struct:cv::cuda::device::Emulation
BaseCascadeClassifier	opencv2/objdetect.hpp	/^class CV_EXPORTS_W BaseCascadeClassifier : public Algorithm$/;"	c	namespace:cv
BaseType	opencv2/core/wimage.hpp	/^    typedef T BaseType;$/;"	t	class:cv::WImage
BaseType	opencv2/core/wimage.hpp	/^    typedef typename WImage<T>::BaseType BaseType;$/;"	t	class:cv::WImageBuffer
BaseType	opencv2/core/wimage.hpp	/^    typedef typename WImage<T>::BaseType BaseType;$/;"	t	class:cv::WImageBufferC
BaseType	opencv2/core/wimage.hpp	/^    typedef typename WImage<T>::BaseType BaseType;$/;"	t	class:cv::WImageC
BaseType	opencv2/core/wimage.hpp	/^    typedef typename WImage<T>::BaseType BaseType;$/;"	t	class:cv::WImageView
BaseType	opencv2/core/wimage.hpp	/^    typedef typename WImage<T>::BaseType BaseType;$/;"	t	class:cv::WImageViewC
BestOf2NearestMatcher	opencv2/stitching/detail/matchers.hpp	/^class CV_EXPORTS BestOf2NearestMatcher : public FeaturesMatcher$/;"	c	namespace:cv::detail
BestOf2NearestRangeMatcher	opencv2/stitching/detail/matchers.hpp	/^class CV_EXPORTS BestOf2NearestRangeMatcher : public BestOf2NearestMatcher$/;"	c	namespace:cv::detail
BinOpShift	opencv2/core/cuda/functional.hpp	/^        template <size_t src_elem_size1, size_t src_elem_size2, size_t dst_elem_size> struct BinOpShift { enum { shift = 1 }; };$/;"	s	namespace:cv::cuda::device::functional_detail
BinOpShift	opencv2/core/cuda/functional.hpp	/^        template <size_t src_elem_size1, size_t src_elem_size2> struct BinOpShift<src_elem_size1, src_elem_size2, 1> { enum { shift = 4 }; };$/;"	s	namespace:cv::cuda::device::functional_detail
BinOpShift	opencv2/core/cuda/functional.hpp	/^        template <size_t src_elem_size1, size_t src_elem_size2> struct BinOpShift<src_elem_size1, src_elem_size2, 2> { enum { shift = 2 }; };$/;"	s	namespace:cv::cuda::device::functional_detail
BinaryNegate	opencv2/cudev/functional/functional.hpp	/^template <class Predicate> struct BinaryNegate : binary_function<typename Predicate::first_argument_type, typename Predicate::second_argument_type, typename Predicate::result_type>$/;"	s	namespace:cv::cudev
BinaryReadWriteTraits	opencv2/core/cuda/detail/transform_detail.hpp	/^        template <typename T1, typename T2, typename D, int shift> struct BinaryReadWriteTraits$/;"	s	namespace:cv::cuda::device::transform_detail
BinaryTransformPtr	opencv2/cudev/ptr2d/transform.hpp	/^template <class Src1Ptr, class Src2Ptr, class Op> struct BinaryTransformPtr$/;"	s	namespace:cv::cudev
BinaryTransformPtrSz	opencv2/cudev/ptr2d/transform.hpp	/^template <class Src1Ptr, class Src2Ptr, class Op> struct BinaryTransformPtrSz : BinaryTransformPtr<Src1Ptr, Src2Ptr, Op>$/;"	s	namespace:cv::cudev
BinaryTupleAdapter	opencv2/cudev/functional/tuple_adapter.hpp	/^template <class Op, int n0, int n1> struct BinaryTupleAdapter$/;"	s	namespace:cv::cudev
Binder1st	opencv2/cudev/functional/functional.hpp	/^template <class Op> struct Binder1st : unary_function<typename Op::second_argument_type, typename Op::result_type>$/;"	s	namespace:cv::cudev
Binder2nd	opencv2/cudev/functional/functional.hpp	/^template <class Op> struct Binder2nd : unary_function<typename Op::first_argument_type, typename Op::result_type>$/;"	s	namespace:cv::cudev
Blender	opencv2/stitching/detail/blenders.hpp	/^class CV_EXPORTS Blender$/;"	c	namespace:cv::detail
Block	opencv2/core/cuda/block.hpp	/^    struct Block$/;"	s	namespace:cv::cuda::device
Block	opencv2/cudev/block/block.hpp	/^struct Block$/;"	s	namespace:cv::cudev
BlockScan	opencv2/core/cuda/scan.hpp	/^        __device__ __forceinline__ BlockScan() {}$/;"	f	struct:cv::cuda::device::BlockScan
BlockScan	opencv2/core/cuda/scan.hpp	/^        __device__ __forceinline__ BlockScan(const BlockScan& other) { (void)other; }$/;"	f	struct:cv::cuda::device::BlockScan
BlockScan	opencv2/core/cuda/scan.hpp	/^    template <ScanKind Kind , typename T, typename Sc, typename F> struct BlockScan$/;"	s	namespace:cv::cuda::device
BlockedRange	opencv2/core/private.hpp	/^    typedef tbb::blocked_range<int> BlockedRange;$/;"	t	namespace:cv
BlocksGainCompensator	opencv2/stitching/detail/exposure_compensate.hpp	/^    BlocksGainCompensator(int bl_width = 32, int bl_height = 32)$/;"	f	class:cv::detail::BlocksGainCompensator
BlocksGainCompensator	opencv2/stitching/detail/exposure_compensate.hpp	/^class CV_EXPORTS BlocksGainCompensator : public ExposureCompensator$/;"	c	namespace:cv::detail
Boost	opencv2/ml.hpp	/^class CV_EXPORTS_W Boost : public DTrees$/;"	c	namespace:cv::ml
BorderConst	opencv2/core/types_c.h	/^    int  BorderConst[4];    \/**< Ditto.                                 *\/$/;"	m	struct:_IplImage
BorderMode	opencv2/core/types_c.h	/^    int  BorderMode[4];     \/**< Ignored by OpenCV.                     *\/$/;"	m	struct:_IplImage
BorderReader	opencv2/core/cuda/border_interpolate.hpp	/^        __host__ __device__ __forceinline__ BorderReader(const Ptr2D& ptr_, const B& b_) : ptr(ptr_), b(b_) {}$/;"	f	struct:cv::cuda::device::BorderReader
BorderReader	opencv2/core/cuda/border_interpolate.hpp	/^        __host__ __device__ __forceinline__ BorderReader(const Ptr2D& src_, const BrdConstant<D>& b) :$/;"	f	struct:cv::cuda::device::BorderReader
BorderReader	opencv2/core/cuda/border_interpolate.hpp	/^    template <typename Ptr2D, typename B> struct BorderReader$/;"	s	namespace:cv::cuda::device
BorderReader	opencv2/core/cuda/border_interpolate.hpp	/^    template <typename Ptr2D, typename D> struct BorderReader< Ptr2D, BrdConstant<D> >$/;"	s	namespace:cv::cuda::device
BorderTypes	opencv2/core/base.hpp	/^enum BorderTypes {$/;"	g	namespace:cv
BoundingBox	opencv2/flann/kdtree_single_index.h	/^    typedef std::vector<Interval> BoundingBox;$/;"	t	class:cvflann::KDTreeSingleIndex
Branch	opencv2/flann/kdtree_index.h	/^    typedef BranchSt* Branch;$/;"	t	class:cvflann::KDTreeIndex
Branch	opencv2/flann/kdtree_single_index.h	/^    typedef BranchSt* Branch;$/;"	t	class:cvflann::KDTreeSingleIndex
BranchSt	opencv2/flann/hierarchical_clustering_index.h	/^    typedef BranchStruct<NodePtr, DistanceType> BranchSt;$/;"	t	class:cvflann::HierarchicalClusteringIndex
BranchSt	opencv2/flann/kdtree_index.h	/^    typedef BranchStruct<NodePtr, DistanceType> BranchSt;$/;"	t	class:cvflann::KDTreeIndex
BranchSt	opencv2/flann/kdtree_single_index.h	/^    typedef BranchStruct<NodePtr, DistanceType> BranchSt;$/;"	t	class:cvflann::KDTreeSingleIndex
BranchSt	opencv2/flann/kmeans_index.h	/^    typedef BranchStruct<KMeansNodePtr, DistanceType> BranchSt;$/;"	t	class:cvflann::KMeansIndex
BranchStruct	opencv2/flann/result_set.h	/^    BranchStruct() {}$/;"	f	struct:cvflann::BranchStruct
BranchStruct	opencv2/flann/result_set.h	/^    BranchStruct(const T& aNode, DistanceType dist) : node(aNode), mindist(dist) {}$/;"	f	struct:cvflann::BranchStruct
BranchStruct	opencv2/flann/result_set.h	/^struct BranchStruct$/;"	s	namespace:cvflann
BrdBase	opencv2/cudev/ptr2d/extrapolation.hpp	/^template <class BrdImpl, class SrcPtr> struct BrdBase$/;"	s	namespace:cv::cudev
BrdColConstant	opencv2/core/cuda/border_interpolate.hpp	/^        explicit __host__ __device__ __forceinline__ BrdColConstant(int height_, const D& val_ = VecTraits<D>::all(0)) : height(height_), val(val_) {}$/;"	f	struct:cv::cuda::device::BrdColConstant
BrdColConstant	opencv2/core/cuda/border_interpolate.hpp	/^    template <typename D> struct BrdColConstant$/;"	s	namespace:cv::cuda::device
BrdColReflect	opencv2/core/cuda/border_interpolate.hpp	/^        explicit __host__ __device__ __forceinline__ BrdColReflect(int height) : last_row(height - 1) {}$/;"	f	struct:cv::cuda::device::BrdColReflect
BrdColReflect	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename U> __host__ __device__ __forceinline__ BrdColReflect(int height, U) : last_row(height - 1) {}$/;"	f	struct:cv::cuda::device::BrdColReflect
BrdColReflect	opencv2/core/cuda/border_interpolate.hpp	/^    template <typename D> struct BrdColReflect$/;"	s	namespace:cv::cuda::device
BrdColReflect101	opencv2/core/cuda/border_interpolate.hpp	/^        explicit __host__ __device__ __forceinline__ BrdColReflect101(int height) : last_row(height - 1) {}$/;"	f	struct:cv::cuda::device::BrdColReflect101
BrdColReflect101	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename U> __host__ __device__ __forceinline__ BrdColReflect101(int height, U) : last_row(height - 1) {}$/;"	f	struct:cv::cuda::device::BrdColReflect101
BrdColReflect101	opencv2/core/cuda/border_interpolate.hpp	/^    template <typename D> struct BrdColReflect101$/;"	s	namespace:cv::cuda::device
BrdColReplicate	opencv2/core/cuda/border_interpolate.hpp	/^        explicit __host__ __device__ __forceinline__ BrdColReplicate(int height) : last_row(height - 1) {}$/;"	f	struct:cv::cuda::device::BrdColReplicate
BrdColReplicate	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename U> __host__ __device__ __forceinline__ BrdColReplicate(int height, U) : last_row(height - 1) {}$/;"	f	struct:cv::cuda::device::BrdColReplicate
BrdColReplicate	opencv2/core/cuda/border_interpolate.hpp	/^    template <typename D> struct BrdColReplicate$/;"	s	namespace:cv::cuda::device
BrdColWrap	opencv2/core/cuda/border_interpolate.hpp	/^        explicit __host__ __device__ __forceinline__ BrdColWrap(int height_) : height(height_) {}$/;"	f	struct:cv::cuda::device::BrdColWrap
BrdColWrap	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename U> __host__ __device__ __forceinline__ BrdColWrap(int height_, U) : height(height_) {}$/;"	f	struct:cv::cuda::device::BrdColWrap
BrdColWrap	opencv2/core/cuda/border_interpolate.hpp	/^    template <typename D> struct BrdColWrap$/;"	s	namespace:cv::cuda::device
BrdConstant	opencv2/core/cuda/border_interpolate.hpp	/^        __host__ __device__ __forceinline__ BrdConstant(int height_, int width_, const D& val_ = VecTraits<D>::all(0)) : height(height_), width(width_), val(val_)$/;"	f	struct:cv::cuda::device::BrdConstant
BrdConstant	opencv2/core/cuda/border_interpolate.hpp	/^    template <typename D> struct BrdConstant$/;"	s	namespace:cv::cuda::device
BrdConstant	opencv2/cudev/ptr2d/extrapolation.hpp	/^template <class SrcPtr> struct BrdConstant$/;"	s	namespace:cv::cudev
BrdReflect	opencv2/core/cuda/border_interpolate.hpp	/^        __host__ __device__ __forceinline__ BrdReflect(int height, int width) : last_row(height - 1), last_col(width - 1) {}$/;"	f	struct:cv::cuda::device::BrdReflect
BrdReflect	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename U> __host__ __device__ __forceinline__ BrdReflect(int height, int width, U) : last_row(height - 1), last_col(width - 1) {}$/;"	f	struct:cv::cuda::device::BrdReflect
BrdReflect	opencv2/core/cuda/border_interpolate.hpp	/^    template <typename D> struct BrdReflect$/;"	s	namespace:cv::cuda::device
BrdReflect	opencv2/cudev/ptr2d/extrapolation.hpp	/^struct BrdReflect$/;"	s	namespace:cv::cudev
BrdReflect101	opencv2/core/cuda/border_interpolate.hpp	/^        __host__ __device__ __forceinline__ BrdReflect101(int height, int width) : last_row(height - 1), last_col(width - 1) {}$/;"	f	struct:cv::cuda::device::BrdReflect101
BrdReflect101	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename U> __host__ __device__ __forceinline__ BrdReflect101(int height, int width, U) : last_row(height - 1), last_col(width - 1) {}$/;"	f	struct:cv::cuda::device::BrdReflect101
BrdReflect101	opencv2/core/cuda/border_interpolate.hpp	/^    template <typename D> struct BrdReflect101$/;"	s	namespace:cv::cuda::device
BrdReflect101	opencv2/cudev/ptr2d/extrapolation.hpp	/^struct BrdReflect101$/;"	s	namespace:cv::cudev
BrdReplicate	opencv2/core/cuda/border_interpolate.hpp	/^        __host__ __device__ __forceinline__ BrdReplicate(int height, int width) : last_row(height - 1), last_col(width - 1) {}$/;"	f	struct:cv::cuda::device::BrdReplicate
BrdReplicate	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename U> __host__ __device__ __forceinline__ BrdReplicate(int height, int width, U) : last_row(height - 1), last_col(width - 1) {}$/;"	f	struct:cv::cuda::device::BrdReplicate
BrdReplicate	opencv2/core/cuda/border_interpolate.hpp	/^    template <typename D> struct BrdReplicate$/;"	s	namespace:cv::cuda::device
BrdReplicate	opencv2/cudev/ptr2d/extrapolation.hpp	/^struct BrdReplicate$/;"	s	namespace:cv::cudev
BrdRowConstant	opencv2/core/cuda/border_interpolate.hpp	/^        explicit __host__ __device__ __forceinline__ BrdRowConstant(int width_, const D& val_ = VecTraits<D>::all(0)) : width(width_), val(val_) {}$/;"	f	struct:cv::cuda::device::BrdRowConstant
BrdRowConstant	opencv2/core/cuda/border_interpolate.hpp	/^    template <typename D> struct BrdRowConstant$/;"	s	namespace:cv::cuda::device
BrdRowReflect	opencv2/core/cuda/border_interpolate.hpp	/^        explicit __host__ __device__ __forceinline__ BrdRowReflect(int width) : last_col(width - 1) {}$/;"	f	struct:cv::cuda::device::BrdRowReflect
BrdRowReflect	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename U> __host__ __device__ __forceinline__ BrdRowReflect(int width, U) : last_col(width - 1) {}$/;"	f	struct:cv::cuda::device::BrdRowReflect
BrdRowReflect	opencv2/core/cuda/border_interpolate.hpp	/^    template <typename D> struct BrdRowReflect$/;"	s	namespace:cv::cuda::device
BrdRowReflect101	opencv2/core/cuda/border_interpolate.hpp	/^        explicit __host__ __device__ __forceinline__ BrdRowReflect101(int width) : last_col(width - 1) {}$/;"	f	struct:cv::cuda::device::BrdRowReflect101
BrdRowReflect101	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename U> __host__ __device__ __forceinline__ BrdRowReflect101(int width, U) : last_col(width - 1) {}$/;"	f	struct:cv::cuda::device::BrdRowReflect101
BrdRowReflect101	opencv2/core/cuda/border_interpolate.hpp	/^    template <typename D> struct BrdRowReflect101$/;"	s	namespace:cv::cuda::device
BrdRowReplicate	opencv2/core/cuda/border_interpolate.hpp	/^        explicit __host__ __device__ __forceinline__ BrdRowReplicate(int width) : last_col(width - 1) {}$/;"	f	struct:cv::cuda::device::BrdRowReplicate
BrdRowReplicate	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename U> __host__ __device__ __forceinline__ BrdRowReplicate(int width, U) : last_col(width - 1) {}$/;"	f	struct:cv::cuda::device::BrdRowReplicate
BrdRowReplicate	opencv2/core/cuda/border_interpolate.hpp	/^    template <typename D> struct BrdRowReplicate$/;"	s	namespace:cv::cuda::device
BrdRowWrap	opencv2/core/cuda/border_interpolate.hpp	/^        explicit __host__ __device__ __forceinline__ BrdRowWrap(int width_) : width(width_) {}$/;"	f	struct:cv::cuda::device::BrdRowWrap
BrdRowWrap	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename U> __host__ __device__ __forceinline__ BrdRowWrap(int width_, U) : width(width_) {}$/;"	f	struct:cv::cuda::device::BrdRowWrap
BrdRowWrap	opencv2/core/cuda/border_interpolate.hpp	/^    template <typename D> struct BrdRowWrap$/;"	s	namespace:cv::cuda::device
BrdWrap	opencv2/core/cuda/border_interpolate.hpp	/^        __host__ __device__ __forceinline__ BrdWrap(int height_, int width_) :$/;"	f	struct:cv::cuda::device::BrdWrap
BrdWrap	opencv2/core/cuda/border_interpolate.hpp	/^        __host__ __device__ __forceinline__ BrdWrap(int height_, int width_, U) :$/;"	f	struct:cv::cuda::device::BrdWrap
BrdWrap	opencv2/core/cuda/border_interpolate.hpp	/^    template <typename D> struct BrdWrap$/;"	s	namespace:cv::cuda::device
BrdWrap	opencv2/cudev/ptr2d/extrapolation.hpp	/^struct BrdWrap$/;"	s	namespace:cv::cudev
BroxOpticalFlow	opencv2/cudaoptflow.hpp	/^class CV_EXPORTS BroxOpticalFlow : public DenseOpticalFlow$/;"	c	namespace:cv::cuda
BroxOpticalFlow	opencv2/superres/optical_flow.hpp	/^        class CV_EXPORTS BroxOpticalFlow : public virtual DenseOpticalFlowExt$/;"	c	namespace:cv::superres
Bucket	opencv2/flann/lsh_table.h	/^typedef std::vector<FeatureIndex> Bucket;$/;"	t	namespace:cvflann::lsh
BucketKey	opencv2/flann/lsh_table.h	/^typedef unsigned int BucketKey;$/;"	t	namespace:cvflann::lsh
BucketsSpace	opencv2/flann/lsh_table.h	/^    typedef std::unordered_map<BucketKey, Bucket> BucketsSpace;$/;"	t	class:cvflann::lsh::LshTable
BucketsSpeed	opencv2/flann/lsh_table.h	/^    typedef std::vector<Bucket> BucketsSpeed;$/;"	t	class:cvflann::lsh::LshTable
Buffer	opencv2/core/base.hpp	/^    class CV_EXPORTS Buffer;$/;"	m	namespace:cv::ogl	typeref:class:cv::ogl::CV_EXPORTS
Buffer	opencv2/core/opengl.hpp	/^class CV_EXPORTS Buffer$/;"	c	namespace:cv::ogl
Buffer	opencv2/core/opengl.hpp	/^cv::ogl::Buffer::Buffer(Size asize, int atype, Target target, bool autoRelease) : rows_(0), cols_(0), type_(0)$/;"	f	class:cv::ogl::Buffer
Buffer	opencv2/core/opengl.hpp	/^cv::ogl::Buffer::Buffer(int arows, int acols, int atype, Target target, bool autoRelease) : rows_(0), cols_(0), type_(0)$/;"	f	class:cv::ogl::Buffer
BufferPoolController	opencv2/core/bufferpool.hpp	/^class BufferPoolController$/;"	c	namespace:cv
BundleAdjusterAffine	opencv2/stitching/detail/motion_estimators.hpp	/^    BundleAdjusterAffine() : BundleAdjusterBase(6, 2) {}$/;"	f	class:cv::detail::BundleAdjusterAffine
BundleAdjusterAffine	opencv2/stitching/detail/motion_estimators.hpp	/^class CV_EXPORTS BundleAdjusterAffine : public BundleAdjusterBase$/;"	c	namespace:cv::detail
BundleAdjusterAffinePartial	opencv2/stitching/detail/motion_estimators.hpp	/^    BundleAdjusterAffinePartial() : BundleAdjusterBase(4, 2) {}$/;"	f	class:cv::detail::BundleAdjusterAffinePartial
BundleAdjusterAffinePartial	opencv2/stitching/detail/motion_estimators.hpp	/^class CV_EXPORTS BundleAdjusterAffinePartial : public BundleAdjusterBase$/;"	c	namespace:cv::detail
BundleAdjusterBase	opencv2/stitching/detail/motion_estimators.hpp	/^    BundleAdjusterBase(int num_params_per_cam, int num_errs_per_measurement)$/;"	f	class:cv::detail::BundleAdjusterBase
BundleAdjusterBase	opencv2/stitching/detail/motion_estimators.hpp	/^class CV_EXPORTS BundleAdjusterBase : public Estimator$/;"	c	namespace:cv::detail
BundleAdjusterRay	opencv2/stitching/detail/motion_estimators.hpp	/^    BundleAdjusterRay() : BundleAdjusterBase(4, 3) {}$/;"	f	class:cv::detail::BundleAdjusterRay
BundleAdjusterRay	opencv2/stitching/detail/motion_estimators.hpp	/^class CV_EXPORTS BundleAdjusterRay : public BundleAdjusterBase$/;"	c	namespace:cv::detail
BundleAdjusterReproj	opencv2/stitching/detail/motion_estimators.hpp	/^    BundleAdjusterReproj() : BundleAdjusterBase(7, 2) {}$/;"	f	class:cv::detail::BundleAdjusterReproj
BundleAdjusterReproj	opencv2/stitching/detail/motion_estimators.hpp	/^class CV_EXPORTS BundleAdjusterReproj : public BundleAdjusterBase$/;"	c	namespace:cv::detail
ButtonCallback	opencv2/highgui.hpp	/^typedef void (*ButtonCallback)(int state, void* userdata);$/;"	t	namespace:cv
C	opencv2/ml.hpp	/^        C=0,$/;"	e	enum:cv::ml::SVM::ParamTypes
CALC_J	opencv2/calib3d/calib3d_c.h	/^    enum { DONE=0, STARTED=1, CALC_J=2, CHECK_ERR=3 };$/;"	e	enum:CvLevMarq::__anon339
CALIB_CB_ADAPTIVE_THRESH	opencv2/calib3d.hpp	/^enum { CALIB_CB_ADAPTIVE_THRESH = 1,$/;"	e	enum:cv::__anon98
CALIB_CB_ASYMMETRIC_GRID	opencv2/calib3d.hpp	/^       CALIB_CB_ASYMMETRIC_GRID = 2,$/;"	e	enum:cv::__anon99
CALIB_CB_CLUSTERING	opencv2/calib3d.hpp	/^       CALIB_CB_CLUSTERING      = 4$/;"	e	enum:cv::__anon99
CALIB_CB_FAST_CHECK	opencv2/calib3d.hpp	/^       CALIB_CB_FAST_CHECK      = 8$/;"	e	enum:cv::__anon98
CALIB_CB_FILTER_QUADS	opencv2/calib3d.hpp	/^       CALIB_CB_FILTER_QUADS    = 4,$/;"	e	enum:cv::__anon98
CALIB_CB_NORMALIZE_IMAGE	opencv2/calib3d.hpp	/^       CALIB_CB_NORMALIZE_IMAGE = 2,$/;"	e	enum:cv::__anon98
CALIB_CB_SYMMETRIC_GRID	opencv2/calib3d.hpp	/^enum { CALIB_CB_SYMMETRIC_GRID  = 1,$/;"	e	enum:cv::__anon99
CALIB_CHECK_COND	opencv2/calib3d.hpp	/^        CALIB_CHECK_COND            = 1 << 2,$/;"	e	enum:cv::fisheye::__anon105
CALIB_FIX_ASPECT_RATIO	opencv2/calib3d.hpp	/^       CALIB_FIX_ASPECT_RATIO    = 0x00002,$/;"	e	enum:cv::__anon100
CALIB_FIX_FOCAL_LENGTH	opencv2/calib3d.hpp	/^       CALIB_FIX_FOCAL_LENGTH    = 0x00010,$/;"	e	enum:cv::__anon100
CALIB_FIX_INTRINSIC	opencv2/calib3d.hpp	/^        CALIB_FIX_INTRINSIC         = 1 << 8,$/;"	e	enum:cv::fisheye::__anon105
CALIB_FIX_INTRINSIC	opencv2/calib3d.hpp	/^       CALIB_FIX_INTRINSIC       = 0x00100,$/;"	e	enum:cv::__anon100
CALIB_FIX_K1	opencv2/calib3d.hpp	/^        CALIB_FIX_K1                = 1 << 4,$/;"	e	enum:cv::fisheye::__anon105
CALIB_FIX_K1	opencv2/calib3d.hpp	/^       CALIB_FIX_K1              = 0x00020,$/;"	e	enum:cv::__anon100
CALIB_FIX_K2	opencv2/calib3d.hpp	/^        CALIB_FIX_K2                = 1 << 5,$/;"	e	enum:cv::fisheye::__anon105
CALIB_FIX_K2	opencv2/calib3d.hpp	/^       CALIB_FIX_K2              = 0x00040,$/;"	e	enum:cv::__anon100
CALIB_FIX_K3	opencv2/calib3d.hpp	/^        CALIB_FIX_K3                = 1 << 6,$/;"	e	enum:cv::fisheye::__anon105
CALIB_FIX_K3	opencv2/calib3d.hpp	/^       CALIB_FIX_K3              = 0x00080,$/;"	e	enum:cv::__anon100
CALIB_FIX_K4	opencv2/calib3d.hpp	/^        CALIB_FIX_K4                = 1 << 7,$/;"	e	enum:cv::fisheye::__anon105
CALIB_FIX_K4	opencv2/calib3d.hpp	/^       CALIB_FIX_K4              = 0x00800,$/;"	e	enum:cv::__anon100
CALIB_FIX_K5	opencv2/calib3d.hpp	/^       CALIB_FIX_K5              = 0x01000,$/;"	e	enum:cv::__anon100
CALIB_FIX_K6	opencv2/calib3d.hpp	/^       CALIB_FIX_K6              = 0x02000,$/;"	e	enum:cv::__anon100
CALIB_FIX_PRINCIPAL_POINT	opencv2/calib3d.hpp	/^        CALIB_FIX_PRINCIPAL_POINT   = 1 << 9$/;"	e	enum:cv::fisheye::__anon105
CALIB_FIX_PRINCIPAL_POINT	opencv2/calib3d.hpp	/^       CALIB_FIX_PRINCIPAL_POINT = 0x00004,$/;"	e	enum:cv::__anon100
CALIB_FIX_S1_S2_S3_S4	opencv2/calib3d.hpp	/^       CALIB_FIX_S1_S2_S3_S4     = 0x10000,$/;"	e	enum:cv::__anon100
CALIB_FIX_SKEW	opencv2/calib3d.hpp	/^        CALIB_FIX_SKEW              = 1 << 3,$/;"	e	enum:cv::fisheye::__anon105
CALIB_FIX_TAUX_TAUY	opencv2/calib3d.hpp	/^       CALIB_FIX_TAUX_TAUY       = 0x80000,$/;"	e	enum:cv::__anon100
CALIB_RATIONAL_MODEL	opencv2/calib3d.hpp	/^       CALIB_RATIONAL_MODEL      = 0x04000,$/;"	e	enum:cv::__anon100
CALIB_RECOMPUTE_EXTRINSIC	opencv2/calib3d.hpp	/^        CALIB_RECOMPUTE_EXTRINSIC   = 1 << 1,$/;"	e	enum:cv::fisheye::__anon105
CALIB_SAME_FOCAL_LENGTH	opencv2/calib3d.hpp	/^       CALIB_SAME_FOCAL_LENGTH   = 0x00200,$/;"	e	enum:cv::__anon100
CALIB_THIN_PRISM_MODEL	opencv2/calib3d.hpp	/^       CALIB_THIN_PRISM_MODEL    = 0x08000,$/;"	e	enum:cv::__anon100
CALIB_TILTED_MODEL	opencv2/calib3d.hpp	/^       CALIB_TILTED_MODEL        = 0x40000,$/;"	e	enum:cv::__anon100
CALIB_USE_INTRINSIC_GUESS	opencv2/calib3d.hpp	/^        CALIB_USE_INTRINSIC_GUESS   = 1 << 0,$/;"	e	enum:cv::fisheye::__anon105
CALIB_USE_INTRINSIC_GUESS	opencv2/calib3d.hpp	/^enum { CALIB_USE_INTRINSIC_GUESS = 0x00001,$/;"	e	enum:cv::__anon100
CALIB_USE_LU	opencv2/calib3d.hpp	/^       CALIB_USE_LU              = (1 << 17), \/\/!< use LU instead of SVD decomposition for solving. much faster but potentially less precise$/;"	e	enum:cv::__anon100
CALIB_USE_QR	opencv2/calib3d.hpp	/^       CALIB_USE_QR              = 0x100000, \/\/!< use QR instead of SVD decomposition for solving. Faster but potentially less precise$/;"	e	enum:cv::__anon100
CALIB_ZERO_DISPARITY	opencv2/calib3d.hpp	/^       CALIB_ZERO_DISPARITY      = 0x00400,$/;"	e	enum:cv::__anon100
CALIB_ZERO_TANGENT_DIST	opencv2/calib3d.hpp	/^       CALIB_ZERO_TANGENT_DIST   = 0x00008,$/;"	e	enum:cv::__anon100
CAP_ANDROID	opencv2/videoio.hpp	/^       CAP_ANDROID      = 1000,         \/\/!< Android - not used$/;"	e	enum:cv::VideoCaptureAPIs
CAP_ANY	opencv2/videoio.hpp	/^       CAP_ANY          = 0,            \/\/!< Auto detect == 0$/;"	e	enum:cv::VideoCaptureAPIs
CAP_ARAVIS	opencv2/videoio.hpp	/^       CAP_ARAVIS       = 2100          \/\/!< Aravis SDK$/;"	e	enum:cv::VideoCaptureAPIs
CAP_AVFOUNDATION	opencv2/videoio.hpp	/^       CAP_AVFOUNDATION = 1200,         \/\/!< AVFoundation framework for iOS (OS X Lion will have the same API)$/;"	e	enum:cv::VideoCaptureAPIs
CAP_CMU1394	opencv2/videoio.hpp	/^       CAP_CMU1394      = CAP_FIREWIRE, \/\/!< Same as CAP_FIREWIRE$/;"	e	enum:cv::VideoCaptureAPIs
CAP_DC1394	opencv2/videoio.hpp	/^       CAP_DC1394       = CAP_FIREWIRE, \/\/!< Same as CAP_FIREWIRE$/;"	e	enum:cv::VideoCaptureAPIs
CAP_DSHOW	opencv2/videoio.hpp	/^       CAP_DSHOW        = 700,          \/\/!< DirectShow (via videoInput)$/;"	e	enum:cv::VideoCaptureAPIs
CAP_FFMPEG	opencv2/videoio.hpp	/^       CAP_FFMPEG       = 1900,         \/\/!< Open and record video file or stream using the FFMPEG library$/;"	e	enum:cv::VideoCaptureAPIs
CAP_FIREWARE	opencv2/videoio.hpp	/^       CAP_FIREWARE     = CAP_FIREWIRE, \/\/!< Same as CAP_FIREWIRE$/;"	e	enum:cv::VideoCaptureAPIs
CAP_FIREWIRE	opencv2/videoio.hpp	/^       CAP_FIREWIRE     = 300,          \/\/!< IEEE 1394 drivers$/;"	e	enum:cv::VideoCaptureAPIs
CAP_GIGANETIX	opencv2/videoio.hpp	/^       CAP_GIGANETIX    = 1300,         \/\/!< Smartek Giganetix GigEVisionSDK$/;"	e	enum:cv::VideoCaptureAPIs
CAP_GPHOTO2	opencv2/videoio.hpp	/^       CAP_GPHOTO2      = 1700,         \/\/!< gPhoto2 connection$/;"	e	enum:cv::VideoCaptureAPIs
CAP_GSTREAMER	opencv2/videoio.hpp	/^       CAP_GSTREAMER    = 1800,         \/\/!< GStreamer$/;"	e	enum:cv::VideoCaptureAPIs
CAP_IEEE1394	opencv2/videoio.hpp	/^       CAP_IEEE1394     = CAP_FIREWIRE, \/\/!< Same as CAP_FIREWIRE$/;"	e	enum:cv::VideoCaptureAPIs
CAP_IMAGES	opencv2/videoio.hpp	/^       CAP_IMAGES       = 2000,         \/\/!< OpenCV Image Sequence (e.g. img_%02d.jpg)$/;"	e	enum:cv::VideoCaptureAPIs
CAP_INTELPERC	opencv2/videoio.hpp	/^       CAP_INTELPERC    = 1500,         \/\/!< Intel Perceptual Computing SDK$/;"	e	enum:cv::VideoCaptureAPIs
CAP_INTELPERC_DEPTH_GENERATOR	opencv2/videoio.hpp	/^enum { CAP_INTELPERC_DEPTH_GENERATOR = 1 << 29,$/;"	e	enum:cv::__anon84
CAP_INTELPERC_DEPTH_MAP	opencv2/videoio.hpp	/^enum { CAP_INTELPERC_DEPTH_MAP              = 0, \/\/!< Each pixel is a 16-bit integer. The value indicates the distance from an object to the camera's XY plane or the Cartesian depth.$/;"	e	enum:cv::__anon85
CAP_INTELPERC_GENERATORS_MASK	opencv2/videoio.hpp	/^       CAP_INTELPERC_GENERATORS_MASK = CAP_INTELPERC_DEPTH_GENERATOR + CAP_INTELPERC_IMAGE_GENERATOR$/;"	e	enum:cv::__anon84
CAP_INTELPERC_IMAGE	opencv2/videoio.hpp	/^       CAP_INTELPERC_IMAGE                  = 3$/;"	e	enum:cv::__anon85
CAP_INTELPERC_IMAGE_GENERATOR	opencv2/videoio.hpp	/^       CAP_INTELPERC_IMAGE_GENERATOR = 1 << 28,$/;"	e	enum:cv::__anon84
CAP_INTELPERC_IR_MAP	opencv2/videoio.hpp	/^       CAP_INTELPERC_IR_MAP                 = 2, \/\/!< Each pixel is a 16-bit integer. The value indicates the intensity of the reflected laser beam.$/;"	e	enum:cv::__anon85
CAP_INTELPERC_UVDEPTH_MAP	opencv2/videoio.hpp	/^       CAP_INTELPERC_UVDEPTH_MAP            = 1, \/\/!< Each pixel contains two 32-bit floating point values in the range of 0-1, representing the mapping of depth coordinates to the color coordinates.$/;"	e	enum:cv::__anon85
CAP_MODE_BGR	opencv2/videoio.hpp	/^       CAP_MODE_BGR  = 0, \/\/!< BGR24 (default)$/;"	e	enum:cv::VideoCaptureModes
CAP_MODE_GRAY	opencv2/videoio.hpp	/^       CAP_MODE_GRAY = 2, \/\/!< Y8$/;"	e	enum:cv::VideoCaptureModes
CAP_MODE_RGB	opencv2/videoio.hpp	/^       CAP_MODE_RGB  = 1, \/\/!< RGB24$/;"	e	enum:cv::VideoCaptureModes
CAP_MODE_YUYV	opencv2/videoio.hpp	/^       CAP_MODE_YUYV = 3  \/\/!< YUYV$/;"	e	enum:cv::VideoCaptureModes
CAP_MSMF	opencv2/videoio.hpp	/^       CAP_MSMF         = 1400,         \/\/!< Microsoft Media Foundation (via videoInput)$/;"	e	enum:cv::VideoCaptureAPIs
CAP_OPENNI	opencv2/videoio.hpp	/^       CAP_OPENNI       = 900,          \/\/!< OpenNI (for Kinect)$/;"	e	enum:cv::VideoCaptureAPIs
CAP_OPENNI2	opencv2/videoio.hpp	/^       CAP_OPENNI2      = 1600,         \/\/!< OpenNI2 (for Kinect)$/;"	e	enum:cv::VideoCaptureAPIs
CAP_OPENNI2_ASUS	opencv2/videoio.hpp	/^       CAP_OPENNI2_ASUS = 1610,         \/\/!< OpenNI2 (for Asus Xtion and Occipital Structure sensors)$/;"	e	enum:cv::VideoCaptureAPIs
CAP_OPENNI_ASUS	opencv2/videoio.hpp	/^       CAP_OPENNI_ASUS  = 910,          \/\/!< OpenNI (for Asus Xtion)$/;"	e	enum:cv::VideoCaptureAPIs
CAP_OPENNI_BGR_IMAGE	opencv2/videoio.hpp	/^       CAP_OPENNI_BGR_IMAGE         = 5, \/\/!< Data given from RGB image generator$/;"	e	enum:cv::__anon73
CAP_OPENNI_DEPTH_GENERATOR	opencv2/videoio.hpp	/^enum { CAP_OPENNI_DEPTH_GENERATOR = 1 << 31,$/;"	e	enum:cv::__anon70
CAP_OPENNI_DEPTH_GENERATOR_BASELINE	opencv2/videoio.hpp	/^       CAP_OPENNI_DEPTH_GENERATOR_BASELINE        = CAP_OPENNI_DEPTH_GENERATOR + CAP_PROP_OPENNI_BASELINE,$/;"	e	enum:cv::__anon72
CAP_OPENNI_DEPTH_GENERATOR_FOCAL_LENGTH	opencv2/videoio.hpp	/^       CAP_OPENNI_DEPTH_GENERATOR_FOCAL_LENGTH    = CAP_OPENNI_DEPTH_GENERATOR + CAP_PROP_OPENNI_FOCAL_LENGTH,$/;"	e	enum:cv::__anon72
CAP_OPENNI_DEPTH_GENERATOR_PRESENT	opencv2/videoio.hpp	/^       CAP_OPENNI_DEPTH_GENERATOR_PRESENT         = CAP_OPENNI_DEPTH_GENERATOR + CAP_PROP_OPENNI_GENERATOR_PRESENT,$/;"	e	enum:cv::__anon72
CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION	opencv2/videoio.hpp	/^       CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION    = CAP_OPENNI_DEPTH_GENERATOR + CAP_PROP_OPENNI_REGISTRATION,$/;"	e	enum:cv::__anon72
CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION_ON	opencv2/videoio.hpp	/^       CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION_ON = CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION,$/;"	e	enum:cv::__anon72
CAP_OPENNI_DEPTH_MAP	opencv2/videoio.hpp	/^enum { CAP_OPENNI_DEPTH_MAP         = 0, \/\/!< Depth values in mm (CV_16UC1)$/;"	e	enum:cv::__anon73
CAP_OPENNI_DISPARITY_MAP	opencv2/videoio.hpp	/^       CAP_OPENNI_DISPARITY_MAP     = 2, \/\/!< Disparity in pixels (CV_8UC1)$/;"	e	enum:cv::__anon73
CAP_OPENNI_DISPARITY_MAP_32F	opencv2/videoio.hpp	/^       CAP_OPENNI_DISPARITY_MAP_32F = 3, \/\/!< Disparity in pixels (CV_32FC1)$/;"	e	enum:cv::__anon73
CAP_OPENNI_GENERATORS_MASK	opencv2/videoio.hpp	/^       CAP_OPENNI_GENERATORS_MASK = CAP_OPENNI_DEPTH_GENERATOR + CAP_OPENNI_IMAGE_GENERATOR + CAP_OPENNI_IR_GENERATOR$/;"	e	enum:cv::__anon70
CAP_OPENNI_GRAY_IMAGE	opencv2/videoio.hpp	/^       CAP_OPENNI_GRAY_IMAGE        = 6, \/\/!< Data given from RGB image generator$/;"	e	enum:cv::__anon73
CAP_OPENNI_IMAGE_GENERATOR	opencv2/videoio.hpp	/^       CAP_OPENNI_IMAGE_GENERATOR = 1 << 30,$/;"	e	enum:cv::__anon70
CAP_OPENNI_IMAGE_GENERATOR_OUTPUT_MODE	opencv2/videoio.hpp	/^       CAP_OPENNI_IMAGE_GENERATOR_OUTPUT_MODE     = CAP_OPENNI_IMAGE_GENERATOR + CAP_PROP_OPENNI_OUTPUT_MODE,$/;"	e	enum:cv::__anon72
CAP_OPENNI_IMAGE_GENERATOR_PRESENT	opencv2/videoio.hpp	/^enum { CAP_OPENNI_IMAGE_GENERATOR_PRESENT         = CAP_OPENNI_IMAGE_GENERATOR + CAP_PROP_OPENNI_GENERATOR_PRESENT,$/;"	e	enum:cv::__anon72
CAP_OPENNI_IR_GENERATOR	opencv2/videoio.hpp	/^       CAP_OPENNI_IR_GENERATOR    = 1 << 29,$/;"	e	enum:cv::__anon70
CAP_OPENNI_IR_GENERATOR_PRESENT	opencv2/videoio.hpp	/^       CAP_OPENNI_IR_GENERATOR_PRESENT            = CAP_OPENNI_IR_GENERATOR + CAP_PROP_OPENNI_GENERATOR_PRESENT,$/;"	e	enum:cv::__anon72
CAP_OPENNI_IR_IMAGE	opencv2/videoio.hpp	/^       CAP_OPENNI_IR_IMAGE          = 7  \/\/!< Data given from IR image generator$/;"	e	enum:cv::__anon73
CAP_OPENNI_POINT_CLOUD_MAP	opencv2/videoio.hpp	/^       CAP_OPENNI_POINT_CLOUD_MAP   = 1, \/\/!< XYZ in meters (CV_32FC3)$/;"	e	enum:cv::__anon73
CAP_OPENNI_QVGA_30HZ	opencv2/videoio.hpp	/^       CAP_OPENNI_QVGA_30HZ = 3,$/;"	e	enum:cv::__anon74
CAP_OPENNI_QVGA_60HZ	opencv2/videoio.hpp	/^       CAP_OPENNI_QVGA_60HZ = 4$/;"	e	enum:cv::__anon74
CAP_OPENNI_SXGA_15HZ	opencv2/videoio.hpp	/^       CAP_OPENNI_SXGA_15HZ = 1,$/;"	e	enum:cv::__anon74
CAP_OPENNI_SXGA_30HZ	opencv2/videoio.hpp	/^       CAP_OPENNI_SXGA_30HZ = 2,$/;"	e	enum:cv::__anon74
CAP_OPENNI_VALID_DEPTH_MASK	opencv2/videoio.hpp	/^       CAP_OPENNI_VALID_DEPTH_MASK  = 4, \/\/!< CV_8UC1$/;"	e	enum:cv::__anon73
CAP_OPENNI_VGA_30HZ	opencv2/videoio.hpp	/^enum { CAP_OPENNI_VGA_30HZ  = 0,$/;"	e	enum:cv::__anon74
CAP_PROP_APERTURE	opencv2/videoio.hpp	/^       CAP_PROP_APERTURE                  = 17008, \/\/!< Aperture. Can be readonly, depends on camera program.$/;"	e	enum:cv::__anon86
CAP_PROP_AUTOFOCUS	opencv2/videoio.hpp	/^       CAP_PROP_AUTOFOCUS     =39$/;"	e	enum:cv::VideoCaptureProperties
CAP_PROP_AUTO_EXPOSURE	opencv2/videoio.hpp	/^       CAP_PROP_AUTO_EXPOSURE =21, \/\/!< DC1394: exposure control done by camera, user can adjust reference level using this feature.$/;"	e	enum:cv::VideoCaptureProperties
CAP_PROP_BACKLIGHT	opencv2/videoio.hpp	/^       CAP_PROP_BACKLIGHT     =32,$/;"	e	enum:cv::VideoCaptureProperties
CAP_PROP_BRIGHTNESS	opencv2/videoio.hpp	/^       CAP_PROP_BRIGHTNESS    =10, \/\/!< Brightness of the image (only for cameras).$/;"	e	enum:cv::VideoCaptureProperties
CAP_PROP_BUFFERSIZE	opencv2/videoio.hpp	/^       CAP_PROP_BUFFERSIZE    =38,$/;"	e	enum:cv::VideoCaptureProperties
CAP_PROP_CONTRAST	opencv2/videoio.hpp	/^       CAP_PROP_CONTRAST      =11, \/\/!< Contrast of the image (only for cameras).$/;"	e	enum:cv::VideoCaptureProperties
CAP_PROP_CONVERT_RGB	opencv2/videoio.hpp	/^       CAP_PROP_CONVERT_RGB   =16, \/\/!< Boolean flags indicating whether images should be converted to RGB.$/;"	e	enum:cv::VideoCaptureProperties
CAP_PROP_DC1394_MAX	opencv2/videoio.hpp	/^       CAP_PROP_DC1394_MAX                = 31$/;"	e	enum:cv::__anon69
CAP_PROP_DC1394_MODE_AUTO	opencv2/videoio.hpp	/^       CAP_PROP_DC1394_MODE_AUTO          = -2,$/;"	e	enum:cv::__anon69
CAP_PROP_DC1394_MODE_MANUAL	opencv2/videoio.hpp	/^       CAP_PROP_DC1394_MODE_MANUAL        = -3, \/\/!< set automatically when a value of the feature is set by the user.$/;"	e	enum:cv::__anon69
CAP_PROP_DC1394_MODE_ONE_PUSH_AUTO	opencv2/videoio.hpp	/^       CAP_PROP_DC1394_MODE_ONE_PUSH_AUTO = -1,$/;"	e	enum:cv::__anon69
CAP_PROP_DC1394_OFF	opencv2/videoio.hpp	/^enum { CAP_PROP_DC1394_OFF                = -4, \/\/!< turn the feature off (not controlled manually nor automatically).$/;"	e	enum:cv::__anon69
CAP_PROP_EXPOSURE	opencv2/videoio.hpp	/^       CAP_PROP_EXPOSURE      =15, \/\/!< Exposure (only for cameras).$/;"	e	enum:cv::VideoCaptureProperties
CAP_PROP_EXPOSUREPROGRAM	opencv2/videoio.hpp	/^       CAP_PROP_EXPOSUREPROGRAM           = 17009, \/\/!< Camera exposure program.$/;"	e	enum:cv::__anon86
CAP_PROP_FOCUS	opencv2/videoio.hpp	/^       CAP_PROP_FOCUS         =28,$/;"	e	enum:cv::VideoCaptureProperties
CAP_PROP_FORMAT	opencv2/videoio.hpp	/^       CAP_PROP_FORMAT         =8, \/\/!< Format of the %Mat objects returned by VideoCapture::retrieve().$/;"	e	enum:cv::VideoCaptureProperties
CAP_PROP_FOURCC	opencv2/videoio.hpp	/^       CAP_PROP_FOURCC         =6, \/\/!< 4-character code of codec. see VideoWriter::fourcc .$/;"	e	enum:cv::VideoCaptureProperties
CAP_PROP_FPS	opencv2/videoio.hpp	/^       CAP_PROP_FPS            =5, \/\/!< Frame rate.$/;"	e	enum:cv::VideoCaptureProperties
CAP_PROP_FRAME_COUNT	opencv2/videoio.hpp	/^       CAP_PROP_FRAME_COUNT    =7, \/\/!< Number of frames in the video file.$/;"	e	enum:cv::VideoCaptureProperties
CAP_PROP_FRAME_HEIGHT	opencv2/videoio.hpp	/^       CAP_PROP_FRAME_HEIGHT   =4, \/\/!< Height of the frames in the video stream.$/;"	e	enum:cv::VideoCaptureProperties
CAP_PROP_FRAME_WIDTH	opencv2/videoio.hpp	/^       CAP_PROP_FRAME_WIDTH    =3, \/\/!< Width of the frames in the video stream.$/;"	e	enum:cv::VideoCaptureProperties
CAP_PROP_GAIN	opencv2/videoio.hpp	/^       CAP_PROP_GAIN          =14, \/\/!< Gain of the image (only for cameras).$/;"	e	enum:cv::VideoCaptureProperties
CAP_PROP_GAMMA	opencv2/videoio.hpp	/^       CAP_PROP_GAMMA         =22,$/;"	e	enum:cv::VideoCaptureProperties
CAP_PROP_GIGA_FRAME_HEIGH_MAX	opencv2/videoio.hpp	/^       CAP_PROP_GIGA_FRAME_HEIGH_MAX  = 10004,$/;"	e	enum:cv::__anon82
CAP_PROP_GIGA_FRAME_OFFSET_X	opencv2/videoio.hpp	/^enum { CAP_PROP_GIGA_FRAME_OFFSET_X   = 10001,$/;"	e	enum:cv::__anon82
CAP_PROP_GIGA_FRAME_OFFSET_Y	opencv2/videoio.hpp	/^       CAP_PROP_GIGA_FRAME_OFFSET_Y   = 10002,$/;"	e	enum:cv::__anon82
CAP_PROP_GIGA_FRAME_SENS_HEIGH	opencv2/videoio.hpp	/^       CAP_PROP_GIGA_FRAME_SENS_HEIGH = 10006$/;"	e	enum:cv::__anon82
CAP_PROP_GIGA_FRAME_SENS_WIDTH	opencv2/videoio.hpp	/^       CAP_PROP_GIGA_FRAME_SENS_WIDTH = 10005,$/;"	e	enum:cv::__anon82
CAP_PROP_GIGA_FRAME_WIDTH_MAX	opencv2/videoio.hpp	/^       CAP_PROP_GIGA_FRAME_WIDTH_MAX  = 10003,$/;"	e	enum:cv::__anon82
CAP_PROP_GPHOTO2_COLLECT_MSGS	opencv2/videoio.hpp	/^       CAP_PROP_GPHOTO2_COLLECT_MSGS      = 17005, \/\/!< Collect messages with details.$/;"	e	enum:cv::__anon86
CAP_PROP_GPHOTO2_FLUSH_MSGS	opencv2/videoio.hpp	/^       CAP_PROP_GPHOTO2_FLUSH_MSGS        = 17006, \/\/!< Readonly, returns (const char *).$/;"	e	enum:cv::__anon86
CAP_PROP_GPHOTO2_PREVIEW	opencv2/videoio.hpp	/^enum { CAP_PROP_GPHOTO2_PREVIEW           = 17001, \/\/!< Capture only preview from liveview mode.$/;"	e	enum:cv::__anon86
CAP_PROP_GPHOTO2_RELOAD_CONFIG	opencv2/videoio.hpp	/^       CAP_PROP_GPHOTO2_RELOAD_CONFIG     = 17003, \/\/!< Trigger, only by set. Reload camera settings.$/;"	e	enum:cv::__anon86
CAP_PROP_GPHOTO2_RELOAD_ON_CHANGE	opencv2/videoio.hpp	/^       CAP_PROP_GPHOTO2_RELOAD_ON_CHANGE  = 17004, \/\/!< Reload all settings on set.$/;"	e	enum:cv::__anon86
CAP_PROP_GPHOTO2_WIDGET_ENUMERATE	opencv2/videoio.hpp	/^       CAP_PROP_GPHOTO2_WIDGET_ENUMERATE  = 17002, \/\/!< Readonly, returns (const char *).$/;"	e	enum:cv::__anon86
CAP_PROP_GSTREAMER_QUEUE_LENGTH	opencv2/videoio.hpp	/^enum { CAP_PROP_GSTREAMER_QUEUE_LENGTH = 200 \/\/!< Default is 1$/;"	e	enum:cv::__anon75
CAP_PROP_GUID	opencv2/videoio.hpp	/^       CAP_PROP_GUID          =29,$/;"	e	enum:cv::VideoCaptureProperties
CAP_PROP_HUE	opencv2/videoio.hpp	/^       CAP_PROP_HUE           =13, \/\/!< Hue of the image (only for cameras).$/;"	e	enum:cv::VideoCaptureProperties
CAP_PROP_IMAGES_BASE	opencv2/videoio.hpp	/^enum { CAP_PROP_IMAGES_BASE = 18000,$/;"	e	enum:cv::__anon87
CAP_PROP_IMAGES_LAST	opencv2/videoio.hpp	/^       CAP_PROP_IMAGES_LAST = 19000 \/\/ excluding$/;"	e	enum:cv::__anon87
CAP_PROP_INTELPERC_DEPTH_CONFIDENCE_THRESHOLD	opencv2/videoio.hpp	/^       CAP_PROP_INTELPERC_DEPTH_CONFIDENCE_THRESHOLD  = 11005,$/;"	e	enum:cv::__anon83
CAP_PROP_INTELPERC_DEPTH_FOCAL_LENGTH_HORZ	opencv2/videoio.hpp	/^       CAP_PROP_INTELPERC_DEPTH_FOCAL_LENGTH_HORZ     = 11006,$/;"	e	enum:cv::__anon83
CAP_PROP_INTELPERC_DEPTH_FOCAL_LENGTH_VERT	opencv2/videoio.hpp	/^       CAP_PROP_INTELPERC_DEPTH_FOCAL_LENGTH_VERT     = 11007$/;"	e	enum:cv::__anon83
CAP_PROP_INTELPERC_DEPTH_LOW_CONFIDENCE_VALUE	opencv2/videoio.hpp	/^       CAP_PROP_INTELPERC_DEPTH_LOW_CONFIDENCE_VALUE  = 11003,$/;"	e	enum:cv::__anon83
CAP_PROP_INTELPERC_DEPTH_SATURATION_VALUE	opencv2/videoio.hpp	/^       CAP_PROP_INTELPERC_DEPTH_SATURATION_VALUE      = 11004,$/;"	e	enum:cv::__anon83
CAP_PROP_INTELPERC_PROFILE_COUNT	opencv2/videoio.hpp	/^enum { CAP_PROP_INTELPERC_PROFILE_COUNT               = 11001,$/;"	e	enum:cv::__anon83
CAP_PROP_INTELPERC_PROFILE_IDX	opencv2/videoio.hpp	/^       CAP_PROP_INTELPERC_PROFILE_IDX                 = 11002,$/;"	e	enum:cv::__anon83
CAP_PROP_IOS_DEVICE_EXPOSURE	opencv2/videoio.hpp	/^       CAP_PROP_IOS_DEVICE_EXPOSURE     = 9002,$/;"	e	enum:cv::__anon81
CAP_PROP_IOS_DEVICE_FLASH	opencv2/videoio.hpp	/^       CAP_PROP_IOS_DEVICE_FLASH        = 9003,$/;"	e	enum:cv::__anon81
CAP_PROP_IOS_DEVICE_FOCUS	opencv2/videoio.hpp	/^enum { CAP_PROP_IOS_DEVICE_FOCUS        = 9001,$/;"	e	enum:cv::__anon81
CAP_PROP_IOS_DEVICE_TORCH	opencv2/videoio.hpp	/^       CAP_PROP_IOS_DEVICE_TORCH        = 9005$/;"	e	enum:cv::__anon81
CAP_PROP_IOS_DEVICE_WHITEBALANCE	opencv2/videoio.hpp	/^       CAP_PROP_IOS_DEVICE_WHITEBALANCE = 9004,$/;"	e	enum:cv::__anon81
CAP_PROP_IRIS	opencv2/videoio.hpp	/^       CAP_PROP_IRIS          =36,$/;"	e	enum:cv::VideoCaptureProperties
CAP_PROP_ISO_SPEED	opencv2/videoio.hpp	/^       CAP_PROP_ISO_SPEED     =30,$/;"	e	enum:cv::VideoCaptureProperties
CAP_PROP_MODE	opencv2/videoio.hpp	/^       CAP_PROP_MODE           =9, \/\/!< Backend-specific value indicating the current capture mode.$/;"	e	enum:cv::VideoCaptureProperties
CAP_PROP_MONOCHROME	opencv2/videoio.hpp	/^       CAP_PROP_MONOCHROME    =19,$/;"	e	enum:cv::VideoCaptureProperties
CAP_PROP_OPENNI2_MIRROR	opencv2/videoio.hpp	/^       CAP_PROP_OPENNI2_MIRROR           = 111$/;"	e	enum:cv::__anon71
CAP_PROP_OPENNI2_SYNC	opencv2/videoio.hpp	/^       CAP_PROP_OPENNI2_SYNC             = 110,$/;"	e	enum:cv::__anon71
CAP_PROP_OPENNI_APPROX_FRAME_SYNC	opencv2/videoio.hpp	/^       CAP_PROP_OPENNI_APPROX_FRAME_SYNC = 105,$/;"	e	enum:cv::__anon71
CAP_PROP_OPENNI_BASELINE	opencv2/videoio.hpp	/^       CAP_PROP_OPENNI_BASELINE          = 102, \/\/!< In mm$/;"	e	enum:cv::__anon71
CAP_PROP_OPENNI_CIRCLE_BUFFER	opencv2/videoio.hpp	/^       CAP_PROP_OPENNI_CIRCLE_BUFFER     = 107,$/;"	e	enum:cv::__anon71
CAP_PROP_OPENNI_FOCAL_LENGTH	opencv2/videoio.hpp	/^       CAP_PROP_OPENNI_FOCAL_LENGTH      = 103, \/\/!< In pixels$/;"	e	enum:cv::__anon71
CAP_PROP_OPENNI_FRAME_MAX_DEPTH	opencv2/videoio.hpp	/^       CAP_PROP_OPENNI_FRAME_MAX_DEPTH   = 101, \/\/!< In mm$/;"	e	enum:cv::__anon71
CAP_PROP_OPENNI_GENERATOR_PRESENT	opencv2/videoio.hpp	/^       CAP_PROP_OPENNI_GENERATOR_PRESENT = 109,$/;"	e	enum:cv::__anon71
CAP_PROP_OPENNI_MAX_BUFFER_SIZE	opencv2/videoio.hpp	/^       CAP_PROP_OPENNI_MAX_BUFFER_SIZE   = 106,$/;"	e	enum:cv::__anon71
CAP_PROP_OPENNI_MAX_TIME_DURATION	opencv2/videoio.hpp	/^       CAP_PROP_OPENNI_MAX_TIME_DURATION = 108,$/;"	e	enum:cv::__anon71
CAP_PROP_OPENNI_OUTPUT_MODE	opencv2/videoio.hpp	/^enum { CAP_PROP_OPENNI_OUTPUT_MODE       = 100,$/;"	e	enum:cv::__anon71
CAP_PROP_OPENNI_REGISTRATION	opencv2/videoio.hpp	/^       CAP_PROP_OPENNI_REGISTRATION      = 104, \/\/!< Flag that synchronizes the remapping depth map to image map$/;"	e	enum:cv::__anon71
CAP_PROP_OPENNI_REGISTRATION_ON	opencv2/videoio.hpp	/^       CAP_PROP_OPENNI_REGISTRATION_ON   = CAP_PROP_OPENNI_REGISTRATION,$/;"	e	enum:cv::__anon71
CAP_PROP_PAN	opencv2/videoio.hpp	/^       CAP_PROP_PAN           =33,$/;"	e	enum:cv::VideoCaptureProperties
CAP_PROP_POS_AVI_RATIO	opencv2/videoio.hpp	/^       CAP_PROP_POS_AVI_RATIO  =2, \/\/!< Relative position of the video file: 0=start of the film, 1=end of the film.$/;"	e	enum:cv::VideoCaptureProperties
CAP_PROP_POS_FRAMES	opencv2/videoio.hpp	/^       CAP_PROP_POS_FRAMES     =1, \/\/!< 0-based index of the frame to be decoded\/captured next.$/;"	e	enum:cv::VideoCaptureProperties
CAP_PROP_POS_MSEC	opencv2/videoio.hpp	/^       CAP_PROP_POS_MSEC       =0, \/\/!< Current position of the video file in milliseconds.$/;"	e	enum:cv::VideoCaptureProperties
CAP_PROP_PVAPI_BINNINGX	opencv2/videoio.hpp	/^       CAP_PROP_PVAPI_BINNINGX              = 304, \/\/!< Horizontal binning factor.$/;"	e	enum:cv::__anon76
CAP_PROP_PVAPI_BINNINGY	opencv2/videoio.hpp	/^       CAP_PROP_PVAPI_BINNINGY              = 305, \/\/!< Vertical binning factor.$/;"	e	enum:cv::__anon76
CAP_PROP_PVAPI_DECIMATIONHORIZONTAL	opencv2/videoio.hpp	/^       CAP_PROP_PVAPI_DECIMATIONHORIZONTAL  = 302, \/\/!< Horizontal sub-sampling of the image.$/;"	e	enum:cv::__anon76
CAP_PROP_PVAPI_DECIMATIONVERTICAL	opencv2/videoio.hpp	/^       CAP_PROP_PVAPI_DECIMATIONVERTICAL    = 303, \/\/!< Vertical sub-sampling of the image.$/;"	e	enum:cv::__anon76
CAP_PROP_PVAPI_FRAMESTARTTRIGGERMODE	opencv2/videoio.hpp	/^       CAP_PROP_PVAPI_FRAMESTARTTRIGGERMODE = 301, \/\/!< FrameStartTriggerMode: Determines how a frame is initiated.$/;"	e	enum:cv::__anon76
CAP_PROP_PVAPI_MULTICASTIP	opencv2/videoio.hpp	/^enum { CAP_PROP_PVAPI_MULTICASTIP           = 300, \/\/!< IP for enable multicast master mode. 0 for disable multicast.$/;"	e	enum:cv::__anon76
CAP_PROP_PVAPI_PIXELFORMAT	opencv2/videoio.hpp	/^       CAP_PROP_PVAPI_PIXELFORMAT           = 306  \/\/!< Pixel format.$/;"	e	enum:cv::__anon76
CAP_PROP_RECTIFICATION	opencv2/videoio.hpp	/^       CAP_PROP_RECTIFICATION =18, \/\/!< Rectification flag for stereo cameras (note: only supported by DC1394 v 2.x backend currently).$/;"	e	enum:cv::VideoCaptureProperties
CAP_PROP_ROLL	opencv2/videoio.hpp	/^       CAP_PROP_ROLL          =35,$/;"	e	enum:cv::VideoCaptureProperties
CAP_PROP_SATURATION	opencv2/videoio.hpp	/^       CAP_PROP_SATURATION    =12, \/\/!< Saturation of the image (only for cameras).$/;"	e	enum:cv::VideoCaptureProperties
CAP_PROP_SETTINGS	opencv2/videoio.hpp	/^       CAP_PROP_SETTINGS      =37, \/\/! Pop up video\/camera filter dialog (note: only supported by DSHOW backend currently. Property value is ignored)$/;"	e	enum:cv::VideoCaptureProperties
CAP_PROP_SHARPNESS	opencv2/videoio.hpp	/^       CAP_PROP_SHARPNESS     =20,$/;"	e	enum:cv::VideoCaptureProperties
CAP_PROP_SPEED	opencv2/videoio.hpp	/^       CAP_PROP_SPEED                     = 17007, \/\/!< Exposure speed. Can be readonly, depends on camera program.$/;"	e	enum:cv::__anon86
CAP_PROP_TEMPERATURE	opencv2/videoio.hpp	/^       CAP_PROP_TEMPERATURE   =23,$/;"	e	enum:cv::VideoCaptureProperties
CAP_PROP_TILT	opencv2/videoio.hpp	/^       CAP_PROP_TILT          =34,$/;"	e	enum:cv::VideoCaptureProperties
CAP_PROP_TRIGGER	opencv2/videoio.hpp	/^       CAP_PROP_TRIGGER       =24,$/;"	e	enum:cv::VideoCaptureProperties
CAP_PROP_TRIGGER_DELAY	opencv2/videoio.hpp	/^       CAP_PROP_TRIGGER_DELAY =25,$/;"	e	enum:cv::VideoCaptureProperties
CAP_PROP_VIEWFINDER	opencv2/videoio.hpp	/^       CAP_PROP_VIEWFINDER                = 17010  \/\/!< Enter liveview mode.$/;"	e	enum:cv::__anon86
CAP_PROP_WHITE_BALANCE_BLUE_U	opencv2/videoio.hpp	/^       CAP_PROP_WHITE_BALANCE_BLUE_U =17, \/\/!< Currently unsupported.$/;"	e	enum:cv::VideoCaptureProperties
CAP_PROP_WHITE_BALANCE_RED_V	opencv2/videoio.hpp	/^       CAP_PROP_WHITE_BALANCE_RED_V =26,$/;"	e	enum:cv::VideoCaptureProperties
CAP_PROP_XI_ACQ_BUFFER_SIZE	opencv2/videoio.hpp	/^       CAP_PROP_XI_ACQ_BUFFER_SIZE                              = 548, \/\/!< Acquisition buffer size in buffer_size_unit. Default bytes.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_ACQ_BUFFER_SIZE_UNIT	opencv2/videoio.hpp	/^       CAP_PROP_XI_ACQ_BUFFER_SIZE_UNIT                         = 549, \/\/!< Acquisition buffer size unit in bytes. Default 1. E.g. Value 1024 means that buffer_size is in KiBytes.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_ACQ_FRAME_BURST_COUNT	opencv2/videoio.hpp	/^       CAP_PROP_XI_ACQ_FRAME_BURST_COUNT                        = 499, \/\/!< Sets number of frames acquired by burst. This burst is used only if trigger is set to FrameBurstStart.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_ACQ_TIMING_MODE	opencv2/videoio.hpp	/^       CAP_PROP_XI_ACQ_TIMING_MODE                              = 538, \/\/!< Type of sensor frames timing.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_ACQ_TRANSPORT_BUFFER_COMMIT	opencv2/videoio.hpp	/^       CAP_PROP_XI_ACQ_TRANSPORT_BUFFER_COMMIT                  = 552, \/\/!< Number of buffers to commit to low level.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_ACQ_TRANSPORT_BUFFER_SIZE	opencv2/videoio.hpp	/^       CAP_PROP_XI_ACQ_TRANSPORT_BUFFER_SIZE                    = 550, \/\/!< Acquisition transport buffer size in bytes.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_AEAG	opencv2/videoio.hpp	/^       CAP_PROP_XI_AEAG                                         = 415, \/\/!< Automatic exposure\/gain.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_AEAG_LEVEL	opencv2/videoio.hpp	/^       CAP_PROP_XI_AEAG_LEVEL                                   = 419, \/\/!< Average intensity of output signal AEAG should achieve(in %).$/;"	e	enum:cv::__anon80
CAP_PROP_XI_AEAG_ROI_HEIGHT	opencv2/videoio.hpp	/^       CAP_PROP_XI_AEAG_ROI_HEIGHT                              = 442, \/\/!< Automatic exposure\/gain ROI Height.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_AEAG_ROI_OFFSET_X	opencv2/videoio.hpp	/^       CAP_PROP_XI_AEAG_ROI_OFFSET_X                            = 439, \/\/!< Automatic exposure\/gain ROI offset X.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_AEAG_ROI_OFFSET_Y	opencv2/videoio.hpp	/^       CAP_PROP_XI_AEAG_ROI_OFFSET_Y                            = 440, \/\/!< Automatic exposure\/gain ROI offset Y.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_AEAG_ROI_WIDTH	opencv2/videoio.hpp	/^       CAP_PROP_XI_AEAG_ROI_WIDTH                               = 441, \/\/!< Automatic exposure\/gain ROI Width.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_AE_MAX_LIMIT	opencv2/videoio.hpp	/^       CAP_PROP_XI_AE_MAX_LIMIT                                 = 417, \/\/!< Maximum limit of exposure in AEAG procedure.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_AG_MAX_LIMIT	opencv2/videoio.hpp	/^       CAP_PROP_XI_AG_MAX_LIMIT                                 = 418, \/\/!< Maximum limit of gain in AEAG procedure.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_APPLY_CMS	opencv2/videoio.hpp	/^       CAP_PROP_XI_APPLY_CMS                                    = 471, \/\/!< Enable applying of CMS profiles to xiGetImage (see XI_PRM_INPUT_CMS_PROFILE, XI_PRM_OUTPUT_CMS_PROFILE).$/;"	e	enum:cv::__anon80
CAP_PROP_XI_AUTO_BANDWIDTH_CALCULATION	opencv2/videoio.hpp	/^       CAP_PROP_XI_AUTO_BANDWIDTH_CALCULATION                   = 573, \/\/!< Automatic bandwidth calculation.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_AUTO_WB	opencv2/videoio.hpp	/^       CAP_PROP_XI_AUTO_WB                                      = 414, \/\/!< Automatic white balance.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_AVAILABLE_BANDWIDTH	opencv2/videoio.hpp	/^       CAP_PROP_XI_AVAILABLE_BANDWIDTH                          = 539, \/\/!< Calculate and returns available interface bandwidth(int Megabits).$/;"	e	enum:cv::__anon80
CAP_PROP_XI_BINNING_HORIZONTAL	opencv2/videoio.hpp	/^       CAP_PROP_XI_BINNING_HORIZONTAL                           = 429, \/\/!< Horizontal Binning - number of horizontal photo-sensitive cells to combine together.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_BINNING_PATTERN	opencv2/videoio.hpp	/^       CAP_PROP_XI_BINNING_PATTERN                              = 430, \/\/!< Binning pattern type.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_BINNING_SELECTOR	opencv2/videoio.hpp	/^       CAP_PROP_XI_BINNING_SELECTOR                             = 427, \/\/!< Binning engine selector.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_BINNING_VERTICAL	opencv2/videoio.hpp	/^       CAP_PROP_XI_BINNING_VERTICAL                             = 428, \/\/!< Vertical Binning - number of vertical photo-sensitive cells to combine together.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_BPC	opencv2/videoio.hpp	/^       CAP_PROP_XI_BPC                                          = 445, \/\/!< Correction of bad pixels.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_BUFFERS_QUEUE_SIZE	opencv2/videoio.hpp	/^       CAP_PROP_XI_BUFFERS_QUEUE_SIZE                           = 551, \/\/!< Queue of field\/frame buffers.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_BUFFER_POLICY	opencv2/videoio.hpp	/^       CAP_PROP_XI_BUFFER_POLICY                                = 540, \/\/!< Data move policy.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_CC_MATRIX_00	opencv2/videoio.hpp	/^       CAP_PROP_XI_CC_MATRIX_00                                 = 479, \/\/!< Color Correction Matrix element [0][0].$/;"	e	enum:cv::__anon80
CAP_PROP_XI_CC_MATRIX_01	opencv2/videoio.hpp	/^       CAP_PROP_XI_CC_MATRIX_01                                 = 480, \/\/!< Color Correction Matrix element [0][1].$/;"	e	enum:cv::__anon80
CAP_PROP_XI_CC_MATRIX_02	opencv2/videoio.hpp	/^       CAP_PROP_XI_CC_MATRIX_02                                 = 481, \/\/!< Color Correction Matrix element [0][2].$/;"	e	enum:cv::__anon80
CAP_PROP_XI_CC_MATRIX_03	opencv2/videoio.hpp	/^       CAP_PROP_XI_CC_MATRIX_03                                 = 482, \/\/!< Color Correction Matrix element [0][3].$/;"	e	enum:cv::__anon80
CAP_PROP_XI_CC_MATRIX_10	opencv2/videoio.hpp	/^       CAP_PROP_XI_CC_MATRIX_10                                 = 483, \/\/!< Color Correction Matrix element [1][0].$/;"	e	enum:cv::__anon80
CAP_PROP_XI_CC_MATRIX_11	opencv2/videoio.hpp	/^       CAP_PROP_XI_CC_MATRIX_11                                 = 484, \/\/!< Color Correction Matrix element [1][1].$/;"	e	enum:cv::__anon80
CAP_PROP_XI_CC_MATRIX_12	opencv2/videoio.hpp	/^       CAP_PROP_XI_CC_MATRIX_12                                 = 485, \/\/!< Color Correction Matrix element [1][2].$/;"	e	enum:cv::__anon80
CAP_PROP_XI_CC_MATRIX_13	opencv2/videoio.hpp	/^       CAP_PROP_XI_CC_MATRIX_13                                 = 486, \/\/!< Color Correction Matrix element [1][3].$/;"	e	enum:cv::__anon80
CAP_PROP_XI_CC_MATRIX_20	opencv2/videoio.hpp	/^       CAP_PROP_XI_CC_MATRIX_20                                 = 487, \/\/!< Color Correction Matrix element [2][0].$/;"	e	enum:cv::__anon80
CAP_PROP_XI_CC_MATRIX_21	opencv2/videoio.hpp	/^       CAP_PROP_XI_CC_MATRIX_21                                 = 488, \/\/!< Color Correction Matrix element [2][1].$/;"	e	enum:cv::__anon80
CAP_PROP_XI_CC_MATRIX_22	opencv2/videoio.hpp	/^       CAP_PROP_XI_CC_MATRIX_22                                 = 489, \/\/!< Color Correction Matrix element [2][2].$/;"	e	enum:cv::__anon80
CAP_PROP_XI_CC_MATRIX_23	opencv2/videoio.hpp	/^       CAP_PROP_XI_CC_MATRIX_23                                 = 490, \/\/!< Color Correction Matrix element [2][3].$/;"	e	enum:cv::__anon80
CAP_PROP_XI_CC_MATRIX_30	opencv2/videoio.hpp	/^       CAP_PROP_XI_CC_MATRIX_30                                 = 491, \/\/!< Color Correction Matrix element [3][0].$/;"	e	enum:cv::__anon80
CAP_PROP_XI_CC_MATRIX_31	opencv2/videoio.hpp	/^       CAP_PROP_XI_CC_MATRIX_31                                 = 492, \/\/!< Color Correction Matrix element [3][1].$/;"	e	enum:cv::__anon80
CAP_PROP_XI_CC_MATRIX_32	opencv2/videoio.hpp	/^       CAP_PROP_XI_CC_MATRIX_32                                 = 493, \/\/!< Color Correction Matrix element [3][2].$/;"	e	enum:cv::__anon80
CAP_PROP_XI_CC_MATRIX_33	opencv2/videoio.hpp	/^       CAP_PROP_XI_CC_MATRIX_33                                 = 494, \/\/!< Color Correction Matrix element [3][3].$/;"	e	enum:cv::__anon80
CAP_PROP_XI_CHIP_TEMP	opencv2/videoio.hpp	/^       CAP_PROP_XI_CHIP_TEMP                                    = 468, \/\/!< Camera sensor temperature.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_CMS	opencv2/videoio.hpp	/^       CAP_PROP_XI_CMS                                          = 470, \/\/!< Mode of color management system.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_COLOR_FILTER_ARRAY	opencv2/videoio.hpp	/^       CAP_PROP_XI_COLOR_FILTER_ARRAY                           = 475, \/\/!< Returns color filter array type of RAW data.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_COLUMN_FPN_CORRECTION	opencv2/videoio.hpp	/^       CAP_PROP_XI_COLUMN_FPN_CORRECTION                        = 555, \/\/!< Correction of column FPN.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_COOLING	opencv2/videoio.hpp	/^       CAP_PROP_XI_COOLING                                      = 466, \/\/!< Start camera cooling.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_COUNTER_SELECTOR	opencv2/videoio.hpp	/^       CAP_PROP_XI_COUNTER_SELECTOR                             = 536, \/\/!< Select counter.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_COUNTER_VALUE	opencv2/videoio.hpp	/^       CAP_PROP_XI_COUNTER_VALUE                                = 537, \/\/!< Counter status.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_DATA_FORMAT	opencv2/videoio.hpp	/^       CAP_PROP_XI_DATA_FORMAT                                  = 401, \/\/!< Output data format.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_DEBOUNCE_EN	opencv2/videoio.hpp	/^       CAP_PROP_XI_DEBOUNCE_EN                                  = 507, \/\/!< Enable\/Disable debounce to selected GPI.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_DEBOUNCE_POL	opencv2/videoio.hpp	/^       CAP_PROP_XI_DEBOUNCE_POL                                 = 510, \/\/!< Debounce polarity (pol = 1 t0 - falling edge, t1 - rising edge).$/;"	e	enum:cv::__anon80
CAP_PROP_XI_DEBOUNCE_T0	opencv2/videoio.hpp	/^       CAP_PROP_XI_DEBOUNCE_T0                                  = 508, \/\/!< Debounce time (x * 10us).$/;"	e	enum:cv::__anon80
CAP_PROP_XI_DEBOUNCE_T1	opencv2/videoio.hpp	/^       CAP_PROP_XI_DEBOUNCE_T1                                  = 509, \/\/!< Debounce time (x * 10us).$/;"	e	enum:cv::__anon80
CAP_PROP_XI_DEBUG_LEVEL	opencv2/videoio.hpp	/^       CAP_PROP_XI_DEBUG_LEVEL                                  = 572, \/\/!< Set debug level.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_DECIMATION_HORIZONTAL	opencv2/videoio.hpp	/^       CAP_PROP_XI_DECIMATION_HORIZONTAL                        = 433, \/\/!< Horizontal Decimation - horizontal sub-sampling of the image - reduces the horizontal resolution of the image by the specified vertical decimation factor.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_DECIMATION_PATTERN	opencv2/videoio.hpp	/^       CAP_PROP_XI_DECIMATION_PATTERN                           = 434, \/\/!< Decimation pattern type.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_DECIMATION_SELECTOR	opencv2/videoio.hpp	/^       CAP_PROP_XI_DECIMATION_SELECTOR                          = 431, \/\/!< Decimation engine selector.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_DECIMATION_VERTICAL	opencv2/videoio.hpp	/^       CAP_PROP_XI_DECIMATION_VERTICAL                          = 432, \/\/!< Vertical Decimation - vertical sub-sampling of the image - reduces the vertical resolution of the image by the specified vertical decimation factor.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_DEFAULT_CC_MATRIX	opencv2/videoio.hpp	/^       CAP_PROP_XI_DEFAULT_CC_MATRIX                            = 495, \/\/!< Set default Color Correction Matrix.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_DEVICE_MODEL_ID	opencv2/videoio.hpp	/^       CAP_PROP_XI_DEVICE_MODEL_ID                              = 521, \/\/!< Returns device model id.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_DEVICE_RESET	opencv2/videoio.hpp	/^       CAP_PROP_XI_DEVICE_RESET                                 = 554, \/\/!< Resets the camera to default state.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_DEVICE_SN	opencv2/videoio.hpp	/^       CAP_PROP_XI_DEVICE_SN                                    = 522, \/\/!< Returns device serial number.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_DOWNSAMPLING	opencv2/videoio.hpp	/^enum { CAP_PROP_XI_DOWNSAMPLING                                 = 400, \/\/!< Change image resolution by binning or skipping.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_DOWNSAMPLING_TYPE	opencv2/videoio.hpp	/^       CAP_PROP_XI_DOWNSAMPLING_TYPE                            = 426, \/\/!< Change image downsampling type.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_EXPOSURE	opencv2/videoio.hpp	/^       CAP_PROP_XI_EXPOSURE                                     = 421, \/\/!< Exposure time in microseconds.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_EXPOSURE_BURST_COUNT	opencv2/videoio.hpp	/^       CAP_PROP_XI_EXPOSURE_BURST_COUNT                         = 422, \/\/!< Sets the number of times of exposure in one frame.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_EXP_PRIORITY	opencv2/videoio.hpp	/^       CAP_PROP_XI_EXP_PRIORITY                                 = 416, \/\/!< Exposure priority (0.5 - exposure 50%, gain 50%).$/;"	e	enum:cv::__anon80
CAP_PROP_XI_FFS_ACCESS_KEY	opencv2/videoio.hpp	/^       CAP_PROP_XI_FFS_ACCESS_KEY                               = 583, \/\/!< Setting of key enables file operations on some cameras.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_FFS_FILE_ID	opencv2/videoio.hpp	/^       CAP_PROP_XI_FFS_FILE_ID                                  = 594, \/\/!< File number.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_FFS_FILE_SIZE	opencv2/videoio.hpp	/^       CAP_PROP_XI_FFS_FILE_SIZE                                = 580, \/\/!< Size of file.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_FRAMERATE	opencv2/videoio.hpp	/^       CAP_PROP_XI_FRAMERATE                                    = 535, \/\/!< Define framerate in Hz.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_FREE_FFS_SIZE	opencv2/videoio.hpp	/^       CAP_PROP_XI_FREE_FFS_SIZE                                = 581, \/\/!< Size of free camera FFS.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_GAIN	opencv2/videoio.hpp	/^       CAP_PROP_XI_GAIN                                         = 424, \/\/!< Gain in dB.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_GAIN_SELECTOR	opencv2/videoio.hpp	/^       CAP_PROP_XI_GAIN_SELECTOR                                = 423, \/\/!< Gain selector for parameter Gain allows to select different type of gains.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_GAMMAC	opencv2/videoio.hpp	/^       CAP_PROP_XI_GAMMAC                                       = 477, \/\/!< Chromaticity gamma.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_GAMMAY	opencv2/videoio.hpp	/^       CAP_PROP_XI_GAMMAY                                       = 476, \/\/!< Luminosity gamma.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_GPI_LEVEL	opencv2/videoio.hpp	/^       CAP_PROP_XI_GPI_LEVEL                                    = 408, \/\/!< Get general purpose level.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_GPI_MODE	opencv2/videoio.hpp	/^       CAP_PROP_XI_GPI_MODE                                     = 407, \/\/!< Set general purpose input mode.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_GPI_SELECTOR	opencv2/videoio.hpp	/^       CAP_PROP_XI_GPI_SELECTOR                                 = 406, \/\/!< Selects general purpose input.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_GPO_MODE	opencv2/videoio.hpp	/^       CAP_PROP_XI_GPO_MODE                                     = 410, \/\/!< Set general purpose output mode.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_GPO_SELECTOR	opencv2/videoio.hpp	/^       CAP_PROP_XI_GPO_SELECTOR                                 = 409, \/\/!< Selects general purpose output.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_HDR	opencv2/videoio.hpp	/^       CAP_PROP_XI_HDR                                          = 559, \/\/!< Enable High Dynamic Range feature.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_HDR_KNEEPOINT_COUNT	opencv2/videoio.hpp	/^       CAP_PROP_XI_HDR_KNEEPOINT_COUNT                          = 560, \/\/!< The number of kneepoints in the PWLR.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_HDR_T1	opencv2/videoio.hpp	/^       CAP_PROP_XI_HDR_T1                                       = 561, \/\/!< Position of first kneepoint(in % of XI_PRM_EXPOSURE).$/;"	e	enum:cv::__anon80
CAP_PROP_XI_HDR_T2	opencv2/videoio.hpp	/^       CAP_PROP_XI_HDR_T2                                       = 562, \/\/!< Position of second kneepoint (in % of XI_PRM_EXPOSURE).$/;"	e	enum:cv::__anon80
CAP_PROP_XI_HEIGHT	opencv2/videoio.hpp	/^       CAP_PROP_XI_HEIGHT                                       = 452, \/\/!< Height of the Image provided by the device (in pixels).$/;"	e	enum:cv::__anon80
CAP_PROP_XI_HOUS_BACK_SIDE_TEMP	opencv2/videoio.hpp	/^       CAP_PROP_XI_HOUS_BACK_SIDE_TEMP                          = 590, \/\/!< Camera housing back side temperature.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_HOUS_TEMP	opencv2/videoio.hpp	/^       CAP_PROP_XI_HOUS_TEMP                                    = 469, \/\/!< Camera housing temperature.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_HW_REVISION	opencv2/videoio.hpp	/^       CAP_PROP_XI_HW_REVISION                                  = 571, \/\/!< Returns hardware revision number.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_IMAGE_BLACK_LEVEL	opencv2/videoio.hpp	/^       CAP_PROP_XI_IMAGE_BLACK_LEVEL                            = 565, \/\/!< Last image black level counts. Can be used for Offline processing to recall it.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_IMAGE_DATA_BIT_DEPTH	opencv2/videoio.hpp	/^       CAP_PROP_XI_IMAGE_DATA_BIT_DEPTH                         = 462, \/\/!< bitdepth of data returned by function xiGetImage.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_IMAGE_DATA_FORMAT	opencv2/videoio.hpp	/^       CAP_PROP_XI_IMAGE_DATA_FORMAT                            = 435, \/\/!< Output data format.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_IMAGE_DATA_FORMAT_RGB32_ALPHA	opencv2/videoio.hpp	/^       CAP_PROP_XI_IMAGE_DATA_FORMAT_RGB32_ALPHA                = 529, \/\/!< The alpha channel of RGB32 output image format.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_IMAGE_IS_COLOR	opencv2/videoio.hpp	/^       CAP_PROP_XI_IMAGE_IS_COLOR                               = 474, \/\/!< Returns 1 for color cameras.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_IMAGE_PAYLOAD_SIZE	opencv2/videoio.hpp	/^       CAP_PROP_XI_IMAGE_PAYLOAD_SIZE                           = 530, \/\/!< Buffer size in bytes sufficient for output image returned by xiGetImage.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_IS_COOLED	opencv2/videoio.hpp	/^       CAP_PROP_XI_IS_COOLED                                    = 465, \/\/!< Returns 1 for cameras that support cooling.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_IS_DEVICE_EXIST	opencv2/videoio.hpp	/^       CAP_PROP_XI_IS_DEVICE_EXIST                              = 547, \/\/!< Returns 1 if camera connected and works properly.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_KNEEPOINT1	opencv2/videoio.hpp	/^       CAP_PROP_XI_KNEEPOINT1                                   = 563, \/\/!< Value of first kneepoint (% of sensor saturation).$/;"	e	enum:cv::__anon80
CAP_PROP_XI_KNEEPOINT2	opencv2/videoio.hpp	/^       CAP_PROP_XI_KNEEPOINT2                                   = 564, \/\/!< Value of second kneepoint (% of sensor saturation).$/;"	e	enum:cv::__anon80
CAP_PROP_XI_LED_MODE	opencv2/videoio.hpp	/^       CAP_PROP_XI_LED_MODE                                     = 412, \/\/!< Define camera signalling LED functionality.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_LED_SELECTOR	opencv2/videoio.hpp	/^       CAP_PROP_XI_LED_SELECTOR                                 = 411, \/\/!< Selects camera signalling LED.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_LENS_APERTURE_VALUE	opencv2/videoio.hpp	/^       CAP_PROP_XI_LENS_APERTURE_VALUE                          = 512, \/\/!< Current lens aperture value in stops. Examples: 2.8, 4, 5.6, 8, 11.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_LENS_FEATURE	opencv2/videoio.hpp	/^       CAP_PROP_XI_LENS_FEATURE                                 = 518, \/\/!< Allows access to lens feature value currently selected by XI_PRM_LENS_FEATURE_SELECTOR.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_LENS_FEATURE_SELECTOR	opencv2/videoio.hpp	/^       CAP_PROP_XI_LENS_FEATURE_SELECTOR                        = 517, \/\/!< Selects the current feature which is accessible by XI_PRM_LENS_FEATURE.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_LENS_FOCAL_LENGTH	opencv2/videoio.hpp	/^       CAP_PROP_XI_LENS_FOCAL_LENGTH                            = 516, \/\/!< Lens focal distance in mm.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_LENS_FOCUS_DISTANCE	opencv2/videoio.hpp	/^       CAP_PROP_XI_LENS_FOCUS_DISTANCE                          = 515, \/\/!< Lens focus distance in cm.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_LENS_FOCUS_MOVE	opencv2/videoio.hpp	/^       CAP_PROP_XI_LENS_FOCUS_MOVE                              = 514, \/\/!< Moves lens focus motor by steps set in XI_PRM_LENS_FOCUS_MOVEMENT_VALUE.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_LENS_FOCUS_MOVEMENT_VALUE	opencv2/videoio.hpp	/^       CAP_PROP_XI_LENS_FOCUS_MOVEMENT_VALUE                    = 513, \/\/!< Lens current focus movement value to be used by XI_PRM_LENS_FOCUS_MOVE in motor steps.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_LENS_MODE	opencv2/videoio.hpp	/^       CAP_PROP_XI_LENS_MODE                                    = 511, \/\/!< Status of lens control interface. This shall be set to XI_ON before any Lens operations.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_LIMIT_BANDWIDTH	opencv2/videoio.hpp	/^       CAP_PROP_XI_LIMIT_BANDWIDTH                              = 459, \/\/!< Set\/get bandwidth(datarate)(in Megabits).$/;"	e	enum:cv::__anon80
CAP_PROP_XI_LUT_EN	opencv2/videoio.hpp	/^       CAP_PROP_XI_LUT_EN                                       = 541, \/\/!< Activates LUT.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_LUT_INDEX	opencv2/videoio.hpp	/^       CAP_PROP_XI_LUT_INDEX                                    = 542, \/\/!< Control the index (offset) of the coefficient to access in the LUT.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_LUT_VALUE	opencv2/videoio.hpp	/^       CAP_PROP_XI_LUT_VALUE                                    = 543, \/\/!< Value at entry LUTIndex of the LUT.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_MANUAL_WB	opencv2/videoio.hpp	/^       CAP_PROP_XI_MANUAL_WB                                    = 413, \/\/!< Calculates White Balance(must be called during acquisition).$/;"	e	enum:cv::__anon80
CAP_PROP_XI_OFFSET_X	opencv2/videoio.hpp	/^       CAP_PROP_XI_OFFSET_X                                     = 402, \/\/!< Horizontal offset from the origin to the area of interest (in pixels).$/;"	e	enum:cv::__anon80
CAP_PROP_XI_OFFSET_Y	opencv2/videoio.hpp	/^       CAP_PROP_XI_OFFSET_Y                                     = 403, \/\/!< Vertical offset from the origin to the area of interest (in pixels).$/;"	e	enum:cv::__anon80
CAP_PROP_XI_OUTPUT_DATA_BIT_DEPTH	opencv2/videoio.hpp	/^       CAP_PROP_XI_OUTPUT_DATA_BIT_DEPTH                        = 461, \/\/!< Device output data bit depth.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_OUTPUT_DATA_PACKING	opencv2/videoio.hpp	/^       CAP_PROP_XI_OUTPUT_DATA_PACKING                          = 463, \/\/!< Device output data packing (or grouping) enabled. Packing could be enabled if output_data_bit_depth > 8 and packing capability is available.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_OUTPUT_DATA_PACKING_TYPE	opencv2/videoio.hpp	/^       CAP_PROP_XI_OUTPUT_DATA_PACKING_TYPE                     = 464, \/\/!< Data packing type. Some cameras supports only specific packing type.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_RECENT_FRAME	opencv2/videoio.hpp	/^       CAP_PROP_XI_RECENT_FRAME                                 = 553, \/\/!< GetImage returns most recent frame.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_REGION_MODE	opencv2/videoio.hpp	/^       CAP_PROP_XI_REGION_MODE                                  = 595, \/\/!< Activates\/deactivates Region selected by Region Selector.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_REGION_SELECTOR	opencv2/videoio.hpp	/^       CAP_PROP_XI_REGION_SELECTOR                              = 589, \/\/!< Selects Region in Multiple ROI which parameters are set by width, height, ... ,region mode.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_ROW_FPN_CORRECTION	opencv2/videoio.hpp	/^       CAP_PROP_XI_ROW_FPN_CORRECTION                           = 591, \/\/!< Correction of row FPN.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_SENSOR_BOARD_TEMP	opencv2/videoio.hpp	/^       CAP_PROP_XI_SENSOR_BOARD_TEMP                            = 596, \/\/!< Camera sensor board temperature.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_SENSOR_CLOCK_FREQ_HZ	opencv2/videoio.hpp	/^       CAP_PROP_XI_SENSOR_CLOCK_FREQ_HZ                         = 532, \/\/!< Sensor clock frequency in Hz.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_SENSOR_CLOCK_FREQ_INDEX	opencv2/videoio.hpp	/^       CAP_PROP_XI_SENSOR_CLOCK_FREQ_INDEX                      = 533, \/\/!< Sensor clock frequency index. Sensor with selected frequencies have possibility to set the frequency only by this index.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_SENSOR_DATA_BIT_DEPTH	opencv2/videoio.hpp	/^       CAP_PROP_XI_SENSOR_DATA_BIT_DEPTH                        = 460, \/\/!< Sensor output data bit depth.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_SENSOR_FEATURE_SELECTOR	opencv2/videoio.hpp	/^       CAP_PROP_XI_SENSOR_FEATURE_SELECTOR                      = 585, \/\/!< Selects the current feature which is accessible by XI_PRM_SENSOR_FEATURE_VALUE.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_SENSOR_FEATURE_VALUE	opencv2/videoio.hpp	/^       CAP_PROP_XI_SENSOR_FEATURE_VALUE                         = 586, \/\/!< Allows access to sensor feature value currently selected by XI_PRM_SENSOR_FEATURE_SELECTOR.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_SENSOR_MODE	opencv2/videoio.hpp	/^       CAP_PROP_XI_SENSOR_MODE                                  = 558, \/\/!< Current sensor mode. Allows to select sensor mode by one integer. Setting of this parameter affects: image dimensions and downsampling.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_SENSOR_OUTPUT_CHANNEL_COUNT	opencv2/videoio.hpp	/^       CAP_PROP_XI_SENSOR_OUTPUT_CHANNEL_COUNT                  = 534, \/\/!< Number of output channels from sensor used for data transfer.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_SENSOR_TAPS	opencv2/videoio.hpp	/^       CAP_PROP_XI_SENSOR_TAPS                                  = 437, \/\/!< Number of taps.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_SHARPNESS	opencv2/videoio.hpp	/^       CAP_PROP_XI_SHARPNESS                                    = 478, \/\/!< Sharpness Strength.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_SHUTTER_TYPE	opencv2/videoio.hpp	/^       CAP_PROP_XI_SHUTTER_TYPE                                 = 436, \/\/!< Change sensor shutter type(CMOS sensor).$/;"	e	enum:cv::__anon80
CAP_PROP_XI_TARGET_TEMP	opencv2/videoio.hpp	/^       CAP_PROP_XI_TARGET_TEMP                                  = 467, \/\/!< Set sensor target temperature for cooling.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_TEST_PATTERN	opencv2/videoio.hpp	/^       CAP_PROP_XI_TEST_PATTERN                                 = 588, \/\/!< Selects which test pattern type is generated by the selected generator.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_TEST_PATTERN_GENERATOR_SELECTOR	opencv2/videoio.hpp	/^       CAP_PROP_XI_TEST_PATTERN_GENERATOR_SELECTOR              = 587, \/\/!< Selects which test pattern generator is controlled by the TestPattern feature.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_TIMEOUT	opencv2/videoio.hpp	/^       CAP_PROP_XI_TIMEOUT                                      = 420, \/\/!< Image capture timeout in milliseconds.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_TRANSPORT_PIXEL_FORMAT	opencv2/videoio.hpp	/^       CAP_PROP_XI_TRANSPORT_PIXEL_FORMAT                       = 531, \/\/!< Current format of pixels on transport layer.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_TRG_DELAY	opencv2/videoio.hpp	/^       CAP_PROP_XI_TRG_DELAY                                    = 544, \/\/!< Specifies the delay in microseconds (us) to apply after the trigger reception before activating it.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_TRG_SELECTOR	opencv2/videoio.hpp	/^       CAP_PROP_XI_TRG_SELECTOR                                 = 498, \/\/!< Selects the type of trigger.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_TRG_SOFTWARE	opencv2/videoio.hpp	/^       CAP_PROP_XI_TRG_SOFTWARE                                 = 405, \/\/!< Generates an internal trigger. PRM_TRG_SOURCE must be set to TRG_SOFTWARE.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_TRG_SOURCE	opencv2/videoio.hpp	/^       CAP_PROP_XI_TRG_SOURCE                                   = 404, \/\/!< Defines source of trigger.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_TS_RST_MODE	opencv2/videoio.hpp	/^       CAP_PROP_XI_TS_RST_MODE                                  = 545, \/\/!< Defines how time stamp reset engine will be armed.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_TS_RST_SOURCE	opencv2/videoio.hpp	/^       CAP_PROP_XI_TS_RST_SOURCE                                = 546, \/\/!< Defines which source will be used for timestamp reset. Writing this parameter will trigger settings of engine (arming).$/;"	e	enum:cv::__anon80
CAP_PROP_XI_USED_FFS_SIZE	opencv2/videoio.hpp	/^       CAP_PROP_XI_USED_FFS_SIZE                                = 582, \/\/!< Size of used camera FFS.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_WB_KB	opencv2/videoio.hpp	/^       CAP_PROP_XI_WB_KB                                        = 450, \/\/!< White balance blue coefficient.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_WB_KG	opencv2/videoio.hpp	/^       CAP_PROP_XI_WB_KG                                        = 449, \/\/!< White balance green coefficient.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_WB_KR	opencv2/videoio.hpp	/^       CAP_PROP_XI_WB_KR                                        = 448, \/\/!< White balance red coefficient.$/;"	e	enum:cv::__anon80
CAP_PROP_XI_WIDTH	opencv2/videoio.hpp	/^       CAP_PROP_XI_WIDTH                                        = 451, \/\/!< Width of the Image provided by the device (in pixels).$/;"	e	enum:cv::__anon80
CAP_PROP_ZOOM	opencv2/videoio.hpp	/^       CAP_PROP_ZOOM          =27,$/;"	e	enum:cv::VideoCaptureProperties
CAP_PVAPI	opencv2/videoio.hpp	/^       CAP_PVAPI        = 800,          \/\/!< PvAPI, Prosilica GigE SDK$/;"	e	enum:cv::VideoCaptureAPIs
CAP_PVAPI_DECIMATION_2OUTOF16	opencv2/videoio.hpp	/^       CAP_PVAPI_DECIMATION_2OUTOF16  = 8     \/\/!< 2 out of 16 decimation$/;"	e	enum:cv::__anon78
CAP_PVAPI_DECIMATION_2OUTOF4	opencv2/videoio.hpp	/^       CAP_PVAPI_DECIMATION_2OUTOF4   = 2,    \/\/!< 2 out of 4 decimation$/;"	e	enum:cv::__anon78
CAP_PVAPI_DECIMATION_2OUTOF8	opencv2/videoio.hpp	/^       CAP_PVAPI_DECIMATION_2OUTOF8   = 4,    \/\/!< 2 out of 8 decimation$/;"	e	enum:cv::__anon78
CAP_PVAPI_DECIMATION_OFF	opencv2/videoio.hpp	/^enum { CAP_PVAPI_DECIMATION_OFF       = 1,    \/\/!< Off$/;"	e	enum:cv::__anon78
CAP_PVAPI_FSTRIGMODE_FIXEDRATE	opencv2/videoio.hpp	/^       CAP_PVAPI_FSTRIGMODE_FIXEDRATE   = 3,    \/\/!< FixedRate$/;"	e	enum:cv::__anon77
CAP_PVAPI_FSTRIGMODE_FREERUN	opencv2/videoio.hpp	/^enum { CAP_PVAPI_FSTRIGMODE_FREERUN     = 0,    \/\/!< Freerun$/;"	e	enum:cv::__anon77
CAP_PVAPI_FSTRIGMODE_SOFTWARE	opencv2/videoio.hpp	/^       CAP_PVAPI_FSTRIGMODE_SOFTWARE    = 4     \/\/!< Software$/;"	e	enum:cv::__anon77
CAP_PVAPI_FSTRIGMODE_SYNCIN1	opencv2/videoio.hpp	/^       CAP_PVAPI_FSTRIGMODE_SYNCIN1     = 1,    \/\/!< SyncIn1$/;"	e	enum:cv::__anon77
CAP_PVAPI_FSTRIGMODE_SYNCIN2	opencv2/videoio.hpp	/^       CAP_PVAPI_FSTRIGMODE_SYNCIN2     = 2,    \/\/!< SyncIn2$/;"	e	enum:cv::__anon77
CAP_PVAPI_PIXELFORMAT_BAYER16	opencv2/videoio.hpp	/^       CAP_PVAPI_PIXELFORMAT_BAYER16  = 4,    \/\/!< Bayer16$/;"	e	enum:cv::__anon79
CAP_PVAPI_PIXELFORMAT_BAYER8	opencv2/videoio.hpp	/^       CAP_PVAPI_PIXELFORMAT_BAYER8   = 3,    \/\/!< Bayer8$/;"	e	enum:cv::__anon79
CAP_PVAPI_PIXELFORMAT_BGR24	opencv2/videoio.hpp	/^       CAP_PVAPI_PIXELFORMAT_BGR24    = 6,    \/\/!< Bgr24$/;"	e	enum:cv::__anon79
CAP_PVAPI_PIXELFORMAT_BGRA32	opencv2/videoio.hpp	/^       CAP_PVAPI_PIXELFORMAT_BGRA32   = 8,    \/\/!< Bgra32$/;"	e	enum:cv::__anon79
CAP_PVAPI_PIXELFORMAT_MONO16	opencv2/videoio.hpp	/^       CAP_PVAPI_PIXELFORMAT_MONO16   = 2,    \/\/!< Mono16$/;"	e	enum:cv::__anon79
CAP_PVAPI_PIXELFORMAT_MONO8	opencv2/videoio.hpp	/^enum { CAP_PVAPI_PIXELFORMAT_MONO8    = 1,    \/\/!< Mono8$/;"	e	enum:cv::__anon79
CAP_PVAPI_PIXELFORMAT_RGB24	opencv2/videoio.hpp	/^       CAP_PVAPI_PIXELFORMAT_RGB24    = 5,    \/\/!< Rgb24$/;"	e	enum:cv::__anon79
CAP_PVAPI_PIXELFORMAT_RGBA32	opencv2/videoio.hpp	/^       CAP_PVAPI_PIXELFORMAT_RGBA32   = 7,    \/\/!< Rgba32$/;"	e	enum:cv::__anon79
CAP_QT	opencv2/videoio.hpp	/^       CAP_QT           = 500,          \/\/!< QuickTime$/;"	e	enum:cv::VideoCaptureAPIs
CAP_UNICAP	opencv2/videoio.hpp	/^       CAP_UNICAP       = 600,          \/\/!< Unicap drivers$/;"	e	enum:cv::VideoCaptureAPIs
CAP_V4L	opencv2/videoio.hpp	/^       CAP_V4L          = 200,          \/\/!< V4L\/V4L2 capturing support via libv4l$/;"	e	enum:cv::VideoCaptureAPIs
CAP_V4L2	opencv2/videoio.hpp	/^       CAP_V4L2         = CAP_V4L,      \/\/!< Same as CAP_V4L$/;"	e	enum:cv::VideoCaptureAPIs
CAP_VFW	opencv2/videoio.hpp	/^       CAP_VFW          = 200,          \/\/!< Video For Windows (platform native)$/;"	e	enum:cv::VideoCaptureAPIs
CAP_WINRT	opencv2/videoio.hpp	/^       CAP_WINRT        = 1410,         \/\/!< Microsoft Windows Runtime using Media Foundation$/;"	e	enum:cv::VideoCaptureAPIs
CAP_XIAPI	opencv2/videoio.hpp	/^       CAP_XIAPI        = 1100,         \/\/!< XIMEA Camera API$/;"	e	enum:cv::VideoCaptureAPIs
CASCADE_DO_CANNY_PRUNING	opencv2/objdetect.hpp	/^enum { CASCADE_DO_CANNY_PRUNING    = 1,$/;"	e	enum:cv::__anon386
CASCADE_DO_ROUGH_SEARCH	opencv2/objdetect.hpp	/^       CASCADE_DO_ROUGH_SEARCH     = 8$/;"	e	enum:cv::__anon386
CASCADE_FIND_BIGGEST_OBJECT	opencv2/objdetect.hpp	/^       CASCADE_FIND_BIGGEST_OBJECT = 4,$/;"	e	enum:cv::__anon386
CASCADE_SCALE_IMAGE	opencv2/objdetect.hpp	/^       CASCADE_SCALE_IMAGE         = 2,$/;"	e	enum:cv::__anon386
CCL_DEFAULT	opencv2/imgproc.hpp	/^    CCL_DEFAULT = -1, \/\/!< BBDT algortihm for 8-way connectivity, SAUF algorithm for 4-way connectivity$/;"	e	enum:cv::ConnectedComponentsAlgorithmsTypes
CCL_GRANA	opencv2/imgproc.hpp	/^    CCL_GRANA   = 1   \/\/!< BBDT algorithm for 8-way connectivity, SAUF algorithm for 4-way connectivity$/;"	e	enum:cv::ConnectedComponentsAlgorithmsTypes
CCL_WU	opencv2/imgproc.hpp	/^    CCL_WU      = 0,  \/\/!< SAUF algorithm for 8-way connectivity, SAUF algorithm for 4-way connectivity$/;"	e	enum:cv::ConnectedComponentsAlgorithmsTypes
CC_STAT_AREA	opencv2/imgproc.hpp	/^    CC_STAT_AREA   = 4, \/\/!< The total area (in pixels) of the connected component$/;"	e	enum:cv::ConnectedComponentsTypes
CC_STAT_HEIGHT	opencv2/imgproc.hpp	/^    CC_STAT_HEIGHT = 3, \/\/!< The vertical size of the bounding box$/;"	e	enum:cv::ConnectedComponentsTypes
CC_STAT_LEFT	opencv2/imgproc.hpp	/^    CC_STAT_LEFT   = 0, \/\/!< The leftmost (x) coordinate which is the inclusive start of the bounding$/;"	e	enum:cv::ConnectedComponentsTypes
CC_STAT_MAX	opencv2/imgproc.hpp	/^    CC_STAT_MAX    = 5$/;"	e	enum:cv::ConnectedComponentsTypes
CC_STAT_TOP	opencv2/imgproc.hpp	/^    CC_STAT_TOP    = 1, \/\/!< The topmost (y) coordinate which is the inclusive start of the bounding$/;"	e	enum:cv::ConnectedComponentsTypes
CC_STAT_WIDTH	opencv2/imgproc.hpp	/^    CC_STAT_WIDTH  = 2, \/\/!< The horizontal size of the bounding box$/;"	e	enum:cv::ConnectedComponentsTypes
CENTERS_GONZALES	opencv2/flann/defines.h	/^    CENTERS_GONZALES = 1,$/;"	e	enum:cvflann::flann_centers_init_t
CENTERS_KMEANSPP	opencv2/flann/defines.h	/^    CENTERS_KMEANSPP = 2$/;"	e	enum:cvflann::flann_centers_init_t
CENTERS_RANDOM	opencv2/flann/defines.h	/^    CENTERS_RANDOM = 0,$/;"	e	enum:cvflann::flann_centers_init_t
CHAIN_APPROX_NONE	opencv2/imgproc.hpp	/^    CHAIN_APPROX_NONE      = 1,$/;"	e	enum:cv::ContourApproximationModes
CHAIN_APPROX_SIMPLE	opencv2/imgproc.hpp	/^    CHAIN_APPROX_SIMPLE    = 2,$/;"	e	enum:cv::ContourApproximationModes
CHAIN_APPROX_TC89_KCOS	opencv2/imgproc.hpp	/^    CHAIN_APPROX_TC89_KCOS = 4$/;"	e	enum:cv::ContourApproximationModes
CHAIN_APPROX_TC89_L1	opencv2/imgproc.hpp	/^    CHAIN_APPROX_TC89_L1   = 3,$/;"	e	enum:cv::ContourApproximationModes
CHECK_ERR	opencv2/calib3d/calib3d_c.h	/^    enum { DONE=0, STARTED=1, CALC_J=2, CHECK_ERR=3 };$/;"	e	enum:CvLevMarq::__anon339
CHECK_ERROR	opencv2/flann/hdf5.h	73;"	d
CHI2	opencv2/ml.hpp	/^        CHI2=4,$/;"	e	enum:cv::ml::SVM::KernelTypes
CLAHE	opencv2/cudaimgproc.hpp	/^class CV_EXPORTS CLAHE : public cv::CLAHE$/;"	c	namespace:cv::cuda
CLAHE	opencv2/imgproc.hpp	/^class CV_EXPORTS_W CLAHE : public Algorithm$/;"	c	namespace:cv
CLAMP	opencv2/cudalegacy/NCV.hpp	1013;"	d
CLAMP_0_255	opencv2/cudalegacy/NCV.hpp	1016;"	d
CLAMP_BOTTOM	opencv2/cudalegacy/NCV.hpp	1015;"	d
CLAMP_TOP	opencv2/cudalegacy/NCV.hpp	1014;"	d
CMP_EQ	opencv2/core/base.hpp	/^enum CmpTypes { CMP_EQ = 0, \/\/!< src1 is equal to src2.$/;"	e	enum:cv::CmpTypes
CMP_GE	opencv2/core/base.hpp	/^                CMP_GE = 2, \/\/!< src1 is greater than or equal to src2.$/;"	e	enum:cv::CmpTypes
CMP_GT	opencv2/core/base.hpp	/^                CMP_GT = 1, \/\/!< src1 is greater than src2.$/;"	e	enum:cv::CmpTypes
CMP_LE	opencv2/core/base.hpp	/^                CMP_LE = 4, \/\/!< src1 is less than or equal to src2.$/;"	e	enum:cv::CmpTypes
CMP_LT	opencv2/core/base.hpp	/^                CMP_LT = 3, \/\/!< src1 is less than src2.$/;"	e	enum:cv::CmpTypes
CMP_NE	opencv2/core/base.hpp	/^                CMP_NE = 5  \/\/!< src1 is unequal to src2.$/;"	e	enum:cv::CmpTypes
COEF	opencv2/ml.hpp	/^        COEF=4,$/;"	e	enum:cv::ml::SVM::ParamTypes
COLOR	opencv2/stitching/detail/seam_finders.hpp	/^    enum CostFunction { COLOR, COLOR_GRAD };$/;"	e	enum:cv::detail::DpSeamFinder::CostFunction
COLORMAP_AUTUMN	opencv2/imgproc.hpp	/^    COLORMAP_AUTUMN = 0, \/\/!< ![autumn](pics\/colormaps\/colorscale_autumn.jpg)$/;"	e	enum:cv::ColormapTypes
COLORMAP_BONE	opencv2/imgproc.hpp	/^    COLORMAP_BONE = 1, \/\/!< ![bone](pics\/colormaps\/colorscale_bone.jpg)$/;"	e	enum:cv::ColormapTypes
COLORMAP_COOL	opencv2/imgproc.hpp	/^    COLORMAP_COOL = 8, \/\/!< ![cool](pics\/colormaps\/colorscale_cool.jpg)$/;"	e	enum:cv::ColormapTypes
COLORMAP_HOT	opencv2/imgproc.hpp	/^    COLORMAP_HOT = 11, \/\/!< ![hot](pics\/colormaps\/colorscale_hot.jpg)$/;"	e	enum:cv::ColormapTypes
COLORMAP_HSV	opencv2/imgproc.hpp	/^    COLORMAP_HSV = 9, \/\/!< ![HSV](pics\/colormaps\/colorscale_hsv.jpg)$/;"	e	enum:cv::ColormapTypes
COLORMAP_JET	opencv2/imgproc.hpp	/^    COLORMAP_JET = 2, \/\/!< ![jet](pics\/colormaps\/colorscale_jet.jpg)$/;"	e	enum:cv::ColormapTypes
COLORMAP_OCEAN	opencv2/imgproc.hpp	/^    COLORMAP_OCEAN = 5, \/\/!< ![ocean](pics\/colormaps\/colorscale_ocean.jpg)$/;"	e	enum:cv::ColormapTypes
COLORMAP_PARULA	opencv2/imgproc.hpp	/^    COLORMAP_PARULA = 12 \/\/!< ![parula](pics\/colormaps\/colorscale_parula.jpg)$/;"	e	enum:cv::ColormapTypes
COLORMAP_PINK	opencv2/imgproc.hpp	/^    COLORMAP_PINK = 10, \/\/!< ![pink](pics\/colormaps\/colorscale_pink.jpg)$/;"	e	enum:cv::ColormapTypes
COLORMAP_RAINBOW	opencv2/imgproc.hpp	/^    COLORMAP_RAINBOW = 4, \/\/!< ![rainbow](pics\/colormaps\/colorscale_rainbow.jpg)$/;"	e	enum:cv::ColormapTypes
COLORMAP_SPRING	opencv2/imgproc.hpp	/^    COLORMAP_SPRING = 7, \/\/!< ![spring](pics\/colormaps\/colorscale_spring.jpg)$/;"	e	enum:cv::ColormapTypes
COLORMAP_SUMMER	opencv2/imgproc.hpp	/^    COLORMAP_SUMMER = 6, \/\/!< ![summer](pics\/colormaps\/colorscale_summer.jpg)$/;"	e	enum:cv::ColormapTypes
COLORMAP_WINTER	opencv2/imgproc.hpp	/^    COLORMAP_WINTER = 3, \/\/!< ![winter](pics\/colormaps\/colorscale_winter.jpg)$/;"	e	enum:cv::ColormapTypes
COLOR_BGR2BGR555	opencv2/imgproc.hpp	/^    COLOR_BGR2BGR555   = 22,  \/\/!< convert between RGB\/BGR and BGR555 (16-bit images)$/;"	e	enum:cv::ColorConversionCodes
COLOR_BGR2BGR565	opencv2/imgproc.hpp	/^    COLOR_BGR2BGR565   = 12, \/\/!< convert between RGB\/BGR and BGR565 (16-bit images)$/;"	e	enum:cv::ColorConversionCodes
COLOR_BGR2BGRA	opencv2/imgproc.hpp	/^    COLOR_BGR2BGRA     = 0, \/\/!< add alpha channel to RGB or BGR image$/;"	e	enum:cv::ColorConversionCodes
COLOR_BGR2GRAY	opencv2/imgproc.hpp	/^    COLOR_BGR2GRAY     = 6, \/\/!< convert between RGB\/BGR and grayscale, @ref color_convert_rgb_gray "color conversions"$/;"	e	enum:cv::ColorConversionCodes
COLOR_BGR2HLS	opencv2/imgproc.hpp	/^    COLOR_BGR2HLS      = 52, \/\/!< convert RGB\/BGR to HLS (hue lightness saturation), @ref color_convert_rgb_hls "color conversions"$/;"	e	enum:cv::ColorConversionCodes
COLOR_BGR2HLS_FULL	opencv2/imgproc.hpp	/^    COLOR_BGR2HLS_FULL = 68,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BGR2HSV	opencv2/imgproc.hpp	/^    COLOR_BGR2HSV      = 40, \/\/!< convert RGB\/BGR to HSV (hue saturation value), @ref color_convert_rgb_hsv "color conversions"$/;"	e	enum:cv::ColorConversionCodes
COLOR_BGR2HSV_FULL	opencv2/imgproc.hpp	/^    COLOR_BGR2HSV_FULL = 66, \/\/!<$/;"	e	enum:cv::ColorConversionCodes
COLOR_BGR2Lab	opencv2/imgproc.hpp	/^    COLOR_BGR2Lab      = 44, \/\/!< convert RGB\/BGR to CIE Lab, @ref color_convert_rgb_lab "color conversions"$/;"	e	enum:cv::ColorConversionCodes
COLOR_BGR2Luv	opencv2/imgproc.hpp	/^    COLOR_BGR2Luv      = 50, \/\/!< convert RGB\/BGR to CIE Luv, @ref color_convert_rgb_luv "color conversions"$/;"	e	enum:cv::ColorConversionCodes
COLOR_BGR2RGB	opencv2/imgproc.hpp	/^    COLOR_BGR2RGB      = 4,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BGR2RGBA	opencv2/imgproc.hpp	/^    COLOR_BGR2RGBA     = 2, \/\/!< convert between RGB and BGR color spaces (with or without alpha channel)$/;"	e	enum:cv::ColorConversionCodes
COLOR_BGR2XYZ	opencv2/imgproc.hpp	/^    COLOR_BGR2XYZ      = 32, \/\/!< convert RGB\/BGR to CIE XYZ, @ref color_convert_rgb_xyz "color conversions"$/;"	e	enum:cv::ColorConversionCodes
COLOR_BGR2YCrCb	opencv2/imgproc.hpp	/^    COLOR_BGR2YCrCb    = 36, \/\/!< convert RGB\/BGR to luma-chroma (aka YCC), @ref color_convert_rgb_ycrcb "color conversions"$/;"	e	enum:cv::ColorConversionCodes
COLOR_BGR2YUV	opencv2/imgproc.hpp	/^    COLOR_BGR2YUV      = 82, \/\/!< convert between RGB\/BGR and YUV$/;"	e	enum:cv::ColorConversionCodes
COLOR_BGR2YUV_I420	opencv2/imgproc.hpp	/^    COLOR_BGR2YUV_I420  = 128,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BGR2YUV_IYUV	opencv2/imgproc.hpp	/^    COLOR_BGR2YUV_IYUV  = COLOR_BGR2YUV_I420,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BGR2YUV_YV12	opencv2/imgproc.hpp	/^    COLOR_BGR2YUV_YV12  = 132,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BGR5552BGR	opencv2/imgproc.hpp	/^    COLOR_BGR5552BGR   = 24,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BGR5552BGRA	opencv2/imgproc.hpp	/^    COLOR_BGR5552BGRA  = 28,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BGR5552GRAY	opencv2/imgproc.hpp	/^    COLOR_BGR5552GRAY  = 31,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BGR5552RGB	opencv2/imgproc.hpp	/^    COLOR_BGR5552RGB   = 25,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BGR5552RGBA	opencv2/imgproc.hpp	/^    COLOR_BGR5552RGBA  = 29,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BGR5652BGR	opencv2/imgproc.hpp	/^    COLOR_BGR5652BGR   = 14,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BGR5652BGRA	opencv2/imgproc.hpp	/^    COLOR_BGR5652BGRA  = 18,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BGR5652GRAY	opencv2/imgproc.hpp	/^    COLOR_BGR5652GRAY  = 21,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BGR5652RGB	opencv2/imgproc.hpp	/^    COLOR_BGR5652RGB   = 15,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BGR5652RGBA	opencv2/imgproc.hpp	/^    COLOR_BGR5652RGBA  = 19,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BGRA2BGR	opencv2/imgproc.hpp	/^    COLOR_BGRA2BGR     = 1, \/\/!< remove alpha channel from RGB or BGR image$/;"	e	enum:cv::ColorConversionCodes
COLOR_BGRA2BGR555	opencv2/imgproc.hpp	/^    COLOR_BGRA2BGR555  = 26,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BGRA2BGR565	opencv2/imgproc.hpp	/^    COLOR_BGRA2BGR565  = 16,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BGRA2GRAY	opencv2/imgproc.hpp	/^    COLOR_BGRA2GRAY    = 10,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BGRA2RGB	opencv2/imgproc.hpp	/^    COLOR_BGRA2RGB     = COLOR_RGBA2BGR,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BGRA2RGBA	opencv2/imgproc.hpp	/^    COLOR_BGRA2RGBA    = 5,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BGRA2YUV_I420	opencv2/imgproc.hpp	/^    COLOR_BGRA2YUV_I420 = 130,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BGRA2YUV_IYUV	opencv2/imgproc.hpp	/^    COLOR_BGRA2YUV_IYUV = COLOR_BGRA2YUV_I420,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BGRA2YUV_YV12	opencv2/imgproc.hpp	/^    COLOR_BGRA2YUV_YV12 = 134,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BayerBG2BGR	opencv2/imgproc.hpp	/^    COLOR_BayerBG2BGR = 46,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BayerBG2BGR_EA	opencv2/imgproc.hpp	/^    COLOR_BayerBG2BGR_EA  = 135,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BayerBG2BGR_MHT	opencv2/cudaimgproc.hpp	/^    COLOR_BayerBG2BGR_MHT = 256,$/;"	e	enum:cv::cuda::DemosaicTypes
COLOR_BayerBG2BGR_VNG	opencv2/imgproc.hpp	/^    COLOR_BayerBG2BGR_VNG = 62,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BayerBG2GRAY	opencv2/imgproc.hpp	/^    COLOR_BayerBG2GRAY = 86,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BayerBG2GRAY_MHT	opencv2/cudaimgproc.hpp	/^    COLOR_BayerBG2GRAY_MHT = 260,$/;"	e	enum:cv::cuda::DemosaicTypes
COLOR_BayerBG2RGB	opencv2/imgproc.hpp	/^    COLOR_BayerBG2RGB = COLOR_BayerRG2BGR,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BayerBG2RGB_EA	opencv2/imgproc.hpp	/^    COLOR_BayerBG2RGB_EA  = COLOR_BayerRG2BGR_EA,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BayerBG2RGB_MHT	opencv2/cudaimgproc.hpp	/^    COLOR_BayerBG2RGB_MHT = COLOR_BayerRG2BGR_MHT,$/;"	e	enum:cv::cuda::DemosaicTypes
COLOR_BayerBG2RGB_VNG	opencv2/imgproc.hpp	/^    COLOR_BayerBG2RGB_VNG = COLOR_BayerRG2BGR_VNG,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BayerGB2BGR	opencv2/imgproc.hpp	/^    COLOR_BayerGB2BGR = 47,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BayerGB2BGR_EA	opencv2/imgproc.hpp	/^    COLOR_BayerGB2BGR_EA  = 136,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BayerGB2BGR_MHT	opencv2/cudaimgproc.hpp	/^    COLOR_BayerGB2BGR_MHT = 257,$/;"	e	enum:cv::cuda::DemosaicTypes
COLOR_BayerGB2BGR_VNG	opencv2/imgproc.hpp	/^    COLOR_BayerGB2BGR_VNG = 63,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BayerGB2GRAY	opencv2/imgproc.hpp	/^    COLOR_BayerGB2GRAY = 87,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BayerGB2GRAY_MHT	opencv2/cudaimgproc.hpp	/^    COLOR_BayerGB2GRAY_MHT = 261,$/;"	e	enum:cv::cuda::DemosaicTypes
COLOR_BayerGB2RGB	opencv2/imgproc.hpp	/^    COLOR_BayerGB2RGB = COLOR_BayerGR2BGR,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BayerGB2RGB_EA	opencv2/imgproc.hpp	/^    COLOR_BayerGB2RGB_EA  = COLOR_BayerGR2BGR_EA,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BayerGB2RGB_MHT	opencv2/cudaimgproc.hpp	/^    COLOR_BayerGB2RGB_MHT = COLOR_BayerGR2BGR_MHT,$/;"	e	enum:cv::cuda::DemosaicTypes
COLOR_BayerGB2RGB_VNG	opencv2/imgproc.hpp	/^    COLOR_BayerGB2RGB_VNG = COLOR_BayerGR2BGR_VNG,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BayerGR2BGR	opencv2/imgproc.hpp	/^    COLOR_BayerGR2BGR = 49,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BayerGR2BGR_EA	opencv2/imgproc.hpp	/^    COLOR_BayerGR2BGR_EA  = 138,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BayerGR2BGR_MHT	opencv2/cudaimgproc.hpp	/^    COLOR_BayerGR2BGR_MHT = 259,$/;"	e	enum:cv::cuda::DemosaicTypes
COLOR_BayerGR2BGR_VNG	opencv2/imgproc.hpp	/^    COLOR_BayerGR2BGR_VNG = 65,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BayerGR2GRAY	opencv2/imgproc.hpp	/^    COLOR_BayerGR2GRAY = 89,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BayerGR2GRAY_MHT	opencv2/cudaimgproc.hpp	/^    COLOR_BayerGR2GRAY_MHT = 263$/;"	e	enum:cv::cuda::DemosaicTypes
COLOR_BayerGR2RGB	opencv2/imgproc.hpp	/^    COLOR_BayerGR2RGB = COLOR_BayerGB2BGR,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BayerGR2RGB_EA	opencv2/imgproc.hpp	/^    COLOR_BayerGR2RGB_EA  = COLOR_BayerGB2BGR_EA,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BayerGR2RGB_MHT	opencv2/cudaimgproc.hpp	/^    COLOR_BayerGR2RGB_MHT = COLOR_BayerGB2BGR_MHT,$/;"	e	enum:cv::cuda::DemosaicTypes
COLOR_BayerGR2RGB_VNG	opencv2/imgproc.hpp	/^    COLOR_BayerGR2RGB_VNG = COLOR_BayerGB2BGR_VNG,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BayerRG2BGR	opencv2/imgproc.hpp	/^    COLOR_BayerRG2BGR = 48,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BayerRG2BGR_EA	opencv2/imgproc.hpp	/^    COLOR_BayerRG2BGR_EA  = 137,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BayerRG2BGR_MHT	opencv2/cudaimgproc.hpp	/^    COLOR_BayerRG2BGR_MHT = 258,$/;"	e	enum:cv::cuda::DemosaicTypes
COLOR_BayerRG2BGR_VNG	opencv2/imgproc.hpp	/^    COLOR_BayerRG2BGR_VNG = 64,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BayerRG2GRAY	opencv2/imgproc.hpp	/^    COLOR_BayerRG2GRAY = 88,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BayerRG2GRAY_MHT	opencv2/cudaimgproc.hpp	/^    COLOR_BayerRG2GRAY_MHT = 262,$/;"	e	enum:cv::cuda::DemosaicTypes
COLOR_BayerRG2RGB	opencv2/imgproc.hpp	/^    COLOR_BayerRG2RGB = COLOR_BayerBG2BGR,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BayerRG2RGB_EA	opencv2/imgproc.hpp	/^    COLOR_BayerRG2RGB_EA  = COLOR_BayerBG2BGR_EA,$/;"	e	enum:cv::ColorConversionCodes
COLOR_BayerRG2RGB_MHT	opencv2/cudaimgproc.hpp	/^    COLOR_BayerRG2RGB_MHT = COLOR_BayerBG2BGR_MHT,$/;"	e	enum:cv::cuda::DemosaicTypes
COLOR_BayerRG2RGB_VNG	opencv2/imgproc.hpp	/^    COLOR_BayerRG2RGB_VNG = COLOR_BayerBG2BGR_VNG,$/;"	e	enum:cv::ColorConversionCodes
COLOR_COLORCVT_MAX	opencv2/imgproc.hpp	/^    COLOR_COLORCVT_MAX  = 139$/;"	e	enum:cv::ColorConversionCodes
COLOR_GRAD	opencv2/stitching/detail/seam_finders.hpp	/^    enum CostFunction { COLOR, COLOR_GRAD };$/;"	e	enum:cv::detail::DpSeamFinder::CostFunction
COLOR_GRAY2BGR	opencv2/imgproc.hpp	/^    COLOR_GRAY2BGR     = 8,$/;"	e	enum:cv::ColorConversionCodes
COLOR_GRAY2BGR555	opencv2/imgproc.hpp	/^    COLOR_GRAY2BGR555  = 30, \/\/!< convert between grayscale and BGR555 (16-bit images)$/;"	e	enum:cv::ColorConversionCodes
COLOR_GRAY2BGR565	opencv2/imgproc.hpp	/^    COLOR_GRAY2BGR565  = 20, \/\/!< convert between grayscale to BGR565 (16-bit images)$/;"	e	enum:cv::ColorConversionCodes
COLOR_GRAY2BGRA	opencv2/imgproc.hpp	/^    COLOR_GRAY2BGRA    = 9,$/;"	e	enum:cv::ColorConversionCodes
COLOR_GRAY2RGB	opencv2/imgproc.hpp	/^    COLOR_GRAY2RGB     = COLOR_GRAY2BGR,$/;"	e	enum:cv::ColorConversionCodes
COLOR_GRAY2RGBA	opencv2/imgproc.hpp	/^    COLOR_GRAY2RGBA    = COLOR_GRAY2BGRA,$/;"	e	enum:cv::ColorConversionCodes
COLOR_HLS2BGR	opencv2/imgproc.hpp	/^    COLOR_HLS2BGR      = 60,$/;"	e	enum:cv::ColorConversionCodes
COLOR_HLS2BGR_FULL	opencv2/imgproc.hpp	/^    COLOR_HLS2BGR_FULL = 72,$/;"	e	enum:cv::ColorConversionCodes
COLOR_HLS2RGB	opencv2/imgproc.hpp	/^    COLOR_HLS2RGB      = 61,$/;"	e	enum:cv::ColorConversionCodes
COLOR_HLS2RGB_FULL	opencv2/imgproc.hpp	/^    COLOR_HLS2RGB_FULL = 73,$/;"	e	enum:cv::ColorConversionCodes
COLOR_HSV2BGR	opencv2/imgproc.hpp	/^    COLOR_HSV2BGR      = 54, \/\/!< backward conversions to RGB\/BGR$/;"	e	enum:cv::ColorConversionCodes
COLOR_HSV2BGR_FULL	opencv2/imgproc.hpp	/^    COLOR_HSV2BGR_FULL = 70,$/;"	e	enum:cv::ColorConversionCodes
COLOR_HSV2RGB	opencv2/imgproc.hpp	/^    COLOR_HSV2RGB      = 55,$/;"	e	enum:cv::ColorConversionCodes
COLOR_HSV2RGB_FULL	opencv2/imgproc.hpp	/^    COLOR_HSV2RGB_FULL = 71,$/;"	e	enum:cv::ColorConversionCodes
COLOR_LBGR2Lab	opencv2/imgproc.hpp	/^    COLOR_LBGR2Lab     = 74,$/;"	e	enum:cv::ColorConversionCodes
COLOR_LBGR2Luv	opencv2/imgproc.hpp	/^    COLOR_LBGR2Luv     = 76,$/;"	e	enum:cv::ColorConversionCodes
COLOR_LRGB2Lab	opencv2/imgproc.hpp	/^    COLOR_LRGB2Lab     = 75,$/;"	e	enum:cv::ColorConversionCodes
COLOR_LRGB2Luv	opencv2/imgproc.hpp	/^    COLOR_LRGB2Luv     = 77,$/;"	e	enum:cv::ColorConversionCodes
COLOR_Lab2BGR	opencv2/imgproc.hpp	/^    COLOR_Lab2BGR      = 56,$/;"	e	enum:cv::ColorConversionCodes
COLOR_Lab2LBGR	opencv2/imgproc.hpp	/^    COLOR_Lab2LBGR     = 78,$/;"	e	enum:cv::ColorConversionCodes
COLOR_Lab2LRGB	opencv2/imgproc.hpp	/^    COLOR_Lab2LRGB     = 79,$/;"	e	enum:cv::ColorConversionCodes
COLOR_Lab2RGB	opencv2/imgproc.hpp	/^    COLOR_Lab2RGB      = 57,$/;"	e	enum:cv::ColorConversionCodes
COLOR_Luv2BGR	opencv2/imgproc.hpp	/^    COLOR_Luv2BGR      = 58,$/;"	e	enum:cv::ColorConversionCodes
COLOR_Luv2LBGR	opencv2/imgproc.hpp	/^    COLOR_Luv2LBGR     = 80,$/;"	e	enum:cv::ColorConversionCodes
COLOR_Luv2LRGB	opencv2/imgproc.hpp	/^    COLOR_Luv2LRGB     = 81,$/;"	e	enum:cv::ColorConversionCodes
COLOR_Luv2RGB	opencv2/imgproc.hpp	/^    COLOR_Luv2RGB      = 59,$/;"	e	enum:cv::ColorConversionCodes
COLOR_RGB2BGR	opencv2/imgproc.hpp	/^    COLOR_RGB2BGR      = COLOR_BGR2RGB,$/;"	e	enum:cv::ColorConversionCodes
COLOR_RGB2BGR555	opencv2/imgproc.hpp	/^    COLOR_RGB2BGR555   = 23,$/;"	e	enum:cv::ColorConversionCodes
COLOR_RGB2BGR565	opencv2/imgproc.hpp	/^    COLOR_RGB2BGR565   = 13,$/;"	e	enum:cv::ColorConversionCodes
COLOR_RGB2BGRA	opencv2/imgproc.hpp	/^    COLOR_RGB2BGRA     = COLOR_BGR2RGBA,$/;"	e	enum:cv::ColorConversionCodes
COLOR_RGB2GRAY	opencv2/imgproc.hpp	/^    COLOR_RGB2GRAY     = 7,$/;"	e	enum:cv::ColorConversionCodes
COLOR_RGB2HLS	opencv2/imgproc.hpp	/^    COLOR_RGB2HLS      = 53,$/;"	e	enum:cv::ColorConversionCodes
COLOR_RGB2HLS_FULL	opencv2/imgproc.hpp	/^    COLOR_RGB2HLS_FULL = 69,$/;"	e	enum:cv::ColorConversionCodes
COLOR_RGB2HSV	opencv2/imgproc.hpp	/^    COLOR_RGB2HSV      = 41,$/;"	e	enum:cv::ColorConversionCodes
COLOR_RGB2HSV_FULL	opencv2/imgproc.hpp	/^    COLOR_RGB2HSV_FULL = 67,$/;"	e	enum:cv::ColorConversionCodes
COLOR_RGB2Lab	opencv2/imgproc.hpp	/^    COLOR_RGB2Lab      = 45,$/;"	e	enum:cv::ColorConversionCodes
COLOR_RGB2Luv	opencv2/imgproc.hpp	/^    COLOR_RGB2Luv      = 51,$/;"	e	enum:cv::ColorConversionCodes
COLOR_RGB2RGBA	opencv2/imgproc.hpp	/^    COLOR_RGB2RGBA     = COLOR_BGR2BGRA,$/;"	e	enum:cv::ColorConversionCodes
COLOR_RGB2XYZ	opencv2/imgproc.hpp	/^    COLOR_RGB2XYZ      = 33,$/;"	e	enum:cv::ColorConversionCodes
COLOR_RGB2YCrCb	opencv2/imgproc.hpp	/^    COLOR_RGB2YCrCb    = 37,$/;"	e	enum:cv::ColorConversionCodes
COLOR_RGB2YUV	opencv2/imgproc.hpp	/^    COLOR_RGB2YUV      = 83,$/;"	e	enum:cv::ColorConversionCodes
COLOR_RGB2YUV_I420	opencv2/imgproc.hpp	/^    COLOR_RGB2YUV_I420  = 127,$/;"	e	enum:cv::ColorConversionCodes
COLOR_RGB2YUV_IYUV	opencv2/imgproc.hpp	/^    COLOR_RGB2YUV_IYUV  = COLOR_RGB2YUV_I420,$/;"	e	enum:cv::ColorConversionCodes
COLOR_RGB2YUV_YV12	opencv2/imgproc.hpp	/^    COLOR_RGB2YUV_YV12  = 131,$/;"	e	enum:cv::ColorConversionCodes
COLOR_RGBA2BGR	opencv2/imgproc.hpp	/^    COLOR_RGBA2BGR     = 3,$/;"	e	enum:cv::ColorConversionCodes
COLOR_RGBA2BGR555	opencv2/imgproc.hpp	/^    COLOR_RGBA2BGR555  = 27,$/;"	e	enum:cv::ColorConversionCodes
COLOR_RGBA2BGR565	opencv2/imgproc.hpp	/^    COLOR_RGBA2BGR565  = 17,$/;"	e	enum:cv::ColorConversionCodes
COLOR_RGBA2BGRA	opencv2/imgproc.hpp	/^    COLOR_RGBA2BGRA    = COLOR_BGRA2RGBA,$/;"	e	enum:cv::ColorConversionCodes
COLOR_RGBA2GRAY	opencv2/imgproc.hpp	/^    COLOR_RGBA2GRAY    = 11,$/;"	e	enum:cv::ColorConversionCodes
COLOR_RGBA2RGB	opencv2/imgproc.hpp	/^    COLOR_RGBA2RGB     = COLOR_BGRA2BGR,$/;"	e	enum:cv::ColorConversionCodes
COLOR_RGBA2YUV_I420	opencv2/imgproc.hpp	/^    COLOR_RGBA2YUV_I420 = 129,$/;"	e	enum:cv::ColorConversionCodes
COLOR_RGBA2YUV_IYUV	opencv2/imgproc.hpp	/^    COLOR_RGBA2YUV_IYUV = COLOR_RGBA2YUV_I420,$/;"	e	enum:cv::ColorConversionCodes
COLOR_RGBA2YUV_YV12	opencv2/imgproc.hpp	/^    COLOR_RGBA2YUV_YV12 = 133,$/;"	e	enum:cv::ColorConversionCodes
COLOR_RGBA2mRGBA	opencv2/imgproc.hpp	/^    COLOR_RGBA2mRGBA    = 125,$/;"	e	enum:cv::ColorConversionCodes
COLOR_XYZ2BGR	opencv2/imgproc.hpp	/^    COLOR_XYZ2BGR      = 34,$/;"	e	enum:cv::ColorConversionCodes
COLOR_XYZ2RGB	opencv2/imgproc.hpp	/^    COLOR_XYZ2RGB      = 35,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YCrCb2BGR	opencv2/imgproc.hpp	/^    COLOR_YCrCb2BGR    = 38,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YCrCb2RGB	opencv2/imgproc.hpp	/^    COLOR_YCrCb2RGB    = 39,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2BGR	opencv2/imgproc.hpp	/^    COLOR_YUV2BGR      = 84,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2BGRA_I420	opencv2/imgproc.hpp	/^    COLOR_YUV2BGRA_I420 = COLOR_YUV2BGRA_IYUV,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2BGRA_IYUV	opencv2/imgproc.hpp	/^    COLOR_YUV2BGRA_IYUV = 105,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2BGRA_NV12	opencv2/imgproc.hpp	/^    COLOR_YUV2BGRA_NV12 = 95,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2BGRA_NV21	opencv2/imgproc.hpp	/^    COLOR_YUV2BGRA_NV21 = 97,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2BGRA_UYNV	opencv2/imgproc.hpp	/^    COLOR_YUV2BGRA_UYNV = COLOR_YUV2BGRA_UYVY,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2BGRA_UYVY	opencv2/imgproc.hpp	/^    COLOR_YUV2BGRA_UYVY = 112,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2BGRA_Y422	opencv2/imgproc.hpp	/^    COLOR_YUV2BGRA_Y422 = COLOR_YUV2BGRA_UYVY,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2BGRA_YUNV	opencv2/imgproc.hpp	/^    COLOR_YUV2BGRA_YUNV = COLOR_YUV2BGRA_YUY2,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2BGRA_YUY2	opencv2/imgproc.hpp	/^    COLOR_YUV2BGRA_YUY2 = 120,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2BGRA_YUYV	opencv2/imgproc.hpp	/^    COLOR_YUV2BGRA_YUYV = COLOR_YUV2BGRA_YUY2,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2BGRA_YV12	opencv2/imgproc.hpp	/^    COLOR_YUV2BGRA_YV12 = 103,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2BGRA_YVYU	opencv2/imgproc.hpp	/^    COLOR_YUV2BGRA_YVYU = 122,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2BGR_I420	opencv2/imgproc.hpp	/^    COLOR_YUV2BGR_I420  = COLOR_YUV2BGR_IYUV,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2BGR_IYUV	opencv2/imgproc.hpp	/^    COLOR_YUV2BGR_IYUV  = 101,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2BGR_NV12	opencv2/imgproc.hpp	/^    COLOR_YUV2BGR_NV12  = 91,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2BGR_NV21	opencv2/imgproc.hpp	/^    COLOR_YUV2BGR_NV21  = 93,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2BGR_UYNV	opencv2/imgproc.hpp	/^    COLOR_YUV2BGR_UYNV = COLOR_YUV2BGR_UYVY,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2BGR_UYVY	opencv2/imgproc.hpp	/^    COLOR_YUV2BGR_UYVY = 108,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2BGR_Y422	opencv2/imgproc.hpp	/^    COLOR_YUV2BGR_Y422 = COLOR_YUV2BGR_UYVY,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2BGR_YUNV	opencv2/imgproc.hpp	/^    COLOR_YUV2BGR_YUNV = COLOR_YUV2BGR_YUY2,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2BGR_YUY2	opencv2/imgproc.hpp	/^    COLOR_YUV2BGR_YUY2 = 116,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2BGR_YUYV	opencv2/imgproc.hpp	/^    COLOR_YUV2BGR_YUYV = COLOR_YUV2BGR_YUY2,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2BGR_YV12	opencv2/imgproc.hpp	/^    COLOR_YUV2BGR_YV12  = 99,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2BGR_YVYU	opencv2/imgproc.hpp	/^    COLOR_YUV2BGR_YVYU = 118,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2GRAY_420	opencv2/imgproc.hpp	/^    COLOR_YUV2GRAY_420  = 106,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2GRAY_I420	opencv2/imgproc.hpp	/^    COLOR_YUV2GRAY_I420 = COLOR_YUV2GRAY_420,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2GRAY_IYUV	opencv2/imgproc.hpp	/^    COLOR_YUV2GRAY_IYUV = COLOR_YUV2GRAY_420,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2GRAY_NV12	opencv2/imgproc.hpp	/^    COLOR_YUV2GRAY_NV12 = COLOR_YUV2GRAY_420,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2GRAY_NV21	opencv2/imgproc.hpp	/^    COLOR_YUV2GRAY_NV21 = COLOR_YUV2GRAY_420,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2GRAY_UYNV	opencv2/imgproc.hpp	/^    COLOR_YUV2GRAY_UYNV = COLOR_YUV2GRAY_UYVY,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2GRAY_UYVY	opencv2/imgproc.hpp	/^    COLOR_YUV2GRAY_UYVY = 123,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2GRAY_Y422	opencv2/imgproc.hpp	/^    COLOR_YUV2GRAY_Y422 = COLOR_YUV2GRAY_UYVY,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2GRAY_YUNV	opencv2/imgproc.hpp	/^    COLOR_YUV2GRAY_YUNV = COLOR_YUV2GRAY_YUY2,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2GRAY_YUY2	opencv2/imgproc.hpp	/^    COLOR_YUV2GRAY_YUY2 = 124,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2GRAY_YUYV	opencv2/imgproc.hpp	/^    COLOR_YUV2GRAY_YUYV = COLOR_YUV2GRAY_YUY2,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2GRAY_YV12	opencv2/imgproc.hpp	/^    COLOR_YUV2GRAY_YV12 = COLOR_YUV2GRAY_420,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2GRAY_YVYU	opencv2/imgproc.hpp	/^    COLOR_YUV2GRAY_YVYU = COLOR_YUV2GRAY_YUY2,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2RGB	opencv2/imgproc.hpp	/^    COLOR_YUV2RGB      = 85,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2RGBA_I420	opencv2/imgproc.hpp	/^    COLOR_YUV2RGBA_I420 = COLOR_YUV2RGBA_IYUV,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2RGBA_IYUV	opencv2/imgproc.hpp	/^    COLOR_YUV2RGBA_IYUV = 104,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2RGBA_NV12	opencv2/imgproc.hpp	/^    COLOR_YUV2RGBA_NV12 = 94,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2RGBA_NV21	opencv2/imgproc.hpp	/^    COLOR_YUV2RGBA_NV21 = 96,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2RGBA_UYNV	opencv2/imgproc.hpp	/^    COLOR_YUV2RGBA_UYNV = COLOR_YUV2RGBA_UYVY,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2RGBA_UYVY	opencv2/imgproc.hpp	/^    COLOR_YUV2RGBA_UYVY = 111,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2RGBA_Y422	opencv2/imgproc.hpp	/^    COLOR_YUV2RGBA_Y422 = COLOR_YUV2RGBA_UYVY,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2RGBA_YUNV	opencv2/imgproc.hpp	/^    COLOR_YUV2RGBA_YUNV = COLOR_YUV2RGBA_YUY2,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2RGBA_YUY2	opencv2/imgproc.hpp	/^    COLOR_YUV2RGBA_YUY2 = 119,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2RGBA_YUYV	opencv2/imgproc.hpp	/^    COLOR_YUV2RGBA_YUYV = COLOR_YUV2RGBA_YUY2,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2RGBA_YV12	opencv2/imgproc.hpp	/^    COLOR_YUV2RGBA_YV12 = 102,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2RGBA_YVYU	opencv2/imgproc.hpp	/^    COLOR_YUV2RGBA_YVYU = 121,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2RGB_I420	opencv2/imgproc.hpp	/^    COLOR_YUV2RGB_I420  = COLOR_YUV2RGB_IYUV,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2RGB_IYUV	opencv2/imgproc.hpp	/^    COLOR_YUV2RGB_IYUV  = 100,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2RGB_NV12	opencv2/imgproc.hpp	/^    COLOR_YUV2RGB_NV12  = 90,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2RGB_NV21	opencv2/imgproc.hpp	/^    COLOR_YUV2RGB_NV21  = 92,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2RGB_UYNV	opencv2/imgproc.hpp	/^    COLOR_YUV2RGB_UYNV = COLOR_YUV2RGB_UYVY,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2RGB_UYVY	opencv2/imgproc.hpp	/^    COLOR_YUV2RGB_UYVY = 107,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2RGB_Y422	opencv2/imgproc.hpp	/^    COLOR_YUV2RGB_Y422 = COLOR_YUV2RGB_UYVY,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2RGB_YUNV	opencv2/imgproc.hpp	/^    COLOR_YUV2RGB_YUNV = COLOR_YUV2RGB_YUY2,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2RGB_YUY2	opencv2/imgproc.hpp	/^    COLOR_YUV2RGB_YUY2 = 115,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2RGB_YUYV	opencv2/imgproc.hpp	/^    COLOR_YUV2RGB_YUYV = COLOR_YUV2RGB_YUY2,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2RGB_YV12	opencv2/imgproc.hpp	/^    COLOR_YUV2RGB_YV12  = 98,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV2RGB_YVYU	opencv2/imgproc.hpp	/^    COLOR_YUV2RGB_YVYU = 117,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV420p2BGR	opencv2/imgproc.hpp	/^    COLOR_YUV420p2BGR   = COLOR_YUV2BGR_YV12,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV420p2BGRA	opencv2/imgproc.hpp	/^    COLOR_YUV420p2BGRA  = COLOR_YUV2BGRA_YV12,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV420p2GRAY	opencv2/imgproc.hpp	/^    COLOR_YUV420p2GRAY  = COLOR_YUV2GRAY_420,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV420p2RGB	opencv2/imgproc.hpp	/^    COLOR_YUV420p2RGB   = COLOR_YUV2RGB_YV12,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV420p2RGBA	opencv2/imgproc.hpp	/^    COLOR_YUV420p2RGBA  = COLOR_YUV2RGBA_YV12,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV420sp2BGR	opencv2/imgproc.hpp	/^    COLOR_YUV420sp2BGR  = COLOR_YUV2BGR_NV21,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV420sp2BGRA	opencv2/imgproc.hpp	/^    COLOR_YUV420sp2BGRA = COLOR_YUV2BGRA_NV21,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV420sp2GRAY	opencv2/imgproc.hpp	/^    COLOR_YUV420sp2GRAY = COLOR_YUV2GRAY_420,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV420sp2RGB	opencv2/imgproc.hpp	/^    COLOR_YUV420sp2RGB  = COLOR_YUV2RGB_NV21,$/;"	e	enum:cv::ColorConversionCodes
COLOR_YUV420sp2RGBA	opencv2/imgproc.hpp	/^    COLOR_YUV420sp2RGBA = COLOR_YUV2RGBA_NV21,$/;"	e	enum:cv::ColorConversionCodes
COLOR_mRGBA2RGBA	opencv2/imgproc.hpp	/^    COLOR_mRGBA2RGBA    = 126,$/;"	e	enum:cv::ColorConversionCodes
COL_SAMPLE	opencv2/ml.hpp	/^    COL_SAMPLE = 1  \/\/!< each training sample occupies a column of samples$/;"	e	enum:cv::ml::SampleTypes
COMPOSITE	opencv2/flann/defines.h	/^    COMPOSITE = 3,$/;"	e	enum:cvflann::flann_algorithm_t
COMPRESSED_INPUT	opencv2/ml.hpp	/^        COMPRESSED_INPUT=2,$/;"	e	enum:cv::ml::StatModel::Flags
CONSTANT	opencv2/core/ocl.hpp	/^    enum { LOCAL=1, READ_ONLY=2, WRITE_ONLY=4, READ_WRITE=6, CONSTANT=8, PTR_ONLY = 16, NO_SIZE=256 };$/;"	e	enum:cv::ocl::KernelArg::__anon323
CONSTANT_SIZE_BLOCKS	5/parallel/types.h	/^      CONSTANT_SIZE_BLOCKS, $/;"	e	enum:__gnu_parallel::_FindAlgorithm
CONTINUOUS_FLAG	opencv2/core/mat.hpp	/^    enum { MAGIC_VAL  = 0x42FF0000, AUTO_STEP = 0, CONTINUOUS_FLAG = CV_MAT_CONT_FLAG, SUBMATRIX_FLAG = CV_SUBMAT_FLAG };$/;"	e	enum:cv::Mat::__anon276
CONTINUOUS_FLAG	opencv2/core/mat.hpp	/^    enum { MAGIC_VAL  = 0x42FF0000, AUTO_STEP = 0, CONTINUOUS_FLAG = CV_MAT_CONT_FLAG, SUBMATRIX_FLAG = CV_SUBMAT_FLAG };$/;"	e	enum:cv::UMat::__anon278
COPY_ON_MAP	opencv2/core/mat.hpp	/^    enum { COPY_ON_MAP=1, HOST_COPY_OBSOLETE=2,$/;"	e	enum:cv::UMatData::__anon275
COST_COLOR	opencv2/stitching/detail/seam_finders.hpp	/^    enum CostType { COST_COLOR, COST_COLOR_GRAD };$/;"	e	enum:cv::detail::GraphCutSeamFinderBase::CostType
COST_COLOR_GRAD	opencv2/stitching/detail/seam_finders.hpp	/^    enum CostType { COST_COLOR, COST_COLOR_GRAD };$/;"	e	enum:cv::detail::GraphCutSeamFinderBase::CostType
COUNT	opencv2/core/types.hpp	/^        COUNT=1, \/\/!< the maximum number of iterations or elements to compute$/;"	e	enum:cv::TermCriteria::Type
COUNT	opencv2/cudev/util/type_traits.hpp	/^    enum { value = Log2<N, (CURRENT_VAL >> 1), COUNT + 1>::VALUE };$/;"	e	enum:cv::cudev::Log2::__anon481
COVAR_COLS	opencv2/core.hpp	/^    COVAR_COLS      = 16$/;"	e	enum:cv::CovarFlags
COVAR_NORMAL	opencv2/core.hpp	/^    COVAR_NORMAL    = 1,$/;"	e	enum:cv::CovarFlags
COVAR_ROWS	opencv2/core.hpp	/^    COVAR_ROWS      = 8,$/;"	e	enum:cv::CovarFlags
COVAR_SCALE	opencv2/core.hpp	/^    COVAR_SCALE     = 4,$/;"	e	enum:cv::CovarFlags
COVAR_SCRAMBLED	opencv2/core.hpp	/^    COVAR_SCRAMBLED = 0,$/;"	e	enum:cv::CovarFlags
COVAR_USE_AVG	opencv2/core.hpp	/^    COVAR_USE_AVG   = 2,$/;"	e	enum:cv::CovarFlags
COV_MAT_DEFAULT	opencv2/ml.hpp	/^        COV_MAT_DEFAULT=COV_MAT_DIAGONAL$/;"	e	enum:cv::ml::EM::Types
COV_MAT_DIAGONAL	opencv2/ml.hpp	/^        COV_MAT_DIAGONAL=1,$/;"	e	enum:cv::ml::EM::Types
COV_MAT_GENERIC	opencv2/ml.hpp	/^        COV_MAT_GENERIC=2,$/;"	e	enum:cv::ml::EM::Types
COV_MAT_SPHERICAL	opencv2/ml.hpp	/^        COV_MAT_SPHERICAL=0,$/;"	e	enum:cv::ml::EM::Types
CP	opencv2/video/tracking_c.h	/^    int CP;                     \/* number of control vector dimensions *\/$/;"	m	struct:CvKalman
CPU_AVX	opencv2/core/cvdef.h	/^    CPU_AVX             = 10,$/;"	e	enum:CpuFeatures
CPU_AVX2	opencv2/core/cvdef.h	/^    CPU_AVX2            = 11,$/;"	e	enum:CpuFeatures
CPU_AVX_512BW	opencv2/core/cvdef.h	/^    CPU_AVX_512BW       = 14,$/;"	e	enum:CpuFeatures
CPU_AVX_512CD	opencv2/core/cvdef.h	/^    CPU_AVX_512CD       = 15,$/;"	e	enum:CpuFeatures
CPU_AVX_512DQ	opencv2/core/cvdef.h	/^    CPU_AVX_512DQ       = 16,$/;"	e	enum:CpuFeatures
CPU_AVX_512ER	opencv2/core/cvdef.h	/^    CPU_AVX_512ER       = 17,$/;"	e	enum:CpuFeatures
CPU_AVX_512F	opencv2/core/cvdef.h	/^    CPU_AVX_512F        = 13,$/;"	e	enum:CpuFeatures
CPU_AVX_512IFMA512	opencv2/core/cvdef.h	/^    CPU_AVX_512IFMA512  = 18,$/;"	e	enum:CpuFeatures
CPU_AVX_512PF	opencv2/core/cvdef.h	/^    CPU_AVX_512PF       = 19,$/;"	e	enum:CpuFeatures
CPU_AVX_512VBMI	opencv2/core/cvdef.h	/^    CPU_AVX_512VBMI     = 20,$/;"	e	enum:CpuFeatures
CPU_AVX_512VL	opencv2/core/cvdef.h	/^    CPU_AVX_512VL       = 21,$/;"	e	enum:CpuFeatures
CPU_FMA3	opencv2/core/cvdef.h	/^    CPU_FMA3            = 12,$/;"	e	enum:CpuFeatures
CPU_FP16	opencv2/core/cvdef.h	/^    CPU_FP16            = 9,$/;"	e	enum:CpuFeatures
CPU_HAS_NEON_FEATURE	opencv2/core/cvdef.h	220;"	d
CPU_MMX	opencv2/core/cvdef.h	/^    CPU_MMX             = 1,$/;"	e	enum:CpuFeatures
CPU_NEON	opencv2/core/cvdef.h	/^    CPU_NEON            = 100$/;"	e	enum:CpuFeatures
CPU_POPCNT	opencv2/core/cvdef.h	/^    CPU_POPCNT          = 8,$/;"	e	enum:CpuFeatures
CPU_SSE	opencv2/core/cvdef.h	/^    CPU_SSE             = 2,$/;"	e	enum:CpuFeatures
CPU_SSE2	opencv2/core/cvdef.h	/^    CPU_SSE2            = 3,$/;"	e	enum:CpuFeatures
CPU_SSE3	opencv2/core/cvdef.h	/^    CPU_SSE3            = 4,$/;"	e	enum:CpuFeatures
CPU_SSE4_1	opencv2/core/cvdef.h	/^    CPU_SSE4_1          = 6,$/;"	e	enum:CpuFeatures
CPU_SSE4_2	opencv2/core/cvdef.h	/^    CPU_SSE4_2          = 7,$/;"	e	enum:CpuFeatures
CPU_SSSE3	opencv2/core/cvdef.h	/^    CPU_SSSE3           = 5,$/;"	e	enum:CpuFeatures
CROP	opencv2/stitching/detail/timelapsers.hpp	/^    enum {AS_IS, CROP};$/;"	e	enum:cv::detail::Timelapser::__anon94
CS	opencv2/flann/defines.h	/^    CS         = 7,$/;"	e	enum:cvflann::flann_distance_t
CT_ASSERT_FAILURE	opencv2/cudalegacy/NCV.hpp	/^    struct CT_ASSERT_FAILURE<true> {};$/;"	s	namespace:NcvCTprep
CUDART_MINIMUM_REQUIRED_VERSION	opencv2/core/private.cuda.hpp	67;"	d
CUDA_ARCH_BIN	opencv2/cvconfig.h	5;"	d
CUDA_ARCH_FEATURES	opencv2/cvconfig.h	11;"	d
CUDA_ARCH_PTX	opencv2/cvconfig.h	14;"	d
CUDA_GPU_MAT	opencv2/core/mat.hpp	/^        CUDA_GPU_MAT      = 9 << KIND_SHIFT,$/;"	e	enum:cv::_InputArray::__anon273
CUDA_HOST_MEM	opencv2/core/mat.hpp	/^        CUDA_HOST_MEM     = 8 << KIND_SHIFT,$/;"	e	enum:cv::_InputArray::__anon273
CUSTOM	opencv2/ml.hpp	/^        CUSTOM=-1,$/;"	e	enum:cv::ml::SVM::KernelTypes
CVAPI	opencv2/core/types_c.h	93;"	d
CVAUX_CONCAT	opencv2/core/base.hpp	275;"	d
CVAUX_CONCAT_EXP	opencv2/core/base.hpp	274;"	d
CVAUX_STR	opencv2/core/version.hpp	59;"	d
CVAUX_STRW	opencv2/core/version.hpp	62;"	d
CVAUX_STRW_EXP	opencv2/core/version.hpp	61;"	d
CVAUX_STR_EXP	opencv2/core/version.hpp	58;"	d
CVStatus	opencv2/core/types_c.h	/^typedef int CVStatus;$/;"	t
CV_16S	opencv2/core/hal/interface.h	70;"	d
CV_16SC	opencv2/core/hal/interface.h	104;"	d
CV_16SC1	opencv2/core/hal/interface.h	100;"	d
CV_16SC2	opencv2/core/hal/interface.h	101;"	d
CV_16SC3	opencv2/core/hal/interface.h	102;"	d
CV_16SC4	opencv2/core/hal/interface.h	103;"	d
CV_16U	opencv2/core/hal/interface.h	69;"	d
CV_16UC	opencv2/core/hal/interface.h	98;"	d
CV_16UC1	opencv2/core/hal/interface.h	94;"	d
CV_16UC2	opencv2/core/hal/interface.h	95;"	d
CV_16UC3	opencv2/core/hal/interface.h	96;"	d
CV_16UC4	opencv2/core/hal/interface.h	97;"	d
CV_2PI	opencv2/core/cvdef.h	303;"	d
CV_32F	opencv2/core/hal/interface.h	72;"	d
CV_32FC	opencv2/core/hal/interface.h	116;"	d
CV_32FC1	opencv2/core/hal/interface.h	112;"	d
CV_32FC2	opencv2/core/hal/interface.h	113;"	d
CV_32FC3	opencv2/core/hal/interface.h	114;"	d
CV_32FC4	opencv2/core/hal/interface.h	115;"	d
CV_32S	opencv2/core/hal/interface.h	71;"	d
CV_32SC	opencv2/core/hal/interface.h	110;"	d
CV_32SC1	opencv2/core/hal/interface.h	106;"	d
CV_32SC2	opencv2/core/hal/interface.h	107;"	d
CV_32SC3	opencv2/core/hal/interface.h	108;"	d
CV_32SC4	opencv2/core/hal/interface.h	109;"	d
CV_64F	opencv2/core/hal/interface.h	73;"	d
CV_64FC	opencv2/core/hal/interface.h	122;"	d
CV_64FC1	opencv2/core/hal/interface.h	118;"	d
CV_64FC2	opencv2/core/hal/interface.h	119;"	d
CV_64FC3	opencv2/core/hal/interface.h	120;"	d
CV_64FC4	opencv2/core/hal/interface.h	121;"	d
CV_8S	opencv2/core/hal/interface.h	68;"	d
CV_8SC	opencv2/core/hal/interface.h	92;"	d
CV_8SC1	opencv2/core/hal/interface.h	88;"	d
CV_8SC2	opencv2/core/hal/interface.h	89;"	d
CV_8SC3	opencv2/core/hal/interface.h	90;"	d
CV_8SC4	opencv2/core/hal/interface.h	91;"	d
CV_8U	opencv2/core/hal/interface.h	67;"	d
CV_8UC	opencv2/core/hal/interface.h	86;"	d
CV_8UC1	opencv2/core/hal/interface.h	82;"	d
CV_8UC2	opencv2/core/hal/interface.h	83;"	d
CV_8UC3	opencv2/core/hal/interface.h	84;"	d
CV_8UC4	opencv2/core/hal/interface.h	85;"	d
CV_AA	opencv2/imgproc/imgproc_c.h	988;"	d
CV_ADAPTIVE_THRESH_GAUSSIAN_C	opencv2/imgproc/types_c.h	/^    CV_ADAPTIVE_THRESH_GAUSSIAN_C  =1$/;"	e	enum:__anon372
CV_ADAPTIVE_THRESH_MEAN_C	opencv2/imgproc/types_c.h	/^    CV_ADAPTIVE_THRESH_MEAN_C  =0,$/;"	e	enum:__anon372
CV_ARE_CNS_EQ	opencv2/core/types_c.h	488;"	d
CV_ARE_DEPTHS_EQ	opencv2/core/types_c.h	491;"	d
CV_ARE_SIZES_EQ	opencv2/core/types_c.h	494;"	d
CV_ARE_TYPES_EQ	opencv2/core/types_c.h	485;"	d
CV_ASSERT	opencv2/core/core_c.h	2751;"	d
CV_AUTOSTEP	opencv2/core/core_c.h	220;"	d
CV_AUTO_STEP	opencv2/core/types_c.h	405;"	d
CV_AVX	opencv2/core/cvdef.h	200;"	d
CV_AVX	opencv2/core/cvdef.h	257;"	d
CV_AVX2	opencv2/core/cvdef.h	209;"	d
CV_AVX2	opencv2/core/cvdef.h	260;"	d
CV_AVX_512BW	opencv2/core/cvdef.h	269;"	d
CV_AVX_512CD	opencv2/core/cvdef.h	272;"	d
CV_AVX_512DQ	opencv2/core/cvdef.h	275;"	d
CV_AVX_512ER	opencv2/core/cvdef.h	278;"	d
CV_AVX_512F	opencv2/core/cvdef.h	266;"	d
CV_AVX_512IFMA512	opencv2/core/cvdef.h	281;"	d
CV_AVX_512PF	opencv2/core/cvdef.h	284;"	d
CV_AVX_512VBMI	opencv2/core/cvdef.h	287;"	d
CV_AVX_512VL	opencv2/core/cvdef.h	290;"	d
CV_Assert	opencv2/core/base.hpp	412;"	d
CV_BACK	opencv2/core/core_c.h	1608;"	d
CV_BADARG_ERR	opencv2/core/private.hpp	/^    CV_BADARG_ERR               = -49,  \/\/ipp comp$/;"	e	enum:CvStatus
CV_BADCHANNELS_ERR	opencv2/core/private.hpp	/^    CV_BADCHANNELS_ERR          = -47,  \/\/ipp comp$/;"	e	enum:CvStatus
CV_BADCOEF_ERR	opencv2/core/private.hpp	/^    CV_BADCOEF_ERR              =  -10,$/;"	e	enum:CvStatus
CV_BADCONVERGENCE_ERR	opencv2/core/private.hpp	/^    CV_BADCONVERGENCE_ERR       = -109,$/;"	e	enum:CvStatus
CV_BADDEPTH_ERR	opencv2/core/private.hpp	/^    CV_BADDEPTH_ERR             = -107,$/;"	e	enum:CvStatus
CV_BADFACTOR_ERR	opencv2/core/private.hpp	/^    CV_BADFACTOR_ERR            =  -7,$/;"	e	enum:CvStatus
CV_BADFLAG_ERR	opencv2/core/private.hpp	/^    CV_BADFLAG_ERR              =  -12,$/;"	e	enum:CvStatus
CV_BADHEADER_ERR	opencv2/core/private.hpp	/^    CV_BADHEADER_ERR            = -105,$/;"	e	enum:CvStatus
CV_BADMEMBLOCK_ERR	opencv2/core/private.hpp	/^    CV_BADMEMBLOCK_ERR          = -113,$/;"	e	enum:CvStatus
CV_BADPOINT_ERR	opencv2/core/private.hpp	/^    CV_BADPOINT_ERR             =  -6,$/;"	e	enum:CvStatus
CV_BADRANGE_ERR	opencv2/core/private.hpp	/^    CV_BADRANGE_ERR             = -44,  \/\/ipp comp$/;"	e	enum:CvStatus
CV_BADROI_ERR	opencv2/core/private.hpp	/^    CV_BADROI_ERR               = -106,$/;"	e	enum:CvStatus
CV_BADSCALE_ERR	opencv2/core/private.hpp	/^    CV_BADSCALE_ERR             =  -4,$/;"	e	enum:CvStatus
CV_BADSIZE_ERR	opencv2/core/private.hpp	/^    CV_BADSIZE_ERR              =  -1,$/;"	e	enum:CvStatus
CV_BADSTEP_ERR	opencv2/core/private.hpp	/^    CV_BADSTEP_ERR              = -29,  \/\/ipp comp$/;"	e	enum:CvStatus
CV_BGR2BGR555	opencv2/imgproc/types_c.h	/^    CV_BGR2BGR555  =22,$/;"	e	enum:__anon358
CV_BGR2BGR565	opencv2/imgproc/types_c.h	/^    CV_BGR2BGR565  =12,$/;"	e	enum:__anon358
CV_BGR2BGRA	opencv2/imgproc/types_c.h	/^    CV_BGR2BGRA    =0,$/;"	e	enum:__anon358
CV_BGR2GRAY	opencv2/imgproc/types_c.h	/^    CV_BGR2GRAY    =6,$/;"	e	enum:__anon358
CV_BGR2HLS	opencv2/imgproc/types_c.h	/^    CV_BGR2HLS     =52,$/;"	e	enum:__anon358
CV_BGR2HLS_FULL	opencv2/imgproc/types_c.h	/^    CV_BGR2HLS_FULL = 68,$/;"	e	enum:__anon358
CV_BGR2HSV	opencv2/imgproc/types_c.h	/^    CV_BGR2HSV     =40,$/;"	e	enum:__anon358
CV_BGR2HSV_FULL	opencv2/imgproc/types_c.h	/^    CV_BGR2HSV_FULL = 66,$/;"	e	enum:__anon358
CV_BGR2Lab	opencv2/imgproc/types_c.h	/^    CV_BGR2Lab     =44,$/;"	e	enum:__anon358
CV_BGR2Luv	opencv2/imgproc/types_c.h	/^    CV_BGR2Luv     =50,$/;"	e	enum:__anon358
CV_BGR2RGB	opencv2/imgproc/types_c.h	/^    CV_BGR2RGB     =4,$/;"	e	enum:__anon358
CV_BGR2RGBA	opencv2/imgproc/types_c.h	/^    CV_BGR2RGBA    =2,$/;"	e	enum:__anon358
CV_BGR2XYZ	opencv2/imgproc/types_c.h	/^    CV_BGR2XYZ     =32,$/;"	e	enum:__anon358
CV_BGR2YCrCb	opencv2/imgproc/types_c.h	/^    CV_BGR2YCrCb   =36,$/;"	e	enum:__anon358
CV_BGR2YUV	opencv2/imgproc/types_c.h	/^    CV_BGR2YUV      = 82,$/;"	e	enum:__anon358
CV_BGR2YUV_I420	opencv2/imgproc/types_c.h	/^    CV_BGR2YUV_I420 = 128,$/;"	e	enum:__anon358
CV_BGR2YUV_IYUV	opencv2/imgproc/types_c.h	/^    CV_BGR2YUV_IYUV = CV_BGR2YUV_I420,$/;"	e	enum:__anon358
CV_BGR2YUV_YV12	opencv2/imgproc/types_c.h	/^    CV_BGR2YUV_YV12  = 132,$/;"	e	enum:__anon358
CV_BGR5552BGR	opencv2/imgproc/types_c.h	/^    CV_BGR5552BGR  =24,$/;"	e	enum:__anon358
CV_BGR5552BGRA	opencv2/imgproc/types_c.h	/^    CV_BGR5552BGRA =28,$/;"	e	enum:__anon358
CV_BGR5552GRAY	opencv2/imgproc/types_c.h	/^    CV_BGR5552GRAY =31,$/;"	e	enum:__anon358
CV_BGR5552RGB	opencv2/imgproc/types_c.h	/^    CV_BGR5552RGB  =25,$/;"	e	enum:__anon358
CV_BGR5552RGBA	opencv2/imgproc/types_c.h	/^    CV_BGR5552RGBA =29,$/;"	e	enum:__anon358
CV_BGR5652BGR	opencv2/imgproc/types_c.h	/^    CV_BGR5652BGR  =14,$/;"	e	enum:__anon358
CV_BGR5652BGRA	opencv2/imgproc/types_c.h	/^    CV_BGR5652BGRA =18,$/;"	e	enum:__anon358
CV_BGR5652GRAY	opencv2/imgproc/types_c.h	/^    CV_BGR5652GRAY =21,$/;"	e	enum:__anon358
CV_BGR5652RGB	opencv2/imgproc/types_c.h	/^    CV_BGR5652RGB  =15,$/;"	e	enum:__anon358
CV_BGR5652RGBA	opencv2/imgproc/types_c.h	/^    CV_BGR5652RGBA =19,$/;"	e	enum:__anon358
CV_BGRA2BGR	opencv2/imgproc/types_c.h	/^    CV_BGRA2BGR    =1,$/;"	e	enum:__anon358
CV_BGRA2BGR555	opencv2/imgproc/types_c.h	/^    CV_BGRA2BGR555 =26,$/;"	e	enum:__anon358
CV_BGRA2BGR565	opencv2/imgproc/types_c.h	/^    CV_BGRA2BGR565 =16,$/;"	e	enum:__anon358
CV_BGRA2GRAY	opencv2/imgproc/types_c.h	/^    CV_BGRA2GRAY   =10,$/;"	e	enum:__anon358
CV_BGRA2RGB	opencv2/imgproc/types_c.h	/^    CV_BGRA2RGB    =CV_RGBA2BGR,$/;"	e	enum:__anon358
CV_BGRA2RGBA	opencv2/imgproc/types_c.h	/^    CV_BGRA2RGBA   =5,$/;"	e	enum:__anon358
CV_BGRA2YUV_I420	opencv2/imgproc/types_c.h	/^    CV_BGRA2YUV_I420 = 130,$/;"	e	enum:__anon358
CV_BGRA2YUV_IYUV	opencv2/imgproc/types_c.h	/^    CV_BGRA2YUV_IYUV = CV_BGRA2YUV_I420,$/;"	e	enum:__anon358
CV_BGRA2YUV_YV12	opencv2/imgproc/types_c.h	/^    CV_BGRA2YUV_YV12 = 134,$/;"	e	enum:__anon358
CV_BIG_INT	opencv2/core/hal/interface.h	54;"	d
CV_BIG_INT	opencv2/core/hal/interface.h	59;"	d
CV_BIG_UINT	opencv2/core/hal/interface.h	55;"	d
CV_BIG_UINT	opencv2/core/hal/interface.h	60;"	d
CV_BILATERAL	opencv2/imgproc/types_c.h	/^    CV_BILATERAL =4$/;"	e	enum:SmoothMethod_c
CV_BLUR	opencv2/imgproc/types_c.h	/^    CV_BLUR  =1,$/;"	e	enum:SmoothMethod_c
CV_BLUR_NO_SCALE	opencv2/imgproc/types_c.h	/^    CV_BLUR_NO_SCALE =0,$/;"	e	enum:SmoothMethod_c
CV_BadAlign	opencv2/core/types_c.h	/^ CV_BadAlign=                  -21,  \/**\/$/;"	e	enum:__anon324
CV_BadAlphaChannel	opencv2/core/types_c.h	/^ CV_BadAlphaChannel=           -18,  \/**\/$/;"	e	enum:__anon324
CV_BadCOI	opencv2/core/types_c.h	/^ CV_BadCOI=                    -24,  \/**\/$/;"	e	enum:__anon324
CV_BadCallBack	opencv2/core/types_c.h	/^ CV_BadCallBack=               -22,  \/**\/$/;"	e	enum:__anon324
CV_BadDataPtr	opencv2/core/types_c.h	/^ CV_BadDataPtr=                -12,  \/**\/$/;"	e	enum:__anon324
CV_BadDepth	opencv2/core/types_c.h	/^ CV_BadDepth=                  -17,  \/**\/$/;"	e	enum:__anon324
CV_BadImageSize	opencv2/core/types_c.h	/^ CV_BadImageSize=              -10,  \/**< image size is invalid           *\/$/;"	e	enum:__anon324
CV_BadModelOrChSeq	opencv2/core/types_c.h	/^ CV_BadModelOrChSeq=           -14,  \/**\/$/;"	e	enum:__anon324
CV_BadNumChannel1U	opencv2/core/types_c.h	/^ CV_BadNumChannel1U=           -16,  \/**\/$/;"	e	enum:__anon324
CV_BadNumChannels	opencv2/core/types_c.h	/^ CV_BadNumChannels=            -15,  \/**\/$/;"	e	enum:__anon324
CV_BadOffset	opencv2/core/types_c.h	/^ CV_BadOffset=                 -11,  \/**< offset is invalid               *\/$/;"	e	enum:__anon324
CV_BadOrder	opencv2/core/types_c.h	/^ CV_BadOrder=                  -19,  \/**\/$/;"	e	enum:__anon324
CV_BadOrigin	opencv2/core/types_c.h	/^ CV_BadOrigin=                 -20,  \/**\/$/;"	e	enum:__anon324
CV_BadROISize	opencv2/core/types_c.h	/^ CV_BadROISize=                -25,  \/**\/$/;"	e	enum:__anon324
CV_BadStep	opencv2/core/types_c.h	/^ CV_BadStep=                   -13,  \/**\/$/;"	e	enum:__anon324
CV_BadTileSize	opencv2/core/types_c.h	/^ CV_BadTileSize=               -23,  \/**\/$/;"	e	enum:__anon324
CV_BayerBG2BGR	opencv2/imgproc/types_c.h	/^    CV_BayerBG2BGR =46,$/;"	e	enum:__anon358
CV_BayerBG2BGR_EA	opencv2/imgproc/types_c.h	/^    CV_BayerBG2BGR_EA = 135,$/;"	e	enum:__anon358
CV_BayerBG2BGR_VNG	opencv2/imgproc/types_c.h	/^    CV_BayerBG2BGR_VNG =62,$/;"	e	enum:__anon358
CV_BayerBG2GRAY	opencv2/imgproc/types_c.h	/^    CV_BayerBG2GRAY = 86,$/;"	e	enum:__anon358
CV_BayerBG2RGB	opencv2/imgproc/types_c.h	/^    CV_BayerBG2RGB =CV_BayerRG2BGR,$/;"	e	enum:__anon358
CV_BayerBG2RGB_EA	opencv2/imgproc/types_c.h	/^    CV_BayerBG2RGB_EA = CV_BayerRG2BGR_EA,$/;"	e	enum:__anon358
CV_BayerBG2RGB_VNG	opencv2/imgproc/types_c.h	/^    CV_BayerBG2RGB_VNG =CV_BayerRG2BGR_VNG,$/;"	e	enum:__anon358
CV_BayerGB2BGR	opencv2/imgproc/types_c.h	/^    CV_BayerGB2BGR =47,$/;"	e	enum:__anon358
CV_BayerGB2BGR_EA	opencv2/imgproc/types_c.h	/^    CV_BayerGB2BGR_EA = 136,$/;"	e	enum:__anon358
CV_BayerGB2BGR_VNG	opencv2/imgproc/types_c.h	/^    CV_BayerGB2BGR_VNG =63,$/;"	e	enum:__anon358
CV_BayerGB2GRAY	opencv2/imgproc/types_c.h	/^    CV_BayerGB2GRAY = 87,$/;"	e	enum:__anon358
CV_BayerGB2RGB	opencv2/imgproc/types_c.h	/^    CV_BayerGB2RGB =CV_BayerGR2BGR,$/;"	e	enum:__anon358
CV_BayerGB2RGB_EA	opencv2/imgproc/types_c.h	/^    CV_BayerGB2RGB_EA = CV_BayerGR2BGR_EA,$/;"	e	enum:__anon358
CV_BayerGB2RGB_VNG	opencv2/imgproc/types_c.h	/^    CV_BayerGB2RGB_VNG =CV_BayerGR2BGR_VNG,$/;"	e	enum:__anon358
CV_BayerGR2BGR	opencv2/imgproc/types_c.h	/^    CV_BayerGR2BGR =49,$/;"	e	enum:__anon358
CV_BayerGR2BGR_EA	opencv2/imgproc/types_c.h	/^    CV_BayerGR2BGR_EA = 138,$/;"	e	enum:__anon358
CV_BayerGR2BGR_VNG	opencv2/imgproc/types_c.h	/^    CV_BayerGR2BGR_VNG =65,$/;"	e	enum:__anon358
CV_BayerGR2GRAY	opencv2/imgproc/types_c.h	/^    CV_BayerGR2GRAY = 89,$/;"	e	enum:__anon358
CV_BayerGR2RGB	opencv2/imgproc/types_c.h	/^    CV_BayerGR2RGB =CV_BayerGB2BGR,$/;"	e	enum:__anon358
CV_BayerGR2RGB_EA	opencv2/imgproc/types_c.h	/^    CV_BayerGR2RGB_EA = CV_BayerGB2BGR_EA,$/;"	e	enum:__anon358
CV_BayerGR2RGB_VNG	opencv2/imgproc/types_c.h	/^    CV_BayerGR2RGB_VNG =CV_BayerGB2BGR_VNG,$/;"	e	enum:__anon358
CV_BayerRG2BGR	opencv2/imgproc/types_c.h	/^    CV_BayerRG2BGR =48,$/;"	e	enum:__anon358
CV_BayerRG2BGR_EA	opencv2/imgproc/types_c.h	/^    CV_BayerRG2BGR_EA = 137,$/;"	e	enum:__anon358
CV_BayerRG2BGR_VNG	opencv2/imgproc/types_c.h	/^    CV_BayerRG2BGR_VNG =64,$/;"	e	enum:__anon358
CV_BayerRG2GRAY	opencv2/imgproc/types_c.h	/^    CV_BayerRG2GRAY = 88,$/;"	e	enum:__anon358
CV_BayerRG2RGB	opencv2/imgproc/types_c.h	/^    CV_BayerRG2RGB =CV_BayerBG2BGR,$/;"	e	enum:__anon358
CV_BayerRG2RGB_EA	opencv2/imgproc/types_c.h	/^    CV_BayerRG2RGB_EA = CV_BayerBG2BGR_EA,$/;"	e	enum:__anon358
CV_BayerRG2RGB_VNG	opencv2/imgproc/types_c.h	/^    CV_BayerRG2RGB_VNG =CV_BayerBG2BGR_VNG,$/;"	e	enum:__anon358
CV_C	opencv2/core/core_c.h	1456;"	d
CV_CALIB_CB_ADAPTIVE_THRESH	opencv2/calib3d/calib3d_c.h	208;"	d
CV_CALIB_CB_FAST_CHECK	opencv2/calib3d/calib3d_c.h	211;"	d
CV_CALIB_CB_FILTER_QUADS	opencv2/calib3d/calib3d_c.h	210;"	d
CV_CALIB_CB_NORMALIZE_IMAGE	opencv2/calib3d/calib3d_c.h	209;"	d
CV_CALIB_FIX_ASPECT_RATIO	opencv2/calib3d/calib3d_c.h	233;"	d
CV_CALIB_FIX_FOCAL_LENGTH	opencv2/calib3d/calib3d_c.h	236;"	d
CV_CALIB_FIX_INTRINSIC	opencv2/calib3d/calib3d_c.h	277;"	d
CV_CALIB_FIX_K1	opencv2/calib3d/calib3d_c.h	237;"	d
CV_CALIB_FIX_K2	opencv2/calib3d/calib3d_c.h	238;"	d
CV_CALIB_FIX_K3	opencv2/calib3d/calib3d_c.h	239;"	d
CV_CALIB_FIX_K4	opencv2/calib3d/calib3d_c.h	240;"	d
CV_CALIB_FIX_K5	opencv2/calib3d/calib3d_c.h	241;"	d
CV_CALIB_FIX_K6	opencv2/calib3d/calib3d_c.h	242;"	d
CV_CALIB_FIX_PRINCIPAL_POINT	opencv2/calib3d/calib3d_c.h	234;"	d
CV_CALIB_FIX_S1_S2_S3_S4	opencv2/calib3d/calib3d_c.h	245;"	d
CV_CALIB_FIX_TAUX_TAUY	opencv2/calib3d/calib3d_c.h	247;"	d
CV_CALIB_NINTRINSIC	opencv2/calib3d/calib3d_c.h	249;"	d
CV_CALIB_RATIONAL_MODEL	opencv2/calib3d/calib3d_c.h	243;"	d
CV_CALIB_SAME_FOCAL_LENGTH	opencv2/calib3d/calib3d_c.h	278;"	d
CV_CALIB_THIN_PRISM_MODEL	opencv2/calib3d/calib3d_c.h	244;"	d
CV_CALIB_TILTED_MODEL	opencv2/calib3d/calib3d_c.h	246;"	d
CV_CALIB_USE_INTRINSIC_GUESS	opencv2/calib3d/calib3d_c.h	232;"	d
CV_CALIB_ZERO_DISPARITY	opencv2/calib3d/calib3d_c.h	293;"	d
CV_CALIB_ZERO_TANGENT_DIST	opencv2/calib3d/calib3d_c.h	235;"	d
CV_CALL	opencv2/core/core_c.h	2743;"	d
CV_CANNY_L2_GRADIENT	opencv2/imgproc/types_c.h	/^    CV_CANNY_L2_GRADIENT  =(1 << 31)$/;"	e	enum:__anon374
CV_CAP_ANDROID	opencv2/videoio/videoio_c.h	/^    CV_CAP_ANDROID  =1000,  \/\/ Android - not used$/;"	e	enum:__anon106
CV_CAP_ANDROID_BACK	opencv2/videoio/videoio_c.h	/^    CV_CAP_ANDROID_BACK =CV_CAP_ANDROID+99, \/\/ Android back camera - not used$/;"	e	enum:__anon106
CV_CAP_ANDROID_FRONT	opencv2/videoio/videoio_c.h	/^    CV_CAP_ANDROID_FRONT =CV_CAP_ANDROID+98, \/\/ Android front camera - not used$/;"	e	enum:__anon106
CV_CAP_ANY	opencv2/videoio/videoio_c.h	/^    CV_CAP_ANY      =0,     \/\/ autodetect$/;"	e	enum:__anon106
CV_CAP_ARAVIS	opencv2/videoio/videoio_c.h	/^    CV_CAP_ARAVIS = 2100     \/\/ Aravis GigE SDK$/;"	e	enum:__anon106
CV_CAP_AVFOUNDATION	opencv2/videoio/videoio_c.h	/^    CV_CAP_AVFOUNDATION = 1200,  \/\/ AVFoundation framework for iOS (OS X Lion will have the same API)$/;"	e	enum:__anon106
CV_CAP_CMU1394	opencv2/videoio/videoio_c.h	/^    CV_CAP_CMU1394  =300,$/;"	e	enum:__anon106
CV_CAP_DC1394	opencv2/videoio/videoio_c.h	/^    CV_CAP_DC1394   =300,$/;"	e	enum:__anon106
CV_CAP_DSHOW	opencv2/videoio/videoio_c.h	/^    CV_CAP_DSHOW    =700,   \/\/ DirectShow (via videoInput)$/;"	e	enum:__anon106
CV_CAP_FFMPEG	opencv2/videoio/videoio_c.h	/^    CV_CAP_FFMPEG = 1900,    \/\/ FFMPEG$/;"	e	enum:__anon106
CV_CAP_FIREWARE	opencv2/videoio/videoio_c.h	/^    CV_CAP_FIREWARE =300,   \/\/ IEEE 1394 drivers$/;"	e	enum:__anon106
CV_CAP_FIREWIRE	opencv2/videoio/videoio_c.h	/^    CV_CAP_FIREWIRE =300,$/;"	e	enum:__anon106
CV_CAP_GIGANETIX	opencv2/videoio/videoio_c.h	/^    CV_CAP_GIGANETIX = 1300,  \/\/ Smartek Giganetix GigEVisionSDK$/;"	e	enum:__anon106
CV_CAP_GPHOTO2	opencv2/videoio/videoio_c.h	/^    CV_CAP_GPHOTO2 = 1700,$/;"	e	enum:__anon106
CV_CAP_GSTREAMER	opencv2/videoio/videoio_c.h	/^    CV_CAP_GSTREAMER = 1800, \/\/ GStreamer$/;"	e	enum:__anon106
CV_CAP_GSTREAMER_QUEUE_LENGTH	opencv2/videoio/videoio_c.h	/^    CV_CAP_GSTREAMER_QUEUE_LENGTH           = 200, \/\/ default is 1$/;"	e	enum:__anon107
CV_CAP_IEEE1394	opencv2/videoio/videoio_c.h	/^    CV_CAP_IEEE1394 =300,$/;"	e	enum:__anon106
CV_CAP_IMAGES	opencv2/videoio/videoio_c.h	/^    CV_CAP_IMAGES = 2000,    \/\/ OpenCV Image Sequence (e.g. img_%02d.jpg)$/;"	e	enum:__anon106
CV_CAP_INTELPERC	opencv2/videoio/videoio_c.h	/^    CV_CAP_INTELPERC = 1500, \/\/ Intel Perceptual Computing$/;"	e	enum:__anon106
CV_CAP_INTELPERC_DEPTH_GENERATOR	opencv2/videoio/videoio_c.h	/^    CV_CAP_INTELPERC_DEPTH_GENERATOR = 1 << 29,$/;"	e	enum:__anon107
CV_CAP_INTELPERC_DEPTH_MAP	opencv2/videoio/videoio_c.h	/^    CV_CAP_INTELPERC_DEPTH_MAP              = 0, \/\/ Each pixel is a 16-bit integer. The value indicates the distance from an object to the camera's XY plane or the Cartesian depth.$/;"	e	enum:__anon111
CV_CAP_INTELPERC_GENERATORS_MASK	opencv2/videoio/videoio_c.h	/^    CV_CAP_INTELPERC_GENERATORS_MASK = CV_CAP_INTELPERC_DEPTH_GENERATOR + CV_CAP_INTELPERC_IMAGE_GENERATOR$/;"	e	enum:__anon107
CV_CAP_INTELPERC_IMAGE	opencv2/videoio/videoio_c.h	/^    CV_CAP_INTELPERC_IMAGE                  = 3$/;"	e	enum:__anon111
CV_CAP_INTELPERC_IMAGE_GENERATOR	opencv2/videoio/videoio_c.h	/^    CV_CAP_INTELPERC_IMAGE_GENERATOR = 1 << 28,$/;"	e	enum:__anon107
CV_CAP_INTELPERC_IR_MAP	opencv2/videoio/videoio_c.h	/^    CV_CAP_INTELPERC_IR_MAP                 = 2, \/\/ Each pixel is a 16-bit integer. The value indicates the intensity of the reflected laser beam.$/;"	e	enum:__anon111
CV_CAP_INTELPERC_UVDEPTH_MAP	opencv2/videoio/videoio_c.h	/^    CV_CAP_INTELPERC_UVDEPTH_MAP            = 1, \/\/ Each pixel contains two 32-bit floating point values in the range of 0-1, representing the mapping of depth coordinates to the color coordinates.$/;"	e	enum:__anon111
CV_CAP_MIL	opencv2/videoio/videoio_c.h	/^    CV_CAP_MIL      =100,   \/\/ MIL proprietary drivers$/;"	e	enum:__anon106
CV_CAP_MODE_BGR	opencv2/videoio/videoio_c.h	/^    CV_CAP_MODE_BGR  = 0, \/\/ BGR24 (default)$/;"	e	enum:__anon108
CV_CAP_MODE_GRAY	opencv2/videoio/videoio_c.h	/^    CV_CAP_MODE_GRAY = 2, \/\/ Y8$/;"	e	enum:__anon108
CV_CAP_MODE_RGB	opencv2/videoio/videoio_c.h	/^    CV_CAP_MODE_RGB  = 1, \/\/ RGB24$/;"	e	enum:__anon108
CV_CAP_MODE_YUYV	opencv2/videoio/videoio_c.h	/^    CV_CAP_MODE_YUYV = 3  \/\/ YUYV$/;"	e	enum:__anon108
CV_CAP_MSMF	opencv2/videoio/videoio_c.h	/^    CV_CAP_MSMF     =1400,  \/\/ Microsoft Media Foundation (via videoInput)$/;"	e	enum:__anon106
CV_CAP_OPENNI	opencv2/videoio/videoio_c.h	/^    CV_CAP_OPENNI   =900,   \/\/ OpenNI (for Kinect)$/;"	e	enum:__anon106
CV_CAP_OPENNI2	opencv2/videoio/videoio_c.h	/^    CV_CAP_OPENNI2 = 1600,   \/\/ OpenNI2 (for Kinect)$/;"	e	enum:__anon106
CV_CAP_OPENNI_ASUS	opencv2/videoio/videoio_c.h	/^    CV_CAP_OPENNI_ASUS =910,   \/\/ OpenNI (for Asus Xtion)$/;"	e	enum:__anon106
CV_CAP_OPENNI_BGR_IMAGE	opencv2/videoio/videoio_c.h	/^    CV_CAP_OPENNI_BGR_IMAGE                 = 5,$/;"	e	enum:__anon109
CV_CAP_OPENNI_DEPTH_GENERATOR	opencv2/videoio/videoio_c.h	/^    CV_CAP_OPENNI_DEPTH_GENERATOR = 1 << 31,$/;"	e	enum:__anon107
CV_CAP_OPENNI_DEPTH_GENERATOR_BASELINE	opencv2/videoio/videoio_c.h	/^    CV_CAP_OPENNI_DEPTH_GENERATOR_BASELINE        = CV_CAP_OPENNI_DEPTH_GENERATOR + CV_CAP_PROP_OPENNI_BASELINE,$/;"	e	enum:__anon107
CV_CAP_OPENNI_DEPTH_GENERATOR_FOCAL_LENGTH	opencv2/videoio/videoio_c.h	/^    CV_CAP_OPENNI_DEPTH_GENERATOR_FOCAL_LENGTH    = CV_CAP_OPENNI_DEPTH_GENERATOR + CV_CAP_PROP_OPENNI_FOCAL_LENGTH,$/;"	e	enum:__anon107
CV_CAP_OPENNI_DEPTH_GENERATOR_PRESENT	opencv2/videoio/videoio_c.h	/^    CV_CAP_OPENNI_DEPTH_GENERATOR_PRESENT         = CV_CAP_OPENNI_DEPTH_GENERATOR + CV_CAP_PROP_OPENNI_GENERATOR_PRESENT,$/;"	e	enum:__anon107
CV_CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION	opencv2/videoio/videoio_c.h	/^    CV_CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION    = CV_CAP_OPENNI_DEPTH_GENERATOR + CV_CAP_PROP_OPENNI_REGISTRATION,$/;"	e	enum:__anon107
CV_CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION_ON	opencv2/videoio/videoio_c.h	/^    CV_CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION_ON = CV_CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION,$/;"	e	enum:__anon107
CV_CAP_OPENNI_DEPTH_MAP	opencv2/videoio/videoio_c.h	/^    CV_CAP_OPENNI_DEPTH_MAP                 = 0, \/\/ Depth values in mm (CV_16UC1)$/;"	e	enum:__anon109
CV_CAP_OPENNI_DISPARITY_MAP	opencv2/videoio/videoio_c.h	/^    CV_CAP_OPENNI_DISPARITY_MAP             = 2, \/\/ Disparity in pixels (CV_8UC1)$/;"	e	enum:__anon109
CV_CAP_OPENNI_DISPARITY_MAP_32F	opencv2/videoio/videoio_c.h	/^    CV_CAP_OPENNI_DISPARITY_MAP_32F         = 3, \/\/ Disparity in pixels (CV_32FC1)$/;"	e	enum:__anon109
CV_CAP_OPENNI_GENERATORS_MASK	opencv2/videoio/videoio_c.h	/^    CV_CAP_OPENNI_GENERATORS_MASK = CV_CAP_OPENNI_DEPTH_GENERATOR + CV_CAP_OPENNI_IMAGE_GENERATOR + CV_CAP_OPENNI_IR_GENERATOR,$/;"	e	enum:__anon107
CV_CAP_OPENNI_GRAY_IMAGE	opencv2/videoio/videoio_c.h	/^    CV_CAP_OPENNI_GRAY_IMAGE                = 6,$/;"	e	enum:__anon109
CV_CAP_OPENNI_IMAGE_GENERATOR	opencv2/videoio/videoio_c.h	/^    CV_CAP_OPENNI_IMAGE_GENERATOR = 1 << 30,$/;"	e	enum:__anon107
CV_CAP_OPENNI_IMAGE_GENERATOR_OUTPUT_MODE	opencv2/videoio/videoio_c.h	/^    CV_CAP_OPENNI_IMAGE_GENERATOR_OUTPUT_MODE     = CV_CAP_OPENNI_IMAGE_GENERATOR + CV_CAP_PROP_OPENNI_OUTPUT_MODE,$/;"	e	enum:__anon107
CV_CAP_OPENNI_IMAGE_GENERATOR_PRESENT	opencv2/videoio/videoio_c.h	/^    CV_CAP_OPENNI_IMAGE_GENERATOR_PRESENT         = CV_CAP_OPENNI_IMAGE_GENERATOR + CV_CAP_PROP_OPENNI_GENERATOR_PRESENT,$/;"	e	enum:__anon107
CV_CAP_OPENNI_IR_GENERATOR	opencv2/videoio/videoio_c.h	/^    CV_CAP_OPENNI_IR_GENERATOR    = 1 << 29,$/;"	e	enum:__anon107
CV_CAP_OPENNI_IR_GENERATOR_PRESENT	opencv2/videoio/videoio_c.h	/^    CV_CAP_OPENNI_IR_GENERATOR_PRESENT            = CV_CAP_OPENNI_IR_GENERATOR + CV_CAP_PROP_OPENNI_GENERATOR_PRESENT,$/;"	e	enum:__anon107
CV_CAP_OPENNI_IR_IMAGE	opencv2/videoio/videoio_c.h	/^    CV_CAP_OPENNI_IR_IMAGE                  = 7$/;"	e	enum:__anon109
CV_CAP_OPENNI_POINT_CLOUD_MAP	opencv2/videoio/videoio_c.h	/^    CV_CAP_OPENNI_POINT_CLOUD_MAP           = 1, \/\/ XYZ in meters (CV_32FC3)$/;"	e	enum:__anon109
CV_CAP_OPENNI_QVGA_30HZ	opencv2/videoio/videoio_c.h	/^    CV_CAP_OPENNI_QVGA_30HZ    = 3,$/;"	e	enum:__anon110
CV_CAP_OPENNI_QVGA_60HZ	opencv2/videoio/videoio_c.h	/^    CV_CAP_OPENNI_QVGA_60HZ    = 4$/;"	e	enum:__anon110
CV_CAP_OPENNI_SXGA_15HZ	opencv2/videoio/videoio_c.h	/^    CV_CAP_OPENNI_SXGA_15HZ    = 1,$/;"	e	enum:__anon110
CV_CAP_OPENNI_SXGA_30HZ	opencv2/videoio/videoio_c.h	/^    CV_CAP_OPENNI_SXGA_30HZ    = 2,$/;"	e	enum:__anon110
CV_CAP_OPENNI_VALID_DEPTH_MASK	opencv2/videoio/videoio_c.h	/^    CV_CAP_OPENNI_VALID_DEPTH_MASK          = 4, \/\/ CV_8UC1$/;"	e	enum:__anon109
CV_CAP_OPENNI_VGA_30HZ	opencv2/videoio/videoio_c.h	/^    CV_CAP_OPENNI_VGA_30HZ     = 0,$/;"	e	enum:__anon110
CV_CAP_PROP_ANDROID_ANTIBANDING	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_ANDROID_ANTIBANDING = 8004,$/;"	e	enum:__anon107
CV_CAP_PROP_ANDROID_EXPOSE_LOCK	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_ANDROID_EXPOSE_LOCK = 8009,$/;"	e	enum:__anon107
CV_CAP_PROP_ANDROID_FLASH_MODE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_ANDROID_FLASH_MODE = 8001,$/;"	e	enum:__anon107
CV_CAP_PROP_ANDROID_FOCAL_LENGTH	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_ANDROID_FOCAL_LENGTH = 8005,$/;"	e	enum:__anon107
CV_CAP_PROP_ANDROID_FOCUS_DISTANCE_FAR	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_ANDROID_FOCUS_DISTANCE_FAR = 8008,$/;"	e	enum:__anon107
CV_CAP_PROP_ANDROID_FOCUS_DISTANCE_NEAR	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_ANDROID_FOCUS_DISTANCE_NEAR = 8006,$/;"	e	enum:__anon107
CV_CAP_PROP_ANDROID_FOCUS_DISTANCE_OPTIMAL	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_ANDROID_FOCUS_DISTANCE_OPTIMAL = 8007,$/;"	e	enum:__anon107
CV_CAP_PROP_ANDROID_FOCUS_MODE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_ANDROID_FOCUS_MODE = 8002,$/;"	e	enum:__anon107
CV_CAP_PROP_ANDROID_WHITEBALANCE_LOCK	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_ANDROID_WHITEBALANCE_LOCK = 8010,$/;"	e	enum:__anon107
CV_CAP_PROP_ANDROID_WHITE_BALANCE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_ANDROID_WHITE_BALANCE = 8003,$/;"	e	enum:__anon107
CV_CAP_PROP_APERTURE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_APERTURE                  = 17008, \/\/ Aperture. Can be readonly, depends on camera program.$/;"	e	enum:__anon112
CV_CAP_PROP_AUTOFOCUS	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_AUTOFOCUS     =39,$/;"	e	enum:__anon107
CV_CAP_PROP_AUTOGRAB	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_AUTOGRAB      =1024, \/\/ property for videoio class CvCapture_Android only$/;"	e	enum:__anon107
CV_CAP_PROP_AUTO_EXPOSURE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_AUTO_EXPOSURE =21, \/\/ exposure control done by camera,$/;"	e	enum:__anon107
CV_CAP_PROP_BACKLIGHT	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_BACKLIGHT     =32,$/;"	e	enum:__anon107
CV_CAP_PROP_BRIGHTNESS	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_BRIGHTNESS    =10,$/;"	e	enum:__anon107
CV_CAP_PROP_BUFFERSIZE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_BUFFERSIZE    =38,$/;"	e	enum:__anon107
CV_CAP_PROP_CONTRAST	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_CONTRAST      =11,$/;"	e	enum:__anon107
CV_CAP_PROP_CONVERT_RGB	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_CONVERT_RGB   =16,$/;"	e	enum:__anon107
CV_CAP_PROP_DC1394_MODE_AUTO	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_DC1394_MODE_AUTO = -2,$/;"	e	enum:__anon107
CV_CAP_PROP_DC1394_MODE_MANUAL	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_DC1394_MODE_MANUAL = -3, \/\/set automatically when a value of the feature is set by the user$/;"	e	enum:__anon107
CV_CAP_PROP_DC1394_MODE_ONE_PUSH_AUTO	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_DC1394_MODE_ONE_PUSH_AUTO = -1,$/;"	e	enum:__anon107
CV_CAP_PROP_DC1394_OFF	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_DC1394_OFF         = -4,  \/\/turn the feature off (not controlled manually nor automatically)$/;"	e	enum:__anon107
CV_CAP_PROP_EXPOSURE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_EXPOSURE      =15,$/;"	e	enum:__anon107
CV_CAP_PROP_EXPOSUREPROGRAM	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_EXPOSUREPROGRAM           = 17009, \/\/ Camera exposure program.$/;"	e	enum:__anon112
CV_CAP_PROP_FOCUS	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_FOCUS         =28,$/;"	e	enum:__anon107
CV_CAP_PROP_FORMAT	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_FORMAT         =8,$/;"	e	enum:__anon107
CV_CAP_PROP_FOURCC	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_FOURCC         =6,$/;"	e	enum:__anon107
CV_CAP_PROP_FPS	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_FPS            =5,$/;"	e	enum:__anon107
CV_CAP_PROP_FRAME_COUNT	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_FRAME_COUNT    =7,$/;"	e	enum:__anon107
CV_CAP_PROP_FRAME_HEIGHT	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_FRAME_HEIGHT   =4,$/;"	e	enum:__anon107
CV_CAP_PROP_FRAME_WIDTH	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_FRAME_WIDTH    =3,$/;"	e	enum:__anon107
CV_CAP_PROP_GAIN	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_GAIN          =14,$/;"	e	enum:__anon107
CV_CAP_PROP_GAMMA	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_GAMMA         =22,$/;"	e	enum:__anon107
CV_CAP_PROP_GIGA_FRAME_HEIGH_MAX	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_GIGA_FRAME_HEIGH_MAX = 10004,$/;"	e	enum:__anon107
CV_CAP_PROP_GIGA_FRAME_OFFSET_X	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_GIGA_FRAME_OFFSET_X = 10001,$/;"	e	enum:__anon107
CV_CAP_PROP_GIGA_FRAME_OFFSET_Y	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_GIGA_FRAME_OFFSET_Y = 10002,$/;"	e	enum:__anon107
CV_CAP_PROP_GIGA_FRAME_SENS_HEIGH	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_GIGA_FRAME_SENS_HEIGH = 10006,$/;"	e	enum:__anon107
CV_CAP_PROP_GIGA_FRAME_SENS_WIDTH	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_GIGA_FRAME_SENS_WIDTH = 10005,$/;"	e	enum:__anon107
CV_CAP_PROP_GIGA_FRAME_WIDTH_MAX	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_GIGA_FRAME_WIDTH_MAX = 10003,$/;"	e	enum:__anon107
CV_CAP_PROP_GPHOTO2_COLLECT_MSGS	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_GPHOTO2_COLLECT_MSGS      = 17005, \/\/ Collect messages with details.$/;"	e	enum:__anon112
CV_CAP_PROP_GPHOTO2_FLUSH_MSGS	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_GPHOTO2_FLUSH_MSGS        = 17006, \/\/ Readonly, returns (const char *).$/;"	e	enum:__anon112
CV_CAP_PROP_GPHOTO2_PREVIEW	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_GPHOTO2_PREVIEW           = 17001, \/\/ Capture only preview from liveview mode.$/;"	e	enum:__anon112
CV_CAP_PROP_GPHOTO2_RELOAD_CONFIG	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_GPHOTO2_RELOAD_CONFIG     = 17003, \/\/ Trigger, only by set. Reload camera settings.$/;"	e	enum:__anon112
CV_CAP_PROP_GPHOTO2_RELOAD_ON_CHANGE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_GPHOTO2_RELOAD_ON_CHANGE  = 17004, \/\/ Reload all settings on set.$/;"	e	enum:__anon112
CV_CAP_PROP_GPHOTO2_WIDGET_ENUMERATE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_GPHOTO2_WIDGET_ENUMERATE  = 17002, \/\/ Readonly, returns (const char *).$/;"	e	enum:__anon112
CV_CAP_PROP_GUID	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_GUID          =29,$/;"	e	enum:__anon107
CV_CAP_PROP_HUE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_HUE           =13,$/;"	e	enum:__anon107
CV_CAP_PROP_INTELPERC_DEPTH_CONFIDENCE_THRESHOLD	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_INTELPERC_DEPTH_CONFIDENCE_THRESHOLD  = 11005,$/;"	e	enum:__anon107
CV_CAP_PROP_INTELPERC_DEPTH_FOCAL_LENGTH_HORZ	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_INTELPERC_DEPTH_FOCAL_LENGTH_HORZ     = 11006,$/;"	e	enum:__anon107
CV_CAP_PROP_INTELPERC_DEPTH_FOCAL_LENGTH_VERT	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_INTELPERC_DEPTH_FOCAL_LENGTH_VERT     = 11007,$/;"	e	enum:__anon107
CV_CAP_PROP_INTELPERC_DEPTH_LOW_CONFIDENCE_VALUE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_INTELPERC_DEPTH_LOW_CONFIDENCE_VALUE  = 11003,$/;"	e	enum:__anon107
CV_CAP_PROP_INTELPERC_DEPTH_SATURATION_VALUE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_INTELPERC_DEPTH_SATURATION_VALUE      = 11004,$/;"	e	enum:__anon107
CV_CAP_PROP_INTELPERC_PROFILE_COUNT	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_INTELPERC_PROFILE_COUNT               = 11001,$/;"	e	enum:__anon107
CV_CAP_PROP_INTELPERC_PROFILE_IDX	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_INTELPERC_PROFILE_IDX                 = 11002,$/;"	e	enum:__anon107
CV_CAP_PROP_IOS_DEVICE_EXPOSURE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_IOS_DEVICE_EXPOSURE = 9002,$/;"	e	enum:__anon107
CV_CAP_PROP_IOS_DEVICE_FLASH	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_IOS_DEVICE_FLASH = 9003,$/;"	e	enum:__anon107
CV_CAP_PROP_IOS_DEVICE_FOCUS	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_IOS_DEVICE_FOCUS = 9001,$/;"	e	enum:__anon107
CV_CAP_PROP_IOS_DEVICE_TORCH	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_IOS_DEVICE_TORCH = 9005,$/;"	e	enum:__anon107
CV_CAP_PROP_IOS_DEVICE_WHITEBALANCE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_IOS_DEVICE_WHITEBALANCE = 9004,$/;"	e	enum:__anon107
CV_CAP_PROP_IRIS	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_IRIS          =36,$/;"	e	enum:__anon107
CV_CAP_PROP_ISO_SPEED	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_ISO_SPEED     =30,$/;"	e	enum:__anon107
CV_CAP_PROP_MAX_DC1394	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_MAX_DC1394    =31,$/;"	e	enum:__anon107
CV_CAP_PROP_MODE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_MODE           =9,$/;"	e	enum:__anon107
CV_CAP_PROP_MONOCHROME	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_MONOCHROME    =19,$/;"	e	enum:__anon107
CV_CAP_PROP_OPENNI2_MIRROR	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_OPENNI2_MIRROR = 111,$/;"	e	enum:__anon107
CV_CAP_PROP_OPENNI2_SYNC	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_OPENNI2_SYNC = 110,$/;"	e	enum:__anon107
CV_CAP_PROP_OPENNI_APPROX_FRAME_SYNC	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_OPENNI_APPROX_FRAME_SYNC = 105,$/;"	e	enum:__anon107
CV_CAP_PROP_OPENNI_BASELINE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_OPENNI_BASELINE        = 102, \/\/ in mm$/;"	e	enum:__anon107
CV_CAP_PROP_OPENNI_CIRCLE_BUFFER	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_OPENNI_CIRCLE_BUFFER     = 107,$/;"	e	enum:__anon107
CV_CAP_PROP_OPENNI_FOCAL_LENGTH	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_OPENNI_FOCAL_LENGTH    = 103, \/\/ in pixels$/;"	e	enum:__anon107
CV_CAP_PROP_OPENNI_FRAME_MAX_DEPTH	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_OPENNI_FRAME_MAX_DEPTH = 101, \/\/ in mm$/;"	e	enum:__anon107
CV_CAP_PROP_OPENNI_GENERATOR_PRESENT	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_OPENNI_GENERATOR_PRESENT = 109,$/;"	e	enum:__anon107
CV_CAP_PROP_OPENNI_MAX_BUFFER_SIZE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_OPENNI_MAX_BUFFER_SIZE   = 106,$/;"	e	enum:__anon107
CV_CAP_PROP_OPENNI_MAX_TIME_DURATION	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_OPENNI_MAX_TIME_DURATION = 108,$/;"	e	enum:__anon107
CV_CAP_PROP_OPENNI_OUTPUT_MODE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_OPENNI_OUTPUT_MODE     = 100,$/;"	e	enum:__anon107
CV_CAP_PROP_OPENNI_REGISTRATION	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_OPENNI_REGISTRATION    = 104, \/\/ flag$/;"	e	enum:__anon107
CV_CAP_PROP_OPENNI_REGISTRATION_ON	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_OPENNI_REGISTRATION_ON = CV_CAP_PROP_OPENNI_REGISTRATION, \/\/ flag that synchronizes the remapping depth map to image map$/;"	e	enum:__anon107
CV_CAP_PROP_PAN	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_PAN           =33,$/;"	e	enum:__anon107
CV_CAP_PROP_POS_AVI_RATIO	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_POS_AVI_RATIO  =2,$/;"	e	enum:__anon107
CV_CAP_PROP_POS_FRAMES	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_POS_FRAMES     =1,$/;"	e	enum:__anon107
CV_CAP_PROP_POS_MSEC	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_POS_MSEC       =0,$/;"	e	enum:__anon107
CV_CAP_PROP_PREVIEW_FORMAT	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_PREVIEW_FORMAT=1026, \/\/ readonly, tricky property, returns cpnst char* indeed$/;"	e	enum:__anon107
CV_CAP_PROP_PVAPI_BINNINGX	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_PVAPI_BINNINGX              = 304, \/\/ Horizontal binning factor$/;"	e	enum:__anon107
CV_CAP_PROP_PVAPI_BINNINGY	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_PVAPI_BINNINGY              = 305, \/\/ Vertical binning factor$/;"	e	enum:__anon107
CV_CAP_PROP_PVAPI_DECIMATIONHORIZONTAL	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_PVAPI_DECIMATIONHORIZONTAL  = 302, \/\/ Horizontal sub-sampling of the image$/;"	e	enum:__anon107
CV_CAP_PROP_PVAPI_DECIMATIONVERTICAL	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_PVAPI_DECIMATIONVERTICAL    = 303, \/\/ Vertical sub-sampling of the image$/;"	e	enum:__anon107
CV_CAP_PROP_PVAPI_FRAMESTARTTRIGGERMODE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_PVAPI_FRAMESTARTTRIGGERMODE = 301, \/\/ FrameStartTriggerMode: Determines how a frame is initiated$/;"	e	enum:__anon107
CV_CAP_PROP_PVAPI_MULTICASTIP	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_PVAPI_MULTICASTIP           = 300, \/\/ ip for anable multicast master mode. 0 for disable multicast$/;"	e	enum:__anon107
CV_CAP_PROP_PVAPI_PIXELFORMAT	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_PVAPI_PIXELFORMAT           = 306, \/\/ Pixel format$/;"	e	enum:__anon107
CV_CAP_PROP_RECTIFICATION	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_RECTIFICATION =18,$/;"	e	enum:__anon107
CV_CAP_PROP_ROLL	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_ROLL          =35,$/;"	e	enum:__anon107
CV_CAP_PROP_SAR_DEN	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_SAR_DEN       =41,$/;"	e	enum:__anon107
CV_CAP_PROP_SAR_NUM	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_SAR_NUM       =40,$/;"	e	enum:__anon107
CV_CAP_PROP_SATURATION	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_SATURATION    =12,$/;"	e	enum:__anon107
CV_CAP_PROP_SETTINGS	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_SETTINGS      =37,$/;"	e	enum:__anon107
CV_CAP_PROP_SHARPNESS	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_SHARPNESS     =20,$/;"	e	enum:__anon107
CV_CAP_PROP_SPEED	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_SPEED                     = 17007, \/\/ Exposure speed. Can be readonly, depends on camera program.$/;"	e	enum:__anon112
CV_CAP_PROP_SUPPORTED_PREVIEW_SIZES_STRING	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_SUPPORTED_PREVIEW_SIZES_STRING=1025, \/\/ readonly, tricky property, returns cpnst char* indeed$/;"	e	enum:__anon107
CV_CAP_PROP_TEMPERATURE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_TEMPERATURE   =23,$/;"	e	enum:__anon107
CV_CAP_PROP_TILT	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_TILT          =34,$/;"	e	enum:__anon107
CV_CAP_PROP_TRIGGER	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_TRIGGER       =24,$/;"	e	enum:__anon107
CV_CAP_PROP_TRIGGER_DELAY	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_TRIGGER_DELAY =25,$/;"	e	enum:__anon107
CV_CAP_PROP_VIEWFINDER	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_VIEWFINDER                = 17010  \/\/ Enter liveview mode.$/;"	e	enum:__anon112
CV_CAP_PROP_WHITE_BALANCE_BLUE_U	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_WHITE_BALANCE_BLUE_U =17,$/;"	e	enum:__anon107
CV_CAP_PROP_WHITE_BALANCE_RED_V	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_WHITE_BALANCE_RED_V =26,$/;"	e	enum:__anon107
CV_CAP_PROP_XI_ACQ_BUFFER_SIZE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_ACQ_BUFFER_SIZE                              = 548, \/\/ Acquisition buffer size in buffer_size_unit. Default bytes.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_ACQ_BUFFER_SIZE_UNIT	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_ACQ_BUFFER_SIZE_UNIT                         = 549, \/\/ Acquisition buffer size unit in bytes. Default 1. E.g. Value 1024 means that buffer_size is in KiBytes$/;"	e	enum:__anon107
CV_CAP_PROP_XI_ACQ_FRAME_BURST_COUNT	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_ACQ_FRAME_BURST_COUNT                        = 499, \/\/ Sets number of frames acquired by burst. This burst is used only if trigger is set to FrameBurstStart$/;"	e	enum:__anon107
CV_CAP_PROP_XI_ACQ_TIMING_MODE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_ACQ_TIMING_MODE                              = 538, \/\/ Type of sensor frames timing.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_ACQ_TRANSPORT_BUFFER_COMMIT	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_ACQ_TRANSPORT_BUFFER_COMMIT                  = 552, \/\/ Number of buffers to commit to low level$/;"	e	enum:__anon107
CV_CAP_PROP_XI_ACQ_TRANSPORT_BUFFER_SIZE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_ACQ_TRANSPORT_BUFFER_SIZE                    = 550, \/\/ Acquisition transport buffer size in bytes$/;"	e	enum:__anon107
CV_CAP_PROP_XI_AEAG	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_AEAG                                         = 415, \/\/ Automatic exposure\/gain$/;"	e	enum:__anon107
CV_CAP_PROP_XI_AEAG_LEVEL	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_AEAG_LEVEL                                   = 419, \/\/ Average intensity of output signal AEAG should achieve(in %)$/;"	e	enum:__anon107
CV_CAP_PROP_XI_AEAG_ROI_HEIGHT	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_AEAG_ROI_HEIGHT                              = 442, \/\/ Automatic exposure\/gain ROI Height$/;"	e	enum:__anon107
CV_CAP_PROP_XI_AEAG_ROI_OFFSET_X	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_AEAG_ROI_OFFSET_X                            = 439, \/\/ Automatic exposure\/gain ROI offset X$/;"	e	enum:__anon107
CV_CAP_PROP_XI_AEAG_ROI_OFFSET_Y	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_AEAG_ROI_OFFSET_Y                            = 440, \/\/ Automatic exposure\/gain ROI offset Y$/;"	e	enum:__anon107
CV_CAP_PROP_XI_AEAG_ROI_WIDTH	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_AEAG_ROI_WIDTH                               = 441, \/\/ Automatic exposure\/gain ROI Width$/;"	e	enum:__anon107
CV_CAP_PROP_XI_AE_MAX_LIMIT	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_AE_MAX_LIMIT                                 = 417, \/\/ Maximum limit of exposure in AEAG procedure$/;"	e	enum:__anon107
CV_CAP_PROP_XI_AG_MAX_LIMIT	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_AG_MAX_LIMIT                                 = 418,  \/\/ Maximum limit of gain in AEAG procedure$/;"	e	enum:__anon107
CV_CAP_PROP_XI_APPLY_CMS	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_APPLY_CMS                                    = 471, \/\/ Enable applying of CMS profiles to xiGetImage (see XI_PRM_INPUT_CMS_PROFILE, XI_PRM_OUTPUT_CMS_PROFILE).$/;"	e	enum:__anon107
CV_CAP_PROP_XI_AUTO_BANDWIDTH_CALCULATION	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_AUTO_BANDWIDTH_CALCULATION                   = 573, \/\/ Automatic bandwidth calculation,$/;"	e	enum:__anon107
CV_CAP_PROP_XI_AUTO_WB	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_AUTO_WB                                      = 414, \/\/ Automatic white balance$/;"	e	enum:__anon107
CV_CAP_PROP_XI_AVAILABLE_BANDWIDTH	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_AVAILABLE_BANDWIDTH                          = 539, \/\/ Calculate and return available interface bandwidth(int Megabits)$/;"	e	enum:__anon107
CV_CAP_PROP_XI_BINNING_HORIZONTAL	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_BINNING_HORIZONTAL                           = 429, \/\/ Horizontal Binning - number of horizontal photo-sensitive cells to combine together.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_BINNING_PATTERN	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_BINNING_PATTERN                              = 430, \/\/ Binning pattern type.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_BINNING_SELECTOR	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_BINNING_SELECTOR                             = 427, \/\/ Binning engine selector.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_BINNING_VERTICAL	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_BINNING_VERTICAL                             = 428, \/\/ Vertical Binning - number of vertical photo-sensitive cells to combine together.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_BPC	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_BPC                                          = 445, \/\/ Correction of bad pixels$/;"	e	enum:__anon107
CV_CAP_PROP_XI_BUFFERS_QUEUE_SIZE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_BUFFERS_QUEUE_SIZE                           = 551, \/\/ Queue of field\/frame buffers$/;"	e	enum:__anon107
CV_CAP_PROP_XI_BUFFER_POLICY	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_BUFFER_POLICY                                = 540, \/\/ Data move policy$/;"	e	enum:__anon107
CV_CAP_PROP_XI_CC_MATRIX_00	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_CC_MATRIX_00                                 = 479, \/\/ Color Correction Matrix element [0][0]$/;"	e	enum:__anon107
CV_CAP_PROP_XI_CC_MATRIX_01	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_CC_MATRIX_01                                 = 480, \/\/ Color Correction Matrix element [0][1]$/;"	e	enum:__anon107
CV_CAP_PROP_XI_CC_MATRIX_02	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_CC_MATRIX_02                                 = 481, \/\/ Color Correction Matrix element [0][2]$/;"	e	enum:__anon107
CV_CAP_PROP_XI_CC_MATRIX_03	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_CC_MATRIX_03                                 = 482, \/\/ Color Correction Matrix element [0][3]$/;"	e	enum:__anon107
CV_CAP_PROP_XI_CC_MATRIX_10	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_CC_MATRIX_10                                 = 483, \/\/ Color Correction Matrix element [1][0]$/;"	e	enum:__anon107
CV_CAP_PROP_XI_CC_MATRIX_11	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_CC_MATRIX_11                                 = 484, \/\/ Color Correction Matrix element [1][1]$/;"	e	enum:__anon107
CV_CAP_PROP_XI_CC_MATRIX_12	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_CC_MATRIX_12                                 = 485, \/\/ Color Correction Matrix element [1][2]$/;"	e	enum:__anon107
CV_CAP_PROP_XI_CC_MATRIX_13	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_CC_MATRIX_13                                 = 486, \/\/ Color Correction Matrix element [1][3]$/;"	e	enum:__anon107
CV_CAP_PROP_XI_CC_MATRIX_20	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_CC_MATRIX_20                                 = 487, \/\/ Color Correction Matrix element [2][0]$/;"	e	enum:__anon107
CV_CAP_PROP_XI_CC_MATRIX_21	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_CC_MATRIX_21                                 = 488, \/\/ Color Correction Matrix element [2][1]$/;"	e	enum:__anon107
CV_CAP_PROP_XI_CC_MATRIX_22	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_CC_MATRIX_22                                 = 489, \/\/ Color Correction Matrix element [2][2]$/;"	e	enum:__anon107
CV_CAP_PROP_XI_CC_MATRIX_23	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_CC_MATRIX_23                                 = 490, \/\/ Color Correction Matrix element [2][3]$/;"	e	enum:__anon107
CV_CAP_PROP_XI_CC_MATRIX_30	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_CC_MATRIX_30                                 = 491, \/\/ Color Correction Matrix element [3][0]$/;"	e	enum:__anon107
CV_CAP_PROP_XI_CC_MATRIX_31	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_CC_MATRIX_31                                 = 492, \/\/ Color Correction Matrix element [3][1]$/;"	e	enum:__anon107
CV_CAP_PROP_XI_CC_MATRIX_32	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_CC_MATRIX_32                                 = 493, \/\/ Color Correction Matrix element [3][2]$/;"	e	enum:__anon107
CV_CAP_PROP_XI_CC_MATRIX_33	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_CC_MATRIX_33                                 = 494, \/\/ Color Correction Matrix element [3][3]$/;"	e	enum:__anon107
CV_CAP_PROP_XI_CHIP_TEMP	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_CHIP_TEMP                                    = 468, \/\/ Camera sensor temperature$/;"	e	enum:__anon107
CV_CAP_PROP_XI_CMS	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_CMS                                          = 470, \/\/ Mode of color management system.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_COLOR_FILTER_ARRAY	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_COLOR_FILTER_ARRAY                           = 475, \/\/ Returns color filter array type of RAW data.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_COLUMN_FPN_CORRECTION	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_COLUMN_FPN_CORRECTION                        = 555, \/\/ Correction of column FPN$/;"	e	enum:__anon107
CV_CAP_PROP_XI_COOLING	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_COOLING                                      = 466, \/\/ Start camera cooling.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_COUNTER_SELECTOR	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_COUNTER_SELECTOR                             = 536, \/\/ Select counter$/;"	e	enum:__anon107
CV_CAP_PROP_XI_COUNTER_VALUE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_COUNTER_VALUE                                = 537, \/\/ Counter status$/;"	e	enum:__anon107
CV_CAP_PROP_XI_DATA_FORMAT	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_DATA_FORMAT                                  = 401, \/\/ Output data format.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_DEBOUNCE_EN	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_DEBOUNCE_EN                                  = 507, \/\/ Enable\/Disable debounce to selected GPI$/;"	e	enum:__anon107
CV_CAP_PROP_XI_DEBOUNCE_POL	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_DEBOUNCE_POL                                 = 510, \/\/ Debounce polarity (pol = 1 t0 - falling edge, t1 - rising edge)$/;"	e	enum:__anon107
CV_CAP_PROP_XI_DEBOUNCE_T0	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_DEBOUNCE_T0                                  = 508, \/\/ Debounce time (x * 10us)$/;"	e	enum:__anon107
CV_CAP_PROP_XI_DEBOUNCE_T1	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_DEBOUNCE_T1                                  = 509, \/\/ Debounce time (x * 10us)$/;"	e	enum:__anon107
CV_CAP_PROP_XI_DEBUG_LEVEL	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_DEBUG_LEVEL                                  = 572, \/\/ Set debug level$/;"	e	enum:__anon107
CV_CAP_PROP_XI_DECIMATION_HORIZONTAL	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_DECIMATION_HORIZONTAL                        = 433, \/\/ Horizontal Decimation - horizontal sub-sampling of the image - reduces the horizontal resolution of the image by the specified vertical decimation factor.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_DECIMATION_PATTERN	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_DECIMATION_PATTERN                           = 434, \/\/ Decimation pattern type.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_DECIMATION_SELECTOR	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_DECIMATION_SELECTOR                          = 431, \/\/ Decimation engine selector.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_DECIMATION_VERTICAL	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_DECIMATION_VERTICAL                          = 432, \/\/ Vertical Decimation - vertical sub-sampling of the image - reduces the vertical resolution of the image by the specified vertical decimation factor.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_DEFAULT_CC_MATRIX	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_DEFAULT_CC_MATRIX                            = 495, \/\/ Set default Color Correction Matrix$/;"	e	enum:__anon107
CV_CAP_PROP_XI_DEVICE_MODEL_ID	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_DEVICE_MODEL_ID                              = 521, \/\/ Return device model id$/;"	e	enum:__anon107
CV_CAP_PROP_XI_DEVICE_RESET	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_DEVICE_RESET                                 = 554, \/\/ Resets the camera to default state.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_DEVICE_SN	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_DEVICE_SN                                    = 522, \/\/ Return device serial number$/;"	e	enum:__anon107
CV_CAP_PROP_XI_DOWNSAMPLING	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_DOWNSAMPLING                                 = 400, \/\/ Change image resolution by binning or skipping.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_DOWNSAMPLING_TYPE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_DOWNSAMPLING_TYPE                            = 426, \/\/ Change image downsampling type.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_EXPOSURE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_EXPOSURE                                     = 421, \/\/ Exposure time in microseconds$/;"	e	enum:__anon107
CV_CAP_PROP_XI_EXPOSURE_BURST_COUNT	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_EXPOSURE_BURST_COUNT                         = 422, \/\/ Sets the number of times of exposure in one frame.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_EXP_PRIORITY	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_EXP_PRIORITY                                 = 416, \/\/ Exposure priority (0.5 - exposure 50%, gain 50%).$/;"	e	enum:__anon107
CV_CAP_PROP_XI_FFS_ACCESS_KEY	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_FFS_ACCESS_KEY                               = 583, \/\/ Setting of key enables file operations on some cameras.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_FFS_FILE_ID	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_FFS_FILE_ID                                  = 594, \/\/ File number.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_FFS_FILE_SIZE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_FFS_FILE_SIZE                                = 580, \/\/ Size of file.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_FRAMERATE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_FRAMERATE                                    = 535, \/\/ Define framerate in Hz$/;"	e	enum:__anon107
CV_CAP_PROP_XI_FREE_FFS_SIZE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_FREE_FFS_SIZE                                = 581, \/\/ Size of free camera FFS.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_GAIN	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_GAIN                                         = 424, \/\/ Gain in dB$/;"	e	enum:__anon107
CV_CAP_PROP_XI_GAIN_SELECTOR	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_GAIN_SELECTOR                                = 423, \/\/ Gain selector for parameter Gain allows to select different type of gains.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_GAMMAC	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_GAMMAC                                       = 477, \/\/ Chromaticity gamma$/;"	e	enum:__anon107
CV_CAP_PROP_XI_GAMMAY	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_GAMMAY                                       = 476, \/\/ Luminosity gamma$/;"	e	enum:__anon107
CV_CAP_PROP_XI_GPI_LEVEL	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_GPI_LEVEL                                    = 408, \/\/ Get general purpose level$/;"	e	enum:__anon107
CV_CAP_PROP_XI_GPI_MODE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_GPI_MODE                                     = 407, \/\/ Set general purpose input mode$/;"	e	enum:__anon107
CV_CAP_PROP_XI_GPI_SELECTOR	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_GPI_SELECTOR                                 = 406, \/\/ Selects general purpose input$/;"	e	enum:__anon107
CV_CAP_PROP_XI_GPO_MODE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_GPO_MODE                                     = 410, \/\/ Set general purpose output mode$/;"	e	enum:__anon107
CV_CAP_PROP_XI_GPO_SELECTOR	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_GPO_SELECTOR                                 = 409, \/\/ Selects general purpose output$/;"	e	enum:__anon107
CV_CAP_PROP_XI_HDR	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_HDR                                          = 559, \/\/ Enable High Dynamic Range feature.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_HDR_KNEEPOINT_COUNT	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_HDR_KNEEPOINT_COUNT                          = 560, \/\/ The number of kneepoints in the PWLR.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_HDR_T1	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_HDR_T1                                       = 561, \/\/ position of first kneepoint(in % of XI_PRM_EXPOSURE)$/;"	e	enum:__anon107
CV_CAP_PROP_XI_HDR_T2	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_HDR_T2                                       = 562, \/\/ position of second kneepoint (in % of XI_PRM_EXPOSURE)$/;"	e	enum:__anon107
CV_CAP_PROP_XI_HEIGHT	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_HEIGHT                                       = 452, \/\/ Height of the Image provided by the device (in pixels).$/;"	e	enum:__anon107
CV_CAP_PROP_XI_HOUS_BACK_SIDE_TEMP	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_HOUS_BACK_SIDE_TEMP                          = 590, \/\/ Camera housing back side tepmerature$/;"	e	enum:__anon107
CV_CAP_PROP_XI_HOUS_TEMP	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_HOUS_TEMP                                    = 469, \/\/ Camera housing tepmerature$/;"	e	enum:__anon107
CV_CAP_PROP_XI_HW_REVISION	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_HW_REVISION                                  = 571, \/\/ Returns hardware revision number.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_IMAGE_BLACK_LEVEL	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_IMAGE_BLACK_LEVEL                            = 565, \/\/ Last image black level counts. Can be used for Offline processing to recall it.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_IMAGE_DATA_BIT_DEPTH	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_IMAGE_DATA_BIT_DEPTH                         = 462, \/\/ bitdepth of data returned by function xiGetImage$/;"	e	enum:__anon107
CV_CAP_PROP_XI_IMAGE_DATA_FORMAT	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_IMAGE_DATA_FORMAT                            = 435, \/\/ Output data format.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_IMAGE_DATA_FORMAT_RGB32_ALPHA	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_IMAGE_DATA_FORMAT_RGB32_ALPHA                = 529, \/\/ The alpha channel of RGB32 output image format.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_IMAGE_IS_COLOR	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_IMAGE_IS_COLOR                               = 474, \/\/ Returns 1 for color cameras.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_IMAGE_PAYLOAD_SIZE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_IMAGE_PAYLOAD_SIZE                           = 530, \/\/ Buffer size in bytes sufficient for output image returned by xiGetImage$/;"	e	enum:__anon107
CV_CAP_PROP_XI_IS_COOLED	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_IS_COOLED                                    = 465, \/\/ Returns 1 for cameras that support cooling.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_IS_DEVICE_EXIST	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_IS_DEVICE_EXIST                              = 547, \/\/ Returns 1 if camera connected and works properly.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_KNEEPOINT1	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_KNEEPOINT1                                   = 563, \/\/ value of first kneepoint (% of sensor saturation)$/;"	e	enum:__anon107
CV_CAP_PROP_XI_KNEEPOINT2	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_KNEEPOINT2                                   = 564, \/\/ value of second kneepoint (% of sensor saturation)$/;"	e	enum:__anon107
CV_CAP_PROP_XI_LED_MODE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_LED_MODE                                     = 412, \/\/ Define camera signalling LED functionality$/;"	e	enum:__anon107
CV_CAP_PROP_XI_LED_SELECTOR	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_LED_SELECTOR                                 = 411, \/\/ Selects camera signalling LED$/;"	e	enum:__anon107
CV_CAP_PROP_XI_LENS_APERTURE_VALUE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_LENS_APERTURE_VALUE                          = 512, \/\/ Current lens aperture value in stops. Examples: 2.8, 4, 5.6, 8, 11$/;"	e	enum:__anon107
CV_CAP_PROP_XI_LENS_FEATURE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_LENS_FEATURE                                 = 518, \/\/ Allows access to lens feature value currently selected by XI_PRM_LENS_FEATURE_SELECTOR.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_LENS_FEATURE_SELECTOR	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_LENS_FEATURE_SELECTOR                        = 517, \/\/ Selects the current feature which is accessible by XI_PRM_LENS_FEATURE.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_LENS_FOCAL_LENGTH	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_LENS_FOCAL_LENGTH                            = 516, \/\/ Lens focal distance in mm.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_LENS_FOCUS_DISTANCE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_LENS_FOCUS_DISTANCE                          = 515, \/\/ Lens focus distance in cm.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_LENS_FOCUS_MOVE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_LENS_FOCUS_MOVE                              = 514, \/\/ Moves lens focus motor by steps set in XI_PRM_LENS_FOCUS_MOVEMENT_VALUE.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_LENS_FOCUS_MOVEMENT_VALUE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_LENS_FOCUS_MOVEMENT_VALUE                    = 513, \/\/ Lens current focus movement value to be used by XI_PRM_LENS_FOCUS_MOVE in motor steps.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_LENS_MODE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_LENS_MODE                                    = 511, \/\/ Status of lens control interface. This shall be set to XI_ON before any Lens operations.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_LIMIT_BANDWIDTH	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_LIMIT_BANDWIDTH                              = 459, \/\/ Set\/get bandwidth(datarate)(in Megabits)$/;"	e	enum:__anon107
CV_CAP_PROP_XI_LUT_EN	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_LUT_EN                                       = 541, \/\/ Activates LUT.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_LUT_INDEX	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_LUT_INDEX                                    = 542, \/\/ Control the index (offset) of the coefficient to access in the LUT.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_LUT_VALUE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_LUT_VALUE                                    = 543, \/\/ Value at entry LUTIndex of the LUT$/;"	e	enum:__anon107
CV_CAP_PROP_XI_MANUAL_WB	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_MANUAL_WB                                    = 413, \/\/ Calculates White Balance(must be called during acquisition)$/;"	e	enum:__anon107
CV_CAP_PROP_XI_OFFSET_X	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_OFFSET_X                                     = 402, \/\/ Horizontal offset from the origin to the area of interest (in pixels).$/;"	e	enum:__anon107
CV_CAP_PROP_XI_OFFSET_Y	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_OFFSET_Y                                     = 403, \/\/ Vertical offset from the origin to the area of interest (in pixels).$/;"	e	enum:__anon107
CV_CAP_PROP_XI_OUTPUT_DATA_BIT_DEPTH	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_OUTPUT_DATA_BIT_DEPTH                        = 461, \/\/ Device output data bit depth.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_OUTPUT_DATA_PACKING	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_OUTPUT_DATA_PACKING                          = 463, \/\/ Device output data packing (or grouping) enabled. Packing could be enabled if output_data_bit_depth > 8 and packing capability is available.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_OUTPUT_DATA_PACKING_TYPE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_OUTPUT_DATA_PACKING_TYPE                     = 464, \/\/ Data packing type. Some cameras supports only specific packing type.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_RECENT_FRAME	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_RECENT_FRAME                                 = 553, \/\/ GetImage returns most recent frame$/;"	e	enum:__anon107
CV_CAP_PROP_XI_REGION_MODE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_REGION_MODE                                  = 595, \/\/ Activates\/deactivates Region selected by Region Selector$/;"	e	enum:__anon107
CV_CAP_PROP_XI_REGION_SELECTOR	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_REGION_SELECTOR                              = 589, \/\/ Selects Region in Multiple ROI which parameters are set by width, height, ... ,region mode$/;"	e	enum:__anon107
CV_CAP_PROP_XI_ROW_FPN_CORRECTION	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_ROW_FPN_CORRECTION                           = 591, \/\/ Correction of row FPN$/;"	e	enum:__anon107
CV_CAP_PROP_XI_SENSOR_BOARD_TEMP	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_SENSOR_BOARD_TEMP                            = 596, \/\/ Camera sensor board temperature$/;"	e	enum:__anon107
CV_CAP_PROP_XI_SENSOR_CLOCK_FREQ_HZ	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_SENSOR_CLOCK_FREQ_HZ                         = 532, \/\/ Sensor clock frequency in Hz.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_SENSOR_CLOCK_FREQ_INDEX	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_SENSOR_CLOCK_FREQ_INDEX                      = 533, \/\/ Sensor clock frequency index. Sensor with selected frequencies have possibility to set the frequency only by this index.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_SENSOR_DATA_BIT_DEPTH	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_SENSOR_DATA_BIT_DEPTH                        = 460, \/\/ Sensor output data bit depth.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_SENSOR_FEATURE_SELECTOR	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_SENSOR_FEATURE_SELECTOR                      = 585, \/\/ Selects the current feature which is accessible by XI_PRM_SENSOR_FEATURE_VALUE.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_SENSOR_FEATURE_VALUE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_SENSOR_FEATURE_VALUE                         = 586, \/\/ Allows access to sensor feature value currently selected by XI_PRM_SENSOR_FEATURE_SELECTOR.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_SENSOR_MODE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_SENSOR_MODE                                  = 558, \/\/ Current sensor mode. Allows to select sensor mode by one integer. Setting of this parameter affects: image dimensions and downsampling.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_SENSOR_OUTPUT_CHANNEL_COUNT	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_SENSOR_OUTPUT_CHANNEL_COUNT                  = 534, \/\/ Number of output channels from sensor used for data transfer.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_SENSOR_TAPS	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_SENSOR_TAPS                                  = 437, \/\/ Number of taps$/;"	e	enum:__anon107
CV_CAP_PROP_XI_SHARPNESS	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_SHARPNESS                                    = 478, \/\/ Sharpness Strenght$/;"	e	enum:__anon107
CV_CAP_PROP_XI_SHUTTER_TYPE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_SHUTTER_TYPE                                 = 436, \/\/ Change sensor shutter type(CMOS sensor).$/;"	e	enum:__anon107
CV_CAP_PROP_XI_TARGET_TEMP	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_TARGET_TEMP                                  = 467, \/\/ Set sensor target temperature for cooling.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_TEST_PATTERN	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_TEST_PATTERN                                 = 588, \/\/ Selects which test pattern type is generated by the selected generator.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_TEST_PATTERN_GENERATOR_SELECTOR	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_TEST_PATTERN_GENERATOR_SELECTOR              = 587, \/\/ Selects which test pattern generator is controlled by the TestPattern feature.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_TIMEOUT	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_TIMEOUT                                      = 420, \/\/ Image capture timeout in milliseconds$/;"	e	enum:__anon107
CV_CAP_PROP_XI_TRANSPORT_PIXEL_FORMAT	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_TRANSPORT_PIXEL_FORMAT                       = 531, \/\/ Current format of pixels on transport layer.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_TRG_DELAY	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_TRG_DELAY                                    = 544, \/\/ Specifies the delay in microseconds (us) to apply after the trigger reception before activating it.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_TRG_SELECTOR	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_TRG_SELECTOR                                 = 498, \/\/ Selects the type of trigger.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_TRG_SOFTWARE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_TRG_SOFTWARE                                 = 405, \/\/ Generates an internal trigger. PRM_TRG_SOURCE must be set to TRG_SOFTWARE.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_TRG_SOURCE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_TRG_SOURCE                                   = 404, \/\/ Defines source of trigger.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_TS_RST_MODE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_TS_RST_MODE                                  = 545, \/\/ Defines how time stamp reset engine will be armed$/;"	e	enum:__anon107
CV_CAP_PROP_XI_TS_RST_SOURCE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_TS_RST_SOURCE                                = 546, \/\/ Defines which source will be used for timestamp reset. Writing this parameter will trigger settings of engine (arming)$/;"	e	enum:__anon107
CV_CAP_PROP_XI_USED_FFS_SIZE	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_USED_FFS_SIZE                                = 582, \/\/ Size of used camera FFS.$/;"	e	enum:__anon107
CV_CAP_PROP_XI_WB_KB	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_WB_KB                                        = 450, \/\/ White balance blue coefficient$/;"	e	enum:__anon107
CV_CAP_PROP_XI_WB_KG	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_WB_KG                                        = 449, \/\/ White balance green coefficient$/;"	e	enum:__anon107
CV_CAP_PROP_XI_WB_KR	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_WB_KR                                        = 448, \/\/ White balance red coefficient$/;"	e	enum:__anon107
CV_CAP_PROP_XI_WIDTH	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_XI_WIDTH                                        = 451, \/\/ Width of the Image provided by the device (in pixels).$/;"	e	enum:__anon107
CV_CAP_PROP_ZOOM	opencv2/videoio/videoio_c.h	/^    CV_CAP_PROP_ZOOM          =27,$/;"	e	enum:__anon107
CV_CAP_PVAPI	opencv2/videoio/videoio_c.h	/^    CV_CAP_PVAPI    =800,   \/\/ PvAPI, Prosilica GigE SDK$/;"	e	enum:__anon106
CV_CAP_QT	opencv2/videoio/videoio_c.h	/^    CV_CAP_QT       =500,   \/\/ QuickTime$/;"	e	enum:__anon106
CV_CAP_STEREO	opencv2/videoio/videoio_c.h	/^    CV_CAP_STEREO   =400,   \/\/ TYZX proprietary drivers$/;"	e	enum:__anon106
CV_CAP_TYZX	opencv2/videoio/videoio_c.h	/^    CV_CAP_TYZX     =400,$/;"	e	enum:__anon106
CV_CAP_UNICAP	opencv2/videoio/videoio_c.h	/^    CV_CAP_UNICAP   =600,   \/\/ Unicap drivers$/;"	e	enum:__anon106
CV_CAP_V4L	opencv2/videoio/videoio_c.h	/^    CV_CAP_V4L      =200,$/;"	e	enum:__anon106
CV_CAP_V4L2	opencv2/videoio/videoio_c.h	/^    CV_CAP_V4L2     =200,$/;"	e	enum:__anon106
CV_CAP_VFW	opencv2/videoio/videoio_c.h	/^    CV_CAP_VFW      =200,   \/\/ platform native$/;"	e	enum:__anon106
CV_CAP_XIAPI	opencv2/videoio/videoio_c.h	/^    CV_CAP_XIAPI    =1100,   \/\/ XIMEA Camera API$/;"	e	enum:__anon106
CV_CDECL	opencv2/core/types_c.h	69;"	d
CV_CDECL	opencv2/core/types_c.h	72;"	d
CV_CHAIN_APPROX_NONE	opencv2/imgproc/types_c.h	/^    CV_CHAIN_APPROX_NONE=1,$/;"	e	enum:__anon364
CV_CHAIN_APPROX_SIMPLE	opencv2/imgproc/types_c.h	/^    CV_CHAIN_APPROX_SIMPLE=2,$/;"	e	enum:__anon364
CV_CHAIN_APPROX_TC89_KCOS	opencv2/imgproc/types_c.h	/^    CV_CHAIN_APPROX_TC89_KCOS=4,$/;"	e	enum:__anon364
CV_CHAIN_APPROX_TC89_L1	opencv2/imgproc/types_c.h	/^    CV_CHAIN_APPROX_TC89_L1=3,$/;"	e	enum:__anon364
CV_CHAIN_CODE	opencv2/imgproc/types_c.h	/^    CV_CHAIN_CODE=0,$/;"	e	enum:__anon364
CV_CHECK	opencv2/core/core_c.h	2731;"	d
CV_CHECKBOX	opencv2/highgui/highgui_c.h	/^enum {CV_PUSH_BUTTON = 0, CV_CHECKBOX = 1, CV_RADIOBOX = 2};$/;"	e	enum:__anon65
CV_CHECK_QUIET	opencv2/core/core_c.h	1216;"	d
CV_CHECK_RANGE	opencv2/core/core_c.h	1215;"	d
CV_CHOLESKY	opencv2/core/core_c.h	1344;"	d
CV_CLOCKWISE	opencv2/imgproc/types_c.h	/^    CV_CLOCKWISE         =1,$/;"	e	enum:__anon366
CV_CMP	opencv2/core/types_c.h	194;"	d
CV_CMP_EQ	opencv2/core/core_c.h	1143;"	d
CV_CMP_GE	opencv2/core/core_c.h	1145;"	d
CV_CMP_GT	opencv2/core/core_c.h	1144;"	d
CV_CMP_LE	opencv2/core/core_c.h	1147;"	d
CV_CMP_LT	opencv2/core/core_c.h	1146;"	d
CV_CMP_NE	opencv2/core/core_c.h	1148;"	d
CV_CN_MAX	opencv2/core/hal/interface.h	63;"	d
CV_CN_SHIFT	opencv2/core/hal/interface.h	64;"	d
CV_COLORCVT_MAX	opencv2/imgproc/types_c.h	/^    CV_COLORCVT_MAX  = 139$/;"	e	enum:__anon358
CV_COMP_BHATTACHARYYA	opencv2/imgproc/types_c.h	/^    CV_COMP_BHATTACHARYYA =3,$/;"	e	enum:__anon367
CV_COMP_CHISQR	opencv2/imgproc/types_c.h	/^    CV_COMP_CHISQR        =1,$/;"	e	enum:__anon367
CV_COMP_CHISQR_ALT	opencv2/imgproc/types_c.h	/^    CV_COMP_CHISQR_ALT    =4,$/;"	e	enum:__anon367
CV_COMP_CORREL	opencv2/imgproc/types_c.h	/^    CV_COMP_CORREL        =0,$/;"	e	enum:__anon367
CV_COMP_HELLINGER	opencv2/imgproc/types_c.h	/^    CV_COMP_HELLINGER     =CV_COMP_BHATTACHARYYA,$/;"	e	enum:__anon367
CV_COMP_INTERSECT	opencv2/imgproc/types_c.h	/^    CV_COMP_INTERSECT     =2,$/;"	e	enum:__anon367
CV_COMP_KL_DIV	opencv2/imgproc/types_c.h	/^    CV_COMP_KL_DIV        =5$/;"	e	enum:__anon367
CV_CONTOURS_MATCH_I1	opencv2/imgproc/types_c.h	/^    CV_CONTOURS_MATCH_I1  =1, \/\/!< \\f[I_1(A,B) =  \\sum _{i=1...7}  \\left |  \\frac{1}{m^A_i} -  \\frac{1}{m^B_i} \\right |\\f]$/;"	e	enum:ShapeMatchModes
CV_CONTOURS_MATCH_I2	opencv2/imgproc/types_c.h	/^    CV_CONTOURS_MATCH_I2  =2, \/\/!< \\f[I_2(A,B) =  \\sum _{i=1...7}  \\left | m^A_i - m^B_i  \\right |\\f]$/;"	e	enum:ShapeMatchModes
CV_CONTOURS_MATCH_I3	opencv2/imgproc/types_c.h	/^    CV_CONTOURS_MATCH_I3  =3  \/\/!< \\f[I_3(A,B) =  \\max _{i=1...7}  \\frac{ \\left| m^A_i - m^B_i \\right| }{ \\left| m^A_i \\right| }\\f]$/;"	e	enum:ShapeMatchModes
CV_CONTOUR_FIELDS	opencv2/core/types_c.h	1373;"	d
CV_COUNTER_CLOCKWISE	opencv2/imgproc/types_c.h	/^    CV_COUNTER_CLOCKWISE =2$/;"	e	enum:__anon366
CV_COVAR_COLS	opencv2/core/core_c.h	1403;"	d
CV_COVAR_NORMAL	opencv2/core/core_c.h	1390;"	d
CV_COVAR_ROWS	opencv2/core/core_c.h	1400;"	d
CV_COVAR_SCALE	opencv2/core/core_c.h	1397;"	d
CV_COVAR_SCRAMBLED	opencv2/core/core_c.h	1387;"	d
CV_COVAR_USE_AVG	opencv2/core/core_c.h	1394;"	d
CV_CPU_AVX	opencv2/core/cvdef.h	116;"	d
CV_CPU_AVX2	opencv2/core/cvdef.h	117;"	d
CV_CPU_AVX_512BW	opencv2/core/cvdef.h	121;"	d
CV_CPU_AVX_512CD	opencv2/core/cvdef.h	122;"	d
CV_CPU_AVX_512DQ	opencv2/core/cvdef.h	123;"	d
CV_CPU_AVX_512ER	opencv2/core/cvdef.h	124;"	d
CV_CPU_AVX_512F	opencv2/core/cvdef.h	120;"	d
CV_CPU_AVX_512IFMA512	opencv2/core/cvdef.h	125;"	d
CV_CPU_AVX_512PF	opencv2/core/cvdef.h	126;"	d
CV_CPU_AVX_512VBMI	opencv2/core/cvdef.h	127;"	d
CV_CPU_AVX_512VL	opencv2/core/cvdef.h	128;"	d
CV_CPU_FMA3	opencv2/core/cvdef.h	118;"	d
CV_CPU_FP16	opencv2/core/cvdef.h	115;"	d
CV_CPU_MMX	opencv2/core/cvdef.h	107;"	d
CV_CPU_NEON	opencv2/core/cvdef.h	130;"	d
CV_CPU_NONE	opencv2/core/cvdef.h	106;"	d
CV_CPU_POPCNT	opencv2/core/cvdef.h	114;"	d
CV_CPU_SSE	opencv2/core/cvdef.h	108;"	d
CV_CPU_SSE2	opencv2/core/cvdef.h	109;"	d
CV_CPU_SSE3	opencv2/core/cvdef.h	110;"	d
CV_CPU_SSE4_1	opencv2/core/cvdef.h	112;"	d
CV_CPU_SSE4_2	opencv2/core/cvdef.h	113;"	d
CV_CPU_SSSE3	opencv2/core/cvdef.h	111;"	d
CV_CUDEV_ARCH	opencv2/cudev/common.hpp	63;"	d
CV_CUDEV_BINARY_FUNCTION_INST	opencv2/cudev/functional/functional.hpp	543;"	d
CV_CUDEV_BINARY_FUNCTION_INST	opencv2/cudev/functional/functional.hpp	611;"	d
CV_CUDEV_DATA_TYPE_INST	opencv2/cudev/util/vec_traits.hpp	206;"	d
CV_CUDEV_DATA_TYPE_INST	opencv2/cudev/util/vec_traits.hpp	257;"	d
CV_CUDEV_DESCALE	opencv2/cudev/functional/detail/color_cvt.hpp	1279;"	d
CV_CUDEV_DESCALE	opencv2/cudev/functional/detail/color_cvt.hpp	61;"	d
CV_CUDEV_EXPR_BINARY_FUNC	opencv2/cudev/expr/binary_func.hpp	61;"	d
CV_CUDEV_EXPR_BINARY_FUNC	opencv2/cudev/expr/binary_func.hpp	74;"	d
CV_CUDEV_EXPR_BINOP_INST	opencv2/cudev/expr/binary_op.hpp	234;"	d
CV_CUDEV_EXPR_BINOP_INST	opencv2/cudev/expr/binary_op.hpp	66;"	d
CV_CUDEV_EXPR_CVTCOLOR_INST	opencv2/cudev/expr/color.hpp	281;"	d
CV_CUDEV_EXPR_CVTCOLOR_INST	opencv2/cudev/expr/color.hpp	60;"	d
CV_CUDEV_EXPR_UNARY_FUNC	opencv2/cudev/expr/unary_func.hpp	60;"	d
CV_CUDEV_EXPR_UNARY_FUNC	opencv2/cudev/expr/unary_func.hpp	90;"	d
CV_CUDEV_EXPR_UNOP_INST	opencv2/cudev/expr/unary_op.hpp	63;"	d
CV_CUDEV_EXPR_UNOP_INST	opencv2/cudev/expr/unary_op.hpp	93;"	d
CV_CUDEV_GRAY2RGB5x5_INST	opencv2/cudev/functional/color_cvt.hpp	457;"	d
CV_CUDEV_GRAY2RGB5x5_INST	opencv2/cudev/functional/color_cvt.hpp	463;"	d
CV_CUDEV_GRAY2RGB_INST	opencv2/cudev/functional/color_cvt.hpp	89;"	d
CV_CUDEV_GRAY2RGB_INST	opencv2/cudev/functional/color_cvt.hpp	97;"	d
CV_CUDEV_HLS2RGB_INST	opencv2/cudev/functional/color_cvt.hpp	290;"	d
CV_CUDEV_HLS2RGB_INST	opencv2/cudev/functional/color_cvt.hpp	313;"	d
CV_CUDEV_HSV2RGB_INST	opencv2/cudev/functional/color_cvt.hpp	236;"	d
CV_CUDEV_HSV2RGB_INST	opencv2/cudev/functional/color_cvt.hpp	259;"	d
CV_CUDEV_IMPLEMENT_SCALAR_BINARY_FUNC	opencv2/core/cuda/vec_math.hpp	814;"	d
CV_CUDEV_IMPLEMENT_SCALAR_BINARY_FUNC	opencv2/core/cuda/vec_math.hpp	924;"	d
CV_CUDEV_IMPLEMENT_SCALAR_BINARY_FUNC	opencv2/cudev/util/vec_math.hpp	825;"	d
CV_CUDEV_IMPLEMENT_SCALAR_BINARY_FUNC	opencv2/cudev/util/vec_math.hpp	935;"	d
CV_CUDEV_IMPLEMENT_SCALAR_BINARY_OP	opencv2/core/cuda/vec_math.hpp	537;"	d
CV_CUDEV_IMPLEMENT_SCALAR_BINARY_OP	opencv2/core/cuda/vec_math.hpp	752;"	d
CV_CUDEV_IMPLEMENT_SCALAR_BINARY_OP	opencv2/cudev/util/vec_math.hpp	548;"	d
CV_CUDEV_IMPLEMENT_SCALAR_BINARY_OP	opencv2/cudev/util/vec_math.hpp	763;"	d
CV_CUDEV_IMPLEMENT_VEC_BINARY_FUNC	opencv2/core/cuda/vec_math.hpp	756;"	d
CV_CUDEV_IMPLEMENT_VEC_BINARY_FUNC	opencv2/core/cuda/vec_math.hpp	810;"	d
CV_CUDEV_IMPLEMENT_VEC_BINARY_FUNC	opencv2/cudev/util/vec_math.hpp	767;"	d
CV_CUDEV_IMPLEMENT_VEC_BINARY_FUNC	opencv2/cudev/util/vec_math.hpp	821;"	d
CV_CUDEV_IMPLEMENT_VEC_BINARY_OP	opencv2/core/cuda/vec_math.hpp	386;"	d
CV_CUDEV_IMPLEMENT_VEC_BINARY_OP	opencv2/core/cuda/vec_math.hpp	533;"	d
CV_CUDEV_IMPLEMENT_VEC_BINARY_OP	opencv2/cudev/util/vec_math.hpp	397;"	d
CV_CUDEV_IMPLEMENT_VEC_BINARY_OP	opencv2/cudev/util/vec_math.hpp	544;"	d
CV_CUDEV_IMPLEMENT_VEC_UNARY_FUNC	opencv2/core/cuda/vec_math.hpp	184;"	d
CV_CUDEV_IMPLEMENT_VEC_UNARY_FUNC	opencv2/core/cuda/vec_math.hpp	382;"	d
CV_CUDEV_IMPLEMENT_VEC_UNARY_FUNC	opencv2/cudev/util/vec_math.hpp	182;"	d
CV_CUDEV_IMPLEMENT_VEC_UNARY_FUNC	opencv2/cudev/util/vec_math.hpp	393;"	d
CV_CUDEV_IMPLEMENT_VEC_UNARY_OP	opencv2/core/cuda/vec_math.hpp	140;"	d
CV_CUDEV_IMPLEMENT_VEC_UNARY_OP	opencv2/core/cuda/vec_math.hpp	180;"	d
CV_CUDEV_IMPLEMENT_VEC_UNARY_OP	opencv2/cudev/util/vec_math.hpp	138;"	d
CV_CUDEV_IMPLEMENT_VEC_UNARY_OP	opencv2/cudev/util/vec_math.hpp	178;"	d
CV_CUDEV_Lab2RGB_INST	opencv2/cudev/functional/color_cvt.hpp	344;"	d
CV_CUDEV_Lab2RGB_INST	opencv2/cudev/functional/color_cvt.hpp	367;"	d
CV_CUDEV_Luv2RGB_INST	opencv2/cudev/functional/color_cvt.hpp	398;"	d
CV_CUDEV_Luv2RGB_INST	opencv2/cudev/functional/color_cvt.hpp	421;"	d
CV_CUDEV_MAKE_VEC_INST	opencv2/cudev/util/vec_traits.hpp	60;"	d
CV_CUDEV_MAKE_VEC_INST	opencv2/cudev/util/vec_traits.hpp	74;"	d
CV_CUDEV_MINMAX_INST	opencv2/cudev/functional/functional.hpp	328;"	d
CV_CUDEV_MINMAX_INST	opencv2/cudev/functional/functional.hpp	348;"	d
CV_CUDEV_RGB2GRAY_INST	opencv2/cudev/functional/color_cvt.hpp	75;"	d
CV_CUDEV_RGB2GRAY_INST	opencv2/cudev/functional/color_cvt.hpp	85;"	d
CV_CUDEV_RGB2HLS_INST	opencv2/cudev/functional/color_cvt.hpp	263;"	d
CV_CUDEV_RGB2HLS_INST	opencv2/cudev/functional/color_cvt.hpp	286;"	d
CV_CUDEV_RGB2HSV_INST	opencv2/cudev/functional/color_cvt.hpp	209;"	d
CV_CUDEV_RGB2HSV_INST	opencv2/cudev/functional/color_cvt.hpp	232;"	d
CV_CUDEV_RGB2Lab_INST	opencv2/cudev/functional/color_cvt.hpp	317;"	d
CV_CUDEV_RGB2Lab_INST	opencv2/cudev/functional/color_cvt.hpp	340;"	d
CV_CUDEV_RGB2Luv_INST	opencv2/cudev/functional/color_cvt.hpp	371;"	d
CV_CUDEV_RGB2Luv_INST	opencv2/cudev/functional/color_cvt.hpp	394;"	d
CV_CUDEV_RGB2RGB5x5_INST	opencv2/cudev/functional/color_cvt.hpp	425;"	d
CV_CUDEV_RGB2RGB5x5_INST	opencv2/cudev/functional/color_cvt.hpp	437;"	d
CV_CUDEV_RGB2RGB_INST	opencv2/cudev/functional/color_cvt.hpp	59;"	d
CV_CUDEV_RGB2RGB_INST	opencv2/cudev/functional/color_cvt.hpp	71;"	d
CV_CUDEV_RGB2XYZ_INST	opencv2/cudev/functional/color_cvt.hpp	173;"	d
CV_CUDEV_RGB2XYZ_INST	opencv2/cudev/functional/color_cvt.hpp	187;"	d
CV_CUDEV_RGB2YCrCb_INST	opencv2/cudev/functional/color_cvt.hpp	137;"	d
CV_CUDEV_RGB2YCrCb_INST	opencv2/cudev/functional/color_cvt.hpp	151;"	d
CV_CUDEV_RGB2YUV_INST	opencv2/cudev/functional/color_cvt.hpp	101;"	d
CV_CUDEV_RGB2YUV_INST	opencv2/cudev/functional/color_cvt.hpp	115;"	d
CV_CUDEV_RGB5x52GRAY_INST	opencv2/cudev/functional/color_cvt.hpp	467;"	d
CV_CUDEV_RGB5x52GRAY_INST	opencv2/cudev/functional/color_cvt.hpp	473;"	d
CV_CUDEV_RGB5x52RGB_INST	opencv2/cudev/functional/color_cvt.hpp	441;"	d
CV_CUDEV_RGB5x52RGB_INST	opencv2/cudev/functional/color_cvt.hpp	453;"	d
CV_CUDEV_SAFE_CALL	opencv2/cudev/common.hpp	76;"	d
CV_CUDEV_SHFL_DOWN_VEC_INST	opencv2/cudev/warp/shuffle.hpp	289;"	d
CV_CUDEV_SHFL_DOWN_VEC_INST	opencv2/cudev/warp/shuffle.hpp	330;"	d
CV_CUDEV_SHFL_UP_VEC_INST	opencv2/cudev/warp/shuffle.hpp	198;"	d
CV_CUDEV_SHFL_UP_VEC_INST	opencv2/cudev/warp/shuffle.hpp	239;"	d
CV_CUDEV_SHFL_VEC_INST	opencv2/cudev/warp/shuffle.hpp	107;"	d
CV_CUDEV_SHFL_VEC_INST	opencv2/cudev/warp/shuffle.hpp	148;"	d
CV_CUDEV_SHFL_XOR_VEC_INST	opencv2/cudev/warp/shuffle.hpp	380;"	d
CV_CUDEV_SHFL_XOR_VEC_INST	opencv2/cudev/warp/shuffle.hpp	421;"	d
CV_CUDEV_UNARY_FUNCTION_INST	opencv2/cudev/functional/functional.hpp	456;"	d
CV_CUDEV_UNARY_FUNCTION_INST	opencv2/cudev/functional/functional.hpp	541;"	d
CV_CUDEV_VEC_TRAITS_INST	opencv2/cudev/util/vec_traits.hpp	140;"	d
CV_CUDEV_VEC_TRAITS_INST	opencv2/cudev/util/vec_traits.hpp	90;"	d
CV_CUDEV_XYZ2RGB_INST	opencv2/cudev/functional/color_cvt.hpp	191;"	d
CV_CUDEV_XYZ2RGB_INST	opencv2/cudev/functional/color_cvt.hpp	205;"	d
CV_CUDEV_YCrCb2RGB_INST	opencv2/cudev/functional/color_cvt.hpp	155;"	d
CV_CUDEV_YCrCb2RGB_INST	opencv2/cudev/functional/color_cvt.hpp	169;"	d
CV_CUDEV_YUV2RGB_INST	opencv2/cudev/functional/color_cvt.hpp	119;"	d
CV_CUDEV_YUV2RGB_INST	opencv2/cudev/functional/color_cvt.hpp	133;"	d
CV_CURRENT_POINT	opencv2/core/types_c.h	1631;"	d
CV_CVTIMG_FLIP	opencv2/imgcodecs/imgcodecs_c.h	/^    CV_CVTIMG_FLIP      =1,$/;"	e	enum:__anon90
CV_CVTIMG_SWAP_RB	opencv2/imgcodecs/imgcodecs_c.h	/^    CV_CVTIMG_SWAP_RB   =2$/;"	e	enum:__anon90
CV_CXX_MOVE_SEMANTICS	opencv2/core/cvdef.h	467;"	d
CV_CXX_MOVE_SEMANTICS	opencv2/core/cvdef.h	470;"	d
CV_CXX_MOVE_SEMANTICS	opencv2/core/cvdef.h	475;"	d
CV_DECL_ALIGNED	opencv2/core/cvdef.h	100;"	d
CV_DECL_ALIGNED	opencv2/core/cvdef.h	102;"	d
CV_DECL_ALIGNED	opencv2/core/cvdef.h	98;"	d
CV_DEFAULT	opencv2/core/types_c.h	78;"	d
CV_DEFAULT	opencv2/core/types_c.h	80;"	d
CV_DEPTH_MAX	opencv2/core/hal/interface.h	65;"	d
CV_DESCALE	opencv2/core/cuda/detail/color_detail.hpp	1974;"	d
CV_DESCALE	opencv2/core/cuda/detail/color_detail.hpp	57;"	d
CV_DIFF	opencv2/core/core_c.h	1461;"	d
CV_DIFF_C	opencv2/core/core_c.h	1464;"	d
CV_DIFF_L1	opencv2/core/core_c.h	1465;"	d
CV_DIFF_L2	opencv2/core/core_c.h	1466;"	d
CV_DIST_C	opencv2/imgproc/types_c.h	/^    CV_DIST_C       =3,   \/**< distance = max(|x1-x2|,|y1-y2|) *\/$/;"	e	enum:__anon370
CV_DIST_FAIR	opencv2/imgproc/types_c.h	/^    CV_DIST_FAIR    =5,   \/**< distance = c^2(|x|\/c-log(1+|x|\/c)), c = 1.3998 *\/$/;"	e	enum:__anon370
CV_DIST_HUBER	opencv2/imgproc/types_c.h	/^    CV_DIST_HUBER   =7    \/**< distance = |x|<c ? x^2\/2 : c(|x|-c\/2), c=1.345 *\/$/;"	e	enum:__anon370
CV_DIST_L1	opencv2/imgproc/types_c.h	/^    CV_DIST_L1      =1,   \/**< distance = |x1-x2| + |y1-y2| *\/$/;"	e	enum:__anon370
CV_DIST_L12	opencv2/imgproc/types_c.h	/^    CV_DIST_L12     =4,   \/**< L1-L2 metric: distance = 2(sqrt(1+x*x\/2) - 1)) *\/$/;"	e	enum:__anon370
CV_DIST_L2	opencv2/imgproc/types_c.h	/^    CV_DIST_L2      =2,   \/**< the simple euclidean distance *\/$/;"	e	enum:__anon370
CV_DIST_LABEL_CCOMP	opencv2/imgproc/types_c.h	/^  CV_DIST_LABEL_CCOMP = 0,$/;"	e	enum:__anon369
CV_DIST_LABEL_PIXEL	opencv2/imgproc/types_c.h	/^  CV_DIST_LABEL_PIXEL = 1$/;"	e	enum:__anon369
CV_DIST_MASK_3	opencv2/imgproc/types_c.h	/^    CV_DIST_MASK_3   =3,$/;"	e	enum:__anon368
CV_DIST_MASK_5	opencv2/imgproc/types_c.h	/^    CV_DIST_MASK_5   =5,$/;"	e	enum:__anon368
CV_DIST_MASK_PRECISE	opencv2/imgproc/types_c.h	/^    CV_DIST_MASK_PRECISE =0$/;"	e	enum:__anon368
CV_DIST_USER	opencv2/imgproc/types_c.h	/^    CV_DIST_USER    =-1,  \/**< User defined distance *\/$/;"	e	enum:__anon370
CV_DIST_WELSCH	opencv2/imgproc/types_c.h	/^    CV_DIST_WELSCH  =6,   \/**< distance = c^2\/2(1-exp(-(x\/c)^2)), c = 2.9846 *\/$/;"	e	enum:__anon370
CV_DIV_BY_ZERO_ERR	opencv2/core/private.hpp	/^    CV_DIV_BY_ZERO_ERR          =  -11, \/\/ipp comp$/;"	e	enum:CvStatus
CV_DLS	opencv2/calib3d/calib3d_c.h	/^    CV_DLS = 3 \/\/ Joel A. Hesch and Stergios I. Roumeliotis. "A Direct Least-Squares (DLS) Method for PnP"$/;"	e	enum:__anon338
CV_DO_PRAGMA	opencv/cv.h	47;"	d
CV_DO_PRAGMA	opencv/cv.h	53;"	d
CV_DO_PRAGMA	opencv/cv.h	56;"	d
CV_DO_PRAGMA	opencv2/core/base.hpp	309;"	d
CV_DO_PRAGMA	opencv2/core/base.hpp	311;"	d
CV_DO_PRAGMA	opencv2/core/base.hpp	313;"	d
CV_DXT_FORWARD	opencv2/core/core_c.h	1507;"	d
CV_DXT_INVERSE	opencv2/core/core_c.h	1508;"	d
CV_DXT_INVERSE_SCALE	opencv2/core/core_c.h	1511;"	d
CV_DXT_INV_SCALE	opencv2/core/core_c.h	1510;"	d
CV_DXT_MUL_CONJ	opencv2/core/core_c.h	1513;"	d
CV_DXT_ROWS	opencv2/core/core_c.h	1512;"	d
CV_DXT_SCALE	opencv2/core/core_c.h	1509;"	d
CV_DbgAssert	opencv2/core/base.hpp	422;"	d
CV_DbgAssert	opencv2/core/base.hpp	424;"	d
CV_ELEM_SIZE	opencv2/core/cvdef.h	406;"	d
CV_ELEM_SIZE1	opencv2/core/cvdef.h	402;"	d
CV_ENABLE_UNROLLED	opencv2/core/cvdef.h	92;"	d
CV_ENABLE_UNROLLED	opencv2/core/cvdef.h	94;"	d
CV_EPNP	opencv2/calib3d/calib3d_c.h	/^    CV_EPNP = 1, \/\/ F.Moreno-Noguer, V.Lepetit and P.Fua "EPnP: Efficient Perspective-n-Point Camera Pose Estimation"$/;"	e	enum:__anon338
CV_ERROR	opencv2/core/core_c.h	2720;"	d
CV_EVENT_FLAG_ALTKEY	opencv2/highgui/highgui_c.h	/^    CV_EVENT_FLAG_ALTKEY    =32$/;"	e	enum:__anon68
CV_EVENT_FLAG_CTRLKEY	opencv2/highgui/highgui_c.h	/^    CV_EVENT_FLAG_CTRLKEY   =8,$/;"	e	enum:__anon68
CV_EVENT_FLAG_LBUTTON	opencv2/highgui/highgui_c.h	/^    CV_EVENT_FLAG_LBUTTON   =1,$/;"	e	enum:__anon68
CV_EVENT_FLAG_MBUTTON	opencv2/highgui/highgui_c.h	/^    CV_EVENT_FLAG_MBUTTON   =4,$/;"	e	enum:__anon68
CV_EVENT_FLAG_RBUTTON	opencv2/highgui/highgui_c.h	/^    CV_EVENT_FLAG_RBUTTON   =2,$/;"	e	enum:__anon68
CV_EVENT_FLAG_SHIFTKEY	opencv2/highgui/highgui_c.h	/^    CV_EVENT_FLAG_SHIFTKEY  =16,$/;"	e	enum:__anon68
CV_EVENT_LBUTTONDBLCLK	opencv2/highgui/highgui_c.h	/^    CV_EVENT_LBUTTONDBLCLK  =7,$/;"	e	enum:__anon67
CV_EVENT_LBUTTONDOWN	opencv2/highgui/highgui_c.h	/^    CV_EVENT_LBUTTONDOWN    =1,$/;"	e	enum:__anon67
CV_EVENT_LBUTTONUP	opencv2/highgui/highgui_c.h	/^    CV_EVENT_LBUTTONUP      =4,$/;"	e	enum:__anon67
CV_EVENT_MBUTTONDBLCLK	opencv2/highgui/highgui_c.h	/^    CV_EVENT_MBUTTONDBLCLK  =9,$/;"	e	enum:__anon67
CV_EVENT_MBUTTONDOWN	opencv2/highgui/highgui_c.h	/^    CV_EVENT_MBUTTONDOWN    =3,$/;"	e	enum:__anon67
CV_EVENT_MBUTTONUP	opencv2/highgui/highgui_c.h	/^    CV_EVENT_MBUTTONUP      =6,$/;"	e	enum:__anon67
CV_EVENT_MOUSEHWHEEL	opencv2/highgui/highgui_c.h	/^    CV_EVENT_MOUSEHWHEEL    =11$/;"	e	enum:__anon67
CV_EVENT_MOUSEMOVE	opencv2/highgui/highgui_c.h	/^    CV_EVENT_MOUSEMOVE      =0,$/;"	e	enum:__anon67
CV_EVENT_MOUSEWHEEL	opencv2/highgui/highgui_c.h	/^    CV_EVENT_MOUSEWHEEL     =10,$/;"	e	enum:__anon67
CV_EVENT_RBUTTONDBLCLK	opencv2/highgui/highgui_c.h	/^    CV_EVENT_RBUTTONDBLCLK  =8,$/;"	e	enum:__anon67
CV_EVENT_RBUTTONDOWN	opencv2/highgui/highgui_c.h	/^    CV_EVENT_RBUTTONDOWN    =2,$/;"	e	enum:__anon67
CV_EVENT_RBUTTONUP	opencv2/highgui/highgui_c.h	/^    CV_EVENT_RBUTTONUP      =5,$/;"	e	enum:__anon67
CV_EXPORTS	opencv2/core/cvdef.h	357;"	d
CV_EXPORTS	opencv2/core/cvdef.h	359;"	d
CV_EXPORTS	opencv2/core/cvdef.h	361;"	d
CV_EXPORTS_AS	opencv2/core/cvdef.h	375;"	d
CV_EXPORTS_W	opencv2/core/cvdef.h	373;"	d
CV_EXPORTS_W_MAP	opencv2/core/cvdef.h	376;"	d
CV_EXPORTS_W_SIMPLE	opencv2/core/cvdef.h	374;"	d
CV_EXTERN_C	opencv2/core/cvdef.h	366;"	d
CV_EXTERN_C	opencv2/core/cvdef.h	368;"	d
CV_EXTERN_C_FUNCPTR	opencv2/core/types_c.h	86;"	d
CV_EXTERN_C_FUNCPTR	opencv2/core/types_c.h	88;"	d
CV_ErrModeLeaf	opencv2/core/core_c.h	2647;"	d
CV_ErrModeParent	opencv2/core/core_c.h	2648;"	d
CV_ErrModeSilent	opencv2/core/core_c.h	2649;"	d
CV_Error	opencv2/core/base.hpp	390;"	d
CV_ErrorNoReturn	opencv2/core/base.hpp	415;"	d
CV_ErrorNoReturn_	opencv2/core/base.hpp	418;"	d
CV_Error_	opencv2/core/base.hpp	404;"	d
CV_FILLED	opencv2/imgproc/imgproc_c.h	986;"	d
CV_FLOODFILL_FIXED_RANGE	opencv2/imgproc/types_c.h	/^    CV_FLOODFILL_FIXED_RANGE =(1 << 16),$/;"	e	enum:__anon373
CV_FLOODFILL_MASK_ONLY	opencv2/imgproc/types_c.h	/^    CV_FLOODFILL_MASK_ONLY   =(1 << 17)$/;"	e	enum:__anon373
CV_FMA3	opencv2/core/cvdef.h	211;"	d
CV_FMA3	opencv2/core/cvdef.h	263;"	d
CV_FM_7POINT	opencv2/calib3d/calib3d_c.h	83;"	d
CV_FM_8POINT	opencv2/calib3d/calib3d_c.h	84;"	d
CV_FM_LMEDS	opencv2/calib3d/calib3d_c.h	91;"	d
CV_FM_LMEDS_ONLY	opencv2/calib3d/calib3d_c.h	89;"	d
CV_FM_RANSAC	opencv2/calib3d/calib3d_c.h	92;"	d
CV_FM_RANSAC_ONLY	opencv2/calib3d/calib3d_c.h	90;"	d
CV_FONT_BLACK	opencv2/highgui/highgui_c.h	/^        CV_FONT_BLACK           = 87 \/\/QFont::Black$/;"	e	enum:__anon63
CV_FONT_BOLD	opencv2/highgui/highgui_c.h	/^        CV_FONT_BOLD            = 75,\/\/QFont::Bold,$/;"	e	enum:__anon63
CV_FONT_DEMIBOLD	opencv2/highgui/highgui_c.h	/^        CV_FONT_DEMIBOLD        = 63,\/\/QFont::DemiBold,$/;"	e	enum:__anon63
CV_FONT_HERSHEY_COMPLEX	opencv2/imgproc/imgproc_c.h	1106;"	d
CV_FONT_HERSHEY_COMPLEX_SMALL	opencv2/imgproc/imgproc_c.h	1108;"	d
CV_FONT_HERSHEY_DUPLEX	opencv2/imgproc/imgproc_c.h	1105;"	d
CV_FONT_HERSHEY_PLAIN	opencv2/imgproc/imgproc_c.h	1104;"	d
CV_FONT_HERSHEY_SCRIPT_COMPLEX	opencv2/imgproc/imgproc_c.h	1110;"	d
CV_FONT_HERSHEY_SCRIPT_SIMPLEX	opencv2/imgproc/imgproc_c.h	1109;"	d
CV_FONT_HERSHEY_SIMPLEX	opencv2/imgproc/imgproc_c.h	1103;"	d
CV_FONT_HERSHEY_TRIPLEX	opencv2/imgproc/imgproc_c.h	1107;"	d
CV_FONT_ITALIC	opencv2/imgproc/imgproc_c.h	1112;"	d
CV_FONT_LIGHT	opencv2/highgui/highgui_c.h	/^enum {  CV_FONT_LIGHT           = 25,\/\/QFont::Light,$/;"	e	enum:__anon63
CV_FONT_NORMAL	opencv2/highgui/highgui_c.h	/^        CV_FONT_NORMAL          = 50,\/\/QFont::Normal,$/;"	e	enum:__anon63
CV_FONT_VECTOR0	opencv2/imgproc/imgproc_c.h	1114;"	d
CV_FOURCC	opencv2/videoio/videoio_c.h	/^CV_INLINE int CV_FOURCC(char c1, char c2, char c3, char c4)$/;"	f
CV_FOURCC_DEFAULT	opencv2/videoio/videoio_c.h	555;"	d
CV_FOURCC_MACRO	opencv2/videoio/videoio_c.h	537;"	d
CV_FOURCC_PROMPT	opencv2/videoio/videoio_c.h	553;"	d
CV_FP16	opencv2/core/private.hpp	71;"	d
CV_FP16	opencv2/core/private.hpp	73;"	d
CV_FP16	opencv2/core/private.hpp	77;"	d
CV_FP16_TYPE	opencv2/core/cvdef.h	308;"	d
CV_FP16_TYPE	opencv2/core/cvdef.h	310;"	d
CV_FRONT	opencv2/core/core_c.h	1607;"	d
CV_FUNCNAME	opencv2/core/core_c.h	2708;"	d
CV_FUNCNAME	opencv2/core/core_c.h	2711;"	d
CV_Func	opencv2/core/base.hpp	373;"	d
CV_Func	opencv2/core/base.hpp	375;"	d
CV_Func	opencv2/core/base.hpp	377;"	d
CV_GAUSSIAN	opencv2/imgproc/types_c.h	/^    CV_GAUSSIAN  =2,$/;"	e	enum:SmoothMethod_c
CV_GAUSSIAN_5x5	opencv2/imgproc/types_c.h	/^    CV_GAUSSIAN_5x5 = 7$/;"	e	enum:__anon356
CV_GEMM_A_T	opencv2/core/core_c.h	1286;"	d
CV_GEMM_B_T	opencv2/core/core_c.h	1287;"	d
CV_GEMM_C_T	opencv2/core/core_c.h	1288;"	d
CV_GET_SEQ_ELEM	opencv2/core/types_c.h	1557;"	d
CV_GET_WHEEL_DELTA	opencv2/highgui/highgui_c.h	203;"	d
CV_GRAPH	opencv2/core/types_c.h	1438;"	d
CV_GRAPH_ALL_ITEMS	opencv2/core/core_c.h	1849;"	d
CV_GRAPH_ANY_EDGE	opencv2/core/core_c.h	1844;"	d
CV_GRAPH_BACKTRACKING	opencv2/core/core_c.h	1846;"	d
CV_GRAPH_BACK_EDGE	opencv2/core/core_c.h	1841;"	d
CV_GRAPH_CROSS_EDGE	opencv2/core/core_c.h	1843;"	d
CV_GRAPH_EDGE_FIELDS	opencv2/core/types_c.h	1315;"	d
CV_GRAPH_FIELDS	opencv2/core/types_c.h	1350;"	d
CV_GRAPH_FLAG_ORIENTED	opencv2/core/types_c.h	1436;"	d
CV_GRAPH_FORWARD_EDGE	opencv2/core/core_c.h	1842;"	d
CV_GRAPH_FORWARD_EDGE_FLAG	opencv2/core/core_c.h	1858;"	d
CV_GRAPH_ITEM_VISITED_FLAG	opencv2/core/core_c.h	1852;"	d
CV_GRAPH_NEW_TREE	opencv2/core/core_c.h	1845;"	d
CV_GRAPH_OVER	opencv2/core/core_c.h	1847;"	d
CV_GRAPH_SEARCH_TREE_NODE_FLAG	opencv2/core/core_c.h	1857;"	d
CV_GRAPH_TREE_EDGE	opencv2/core/core_c.h	1840;"	d
CV_GRAPH_VERTEX	opencv2/core/core_c.h	1839;"	d
CV_GRAPH_VERTEX_FIELDS	opencv2/core/types_c.h	1322;"	d
CV_GRAY2BGR	opencv2/imgproc/types_c.h	/^    CV_GRAY2BGR    =8,$/;"	e	enum:__anon358
CV_GRAY2BGR555	opencv2/imgproc/types_c.h	/^    CV_GRAY2BGR555 =30,$/;"	e	enum:__anon358
CV_GRAY2BGR565	opencv2/imgproc/types_c.h	/^    CV_GRAY2BGR565 =20,$/;"	e	enum:__anon358
CV_GRAY2BGRA	opencv2/imgproc/types_c.h	/^    CV_GRAY2BGRA   =9,$/;"	e	enum:__anon358
CV_GRAY2RGB	opencv2/imgproc/types_c.h	/^    CV_GRAY2RGB    =CV_GRAY2BGR,$/;"	e	enum:__anon358
CV_GRAY2RGBA	opencv2/imgproc/types_c.h	/^    CV_GRAY2RGBA   =CV_GRAY2BGRA,$/;"	e	enum:__anon358
CV_GUI_EXPANDED	opencv2/highgui/highgui_c.h	/^    CV_GUI_EXPANDED         = 0x00000000, \/\/status bar and tool bar$/;"	e	enum:__anon66
CV_GUI_NORMAL	opencv2/highgui/highgui_c.h	/^    CV_GUI_NORMAL           = 0x00000010, \/\/old fashious way$/;"	e	enum:__anon66
CV_GpuApiCallError	opencv2/core/types_c.h	/^ CV_GpuApiCallError=           -217,$/;"	e	enum:__anon324
CV_GpuNotSupported	opencv2/core/types_c.h	/^ CV_GpuNotSupported=           -216,$/;"	e	enum:__anon324
CV_HAAR_DO_CANNY_PRUNING	opencv2/objdetect/objdetect_c.h	130;"	d
CV_HAAR_DO_ROUGH_SEARCH	opencv2/objdetect/objdetect_c.h	133;"	d
CV_HAAR_FEATURE_MAX	opencv2/objdetect/objdetect_c.h	71;"	d
CV_HAAR_FIND_BIGGEST_OBJECT	opencv2/objdetect/objdetect_c.h	132;"	d
CV_HAAR_MAGIC_VAL	opencv2/objdetect/objdetect_c.h	64;"	d
CV_HAAR_SCALE_IMAGE	opencv2/objdetect/objdetect_c.h	131;"	d
CV_HAL_BORDER_CONSTANT	opencv2/core/hal/interface.h	139;"	d
CV_HAL_BORDER_ISOLATED	opencv2/core/hal/interface.h	145;"	d
CV_HAL_BORDER_REFLECT	opencv2/core/hal/interface.h	141;"	d
CV_HAL_BORDER_REFLECT_101	opencv2/core/hal/interface.h	143;"	d
CV_HAL_BORDER_REPLICATE	opencv2/core/hal/interface.h	140;"	d
CV_HAL_BORDER_TRANSPARENT	opencv2/core/hal/interface.h	144;"	d
CV_HAL_BORDER_WRAP	opencv2/core/hal/interface.h	142;"	d
CV_HAL_CMP_EQ	opencv2/core/hal/interface.h	128;"	d
CV_HAL_CMP_GE	opencv2/core/hal/interface.h	130;"	d
CV_HAL_CMP_GT	opencv2/core/hal/interface.h	129;"	d
CV_HAL_CMP_LE	opencv2/core/hal/interface.h	132;"	d
CV_HAL_CMP_LT	opencv2/core/hal/interface.h	131;"	d
CV_HAL_CMP_NE	opencv2/core/hal/interface.h	133;"	d
CV_HAL_DFT_COMPLEX_OUTPUT	opencv2/core/hal/interface.h	153;"	d
CV_HAL_DFT_INVERSE	opencv2/core/hal/interface.h	150;"	d
CV_HAL_DFT_IS_CONTINUOUS	opencv2/core/hal/interface.h	157;"	d
CV_HAL_DFT_IS_INPLACE	opencv2/core/hal/interface.h	158;"	d
CV_HAL_DFT_REAL_OUTPUT	opencv2/core/hal/interface.h	154;"	d
CV_HAL_DFT_ROWS	opencv2/core/hal/interface.h	152;"	d
CV_HAL_DFT_SCALE	opencv2/core/hal/interface.h	151;"	d
CV_HAL_DFT_STAGE_COLS	opencv2/core/hal/interface.h	156;"	d
CV_HAL_DFT_TWO_STAGE	opencv2/core/hal/interface.h	155;"	d
CV_HAL_ERROR_NOT_IMPLEMENTED	opencv2/core/hal/interface.h	10;"	d
CV_HAL_ERROR_OK	opencv2/core/hal/interface.h	9;"	d
CV_HAL_ERROR_UNKNOWN	opencv2/core/hal/interface.h	11;"	d
CV_HAL_GEMM_1_T	opencv2/core/hal/interface.h	171;"	d
CV_HAL_GEMM_2_T	opencv2/core/hal/interface.h	172;"	d
CV_HAL_GEMM_3_T	opencv2/core/hal/interface.h	173;"	d
CV_HAL_INTER_AREA	opencv2/imgproc/hal/interface.h	13;"	d
CV_HAL_INTER_CUBIC	opencv2/imgproc/hal/interface.h	12;"	d
CV_HAL_INTER_LANCZOS4	opencv2/imgproc/hal/interface.h	14;"	d
CV_HAL_INTER_LINEAR	opencv2/imgproc/hal/interface.h	11;"	d
CV_HAL_INTER_NEAREST	opencv2/imgproc/hal/interface.h	10;"	d
CV_HAL_SVD_FULL_UV	opencv2/core/hal/interface.h	166;"	d
CV_HAL_SVD_MODIFY_A	opencv2/core/hal/interface.h	165;"	d
CV_HAL_SVD_NO_UV	opencv2/core/hal/interface.h	163;"	d
CV_HAL_SVD_SHORT_UV	opencv2/core/hal/interface.h	164;"	d
CV_HARDWARE_MAX_FEATURE	opencv2/core/cvdef.h	133;"	d
CV_HELP_IMPL_PROPERTY	opencv2/core/private.hpp	178;"	d
CV_HELP_WRAP_PROPERTY	opencv2/core/private.hpp	182;"	d
CV_HIST_ARRAY	opencv2/core/types_c.h	740;"	d
CV_HIST_HAS_RANGES	opencv2/core/types_c.h	769;"	d
CV_HIST_MAGIC_VAL	opencv2/core/types_c.h	734;"	d
CV_HIST_RANGES_FLAG	opencv2/core/types_c.h	738;"	d
CV_HIST_SPARSE	opencv2/core/types_c.h	741;"	d
CV_HIST_TREE	opencv2/core/types_c.h	742;"	d
CV_HIST_UNIFORM	opencv2/core/types_c.h	746;"	d
CV_HIST_UNIFORM_FLAG	opencv2/core/types_c.h	735;"	d
CV_HLS2BGR	opencv2/imgproc/types_c.h	/^    CV_HLS2BGR     =60,$/;"	e	enum:__anon358
CV_HLS2BGR_FULL	opencv2/imgproc/types_c.h	/^    CV_HLS2BGR_FULL = 72,$/;"	e	enum:__anon358
CV_HLS2RGB	opencv2/imgproc/types_c.h	/^    CV_HLS2RGB     =61,$/;"	e	enum:__anon358
CV_HLS2RGB_FULL	opencv2/imgproc/types_c.h	/^    CV_HLS2RGB_FULL = 73,$/;"	e	enum:__anon358
CV_HOUGH_GRADIENT	opencv2/imgproc/types_c.h	/^    CV_HOUGH_GRADIENT =3$/;"	e	enum:__anon375
CV_HOUGH_MULTI_SCALE	opencv2/imgproc/types_c.h	/^    CV_HOUGH_MULTI_SCALE =2,$/;"	e	enum:__anon375
CV_HOUGH_PROBABILISTIC	opencv2/imgproc/types_c.h	/^    CV_HOUGH_PROBABILISTIC =1,$/;"	e	enum:__anon375
CV_HOUGH_STANDARD	opencv2/imgproc/types_c.h	/^    CV_HOUGH_STANDARD =0,$/;"	e	enum:__anon375
CV_HSV2BGR	opencv2/imgproc/types_c.h	/^    CV_HSV2BGR     =54,$/;"	e	enum:__anon358
CV_HSV2BGR_FULL	opencv2/imgproc/types_c.h	/^    CV_HSV2BGR_FULL = 70,$/;"	e	enum:__anon358
CV_HSV2RGB	opencv2/imgproc/types_c.h	/^    CV_HSV2RGB     =55,$/;"	e	enum:__anon358
CV_HSV2RGB_FULL	opencv2/imgproc/types_c.h	/^    CV_HSV2RGB_FULL = 71,$/;"	e	enum:__anon358
CV_HeaderIsNull	opencv2/core/types_c.h	/^ CV_HeaderIsNull=               -9,  \/**< image header is NULL            *\/$/;"	e	enum:__anon324
CV_IABS	opencv2/core/types_c.h	190;"	d
CV_IABS	opencv2/core/types_c.h	192;"	d
CV_ICC	opencv2/core/cvdef.h	70;"	d
CV_ICC	opencv2/core/cvdef.h	72;"	d
CV_ICC	opencv2/core/cvdef.h	74;"	d
CV_ICC	opencv2/core/cvdef.h	76;"	d
CV_ICC	opencv2/core/cvdef.h	78;"	d
CV_IMAGE_ELEM	opencv2/core/types_c.h	398;"	d
CV_IMAX	opencv2/core/types_c.h	186;"	d
CV_IMGPROC_HAL_HPP	opencv2/imgproc/hal/hal.hpp	2;"	d
CV_IMIN	opencv2/core/types_c.h	184;"	d
CV_IMPL	opencv/cv.h	70;"	d
CV_IMPL	opencv2/core/types_c.h	97;"	d
CV_IMPL_ADD	opencv2/core/utility.hpp	76;"	d
CV_IMPL_IPP	opencv2/core/utility.hpp	73;"	d
CV_IMPL_MT	opencv2/core/utility.hpp	74;"	d
CV_IMPL_OCL	opencv2/core/utility.hpp	72;"	d
CV_IMPL_PLAIN	opencv2/core/utility.hpp	71;"	d
CV_IMPL_PROPERTY	opencv2/core/private.hpp	186;"	d
CV_IMPL_PROPERTY_RO	opencv2/core/private.hpp	175;"	d
CV_IMPL_PROPERTY_S	opencv2/core/private.hpp	187;"	d
CV_IMWRITE_JPEG_CHROMA_QUALITY	opencv2/imgcodecs/imgcodecs_c.h	/^    CV_IMWRITE_JPEG_CHROMA_QUALITY =6,$/;"	e	enum:__anon89
CV_IMWRITE_JPEG_LUMA_QUALITY	opencv2/imgcodecs/imgcodecs_c.h	/^    CV_IMWRITE_JPEG_LUMA_QUALITY =5,$/;"	e	enum:__anon89
CV_IMWRITE_JPEG_OPTIMIZE	opencv2/imgcodecs/imgcodecs_c.h	/^    CV_IMWRITE_JPEG_OPTIMIZE =3,$/;"	e	enum:__anon89
CV_IMWRITE_JPEG_PROGRESSIVE	opencv2/imgcodecs/imgcodecs_c.h	/^    CV_IMWRITE_JPEG_PROGRESSIVE =2,$/;"	e	enum:__anon89
CV_IMWRITE_JPEG_QUALITY	opencv2/imgcodecs/imgcodecs_c.h	/^    CV_IMWRITE_JPEG_QUALITY =1,$/;"	e	enum:__anon89
CV_IMWRITE_JPEG_RST_INTERVAL	opencv2/imgcodecs/imgcodecs_c.h	/^    CV_IMWRITE_JPEG_RST_INTERVAL =4,$/;"	e	enum:__anon89
CV_IMWRITE_PAM_FORMAT_BLACKANDWHITE	opencv2/imgcodecs/imgcodecs_c.h	/^    CV_IMWRITE_PAM_FORMAT_BLACKANDWHITE = 1,$/;"	e	enum:__anon89
CV_IMWRITE_PAM_FORMAT_GRAYSCALE	opencv2/imgcodecs/imgcodecs_c.h	/^    CV_IMWRITE_PAM_FORMAT_GRAYSCALE = 2,$/;"	e	enum:__anon89
CV_IMWRITE_PAM_FORMAT_GRAYSCALE_ALPHA	opencv2/imgcodecs/imgcodecs_c.h	/^    CV_IMWRITE_PAM_FORMAT_GRAYSCALE_ALPHA = 3,$/;"	e	enum:__anon89
CV_IMWRITE_PAM_FORMAT_NULL	opencv2/imgcodecs/imgcodecs_c.h	/^    CV_IMWRITE_PAM_FORMAT_NULL = 0,$/;"	e	enum:__anon89
CV_IMWRITE_PAM_FORMAT_RGB	opencv2/imgcodecs/imgcodecs_c.h	/^    CV_IMWRITE_PAM_FORMAT_RGB = 4,$/;"	e	enum:__anon89
CV_IMWRITE_PAM_FORMAT_RGB_ALPHA	opencv2/imgcodecs/imgcodecs_c.h	/^    CV_IMWRITE_PAM_FORMAT_RGB_ALPHA = 5,$/;"	e	enum:__anon89
CV_IMWRITE_PAM_TUPLETYPE	opencv2/imgcodecs/imgcodecs_c.h	/^    CV_IMWRITE_PAM_TUPLETYPE = 128,$/;"	e	enum:__anon89
CV_IMWRITE_PNG_BILEVEL	opencv2/imgcodecs/imgcodecs_c.h	/^    CV_IMWRITE_PNG_BILEVEL =18,$/;"	e	enum:__anon89
CV_IMWRITE_PNG_COMPRESSION	opencv2/imgcodecs/imgcodecs_c.h	/^    CV_IMWRITE_PNG_COMPRESSION =16,$/;"	e	enum:__anon89
CV_IMWRITE_PNG_STRATEGY	opencv2/imgcodecs/imgcodecs_c.h	/^    CV_IMWRITE_PNG_STRATEGY =17,$/;"	e	enum:__anon89
CV_IMWRITE_PNG_STRATEGY_DEFAULT	opencv2/imgcodecs/imgcodecs_c.h	/^    CV_IMWRITE_PNG_STRATEGY_DEFAULT =0,$/;"	e	enum:__anon89
CV_IMWRITE_PNG_STRATEGY_FILTERED	opencv2/imgcodecs/imgcodecs_c.h	/^    CV_IMWRITE_PNG_STRATEGY_FILTERED =1,$/;"	e	enum:__anon89
CV_IMWRITE_PNG_STRATEGY_FIXED	opencv2/imgcodecs/imgcodecs_c.h	/^    CV_IMWRITE_PNG_STRATEGY_FIXED =4,$/;"	e	enum:__anon89
CV_IMWRITE_PNG_STRATEGY_HUFFMAN_ONLY	opencv2/imgcodecs/imgcodecs_c.h	/^    CV_IMWRITE_PNG_STRATEGY_HUFFMAN_ONLY =2,$/;"	e	enum:__anon89
CV_IMWRITE_PNG_STRATEGY_RLE	opencv2/imgcodecs/imgcodecs_c.h	/^    CV_IMWRITE_PNG_STRATEGY_RLE =3,$/;"	e	enum:__anon89
CV_IMWRITE_PXM_BINARY	opencv2/imgcodecs/imgcodecs_c.h	/^    CV_IMWRITE_PXM_BINARY =32,$/;"	e	enum:__anon89
CV_IMWRITE_WEBP_QUALITY	opencv2/imgcodecs/imgcodecs_c.h	/^    CV_IMWRITE_WEBP_QUALITY =64,$/;"	e	enum:__anon89
CV_INIT_3X3_DELTAS	opencv2/imgproc/types_c.h	481;"	d
CV_INLINE	opencv2/core/cvdef.h	83;"	d
CV_INLINE	opencv2/core/cvdef.h	85;"	d
CV_INLINE	opencv2/core/cvdef.h	87;"	d
CV_INPAINT_NS	opencv2/photo/photo_c.h	/^    CV_INPAINT_NS      =0,$/;"	e	enum:InpaintingModes
CV_INPAINT_TELEA	opencv2/photo/photo_c.h	/^    CV_INPAINT_TELEA   =1$/;"	e	enum:InpaintingModes
CV_INPLACE_NOT_SUPPORTED_ERR	opencv2/core/private.hpp	/^    CV_INPLACE_NOT_SUPPORTED_ERR= -112,$/;"	e	enum:CvStatus
CV_INSTRUMENT_FUN_IPP	opencv2/core/private.hpp	553;"	d
CV_INSTRUMENT_FUN_RT_META	opencv2/core/private.hpp	502;"	d
CV_INSTRUMENT_FUN_RV_META	opencv2/core/private.hpp	523;"	d
CV_INSTRUMENT_GET_RETURN_ADDRESS	opencv2/core/private.hpp	491;"	d
CV_INSTRUMENT_MARK_IPP	opencv2/core/private.hpp	555;"	d
CV_INSTRUMENT_MARK_META	opencv2/core/private.hpp	539;"	d
CV_INSTRUMENT_MARK_OPENCL	opencv2/core/private.hpp	565;"	d
CV_INSTRUMENT_REGION	opencv2/core/private.hpp	543;"	d
CV_INSTRUMENT_REGION_CUSTOM_META	opencv2/core/private.hpp	498;"	d
CV_INSTRUMENT_REGION_IPP	opencv2/core/private.hpp	551;"	d
CV_INSTRUMENT_REGION_META	opencv2/core/private.hpp	497;"	d
CV_INSTRUMENT_REGION_MT_FORK	opencv2/core/private.hpp	547;"	d
CV_INSTRUMENT_REGION_NAME	opencv2/core/private.hpp	545;"	d
CV_INSTRUMENT_REGION_OPENCL	opencv2/core/private.hpp	559;"	d
CV_INSTRUMENT_REGION_OPENCL_COMPILE	opencv2/core/private.hpp	561;"	d
CV_INSTRUMENT_REGION_OPENCL_RUN	opencv2/core/private.hpp	563;"	d
CV_INTER_AREA	opencv2/imgproc/types_c.h	/^    CV_INTER_AREA      =3,$/;"	e	enum:__anon359
CV_INTER_CUBIC	opencv2/imgproc/types_c.h	/^    CV_INTER_CUBIC     =2,$/;"	e	enum:__anon359
CV_INTER_LANCZOS4	opencv2/imgproc/types_c.h	/^    CV_INTER_LANCZOS4  =4$/;"	e	enum:__anon359
CV_INTER_LINEAR	opencv2/imgproc/types_c.h	/^    CV_INTER_LINEAR    =1,$/;"	e	enum:__anon359
CV_INTER_NN	opencv2/imgproc/types_c.h	/^    CV_INTER_NN        =0,$/;"	e	enum:__anon359
CV_IN_OUT	opencv2/core/cvdef.h	377;"	d
CV_IPP_CHECK	opencv2/core/private.hpp	324;"	d
CV_IPP_CHECK_COND	opencv2/core/private.hpp	323;"	d
CV_IPP_RUN	opencv2/core/private.hpp	380;"	d
CV_IPP_RUN_	opencv2/core/private.hpp	329;"	d
CV_IPP_RUN_	opencv2/core/private.hpp	345;"	d
CV_IPP_RUN_	opencv2/core/private.hpp	362;"	d
CV_IPP_RUN_	opencv2/core/private.hpp	376;"	d
CV_IPP_RUN_FAST	opencv2/core/private.hpp	369;"	d
CV_IPP_RUN_FAST	opencv2/core/private.hpp	377;"	d
CV_IS_CONT_MAT	opencv2/core/cvdef.h	395;"	d
CV_IS_GRAPH	opencv2/core/types_c.h	1501;"	d
CV_IS_GRAPH_EDGE_VISITED	opencv2/core/core_c.h	1855;"	d
CV_IS_GRAPH_ORIENTED	opencv2/core/types_c.h	1504;"	d
CV_IS_GRAPH_VERTEX_VISITED	opencv2/core/core_c.h	1853;"	d
CV_IS_HAAR_CLASSIFIER	opencv2/objdetect/objdetect_c.h	67;"	d
CV_IS_HIST	opencv2/core/types_c.h	758;"	d
CV_IS_IMAGE	opencv2/core/types_c.h	389;"	d
CV_IS_IMAGE_HDR	opencv2/core/types_c.h	386;"	d
CV_IS_MASK_ARR	opencv2/core/types_c.h	482;"	d
CV_IS_MAT	opencv2/core/types_c.h	479;"	d
CV_IS_MATND	opencv2/core/types_c.h	660;"	d
CV_IS_MATND_HDR	opencv2/core/types_c.h	657;"	d
CV_IS_MAT_CONST	opencv2/core/types_c.h	497;"	d
CV_IS_MAT_CONT	opencv2/core/cvdef.h	394;"	d
CV_IS_MAT_HDR	opencv2/core/types_c.h	469;"	d
CV_IS_MAT_HDR_Z	opencv2/core/types_c.h	474;"	d
CV_IS_SEQ	opencv2/core/types_c.h	1393;"	d
CV_IS_SEQ_CHAIN	opencv2/core/types_c.h	1488;"	d
CV_IS_SEQ_CHAIN_CONTOUR	opencv2/core/types_c.h	1494;"	d
CV_IS_SEQ_CLOSED	opencv2/core/types_c.h	1470;"	d
CV_IS_SEQ_CONTOUR	opencv2/core/types_c.h	1491;"	d
CV_IS_SEQ_CONVEX	opencv2/core/types_c.h	1471;"	d
CV_IS_SEQ_CURVE	opencv2/core/types_c.h	1469;"	d
CV_IS_SEQ_HOLE	opencv2/core/types_c.h	1472;"	d
CV_IS_SEQ_INDEX	opencv2/core/types_c.h	1466;"	d
CV_IS_SEQ_POINT_SET	opencv2/core/types_c.h	1476;"	d
CV_IS_SEQ_POINT_SUBSET	opencv2/core/types_c.h	1479;"	d
CV_IS_SEQ_POLYGON	opencv2/core/types_c.h	1485;"	d
CV_IS_SEQ_POLYGON_TREE	opencv2/core/types_c.h	1497;"	d
CV_IS_SEQ_POLYLINE	opencv2/core/types_c.h	1482;"	d
CV_IS_SEQ_SIMPLE	opencv2/core/types_c.h	1473;"	d
CV_IS_SET	opencv2/core/types_c.h	1397;"	d
CV_IS_SET_ELEM	opencv2/core/types_c.h	1291;"	d
CV_IS_SPARSE_HIST	opencv2/core/types_c.h	766;"	d
CV_IS_SPARSE_MAT	opencv2/core/types_c.h	705;"	d
CV_IS_SPARSE_MAT_HDR	opencv2/core/types_c.h	701;"	d
CV_IS_STORAGE	opencv2/core/types_c.h	1200;"	d
CV_IS_SUBDIV2D	opencv2/core/types_c.h	1507;"	d
CV_IS_SUBMAT	opencv2/core/cvdef.h	398;"	d
CV_IS_UNIFORM_HIST	opencv2/core/types_c.h	763;"	d
CV_ITERATIVE	opencv2/calib3d/calib3d_c.h	/^    CV_ITERATIVE = 0,$/;"	e	enum:__anon338
CV_KMEANS_USE_INITIAL_LABELS	opencv2/core/core_c.h	1922;"	d
CV_L1	opencv2/core/core_c.h	1457;"	d
CV_L2	opencv2/core/core_c.h	1458;"	d
CV_LBGR2Lab	opencv2/imgproc/types_c.h	/^    CV_LBGR2Lab     = 74,$/;"	e	enum:__anon358
CV_LBGR2Luv	opencv2/imgproc/types_c.h	/^    CV_LBGR2Luv     = 76,$/;"	e	enum:__anon358
CV_LINK_RUNS	opencv2/imgproc/types_c.h	/^    CV_LINK_RUNS=5$/;"	e	enum:__anon364
CV_LKFLOW_GET_MIN_EIGENVALS	opencv2/video/tracking_c.h	66;"	d
CV_LKFLOW_INITIAL_GUESSES	opencv2/video/tracking_c.h	65;"	d
CV_LKFLOW_PYR_A_READY	opencv2/video/tracking_c.h	63;"	d
CV_LKFLOW_PYR_B_READY	opencv2/video/tracking_c.h	64;"	d
CV_LMEDS	opencv2/calib3d/calib3d_c.h	86;"	d
CV_LOAD_IMAGE_ANYCOLOR	opencv2/imgcodecs/imgcodecs_c.h	/^    CV_LOAD_IMAGE_ANYCOLOR   =4,$/;"	e	enum:__anon88
CV_LOAD_IMAGE_ANYDEPTH	opencv2/imgcodecs/imgcodecs_c.h	/^    CV_LOAD_IMAGE_ANYDEPTH   =2,$/;"	e	enum:__anon88
CV_LOAD_IMAGE_COLOR	opencv2/imgcodecs/imgcodecs_c.h	/^    CV_LOAD_IMAGE_COLOR      =1,$/;"	e	enum:__anon88
CV_LOAD_IMAGE_GRAYSCALE	opencv2/imgcodecs/imgcodecs_c.h	/^    CV_LOAD_IMAGE_GRAYSCALE  =0,$/;"	e	enum:__anon88
CV_LOAD_IMAGE_IGNORE_ORIENTATION	opencv2/imgcodecs/imgcodecs_c.h	/^    CV_LOAD_IMAGE_IGNORE_ORIENTATION  =128$/;"	e	enum:__anon88
CV_LOAD_IMAGE_UNCHANGED	opencv2/imgcodecs/imgcodecs_c.h	/^    CV_LOAD_IMAGE_UNCHANGED  =-1,$/;"	e	enum:__anon88
CV_LOG2	opencv2/core/cvdef.h	304;"	d
CV_LOG2_F	opencv2/cudev/common.hpp	88;"	d
CV_LRGB2Lab	opencv2/imgproc/types_c.h	/^    CV_LRGB2Lab     = 75,$/;"	e	enum:__anon358
CV_LRGB2Luv	opencv2/imgproc/types_c.h	/^    CV_LRGB2Luv     = 77,$/;"	e	enum:__anon358
CV_LU	opencv2/core/core_c.h	1341;"	d
CV_Lab2BGR	opencv2/imgproc/types_c.h	/^    CV_Lab2BGR     =56,$/;"	e	enum:__anon358
CV_Lab2LBGR	opencv2/imgproc/types_c.h	/^    CV_Lab2LBGR     = 78,$/;"	e	enum:__anon358
CV_Lab2LRGB	opencv2/imgproc/types_c.h	/^    CV_Lab2LRGB     = 79,$/;"	e	enum:__anon358
CV_Lab2RGB	opencv2/imgproc/types_c.h	/^    CV_Lab2RGB     =57,$/;"	e	enum:__anon358
CV_Luv2BGR	opencv2/imgproc/types_c.h	/^    CV_Luv2BGR     =58,$/;"	e	enum:__anon358
CV_Luv2LBGR	opencv2/imgproc/types_c.h	/^    CV_Luv2LBGR     = 80,$/;"	e	enum:__anon358
CV_Luv2LRGB	opencv2/imgproc/types_c.h	/^    CV_Luv2LRGB     = 81,$/;"	e	enum:__anon358
CV_Luv2RGB	opencv2/imgproc/types_c.h	/^    CV_Luv2RGB     =59,$/;"	e	enum:__anon358
CV_MAGIC_MASK	opencv2/core/types_c.h	408;"	d
CV_MAJOR_VERSION	opencv2/core/version.hpp	67;"	d
CV_MAKETYPE	opencv2/core/hal/interface.h	79;"	d
CV_MAKE_TYPE	opencv2/core/hal/interface.h	80;"	d
CV_MALLOC_ALIGN	opencv2/core/private.hpp	143;"	d
CV_MALLOC_ALIGN	opencv2/core/private.hpp	212;"	d
CV_MALLOC_ALIGN	opencv2/core/private.hpp	214;"	d
CV_MATND_MAGIC_VAL	opencv2/core/types_c.h	613;"	d
CV_MAT_AUG_OPERATOR	opencv2/core/operations.hpp	231;"	d
CV_MAT_AUG_OPERATOR	opencv2/core/operations.hpp	282;"	d
CV_MAT_AUG_OPERATOR1	opencv2/core/operations.hpp	228;"	d
CV_MAT_AUG_OPERATOR1	opencv2/core/operations.hpp	283;"	d
CV_MAT_AUG_OPERATOR_T	opencv2/core/operations.hpp	235;"	d
CV_MAT_AUG_OPERATOR_T	opencv2/core/operations.hpp	281;"	d
CV_MAT_CN	opencv2/core/cvdef.h	389;"	d
CV_MAT_CN_MASK	opencv2/core/cvdef.h	388;"	d
CV_MAT_CONT_FLAG	opencv2/core/cvdef.h	393;"	d
CV_MAT_CONT_FLAG_SHIFT	opencv2/core/cvdef.h	392;"	d
CV_MAT_DEPTH	opencv2/core/hal/interface.h	77;"	d
CV_MAT_DEPTH_MASK	opencv2/core/hal/interface.h	76;"	d
CV_MAT_ELEM	opencv2/core/types_c.h	545;"	d
CV_MAT_ELEM_PTR	opencv2/core/types_c.h	542;"	d
CV_MAT_ELEM_PTR_FAST	opencv2/core/types_c.h	537;"	d
CV_MAT_MAGIC_VAL	opencv2/core/types_c.h	409;"	d
CV_MAT_TYPE	opencv2/core/cvdef.h	391;"	d
CV_MAT_TYPE_MASK	opencv2/core/cvdef.h	390;"	d
CV_MAX_ARR	opencv2/core/core_c.h	563;"	d
CV_MAX_DIM	opencv2/core/types_c.h	616;"	d
CV_MAX_DIM_HEAP	opencv2/core/types_c.h	617;"	d
CV_MAX_SOBEL_KSIZE	opencv2/imgproc/types_c.h	/^    CV_MAX_SOBEL_KSIZE =7$/;"	e	enum:__anon357
CV_MEDIAN	opencv2/imgproc/types_c.h	/^    CV_MEDIAN =3,$/;"	e	enum:SmoothMethod_c
CV_MINMAX	opencv2/core/core_c.h	1462;"	d
CV_MINOR_VERSION	opencv2/core/version.hpp	68;"	d
CV_MMX	opencv2/core/cvdef.h	169;"	d
CV_MMX	opencv2/core/cvdef.h	236;"	d
CV_MOP_BLACKHAT	opencv2/imgproc/types_c.h	/^    CV_MOP_BLACKHAT     =6$/;"	e	enum:__anon361
CV_MOP_CLOSE	opencv2/imgproc/types_c.h	/^    CV_MOP_CLOSE        =3,$/;"	e	enum:__anon361
CV_MOP_DILATE	opencv2/imgproc/types_c.h	/^    CV_MOP_DILATE       =1,$/;"	e	enum:__anon361
CV_MOP_ERODE	opencv2/imgproc/types_c.h	/^    CV_MOP_ERODE        =0,$/;"	e	enum:__anon361
CV_MOP_GRADIENT	opencv2/imgproc/types_c.h	/^    CV_MOP_GRADIENT     =4,$/;"	e	enum:__anon361
CV_MOP_OPEN	opencv2/imgproc/types_c.h	/^    CV_MOP_OPEN         =2,$/;"	e	enum:__anon361
CV_MOP_TOPHAT	opencv2/imgproc/types_c.h	/^    CV_MOP_TOPHAT       =5,$/;"	e	enum:__anon361
CV_MSG_PRAGMA	opencv/cv.h	51;"	d
CV_MSG_PRAGMA	opencv/cv.h	54;"	d
CV_MSG_PRAGMA	opencv/cv.h	57;"	d
CV_MaskIsTiled	opencv2/core/types_c.h	/^ CV_MaskIsTiled=               -26,  \/**\/$/;"	e	enum:__anon324
CV_NEON	opencv2/core/cvdef.h	219;"	d
CV_NEON	opencv2/core/cvdef.h	223;"	d
CV_NEON	opencv2/core/cvdef.h	294;"	d
CV_NEON	opencv2/core/hal/intrin.hpp	288;"	d
CV_NEXT_GRAPH_EDGE	opencv2/core/types_c.h	1648;"	d
CV_NEXT_LINE_POINT	opencv2/imgproc/imgproc_c.h	1093;"	d
CV_NEXT_SEQ_ELEM	opencv2/core/types_c.h	1584;"	d
CV_NODE_EMPTY	opencv2/core/types_c.h	1720;"	d
CV_NODE_FLOAT	opencv2/core/types_c.h	1707;"	d
CV_NODE_FLOW	opencv2/core/types_c.h	1718;"	d
CV_NODE_HAS_NAME	opencv2/core/types_c.h	1732;"	d
CV_NODE_IDX	opencv2/core/types_c.h	726;"	d
CV_NODE_INT	opencv2/core/types_c.h	1704;"	d
CV_NODE_INTEGER	opencv2/core/types_c.h	1705;"	d
CV_NODE_IS_COLLECTION	opencv2/core/types_c.h	1728;"	d
CV_NODE_IS_EMPTY	opencv2/core/types_c.h	1730;"	d
CV_NODE_IS_FLOW	opencv2/core/types_c.h	1729;"	d
CV_NODE_IS_INT	opencv2/core/types_c.h	1723;"	d
CV_NODE_IS_MAP	opencv2/core/types_c.h	1727;"	d
CV_NODE_IS_REAL	opencv2/core/types_c.h	1724;"	d
CV_NODE_IS_SEQ	opencv2/core/types_c.h	1726;"	d
CV_NODE_IS_STRING	opencv2/core/types_c.h	1725;"	d
CV_NODE_IS_USER	opencv2/core/types_c.h	1731;"	d
CV_NODE_MAP	opencv2/core/types_c.h	1712;"	d
CV_NODE_NAMED	opencv2/core/types_c.h	1721;"	d
CV_NODE_NONE	opencv2/core/types_c.h	1703;"	d
CV_NODE_REAL	opencv2/core/types_c.h	1706;"	d
CV_NODE_REF	opencv2/core/types_c.h	1710;"	d
CV_NODE_SEQ	opencv2/core/types_c.h	1711;"	d
CV_NODE_SEQ_IS_SIMPLE	opencv2/core/types_c.h	1735;"	d
CV_NODE_SEQ_SIMPLE	opencv2/core/types_c.h	1734;"	d
CV_NODE_STR	opencv2/core/types_c.h	1708;"	d
CV_NODE_STRING	opencv2/core/types_c.h	1709;"	d
CV_NODE_TYPE	opencv2/core/types_c.h	1715;"	d
CV_NODE_TYPE_MASK	opencv2/core/types_c.h	1713;"	d
CV_NODE_USER	opencv2/core/types_c.h	1719;"	d
CV_NODE_VAL	opencv2/core/types_c.h	725;"	d
CV_NORETURN	opencv2/core/cvdef.h	452;"	d
CV_NORETURN	opencv2/core/cvdef.h	454;"	d
CV_NORETURN	opencv2/core/cvdef.h	456;"	d
CV_NORMAL	opencv2/core/core_c.h	1346;"	d
CV_NORM_MASK	opencv2/core/core_c.h	1459;"	d
CV_NOTDEFINED_ERR	opencv2/core/private.hpp	/^    CV_NOTDEFINED_ERR           = -48,  \/\/ipp comp$/;"	e	enum:CvStatus
CV_NOTFOUND_ERR	opencv2/core/private.hpp	/^    CV_NOTFOUND_ERR             = -110,$/;"	e	enum:CvStatus
CV_NO_CN_CHECK	opencv2/core/core_c.h	579;"	d
CV_NO_DEPTH_CHECK	opencv2/core/core_c.h	578;"	d
CV_NO_ERR	opencv2/core/private.hpp	/^    CV_NO_ERR                   =   0,$/;"	e	enum:CvStatus
CV_NO_SIZE_CHECK	opencv2/core/core_c.h	580;"	d
CV_NULLPTR_ERR	opencv2/core/private.hpp	/^    CV_NULLPTR_ERR              =  -2,$/;"	e	enum:CvStatus
CV_OK	opencv2/core/private.hpp	/^    CV_OK                       =   CV_NO_ERR$/;"	e	enum:CvStatus
CV_ORIENTED_GRAPH	opencv2/core/types_c.h	1439;"	d
CV_OUT	opencv2/core/cvdef.h	378;"	d
CV_OUTOFMEM_ERR	opencv2/core/private.hpp	/^    CV_OUTOFMEM_ERR             =  -3,$/;"	e	enum:CvStatus
CV_OpenCLApiCallError	opencv2/core/types_c.h	/^ CV_OpenCLApiCallError=        -220,$/;"	e	enum:__anon324
CV_OpenCLDoubleNotSupported	opencv2/core/types_c.h	/^ CV_OpenCLDoubleNotSupported=  -221,$/;"	e	enum:__anon324
CV_OpenCLInitError	opencv2/core/types_c.h	/^ CV_OpenCLInitError=           -222,$/;"	e	enum:__anon324
CV_OpenCLNoAMDBlasFft	opencv2/core/types_c.h	/^ CV_OpenCLNoAMDBlasFft=        -223$/;"	e	enum:__anon324
CV_OpenGlApiCallError	opencv2/core/types_c.h	/^ CV_OpenGlApiCallError=        -219,$/;"	e	enum:__anon324
CV_OpenGlNotSupported	opencv2/core/types_c.h	/^ CV_OpenGlNotSupported=        -218,$/;"	e	enum:__anon324
CV_P3P	opencv2/calib3d/calib3d_c.h	/^    CV_P3P = 2, \/\/ X.S. Gao, X.-R. Hou, J. Tang, H.-F. Chang; "Complete Solution Classification for the Perspective-Three-Point Problem"$/;"	e	enum:__anon338
CV_PCA_DATA_AS_COL	opencv2/core/core_c.h	1414;"	d
CV_PCA_DATA_AS_ROW	opencv2/core/core_c.h	1413;"	d
CV_PCA_USE_AVG	opencv2/core/core_c.h	1415;"	d
CV_PI	opencv2/core/cvdef.h	302;"	d
CV_PI_F	opencv2/core/cuda/common.hpp	59;"	d
CV_PI_F	opencv2/core/cuda/common.hpp	61;"	d
CV_PI_F	opencv2/cudev/common.hpp	87;"	d
CV_POLY_APPROX_DP	opencv2/imgproc/types_c.h	/^    CV_POLY_APPROX_DP = 0$/;"	e	enum:__anon365
CV_POPCNT	opencv2/core/cvdef.h	194;"	d
CV_POPCNT	opencv2/core/cvdef.h	233;"	d
CV_PREV_POINT	opencv2/core/types_c.h	1632;"	d
CV_PREV_SEQ_ELEM	opencv2/core/types_c.h	1594;"	d
CV_PROP	opencv2/core/cvdef.h	379;"	d
CV_PROP_RW	opencv2/core/cvdef.h	380;"	d
CV_PUSH_BUTTON	opencv2/highgui/highgui_c.h	/^enum {CV_PUSH_BUTTON = 0, CV_CHECKBOX = 1, CV_RADIOBOX = 2};$/;"	e	enum:__anon65
CV_QR	opencv2/core/core_c.h	1345;"	d
CV_RADIOBOX	opencv2/highgui/highgui_c.h	/^enum {CV_PUSH_BUTTON = 0, CV_CHECKBOX = 1, CV_RADIOBOX = 2};$/;"	e	enum:__anon65
CV_RAND_NORMAL	opencv2/core/core_c.h	1226;"	d
CV_RAND_UNI	opencv2/core/core_c.h	1225;"	d
CV_RANSAC	opencv2/calib3d/calib3d_c.h	87;"	d
CV_READ_CHAIN_POINT	opencv2/core/types_c.h	1619;"	d
CV_READ_EDGE	opencv2/core/types_c.h	1634;"	d
CV_READ_SEQ_ELEM	opencv2/core/types_c.h	1603;"	d
CV_REDUCE_AVG	opencv2/core/core_c.h	1490;"	d
CV_REDUCE_MAX	opencv2/core/core_c.h	1491;"	d
CV_REDUCE_MIN	opencv2/core/core_c.h	1492;"	d
CV_REDUCE_SUM	opencv2/core/core_c.h	1489;"	d
CV_RELATIVE	opencv2/core/core_c.h	1460;"	d
CV_RELATIVE_C	opencv2/core/core_c.h	1467;"	d
CV_RELATIVE_L1	opencv2/core/core_c.h	1468;"	d
CV_RELATIVE_L2	opencv2/core/core_c.h	1469;"	d
CV_RETR_CCOMP	opencv2/imgproc/types_c.h	/^    CV_RETR_CCOMP=2,$/;"	e	enum:__anon363
CV_RETR_EXTERNAL	opencv2/imgproc/types_c.h	/^    CV_RETR_EXTERNAL=0,$/;"	e	enum:__anon363
CV_RETR_FLOODFILL	opencv2/imgproc/types_c.h	/^    CV_RETR_FLOODFILL=4$/;"	e	enum:__anon363
CV_RETR_LIST	opencv2/imgproc/types_c.h	/^    CV_RETR_LIST=1,$/;"	e	enum:__anon363
CV_RETR_TREE	opencv2/imgproc/types_c.h	/^    CV_RETR_TREE=3,$/;"	e	enum:__anon363
CV_REV_READ_SEQ_ELEM	opencv2/core/types_c.h	1611;"	d
CV_RGB	opencv2/imgproc/imgproc_c.h	985;"	d
CV_RGB2BGR	opencv2/imgproc/types_c.h	/^    CV_RGB2BGR     =CV_BGR2RGB,$/;"	e	enum:__anon358
CV_RGB2BGR555	opencv2/imgproc/types_c.h	/^    CV_RGB2BGR555  =23,$/;"	e	enum:__anon358
CV_RGB2BGR565	opencv2/imgproc/types_c.h	/^    CV_RGB2BGR565  =13,$/;"	e	enum:__anon358
CV_RGB2BGRA	opencv2/imgproc/types_c.h	/^    CV_RGB2BGRA    =CV_BGR2RGBA,$/;"	e	enum:__anon358
CV_RGB2GRAY	opencv2/imgproc/types_c.h	/^    CV_RGB2GRAY    =7,$/;"	e	enum:__anon358
CV_RGB2HLS	opencv2/imgproc/types_c.h	/^    CV_RGB2HLS     =53,$/;"	e	enum:__anon358
CV_RGB2HLS_FULL	opencv2/imgproc/types_c.h	/^    CV_RGB2HLS_FULL = 69,$/;"	e	enum:__anon358
CV_RGB2HSV	opencv2/imgproc/types_c.h	/^    CV_RGB2HSV     =41,$/;"	e	enum:__anon358
CV_RGB2HSV_FULL	opencv2/imgproc/types_c.h	/^    CV_RGB2HSV_FULL = 67,$/;"	e	enum:__anon358
CV_RGB2Lab	opencv2/imgproc/types_c.h	/^    CV_RGB2Lab     =45,$/;"	e	enum:__anon358
CV_RGB2Luv	opencv2/imgproc/types_c.h	/^    CV_RGB2Luv     =51,$/;"	e	enum:__anon358
CV_RGB2RGBA	opencv2/imgproc/types_c.h	/^    CV_RGB2RGBA    =CV_BGR2BGRA,$/;"	e	enum:__anon358
CV_RGB2XYZ	opencv2/imgproc/types_c.h	/^    CV_RGB2XYZ     =33,$/;"	e	enum:__anon358
CV_RGB2YCrCb	opencv2/imgproc/types_c.h	/^    CV_RGB2YCrCb   =37,$/;"	e	enum:__anon358
CV_RGB2YUV	opencv2/imgproc/types_c.h	/^    CV_RGB2YUV      = 83,$/;"	e	enum:__anon358
CV_RGB2YUV_I420	opencv2/imgproc/types_c.h	/^    CV_RGB2YUV_I420 = 127,$/;"	e	enum:__anon358
CV_RGB2YUV_IYUV	opencv2/imgproc/types_c.h	/^    CV_RGB2YUV_IYUV = CV_RGB2YUV_I420,$/;"	e	enum:__anon358
CV_RGB2YUV_YV12	opencv2/imgproc/types_c.h	/^    CV_RGB2YUV_YV12  = 131,$/;"	e	enum:__anon358
CV_RGBA2BGR	opencv2/imgproc/types_c.h	/^    CV_RGBA2BGR    =3,$/;"	e	enum:__anon358
CV_RGBA2BGR555	opencv2/imgproc/types_c.h	/^    CV_RGBA2BGR555 =27,$/;"	e	enum:__anon358
CV_RGBA2BGR565	opencv2/imgproc/types_c.h	/^    CV_RGBA2BGR565 =17,$/;"	e	enum:__anon358
CV_RGBA2BGRA	opencv2/imgproc/types_c.h	/^    CV_RGBA2BGRA   =CV_BGRA2RGBA,$/;"	e	enum:__anon358
CV_RGBA2GRAY	opencv2/imgproc/types_c.h	/^    CV_RGBA2GRAY   =11,$/;"	e	enum:__anon358
CV_RGBA2RGB	opencv2/imgproc/types_c.h	/^    CV_RGBA2RGB    =CV_BGRA2BGR,$/;"	e	enum:__anon358
CV_RGBA2YUV_I420	opencv2/imgproc/types_c.h	/^    CV_RGBA2YUV_I420 = 129,$/;"	e	enum:__anon358
CV_RGBA2YUV_IYUV	opencv2/imgproc/types_c.h	/^    CV_RGBA2YUV_IYUV = CV_RGBA2YUV_I420,$/;"	e	enum:__anon358
CV_RGBA2YUV_YV12	opencv2/imgproc/types_c.h	/^    CV_RGBA2YUV_YV12 = 133,$/;"	e	enum:__anon358
CV_RGBA2mRGBA	opencv2/imgproc/types_c.h	/^    CV_RGBA2mRGBA = 125,$/;"	e	enum:__anon358
CV_RNG_COEFF	opencv2/core/types_c.h	205;"	d
CV_SCHARR	opencv2/imgproc/types_c.h	/^    CV_SCHARR =-1,$/;"	e	enum:__anon357
CV_SEQUENCE_FIELDS	opencv2/core/types_c.h	1239;"	d
CV_SEQ_CHAIN	opencv2/core/types_c.h	1450;"	d
CV_SEQ_CHAIN_CONTOUR	opencv2/core/types_c.h	1451;"	d
CV_SEQ_CONNECTED_COMP	opencv2/core/types_c.h	1457;"	d
CV_SEQ_CONTOUR	opencv2/core/types_c.h	1446;"	d
CV_SEQ_ELEM	opencv2/core/types_c.h	1549;"	d
CV_SEQ_ELTYPE	opencv2/core/types_c.h	1462;"	d
CV_SEQ_ELTYPE_BITS	opencv2/core/types_c.h	1400;"	d
CV_SEQ_ELTYPE_CODE	opencv2/core/types_c.h	1404;"	d
CV_SEQ_ELTYPE_CONNECTED_COMP	opencv2/core/types_c.h	1412;"	d
CV_SEQ_ELTYPE_GENERIC	opencv2/core/types_c.h	1405;"	d
CV_SEQ_ELTYPE_GRAPH_EDGE	opencv2/core/types_c.h	1409;"	d
CV_SEQ_ELTYPE_GRAPH_VERTEX	opencv2/core/types_c.h	1410;"	d
CV_SEQ_ELTYPE_INDEX	opencv2/core/types_c.h	1408;"	d
CV_SEQ_ELTYPE_MASK	opencv2/core/types_c.h	1401;"	d
CV_SEQ_ELTYPE_POINT	opencv2/core/types_c.h	1403;"	d
CV_SEQ_ELTYPE_POINT3D	opencv2/core/types_c.h	1413;"	d
CV_SEQ_ELTYPE_PPOINT	opencv2/core/types_c.h	1407;"	d
CV_SEQ_ELTYPE_PTR	opencv2/core/types_c.h	1406;"	d
CV_SEQ_ELTYPE_TRIAN_ATR	opencv2/core/types_c.h	1411;"	d
CV_SEQ_FLAG_CLOSED	opencv2/core/types_c.h	1430;"	d
CV_SEQ_FLAG_CONVEX	opencv2/core/types_c.h	1432;"	d
CV_SEQ_FLAG_HOLE	opencv2/core/types_c.h	1433;"	d
CV_SEQ_FLAG_SHIFT	opencv2/core/types_c.h	1427;"	d
CV_SEQ_FLAG_SIMPLE	opencv2/core/types_c.h	1431;"	d
CV_SEQ_INDEX	opencv2/core/types_c.h	1460;"	d
CV_SEQ_KIND	opencv2/core/types_c.h	1463;"	d
CV_SEQ_KIND_BIN_TREE	opencv2/core/types_c.h	1421;"	d
CV_SEQ_KIND_BITS	opencv2/core/types_c.h	1415;"	d
CV_SEQ_KIND_CURVE	opencv2/core/types_c.h	1420;"	d
CV_SEQ_KIND_GENERIC	opencv2/core/types_c.h	1419;"	d
CV_SEQ_KIND_GRAPH	opencv2/core/types_c.h	1424;"	d
CV_SEQ_KIND_MASK	opencv2/core/types_c.h	1416;"	d
CV_SEQ_KIND_SUBDIV2D	opencv2/core/types_c.h	1425;"	d
CV_SEQ_MAGIC_VAL	opencv2/core/types_c.h	1391;"	d
CV_SEQ_POINT3D_SET	opencv2/core/types_c.h	1443;"	d
CV_SEQ_POINT_SET	opencv2/core/types_c.h	1442;"	d
CV_SEQ_POLYGON	opencv2/core/types_c.h	1445;"	d
CV_SEQ_POLYGON_TREE	opencv2/core/types_c.h	1454;"	d
CV_SEQ_POLYLINE	opencv2/core/types_c.h	1444;"	d
CV_SEQ_READER_FIELDS	opencv2/core/types_c.h	1529;"	d
CV_SEQ_SIMPLE_POLYGON	opencv2/core/types_c.h	1447;"	d
CV_SEQ_WRITER_FIELDS	opencv2/core/types_c.h	1514;"	d
CV_SET_ELEM_FIELDS	opencv2/core/types_c.h	1265;"	d
CV_SET_ELEM_FREE_FLAG	opencv2/core/types_c.h	1288;"	d
CV_SET_ELEM_IDX_MASK	opencv2/core/types_c.h	1287;"	d
CV_SET_FIELDS	opencv2/core/types_c.h	1275;"	d
CV_SET_MAGIC_VAL	opencv2/core/types_c.h	1396;"	d
CV_SHAPE_CROSS	opencv2/imgproc/types_c.h	/^    CV_SHAPE_CROSS     =1,$/;"	e	enum:MorphShapes_c
CV_SHAPE_CUSTOM	opencv2/imgproc/types_c.h	/^    CV_SHAPE_CUSTOM    =100 \/\/!< custom structuring element$/;"	e	enum:MorphShapes_c
CV_SHAPE_ELLIPSE	opencv2/imgproc/types_c.h	/^    CV_SHAPE_ELLIPSE   =2,$/;"	e	enum:MorphShapes_c
CV_SHAPE_RECT	opencv2/imgproc/types_c.h	/^    CV_SHAPE_RECT      =0,$/;"	e	enum:MorphShapes_c
CV_SIGN	opencv2/core/types_c.h	195;"	d
CV_SIMD128	opencv2/core/hal/intrin.hpp	310;"	d
CV_SIMD128	opencv2/core/hal/intrin_neon.hpp	56;"	d
CV_SIMD128	opencv2/core/hal/intrin_sse.hpp	51;"	d
CV_SIMD128_64F	opencv2/core/hal/intrin.hpp	315;"	d
CV_SIMD128_64F	opencv2/core/hal/intrin_neon.hpp	58;"	d
CV_SIMD128_64F	opencv2/core/hal/intrin_sse.hpp	52;"	d
CV_SORT_ASCENDING	opencv2/core/core_c.h	1252;"	d
CV_SORT_DESCENDING	opencv2/core/core_c.h	1253;"	d
CV_SORT_EVERY_COLUMN	opencv2/core/core_c.h	1251;"	d
CV_SORT_EVERY_ROW	opencv2/core/core_c.h	1250;"	d
CV_SPARSE_MAT_MAGIC_VAL	opencv2/core/types_c.h	668;"	d
CV_SSE	opencv2/core/cvdef.h	170;"	d
CV_SSE	opencv2/core/cvdef.h	239;"	d
CV_SSE2	opencv2/core/cvdef.h	171;"	d
CV_SSE2	opencv2/core/cvdef.h	242;"	d
CV_SSE2	opencv2/core/hal/intrin.hpp	287;"	d
CV_SSE3	opencv2/core/cvdef.h	174;"	d
CV_SSE3	opencv2/core/cvdef.h	245;"	d
CV_SSE4_1	opencv2/core/cvdef.h	182;"	d
CV_SSE4_1	opencv2/core/cvdef.h	251;"	d
CV_SSE4_2	opencv2/core/cvdef.h	186;"	d
CV_SSE4_2	opencv2/core/cvdef.h	254;"	d
CV_SSSE3	opencv2/core/cvdef.h	178;"	d
CV_SSSE3	opencv2/core/cvdef.h	248;"	d
CV_STDCALL	opencv2/core/types_c.h	70;"	d
CV_STDCALL	opencv2/core/types_c.h	73;"	d
CV_STEREO_BM_BASIC	opencv2/calib3d/calib3d_c.h	357;"	d
CV_STEREO_BM_FISH_EYE	opencv2/calib3d/calib3d_c.h	358;"	d
CV_STEREO_BM_NARROW	opencv2/calib3d/calib3d_c.h	359;"	d
CV_STEREO_BM_NORMALIZED_RESPONSE	opencv2/calib3d/calib3d_c.h	319;"	d
CV_STEREO_BM_XSOBEL	opencv2/calib3d/calib3d_c.h	320;"	d
CV_STORAGE_APPEND	opencv2/core/types_c.h	1666;"	d
CV_STORAGE_BASE64	opencv2/core/types_c.h	1673;"	d
CV_STORAGE_FORMAT_AUTO	opencv2/core/types_c.h	1669;"	d
CV_STORAGE_FORMAT_JSON	opencv2/core/types_c.h	1672;"	d
CV_STORAGE_FORMAT_MASK	opencv2/core/types_c.h	1668;"	d
CV_STORAGE_FORMAT_XML	opencv2/core/types_c.h	1670;"	d
CV_STORAGE_FORMAT_YAML	opencv2/core/types_c.h	1671;"	d
CV_STORAGE_MAGIC_VAL	opencv2/core/types_c.h	1187;"	d
CV_STORAGE_MEMORY	opencv2/core/types_c.h	1667;"	d
CV_STORAGE_READ	opencv2/core/types_c.h	1662;"	d
CV_STORAGE_WRITE	opencv2/core/types_c.h	1663;"	d
CV_STORAGE_WRITE_BASE64	opencv2/core/types_c.h	1674;"	d
CV_STORAGE_WRITE_BINARY	opencv2/core/types_c.h	1665;"	d
CV_STORAGE_WRITE_TEXT	opencv2/core/types_c.h	1664;"	d
CV_STYLE_ITALIC	opencv2/highgui/highgui_c.h	/^        CV_STYLE_ITALIC         = 1,\/\/QFont::StyleItalic,$/;"	e	enum:__anon64
CV_STYLE_NORMAL	opencv2/highgui/highgui_c.h	/^enum {  CV_STYLE_NORMAL         = 0,\/\/QFont::StyleNormal,$/;"	e	enum:__anon64
CV_STYLE_OBLIQUE	opencv2/highgui/highgui_c.h	/^        CV_STYLE_OBLIQUE        = 2 \/\/QFont::StyleOblique$/;"	e	enum:__anon64
CV_SUBMAT_FLAG	opencv2/core/cvdef.h	397;"	d
CV_SUBMAT_FLAG_SHIFT	opencv2/core/cvdef.h	396;"	d
CV_SUBMINOR_VERSION	opencv2/core/version.hpp	69;"	d
CV_SUPPRESS_DEPRECATED_END	opencv2/core/base.hpp	320;"	d
CV_SUPPRESS_DEPRECATED_END	opencv2/core/base.hpp	325;"	d
CV_SUPPRESS_DEPRECATED_END	opencv2/core/base.hpp	328;"	d
CV_SUPPRESS_DEPRECATED_START	opencv2/core/base.hpp	317;"	d
CV_SUPPRESS_DEPRECATED_START	opencv2/core/base.hpp	322;"	d
CV_SUPPRESS_DEPRECATED_START	opencv2/core/base.hpp	327;"	d
CV_SVD	opencv2/core/core_c.h	1342;"	d
CV_SVD_MODIFY_A	opencv2/core/core_c.h	1327;"	d
CV_SVD_SYM	opencv2/core/core_c.h	1343;"	d
CV_SVD_U_T	opencv2/core/core_c.h	1328;"	d
CV_SVD_V_T	opencv2/core/core_c.h	1329;"	d
CV_SWAP	opencv2/core/types_c.h	181;"	d
CV_StaticAssert	opencv2/core/base.hpp	282;"	d
CV_StaticAssert	opencv2/core/base.hpp	284;"	d
CV_StaticAssert	opencv2/core/base.hpp	288;"	d
CV_StaticAssert	opencv2/core/base.hpp	292;"	d
CV_StaticAssert	opencv2/core/base.hpp	297;"	d
CV_StaticAssert	opencv2/core/base.hpp	302;"	d
CV_StaticAssert_failed	opencv2/core/base.hpp	/^     template <> struct CV_StaticAssert_failed<true> { enum { val = 1 }; };$/;"	s	namespace:cv
CV_StaticAssert_test	opencv2/core/base.hpp	/^     template<int x> struct CV_StaticAssert_test {};$/;"	s	namespace:cv
CV_StsAssert	opencv2/core/types_c.h	/^ CV_StsAssert=                 -215, \/**< assertion failed *\/$/;"	e	enum:__anon324
CV_StsAutoTrace	opencv2/core/types_c.h	/^ CV_StsAutoTrace=               -8,  \/**< tracing                         *\/$/;"	e	enum:__anon324
CV_StsBackTrace	opencv2/core/types_c.h	/^ CV_StsBackTrace=               -1,  \/**< pseudo error for back trace     *\/$/;"	e	enum:__anon324
CV_StsBadArg	opencv2/core/types_c.h	/^ CV_StsBadArg=                  -5,  \/**< function arg\/param is bad       *\/$/;"	e	enum:__anon324
CV_StsBadFlag	opencv2/core/types_c.h	/^ CV_StsBadFlag=                -206, \/**< flag is wrong or not supported *\/$/;"	e	enum:__anon324
CV_StsBadFunc	opencv2/core/types_c.h	/^ CV_StsBadFunc=                 -6,  \/**< unsupported function            *\/$/;"	e	enum:__anon324
CV_StsBadMask	opencv2/core/types_c.h	/^ CV_StsBadMask=                -208, \/**< bad format of mask (neither 8uC1 nor 8sC1)*\/$/;"	e	enum:__anon324
CV_StsBadMemBlock	opencv2/core/types_c.h	/^ CV_StsBadMemBlock=            -214, \/**< an allocated block has been corrupted *\/$/;"	e	enum:__anon324
CV_StsBadPoint	opencv2/core/types_c.h	/^ CV_StsBadPoint=               -207, \/**< bad CvPoint *\/$/;"	e	enum:__anon324
CV_StsBadSize	opencv2/core/types_c.h	/^ CV_StsBadSize=                -201, \/**< the input\/output structure size is incorrect  *\/$/;"	e	enum:__anon324
CV_StsDivByZero	opencv2/core/types_c.h	/^ CV_StsDivByZero=              -202, \/**< division by zero *\/$/;"	e	enum:__anon324
CV_StsError	opencv2/core/types_c.h	/^ CV_StsError=                   -2,  \/**< unknown \/unspecified error      *\/$/;"	e	enum:__anon324
CV_StsFilterOffsetErr	opencv2/core/types_c.h	/^ CV_StsFilterOffsetErr=        -31,  \/**< incorrect filter offset value *\/$/;"	e	enum:__anon324
CV_StsFilterStructContentErr	opencv2/core/types_c.h	/^ CV_StsFilterStructContentErr= -29,  \/**< incorr. filter structure content *\/$/;"	e	enum:__anon324
CV_StsInplaceNotSupported	opencv2/core/types_c.h	/^ CV_StsInplaceNotSupported=    -203, \/**< in-place operation is not supported *\/$/;"	e	enum:__anon324
CV_StsInternal	opencv2/core/types_c.h	/^ CV_StsInternal=                -3,  \/**< internal error (bad state)      *\/$/;"	e	enum:__anon324
CV_StsKernelStructContentErr	opencv2/core/types_c.h	/^ CV_StsKernelStructContentErr= -30,  \/**< incorr. transform kernel content *\/$/;"	e	enum:__anon324
CV_StsNoConv	opencv2/core/types_c.h	/^ CV_StsNoConv=                  -7,  \/**< iter. didn't converge           *\/$/;"	e	enum:__anon324
CV_StsNoMem	opencv2/core/types_c.h	/^ CV_StsNoMem=                   -4,  \/**< insufficient memory             *\/$/;"	e	enum:__anon324
CV_StsNotImplemented	opencv2/core/types_c.h	/^ CV_StsNotImplemented=         -213, \/**< the requested function\/feature is not implemented *\/$/;"	e	enum:__anon324
CV_StsNullPtr	opencv2/core/types_c.h	/^ CV_StsNullPtr=                -27,  \/**< null pointer *\/$/;"	e	enum:__anon324
CV_StsObjectNotFound	opencv2/core/types_c.h	/^ CV_StsObjectNotFound=         -204, \/**< request can't be completed *\/$/;"	e	enum:__anon324
CV_StsOk	opencv2/core/types_c.h	/^ CV_StsOk=                       0,  \/**< everything is ok                *\/$/;"	e	enum:__anon324
CV_StsOutOfRange	opencv2/core/types_c.h	/^ CV_StsOutOfRange=             -211, \/**< some of parameters are out of range *\/$/;"	e	enum:__anon324
CV_StsParseError	opencv2/core/types_c.h	/^ CV_StsParseError=             -212, \/**< invalid syntax\/structure of the parsed file *\/$/;"	e	enum:__anon324
CV_StsUnmatchedFormats	opencv2/core/types_c.h	/^ CV_StsUnmatchedFormats=       -205, \/**< formats of input\/output arrays differ *\/$/;"	e	enum:__anon324
CV_StsUnmatchedSizes	opencv2/core/types_c.h	/^ CV_StsUnmatchedSizes=         -209, \/**< sizes of input\/output structures do not match *\/$/;"	e	enum:__anon324
CV_StsUnsupportedFormat	opencv2/core/types_c.h	/^ CV_StsUnsupportedFormat=      -210, \/**< the data format\/type is not supported by the function*\/$/;"	e	enum:__anon324
CV_StsVecLengthErr	opencv2/core/types_c.h	/^ CV_StsVecLengthErr=           -28,  \/**< incorrect vector length *\/$/;"	e	enum:__anon324
CV_TERMCRIT_EPS	opencv2/core/types_c.h	831;"	d
CV_TERMCRIT_ITER	opencv2/core/types_c.h	829;"	d
CV_TERMCRIT_NUMBER	opencv2/core/types_c.h	830;"	d
CV_THRESH_BINARY	opencv2/imgproc/types_c.h	/^    CV_THRESH_BINARY      =0,  \/**< value = value > threshold ? max_value : 0       *\/$/;"	e	enum:__anon371
CV_THRESH_BINARY_INV	opencv2/imgproc/types_c.h	/^    CV_THRESH_BINARY_INV  =1,  \/**< value = value > threshold ? 0 : max_value       *\/$/;"	e	enum:__anon371
CV_THRESH_MASK	opencv2/imgproc/types_c.h	/^    CV_THRESH_MASK        =7,$/;"	e	enum:__anon371
CV_THRESH_OTSU	opencv2/imgproc/types_c.h	/^    CV_THRESH_OTSU        =8, \/**< use Otsu algorithm to choose the optimal threshold value;$/;"	e	enum:__anon371
CV_THRESH_TOZERO	opencv2/imgproc/types_c.h	/^    CV_THRESH_TOZERO      =3,  \/**< value = value > threshold ? value : 0           *\/$/;"	e	enum:__anon371
CV_THRESH_TOZERO_INV	opencv2/imgproc/types_c.h	/^    CV_THRESH_TOZERO_INV  =4,  \/**< value = value > threshold ? 0 : value           *\/$/;"	e	enum:__anon371
CV_THRESH_TRIANGLE	opencv2/imgproc/types_c.h	/^    CV_THRESH_TRIANGLE    =16  \/**< use Triangle algorithm to choose the optimal threshold value;$/;"	e	enum:__anon371
CV_THRESH_TRUNC	opencv2/imgproc/types_c.h	/^    CV_THRESH_TRUNC       =2,  \/**< value = value > threshold ? threshold : value   *\/$/;"	e	enum:__anon371
CV_TM_CCOEFF	opencv2/imgproc/types_c.h	/^    CV_TM_CCOEFF        =4,$/;"	e	enum:__anon362
CV_TM_CCOEFF_NORMED	opencv2/imgproc/types_c.h	/^    CV_TM_CCOEFF_NORMED =5$/;"	e	enum:__anon362
CV_TM_CCORR	opencv2/imgproc/types_c.h	/^    CV_TM_CCORR         =2,$/;"	e	enum:__anon362
CV_TM_CCORR_NORMED	opencv2/imgproc/types_c.h	/^    CV_TM_CCORR_NORMED  =3,$/;"	e	enum:__anon362
CV_TM_SQDIFF	opencv2/imgproc/types_c.h	/^    CV_TM_SQDIFF        =0,$/;"	e	enum:__anon362
CV_TM_SQDIFF_NORMED	opencv2/imgproc/types_c.h	/^    CV_TM_SQDIFF_NORMED =1,$/;"	e	enum:__anon362
CV_TOGGLE_DBL	opencv2/core/private.hpp	147;"	d
CV_TOGGLE_FLT	opencv2/core/private.hpp	146;"	d
CV_TREE_NODE_FIELDS	opencv2/core/types_c.h	1227;"	d
CV_TURN_ON_IPL_COMPATIBILITY	opencv2/core/core_c.h	1965;"	d
CV_TYPE_NAME_GRAPH	opencv2/core/types_c.h	1360;"	d
CV_TYPE_NAME_HAAR	opencv2/objdetect/objdetect_c.h	65;"	d
CV_TYPE_NAME_IMAGE	opencv2/core/types_c.h	384;"	d
CV_TYPE_NAME_MAT	opencv2/core/types_c.h	410;"	d
CV_TYPE_NAME_MATND	opencv2/core/types_c.h	614;"	d
CV_TYPE_NAME_SEQ	opencv2/core/types_c.h	1256;"	d
CV_TYPE_NAME_SEQ_TREE	opencv2/core/types_c.h	1257;"	d
CV_TYPE_NAME_SPARSE_MAT	opencv2/core/types_c.h	669;"	d
CV_TYZX_COLOR	opencv2/videoio/videoio_c.h	/^    CV_TYZX_COLOR   =402,$/;"	e	enum:__anon106
CV_TYZX_LEFT	opencv2/videoio/videoio_c.h	/^    CV_TYZX_LEFT    =400,$/;"	e	enum:__anon106
CV_TYZX_RIGHT	opencv2/videoio/videoio_c.h	/^    CV_TYZX_RIGHT   =401,$/;"	e	enum:__anon106
CV_TYZX_Z	opencv2/videoio/videoio_c.h	/^    CV_TYZX_Z       =403,$/;"	e	enum:__anon106
CV_UNMATCHED_FORMATS_ERR	opencv2/core/private.hpp	/^    CV_UNMATCHED_FORMATS_ERR    = -104,$/;"	e	enum:CvStatus
CV_UNMATCHED_ROI_ERR	opencv2/core/private.hpp	/^    CV_UNMATCHED_ROI_ERR        = -111,$/;"	e	enum:CvStatus
CV_UNSUPPORTED_CHANNELS_ERR	opencv2/core/private.hpp	/^    CV_UNSUPPORTED_CHANNELS_ERR = -102,$/;"	e	enum:CvStatus
CV_UNSUPPORTED_COI_ERR	opencv2/core/private.hpp	/^    CV_UNSUPPORTED_COI_ERR      = -103,$/;"	e	enum:CvStatus
CV_UNSUPPORTED_DEPTH_ERR	opencv2/core/private.hpp	/^    CV_UNSUPPORTED_DEPTH_ERR    = -101,$/;"	e	enum:CvStatus
CV_UNSUPPORTED_FORMAT_ERR	opencv2/core/private.hpp	/^    CV_UNSUPPORTED_FORMAT_ERR   = -100,$/;"	e	enum:CvStatus
CV_UNUSED	opencv2/core/base.hpp	330;"	d
CV_USRTYPE1	opencv2/core/hal/interface.h	74;"	d
CV_VERSION	opencv2/core/version.hpp	64;"	d
CV_VERSION_MAJOR	opencv2/core/version.hpp	53;"	d
CV_VERSION_MINOR	opencv2/core/version.hpp	54;"	d
CV_VERSION_REVISION	opencv2/core/version.hpp	55;"	d
CV_VERSION_STATUS	opencv2/core/version.hpp	56;"	d
CV_VFP	opencv2/core/cvdef.h	227;"	d
CV_VFP	opencv2/core/cvdef.h	298;"	d
CV_WARNING	opencv/cv.h	59;"	d
CV_WARP_FILL_OUTLIERS	opencv2/imgproc/types_c.h	/^    CV_WARP_FILL_OUTLIERS =8,$/;"	e	enum:__anon360
CV_WARP_INVERSE_MAP	opencv2/imgproc/types_c.h	/^    CV_WARP_INVERSE_MAP  =16$/;"	e	enum:__anon360
CV_WHOLE_ARR	opencv2/core/types_c.h	406;"	d
CV_WHOLE_SEQ	opencv2/core/types_c.h	1096;"	d
CV_WHOLE_SEQ_END_INDEX	opencv2/core/types_c.h	1095;"	d
CV_WINDOW_AUTOSIZE	opencv2/highgui/highgui_c.h	/^    CV_WINDOW_AUTOSIZE     = 0x00000001, \/\/the user cannot resize the window, the size is constrainted by the image displayed$/;"	e	enum:__anon66
CV_WINDOW_FREERATIO	opencv2/highgui/highgui_c.h	/^    CV_WINDOW_FREERATIO    = 0x00000100,\/\/the image expends as much as it can (no ratio constraint)$/;"	e	enum:__anon66
CV_WINDOW_FULLSCREEN	opencv2/highgui/highgui_c.h	/^    CV_WINDOW_FULLSCREEN   = 1,\/\/change the window to fullscreen$/;"	e	enum:__anon66
CV_WINDOW_KEEPRATIO	opencv2/highgui/highgui_c.h	/^    CV_WINDOW_KEEPRATIO    = 0x00000000\/\/the ration image is respected.$/;"	e	enum:__anon66
CV_WINDOW_NORMAL	opencv2/highgui/highgui_c.h	/^    CV_WINDOW_NORMAL       = 0x00000000, \/\/the user can resize the window (no constraint)  \/ also use to switch a fullscreen window to a normal size$/;"	e	enum:__anon66
CV_WINDOW_OPENGL	opencv2/highgui/highgui_c.h	/^    CV_WINDOW_OPENGL       = 0x00001000, \/\/window with opengl support$/;"	e	enum:__anon66
CV_WND_PROP_ASPECTRATIO	opencv2/highgui/highgui_c.h	/^    CV_WND_PROP_ASPECTRATIO= 2, \/\/to change\/get window's aspectratio property$/;"	e	enum:__anon66
CV_WND_PROP_AUTOSIZE	opencv2/highgui/highgui_c.h	/^    CV_WND_PROP_AUTOSIZE   = 1, \/\/to change\/get window's autosize property$/;"	e	enum:__anon66
CV_WND_PROP_FULLSCREEN	opencv2/highgui/highgui_c.h	/^    CV_WND_PROP_FULLSCREEN = 0, \/\/to change\/get window's fullscreen property$/;"	e	enum:__anon66
CV_WND_PROP_OPENGL	opencv2/highgui/highgui_c.h	/^    CV_WND_PROP_OPENGL     = 3, \/\/to change\/get window's opengl support$/;"	e	enum:__anon66
CV_WND_PROP_VISIBLE	opencv2/highgui/highgui_c.h	/^    CV_WND_PROP_VISIBLE    = 4,$/;"	e	enum:__anon66
CV_WRAP	opencv2/core/cvdef.h	381;"	d
CV_WRAP_AS	opencv2/core/cvdef.h	382;"	d
CV_WRAP_PROPERTY	opencv2/core/private.hpp	189;"	d
CV_WRAP_PROPERTY_S	opencv2/core/private.hpp	190;"	d
CV_WRAP_SAME_PROPERTY	opencv2/core/private.hpp	192;"	d
CV_WRAP_SAME_PROPERTY_S	opencv2/core/private.hpp	193;"	d
CV_WRITE_SEQ_ELEM	opencv2/core/types_c.h	1570;"	d
CV_WRITE_SEQ_ELEM_VAR	opencv2/core/types_c.h	1560;"	d
CV_XADD	opencv2/core/cvdef.h	/^   CV_INLINE CV_XADD(int* addr, int delta) { int tmp = *addr; *addr += delta; return tmp; }$/;"	f
CV_XADD	opencv2/core/cvdef.h	426;"	d
CV_XADD	opencv2/core/cvdef.h	428;"	d
CV_XADD	opencv2/core/cvdef.h	433;"	d
CV_XADD	opencv2/core/cvdef.h	435;"	d
CV_XADD	opencv2/core/cvdef.h	440;"	d
CV_XYZ2BGR	opencv2/imgproc/types_c.h	/^    CV_XYZ2BGR     =34,$/;"	e	enum:__anon358
CV_XYZ2RGB	opencv2/imgproc/types_c.h	/^    CV_XYZ2RGB     =35,$/;"	e	enum:__anon358
CV_YCrCb2BGR	opencv2/imgproc/types_c.h	/^    CV_YCrCb2BGR   =38,$/;"	e	enum:__anon358
CV_YCrCb2RGB	opencv2/imgproc/types_c.h	/^    CV_YCrCb2RGB   =39,$/;"	e	enum:__anon358
CV_YUV2BGR	opencv2/imgproc/types_c.h	/^    CV_YUV2BGR      = 84,$/;"	e	enum:__anon358
CV_YUV2BGRA_I420	opencv2/imgproc/types_c.h	/^    CV_YUV2BGRA_I420 = CV_YUV2BGRA_IYUV,$/;"	e	enum:__anon358
CV_YUV2BGRA_IYUV	opencv2/imgproc/types_c.h	/^    CV_YUV2BGRA_IYUV = 105,$/;"	e	enum:__anon358
CV_YUV2BGRA_NV12	opencv2/imgproc/types_c.h	/^    CV_YUV2BGRA_NV12 = 95,$/;"	e	enum:__anon358
CV_YUV2BGRA_NV21	opencv2/imgproc/types_c.h	/^    CV_YUV2BGRA_NV21 = 97,$/;"	e	enum:__anon358
CV_YUV2BGRA_UYNV	opencv2/imgproc/types_c.h	/^    CV_YUV2BGRA_UYNV = CV_YUV2BGRA_UYVY,$/;"	e	enum:__anon358
CV_YUV2BGRA_UYVY	opencv2/imgproc/types_c.h	/^    CV_YUV2BGRA_UYVY = 112,$/;"	e	enum:__anon358
CV_YUV2BGRA_Y422	opencv2/imgproc/types_c.h	/^    CV_YUV2BGRA_Y422 = CV_YUV2BGRA_UYVY,$/;"	e	enum:__anon358
CV_YUV2BGRA_YUNV	opencv2/imgproc/types_c.h	/^    CV_YUV2BGRA_YUNV = CV_YUV2BGRA_YUY2,$/;"	e	enum:__anon358
CV_YUV2BGRA_YUY2	opencv2/imgproc/types_c.h	/^    CV_YUV2BGRA_YUY2 = 120,$/;"	e	enum:__anon358
CV_YUV2BGRA_YUYV	opencv2/imgproc/types_c.h	/^    CV_YUV2BGRA_YUYV = CV_YUV2BGRA_YUY2,$/;"	e	enum:__anon358
CV_YUV2BGRA_YV12	opencv2/imgproc/types_c.h	/^    CV_YUV2BGRA_YV12 = 103,$/;"	e	enum:__anon358
CV_YUV2BGRA_YVYU	opencv2/imgproc/types_c.h	/^    CV_YUV2BGRA_YVYU = 122,$/;"	e	enum:__anon358
CV_YUV2BGR_I420	opencv2/imgproc/types_c.h	/^    CV_YUV2BGR_I420 = CV_YUV2BGR_IYUV,$/;"	e	enum:__anon358
CV_YUV2BGR_IYUV	opencv2/imgproc/types_c.h	/^    CV_YUV2BGR_IYUV = 101,$/;"	e	enum:__anon358
CV_YUV2BGR_NV12	opencv2/imgproc/types_c.h	/^    CV_YUV2BGR_NV12 = 91,$/;"	e	enum:__anon358
CV_YUV2BGR_NV21	opencv2/imgproc/types_c.h	/^    CV_YUV2BGR_NV21 = 93,$/;"	e	enum:__anon358
CV_YUV2BGR_UYNV	opencv2/imgproc/types_c.h	/^    CV_YUV2BGR_UYNV = CV_YUV2BGR_UYVY,$/;"	e	enum:__anon358
CV_YUV2BGR_UYVY	opencv2/imgproc/types_c.h	/^    CV_YUV2BGR_UYVY = 108,$/;"	e	enum:__anon358
CV_YUV2BGR_Y422	opencv2/imgproc/types_c.h	/^    CV_YUV2BGR_Y422 = CV_YUV2BGR_UYVY,$/;"	e	enum:__anon358
CV_YUV2BGR_YUNV	opencv2/imgproc/types_c.h	/^    CV_YUV2BGR_YUNV = CV_YUV2BGR_YUY2,$/;"	e	enum:__anon358
CV_YUV2BGR_YUY2	opencv2/imgproc/types_c.h	/^    CV_YUV2BGR_YUY2 = 116,$/;"	e	enum:__anon358
CV_YUV2BGR_YUYV	opencv2/imgproc/types_c.h	/^    CV_YUV2BGR_YUYV = CV_YUV2BGR_YUY2,$/;"	e	enum:__anon358
CV_YUV2BGR_YV12	opencv2/imgproc/types_c.h	/^    CV_YUV2BGR_YV12 = 99,$/;"	e	enum:__anon358
CV_YUV2BGR_YVYU	opencv2/imgproc/types_c.h	/^    CV_YUV2BGR_YVYU = 118,$/;"	e	enum:__anon358
CV_YUV2GRAY_420	opencv2/imgproc/types_c.h	/^    CV_YUV2GRAY_420 = 106,$/;"	e	enum:__anon358
CV_YUV2GRAY_I420	opencv2/imgproc/types_c.h	/^    CV_YUV2GRAY_I420 = CV_YUV2GRAY_420,$/;"	e	enum:__anon358
CV_YUV2GRAY_IYUV	opencv2/imgproc/types_c.h	/^    CV_YUV2GRAY_IYUV = CV_YUV2GRAY_420,$/;"	e	enum:__anon358
CV_YUV2GRAY_NV12	opencv2/imgproc/types_c.h	/^    CV_YUV2GRAY_NV12 = CV_YUV2GRAY_420,$/;"	e	enum:__anon358
CV_YUV2GRAY_NV21	opencv2/imgproc/types_c.h	/^    CV_YUV2GRAY_NV21 = CV_YUV2GRAY_420,$/;"	e	enum:__anon358
CV_YUV2GRAY_UYNV	opencv2/imgproc/types_c.h	/^    CV_YUV2GRAY_UYNV = CV_YUV2GRAY_UYVY,$/;"	e	enum:__anon358
CV_YUV2GRAY_UYVY	opencv2/imgproc/types_c.h	/^    CV_YUV2GRAY_UYVY = 123,$/;"	e	enum:__anon358
CV_YUV2GRAY_Y422	opencv2/imgproc/types_c.h	/^    CV_YUV2GRAY_Y422 = CV_YUV2GRAY_UYVY,$/;"	e	enum:__anon358
CV_YUV2GRAY_YUNV	opencv2/imgproc/types_c.h	/^    CV_YUV2GRAY_YUNV = CV_YUV2GRAY_YUY2,$/;"	e	enum:__anon358
CV_YUV2GRAY_YUY2	opencv2/imgproc/types_c.h	/^    CV_YUV2GRAY_YUY2 = 124,$/;"	e	enum:__anon358
CV_YUV2GRAY_YUYV	opencv2/imgproc/types_c.h	/^    CV_YUV2GRAY_YUYV = CV_YUV2GRAY_YUY2,$/;"	e	enum:__anon358
CV_YUV2GRAY_YV12	opencv2/imgproc/types_c.h	/^    CV_YUV2GRAY_YV12 = CV_YUV2GRAY_420,$/;"	e	enum:__anon358
CV_YUV2GRAY_YVYU	opencv2/imgproc/types_c.h	/^    CV_YUV2GRAY_YVYU = CV_YUV2GRAY_YUY2,$/;"	e	enum:__anon358
CV_YUV2RGB	opencv2/imgproc/types_c.h	/^    CV_YUV2RGB      = 85,$/;"	e	enum:__anon358
CV_YUV2RGBA_I420	opencv2/imgproc/types_c.h	/^    CV_YUV2RGBA_I420 = CV_YUV2RGBA_IYUV,$/;"	e	enum:__anon358
CV_YUV2RGBA_IYUV	opencv2/imgproc/types_c.h	/^    CV_YUV2RGBA_IYUV = 104,$/;"	e	enum:__anon358
CV_YUV2RGBA_NV12	opencv2/imgproc/types_c.h	/^    CV_YUV2RGBA_NV12 = 94,$/;"	e	enum:__anon358
CV_YUV2RGBA_NV21	opencv2/imgproc/types_c.h	/^    CV_YUV2RGBA_NV21 = 96,$/;"	e	enum:__anon358
CV_YUV2RGBA_UYNV	opencv2/imgproc/types_c.h	/^    CV_YUV2RGBA_UYNV = CV_YUV2RGBA_UYVY,$/;"	e	enum:__anon358
CV_YUV2RGBA_UYVY	opencv2/imgproc/types_c.h	/^    CV_YUV2RGBA_UYVY = 111,$/;"	e	enum:__anon358
CV_YUV2RGBA_Y422	opencv2/imgproc/types_c.h	/^    CV_YUV2RGBA_Y422 = CV_YUV2RGBA_UYVY,$/;"	e	enum:__anon358
CV_YUV2RGBA_YUNV	opencv2/imgproc/types_c.h	/^    CV_YUV2RGBA_YUNV = CV_YUV2RGBA_YUY2,$/;"	e	enum:__anon358
CV_YUV2RGBA_YUY2	opencv2/imgproc/types_c.h	/^    CV_YUV2RGBA_YUY2 = 119,$/;"	e	enum:__anon358
CV_YUV2RGBA_YUYV	opencv2/imgproc/types_c.h	/^    CV_YUV2RGBA_YUYV = CV_YUV2RGBA_YUY2,$/;"	e	enum:__anon358
CV_YUV2RGBA_YV12	opencv2/imgproc/types_c.h	/^    CV_YUV2RGBA_YV12 = 102,$/;"	e	enum:__anon358
CV_YUV2RGBA_YVYU	opencv2/imgproc/types_c.h	/^    CV_YUV2RGBA_YVYU = 121,$/;"	e	enum:__anon358
CV_YUV2RGB_I420	opencv2/imgproc/types_c.h	/^    CV_YUV2RGB_I420 = CV_YUV2RGB_IYUV,$/;"	e	enum:__anon358
CV_YUV2RGB_IYUV	opencv2/imgproc/types_c.h	/^    CV_YUV2RGB_IYUV = 100,$/;"	e	enum:__anon358
CV_YUV2RGB_NV12	opencv2/imgproc/types_c.h	/^    CV_YUV2RGB_NV12 = 90,$/;"	e	enum:__anon358
CV_YUV2RGB_NV21	opencv2/imgproc/types_c.h	/^    CV_YUV2RGB_NV21 = 92,$/;"	e	enum:__anon358
CV_YUV2RGB_UYNV	opencv2/imgproc/types_c.h	/^    CV_YUV2RGB_UYNV = CV_YUV2RGB_UYVY,$/;"	e	enum:__anon358
CV_YUV2RGB_UYVY	opencv2/imgproc/types_c.h	/^    CV_YUV2RGB_UYVY = 107,$/;"	e	enum:__anon358
CV_YUV2RGB_Y422	opencv2/imgproc/types_c.h	/^    CV_YUV2RGB_Y422 = CV_YUV2RGB_UYVY,$/;"	e	enum:__anon358
CV_YUV2RGB_YUNV	opencv2/imgproc/types_c.h	/^    CV_YUV2RGB_YUNV = CV_YUV2RGB_YUY2,$/;"	e	enum:__anon358
CV_YUV2RGB_YUY2	opencv2/imgproc/types_c.h	/^    CV_YUV2RGB_YUY2 = 115,$/;"	e	enum:__anon358
CV_YUV2RGB_YUYV	opencv2/imgproc/types_c.h	/^    CV_YUV2RGB_YUYV = CV_YUV2RGB_YUY2,$/;"	e	enum:__anon358
CV_YUV2RGB_YV12	opencv2/imgproc/types_c.h	/^    CV_YUV2RGB_YV12 = 98,$/;"	e	enum:__anon358
CV_YUV2RGB_YVYU	opencv2/imgproc/types_c.h	/^    CV_YUV2RGB_YVYU = 117,$/;"	e	enum:__anon358
CV_YUV420p2BGR	opencv2/imgproc/types_c.h	/^    CV_YUV420p2BGR = CV_YUV2BGR_YV12,$/;"	e	enum:__anon358
CV_YUV420p2BGRA	opencv2/imgproc/types_c.h	/^    CV_YUV420p2BGRA = CV_YUV2BGRA_YV12,$/;"	e	enum:__anon358
CV_YUV420p2GRAY	opencv2/imgproc/types_c.h	/^    CV_YUV420p2GRAY = CV_YUV2GRAY_420,$/;"	e	enum:__anon358
CV_YUV420p2RGB	opencv2/imgproc/types_c.h	/^    CV_YUV420p2RGB = CV_YUV2RGB_YV12,$/;"	e	enum:__anon358
CV_YUV420p2RGBA	opencv2/imgproc/types_c.h	/^    CV_YUV420p2RGBA = CV_YUV2RGBA_YV12,$/;"	e	enum:__anon358
CV_YUV420sp2BGR	opencv2/imgproc/types_c.h	/^    CV_YUV420sp2BGR = CV_YUV2BGR_NV21,$/;"	e	enum:__anon358
CV_YUV420sp2BGRA	opencv2/imgproc/types_c.h	/^    CV_YUV420sp2BGRA = CV_YUV2BGRA_NV21,$/;"	e	enum:__anon358
CV_YUV420sp2GRAY	opencv2/imgproc/types_c.h	/^    CV_YUV420sp2GRAY = CV_YUV2GRAY_420,$/;"	e	enum:__anon358
CV_YUV420sp2RGB	opencv2/imgproc/types_c.h	/^    CV_YUV420sp2RGB = CV_YUV2RGB_NV21,$/;"	e	enum:__anon358
CV_YUV420sp2RGBA	opencv2/imgproc/types_c.h	/^    CV_YUV420sp2RGBA = CV_YUV2RGBA_NV21,$/;"	e	enum:__anon358
CV_mRGBA2RGBA	opencv2/imgproc/types_c.h	/^    CV_mRGBA2RGBA = 126,$/;"	e	enum:__anon358
C_SVC	opencv2/ml.hpp	/^        C_SVC=100,$/;"	e	enum:cv::ml::SVM::Types
CalibrateCRF	opencv2/photo.hpp	/^class CV_EXPORTS_W CalibrateCRF : public Algorithm$/;"	c	namespace:cv
CalibrateDebevec	opencv2/photo.hpp	/^class CV_EXPORTS_W CalibrateDebevec : public CalibrateCRF$/;"	c	namespace:cv
CalibrateRobertson	opencv2/photo.hpp	/^class CV_EXPORTS_W CalibrateRobertson : public CalibrateCRF$/;"	c	namespace:cv
CameraParams	opencv2/stitching/detail/camera.hpp	/^struct CV_EXPORTS CameraParams$/;"	s	namespace:cv::detail
CannyEdgeDetector	opencv2/cudaimgproc.hpp	/^class CV_EXPORTS CannyEdgeDetector : public Algorithm$/;"	c	namespace:cv::cuda
CascadeClassifier	opencv2/cudaobjdetect.hpp	/^class CV_EXPORTS CascadeClassifier : public Algorithm$/;"	c	namespace:cv::cuda
CascadeClassifier	opencv2/objdetect.hpp	/^class CV_EXPORTS_W CascadeClassifier$/;"	c	namespace:cv
CausedFocusEvent	5/sun/awt/CausedFocusEvent.h	/^class sun::awt::CausedFocusEvent : public ::java::awt::event::FocusEvent$/;"	c	class:sun::awt
Cell	opencv2/videostab/outlier_rejection.hpp	/^    typedef std::vector<int> Cell;$/;"	t	class:cv::videostab::TranslationBasedLocalOutlierRejector
ChannelSize	opencv2/core/wimage.hpp	/^    int ChannelSize() const {return sizeof(T); }  \/\/ number of bytes per channel$/;"	f	class:cv::WImage
Channels	opencv2/core/wimage.hpp	/^    int Channels() const {return C; }$/;"	f	class:cv::WImageC
Channels	opencv2/core/wimage.hpp	/^    int Channels() const {return image_->nChannels; }$/;"	f	class:cv::WImage
ChiHistogramCostExtractor	opencv2/shape/hist_cost.hpp	/^class CV_EXPORTS_W ChiHistogramCostExtractor : public HistogramCostExtractor$/;"	c	namespace:cv
ChiSquareDistance	opencv2/flann/dist.h	/^struct ChiSquareDistance$/;"	s	namespace:cvflann
ChromaFormat	opencv2/cudacodec.hpp	/^enum ChromaFormat$/;"	g	namespace:cv::cudacodec
ClassifierSize	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^    NcvSize32u ClassifierSize;$/;"	m	struct:HaarClassifierCascadeDescriptor
ClearStat	opencv2/cudacodec.hpp	/^    int ClearStat;       \/\/!< NVVE_CLEAR_STAT,$/;"	m	struct:cv::cudacodec::EncoderParams
CloneFrom	opencv2/core/wimage.hpp	/^    void CloneFrom(const WImage<T>& src) {$/;"	f	class:cv::WImageBuffer
CloneFrom	opencv2/core/wimage.hpp	/^    void CloneFrom(const WImageC<T, C>& src) {$/;"	f	class:cv::WImageBufferC
ClosePoints	opencv2/stitching/detail/seam_finders.hpp	/^        ClosePoints(int minDist) : minDist_(minDist) {}$/;"	f	class:cv::detail::DpSeamFinder::ClosePoints
ClosePoints	opencv2/stitching/detail/seam_finders.hpp	/^    class ClosePoints$/;"	c	class:cv::detail::DpSeamFinder
CmpTypes	opencv2/core/base.hpp	/^enum CmpTypes { CMP_EQ = 0, \/\/!< src1 is equal to src2.$/;"	g	namespace:cv
Code	opencv2/core/base.hpp	/^enum Code {$/;"	g	namespace:cv::Error
Codec	opencv2/cudacodec.hpp	/^enum Codec$/;"	g	namespace:cv::cudacodec
ColorAverageInpainter	opencv2/videostab/inpainting.hpp	/^class CV_EXPORTS ColorAverageInpainter : public InpainterBase$/;"	c	namespace:cv::videostab
ColorChannel	opencv2/core/cuda/detail/color_detail.hpp	/^        template<> struct ColorChannel<float>$/;"	s	namespace:cv::cuda::device::color_detail
ColorChannel	opencv2/core/cuda/detail/color_detail.hpp	/^        template<typename T> struct ColorChannel$/;"	s	namespace:cv::cuda::device::color_detail
ColorChannel	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <> struct ColorChannel<float>$/;"	s	namespace:cv::cudev::color_cvt_detail
ColorChannel	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <typename T> struct ColorChannel$/;"	s	namespace:cv::cudev::color_cvt_detail
ColorConversionCodes	opencv2/imgproc.hpp	/^enum ColorConversionCodes {$/;"	g	namespace:cv
ColorInpainter	opencv2/videostab/inpainting.hpp	/^class CV_EXPORTS ColorInpainter : public InpainterBase$/;"	c	namespace:cv::videostab
ColorInpainter	opencv2/videostab/inpainting.hpp	/^inline ColorInpainter::ColorInpainter(int _method, double _radius)$/;"	f	class:cv::videostab::ColorInpainter
ColormapTypes	opencv2/imgproc.hpp	/^enum ColormapTypes$/;"	g	namespace:cv
CommandLineParser	opencv2/core/utility.hpp	/^class CV_EXPORTS CommandLineParser$/;"	c	namespace:cv
CommonAreaInterPtr	opencv2/cudev/ptr2d/interpolation.hpp	/^template <typename SrcPtr> struct CommonAreaInterPtr$/;"	s	namespace:cv::cudev
CommonAreaInterPtrSz	opencv2/cudev/ptr2d/interpolation.hpp	/^template <class SrcPtr> struct CommonAreaInterPtrSz : CommonAreaInterPtr<SrcPtr>$/;"	s	namespace:cv::cudev
CompareT	opencv2/flann/heap.h	/^    struct CompareT$/;"	s	class:cvflann::Heap
Complex	opencv2/core/cvdef.h	60;"	d
Complex	opencv2/core/types.hpp	/^Complex<_Tp>::Complex( _Tp _re, _Tp _im )$/;"	f	class:cv::Complex
Complex	opencv2/core/types.hpp	/^Complex<_Tp>::Complex()$/;"	f	class:cv::Complex
Complex	opencv2/core/types.hpp	/^template<typename _Tp> class Complex$/;"	c	namespace:cv
Complexd	opencv2/core/types.hpp	/^typedef Complex<double> Complexd;$/;"	t	namespace:cv
Complexf	opencv2/core/types.hpp	/^typedef Complex<float> Complexf;$/;"	t	namespace:cv
ComponentState	opencv2/stitching/detail/seam_finders.hpp	/^    enum ComponentState$/;"	g	class:cv::detail::DpSeamFinder
CompositeIndex	opencv2/flann/composite_index.h	/^    CompositeIndex(const Matrix<ElementType>& inputData, const IndexParams& params = CompositeIndexParams(),$/;"	f	class:cvflann::CompositeIndex
CompositeIndex	opencv2/flann/composite_index.h	/^class CompositeIndex : public NNIndex<Distance>$/;"	c	namespace:cvflann
CompositeIndexParams	opencv2/flann/composite_index.h	/^    CompositeIndexParams(int trees = 4, int branching = 32, int iterations = 11,$/;"	f	struct:cvflann::CompositeIndexParams
CompositeIndexParams	opencv2/flann/composite_index.h	/^struct CompositeIndexParams : public IndexParams$/;"	s	namespace:cvflann
CompositeIndexParams	opencv2/flann/miniflann.hpp	/^struct CV_EXPORTS CompositeIndexParams : public IndexParams$/;"	s	namespace:cv::flann
CompressedRectilinearPortraitProjector	opencv2/stitching/detail/warpers.hpp	/^struct CV_EXPORTS CompressedRectilinearPortraitProjector : ProjectorBase$/;"	s	namespace:cv::detail
CompressedRectilinearPortraitWarper	opencv2/stitching/detail/warpers.hpp	/^   CompressedRectilinearPortraitWarper(float scale, float A = 1, float B = 1)$/;"	f	class:cv::detail::CompressedRectilinearPortraitWarper
CompressedRectilinearPortraitWarper	opencv2/stitching/detail/warpers.hpp	/^class CV_EXPORTS CompressedRectilinearPortraitWarper : public RotationWarperBase<CompressedRectilinearPortraitProjector>$/;"	c	namespace:cv::detail
CompressedRectilinearPortraitWarper	opencv2/stitching/warpers.hpp	/^    CompressedRectilinearPortraitWarper(float A = 1, float B = 1)$/;"	f	class:cv::CompressedRectilinearPortraitWarper
CompressedRectilinearPortraitWarper	opencv2/stitching/warpers.hpp	/^class CompressedRectilinearPortraitWarper: public WarperCreator$/;"	c	namespace:cv
CompressedRectilinearProjector	opencv2/stitching/detail/warpers.hpp	/^struct CV_EXPORTS CompressedRectilinearProjector : ProjectorBase$/;"	s	namespace:cv::detail
CompressedRectilinearWarper	opencv2/stitching/detail/warpers.hpp	/^    CompressedRectilinearWarper(float scale, float A = 1, float B = 1)$/;"	f	class:cv::detail::CompressedRectilinearWarper
CompressedRectilinearWarper	opencv2/stitching/detail/warpers.hpp	/^class CV_EXPORTS CompressedRectilinearWarper : public RotationWarperBase<CompressedRectilinearProjector>$/;"	c	namespace:cv::detail
CompressedRectilinearWarper	opencv2/stitching/warpers.hpp	/^    CompressedRectilinearWarper(float A = 1, float B = 1)$/;"	f	class:cv::CompressedRectilinearWarper
CompressedRectilinearWarper	opencv2/stitching/warpers.hpp	/^class CompressedRectilinearWarper: public WarperCreator$/;"	c	namespace:cv
ComputeMode	opencv2/core/cuda.hpp	/^    enum ComputeMode$/;"	g	class:cv::cuda::DeviceInfo
ComputeModeDefault	opencv2/core/cuda.hpp	/^        ComputeModeDefault,         \/**< default compute mode (Multiple threads can use cudaSetDevice with this device) *\/$/;"	e	enum:cv::cuda::DeviceInfo::ComputeMode
ComputeModeExclusive	opencv2/core/cuda.hpp	/^        ComputeModeExclusive,       \/**< compute-exclusive-thread mode (Only one thread in one process will be able to use cudaSetDevice with this device) *\/$/;"	e	enum:cv::cuda::DeviceInfo::ComputeMode
ComputeModeExclusiveProcess	opencv2/core/cuda.hpp	/^        ComputeModeExclusiveProcess \/**< compute-exclusive-process mode (Many threads in one process will be able to use cudaSetDevice with this device) *\/$/;"	e	enum:cv::cuda::DeviceInfo::ComputeMode
ComputeModeProhibited	opencv2/core/cuda.hpp	/^        ComputeModeProhibited,      \/**< compute-prohibited mode (No threads can use cudaSetDevice with this device) *\/$/;"	e	enum:cv::cuda::DeviceInfo::ComputeMode
ConcurrentRectVector	opencv2/core/private.hpp	/^    typedef tbb::concurrent_vector<Rect> ConcurrentRectVector;$/;"	t	namespace:cv
ConjGradSolver	opencv2/core/optim.hpp	/^class CV_EXPORTS ConjGradSolver : public MinProblemSolver$/;"	c	namespace:cv
ConnectedComponentsAlgorithmsTypes	opencv2/imgproc.hpp	/^enum ConnectedComponentsAlgorithmsTypes {$/;"	g	namespace:cv
ConnectedComponentsTypes	opencv2/imgproc.hpp	/^enum ConnectedComponentsTypes {$/;"	g	namespace:cv
ConsistentMosaicInpainter	opencv2/videostab/inpainting.hpp	/^class CV_EXPORTS ConsistentMosaicInpainter : public InpainterBase$/;"	c	namespace:cv::videostab
Constant	opencv2/core/ocl.hpp	/^    template<typename _Tp> static KernelArg Constant(const _Tp* arr, size_t n)$/;"	f	class:cv::ocl::KernelArg
ConstantPtr	opencv2/cudev/ptr2d/constant.hpp	/^template <typename T> struct ConstantPtr$/;"	s	namespace:cv::cudev
ConstantPtrSz	opencv2/cudev/ptr2d/constant.hpp	/^template <typename T> struct ConstantPtrSz : ConstantPtr<T>$/;"	s	namespace:cv::cudev
Context	opencv2/core/ocl.hpp	/^class CV_EXPORTS Context$/;"	c	namespace:cv::ocl
Context	opencv2/core/ocl.hpp	/^class CV_EXPORTS Context;$/;"	m	namespace:cv::ocl	typeref:class:cv::ocl::CV_EXPORTS
ContourApproximationModes	opencv2/imgproc.hpp	/^enum ContourApproximationModes {$/;"	g	namespace:cv
ConvertTuple	opencv2/cudev/util/detail/tuple.hpp	/^    template <class Tuple, template <typename T> class CvtOp> struct ConvertTuple<Tuple, 10, CvtOp>$/;"	s	namespace:cv::cudev::tuple_detail
ConvertTuple	opencv2/cudev/util/detail/tuple.hpp	/^    template <class Tuple, template <typename T> class CvtOp> struct ConvertTuple<Tuple, 2, CvtOp>$/;"	s	namespace:cv::cudev::tuple_detail
ConvertTuple	opencv2/cudev/util/detail/tuple.hpp	/^    template <class Tuple, template <typename T> class CvtOp> struct ConvertTuple<Tuple, 3, CvtOp>$/;"	s	namespace:cv::cudev::tuple_detail
ConvertTuple	opencv2/cudev/util/detail/tuple.hpp	/^    template <class Tuple, template <typename T> class CvtOp> struct ConvertTuple<Tuple, 4, CvtOp>$/;"	s	namespace:cv::cudev::tuple_detail
ConvertTuple	opencv2/cudev/util/detail/tuple.hpp	/^    template <class Tuple, template <typename T> class CvtOp> struct ConvertTuple<Tuple, 5, CvtOp>$/;"	s	namespace:cv::cudev::tuple_detail
ConvertTuple	opencv2/cudev/util/detail/tuple.hpp	/^    template <class Tuple, template <typename T> class CvtOp> struct ConvertTuple<Tuple, 6, CvtOp>$/;"	s	namespace:cv::cudev::tuple_detail
ConvertTuple	opencv2/cudev/util/detail/tuple.hpp	/^    template <class Tuple, template <typename T> class CvtOp> struct ConvertTuple<Tuple, 7, CvtOp>$/;"	s	namespace:cv::cudev::tuple_detail
ConvertTuple	opencv2/cudev/util/detail/tuple.hpp	/^    template <class Tuple, template <typename T> class CvtOp> struct ConvertTuple<Tuple, 8, CvtOp>$/;"	s	namespace:cv::cudev::tuple_detail
ConvertTuple	opencv2/cudev/util/detail/tuple.hpp	/^    template <class Tuple, template <typename T> class CvtOp> struct ConvertTuple<Tuple, 9, CvtOp>$/;"	s	namespace:cv::cudev::tuple_detail
ConvertTuple	opencv2/cudev/util/tuple.hpp	/^template <class Tuple, template <typename T> class CvtOp> struct ConvertTuple$/;"	s	namespace:cv::cudev
Convolution	opencv2/cudaarithm.hpp	/^class CV_EXPORTS Convolution : public Algorithm$/;"	c	namespace:cv::cuda
CopyFrom	opencv2/core/wimage.hpp	/^    void CopyFrom(const WImage<T>& src) { cvCopy(src.Ipl(), image_); }$/;"	f	class:cv::WImage
CopyFrom	opencv2/core/wimage.hpp	/^    void CopyFrom(const WImageC<T, C>& src) {$/;"	f	class:cv::WImageC
CornernessCriteria	opencv2/cudaimgproc.hpp	/^class CV_EXPORTS CornernessCriteria : public Algorithm$/;"	c	namespace:cv::cuda
CornersDetector	opencv2/cudaimgproc.hpp	/^class CV_EXPORTS CornersDetector : public Algorithm$/;"	c	namespace:cv::cuda
CostData	opencv2/flann/autotuned_index.h	/^    struct CostData$/;"	s	class:cvflann::AutotunedIndex
CostFunction	opencv2/stitching/detail/seam_finders.hpp	/^    enum CostFunction { COLOR, COLOR_GRAD };$/;"	g	class:cv::detail::DpSeamFinder
CostType	opencv2/stitching/detail/seam_finders.hpp	/^    enum CostType { COST_COLOR, COST_COLOR_GRAD };$/;"	g	class:cv::detail::GraphCutSeamFinderBase
CountNonZeroExprBody	opencv2/cudev/expr/reduction.hpp	/^template <class SrcPtr> struct CountNonZeroExprBody$/;"	s	namespace:cv::cudev
CovarFlags	opencv2/core.hpp	/^enum CovarFlags {$/;"	g	namespace:cv
CpuFeatures	opencv2/core/cvdef.h	/^enum CpuFeatures {$/;"	g
CreateFlags	opencv2/core/cuda.hpp	/^    enum CreateFlags$/;"	g	class:cv::cuda::Event
CreatorNotFound	opencv2/flann/object_factory.h	/^class CreatorNotFound$/;"	c	namespace:cvflann
CubicFilter	opencv2/core/cuda/filters.hpp	/^        explicit __host__ __device__ __forceinline__ CubicFilter(const Ptr2D& src_, float fx = 0.f, float fy = 0.f)$/;"	f	struct:cv::cuda::device::CubicFilter
CubicFilter	opencv2/core/cuda/filters.hpp	/^    template <typename Ptr2D> struct CubicFilter$/;"	s	namespace:cv::cuda::device
CubicInterPtr	opencv2/cudev/ptr2d/interpolation.hpp	/^template <typename SrcPtr> struct CubicInterPtr$/;"	s	namespace:cv::cudev
CubicInterPtrSz	opencv2/cudev/ptr2d/interpolation.hpp	/^template <class SrcPtr> struct CubicInterPtrSz : CubicInterPtr<SrcPtr>$/;"	s	namespace:cv::cudev
Cv16suf	opencv2/core/cvdef.h	/^Cv16suf;$/;"	t	typeref:union:Cv16suf
Cv16suf	opencv2/core/cvdef.h	/^typedef union Cv16suf$/;"	u
Cv32suf	opencv2/core/cvdef.h	/^Cv32suf;$/;"	t	typeref:union:Cv32suf
Cv32suf	opencv2/core/cvdef.h	/^typedef union Cv32suf$/;"	u
Cv64suf	opencv2/core/cvdef.h	/^Cv64suf;$/;"	t	typeref:union:Cv64suf
Cv64suf	opencv2/core/cvdef.h	/^typedef union Cv64suf$/;"	u
CvArr	opencv2/core/types_c.h	/^typedef void CvArr;$/;"	t
CvAttrList	opencv2/core/types_c.h	/^CvAttrList;$/;"	t	typeref:struct:CvAttrList
CvAttrList	opencv2/core/types_c.h	/^typedef struct CvAttrList$/;"	s
CvAvgComp	opencv2/objdetect/objdetect_c.h	/^typedef struct CvAvgComp$/;"	s
CvAvgComp	opencv2/objdetect/objdetect_c.h	/^} CvAvgComp;$/;"	t	typeref:struct:CvAvgComp
CvBox2D	opencv2/core/types_c.h	/^    CvBox2D(CvPoint2D32f c = CvPoint2D32f(), CvSize2D32f s = CvSize2D32f(), float a = 0) : center(c), size(s), angle(a) {}$/;"	f	struct:CvBox2D
CvBox2D	opencv2/core/types_c.h	/^    CvBox2D(const cv::RotatedRect& rr) : center(rr.center), size(rr.size), angle(rr.angle) {}$/;"	f	struct:CvBox2D
CvBox2D	opencv2/core/types_c.h	/^CvBox2D;$/;"	t	typeref:struct:CvBox2D
CvBox2D	opencv2/core/types_c.h	/^typedef struct CvBox2D$/;"	s
CvButtonCallback	opencv2/highgui/highgui_c.h	/^typedef void (CV_CDECL *CvButtonCallback)(int state, void* userdata);$/;"	t
CvCapture	opencv2/videoio.hpp	/^typedef struct CvCapture CvCapture;$/;"	t	typeref:struct:CvCapture
CvCapture	opencv2/videoio/videoio_c.h	/^typedef struct CvCapture CvCapture;$/;"	t	typeref:struct:CvCapture
CvChain	opencv2/core/types_c.h	/^CvChain;$/;"	t	typeref:struct:CvChain
CvChain	opencv2/core/types_c.h	/^typedef struct CvChain$/;"	s
CvChainPtReader	opencv2/imgproc/types_c.h	/^CvChainPtReader;$/;"	t	typeref:struct:CvChainPtReader
CvChainPtReader	opencv2/imgproc/types_c.h	/^typedef struct CvChainPtReader$/;"	s
CvCloneFunc	opencv2/core/types_c.h	/^typedef void* (CV_CDECL *CvCloneFunc)( const void* struct_ptr );$/;"	t
CvCmpFunc	opencv2/core/core_c.h	/^typedef int (CV_CDECL* CvCmpFunc)(const void* a, const void* b, void* userdata );$/;"	t
CvConnectedComp	opencv2/imgproc/types_c.h	/^CvConnectedComp;$/;"	t	typeref:struct:CvConnectedComp
CvConnectedComp	opencv2/imgproc/types_c.h	/^typedef struct CvConnectedComp$/;"	s
CvContour	opencv2/core/types_c.h	/^CvContour;$/;"	t	typeref:struct:CvContour
CvContour	opencv2/core/types_c.h	/^typedef struct CvContour$/;"	s
CvContourScanner	opencv2/imgproc/types_c.h	/^typedef struct _CvContourScanner* CvContourScanner;$/;"	t	typeref:struct:_CvContourScanner
CvConvexityDefect	opencv2/imgproc/types_c.h	/^typedef struct CvConvexityDefect$/;"	s
CvConvexityDefect	opencv2/imgproc/types_c.h	/^} CvConvexityDefect;$/;"	t	typeref:struct:CvConvexityDefect
CvCudevTextureRef	opencv2/cudev/ptr2d/texture.hpp	/^    template <typename T> struct CvCudevTextureRef$/;"	s	namespace:__anon406
CvDistanceFunction	opencv2/imgproc/types_c.h	/^typedef float (CV_CDECL * CvDistanceFunction)( const float* a, const float* b, void* user_param );$/;"	t
CvErrorCallback	opencv2/core/core_c.h	/^typedef int (CV_CDECL *CvErrorCallback)( int status, const char* func_name,$/;"	t
CvFileNode	opencv2/core/persistence.hpp	/^typedef struct CvFileNode CvFileNode;$/;"	t	typeref:struct:CvFileNode
CvFileNode	opencv2/core/types_c.h	/^CvFileNode;$/;"	t	typeref:struct:CvFileNode
CvFileNode	opencv2/core/types_c.h	/^typedef struct CvFileNode$/;"	s
CvFileNodeHash	opencv2/core/types_c.h	/^typedef struct CvGenericHash CvFileNodeHash;$/;"	t	typeref:struct:CvGenericHash
CvFileStorage	opencv2/core/persistence.hpp	/^typedef struct CvFileStorage CvFileStorage;$/;"	t	typeref:struct:CvFileStorage
CvFileStorage	opencv2/core/types_c.h	/^typedef struct CvFileStorage CvFileStorage;$/;"	t	typeref:struct:CvFileStorage
CvFont	opencv2/imgproc/imgproc_c.h	/^CvFont;$/;"	t	typeref:struct:CvFont
CvFont	opencv2/imgproc/imgproc_c.h	/^typedef struct CvFont$/;"	s
CvGraph	opencv2/core/types_c.h	/^CvGraph;$/;"	t	typeref:struct:CvGraph
CvGraph	opencv2/core/types_c.h	/^typedef struct CvGraph$/;"	s
CvGraphEdge	opencv2/core/types_c.h	/^CvGraphEdge;$/;"	t	typeref:struct:CvGraphEdge
CvGraphEdge	opencv2/core/types_c.h	/^typedef struct CvGraphEdge$/;"	s
CvGraphScanner	opencv2/core/core_c.h	/^CvGraphScanner;$/;"	t	typeref:struct:CvGraphScanner
CvGraphScanner	opencv2/core/core_c.h	/^typedef struct CvGraphScanner$/;"	s
CvGraphVtx	opencv2/core/types_c.h	/^CvGraphVtx;$/;"	t	typeref:struct:CvGraphVtx
CvGraphVtx	opencv2/core/types_c.h	/^typedef struct CvGraphVtx$/;"	s
CvGraphVtx2D	opencv2/core/types_c.h	/^CvGraphVtx2D;$/;"	t	typeref:struct:CvGraphVtx2D
CvGraphVtx2D	opencv2/core/types_c.h	/^typedef struct CvGraphVtx2D$/;"	s
CvHaarClassifier	opencv2/objdetect/objdetect_c.h	/^typedef struct CvHaarClassifier$/;"	s
CvHaarClassifier	opencv2/objdetect/objdetect_c.h	/^} CvHaarClassifier;$/;"	t	typeref:struct:CvHaarClassifier
CvHaarClassifierCascade	opencv2/objdetect.hpp	/^typedef struct CvHaarClassifierCascade CvHaarClassifierCascade;$/;"	t	typeref:struct:CvHaarClassifierCascade
CvHaarClassifierCascade	opencv2/objdetect/objdetect_c.h	/^typedef struct CvHaarClassifierCascade$/;"	s
CvHaarClassifierCascade	opencv2/objdetect/objdetect_c.h	/^} CvHaarClassifierCascade;$/;"	t	typeref:struct:CvHaarClassifierCascade
CvHaarFeature	opencv2/objdetect/objdetect_c.h	/^typedef struct CvHaarFeature$/;"	s
CvHaarFeature	opencv2/objdetect/objdetect_c.h	/^} CvHaarFeature;$/;"	t	typeref:struct:CvHaarFeature
CvHaarStageClassifier	opencv2/objdetect/objdetect_c.h	/^typedef struct CvHaarStageClassifier$/;"	s
CvHaarStageClassifier	opencv2/objdetect/objdetect_c.h	/^} CvHaarStageClassifier;$/;"	t	typeref:struct:CvHaarStageClassifier
CvHidHaarClassifierCascade	opencv2/objdetect/objdetect_c.h	/^typedef struct CvHidHaarClassifierCascade CvHidHaarClassifierCascade;$/;"	t	typeref:struct:CvHidHaarClassifierCascade
CvHistType	opencv2/core/types_c.h	/^typedef int CvHistType;$/;"	t
CvHistogram	opencv2/core/types_c.h	/^CvHistogram;$/;"	t	typeref:struct:CvHistogram
CvHistogram	opencv2/core/types_c.h	/^typedef struct CvHistogram$/;"	s
CvHuMoments	opencv2/imgproc/types_c.h	/^CvHuMoments;$/;"	t	typeref:struct:CvHuMoments
CvHuMoments	opencv2/imgproc/types_c.h	/^typedef struct CvHuMoments$/;"	s
CvIsInstanceFunc	opencv2/core/types_c.h	/^typedef int (CV_CDECL *CvIsInstanceFunc)( const void* struct_ptr );$/;"	t
CvKalman	opencv2/video/tracking_c.h	/^typedef struct CvKalman$/;"	s
CvKalman	opencv2/video/tracking_c.h	/^} CvKalman;$/;"	t	typeref:struct:CvKalman
CvLevMarq	opencv2/calib3d/calib3d_c.h	/^class CV_EXPORTS CvLevMarq$/;"	c
CvLineIterator	opencv2/core/types_c.h	/^CvLineIterator;$/;"	t	typeref:struct:CvLineIterator
CvLineIterator	opencv2/core/types_c.h	/^typedef struct CvLineIterator$/;"	s
CvMat	opencv2/core/persistence.hpp	/^typedef struct CvMat CvMat;$/;"	t	typeref:struct:CvMat
CvMat	opencv2/core/types_c.h	/^    CvMat() {}$/;"	f	struct:CvMat
CvMat	opencv2/core/types_c.h	/^    CvMat(const CvMat& m) { memcpy(this, &m, sizeof(CvMat));}$/;"	f	struct:CvMat
CvMat	opencv2/core/types_c.h	/^CvMat;$/;"	t	typeref:struct:CvMat
CvMat	opencv2/core/types_c.h	/^inline CvMat::CvMat(const cv::Mat& m)$/;"	f	class:CvMat
CvMat	opencv2/core/types_c.h	/^typedef struct CvMat$/;"	s
CvMatND	opencv2/core/persistence.hpp	/^typedef struct CvMatND CvMatND;$/;"	t	typeref:struct:CvMatND
CvMatND	opencv2/core/types_c.h	/^    CvMatND() {}$/;"	f	struct:CvMatND
CvMatND	opencv2/core/types_c.h	/^CvMatND$/;"	s
CvMatND	opencv2/core/types_c.h	/^CvMatND;$/;"	t	typeref:struct:CvMatND
CvMemBlock	opencv2/core/types_c.h	/^CvMemBlock;$/;"	t	typeref:struct:CvMemBlock
CvMemBlock	opencv2/core/types_c.h	/^typedef struct CvMemBlock$/;"	s
CvMemStorage	opencv2/core/types_c.h	/^CvMemStorage;$/;"	t	typeref:struct:CvMemStorage
CvMemStorage	opencv2/core/types_c.h	/^typedef struct CvMemStorage$/;"	s
CvMemStoragePos	opencv2/core/types_c.h	/^CvMemStoragePos;$/;"	t	typeref:struct:CvMemStoragePos
CvMemStoragePos	opencv2/core/types_c.h	/^typedef struct CvMemStoragePos$/;"	s
CvModuleInfo	opencv2/core/types_c.h	/^CvModuleInfo;$/;"	t	typeref:struct:CvModuleInfo
CvModuleInfo	opencv2/core/types_c.h	/^typedef struct CvModuleInfo$/;"	s
CvMoments	opencv2/imgproc/types_c.h	/^    CvMoments(){}$/;"	f	struct:CvMoments
CvMoments	opencv2/imgproc/types_c.h	/^    CvMoments(const cv::Moments& m)$/;"	f	struct:CvMoments
CvMoments	opencv2/imgproc/types_c.h	/^CvMoments;$/;"	t	typeref:struct:CvMoments
CvMoments	opencv2/imgproc/types_c.h	/^typedef struct CvMoments$/;"	s
CvMouseCallback	opencv2/highgui/highgui_c.h	/^typedef void (CV_CDECL *CvMouseCallback )(int event, int x, int y, int flags, void* param);$/;"	t
CvNArrayIterator	opencv2/core/core_c.h	/^CvNArrayIterator;$/;"	t	typeref:struct:CvNArrayIterator
CvNArrayIterator	opencv2/core/core_c.h	/^typedef struct CvNArrayIterator$/;"	s
CvOpenGlDrawCallback	opencv2/highgui/highgui_c.h	/^typedef void (CV_CDECL *CvOpenGlDrawCallback)(void* userdata);$/;"	t
CvPOSITObject	opencv2/calib3d/calib3d_c.h	/^typedef struct CvPOSITObject CvPOSITObject;$/;"	t	typeref:struct:CvPOSITObject
CvPluginFuncInfo	opencv2/core/types_c.h	/^CvPluginFuncInfo;$/;"	t	typeref:struct:CvPluginFuncInfo
CvPluginFuncInfo	opencv2/core/types_c.h	/^typedef struct CvPluginFuncInfo$/;"	s
CvPoint	opencv2/core/types_c.h	/^    CvPoint(const cv::Point_<_Tp>& pt): x((int)pt.x), y((int)pt.y) {}$/;"	f	struct:CvPoint
CvPoint	opencv2/core/types_c.h	/^    CvPoint(int _x = 0, int _y = 0): x(_x), y(_y) {}$/;"	f	struct:CvPoint
CvPoint	opencv2/core/types_c.h	/^CvPoint;$/;"	t	typeref:struct:CvPoint
CvPoint	opencv2/core/types_c.h	/^typedef struct CvPoint$/;"	s
CvPoint2D32f	opencv2/core/types_c.h	/^    CvPoint2D32f(const cv::Point_<_Tp>& pt): x((float)pt.x), y((float)pt.y) {}$/;"	f	struct:CvPoint2D32f
CvPoint2D32f	opencv2/core/types_c.h	/^    CvPoint2D32f(float _x = 0, float _y = 0): x(_x), y(_y) {}$/;"	f	struct:CvPoint2D32f
CvPoint2D32f	opencv2/core/types_c.h	/^CvPoint2D32f;$/;"	t	typeref:struct:CvPoint2D32f
CvPoint2D32f	opencv2/core/types_c.h	/^typedef struct CvPoint2D32f$/;"	s
CvPoint2D64f	opencv2/core/types_c.h	/^CvPoint2D64f;$/;"	t	typeref:struct:CvPoint2D64f
CvPoint2D64f	opencv2/core/types_c.h	/^typedef struct CvPoint2D64f$/;"	s
CvPoint2DSeq	opencv2/core/types_c.h	/^typedef CvContour CvPoint2DSeq;$/;"	t
CvPoint3D32f	opencv2/core/types_c.h	/^    CvPoint3D32f(const cv::Point3_<_Tp>& pt): x((float)pt.x), y((float)pt.y), z((float)pt.z) {}$/;"	f	struct:CvPoint3D32f
CvPoint3D32f	opencv2/core/types_c.h	/^    CvPoint3D32f(float _x = 0, float _y = 0, float _z = 0): x(_x), y(_y), z(_z) {}$/;"	f	struct:CvPoint3D32f
CvPoint3D32f	opencv2/core/types_c.h	/^CvPoint3D32f;$/;"	t	typeref:struct:CvPoint3D32f
CvPoint3D32f	opencv2/core/types_c.h	/^typedef struct CvPoint3D32f$/;"	s
CvPoint3D64f	opencv2/core/types_c.h	/^CvPoint3D64f;$/;"	t	typeref:struct:CvPoint3D64f
CvPoint3D64f	opencv2/core/types_c.h	/^typedef struct CvPoint3D64f$/;"	s
CvRNG	opencv2/core/types_c.h	/^typedef uint64 CvRNG;$/;"	t
CvReadFunc	opencv2/core/types_c.h	/^typedef void* (CV_CDECL *CvReadFunc)( CvFileStorage* storage, CvFileNode* node );$/;"	t
CvRect	opencv2/core/types_c.h	/^    CvRect(const cv::Rect_<_Tp>& r): x(cv::saturate_cast<int>(r.x)), y(cv::saturate_cast<int>(r.y)), width(cv::saturate_cast<int>(r.width)), height(cv::saturate_cast<int>(r.height)) {}$/;"	f	struct:CvRect
CvRect	opencv2/core/types_c.h	/^    CvRect(int _x = 0, int _y = 0, int w = 0, int h = 0): x(_x), y(_y), width(w), height(h) {}$/;"	f	struct:CvRect
CvRect	opencv2/core/types_c.h	/^CvRect;$/;"	t	typeref:struct:CvRect
CvRect	opencv2/core/types_c.h	/^typedef struct CvRect$/;"	s
CvReleaseFunc	opencv2/core/types_c.h	/^typedef void (CV_CDECL *CvReleaseFunc)( void** struct_dblptr );$/;"	t
CvScalar	opencv2/core/types_c.h	/^    CvScalar() {}$/;"	f	struct:CvScalar
CvScalar	opencv2/core/types_c.h	/^    CvScalar(const cv::Scalar_<_Tp>& s) { val[0] = s.val[0]; val[1] = s.val[1]; val[2] = s.val[2]; val[3] = s.val[3]; }$/;"	f	struct:CvScalar
CvScalar	opencv2/core/types_c.h	/^    CvScalar(const cv::Vec<_Tp, cn>& v)$/;"	f	struct:CvScalar
CvScalar	opencv2/core/types_c.h	/^    CvScalar(double d0, double d1 = 0, double d2 = 0, double d3 = 0) { val[0] = d0; val[1] = d1; val[2] = d2; val[3] = d3; }$/;"	f	struct:CvScalar
CvScalar	opencv2/core/types_c.h	/^CvScalar;$/;"	t	typeref:struct:CvScalar
CvScalar	opencv2/core/types_c.h	/^typedef struct CvScalar$/;"	s
CvSeq	opencv2/core/types_c.h	/^CvSeq;$/;"	t	typeref:struct:CvSeq
CvSeq	opencv2/core/types_c.h	/^typedef struct CvSeq$/;"	s
CvSeqBlock	opencv2/core/types_c.h	/^CvSeqBlock;$/;"	t	typeref:struct:CvSeqBlock
CvSeqBlock	opencv2/core/types_c.h	/^typedef struct CvSeqBlock$/;"	s
CvSeqReader	opencv2/core/types_c.h	/^CvSeqReader;$/;"	t	typeref:struct:CvSeqReader
CvSeqReader	opencv2/core/types_c.h	/^typedef struct CvSeqReader$/;"	s
CvSeqWriter	opencv2/core/types_c.h	/^CvSeqWriter;$/;"	t	typeref:struct:CvSeqWriter
CvSeqWriter	opencv2/core/types_c.h	/^typedef struct CvSeqWriter$/;"	s
CvSet	opencv2/core/types_c.h	/^CvSet;$/;"	t	typeref:struct:CvSet
CvSet	opencv2/core/types_c.h	/^typedef struct CvSet$/;"	s
CvSetElem	opencv2/core/types_c.h	/^CvSetElem;$/;"	t	typeref:struct:CvSetElem
CvSetElem	opencv2/core/types_c.h	/^typedef struct CvSetElem$/;"	s
CvSize	opencv2/core/types_c.h	/^    CvSize(const cv::Size_<_Tp>& sz): width(cv::saturate_cast<int>(sz.width)), height(cv::saturate_cast<int>(sz.height)) {}$/;"	f	struct:CvSize
CvSize	opencv2/core/types_c.h	/^    CvSize(int w = 0, int h = 0): width(w), height(h) {}$/;"	f	struct:CvSize
CvSize	opencv2/core/types_c.h	/^CvSize;$/;"	t	typeref:struct:CvSize
CvSize	opencv2/core/types_c.h	/^typedef struct CvSize$/;"	s
CvSize2D32f	opencv2/core/types_c.h	/^    CvSize2D32f(const cv::Size_<_Tp>& sz): width(cv::saturate_cast<float>(sz.width)), height(cv::saturate_cast<float>(sz.height)) {}$/;"	f	struct:CvSize2D32f
CvSize2D32f	opencv2/core/types_c.h	/^    CvSize2D32f(float w = 0, float h = 0): width(w), height(h) {}$/;"	f	struct:CvSize2D32f
CvSize2D32f	opencv2/core/types_c.h	/^CvSize2D32f;$/;"	t	typeref:struct:CvSize2D32f
CvSize2D32f	opencv2/core/types_c.h	/^typedef struct CvSize2D32f$/;"	s
CvSlice	opencv2/core/types_c.h	/^    CvSlice(const cv::Range& r) { *this = (r.start != INT_MIN && r.end != INT_MAX) ? CvSlice(r.start, r.end) : CvSlice(0, CV_WHOLE_SEQ_END_INDEX); }$/;"	f	struct:CvSlice
CvSlice	opencv2/core/types_c.h	/^    CvSlice(int start = 0, int end = 0) : start_index(start), end_index(end) {}$/;"	f	struct:CvSlice
CvSlice	opencv2/core/types_c.h	/^CvSlice;$/;"	t	typeref:struct:CvSlice
CvSlice	opencv2/core/types_c.h	/^typedef struct CvSlice$/;"	s
CvSparseMat	opencv2/core/types_c.h	/^CvSparseMat$/;"	s
CvSparseMat	opencv2/core/types_c.h	/^CvSparseMat;$/;"	t	typeref:struct:CvSparseMat
CvSparseMatIterator	opencv2/core/types_c.h	/^CvSparseMatIterator;$/;"	t	typeref:struct:CvSparseMatIterator
CvSparseMatIterator	opencv2/core/types_c.h	/^typedef struct CvSparseMatIterator$/;"	s
CvSparseNode	opencv2/core/types_c.h	/^CvSparseNode;$/;"	t	typeref:struct:CvSparseNode
CvSparseNode	opencv2/core/types_c.h	/^typedef struct CvSparseNode$/;"	s
CvStatus	opencv2/core/private.hpp	/^CvStatus;$/;"	t	typeref:enum:CvStatus
CvStatus	opencv2/core/private.hpp	/^typedef enum CvStatus$/;"	g
CvStereoBMState	opencv2/calib3d/calib3d_c.h	/^typedef struct CvStereoBMState$/;"	s
CvStereoBMState	opencv2/calib3d/calib3d_c.h	/^} CvStereoBMState;$/;"	t	typeref:struct:CvStereoBMState
CvString	opencv2/core/types_c.h	/^CvString;$/;"	t	typeref:struct:CvString
CvString	opencv2/core/types_c.h	/^typedef struct CvString$/;"	s
CvStringHashNode	opencv2/core/types_c.h	/^CvStringHashNode;$/;"	t	typeref:struct:CvStringHashNode
CvStringHashNode	opencv2/core/types_c.h	/^typedef struct CvStringHashNode$/;"	s
CvTermCriteria	opencv2/core/types_c.h	/^    CvTermCriteria(const cv::TermCriteria& t) : type(t.type), max_iter(t.maxCount), epsilon(t.epsilon)  {}$/;"	f	struct:CvTermCriteria
CvTermCriteria	opencv2/core/types_c.h	/^    CvTermCriteria(int _type = 0, int _iter = 0, double _eps = 0) : type(_type), max_iter(_iter), epsilon(_eps)  {}$/;"	f	struct:CvTermCriteria
CvTermCriteria	opencv2/core/types_c.h	/^CvTermCriteria;$/;"	t	typeref:struct:CvTermCriteria
CvTermCriteria	opencv2/core/types_c.h	/^typedef struct CvTermCriteria$/;"	s
CvTrackbarCallback	opencv2/highgui/highgui_c.h	/^typedef void (CV_CDECL *CvTrackbarCallback)(int pos);$/;"	t
CvTrackbarCallback2	opencv2/highgui/highgui_c.h	/^typedef void (CV_CDECL *CvTrackbarCallback2)(int pos, void* userdata);$/;"	t
CvTreeNodeIterator	opencv2/core/core_c.h	/^CvTreeNodeIterator;$/;"	t	typeref:struct:CvTreeNodeIterator
CvTreeNodeIterator	opencv2/core/core_c.h	/^typedef struct CvTreeNodeIterator$/;"	s
CvType	opencv2/core/core_c.h	/^struct CV_EXPORTS CvType$/;"	s
CvType	opencv2/flann.hpp	/^template <> struct CvType<char> { static int type() { return CV_8S; } };$/;"	s	namespace:cv::flann
CvType	opencv2/flann.hpp	/^template <> struct CvType<double> { static int type() { return CV_64F; } };$/;"	s	namespace:cv::flann
CvType	opencv2/flann.hpp	/^template <> struct CvType<float> { static int type() { return CV_32F; } };$/;"	s	namespace:cv::flann
CvType	opencv2/flann.hpp	/^template <> struct CvType<int> { static int type() { return CV_32S; } };$/;"	s	namespace:cv::flann
CvType	opencv2/flann.hpp	/^template <> struct CvType<short> { static int type() { return CV_16S; } };$/;"	s	namespace:cv::flann
CvType	opencv2/flann.hpp	/^template <> struct CvType<unsigned char> { static int type() { return CV_8U; } };$/;"	s	namespace:cv::flann
CvType	opencv2/flann.hpp	/^template <> struct CvType<unsigned short> { static int type() { return CV_16U; } };$/;"	s	namespace:cv::flann
CvType	opencv2/flann.hpp	/^template <typename T> struct CvType {};$/;"	s	namespace:cv::flann
CvTypeInfo	opencv2/core/types_c.h	/^CvTypeInfo;$/;"	t	typeref:struct:CvTypeInfo
CvTypeInfo	opencv2/core/types_c.h	/^typedef struct CvTypeInfo$/;"	s
CvVideoWriter	opencv2/videoio.hpp	/^typedef struct CvVideoWriter CvVideoWriter;$/;"	t	typeref:struct:CvVideoWriter
CvVideoWriter	opencv2/videoio/videoio_c.h	/^typedef struct CvVideoWriter CvVideoWriter;$/;"	t	typeref:struct:CvVideoWriter
CvWriteFunc	opencv2/core/types_c.h	/^typedef void (CV_CDECL *CvWriteFunc)( CvFileStorage* storage, const char* name,$/;"	t
Cv_iplAllocateImageData	opencv2/core/core_c.h	/^typedef void (CV_STDCALL* Cv_iplAllocateImageData)(IplImage*,int,int);$/;"	t
Cv_iplCloneImage	opencv2/core/core_c.h	/^typedef IplImage* (CV_STDCALL* Cv_iplCloneImage)(const IplImage*);$/;"	t
Cv_iplCreateImageHeader	opencv2/core/core_c.h	/^typedef IplImage* (CV_STDCALL* Cv_iplCreateImageHeader)$/;"	t
Cv_iplCreateROI	opencv2/core/core_c.h	/^typedef IplROI* (CV_STDCALL* Cv_iplCreateROI)(int,int,int,int,int);$/;"	t
Cv_iplDeallocate	opencv2/core/core_c.h	/^typedef void (CV_STDCALL* Cv_iplDeallocate)(IplImage*,int);$/;"	t
CylindricalPortraitProjector	opencv2/stitching/detail/warpers.hpp	/^struct CylindricalPortraitProjector : ProjectorBase$/;"	s	namespace:cv::detail
CylindricalPortraitWarper	opencv2/stitching/detail/warpers.hpp	/^    CylindricalPortraitWarper(float scale) { projector_.scale = scale; }$/;"	f	class:cv::detail::CylindricalPortraitWarper
CylindricalPortraitWarper	opencv2/stitching/detail/warpers.hpp	/^class CV_EXPORTS CylindricalPortraitWarper : public RotationWarperBase<CylindricalPortraitProjector>$/;"	c	namespace:cv::detail
CylindricalProjector	opencv2/stitching/detail/warpers.hpp	/^struct CV_EXPORTS CylindricalProjector : ProjectorBase$/;"	s	namespace:cv::detail
CylindricalWarper	opencv2/stitching/detail/warpers.hpp	/^    CylindricalWarper(float scale) { projector_.scale = scale; }$/;"	f	class:cv::detail::CylindricalWarper
CylindricalWarper	opencv2/stitching/detail/warpers.hpp	/^class CV_EXPORTS CylindricalWarper : public RotationWarperBase<CylindricalProjector>$/;"	c	namespace:cv::detail
CylindricalWarper	opencv2/stitching/warpers.hpp	/^class CylindricalWarper: public WarperCreator$/;"	c	namespace:cv
CylindricalWarperGpu	opencv2/stitching/detail/warpers.hpp	/^    CylindricalWarperGpu(float scale) : CylindricalWarper(scale) {}$/;"	f	class:cv::detail::CylindricalWarperGpu
CylindricalWarperGpu	opencv2/stitching/detail/warpers.hpp	/^class CV_EXPORTS CylindricalWarperGpu : public CylindricalWarper$/;"	c	namespace:cv::detail
CylindricalWarperGpu	opencv2/stitching/warpers.hpp	/^class CylindricalWarperGpu: public WarperCreator$/;"	c	namespace:cv
DATA_AS_COL	opencv2/core.hpp	/^                 DATA_AS_COL = 1, \/\/!< indicates that the input samples are stored as matrix columns$/;"	e	enum:cv::PCA::Flags
DATA_AS_ROW	opencv2/core.hpp	/^    enum Flags { DATA_AS_ROW = 0, \/\/!< indicates that the input samples are stored as matrix rows$/;"	e	enum:cv::PCA::Flags
DCT2D	opencv2/core/hal/hal.hpp	/^struct CV_EXPORTS DCT2D$/;"	s	namespace:cv::hal
DCT_INVERSE	opencv2/core/base.hpp	/^    DCT_INVERSE        = DFT_INVERSE,$/;"	e	enum:cv::DftFlags
DCT_ROWS	opencv2/core/base.hpp	/^    DCT_ROWS           = DFT_ROWS$/;"	e	enum:cv::DftFlags
DECOMP_CHOLESKY	opencv2/core/base.hpp	/^    DECOMP_CHOLESKY = 3,$/;"	e	enum:cv::DecompTypes
DECOMP_EIG	opencv2/core/base.hpp	/^    DECOMP_EIG      = 2,$/;"	e	enum:cv::DecompTypes
DECOMP_LU	opencv2/core/base.hpp	/^    DECOMP_LU       = 0,$/;"	e	enum:cv::DecompTypes
DECOMP_NORMAL	opencv2/core/base.hpp	/^    DECOMP_NORMAL   = 16$/;"	e	enum:cv::DecompTypes
DECOMP_QR	opencv2/core/base.hpp	/^    DECOMP_QR       = 4,$/;"	e	enum:cv::DecompTypes
DECOMP_SVD	opencv2/core/base.hpp	/^    DECOMP_SVD      = 1,$/;"	e	enum:cv::DecompTypes
DEFAULT	opencv2/core/cuda.hpp	/^        DEFAULT        = 0x00,  \/**< Default event flag *\/$/;"	e	enum:cv::cuda::Event::CreateFlags
DEFAULT	opencv2/features2d.hpp	/^    enum{ DEFAULT = 0, \/\/!< Output image matrix will be created (Mat::create),$/;"	e	enum:cv::DrawMatchesFlags::__anon385
DEFAULT_MAX_ITERS	opencv2/ml.hpp	/^    enum {DEFAULT_NCLUSTERS=5, DEFAULT_MAX_ITERS=100};$/;"	e	enum:cv::ml::EM::__anon340
DEFAULT_NCLUSTERS	opencv2/ml.hpp	/^    enum {DEFAULT_NCLUSTERS=5, DEFAULT_MAX_ITERS=100};$/;"	e	enum:cv::ml::EM::__anon340
DEFAULT_NLEVELS	opencv2/objdetect.hpp	/^    enum { DEFAULT_NLEVELS = 64$/;"	e	enum:cv::HOGDescriptor::__anon388
DEGREE	opencv2/ml.hpp	/^        DEGREE=5$/;"	e	enum:cv::ml::SVM::ParamTypes
DEPTH_COMPONENT	opencv2/core/opengl.hpp	/^        DEPTH_COMPONENT = 0x1902, \/\/!< Depth$/;"	e	enum:cv::ogl::Texture2D::Format
DEPTH_MASK	opencv2/core/mat.hpp	/^    enum { MAGIC_MASK = 0xFFFF0000, TYPE_MASK = 0x00000FFF, DEPTH_MASK = 7 };$/;"	e	enum:cv::Mat::__anon277
DEPTH_MASK	opencv2/core/mat.hpp	/^    enum { MAGIC_MASK = 0xFFFF0000, TYPE_MASK = 0x00000FFF, DEPTH_MASK = 7 };$/;"	e	enum:cv::UMat::__anon279
DEPTH_MASK_16S	opencv2/core/mat.hpp	/^        DEPTH_MASK_16S = 1 << CV_16S,$/;"	e	enum:cv::_OutputArray::__anon274
DEPTH_MASK_16U	opencv2/core/mat.hpp	/^        DEPTH_MASK_16U = 1 << CV_16U,$/;"	e	enum:cv::_OutputArray::__anon274
DEPTH_MASK_32F	opencv2/core/mat.hpp	/^        DEPTH_MASK_32F = 1 << CV_32F,$/;"	e	enum:cv::_OutputArray::__anon274
DEPTH_MASK_32S	opencv2/core/mat.hpp	/^        DEPTH_MASK_32S = 1 << CV_32S,$/;"	e	enum:cv::_OutputArray::__anon274
DEPTH_MASK_64F	opencv2/core/mat.hpp	/^        DEPTH_MASK_64F = 1 << CV_64F,$/;"	e	enum:cv::_OutputArray::__anon274
DEPTH_MASK_8S	opencv2/core/mat.hpp	/^        DEPTH_MASK_8S = 1 << CV_8S,$/;"	e	enum:cv::_OutputArray::__anon274
DEPTH_MASK_8U	opencv2/core/mat.hpp	/^        DEPTH_MASK_8U = 1 << CV_8U,$/;"	e	enum:cv::_OutputArray::__anon274
DEPTH_MASK_ALL	opencv2/core/mat.hpp	/^        DEPTH_MASK_ALL = (DEPTH_MASK_64F<<1)-1,$/;"	e	enum:cv::_OutputArray::__anon274
DEPTH_MASK_ALL_BUT_8S	opencv2/core/mat.hpp	/^        DEPTH_MASK_ALL_BUT_8S = DEPTH_MASK_ALL & ~DEPTH_MASK_8S,$/;"	e	enum:cv::_OutputArray::__anon274
DEPTH_MASK_FLT	opencv2/core/mat.hpp	/^        DEPTH_MASK_FLT = DEPTH_MASK_32F + DEPTH_MASK_64F$/;"	e	enum:cv::_OutputArray::__anon274
DESCRIPTOR_KAZE	opencv2/features2d.hpp	/^        DESCRIPTOR_KAZE = 3,$/;"	e	enum:cv::AKAZE::__anon380
DESCRIPTOR_KAZE_UPRIGHT	opencv2/features2d.hpp	/^        DESCRIPTOR_KAZE_UPRIGHT = 2, \/\/\/< Upright descriptors, not invariant to rotation$/;"	e	enum:cv::AKAZE::__anon380
DESCRIPTOR_MLDB	opencv2/features2d.hpp	/^        DESCRIPTOR_MLDB = 5$/;"	e	enum:cv::AKAZE::__anon380
DESCRIPTOR_MLDB_UPRIGHT	opencv2/features2d.hpp	/^        DESCRIPTOR_MLDB_UPRIGHT = 4, \/\/\/< Upright descriptors, not invariant to rotation$/;"	e	enum:cv::AKAZE::__anon380
DESCR_FORMAT_COL_BY_COL	opencv2/cudaobjdetect.hpp	/^        DESCR_FORMAT_COL_BY_COL$/;"	e	enum:cv::cuda::HOG::__anon331
DESCR_FORMAT_ROW_BY_ROW	opencv2/cudaobjdetect.hpp	/^        DESCR_FORMAT_ROW_BY_ROW,$/;"	e	enum:cv::cuda::HOG::__anon331
DETECTED	opencv2/objdetect/detection_based_tracker.hpp	/^            DETECTED,$/;"	e	enum:cv::DetectionBasedTracker::ObjectStatus
DETECTED_NOT_SHOWN_YET	opencv2/objdetect/detection_based_tracker.hpp	/^            DETECTED_NOT_SHOWN_YET,$/;"	e	enum:cv::DetectionBasedTracker::ObjectStatus
DETECTED_TEMPORARY_LOST	opencv2/objdetect/detection_based_tracker.hpp	/^            DETECTED_TEMPORARY_LOST,$/;"	e	enum:cv::DetectionBasedTracker::ObjectStatus
DEVICE_COPY_OBSOLETE	opencv2/core/mat.hpp	/^        DEVICE_COPY_OBSOLETE=4, TEMP_UMAT=8, TEMP_COPIED_UMAT=24,$/;"	e	enum:cv::UMatData::__anon275
DEVICE_MEM_MAPPED	opencv2/core/mat.hpp	/^        USER_ALLOCATED=32, DEVICE_MEM_MAPPED=64};$/;"	e	enum:cv::UMatData::__anon275
DFT1D	opencv2/core/hal/hal.hpp	/^struct CV_EXPORTS DFT1D$/;"	s	namespace:cv::hal
DFT2D	opencv2/core/hal/hal.hpp	/^struct CV_EXPORTS DFT2D$/;"	s	namespace:cv::hal
DFT_COMPLEX_OUTPUT	opencv2/core/base.hpp	/^    DFT_COMPLEX_OUTPUT = 16,$/;"	e	enum:cv::DftFlags
DFT_INVERSE	opencv2/core/base.hpp	/^    DFT_INVERSE        = 1,$/;"	e	enum:cv::DftFlags
DFT_REAL_OUTPUT	opencv2/core/base.hpp	/^    DFT_REAL_OUTPUT    = 32,$/;"	e	enum:cv::DftFlags
DFT_ROWS	opencv2/core/base.hpp	/^    DFT_ROWS           = 4,$/;"	e	enum:cv::DftFlags
DFT_SCALE	opencv2/core/base.hpp	/^    DFT_SCALE          = 2,$/;"	e	enum:cv::DftFlags
DIFF_CHARBONNIER	opencv2/features2d.hpp	/^        DIFF_CHARBONNIER = 3$/;"	e	enum:cv::KAZE::__anon379
DIFF_PM_G1	opencv2/features2d.hpp	/^        DIFF_PM_G1 = 0,$/;"	e	enum:cv::KAZE::__anon379
DIFF_PM_G2	opencv2/features2d.hpp	/^        DIFF_PM_G2 = 1,$/;"	e	enum:cv::KAZE::__anon379
DIFF_WEICKERT	opencv2/features2d.hpp	/^        DIFF_WEICKERT = 2,$/;"	e	enum:cv::KAZE::__anon379
DIMode	opencv2/cudacodec.hpp	/^    int DIMode;          \/\/!< NVVE_SET_DEINTERLACE,$/;"	m	struct:cv::cudacodec::EncoderParams
DISABLE_OPENCV_24_COMPATIBILITY	opencv2/core/cvdef.h	353;"	d
DISABLE_TIMING	opencv2/core/cuda.hpp	/^        DISABLE_TIMING = 0x02,  \/**< Event will not record timing data *\/$/;"	e	enum:cv::cuda::Event::CreateFlags
DISCRETE	opencv2/ml.hpp	/^        DISCRETE=0, \/\/!< Discrete AdaBoost.$/;"	e	enum:cv::ml::Boost::Types
DISP_SCALE	opencv2/calib3d.hpp	/^           DISP_SCALE = (1 << DISP_SHIFT)$/;"	e	enum:cv::StereoMatcher::__anon102
DISP_SHIFT	opencv2/calib3d.hpp	/^    enum { DISP_SHIFT = 4,$/;"	e	enum:cv::StereoMatcher::__anon102
DIST_C	opencv2/imgproc.hpp	/^    DIST_C       = 3,   \/\/!< distance = max(|x1-x2|,|y1-y2|)$/;"	e	enum:cv::DistanceTypes
DIST_FAIR	opencv2/imgproc.hpp	/^    DIST_FAIR    = 5,   \/\/!< distance = c^2(|x|\/c-log(1+|x|\/c)), c = 1.3998$/;"	e	enum:cv::DistanceTypes
DIST_HUBER	opencv2/imgproc.hpp	/^    DIST_HUBER   = 7    \/\/!< distance = |x|<c ? x^2\/2 : c(|x|-c\/2), c=1.345$/;"	e	enum:cv::DistanceTypes
DIST_L1	opencv2/imgproc.hpp	/^    DIST_L1      = 1,   \/\/!< distance = |x1-x2| + |y1-y2|$/;"	e	enum:cv::DistanceTypes
DIST_L12	opencv2/imgproc.hpp	/^    DIST_L12     = 4,   \/\/!< L1-L2 metric: distance = 2(sqrt(1+x*x\/2) - 1))$/;"	e	enum:cv::DistanceTypes
DIST_L2	opencv2/imgproc.hpp	/^    DIST_L2      = 2,   \/\/!< the simple euclidean distance$/;"	e	enum:cv::DistanceTypes
DIST_LABEL_CCOMP	opencv2/imgproc.hpp	/^    DIST_LABEL_CCOMP = 0,$/;"	e	enum:cv::DistanceTransformLabelTypes
DIST_LABEL_PIXEL	opencv2/imgproc.hpp	/^    DIST_LABEL_PIXEL = 1$/;"	e	enum:cv::DistanceTransformLabelTypes
DIST_MASK_3	opencv2/imgproc.hpp	/^    DIST_MASK_3       = 3, \/\/!< mask=3$/;"	e	enum:cv::DistanceTransformMasks
DIST_MASK_5	opencv2/imgproc.hpp	/^    DIST_MASK_5       = 5, \/\/!< mask=5$/;"	e	enum:cv::DistanceTransformMasks
DIST_MASK_PRECISE	opencv2/imgproc.hpp	/^    DIST_MASK_PRECISE = 0  \/\/!<$/;"	e	enum:cv::DistanceTransformMasks
DIST_USER	opencv2/imgproc.hpp	/^    DIST_USER    = -1,  \/\/!< User defined distance$/;"	e	enum:cv::DistanceTypes
DIST_WELSCH	opencv2/imgproc.hpp	/^    DIST_WELSCH  = 6,   \/\/!< distance = c^2\/2(1-exp(-(x\/c)^2)), c = 2.9846$/;"	e	enum:cv::DistanceTypes
DMatch	opencv2/core/base.hpp	/^class CV_EXPORTS DMatch;$/;"	m	namespace:cv	typeref:class:cv::CV_EXPORTS
DMatch	opencv2/core/types.hpp	/^DMatch::DMatch()$/;"	f	class:cv::DMatch
DMatch	opencv2/core/types.hpp	/^DMatch::DMatch(int _queryIdx, int _trainIdx, float _distance)$/;"	f	class:cv::DMatch
DMatch	opencv2/core/types.hpp	/^DMatch::DMatch(int _queryIdx, int _trainIdx, int _imgIdx, float _distance)$/;"	f	class:cv::DMatch
DMatch	opencv2/core/types.hpp	/^class CV_EXPORTS_W_SIMPLE DMatch$/;"	c	namespace:cv
DONE	opencv2/calib3d/calib3d_c.h	/^    enum { DONE=0, STARTED=1, CALC_J=2, CHECK_ERR=3 };$/;"	e	enum:CvLevMarq::__anon339
DP	opencv2/video/tracking_c.h	/^    int DP;                     \/* number of state vector dimensions *\/$/;"	m	struct:CvKalman
DRAW_OVER_OUTIMG	opencv2/features2d.hpp	/^          DRAW_OVER_OUTIMG = 1, \/\/!< Output image matrix will not be created (Mat::create).$/;"	e	enum:cv::DrawMatchesFlags::__anon385
DRAW_RICH_KEYPOINTS	opencv2/features2d.hpp	/^          DRAW_RICH_KEYPOINTS = 4 \/\/!< For each keypoint the circle around keypoint with keypoint size and$/;"	e	enum:cv::DrawMatchesFlags::__anon385
DTrees	opencv2/ml.hpp	/^class CV_EXPORTS_W DTrees : public StatModel$/;"	c	namespace:cv::ml
DXY	opencv2/videostab/fast_marching.hpp	/^        DXY() : dist(0), x(0), y(0) {}$/;"	f	struct:cv::videostab::FastMarchingMethod::DXY
DXY	opencv2/videostab/fast_marching.hpp	/^        DXY(float _dist, int _x, int _y) : dist(_dist), x(_x), y(_y) {}$/;"	f	struct:cv::videostab::FastMarchingMethod::DXY
DXY	opencv2/videostab/fast_marching.hpp	/^    struct DXY$/;"	s	class:cv::videostab::FastMarchingMethod
DYNAMIC_PARALLELISM	opencv2/core/cuda.hpp	/^    DYNAMIC_PARALLELISM = FEATURE_SET_COMPUTE_35$/;"	e	enum:cv::cuda::FeatureSet
DataDepth	opencv2/core/traits.hpp	/^template<typename _Tp> class DataDepth$/;"	c	namespace:cv
DataType	opencv2/core/affine.hpp	/^    template<typename _Tp> class DataType< Affine3<_Tp> >$/;"	c	namespace:cv
DataType	opencv2/core/cvstd.inl.hpp	/^template<typename _Tp> class DataType< std::complex<_Tp> >$/;"	c	namespace:cv
DataType	opencv2/core/matx.hpp	/^template<typename _Tp, int cn> class DataType< Vec<_Tp, cn> >$/;"	c	namespace:cv
DataType	opencv2/core/matx.hpp	/^template<typename _Tp, int m, int n> class DataType< Matx<_Tp, m, n> >$/;"	c	namespace:cv
DataType	opencv2/core/traits.hpp	/^template<> class DataType<bool>$/;"	c	namespace:cv
DataType	opencv2/core/traits.hpp	/^template<> class DataType<char>$/;"	c	namespace:cv
DataType	opencv2/core/traits.hpp	/^template<> class DataType<double>$/;"	c	namespace:cv
DataType	opencv2/core/traits.hpp	/^template<> class DataType<float>$/;"	c	namespace:cv
DataType	opencv2/core/traits.hpp	/^template<> class DataType<int>$/;"	c	namespace:cv
DataType	opencv2/core/traits.hpp	/^template<> class DataType<schar>$/;"	c	namespace:cv
DataType	opencv2/core/traits.hpp	/^template<> class DataType<short>$/;"	c	namespace:cv
DataType	opencv2/core/traits.hpp	/^template<> class DataType<uchar>$/;"	c	namespace:cv
DataType	opencv2/core/traits.hpp	/^template<> class DataType<ushort>$/;"	c	namespace:cv
DataType	opencv2/core/traits.hpp	/^template<typename _Tp> class DataType$/;"	c	namespace:cv
DataType	opencv2/core/types.hpp	/^template<> class DataType< RotatedRect >$/;"	c	namespace:cv
DataType	opencv2/core/types.hpp	/^template<> class DataType<DMatch>$/;"	c	namespace:cv
DataType	opencv2/core/types.hpp	/^template<> class DataType<KeyPoint>$/;"	c	namespace:cv
DataType	opencv2/core/types.hpp	/^template<> class DataType<Moments>$/;"	c	namespace:cv
DataType	opencv2/core/types.hpp	/^template<> class DataType<Range>$/;"	c	namespace:cv
DataType	opencv2/core/types.hpp	/^template<typename _Tp> class DataType< Complex<_Tp> >$/;"	c	namespace:cv
DataType	opencv2/core/types.hpp	/^template<typename _Tp> class DataType< Point3_<_Tp> >$/;"	c	namespace:cv
DataType	opencv2/core/types.hpp	/^template<typename _Tp> class DataType< Point_<_Tp> >$/;"	c	namespace:cv
DataType	opencv2/core/types.hpp	/^template<typename _Tp> class DataType< Rect_<_Tp> >$/;"	c	namespace:cv
DataType	opencv2/core/types.hpp	/^template<typename _Tp> class DataType< Scalar_<_Tp> >$/;"	c	namespace:cv
DataType	opencv2/core/types.hpp	/^template<typename _Tp> class DataType< Size_<_Tp> >$/;"	c	namespace:cv
DataType	opencv2/cudev/util/vec_traits.hpp	/^template <> class DataType<uint>$/;"	c	namespace:cv
DataType	opencv2/cudev/util/vec_traits.hpp	/^template<> class DataType<char1>$/;"	c	namespace:cv
DataType	opencv2/cudev/util/vec_traits.hpp	/^template<> class DataType<char2>$/;"	c	namespace:cv
DataType	opencv2/cudev/util/vec_traits.hpp	/^template<> class DataType<char3>$/;"	c	namespace:cv
DataType	opencv2/cudev/util/vec_traits.hpp	/^template<> class DataType<char4>$/;"	c	namespace:cv
Datatype	opencv2/flann/saving.h	/^struct Datatype {};$/;"	s	namespace:cvflann
Datatype	opencv2/flann/saving.h	/^struct Datatype<char> { static flann_datatype_t type() { return FLANN_INT8; } };$/;"	s	namespace:cvflann
Datatype	opencv2/flann/saving.h	/^struct Datatype<double> { static flann_datatype_t type() { return FLANN_FLOAT64; } };$/;"	s	namespace:cvflann
Datatype	opencv2/flann/saving.h	/^struct Datatype<float> { static flann_datatype_t type() { return FLANN_FLOAT32; } };$/;"	s	namespace:cvflann
Datatype	opencv2/flann/saving.h	/^struct Datatype<int> { static flann_datatype_t type() { return FLANN_INT32; } };$/;"	s	namespace:cvflann
Datatype	opencv2/flann/saving.h	/^struct Datatype<short> { static flann_datatype_t type() { return FLANN_INT16; } };$/;"	s	namespace:cvflann
Datatype	opencv2/flann/saving.h	/^struct Datatype<unsigned char> { static flann_datatype_t type() { return FLANN_UINT8; } };$/;"	s	namespace:cvflann
Datatype	opencv2/flann/saving.h	/^struct Datatype<unsigned int> { static flann_datatype_t type() { return FLANN_UINT32; } };$/;"	s	namespace:cvflann
Datatype	opencv2/flann/saving.h	/^struct Datatype<unsigned short> { static flann_datatype_t type() { return FLANN_UINT16; } };$/;"	s	namespace:cvflann
DeblockMode	opencv2/cudacodec.hpp	/^    int DeblockMode;     \/\/!< NVVE_DEBLOCK_MODE,$/;"	m	struct:cv::cudacodec::EncoderParams
DeblurerBase	opencv2/videostab/deblurring.hpp	/^    DeblurerBase() : radius_(0), frames_(0), motions_(0), blurrinessRates_(0) {}$/;"	f	class:cv::videostab::DeblurerBase
DeblurerBase	opencv2/videostab/deblurring.hpp	/^class CV_EXPORTS DeblurerBase$/;"	c	namespace:cv::videostab
DecompTypes	opencv2/core/base.hpp	/^enum DecompTypes {$/;"	g	namespace:cv
DefaultBinaryShift	opencv2/core/cuda/functional.hpp	/^        template <typename T1, typename T2, typename D> struct DefaultBinaryShift$/;"	s	namespace:cv::cuda::device::functional_detail
DefaultCopyPolicy	opencv2/cudev/grid/copy.hpp	/^struct DefaultCopyPolicy$/;"	s	namespace:cv::cudev
DefaultDeleter	opencv2/core/cvstd.hpp	/^struct DefaultDeleter$/;"	s	namespace:cv
DefaultGlobReducePolicy	opencv2/cudev/grid/reduce.hpp	/^struct DefaultGlobReducePolicy$/;"	s	namespace:cv::cudev
DefaultHistogramPolicy	opencv2/cudev/grid/histogram.hpp	/^struct DefaultHistogramPolicy$/;"	s	namespace:cv::cudev
DefaultReduceToVecPolicy	opencv2/cudev/grid/reduce_to_vec.hpp	/^struct DefaultReduceToVecPolicy$/;"	s	namespace:cv::cudev
DefaultSplitMergePolicy	opencv2/cudev/grid/split_merge.hpp	/^struct DefaultSplitMergePolicy$/;"	s	namespace:cv::cudev
DefaultTransformFunctorTraits	opencv2/core/cuda/functional.hpp	/^    template <typename Func> struct DefaultTransformFunctorTraits$/;"	s	namespace:cv::cuda::device
DefaultTransformPolicy	opencv2/cudev/grid/transform.hpp	/^struct DefaultTransformPolicy$/;"	s	namespace:cv::cudev
DefaultTransformShift	opencv2/core/cuda/functional.hpp	/^    template <typename Func> struct DefaultTransformShift$/;"	s	namespace:cv::cuda::device
DefaultTransposePolicy	opencv2/cudev/grid/transpose.hpp	/^struct DefaultTransposePolicy$/;"	s	namespace:cv::cudev
DefaultUnaryShift	opencv2/core/cuda/functional.hpp	/^        template <typename T, typename D> struct DefaultUnaryShift$/;"	s	namespace:cv::cuda::device::functional_detail
DemosaicTypes	opencv2/cudaimgproc.hpp	/^enum DemosaicTypes$/;"	g	namespace:cv::cuda
DenseOpticalFlow	opencv2/cudaoptflow.hpp	/^class CV_EXPORTS DenseOpticalFlow : public Algorithm$/;"	c	namespace:cv::cuda
DenseOpticalFlow	opencv2/video/tracking.hpp	/^class CV_EXPORTS_W DenseOpticalFlow : public Algorithm$/;"	c	namespace:cv
DenseOpticalFlowExt	opencv2/superres/optical_flow.hpp	/^        class CV_EXPORTS DenseOpticalFlowExt : public cv::Algorithm$/;"	c	namespace:cv::superres
DensePyrLKOpticalFlow	opencv2/cudaoptflow.hpp	/^class CV_EXPORTS DensePyrLKOpticalFlow : public DenseOpticalFlow$/;"	c	namespace:cv::cuda
DensePyrLkOptFlowEstimatorGpu	opencv2/videostab/optical_flow.hpp	/^class CV_EXPORTS DensePyrLkOptFlowEstimatorGpu$/;"	c	namespace:cv::videostab
Depth	opencv2/core/wimage.hpp	/^inline int WImage<double>::Depth() const {return IPL_DEPTH_64F; }$/;"	f	class:cv::WImage
Depth	opencv2/core/wimage.hpp	/^inline int WImage<float>::Depth() const {return IPL_DEPTH_32F; }$/;"	f	class:cv::WImage
Depth	opencv2/core/wimage.hpp	/^inline int WImage<int>::Depth() const {return IPL_DEPTH_32S; }$/;"	f	class:cv::WImage
Depth	opencv2/core/wimage.hpp	/^inline int WImage<short>::Depth() const {return IPL_DEPTH_16S; }$/;"	f	class:cv::WImage
Depth	opencv2/core/wimage.hpp	/^inline int WImage<signed char>::Depth() const {return IPL_DEPTH_8S; }$/;"	f	class:cv::WImage
Depth	opencv2/core/wimage.hpp	/^inline int WImage<uchar>::Depth() const {return IPL_DEPTH_8U; }$/;"	f	class:cv::WImage
Depth	opencv2/core/wimage.hpp	/^inline int WImage<ushort>::Depth() const {return IPL_DEPTH_16U; }$/;"	f	class:cv::WImage
DerivXPtr	opencv2/cudev/ptr2d/deriv.hpp	/^template <class SrcPtr> struct DerivXPtr$/;"	s	namespace:cv::cudev
DerivXPtrSz	opencv2/cudev/ptr2d/deriv.hpp	/^template <class SrcPtr> struct DerivXPtrSz : DerivXPtr<SrcPtr>$/;"	s	namespace:cv::cudev
DerivYPtr	opencv2/cudev/ptr2d/deriv.hpp	/^template <class SrcPtr> struct DerivYPtr$/;"	s	namespace:cv::cudev
DerivYPtrSz	opencv2/cudev/ptr2d/deriv.hpp	/^template <class SrcPtr> struct DerivYPtrSz : DerivYPtr<SrcPtr>$/;"	s	namespace:cv::cudev
DescriptorCollection	opencv2/features2d.hpp	/^    class CV_EXPORTS DescriptorCollection$/;"	c	class:cv::DescriptorMatcher
DescriptorExtractor	opencv2/features2d.hpp	/^typedef Feature2D DescriptorExtractor;$/;"	t	namespace:cv
DescriptorMatcher	opencv2/cudafeatures2d.hpp	/^class CV_EXPORTS DescriptorMatcher : public cv::Algorithm$/;"	c	namespace:cv::cuda
DescriptorMatcher	opencv2/features2d.hpp	/^class CV_EXPORTS_W DescriptorMatcher : public Algorithm$/;"	c	namespace:cv
DetectionBasedTracker	opencv2/objdetect/detection_based_tracker.hpp	/^class CV_EXPORTS DetectionBasedTracker$/;"	c	namespace:cv
DetectionROI	opencv2/objdetect.hpp	/^struct DetectionROI$/;"	s	namespace:cv
DevPtr	opencv2/core/cuda_types.hpp	/^            __CV_CUDA_HOST_DEVICE__ DevPtr() : data(0) {}$/;"	f	struct:cv::cuda::DevPtr
DevPtr	opencv2/core/cuda_types.hpp	/^            __CV_CUDA_HOST_DEVICE__ DevPtr(T* data_) : data(data_) {}$/;"	f	struct:cv::cuda::DevPtr
DevPtr	opencv2/core/cuda_types.hpp	/^        template <typename T> struct DevPtr$/;"	s	namespace:cv::cuda
Device	opencv2/core/ocl.hpp	/^class CV_EXPORTS Device$/;"	c	namespace:cv::ocl
Device	opencv2/core/ocl.hpp	/^class CV_EXPORTS Device;$/;"	m	namespace:cv::ocl	typeref:class:cv::ocl::CV_EXPORTS
DeviceInfo	opencv2/core/cuda.hpp	/^class CV_EXPORTS DeviceInfo$/;"	c	namespace:cv::cuda
DeviceInfo	opencv2/core/cuda.inl.hpp	/^DeviceInfo::DeviceInfo()$/;"	f	class:cv::cuda::DeviceInfo
DeviceInfo	opencv2/core/cuda.inl.hpp	/^DeviceInfo::DeviceInfo(int device_id)$/;"	f	class:cv::cuda::DeviceInfo
DftFlags	opencv2/core/base.hpp	/^enum DftFlags {$/;"	g	namespace:cv
DisableCabac	opencv2/cudacodec.hpp	/^    int DisableCabac;    \/\/!< NVVE_DISABLE_CABAC,$/;"	m	struct:cv::cudacodec::EncoderParams
DisableIf	opencv2/cudev/util/type_traits.hpp	/^template <bool, typename T = void> struct DisableIf {};$/;"	s	namespace:cv::cudev
DisableIf	opencv2/cudev/util/type_traits.hpp	/^template <typename T> struct DisableIf<false, T> { typedef T type; };$/;"	s	namespace:cv::cudev
DisableSPSPPS	opencv2/cudacodec.hpp	/^    int DisableSPSPPS;   \/\/!< NVVE_DISABLE_SPS_PPS$/;"	m	struct:cv::cudacodec::EncoderParams
DisjointSets	opencv2/stitching/detail/util.hpp	/^    DisjointSets(int elem_count = 0) { createOneElemSets(elem_count); }$/;"	f	class:cv::detail::DisjointSets
DisjointSets	opencv2/stitching/detail/util.hpp	/^class CV_EXPORTS DisjointSets$/;"	c	namespace:cv::detail
DisparityBilateralFilter	opencv2/cudastereo.hpp	/^class CV_EXPORTS DisparityBilateralFilter : public cv::Algorithm$/;"	c	namespace:cv::cuda
Dispatcher	opencv2/core/cuda/detail/reduce.hpp	/^        template <unsigned int N> struct Dispatcher$/;"	s	namespace:cv::cuda::device::reduce_detail
Dispatcher	opencv2/core/cuda/detail/reduce_key_val.hpp	/^        template <unsigned int N> struct Dispatcher$/;"	s	namespace:cv::cuda::device::reduce_key_val_detail
Dispatcher	opencv2/cudev/block/detail/reduce.hpp	/^    template <int N> struct Dispatcher$/;"	s	namespace:cv::cudev::block_reduce_detail
Dispatcher	opencv2/cudev/block/detail/reduce_key_val.hpp	/^    template <int N> struct Dispatcher$/;"	s	namespace:cv::cudev::block_reduce_key_val_detail
DistIndex	opencv2/flann/result_set.h	/^        DistIndex(DistanceType dist, unsigned int index) :$/;"	f	struct:cvflann::UniqueResultSet::DistIndex
DistIndex	opencv2/flann/result_set.h	/^    struct DistIndex$/;"	s	class:cvflann::UniqueResultSet
DistIndex	opencv2/flann/result_set.h	/^    typedef typename UniqueResultSet<DistanceType>::DistIndex DistIndex;$/;"	t	class:cvflann::KNNUniqueResultSet
DistIndex	opencv2/flann/result_set.h	/^    typedef typename UniqueResultSet<DistanceType>::DistIndex DistIndex;$/;"	t	class:cvflann::RadiusUniqueResultSet
DistanceTransformLabelTypes	opencv2/imgproc.hpp	/^enum DistanceTransformLabelTypes {$/;"	g	namespace:cv
DistanceTransformMasks	opencv2/imgproc.hpp	/^enum DistanceTransformMasks {$/;"	g	namespace:cv
DistanceType	opencv2/flann.hpp	/^        typedef typename Distance::ResultType DistanceType;$/;"	t	class:cv::flann::GenericIndex
DistanceType	opencv2/flann.hpp	/^    typedef typename L2<T>::ResultType DistanceType;$/;"	t	class:cv::flann::Index_
DistanceType	opencv2/flann/autotuned_index.h	/^    typedef typename Distance::ResultType DistanceType;$/;"	t	class:cvflann::AutotunedIndex
DistanceType	opencv2/flann/composite_index.h	/^    typedef typename Distance::ResultType DistanceType;$/;"	t	class:cvflann::CompositeIndex
DistanceType	opencv2/flann/flann_base.hpp	/^    typedef typename Distance::ResultType DistanceType;$/;"	t	class:cvflann::Index
DistanceType	opencv2/flann/hierarchical_clustering_index.h	/^    typedef typename Distance::ResultType DistanceType;$/;"	t	class:cvflann::HierarchicalClusteringIndex
DistanceType	opencv2/flann/kdtree_index.h	/^    typedef typename Distance::ResultType DistanceType;$/;"	t	class:cvflann::KDTreeIndex
DistanceType	opencv2/flann/kdtree_single_index.h	/^    typedef typename Distance::ResultType DistanceType;$/;"	t	class:cvflann::KDTreeSingleIndex
DistanceType	opencv2/flann/kmeans_index.h	/^    typedef typename Distance::ResultType DistanceType;$/;"	t	class:cvflann::KMeansIndex
DistanceType	opencv2/flann/linear_index.h	/^    typedef typename Distance::ResultType DistanceType;$/;"	t	class:cvflann::LinearIndex
DistanceType	opencv2/flann/lsh_index.h	/^    typedef typename Distance::ResultType DistanceType;$/;"	t	class:cvflann::LshIndex
DistanceType	opencv2/flann/nn_index.h	/^    typedef typename Distance::ResultType DistanceType;$/;"	t	class:cvflann::NNIndex
DistanceTypes	opencv2/imgproc.hpp	/^enum DistanceTypes {$/;"	g	namespace:cv
DownhillSolver	opencv2/core/optim.hpp	/^class CV_EXPORTS DownhillSolver : public MinProblemSolver$/;"	c	namespace:cv
DpSeamFinder	opencv2/stitching/detail/seam_finders.hpp	/^class CV_EXPORTS DpSeamFinder : public SeamFinder$/;"	c	namespace:cv::detail
DrawMatchesFlags	opencv2/features2d.hpp	/^struct CV_EXPORTS DrawMatchesFlags$/;"	s	namespace:cv
DualTVL1OpticalFlow	opencv2/superres/optical_flow.hpp	/^        class CV_EXPORTS DualTVL1OpticalFlow : public virtual DenseOpticalFlowExt$/;"	c	namespace:cv::superres
DualTVL1OpticalFlow	opencv2/video/tracking.hpp	/^class CV_EXPORTS_W DualTVL1OpticalFlow : public DenseOpticalFlow$/;"	c	namespace:cv
DynamMatr	opencv2/video/tracking_c.h	/^    float* DynamMatr;           \/* =transition_matrix->data.fl *\/$/;"	m	struct:CvKalman
DynamicBitset	opencv2/flann/dynamic_bitset.h	/^    DynamicBitset()$/;"	f	class:cvflann::DynamicBitset
DynamicBitset	opencv2/flann/dynamic_bitset.h	/^    DynamicBitset(size_t sz)$/;"	f	class:cvflann::DynamicBitset
DynamicBitset	opencv2/flann/dynamic_bitset.h	/^class DynamicBitset$/;"	c	namespace:cvflann
DynamicBitset	opencv2/flann/dynamic_bitset.h	/^typedef boost::dynamic_bitset<> DynamicBitset;$/;"	t
DynamicGOP	opencv2/cudacodec.hpp	/^    int DynamicGOP;      \/\/!< NVVE_DYNAMIC_GOP,$/;"	m	struct:cv::cudacodec::EncoderParams
DynamicSharedMem	opencv2/core/cuda/dynamic_smem.hpp	/^    template<> struct DynamicSharedMem<double>$/;"	s	namespace:cv::cuda::device
DynamicSharedMem	opencv2/core/cuda/dynamic_smem.hpp	/^    template<class T> struct DynamicSharedMem$/;"	s	namespace:cv::cuda::device
DynamicSharedMem	opencv2/cudev/block/dynamic_smem.hpp	/^template <> struct DynamicSharedMem<double>$/;"	s	namespace:cv::cudev
DynamicSharedMem	opencv2/cudev/block/dynamic_smem.hpp	/^template <class T> struct DynamicSharedMem$/;"	s	namespace:cv::cudev
ELEMENT_ARRAY_BUFFER	opencv2/core/opengl.hpp	/^        ELEMENT_ARRAY_BUFFER = 0x8893, \/\/!< The buffer will be used for indices (in glDrawElements, for example)$/;"	e	enum:cv::ogl::Buffer::Target
EM	opencv2/ml.hpp	/^class CV_EXPORTS_W EM : public StatModel$/;"	c	namespace:cv::ml
EMDHistogramCostExtractor	opencv2/shape/hist_cost.hpp	/^class CV_EXPORTS_W EMDHistogramCostExtractor : public HistogramCostExtractor$/;"	c	namespace:cv
EMDL1HistogramCostExtractor	opencv2/shape/hist_cost.hpp	/^class CV_EXPORTS_W EMDL1HistogramCostExtractor : public HistogramCostExtractor$/;"	c	namespace:cv
EMPTY	opencv2/core/persistence.hpp	/^        EMPTY     = 32, \/\/!< empty structure (sequence or mapping)$/;"	e	enum:cv::FileNode::Type
EPS	opencv2/core/types.hpp	/^        EPS=2 \/\/!< the desired accuracy or change in parameters at which the iterative algorithm stops$/;"	e	enum:cv::TermCriteria::Type
EPS_SVR	opencv2/ml.hpp	/^        EPS_SVR=103,$/;"	e	enum:cv::ml::SVM::Types
EQUAL_SPLIT	5/parallel/types.h	/^      EQUAL_SPLIT $/;"	e	enum:__gnu_parallel::_FindAlgorithm
ERR_CAMERA_PARAMS_ADJUST_FAIL	opencv2/stitching.hpp	/^        ERR_CAMERA_PARAMS_ADJUST_FAIL = 3$/;"	e	enum:cv::Stitcher::Status
ERR_HOMOGRAPHY_EST_FAIL	opencv2/stitching.hpp	/^        ERR_HOMOGRAPHY_EST_FAIL = 2,$/;"	e	enum:cv::Stitcher::Status
ERR_NEED_MORE_IMGS	opencv2/stitching.hpp	/^        ERR_NEED_MORE_IMGS = 1,$/;"	e	enum:cv::Stitcher::Status
EUCLIDEAN	opencv2/flann/defines.h	/^    EUCLIDEAN = 1,$/;"	e	enum:cvflann::flann_distance_t
EVENT_FLAG_ALTKEY	opencv2/highgui.hpp	/^       EVENT_FLAG_ALTKEY    = 32 \/\/!< indicates that ALT Key is pressed.$/;"	e	enum:cv::MouseEventFlags
EVENT_FLAG_CTRLKEY	opencv2/highgui.hpp	/^       EVENT_FLAG_CTRLKEY   = 8, \/\/!< indicates that CTRL Key is pressed.$/;"	e	enum:cv::MouseEventFlags
EVENT_FLAG_LBUTTON	opencv2/highgui.hpp	/^       EVENT_FLAG_LBUTTON   = 1, \/\/!< indicates that the left mouse button is down.$/;"	e	enum:cv::MouseEventFlags
EVENT_FLAG_MBUTTON	opencv2/highgui.hpp	/^       EVENT_FLAG_MBUTTON   = 4, \/\/!< indicates that the middle mouse button is down.$/;"	e	enum:cv::MouseEventFlags
EVENT_FLAG_RBUTTON	opencv2/highgui.hpp	/^       EVENT_FLAG_RBUTTON   = 2, \/\/!< indicates that the right mouse button is down.$/;"	e	enum:cv::MouseEventFlags
EVENT_FLAG_SHIFTKEY	opencv2/highgui.hpp	/^       EVENT_FLAG_SHIFTKEY  = 16,\/\/!< indicates that SHIFT Key is pressed.$/;"	e	enum:cv::MouseEventFlags
EVENT_LBUTTONDBLCLK	opencv2/highgui.hpp	/^       EVENT_LBUTTONDBLCLK  = 7, \/\/!< indicates that left mouse button is double clicked.$/;"	e	enum:cv::MouseEventTypes
EVENT_LBUTTONDOWN	opencv2/highgui.hpp	/^       EVENT_LBUTTONDOWN    = 1, \/\/!< indicates that the left mouse button is pressed.$/;"	e	enum:cv::MouseEventTypes
EVENT_LBUTTONUP	opencv2/highgui.hpp	/^       EVENT_LBUTTONUP      = 4, \/\/!< indicates that left mouse button is released.$/;"	e	enum:cv::MouseEventTypes
EVENT_MBUTTONDBLCLK	opencv2/highgui.hpp	/^       EVENT_MBUTTONDBLCLK  = 9, \/\/!< indicates that middle mouse button is double clicked.$/;"	e	enum:cv::MouseEventTypes
EVENT_MBUTTONDOWN	opencv2/highgui.hpp	/^       EVENT_MBUTTONDOWN    = 3, \/\/!< indicates that the middle mouse button is pressed.$/;"	e	enum:cv::MouseEventTypes
EVENT_MBUTTONUP	opencv2/highgui.hpp	/^       EVENT_MBUTTONUP      = 6, \/\/!< indicates that middle mouse button is released.$/;"	e	enum:cv::MouseEventTypes
EVENT_MOUSEHWHEEL	opencv2/highgui.hpp	/^       EVENT_MOUSEHWHEEL    = 11 \/\/!< positive and negative values mean right and left scrolling, respectively.$/;"	e	enum:cv::MouseEventTypes
EVENT_MOUSEMOVE	opencv2/highgui.hpp	/^       EVENT_MOUSEMOVE      = 0, \/\/!< indicates that the mouse pointer has moved over the window.$/;"	e	enum:cv::MouseEventTypes
EVENT_MOUSEWHEEL	opencv2/highgui.hpp	/^       EVENT_MOUSEWHEEL     = 10,\/\/!< positive and negative values mean forward and backward scrolling, respectively.$/;"	e	enum:cv::MouseEventTypes
EVENT_RBUTTONDBLCLK	opencv2/highgui.hpp	/^       EVENT_RBUTTONDBLCLK  = 8, \/\/!< indicates that right mouse button is double clicked.$/;"	e	enum:cv::MouseEventTypes
EVENT_RBUTTONDOWN	opencv2/highgui.hpp	/^       EVENT_RBUTTONDOWN    = 2, \/\/!< indicates that the right mouse button is pressed.$/;"	e	enum:cv::MouseEventTypes
EVENT_RBUTTONUP	opencv2/highgui.hpp	/^       EVENT_RBUTTONUP      = 5, \/\/!< indicates that right mouse button is released.$/;"	e	enum:cv::MouseEventTypes
EXACT	5/parallel/types.h	/^      EXACT $/;"	e	enum:__gnu_parallel::_SplittingAlgorithm
EXCLUSIVE	opencv2/core/cuda/scan.hpp	/^    enum ScanKind { EXCLUSIVE = 0,  INCLUSIVE = 1 };$/;"	e	enum:cv::cuda::device::ScanKind
EXEC_KERNEL	opencv2/core/ocl.hpp	/^        EXEC_KERNEL=(1 << 0),$/;"	e	enum:cv::ocl::Device::__anon319
EXEC_NATIVE_KERNEL	opencv2/core/ocl.hpp	/^        EXEC_NATIVE_KERNEL=(1 << 1)$/;"	e	enum:cv::ocl::Device::__anon319
EXPR	opencv2/core/mat.hpp	/^        EXPR              = 6 << KIND_SHIFT,$/;"	e	enum:cv::_InputArray::__anon273
ElementType	opencv2/flann.hpp	/^        typedef typename Distance::ElementType ElementType;$/;"	t	class:cv::flann::GenericIndex
ElementType	opencv2/flann.hpp	/^    typedef typename L2<T>::ElementType ElementType;$/;"	t	class:cv::flann::Index_
ElementType	opencv2/flann/autotuned_index.h	/^    typedef typename Distance::ElementType ElementType;$/;"	t	class:cvflann::AutotunedIndex
ElementType	opencv2/flann/composite_index.h	/^    typedef typename Distance::ElementType ElementType;$/;"	t	class:cvflann::CompositeIndex
ElementType	opencv2/flann/dist.h	/^    typedef T ElementType;$/;"	t	struct:cvflann::ChiSquareDistance
ElementType	opencv2/flann/dist.h	/^    typedef T ElementType;$/;"	t	struct:cvflann::Hamming
ElementType	opencv2/flann/dist.h	/^    typedef T ElementType;$/;"	t	struct:cvflann::Hamming2
ElementType	opencv2/flann/dist.h	/^    typedef T ElementType;$/;"	t	struct:cvflann::HellingerDistance
ElementType	opencv2/flann/dist.h	/^    typedef T ElementType;$/;"	t	struct:cvflann::HistIntersectionDistance
ElementType	opencv2/flann/dist.h	/^    typedef T ElementType;$/;"	t	struct:cvflann::KL_Divergence
ElementType	opencv2/flann/dist.h	/^    typedef T ElementType;$/;"	t	struct:cvflann::L1
ElementType	opencv2/flann/dist.h	/^    typedef T ElementType;$/;"	t	struct:cvflann::L2
ElementType	opencv2/flann/dist.h	/^    typedef T ElementType;$/;"	t	struct:cvflann::L2_Simple
ElementType	opencv2/flann/dist.h	/^    typedef T ElementType;$/;"	t	struct:cvflann::MaxDistance
ElementType	opencv2/flann/dist.h	/^    typedef T ElementType;$/;"	t	struct:cvflann::MinkowskiDistance
ElementType	opencv2/flann/dist.h	/^    typedef unsigned char ElementType;$/;"	t	struct:cvflann::HammingLUT
ElementType	opencv2/flann/flann_base.hpp	/^    typedef typename Distance::ElementType ElementType;$/;"	t	class:cvflann::Index
ElementType	opencv2/flann/hierarchical_clustering_index.h	/^    typedef typename Distance::ElementType ElementType;$/;"	t	class:cvflann::HierarchicalClusteringIndex
ElementType	opencv2/flann/kdtree_index.h	/^    typedef typename Distance::ElementType ElementType;$/;"	t	class:cvflann::KDTreeIndex
ElementType	opencv2/flann/kdtree_single_index.h	/^    typedef typename Distance::ElementType ElementType;$/;"	t	class:cvflann::KDTreeSingleIndex
ElementType	opencv2/flann/kmeans_index.h	/^    typedef typename Distance::ElementType ElementType;$/;"	t	class:cvflann::KMeansIndex
ElementType	opencv2/flann/linear_index.h	/^    typedef typename Distance::ElementType ElementType;$/;"	t	class:cvflann::LinearIndex
ElementType	opencv2/flann/lsh_index.h	/^    typedef typename Distance::ElementType ElementType;$/;"	t	class:cvflann::LshIndex
ElementType	opencv2/flann/nn_index.h	/^    typedef typename Distance::ElementType ElementType;$/;"	t	class:cvflann::NNIndex
Emulation	opencv2/core/cuda/emulation.hpp	/^    struct Emulation$/;"	s	namespace:cv::cuda::device
EnableIf	opencv2/cudev/util/type_traits.hpp	/^template <bool, typename T = void> struct EnableIf {};$/;"	s	namespace:cv::cudev
EnableIf	opencv2/cudev/util/type_traits.hpp	/^template <typename T> struct EnableIf<true, T> { typedef T type; };$/;"	s	namespace:cv::cudev
EncoderCallBack	opencv2/cudacodec.hpp	/^class CV_EXPORTS EncoderCallBack$/;"	c	namespace:cv::cudacodec
EncoderParams	opencv2/cudacodec.hpp	/^struct CV_EXPORTS EncoderParams$/;"	s	namespace:cv::cudacodec
EnumConstantNotPresentExceptionProxy	5/sun/reflect/annotation/EnumConstantNotPresentExceptionProxy.h	/^class sun::reflect::annotation::EnumConstantNotPresentExceptionProxy : public ::sun::reflect::annotation::ExceptionProxy$/;"	c	class:sun::reflect::annotation
Error	opencv2/core/base.hpp	/^namespace Error {$/;"	n	namespace:cv
ErrorCallback	opencv2/core/utility.hpp	/^extern "C" typedef int (*ErrorCallback)( int status, const char* func_name,$/;"	t	namespace:cv
ErrorTypes	opencv2/ml.hpp	/^enum ErrorTypes$/;"	g	namespace:cv::ml
Estimator	opencv2/stitching/detail/motion_estimators.hpp	/^class CV_EXPORTS Estimator$/;"	c	namespace:cv::detail
Event	opencv2/core/base.hpp	/^    class CV_EXPORTS Event;$/;"	m	namespace:cv::cuda	typeref:class:cv::cuda::CV_EXPORTS
Event	opencv2/core/cuda.hpp	/^class CV_EXPORTS Event$/;"	c	namespace:cv::cuda
Event	opencv2/core/cuda.inl.hpp	/^Event::Event(const Ptr<Impl>& impl)$/;"	f	class:cv::cuda::Event
EventAccessor	opencv2/core/cuda_stream_accessor.hpp	/^        struct EventAccessor$/;"	s	namespace:cv::cuda
Exception	opencv2/core.hpp	/^class CV_EXPORTS Exception : public std::exception$/;"	c	namespace:cv
ExceptionProxy	5/sun/reflect/annotation/ExceptionProxy.h	/^class sun::reflect::annotation::ExceptionProxy : public ::java::lang::Object$/;"	c	class:sun::reflect::annotation
ExposureCompensator	opencv2/stitching/detail/exposure_compensate.hpp	/^class CV_EXPORTS ExposureCompensator$/;"	c	namespace:cv::detail
Expr	opencv2/cudev/expr/expr.hpp	/^template <class Body> struct Expr$/;"	s	namespace:cv::cudev
ExtObject	opencv2/objdetect/detection_based_tracker.hpp	/^            ExtObject(int _id, cv::Rect _location, ObjectStatus _status)$/;"	f	struct:cv::DetectionBasedTracker::ExtObject
ExtObject	opencv2/objdetect/detection_based_tracker.hpp	/^        struct ExtObject$/;"	s	class:cv::DetectionBasedTracker
FAST_N	opencv2/features2d.hpp	/^        THRESHOLD = 10000, NONMAX_SUPPRESSION=10001, FAST_N=10002,$/;"	e	enum:cv::FastFeatureDetector::__anon377
FAST_SCORE	opencv2/features2d.hpp	/^    enum { kBytes = 32, HARRIS_SCORE=0, FAST_SCORE=1 };$/;"	e	enum:cv::ORB::__anon376
FEATHER	opencv2/stitching/detail/blenders.hpp	/^    enum { NO, FEATHER, MULTI_BAND };$/;"	e	enum:cv::detail::Blender::__anon95
FEATURE_SET_COMPUTE_10	opencv2/core/cuda.hpp	/^    FEATURE_SET_COMPUTE_10 = 10,$/;"	e	enum:cv::cuda::FeatureSet
FEATURE_SET_COMPUTE_11	opencv2/core/cuda.hpp	/^    FEATURE_SET_COMPUTE_11 = 11,$/;"	e	enum:cv::cuda::FeatureSet
FEATURE_SET_COMPUTE_12	opencv2/core/cuda.hpp	/^    FEATURE_SET_COMPUTE_12 = 12,$/;"	e	enum:cv::cuda::FeatureSet
FEATURE_SET_COMPUTE_13	opencv2/core/cuda.hpp	/^    FEATURE_SET_COMPUTE_13 = 13,$/;"	e	enum:cv::cuda::FeatureSet
FEATURE_SET_COMPUTE_20	opencv2/core/cuda.hpp	/^    FEATURE_SET_COMPUTE_20 = 20,$/;"	e	enum:cv::cuda::FeatureSet
FEATURE_SET_COMPUTE_21	opencv2/core/cuda.hpp	/^    FEATURE_SET_COMPUTE_21 = 21,$/;"	e	enum:cv::cuda::FeatureSet
FEATURE_SET_COMPUTE_30	opencv2/core/cuda.hpp	/^    FEATURE_SET_COMPUTE_30 = 30,$/;"	e	enum:cv::cuda::FeatureSet
FEATURE_SET_COMPUTE_32	opencv2/core/cuda.hpp	/^    FEATURE_SET_COMPUTE_32 = 32,$/;"	e	enum:cv::cuda::FeatureSet
FEATURE_SET_COMPUTE_35	opencv2/core/cuda.hpp	/^    FEATURE_SET_COMPUTE_35 = 35,$/;"	e	enum:cv::cuda::FeatureSet
FEATURE_SET_COMPUTE_50	opencv2/core/cuda.hpp	/^    FEATURE_SET_COMPUTE_50 = 50,$/;"	e	enum:cv::cuda::FeatureSet
FEATURE_SIZE	opencv2/cudafeatures2d.hpp	/^        FEATURE_SIZE = 7$/;"	e	enum:cv::cuda::FastFeatureDetector::__anon91
FGDParams	opencv2/cudalegacy.hpp	/^struct CV_EXPORTS FGDParams$/;"	s	namespace:cv::cuda
FILLED	opencv2/core.hpp	/^    FILLED  = -1,$/;"	e	enum:cv::LineTypes
FIRST	opencv2/stitching/detail/seam_finders.hpp	/^        FIRST = 1, SECOND = 2, INTERS = 4,$/;"	e	enum:cv::detail::DpSeamFinder::ComponentState
FIXED_SIZE	opencv2/core/mat.hpp	/^        FIXED_SIZE = 0x4000 << KIND_SHIFT,$/;"	e	enum:cv::_InputArray::__anon273
FIXED_TYPE	opencv2/core/mat.hpp	/^        FIXED_TYPE = 0x8000 << KIND_SHIFT,$/;"	e	enum:cv::_InputArray::__anon273
FLAGS	opencv2/core/utility.hpp	/^enum FLAGS$/;"	g	namespace:cv::instr
FLAGS_EXPAND_SAME_NAMES	opencv2/core/utility.hpp	/^    FLAGS_EXPAND_SAME_NAMES = 0x02,$/;"	e	enum:cv::instr::FLAGS
FLAGS_MAPPING	opencv2/core/utility.hpp	/^    FLAGS_MAPPING           = 0x01,$/;"	e	enum:cv::instr::FLAGS
FLAGS_NONE	opencv2/core/utility.hpp	/^    FLAGS_NONE              = 0,$/;"	e	enum:cv::instr::FLAGS
FLANNBASED	opencv2/features2d.hpp	/^        FLANNBASED            = 1,$/;"	e	enum:cv::DescriptorMatcher::__anon384
FLANNException	opencv2/flann/general.h	/^    FLANNException(const char* message) : cv::Exception(0, message, "", __FILE__, __LINE__) { }$/;"	f	class:cvflann::FLANNException
FLANNException	opencv2/flann/general.h	/^    FLANNException(const cv::String& message) : cv::Exception(0, message, "", __FILE__, __LINE__) { }$/;"	f	class:cvflann::FLANNException
FLANNException	opencv2/flann/general.h	/^class FLANNException : public cv::Exception$/;"	c	namespace:cvflann
FLANN_ARRAY_LEN	opencv2/flann/defines.h	75;"	d
FLANN_ARRAY_LEN	opencv2/flann/defines.h	76;"	d
FLANN_CENTERS_GONZALES	opencv2/flann/defines.h	/^    FLANN_CENTERS_GONZALES = 1,$/;"	e	enum:cvflann::flann_centers_init_t
FLANN_CENTERS_GROUPWISE	opencv2/flann/defines.h	/^    FLANN_CENTERS_GROUPWISE = 3,$/;"	e	enum:cvflann::flann_centers_init_t
FLANN_CENTERS_KMEANSPP	opencv2/flann/defines.h	/^    FLANN_CENTERS_KMEANSPP = 2,$/;"	e	enum:cvflann::flann_centers_init_t
FLANN_CENTERS_RANDOM	opencv2/flann/defines.h	/^    FLANN_CENTERS_RANDOM = 0,$/;"	e	enum:cvflann::flann_centers_init_t
FLANN_CHECKS_AUTOTUNED	opencv2/flann/defines.h	/^    FLANN_CHECKS_AUTOTUNED = -2$/;"	e	enum:cvflann::__anon114
FLANN_CHECKS_UNLIMITED	opencv2/flann/defines.h	/^    FLANN_CHECKS_UNLIMITED = -1,$/;"	e	enum:cvflann::__anon114
FLANN_DEPRECATED	opencv2/flann/defines.h	54;"	d
FLANN_DEPRECATED	opencv2/flann/defines.h	57;"	d
FLANN_DEPRECATED	opencv2/flann/defines.h	59;"	d
FLANN_DEPRECATED	opencv2/flann/defines.h	62;"	d
FLANN_DISTANCE_CHECK	opencv2/flann.hpp	241;"	d
FLANN_DIST_CHI_SQUARE	opencv2/flann/defines.h	/^    FLANN_DIST_CHI_SQUARE = 7,$/;"	e	enum:cvflann::flann_distance_t
FLANN_DIST_CS	opencv2/flann/defines.h	/^    FLANN_DIST_CS         = 7,$/;"	e	enum:cvflann::flann_distance_t
FLANN_DIST_EUCLIDEAN	opencv2/flann/defines.h	/^    FLANN_DIST_EUCLIDEAN = 1,$/;"	e	enum:cvflann::flann_distance_t
FLANN_DIST_HAMMING	opencv2/flann/defines.h	/^    FLANN_DIST_HAMMING          = 9,$/;"	e	enum:cvflann::flann_distance_t
FLANN_DIST_HELLINGER	opencv2/flann/defines.h	/^    FLANN_DIST_HELLINGER = 6,$/;"	e	enum:cvflann::flann_distance_t
FLANN_DIST_HIST_INTERSECT	opencv2/flann/defines.h	/^    FLANN_DIST_HIST_INTERSECT   = 5,$/;"	e	enum:cvflann::flann_distance_t
FLANN_DIST_KL	opencv2/flann/defines.h	/^    FLANN_DIST_KL                = 8,$/;"	e	enum:cvflann::flann_distance_t
FLANN_DIST_KULLBACK_LEIBLER	opencv2/flann/defines.h	/^    FLANN_DIST_KULLBACK_LEIBLER  = 8,$/;"	e	enum:cvflann::flann_distance_t
FLANN_DIST_L1	opencv2/flann/defines.h	/^    FLANN_DIST_L1 = 2,$/;"	e	enum:cvflann::flann_distance_t
FLANN_DIST_L2	opencv2/flann/defines.h	/^    FLANN_DIST_L2 = 1,$/;"	e	enum:cvflann::flann_distance_t
FLANN_DIST_MANHATTAN	opencv2/flann/defines.h	/^    FLANN_DIST_MANHATTAN = 2,$/;"	e	enum:cvflann::flann_distance_t
FLANN_DIST_MAX	opencv2/flann/defines.h	/^    FLANN_DIST_MAX   = 4,$/;"	e	enum:cvflann::flann_distance_t
FLANN_DIST_MINKOWSKI	opencv2/flann/defines.h	/^    FLANN_DIST_MINKOWSKI = 3,$/;"	e	enum:cvflann::flann_distance_t
FLANN_EXPORT	opencv2/flann/defines.h	36;"	d
FLANN_EXPORT	opencv2/flann/defines.h	41;"	d
FLANN_EXPORT	opencv2/flann/defines.h	43;"	d
FLANN_EXPORT	opencv2/flann/defines.h	45;"	d
FLANN_EXPORT	opencv2/flann/defines.h	49;"	d
FLANN_FLOAT32	opencv2/flann/defines.h	/^    FLANN_FLOAT32 = 8,$/;"	e	enum:cvflann::flann_datatype_t
FLANN_FLOAT64	opencv2/flann/defines.h	/^    FLANN_FLOAT64 = 9$/;"	e	enum:cvflann::flann_datatype_t
FLANN_INDEX_AUTOTUNED	opencv2/flann/defines.h	/^    FLANN_INDEX_AUTOTUNED = 255,$/;"	e	enum:cvflann::flann_algorithm_t
FLANN_INDEX_COMPOSITE	opencv2/flann/defines.h	/^    FLANN_INDEX_COMPOSITE = 3,$/;"	e	enum:cvflann::flann_algorithm_t
FLANN_INDEX_HIERARCHICAL	opencv2/flann/defines.h	/^    FLANN_INDEX_HIERARCHICAL = 5,$/;"	e	enum:cvflann::flann_algorithm_t
FLANN_INDEX_KDTREE	opencv2/flann/defines.h	/^    FLANN_INDEX_KDTREE = 1,$/;"	e	enum:cvflann::flann_algorithm_t
FLANN_INDEX_KDTREE_SINGLE	opencv2/flann/defines.h	/^    FLANN_INDEX_KDTREE_SINGLE = 4,$/;"	e	enum:cvflann::flann_algorithm_t
FLANN_INDEX_KMEANS	opencv2/flann/defines.h	/^    FLANN_INDEX_KMEANS = 2,$/;"	e	enum:cvflann::flann_algorithm_t
FLANN_INDEX_LINEAR	opencv2/flann/defines.h	/^    FLANN_INDEX_LINEAR = 0,$/;"	e	enum:cvflann::flann_algorithm_t
FLANN_INDEX_LSH	opencv2/flann/defines.h	/^    FLANN_INDEX_LSH = 6,$/;"	e	enum:cvflann::flann_algorithm_t
FLANN_INDEX_SAVED	opencv2/flann/defines.h	/^    FLANN_INDEX_SAVED = 254,$/;"	e	enum:cvflann::flann_algorithm_t
FLANN_INT16	opencv2/flann/defines.h	/^    FLANN_INT16 = 1,$/;"	e	enum:cvflann::flann_datatype_t
FLANN_INT32	opencv2/flann/defines.h	/^    FLANN_INT32 = 2,$/;"	e	enum:cvflann::flann_datatype_t
FLANN_INT64	opencv2/flann/defines.h	/^    FLANN_INT64 = 3,$/;"	e	enum:cvflann::flann_datatype_t
FLANN_INT8	opencv2/flann/defines.h	/^    FLANN_INT8 = 0,$/;"	e	enum:cvflann::flann_datatype_t
FLANN_LOG_ERROR	opencv2/flann/defines.h	/^    FLANN_LOG_ERROR = 2,$/;"	e	enum:cvflann::flann_log_level_t
FLANN_LOG_FATAL	opencv2/flann/defines.h	/^    FLANN_LOG_FATAL = 1,$/;"	e	enum:cvflann::flann_log_level_t
FLANN_LOG_INFO	opencv2/flann/defines.h	/^    FLANN_LOG_INFO = 4$/;"	e	enum:cvflann::flann_log_level_t
FLANN_LOG_NONE	opencv2/flann/defines.h	/^    FLANN_LOG_NONE = 0,$/;"	e	enum:cvflann::flann_log_level_t
FLANN_LOG_WARN	opencv2/flann/defines.h	/^    FLANN_LOG_WARN = 3,$/;"	e	enum:cvflann::flann_log_level_t
FLANN_PLATFORM_32_BIT	opencv2/flann/defines.h	66;"	d
FLANN_PLATFORM_32_BIT	opencv2/flann/defines.h	71;"	d
FLANN_PLATFORM_64_BIT	opencv2/flann/defines.h	67;"	d
FLANN_PLATFORM_64_BIT	opencv2/flann/defines.h	69;"	d
FLANN_SIGNATURE_	opencv2/flann/saving.h	39;"	d
FLANN_SIGNATURE_	opencv2/flann/saving.h	41;"	d
FLANN_UINT16	opencv2/flann/defines.h	/^    FLANN_UINT16 = 5,$/;"	e	enum:cvflann::flann_datatype_t
FLANN_UINT32	opencv2/flann/defines.h	/^    FLANN_UINT32 = 6,$/;"	e	enum:cvflann::flann_datatype_t
FLANN_UINT64	opencv2/flann/defines.h	/^    FLANN_UINT64 = 7,$/;"	e	enum:cvflann::flann_datatype_t
FLANN_UINT8	opencv2/flann/defines.h	/^    FLANN_UINT8 = 4,$/;"	e	enum:cvflann::flann_datatype_t
FLANN_USE_BOOST	opencv2/flann/dynamic_bitset.h	39;"	d
FLANN_VERSION_	opencv2/flann/config.h	34;"	d
FLANN_VERSION_	opencv2/flann/config.h	36;"	d
FLOAT	opencv2/core.hpp	/^    enum { INT=0, BOOLEAN=1, REAL=2, STRING=3, MAT=4, MAT_VECTOR=5, ALGORITHM=6, FLOAT=7,$/;"	e	enum:cv::Param::__anon344
FLOAT	opencv2/core/persistence.hpp	/^        FLOAT     = REAL, \/\/!< synonym or REAL$/;"	e	enum:cv::FileNode::Type
FLOODFILL_FIXED_RANGE	opencv2/imgproc.hpp	/^    FLOODFILL_FIXED_RANGE = 1 << 16,$/;"	e	enum:cv::FloodFillFlags
FLOODFILL_MASK_ONLY	opencv2/imgproc.hpp	/^    FLOODFILL_MASK_ONLY   = 1 << 17$/;"	e	enum:cv::FloodFillFlags
FLOW	opencv2/core/persistence.hpp	/^        FLOW      = 8,  \/\/!< compact representation of a sequence or mapping. Used only by YAML writer$/;"	e	enum:cv::FileNode::Type
FMT_C	opencv2/core.hpp	/^           FMT_C       = 5$/;"	e	enum:cv::Formatter::__anon343
FMT_CSV	opencv2/core.hpp	/^           FMT_CSV     = 2,$/;"	e	enum:cv::Formatter::__anon343
FMT_DEFAULT	opencv2/core.hpp	/^    enum { FMT_DEFAULT = 0,$/;"	e	enum:cv::Formatter::__anon343
FMT_MATLAB	opencv2/core.hpp	/^           FMT_MATLAB  = 1,$/;"	e	enum:cv::Formatter::__anon343
FMT_NUMPY	opencv2/core.hpp	/^           FMT_NUMPY   = 4,$/;"	e	enum:cv::Formatter::__anon343
FMT_PYTHON	opencv2/core.hpp	/^           FMT_PYTHON  = 3,$/;"	e	enum:cv::Formatter::__anon343
FM_7POINT	opencv2/calib3d.hpp	/^enum { FM_7POINT = 1, \/\/!< 7-point algorithm$/;"	e	enum:cv::__anon101
FM_8POINT	opencv2/calib3d.hpp	/^       FM_8POINT = 2, \/\/!< 8-point algorithm$/;"	e	enum:cv::__anon101
FM_LMEDS	opencv2/calib3d.hpp	/^       FM_LMEDS  = 4, \/\/!< least-median algorithm$/;"	e	enum:cv::__anon101
FM_RANSAC	opencv2/calib3d.hpp	/^       FM_RANSAC = 8  \/\/!< RANSAC algorithm$/;"	e	enum:cv::__anon101
FONT_HERSHEY_COMPLEX	opencv2/core.hpp	/^    FONT_HERSHEY_COMPLEX        = 3, \/\/!< normal size serif font$/;"	e	enum:cv::HersheyFonts
FONT_HERSHEY_COMPLEX_SMALL	opencv2/core.hpp	/^    FONT_HERSHEY_COMPLEX_SMALL  = 5, \/\/!< smaller version of FONT_HERSHEY_COMPLEX$/;"	e	enum:cv::HersheyFonts
FONT_HERSHEY_DUPLEX	opencv2/core.hpp	/^    FONT_HERSHEY_DUPLEX         = 2, \/\/!< normal size sans-serif font (more complex than FONT_HERSHEY_SIMPLEX)$/;"	e	enum:cv::HersheyFonts
FONT_HERSHEY_PLAIN	opencv2/core.hpp	/^    FONT_HERSHEY_PLAIN          = 1, \/\/!< small size sans-serif font$/;"	e	enum:cv::HersheyFonts
FONT_HERSHEY_SCRIPT_COMPLEX	opencv2/core.hpp	/^    FONT_HERSHEY_SCRIPT_COMPLEX = 7, \/\/!< more complex variant of FONT_HERSHEY_SCRIPT_SIMPLEX$/;"	e	enum:cv::HersheyFonts
FONT_HERSHEY_SCRIPT_SIMPLEX	opencv2/core.hpp	/^    FONT_HERSHEY_SCRIPT_SIMPLEX = 6, \/\/!< hand-writing style font$/;"	e	enum:cv::HersheyFonts
FONT_HERSHEY_SIMPLEX	opencv2/core.hpp	/^    FONT_HERSHEY_SIMPLEX        = 0, \/\/!< normal size sans-serif font$/;"	e	enum:cv::HersheyFonts
FONT_HERSHEY_TRIPLEX	opencv2/core.hpp	/^    FONT_HERSHEY_TRIPLEX        = 4, \/\/!< normal size serif font (more complex than FONT_HERSHEY_COMPLEX)$/;"	e	enum:cv::HersheyFonts
FONT_ITALIC	opencv2/core.hpp	/^    FONT_ITALIC                 = 16 \/\/!< flag for italic font$/;"	e	enum:cv::HersheyFonts
FORMAT_AUTO	opencv2/core/persistence.hpp	/^        FORMAT_AUTO = 0,      \/\/!< flag, auto format$/;"	e	enum:cv::FileStorage::Mode
FORMAT_JSON	opencv2/core/persistence.hpp	/^        FORMAT_JSON = (3<<3), \/\/!< flag, JSON format$/;"	e	enum:cv::FileStorage::Mode
FORMAT_MASK	opencv2/core/persistence.hpp	/^        FORMAT_MASK = (7<<3), \/\/!< mask for format flags$/;"	e	enum:cv::FileStorage::Mode
FORMAT_XML	opencv2/core/persistence.hpp	/^        FORMAT_XML  = (1<<3), \/\/!< flag, XML format$/;"	e	enum:cv::FileStorage::Mode
FORMAT_YAML	opencv2/core/persistence.hpp	/^        FORMAT_YAML = (2<<3), \/\/!< flag, YAML format$/;"	e	enum:cv::FileStorage::Mode
FP_CORRECTLY_ROUNDED_DIVIDE_SQRT	opencv2/core/ocl.hpp	/^        FP_CORRECTLY_ROUNDED_DIVIDE_SQRT=(1 << 7)$/;"	e	enum:cv::ocl::Device::__anon318
FP_DENORM	opencv2/core/ocl.hpp	/^        FP_DENORM=(1 << 0),$/;"	e	enum:cv::ocl::Device::__anon318
FP_FMA	opencv2/core/ocl.hpp	/^        FP_FMA=(1 << 5),$/;"	e	enum:cv::ocl::Device::__anon318
FP_INF_NAN	opencv2/core/ocl.hpp	/^        FP_INF_NAN=(1 << 1),$/;"	e	enum:cv::ocl::Device::__anon318
FP_ROUND_TO_INF	opencv2/core/ocl.hpp	/^        FP_ROUND_TO_INF=(1 << 4),$/;"	e	enum:cv::ocl::Device::__anon318
FP_ROUND_TO_NEAREST	opencv2/core/ocl.hpp	/^        FP_ROUND_TO_NEAREST=(1 << 2),$/;"	e	enum:cv::ocl::Device::__anon318
FP_ROUND_TO_ZERO	opencv2/core/ocl.hpp	/^        FP_ROUND_TO_ZERO=(1 << 3),$/;"	e	enum:cv::ocl::Device::__anon318
FP_SOFT_FLOAT	opencv2/core/ocl.hpp	/^        FP_SOFT_FLOAT=(1 << 6),$/;"	e	enum:cv::ocl::Device::__anon318
FULL_UV	opencv2/core.hpp	/^        FULL_UV  = 4$/;"	e	enum:cv::SVD::Flags
False	opencv2/flann/dist.h	/^class False$/;"	c	namespace:cvflann
False	opencv2/flann/dist.h	85;"	d
FarnebackOpticalFlow	opencv2/cudaoptflow.hpp	/^class CV_EXPORTS FarnebackOpticalFlow : public DenseOpticalFlow$/;"	c	namespace:cv::cuda
FarnebackOpticalFlow	opencv2/superres/optical_flow.hpp	/^        class CV_EXPORTS FarnebackOpticalFlow : public virtual DenseOpticalFlowExt$/;"	c	namespace:cv::superres
FarnebackOpticalFlow	opencv2/video/tracking.hpp	/^class CV_EXPORTS_W FarnebackOpticalFlow : public DenseOpticalFlow$/;"	c	namespace:cv
FastFeatureDetector	opencv2/cudafeatures2d.hpp	/^class CV_EXPORTS FastFeatureDetector : public cv::FastFeatureDetector, public Feature2DAsync$/;"	c	namespace:cv::cuda
FastFeatureDetector	opencv2/features2d.hpp	/^class CV_EXPORTS_W FastFeatureDetector : public Feature2D$/;"	c	namespace:cv
FastMarchingMethod	opencv2/videostab/fast_marching.hpp	/^    FastMarchingMethod() : inf_(1e6f) {}$/;"	f	class:cv::videostab::FastMarchingMethod
FastMarchingMethod	opencv2/videostab/fast_marching.hpp	/^class CV_EXPORTS FastMarchingMethod$/;"	c	namespace:cv::videostab
FastOpticalFlowBM	opencv2/cudalegacy.hpp	/^class CV_EXPORTS FastOpticalFlowBM$/;"	c	namespace:cv::cuda
FeatherBlender	opencv2/stitching/detail/blenders.hpp	/^class CV_EXPORTS FeatherBlender : public Blender$/;"	c	namespace:cv::detail
FeatherBlender	opencv2/stitching/detail/blenders.hpp	/^inline FeatherBlender::FeatherBlender(float _sharpness) { setSharpness(_sharpness); }$/;"	f	class:cv::detail::FeatherBlender
Feature2D	opencv2/features2d.hpp	/^class CV_EXPORTS_W Feature2D : public virtual Algorithm$/;"	c	namespace:cv
Feature2DAsync	opencv2/cudafeatures2d.hpp	/^class CV_EXPORTS Feature2DAsync$/;"	c	namespace:cv::cuda
FeatureDetector	opencv2/features2d.hpp	/^typedef Feature2D FeatureDetector;$/;"	t	namespace:cv
FeatureIndex	opencv2/flann/lsh_table.h	/^typedef uint32_t FeatureIndex;$/;"	t	namespace:cvflann::lsh
FeatureSet	opencv2/core/cuda.hpp	/^enum FeatureSet$/;"	g	namespace:cv::cuda
FeaturesFinder	opencv2/stitching/detail/matchers.hpp	/^class CV_EXPORTS FeaturesFinder$/;"	c	namespace:cv::detail
FeaturesMatcher	opencv2/stitching/detail/matchers.hpp	/^    FeaturesMatcher(bool is_thread_safe = false) : is_thread_safe_(is_thread_safe) {}$/;"	f	class:cv::detail::FeaturesMatcher
FeaturesMatcher	opencv2/stitching/detail/matchers.hpp	/^class CV_EXPORTS FeaturesMatcher$/;"	c	namespace:cv::detail
FileNode	opencv2/core/cvstd.hpp	/^class CV_EXPORTS FileNode; \/\/for string constructor from FileNode$/;"	m	namespace:cv	typeref:class:cv::CV_EXPORTS
FileNode	opencv2/core/persistence.hpp	/^class CV_EXPORTS FileNode;$/;"	m	namespace:cv	typeref:class:cv::CV_EXPORTS
FileNode	opencv2/core/persistence.hpp	/^class CV_EXPORTS_W_SIMPLE FileNode$/;"	c	namespace:cv
FileNode	opencv2/core/persistence.hpp	/^inline FileNode::FileNode() : fs(0), node(0) {}$/;"	f	class:cv::FileNode
FileNode	opencv2/core/persistence.hpp	/^inline FileNode::FileNode(const CvFileStorage* _fs, const CvFileNode* _node) : fs(_fs), node(_node) {}$/;"	f	class:cv::FileNode
FileNode	opencv2/core/persistence.hpp	/^inline FileNode::FileNode(const FileNode& _node) : fs(_node.fs), node(_node.node) {}$/;"	f	class:cv::FileNode
FileNodeIterator	opencv2/core/persistence.hpp	/^class CV_EXPORTS FileNodeIterator$/;"	c	namespace:cv
FileNodeIterator	opencv2/core/persistence.hpp	/^class CV_EXPORTS FileNodeIterator;$/;"	m	namespace:cv	typeref:class:cv::CV_EXPORTS
FileStorage	opencv2/core/persistence.hpp	/^class CV_EXPORTS_W FileStorage$/;"	c	namespace:cv
Filter	opencv2/cudafilters.hpp	/^class CV_EXPORTS Filter : public Algorithm$/;"	c	namespace:cv::cuda
Filter2D	opencv2/imgproc/hal/hal.hpp	/^struct CV_EXPORTS Filter2D$/;"	s	namespace:cv::hal
FindMaxValExprBody	opencv2/cudev/expr/reduction.hpp	/^template <class SrcPtr> struct FindMaxValExprBody$/;"	s	namespace:cv::cudev
FindMinMaxValExprBody	opencv2/cudev/expr/reduction.hpp	/^template <class SrcPtr> struct FindMinMaxValExprBody$/;"	s	namespace:cv::cudev
FindMinValExprBody	opencv2/cudev/expr/reduction.hpp	/^template <class SrcPtr> struct FindMinValExprBody$/;"	s	namespace:cv::cudev
FisheyeProjector	opencv2/stitching/detail/warpers.hpp	/^struct CV_EXPORTS FisheyeProjector : ProjectorBase$/;"	s	namespace:cv::detail
FisheyeWarper	opencv2/stitching/detail/warpers.hpp	/^    FisheyeWarper(float scale) { projector_.scale = scale; }$/;"	f	class:cv::detail::FisheyeWarper
FisheyeWarper	opencv2/stitching/detail/warpers.hpp	/^class CV_EXPORTS FisheyeWarper : public RotationWarperBase<FisheyeProjector>$/;"	c	namespace:cv::detail
FisheyeWarper	opencv2/stitching/warpers.hpp	/^class FisheyeWarper : public WarperCreator$/;"	c	namespace:cv
Flags	opencv2/core.hpp	/^    enum Flags { DATA_AS_ROW = 0, \/\/!< indicates that the input samples are stored as matrix rows$/;"	g	class:cv::PCA
Flags	opencv2/core.hpp	/^    enum Flags {$/;"	g	class:cv::SVD
Flags	opencv2/ml.hpp	/^    enum Flags { PREDICT_AUTO=0, PREDICT_SUM=(1<<8), PREDICT_MAX_VOTE=(2<<8), PREDICT_MASK=(3<<8) };$/;"	g	class:cv::ml::DTrees
Flags	opencv2/ml.hpp	/^    enum Flags {$/;"	g	class:cv::ml::StatModel
FlannBasedMatcher	opencv2/features2d.hpp	/^class CV_EXPORTS_W FlannBasedMatcher : public DescriptorMatcher$/;"	c	namespace:cv
FloatType	opencv2/cudev/functional/functional.hpp	/^    template <typename T> struct FloatType$/;"	s	namespace:cv::cudev::functional_detail
FloodFillFlags	opencv2/imgproc.hpp	/^enum FloodFillFlags {$/;"	g	namespace:cv
For	opencv2/core/cuda/detail/reduce.hpp	/^        struct For$/;"	s	namespace:cv::cuda::device::reduce_detail
For	opencv2/core/cuda/detail/reduce.hpp	/^        struct For<N, N>$/;"	s	namespace:cv::cuda::device::reduce_detail
For	opencv2/core/cuda/detail/reduce_key_val.hpp	/^        struct For$/;"	s	namespace:cv::cuda::device::reduce_key_val_detail
For	opencv2/core/cuda/detail/reduce_key_val.hpp	/^        struct For<N, N>$/;"	s	namespace:cv::cuda::device::reduce_key_val_detail
For	opencv2/cudev/block/detail/reduce.hpp	/^    template <int I, int N> struct For$/;"	s	namespace:cv::cudev::block_reduce_detail
For	opencv2/cudev/block/detail/reduce.hpp	/^    template <int N> struct For<N, N>$/;"	s	namespace:cv::cudev::block_reduce_detail
For	opencv2/cudev/block/detail/reduce_key_val.hpp	/^    template <int I, int N> struct For$/;"	s	namespace:cv::cudev::block_reduce_key_val_detail
For	opencv2/cudev/block/detail/reduce_key_val.hpp	/^    template <int N> struct For<N, N>$/;"	s	namespace:cv::cudev::block_reduce_key_val_detail
For	opencv2/cudev/warp/detail/reduce.hpp	/^    template <int I, int N> struct For$/;"	s	namespace:cv::cudev::warp_reduce_detail
For	opencv2/cudev/warp/detail/reduce.hpp	/^    template <int N> struct For<N, N>$/;"	s	namespace:cv::cudev::warp_reduce_detail
For	opencv2/cudev/warp/detail/reduce_key_val.hpp	/^    template <int I, int N> struct For$/;"	s	namespace:cv::cudev::warp_reduce_key_val_detail
For	opencv2/cudev/warp/detail/reduce_key_val.hpp	/^    template <int N> struct For<N, N>$/;"	s	namespace:cv::cudev::warp_reduce_key_val_detail
ForceGlob	opencv2/core/cuda/datamov_utils.hpp	/^        template <typename T> struct ForceGlob$/;"	s	namespace:cv::cuda::device
ForceIDR	opencv2/cudacodec.hpp	/^    int ForceIDR;        \/\/!< NVVE_FORCE_IDR,$/;"	m	struct:cv::cudacodec::EncoderParams
ForceIntra	opencv2/cudacodec.hpp	/^    int ForceIntra;      \/\/!< NVVE_FORCE_INTRA,$/;"	m	struct:cv::cudacodec::EncoderParams
Format	opencv2/core/opengl.hpp	/^    enum Format$/;"	g	class:cv::ogl::Texture2D
FormatInfo	opencv2/cudacodec.hpp	/^struct FormatInfo$/;"	s	namespace:cv::cudacodec
Formatted	opencv2/core.hpp	/^class CV_EXPORTS Formatted$/;"	c	namespace:cv
Formatter	opencv2/core.hpp	/^class CV_EXPORTS Formatter$/;"	c	namespace:cv
FrameSource	opencv2/superres.hpp	/^        class CV_EXPORTS FrameSource$/;"	c	namespace:cv::superres
FromFileMotionReader	opencv2/videostab/global_motion.hpp	/^class CV_EXPORTS FromFileMotionReader : public ImageMotionEstimatorBase$/;"	c	namespace:cv::videostab
Function	opencv2/core/optim.hpp	/^    class CV_EXPORTS Function$/;"	c	class:cv::MinProblemSolver
G2Y	opencv2/core/cuda/detail/color_detail.hpp	/^            G2Y        = 9617,$/;"	e	enum:cv::cuda::device::color_detail::__anon246
G2Y	opencv2/cudev/functional/detail/color_cvt.hpp	/^        G2Y        = 9617,$/;"	e	enum:cv::cudev::color_cvt_detail::__anon396
GAIN	opencv2/stitching/detail/exposure_compensate.hpp	/^    enum { NO, GAIN, GAIN_BLOCKS };$/;"	e	enum:cv::detail::ExposureCompensator::__anon93
GAIN_BLOCKS	opencv2/stitching/detail/exposure_compensate.hpp	/^    enum { NO, GAIN, GAIN_BLOCKS };$/;"	e	enum:cv::detail::ExposureCompensator::__anon93
GAMMA	opencv2/ml.hpp	/^        GAMMA=1,$/;"	e	enum:cv::ml::SVM::ParamTypes
GAMMA_TAB_SIZE	opencv2/core/cuda/detail/color_detail.hpp	/^            GAMMA_TAB_SIZE = 1024,$/;"	e	enum:cv::cuda::device::color_detail::__anon247
GAMMA_TAB_SIZE	opencv2/cudev/functional/detail/color_cvt.hpp	/^        GAMMA_TAB_SIZE = 1024,$/;"	e	enum:cv::cudev::color_cvt_detail::__anon397
GAUSSIAN	opencv2/ml.hpp	/^        GAUSSIAN = 2$/;"	e	enum:cv::ml::ANN_MLP::ActivationFunctions
GC_BGD	opencv2/imgproc.hpp	/^    GC_BGD    = 0,  \/\/!< an obvious background pixels$/;"	e	enum:cv::GrabCutClasses
GC_EVAL	opencv2/imgproc.hpp	/^    GC_EVAL            = 2$/;"	e	enum:cv::GrabCutModes
GC_FGD	opencv2/imgproc.hpp	/^    GC_FGD    = 1,  \/\/!< an obvious foreground (object) pixel$/;"	e	enum:cv::GrabCutClasses
GC_INIT_WITH_MASK	opencv2/imgproc.hpp	/^    GC_INIT_WITH_MASK  = 1,$/;"	e	enum:cv::GrabCutModes
GC_INIT_WITH_RECT	opencv2/imgproc.hpp	/^    GC_INIT_WITH_RECT  = 0,$/;"	e	enum:cv::GrabCutModes
GC_PR_BGD	opencv2/imgproc.hpp	/^    GC_PR_BGD = 2,  \/\/!< a possible background pixel$/;"	e	enum:cv::GrabCutClasses
GC_PR_FGD	opencv2/imgproc.hpp	/^    GC_PR_FGD = 3   \/\/!< a possible foreground pixel$/;"	e	enum:cv::GrabCutClasses
GEMM_1_T	opencv2/core/base.hpp	/^enum GemmFlags { GEMM_1_T = 1, \/\/!< transposes src1$/;"	e	enum:cv::GemmFlags
GEMM_2_T	opencv2/core/base.hpp	/^                 GEMM_2_T = 2, \/\/!< transposes src2$/;"	e	enum:cv::GemmFlags
GEMM_3_T	opencv2/core/base.hpp	/^                 GEMM_3_T = 4 \/\/!< transposes src3$/;"	e	enum:cv::GemmFlags
GENTLE	opencv2/ml.hpp	/^        GENTLE=3 \/\/!< Gentle AdaBoost. It puts less weight on outlier data points and for that$/;"	e	enum:cv::ml::Boost::Types
GFTTDetector	opencv2/features2d.hpp	/^class CV_EXPORTS_W GFTTDetector : public Feature2D$/;"	c	namespace:cv
GLOBAL_ATOMICS	opencv2/core/cuda.hpp	/^    GLOBAL_ATOMICS = FEATURE_SET_COMPUTE_11,$/;"	e	enum:cv::cuda::FeatureSet
GROWING_BLOCKS	5/parallel/types.h	/^      GROWING_BLOCKS, $/;"	e	enum:__gnu_parallel::_FindAlgorithm
GainCompensator	opencv2/stitching/detail/exposure_compensate.hpp	/^class CV_EXPORTS GainCompensator : public ExposureCompensator$/;"	c	namespace:cv::detail
GaussianMotionFilter	opencv2/videostab/motion_stabilizing.hpp	/^class CV_EXPORTS GaussianMotionFilter : public MotionFilterBase$/;"	c	namespace:cv::videostab
GaussianMotionFilter	opencv2/videostab/motion_stabilizing.hpp	/^inline GaussianMotionFilter::GaussianMotionFilter(int _radius, float _stdev) { setParams(_radius, _stdev); }$/;"	f	class:cv::videostab::GaussianMotionFilter
GemmFlags	opencv2/core/base.hpp	/^enum GemmFlags { GEMM_1_T = 1, \/\/!< transposes src1$/;"	g	namespace:cv
GeneralizedHough	opencv2/imgproc.hpp	/^class CV_EXPORTS GeneralizedHough : public Algorithm$/;"	c	namespace:cv
GeneralizedHoughBallard	opencv2/imgproc.hpp	/^class CV_EXPORTS GeneralizedHoughBallard : public GeneralizedHough$/;"	c	namespace:cv
GeneralizedHoughGuil	opencv2/imgproc.hpp	/^class CV_EXPORTS GeneralizedHoughGuil : public GeneralizedHough$/;"	c	namespace:cv
Generic	opencv2/core/cuda/detail/reduce.hpp	/^        template <unsigned int N> struct Generic$/;"	s	namespace:cv::cuda::device::reduce_detail
Generic	opencv2/core/cuda/detail/reduce_key_val.hpp	/^        template <unsigned int N> struct Generic$/;"	s	namespace:cv::cuda::device::reduce_key_val_detail
Generic	opencv2/cudev/block/detail/reduce.hpp	/^    template <int N> struct Generic$/;"	s	namespace:cv::cudev::block_reduce_detail
Generic	opencv2/cudev/block/detail/reduce_key_val.hpp	/^    template <int N> struct Generic$/;"	s	namespace:cv::cudev::block_reduce_key_val_detail
GenericIndex	opencv2/flann.hpp	/^GenericIndex<Distance>::GenericIndex(const Mat& dataset, const ::cvflann::IndexParams& params, Distance distance)$/;"	f	class:cv::flann::GenericIndex
GenericIndex	opencv2/flann.hpp	/^class GenericIndex$/;"	c	namespace:cv::flann
GenericOptimized32	opencv2/core/cuda/detail/reduce.hpp	/^        template <unsigned int N> struct GenericOptimized32$/;"	s	namespace:cv::cuda::device::reduce_detail
GenericOptimized32	opencv2/core/cuda/detail/reduce_key_val.hpp	/^        template <unsigned int N> struct GenericOptimized32$/;"	s	namespace:cv::cuda::device::reduce_key_val_detail
GenericOptimized32	opencv2/cudev/block/detail/reduce.hpp	/^    template <int N> struct GenericOptimized32$/;"	s	namespace:cv::cudev::block_reduce_detail
GenericOptimized32	opencv2/cudev/block/detail/reduce_key_val.hpp	/^    template <uint N> struct GenericOptimized32$/;"	s	namespace:cv::cudev::block_reduce_key_val_detail
GetType	opencv2/core/cuda/detail/reduce.hpp	/^        template <typename T> struct GetType<T&>$/;"	s	namespace:cv::cuda::device::reduce_detail
GetType	opencv2/core/cuda/detail/reduce.hpp	/^        template <typename T> struct GetType<T*>$/;"	s	namespace:cv::cuda::device::reduce_detail
GetType	opencv2/core/cuda/detail/reduce.hpp	/^        template <typename T> struct GetType<volatile T*>$/;"	s	namespace:cv::cuda::device::reduce_detail
GetType	opencv2/core/cuda/detail/reduce_key_val.hpp	/^        template <typename T> struct GetType<T&>$/;"	s	namespace:cv::cuda::device::reduce_key_val_detail
GetType	opencv2/core/cuda/detail/reduce_key_val.hpp	/^        template <typename T> struct GetType<T*>$/;"	s	namespace:cv::cuda::device::reduce_key_val_detail
GetType	opencv2/core/cuda/detail/reduce_key_val.hpp	/^        template <typename T> struct GetType<volatile T*>$/;"	s	namespace:cv::cuda::device::reduce_key_val_detail
GetType	opencv2/cudev/block/detail/reduce.hpp	/^    template <typename T> struct GetType<T&>$/;"	s	namespace:cv::cudev::block_reduce_detail
GetType	opencv2/cudev/block/detail/reduce.hpp	/^    template <typename T> struct GetType<T*>$/;"	s	namespace:cv::cudev::block_reduce_detail
GetType	opencv2/cudev/block/detail/reduce.hpp	/^    template <typename T> struct GetType<volatile T*>$/;"	s	namespace:cv::cudev::block_reduce_detail
GetType	opencv2/cudev/block/detail/reduce_key_val.hpp	/^    template <typename T> struct GetType<T&>$/;"	s	namespace:cv::cudev::block_reduce_key_val_detail
GetType	opencv2/cudev/block/detail/reduce_key_val.hpp	/^    template <typename T> struct GetType<T*>$/;"	s	namespace:cv::cudev::block_reduce_key_val_detail
GetType	opencv2/cudev/block/detail/reduce_key_val.hpp	/^    template <typename T> struct GetType<volatile T*>$/;"	s	namespace:cv::cudev::block_reduce_key_val_detail
GetType	opencv2/cudev/warp/detail/reduce.hpp	/^    template <typename T> struct GetType<T&>$/;"	s	namespace:cv::cudev::warp_reduce_detail
GetType	opencv2/cudev/warp/detail/reduce.hpp	/^    template <typename T> struct GetType<T*>$/;"	s	namespace:cv::cudev::warp_reduce_detail
GetType	opencv2/cudev/warp/detail/reduce.hpp	/^    template <typename T> struct GetType<volatile T*>$/;"	s	namespace:cv::cudev::warp_reduce_detail
GetType	opencv2/cudev/warp/detail/reduce_key_val.hpp	/^    template <typename T> struct GetType<T&>$/;"	s	namespace:cv::cudev::warp_reduce_key_val_detail
GetType	opencv2/cudev/warp/detail/reduce_key_val.hpp	/^    template <typename T> struct GetType<T*>$/;"	s	namespace:cv::cudev::warp_reduce_key_val_detail
GetType	opencv2/cudev/warp/detail/reduce_key_val.hpp	/^    template <typename T> struct GetType<volatile T*>$/;"	s	namespace:cv::cudev::warp_reduce_key_val_detail
GlobPtr	opencv2/cudev/ptr2d/glob.hpp	/^template <typename T> struct GlobPtr$/;"	s	namespace:cv::cudev
GlobPtrSz	opencv2/cudev/ptr2d/glob.hpp	/^template <typename T> struct GlobPtrSz : GlobPtr<T>$/;"	s	namespace:cv::cudev
GpuApiCallError	opencv2/core/base.hpp	/^    GpuApiCallError=           -217,$/;"	e	enum:cv::Error::Code
GpuMat	opencv2/core/base.hpp	/^    class CV_EXPORTS GpuMat;$/;"	m	namespace:cv::cuda	typeref:class:cv::cuda::CV_EXPORTS
GpuMat	opencv2/core/cuda.hpp	/^class CV_EXPORTS GpuMat$/;"	c	namespace:cv::cuda
GpuMat	opencv2/core/cuda.inl.hpp	/^GpuMat::GpuMat(Allocator* allocator_)$/;"	f	class:cv::cuda::GpuMat
GpuMat	opencv2/core/cuda.inl.hpp	/^GpuMat::GpuMat(InputArray arr, Allocator* allocator_) :$/;"	f	class:cv::cuda::GpuMat
GpuMat	opencv2/core/cuda.inl.hpp	/^GpuMat::GpuMat(Size size_, int type_, Allocator* allocator_)$/;"	f	class:cv::cuda::GpuMat
GpuMat	opencv2/core/cuda.inl.hpp	/^GpuMat::GpuMat(Size size_, int type_, Scalar s_, Allocator* allocator_)$/;"	f	class:cv::cuda::GpuMat
GpuMat	opencv2/core/cuda.inl.hpp	/^GpuMat::GpuMat(const GpuMat& m)$/;"	f	class:cv::cuda::GpuMat
GpuMat	opencv2/core/cuda.inl.hpp	/^GpuMat::GpuMat(int rows_, int cols_, int type_, Allocator* allocator_)$/;"	f	class:cv::cuda::GpuMat
GpuMat	opencv2/core/cuda.inl.hpp	/^GpuMat::GpuMat(int rows_, int cols_, int type_, Scalar s_, Allocator* allocator_)$/;"	f	class:cv::cuda::GpuMat
GpuMat_	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^__host__ GpuMat_<T>::GpuMat_(Allocator* allocator)$/;"	f	class:cv::cudev::GpuMat_
GpuMat_	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^__host__ GpuMat_<T>::GpuMat_(InputArray arr, Allocator* allocator)$/;"	f	class:cv::cudev::GpuMat_
GpuMat_	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^__host__ GpuMat_<T>::GpuMat_(Size asize, Allocator* allocator)$/;"	f	class:cv::cudev::GpuMat_
GpuMat_	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^__host__ GpuMat_<T>::GpuMat_(Size asize, Scalar val, Allocator* allocator)$/;"	f	class:cv::cudev::GpuMat_
GpuMat_	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^__host__ GpuMat_<T>::GpuMat_(Size asize, T* adata, size_t astep)$/;"	f	class:cv::cudev::GpuMat_
GpuMat_	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^__host__ GpuMat_<T>::GpuMat_(const Expr<Body>& expr)$/;"	f	class:cv::cudev::GpuMat_
GpuMat_	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^__host__ GpuMat_<T>::GpuMat_(const GpuMat& m, Allocator* allocator)$/;"	f	class:cv::cudev::GpuMat_
GpuMat_	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^__host__ GpuMat_<T>::GpuMat_(const GpuMat_& m)$/;"	f	class:cv::cudev::GpuMat_
GpuMat_	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^__host__ GpuMat_<T>::GpuMat_(const GpuMat_& m, Range arowRange, Range acolRange)$/;"	f	class:cv::cudev::GpuMat_
GpuMat_	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^__host__ GpuMat_<T>::GpuMat_(const GpuMat_& m, Rect roi)$/;"	f	class:cv::cudev::GpuMat_
GpuMat_	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^__host__ GpuMat_<T>::GpuMat_(int arows, int acols, Allocator* allocator)$/;"	f	class:cv::cudev::GpuMat_
GpuMat_	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^__host__ GpuMat_<T>::GpuMat_(int arows, int acols, Scalar val, Allocator* allocator)$/;"	f	class:cv::cudev::GpuMat_
GpuMat_	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^__host__ GpuMat_<T>::GpuMat_(int arows, int acols, T* adata, size_t astep)$/;"	f	class:cv::cudev::GpuMat_
GpuMat_	opencv2/cudev/ptr2d/gpumat.hpp	/^class GpuMat_ : public GpuMat$/;"	c	namespace:cv::cudev
GpuNotSupported	opencv2/core/base.hpp	/^    GpuNotSupported=           -216,$/;"	e	enum:cv::Error::Code
GrabCutClasses	opencv2/imgproc.hpp	/^enum GrabCutClasses {$/;"	g	namespace:cv
GrabCutModes	opencv2/imgproc.hpp	/^enum GrabCutModes {$/;"	g	namespace:cv
Graph	opencv2/stitching/detail/util.hpp	/^    Graph(int num_vertices = 0) { create(num_vertices); }$/;"	f	class:cv::detail::Graph
Graph	opencv2/stitching/detail/util.hpp	/^class CV_EXPORTS Graph$/;"	c	namespace:cv::detail
GraphCutSeamFinder	opencv2/stitching/detail/seam_finders.hpp	/^class CV_EXPORTS GraphCutSeamFinder : public GraphCutSeamFinderBase, public SeamFinder$/;"	c	namespace:cv::detail
GraphCutSeamFinderBase	opencv2/stitching/detail/seam_finders.hpp	/^class CV_EXPORTS GraphCutSeamFinderBase$/;"	c	namespace:cv::detail
GraphCutSeamFinderGpu	opencv2/stitching/detail/seam_finders.hpp	/^    GraphCutSeamFinderGpu(int cost_type = COST_COLOR_GRAD, float terminal_cost = 10000.f,$/;"	f	class:cv::detail::GraphCutSeamFinderGpu
GraphCutSeamFinderGpu	opencv2/stitching/detail/seam_finders.hpp	/^class CV_EXPORTS GraphCutSeamFinderGpu : public GraphCutSeamFinderBase, public PairwiseSeamFinder$/;"	c	namespace:cv::detail
GraphEdge	opencv2/stitching/detail/util.hpp	/^inline GraphEdge::GraphEdge(int _from, int _to, float _weight) : from(_from), to(_to), weight(_weight) {}$/;"	f	class:cv::detail::GraphEdge
GraphEdge	opencv2/stitching/detail/util.hpp	/^struct CV_EXPORTS GraphEdge$/;"	s	namespace:cv::detail
Gray2RGB	opencv2/core/cuda/detail/color_detail.hpp	/^            __host__ __device__ __forceinline__ Gray2RGB() {}$/;"	f	struct:cv::cuda::device::color_detail::Gray2RGB
Gray2RGB	opencv2/core/cuda/detail/color_detail.hpp	/^            __host__ __device__ __forceinline__ Gray2RGB(const Gray2RGB&) {}$/;"	f	struct:cv::cuda::device::color_detail::Gray2RGB
Gray2RGB	opencv2/core/cuda/detail/color_detail.hpp	/^        template <> struct Gray2RGB<uchar, 4> : unary_function<uchar, uint>$/;"	s	namespace:cv::cuda::device::color_detail
Gray2RGB	opencv2/core/cuda/detail/color_detail.hpp	/^        template <typename T, int dcn> struct Gray2RGB : unary_function<T, typename TypeVec<T, dcn>::vec_type>$/;"	s	namespace:cv::cuda::device::color_detail
Gray2RGB	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <typename T, int dcn> struct Gray2RGB$/;"	s	namespace:cv::cudev::color_cvt_detail
Gray2RGB5x5	opencv2/core/cuda/detail/color_detail.hpp	/^            __host__ __device__ __forceinline__ Gray2RGB5x5() {}$/;"	f	struct:cv::cuda::device::color_detail::Gray2RGB5x5
Gray2RGB5x5	opencv2/core/cuda/detail/color_detail.hpp	/^            __host__ __device__ __forceinline__ Gray2RGB5x5(const Gray2RGB5x5&) {}$/;"	f	struct:cv::cuda::device::color_detail::Gray2RGB5x5
Gray2RGB5x5	opencv2/core/cuda/detail/color_detail.hpp	/^        template<int green_bits> struct Gray2RGB5x5 : unary_function<uchar, ushort>$/;"	s	namespace:cv::cuda::device::color_detail
Gray2RGB5x5	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <> struct Gray2RGB5x5<5>$/;"	s	namespace:cv::cudev::color_cvt_detail
Gray2RGB5x5	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <> struct Gray2RGB5x5<6>$/;"	s	namespace:cv::cudev::color_cvt_detail
Gray2RGB5x5Converter	opencv2/core/cuda/detail/color_detail.hpp	/^        template<> struct Gray2RGB5x5Converter<5>$/;"	s	namespace:cv::cuda::device::color_detail
Gray2RGB5x5Converter	opencv2/core/cuda/detail/color_detail.hpp	/^        template<> struct Gray2RGB5x5Converter<6>$/;"	s	namespace:cv::cuda::device::color_detail
GroupWiseCenterChooser	opencv2/flann/hierarchical_clustering_index.h	/^    void GroupWiseCenterChooser(int k, int* dsindices, int indices_length, int* centers, int& centers_length)$/;"	f	class:cvflann::HierarchicalClusteringIndex
H	opencv2/stitching/detail/matchers.hpp	/^    Mat H;                              \/\/!< Estimated transformation$/;"	m	struct:cv::detail::MatchesInfo
H264	opencv2/cudacodec.hpp	/^    H264,$/;"	e	enum:cv::cudacodec::Codec
H264_MVC	opencv2/cudacodec.hpp	/^    H264_MVC,$/;"	e	enum:cv::cudacodec::Codec
H264_SVC	opencv2/cudacodec.hpp	/^    H264_SVC,$/;"	e	enum:cv::cudacodec::Codec
HAAR_STDDEV_BORDER	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	384;"	d
HARD_MARGIN	opencv2/ml.hpp	/^        HARD_MARGIN  \/\/!< More accurate for the case of linearly separable sets.$/;"	e	enum:cv::ml::SVMSGD::MarginType
HARRIS_SCORE	opencv2/features2d.hpp	/^    enum { kBytes = 32, HARRIS_SCORE=0, FAST_SCORE=1 };$/;"	e	enum:cv::ORB::__anon376
HASH_BIT	opencv2/core/mat.hpp	/^    enum { MAGIC_VAL=0x42FD0000, MAX_DIM=32, HASH_SCALE=0x5bd1e995, HASH_BIT=0x80000000 };$/;"	e	enum:cv::SparseMat::__anon280
HASH_SCALE	opencv2/core/mat.hpp	/^    enum { MAGIC_VAL=0x42FD0000, MAX_DIM=32, HASH_SCALE=0x5bd1e995, HASH_BIT=0x80000000 };$/;"	e	enum:cv::SparseMat::__anon280
HAVE_CAMV4L2	opencv2/cvconfig.h	23;"	d
HAVE_CUBLAS	opencv2/cvconfig.h	44;"	d
HAVE_CUDA	opencv2/cvconfig.h	47;"	d
HAVE_CUFFT	opencv2/cvconfig.h	50;"	d
HAVE_DC1394_2	opencv2/cvconfig.h	56;"	d
HAVE_FFMPEG	opencv2/cvconfig.h	72;"	d
HAVE_IPL	opencv2/core/types_c.h	56;"	d
HAVE_IPP	opencv2/cvconfig.h	93;"	d
HAVE_IPP_ICV_ONLY	opencv2/cvconfig.h	94;"	d
HAVE_JASPER	opencv2/cvconfig.h	100;"	d
HAVE_JPEG	opencv2/cvconfig.h	103;"	d
HAVE_OPENCL	opencv2/cvconfig.h	124;"	d
HAVE_OPENCV_CALIB3D	opencv2/opencv_modules.hpp	13;"	d
HAVE_OPENCV_CORE	opencv2/opencv_modules.hpp	14;"	d
HAVE_OPENCV_CUDAARITHM	opencv2/opencv_modules.hpp	15;"	d
HAVE_OPENCV_CUDABGSEGM	opencv2/opencv_modules.hpp	16;"	d
HAVE_OPENCV_CUDACODEC	opencv2/opencv_modules.hpp	17;"	d
HAVE_OPENCV_CUDAFEATURES2D	opencv2/opencv_modules.hpp	18;"	d
HAVE_OPENCV_CUDAFILTERS	opencv2/opencv_modules.hpp	19;"	d
HAVE_OPENCV_CUDAIMGPROC	opencv2/opencv_modules.hpp	20;"	d
HAVE_OPENCV_CUDALEGACY	opencv2/opencv_modules.hpp	21;"	d
HAVE_OPENCV_CUDAOBJDETECT	opencv2/opencv_modules.hpp	22;"	d
HAVE_OPENCV_CUDAOPTFLOW	opencv2/opencv_modules.hpp	23;"	d
HAVE_OPENCV_CUDASTEREO	opencv2/opencv_modules.hpp	24;"	d
HAVE_OPENCV_CUDAWARPING	opencv2/opencv_modules.hpp	25;"	d
HAVE_OPENCV_CUDEV	opencv2/opencv_modules.hpp	26;"	d
HAVE_OPENCV_FEATURES2D	opencv2/opencv_modules.hpp	27;"	d
HAVE_OPENCV_FLANN	opencv2/opencv_modules.hpp	28;"	d
HAVE_OPENCV_HIGHGUI	opencv2/opencv_modules.hpp	29;"	d
HAVE_OPENCV_IMGCODECS	opencv2/opencv_modules.hpp	30;"	d
HAVE_OPENCV_IMGPROC	opencv2/opencv_modules.hpp	31;"	d
HAVE_OPENCV_ML	opencv2/opencv_modules.hpp	32;"	d
HAVE_OPENCV_OBJDETECT	opencv2/opencv_modules.hpp	33;"	d
HAVE_OPENCV_PHOTO	opencv2/opencv_modules.hpp	34;"	d
HAVE_OPENCV_SHAPE	opencv2/opencv_modules.hpp	35;"	d
HAVE_OPENCV_STITCHING	opencv2/opencv_modules.hpp	36;"	d
HAVE_OPENCV_SUPERRES	opencv2/opencv_modules.hpp	37;"	d
HAVE_OPENCV_VIDEO	opencv2/opencv_modules.hpp	38;"	d
HAVE_OPENCV_VIDEOIO	opencv2/opencv_modules.hpp	39;"	d
HAVE_OPENCV_VIDEOSTAB	opencv2/opencv_modules.hpp	40;"	d
HAVE_OPENEXR	opencv2/cvconfig.h	129;"	d
HAVE_PNG	opencv2/cvconfig.h	141;"	d
HAVE_PTHREADS	opencv2/cvconfig.h	144;"	d
HAVE_PTHREADS_PF	opencv2/cvconfig.h	147;"	d
HAVE_QT	opencv2/cvconfig.h	150;"	d
HAVE_TIFF	opencv2/cvconfig.h	165;"	d
HELLINGER	opencv2/flann/defines.h	/^    HELLINGER = 6,$/;"	e	enum:cvflann::flann_distance_t
HG_AUTOSIZE	opencv2/highgui/highgui_c.h	238;"	d
HISTCMP_BHATTACHARYYA	opencv2/imgproc.hpp	/^    HISTCMP_BHATTACHARYYA = 3,$/;"	e	enum:cv::HistCompMethods
HISTCMP_CHISQR	opencv2/imgproc.hpp	/^    HISTCMP_CHISQR        = 1,$/;"	e	enum:cv::HistCompMethods
HISTCMP_CHISQR_ALT	opencv2/imgproc.hpp	/^    HISTCMP_CHISQR_ALT    = 4,$/;"	e	enum:cv::HistCompMethods
HISTCMP_CORREL	opencv2/imgproc.hpp	/^    HISTCMP_CORREL        = 0,$/;"	e	enum:cv::HistCompMethods
HISTCMP_HELLINGER	opencv2/imgproc.hpp	/^    HISTCMP_HELLINGER     = HISTCMP_BHATTACHARYYA, \/\/!< Synonym for HISTCMP_BHATTACHARYYA$/;"	e	enum:cv::HistCompMethods
HISTCMP_INTERSECT	opencv2/imgproc.hpp	/^    HISTCMP_INTERSECT     = 2,$/;"	e	enum:cv::HistCompMethods
HISTCMP_KL_DIV	opencv2/imgproc.hpp	/^    HISTCMP_KL_DIV        = 5$/;"	e	enum:cv::HistCompMethods
HIST_INTERSECT	opencv2/flann/defines.h	/^    HIST_INTERSECT   = 5,$/;"	e	enum:cvflann::flann_distance_t
HLS2RGB	opencv2/core/cuda/detail/color_detail.hpp	/^            __host__ __device__ __forceinline__ HLS2RGB() {}$/;"	f	struct:cv::cuda::device::color_detail::HLS2RGB
HLS2RGB	opencv2/core/cuda/detail/color_detail.hpp	/^            __host__ __device__ __forceinline__ HLS2RGB(const HLS2RGB&) {}$/;"	f	struct:cv::cuda::device::color_detail::HLS2RGB
HLS2RGB	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx, int hr> struct HLS2RGB<uchar, 4, 4, bidx, hr> : unary_function<uint, uint>$/;"	s	namespace:cv::cuda::device::color_detail
HLS2RGB	opencv2/core/cuda/detail/color_detail.hpp	/^        template <typename T, int scn, int dcn, int bidx, int hr> struct HLS2RGB$/;"	s	namespace:cv::cuda::device::color_detail
HLS2RGB	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <int scn, int dcn, int bidx, int hr> struct HLS2RGB<float, scn, dcn, bidx, hr>$/;"	s	namespace:cv::cudev::color_cvt_detail
HLS2RGB	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <int scn, int dcn, int bidx, int hr> struct HLS2RGB<uchar, scn, dcn, bidx, hr>$/;"	s	namespace:cv::cudev::color_cvt_detail
HLS2RGBConvert	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx, int hr, typename T> static __device__ void HLS2RGBConvert(const T& src, float* dst)$/;"	f	namespace:cv::cuda::device::color_detail
HLS2RGBConvert	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx, int hr, typename T> static __device__ void HLS2RGBConvert(const T& src, uchar* dst)$/;"	f	namespace:cv::cuda::device::color_detail
HLS2RGBConvert	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx, int hr> static __device__ uint HLS2RGBConvert(uint src)$/;"	f	namespace:cv::cuda::device::color_detail
HOG	opencv2/cudaobjdetect.hpp	/^class CV_EXPORTS HOG : public Algorithm$/;"	c	namespace:cv::cuda
HOGDescriptor	opencv2/objdetect.hpp	/^    CV_WRAP HOGDescriptor() : winSize(64,128), blockSize(16,16), blockStride(8,8),$/;"	f	struct:cv::HOGDescriptor
HOGDescriptor	opencv2/objdetect.hpp	/^    CV_WRAP HOGDescriptor(Size _winSize, Size _blockSize, Size _blockStride,$/;"	f	struct:cv::HOGDescriptor
HOGDescriptor	opencv2/objdetect.hpp	/^    CV_WRAP HOGDescriptor(const String& filename)$/;"	f	struct:cv::HOGDescriptor
HOGDescriptor	opencv2/objdetect.hpp	/^    HOGDescriptor(const HOGDescriptor& d)$/;"	f	struct:cv::HOGDescriptor
HOGDescriptor	opencv2/objdetect.hpp	/^struct CV_EXPORTS_W HOGDescriptor$/;"	s	namespace:cv
HOST_COPY_OBSOLETE	opencv2/core/mat.hpp	/^    enum { COPY_ON_MAP=1, HOST_COPY_OBSOLETE=2,$/;"	e	enum:cv::UMatData::__anon275
HOUGH_GRADIENT	opencv2/imgproc.hpp	/^    HOUGH_GRADIENT      = 3 \/\/!< basically *21HT*, described in @cite Yuen90$/;"	e	enum:cv::HoughModes
HOUGH_MULTI_SCALE	opencv2/imgproc.hpp	/^    HOUGH_MULTI_SCALE   = 2,$/;"	e	enum:cv::HoughModes
HOUGH_PROBABILISTIC	opencv2/imgproc.hpp	/^    HOUGH_PROBABILISTIC = 1,$/;"	e	enum:cv::HoughModes
HOUGH_STANDARD	opencv2/imgproc.hpp	/^    HOUGH_STANDARD      = 0,$/;"	e	enum:cv::HoughModes
HSV2RGB	opencv2/core/cuda/detail/color_detail.hpp	/^            __host__ __device__ __forceinline__ HSV2RGB() {}$/;"	f	struct:cv::cuda::device::color_detail::HSV2RGB
HSV2RGB	opencv2/core/cuda/detail/color_detail.hpp	/^            __host__ __device__ __forceinline__ HSV2RGB(const HSV2RGB&) {}$/;"	f	struct:cv::cuda::device::color_detail::HSV2RGB
HSV2RGB	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx, int hr> struct HSV2RGB<uchar, 4, 4, bidx, hr> : unary_function<uint, uint>$/;"	s	namespace:cv::cuda::device::color_detail
HSV2RGB	opencv2/core/cuda/detail/color_detail.hpp	/^        template <typename T, int scn, int dcn, int bidx, int hr> struct HSV2RGB$/;"	s	namespace:cv::cuda::device::color_detail
HSV2RGB	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <int scn, int dcn, int bidx, int hr> struct HSV2RGB<float, scn, dcn, bidx, hr>$/;"	s	namespace:cv::cudev::color_cvt_detail
HSV2RGB	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <int scn, int dcn, int bidx, int hr> struct HSV2RGB<uchar, scn, dcn, bidx, hr>$/;"	s	namespace:cv::cudev::color_cvt_detail
HSV2RGBConvert	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx, int HR, typename T> static __device__ void HSV2RGBConvert(const T& src, uchar* dst)$/;"	f	namespace:cv::cuda::device::color_detail
HSV2RGBConvert	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx, int hr, typename T> static __device__ void HSV2RGBConvert(const T& src, float* dst)$/;"	f	namespace:cv::cuda::device::color_detail
HSV2RGBConvert	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx, int hr> static __device__ uint HSV2RGBConvert(uint src)$/;"	f	namespace:cv::cuda::device::color_detail
HaarClassifierCascadeDescriptor	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^struct HaarClassifierCascadeDescriptor$/;"	s
HaarClassifierNode128	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^struct HaarClassifierNode128$/;"	s
HaarClassifierNodeDescriptor32	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^struct HaarClassifierNodeDescriptor32$/;"	s
HaarFeature64	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^struct HaarFeature64$/;"	s
HaarFeature64_CreateCheck_MaxRectField	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	82;"	d
HaarFeatureDescriptor32	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^struct HaarFeatureDescriptor32$/;"	s
HaarFeatureDescriptor32_CreateCheck_MaxFeatureOffset	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	125;"	d
HaarFeatureDescriptor32_CreateCheck_MaxNumFeatures	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	123;"	d
HaarFeatureDescriptor32_Interpret_MaskFlagLeftNodeLeaf	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	121;"	d
HaarFeatureDescriptor32_Interpret_MaskFlagRightNodeLeaf	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	122;"	d
HaarFeatureDescriptor32_Interpret_MaskFlagTilted	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	120;"	d
HaarFeatureDescriptor32_NumFeatures_Shift	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	124;"	d
HaarStage64	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^struct HaarStage64$/;"	s
HaarStage64_Interpret_MaskRootNodeOffset	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	270;"	d
HaarStage64_Interpret_MaskRootNodes	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	269;"	d
HaarStage64_Interpret_ShiftRootNodeOffset	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	271;"	d
Hamming	opencv2/core/base.hpp	/^struct CV_EXPORTS Hamming$/;"	s	namespace:cv
Hamming	opencv2/flann/dist.h	/^struct Hamming$/;"	s	namespace:cvflann
Hamming2	opencv2/flann/dist.h	/^struct Hamming2$/;"	s	namespace:cvflann
HammingDist	opencv2/core/cuda/vec_distance.hpp	/^        __device__ __forceinline__ HammingDist() : mySum(0) {}$/;"	f	struct:cv::cuda::device::HammingDist
HammingDist	opencv2/core/cuda/vec_distance.hpp	/^    struct HammingDist$/;"	s	namespace:cv::cuda::device
HammingLUT	opencv2/core/base.hpp	/^typedef Hamming HammingLUT;$/;"	t	namespace:cv
HammingLUT	opencv2/flann/dist.h	/^struct HammingLUT$/;"	s	namespace:cvflann
HausdorffDistanceExtractor	opencv2/shape/shape_distance.hpp	/^class CV_EXPORTS_W HausdorffDistanceExtractor : public ShapeDistanceExtractor$/;"	c	namespace:cv
Hdr	opencv2/core/mat.hpp	/^    struct CV_EXPORTS Hdr$/;"	s	class:cv::SparseMat
HeaderIsNull	opencv2/core/base.hpp	/^    HeaderIsNull=               -9,  \/\/!< image header is NULL$/;"	e	enum:cv::Error::Code
Heap	opencv2/flann/heap.h	/^    Heap(int sz)$/;"	f	class:cvflann::Heap
Heap	opencv2/flann/heap.h	/^class Heap$/;"	c	namespace:cvflann
Height	opencv2/core/wimage.hpp	/^    int Height() const {return image_->height; }$/;"	f	class:cv::WImage
HellingerDistance	opencv2/flann/dist.h	/^struct HellingerDistance$/;"	s	namespace:cvflann
HersheyFonts	opencv2/core.hpp	/^enum HersheyFonts {$/;"	g	namespace:cv
HierarchicalClusteringIndex	opencv2/flann/hierarchical_clustering_index.h	/^    HierarchicalClusteringIndex(const Matrix<ElementType>& inputData, const IndexParams& index_params = HierarchicalClusteringIndexParams(),$/;"	f	class:cvflann::HierarchicalClusteringIndex
HierarchicalClusteringIndex	opencv2/flann/hierarchical_clustering_index.h	/^class HierarchicalClusteringIndex : public NNIndex<Distance>$/;"	c	namespace:cvflann
HierarchicalClusteringIndexParams	opencv2/flann/hierarchical_clustering_index.h	/^    HierarchicalClusteringIndexParams(int branching = 32,$/;"	f	struct:cvflann::HierarchicalClusteringIndexParams
HierarchicalClusteringIndexParams	opencv2/flann/hierarchical_clustering_index.h	/^struct HierarchicalClusteringIndexParams : public IndexParams$/;"	s	namespace:cvflann
HierarchicalClusteringIndexParams	opencv2/flann/miniflann.hpp	/^struct CV_EXPORTS HierarchicalClusteringIndexParams : public IndexParams$/;"	s	namespace:cv::flann
HistCompMethods	opencv2/imgproc.hpp	/^enum HistCompMethods {$/;"	g	namespace:cv
HistIntersectionDistance	opencv2/flann/dist.h	/^struct HistIntersectionDistance$/;"	s	namespace:cvflann
HistogramBody	opencv2/cudev/expr/reduction.hpp	/^template <int BIN_COUNT, class SrcPtr> struct HistogramBody$/;"	s	namespace:cv::cudev
HistogramCostExtractor	opencv2/shape/hist_cost.hpp	/^class CV_EXPORTS_W HistogramCostExtractor : public Algorithm$/;"	c	namespace:cv
HomographyBasedEstimator	opencv2/stitching/detail/motion_estimators.hpp	/^    HomographyBasedEstimator(bool is_focals_estimated = false)$/;"	f	class:cv::detail::HomographyBasedEstimator
HomographyBasedEstimator	opencv2/stitching/detail/motion_estimators.hpp	/^class CV_EXPORTS HomographyBasedEstimator : public Estimator$/;"	c	namespace:cv::detail
HostMem	opencv2/core/base.hpp	/^    class CV_EXPORTS HostMem;$/;"	m	namespace:cv::cuda	typeref:class:cv::cuda::CV_EXPORTS
HostMem	opencv2/core/cuda.hpp	/^class CV_EXPORTS HostMem$/;"	c	namespace:cv::cuda
HostMem	opencv2/core/cuda.inl.hpp	/^HostMem::HostMem(AllocType alloc_type_)$/;"	f	class:cv::cuda::HostMem
HostMem	opencv2/core/cuda.inl.hpp	/^HostMem::HostMem(InputArray arr, AllocType alloc_type_)$/;"	f	class:cv::cuda::HostMem
HostMem	opencv2/core/cuda.inl.hpp	/^HostMem::HostMem(Size size_, int type_, AllocType alloc_type_)$/;"	f	class:cv::cuda::HostMem
HostMem	opencv2/core/cuda.inl.hpp	/^HostMem::HostMem(const HostMem& m)$/;"	f	class:cv::cuda::HostMem
HostMem	opencv2/core/cuda.inl.hpp	/^HostMem::HostMem(int rows_, int cols_, int type_, AllocType alloc_type_)$/;"	f	class:cv::cuda::HostMem
HoughCirclesDetector	opencv2/cudaimgproc.hpp	/^class CV_EXPORTS HoughCirclesDetector : public Algorithm$/;"	c	namespace:cv::cuda
HoughLinesDetector	opencv2/cudaimgproc.hpp	/^class CV_EXPORTS HoughLinesDetector : public Algorithm$/;"	c	namespace:cv::cuda
HoughModes	opencv2/imgproc.hpp	/^enum HoughModes {$/;"	g	namespace:cv
HoughSegmentDetector	opencv2/cudaimgproc.hpp	/^class CV_EXPORTS HoughSegmentDetector : public Algorithm$/;"	c	namespace:cv::cuda
ID	opencv2/core/types_c.h	/^    int  ID;                \/**< version (=0)*\/$/;"	m	struct:_IplImage
IDENTITY	opencv2/ml.hpp	/^        IDENTITY = 0,$/;"	e	enum:cv::ml::ANN_MLP::ActivationFunctions
IDR_Period	opencv2/cudacodec.hpp	/^    int IDR_Period;      \/\/!< NVVE_IDR_PERIOD,$/;"	m	struct:cv::cudacodec::EncoderParams
IDenseOptFlowEstimator	opencv2/videostab/optical_flow.hpp	/^class CV_EXPORTS IDenseOptFlowEstimator$/;"	c	namespace:cv::videostab
IDetector	opencv2/objdetect/detection_based_tracker.hpp	/^                IDetector():$/;"	f	class:cv::DetectionBasedTracker::IDetector
IDetector	opencv2/objdetect/detection_based_tracker.hpp	/^        class IDetector$/;"	c	class:cv::DetectionBasedTracker
IFRAME	opencv2/cudacodec.hpp	/^        IFRAME = 1,$/;"	e	enum:cv::cudacodec::EncoderCallBack::PicType
IFrameSource	opencv2/videostab/frame_source.hpp	/^class CV_EXPORTS IFrameSource$/;"	c	namespace:cv::videostab
ILog	opencv2/videostab/log.hpp	/^class CV_EXPORTS ILog$/;"	c	namespace:cv::videostab
IMPL	opencv2/core/utility.hpp	/^enum IMPL$/;"	g	namespace:cv::instr
IMPL_IPP	opencv2/core/utility.hpp	/^    IMPL_IPP,$/;"	e	enum:cv::instr::IMPL
IMPL_OPENCL	opencv2/core/utility.hpp	/^    IMPL_OPENCL,$/;"	e	enum:cv::instr::IMPL
IMPL_PLAIN	opencv2/core/utility.hpp	/^    IMPL_PLAIN = 0,$/;"	e	enum:cv::instr::IMPL
IMREAD_ANYCOLOR	opencv2/imgcodecs.hpp	/^       IMREAD_ANYCOLOR             = 4,  \/\/!< If set, the image is read in any possible color format.$/;"	e	enum:cv::ImreadModes
IMREAD_ANYDEPTH	opencv2/imgcodecs.hpp	/^       IMREAD_ANYDEPTH             = 2,  \/\/!< If set, return 16-bit\/32-bit image when the input has the corresponding depth, otherwise convert it to 8-bit.$/;"	e	enum:cv::ImreadModes
IMREAD_COLOR	opencv2/imgcodecs.hpp	/^       IMREAD_COLOR                = 1,  \/\/!< If set, always convert image to the 3 channel BGR color image.$/;"	e	enum:cv::ImreadModes
IMREAD_GRAYSCALE	opencv2/imgcodecs.hpp	/^       IMREAD_GRAYSCALE            = 0,  \/\/!< If set, always convert image to the single channel grayscale image.$/;"	e	enum:cv::ImreadModes
IMREAD_IGNORE_ORIENTATION	opencv2/imgcodecs.hpp	/^       IMREAD_IGNORE_ORIENTATION   = 128 \/\/!< If set, do not rotate the image according to EXIF's orientation flag.$/;"	e	enum:cv::ImreadModes
IMREAD_LOAD_GDAL	opencv2/imgcodecs.hpp	/^       IMREAD_LOAD_GDAL            = 8,  \/\/!< If set, use the gdal driver for loading the image.$/;"	e	enum:cv::ImreadModes
IMREAD_REDUCED_COLOR_2	opencv2/imgcodecs.hpp	/^       IMREAD_REDUCED_COLOR_2      = 17, \/\/!< If set, always convert image to the 3 channel BGR color image and the image size reduced 1\/2.$/;"	e	enum:cv::ImreadModes
IMREAD_REDUCED_COLOR_4	opencv2/imgcodecs.hpp	/^       IMREAD_REDUCED_COLOR_4      = 33, \/\/!< If set, always convert image to the 3 channel BGR color image and the image size reduced 1\/4.$/;"	e	enum:cv::ImreadModes
IMREAD_REDUCED_COLOR_8	opencv2/imgcodecs.hpp	/^       IMREAD_REDUCED_COLOR_8      = 65, \/\/!< If set, always convert image to the 3 channel BGR color image and the image size reduced 1\/8.$/;"	e	enum:cv::ImreadModes
IMREAD_REDUCED_GRAYSCALE_2	opencv2/imgcodecs.hpp	/^       IMREAD_REDUCED_GRAYSCALE_2  = 16, \/\/!< If set, always convert image to the single channel grayscale image and the image size reduced 1\/2.$/;"	e	enum:cv::ImreadModes
IMREAD_REDUCED_GRAYSCALE_4	opencv2/imgcodecs.hpp	/^       IMREAD_REDUCED_GRAYSCALE_4  = 32, \/\/!< If set, always convert image to the single channel grayscale image and the image size reduced 1\/4.$/;"	e	enum:cv::ImreadModes
IMREAD_REDUCED_GRAYSCALE_8	opencv2/imgcodecs.hpp	/^       IMREAD_REDUCED_GRAYSCALE_8  = 64, \/\/!< If set, always convert image to the single channel grayscale image and the image size reduced 1\/8.$/;"	e	enum:cv::ImreadModes
IMREAD_UNCHANGED	opencv2/imgcodecs.hpp	/^       IMREAD_UNCHANGED            = -1, \/\/!< If set, return the loaded image as is (with alpha channel, otherwise it gets cropped).$/;"	e	enum:cv::ImreadModes
IMWRITE_JPEG_CHROMA_QUALITY	opencv2/imgcodecs.hpp	/^       IMWRITE_JPEG_CHROMA_QUALITY = 6,  \/\/!< Separate chroma quality level, 0 - 100, default is 0 - don't use.$/;"	e	enum:cv::ImwriteFlags
IMWRITE_JPEG_LUMA_QUALITY	opencv2/imgcodecs.hpp	/^       IMWRITE_JPEG_LUMA_QUALITY   = 5,  \/\/!< Separate luma quality level, 0 - 100, default is 0 - don't use.$/;"	e	enum:cv::ImwriteFlags
IMWRITE_JPEG_OPTIMIZE	opencv2/imgcodecs.hpp	/^       IMWRITE_JPEG_OPTIMIZE       = 3,  \/\/!< Enable JPEG features, 0 or 1, default is False.$/;"	e	enum:cv::ImwriteFlags
IMWRITE_JPEG_PROGRESSIVE	opencv2/imgcodecs.hpp	/^       IMWRITE_JPEG_PROGRESSIVE    = 2,  \/\/!< Enable JPEG features, 0 or 1, default is False.$/;"	e	enum:cv::ImwriteFlags
IMWRITE_JPEG_QUALITY	opencv2/imgcodecs.hpp	/^       IMWRITE_JPEG_QUALITY        = 1,  \/\/!< For JPEG, it can be a quality from 0 to 100 (the higher is the better). Default value is 95.$/;"	e	enum:cv::ImwriteFlags
IMWRITE_JPEG_RST_INTERVAL	opencv2/imgcodecs.hpp	/^       IMWRITE_JPEG_RST_INTERVAL   = 4,  \/\/!< JPEG restart interval, 0 - 65535, default is 0 - no restart.$/;"	e	enum:cv::ImwriteFlags
IMWRITE_PAM_FORMAT_BLACKANDWHITE	opencv2/imgcodecs.hpp	/^       IMWRITE_PAM_FORMAT_BLACKANDWHITE = 1,$/;"	e	enum:cv::ImwritePAMFlags
IMWRITE_PAM_FORMAT_GRAYSCALE	opencv2/imgcodecs.hpp	/^       IMWRITE_PAM_FORMAT_GRAYSCALE = 2,$/;"	e	enum:cv::ImwritePAMFlags
IMWRITE_PAM_FORMAT_GRAYSCALE_ALPHA	opencv2/imgcodecs.hpp	/^       IMWRITE_PAM_FORMAT_GRAYSCALE_ALPHA = 3,$/;"	e	enum:cv::ImwritePAMFlags
IMWRITE_PAM_FORMAT_NULL	opencv2/imgcodecs.hpp	/^       IMWRITE_PAM_FORMAT_NULL = 0,$/;"	e	enum:cv::ImwritePAMFlags
IMWRITE_PAM_FORMAT_RGB	opencv2/imgcodecs.hpp	/^       IMWRITE_PAM_FORMAT_RGB = 4,$/;"	e	enum:cv::ImwritePAMFlags
IMWRITE_PAM_FORMAT_RGB_ALPHA	opencv2/imgcodecs.hpp	/^       IMWRITE_PAM_FORMAT_RGB_ALPHA = 5,$/;"	e	enum:cv::ImwritePAMFlags
IMWRITE_PAM_TUPLETYPE	opencv2/imgcodecs.hpp	/^       IMWRITE_PAM_TUPLETYPE       = 128,\/\/!< For PAM, sets the TUPLETYPE field to the corresponding string value that is defined for the format$/;"	e	enum:cv::ImwriteFlags
IMWRITE_PNG_BILEVEL	opencv2/imgcodecs.hpp	/^       IMWRITE_PNG_BILEVEL         = 18, \/\/!< Binary level PNG, 0 or 1, default is 0.$/;"	e	enum:cv::ImwriteFlags
IMWRITE_PNG_COMPRESSION	opencv2/imgcodecs.hpp	/^       IMWRITE_PNG_COMPRESSION     = 16, \/\/!< For PNG, it can be the compression level from 0 to 9. A higher value means a smaller size and longer compression time. Default value is 3. Also strategy is changed to IMWRITE_PNG_STRATEGY_DEFAULT (Z_DEFAULT_STRATEGY).$/;"	e	enum:cv::ImwriteFlags
IMWRITE_PNG_STRATEGY	opencv2/imgcodecs.hpp	/^       IMWRITE_PNG_STRATEGY        = 17, \/\/!< One of cv::ImwritePNGFlags, default is IMWRITE_PNG_STRATEGY_DEFAULT.$/;"	e	enum:cv::ImwriteFlags
IMWRITE_PNG_STRATEGY_DEFAULT	opencv2/imgcodecs.hpp	/^       IMWRITE_PNG_STRATEGY_DEFAULT      = 0, \/\/!< Use this value for normal data.$/;"	e	enum:cv::ImwritePNGFlags
IMWRITE_PNG_STRATEGY_FILTERED	opencv2/imgcodecs.hpp	/^       IMWRITE_PNG_STRATEGY_FILTERED     = 1, \/\/!< Use this value for data produced by a filter (or predictor).Filtered data consists mostly of small values with a somewhat random distribution. In this case, the compression algorithm is tuned to compress them better.$/;"	e	enum:cv::ImwritePNGFlags
IMWRITE_PNG_STRATEGY_FIXED	opencv2/imgcodecs.hpp	/^       IMWRITE_PNG_STRATEGY_FIXED        = 4  \/\/!< Using this value prevents the use of dynamic Huffman codes, allowing for a simpler decoder for special applications.$/;"	e	enum:cv::ImwritePNGFlags
IMWRITE_PNG_STRATEGY_HUFFMAN_ONLY	opencv2/imgcodecs.hpp	/^       IMWRITE_PNG_STRATEGY_HUFFMAN_ONLY = 2, \/\/!< Use this value to force Huffman encoding only (no string match).$/;"	e	enum:cv::ImwritePNGFlags
IMWRITE_PNG_STRATEGY_RLE	opencv2/imgcodecs.hpp	/^       IMWRITE_PNG_STRATEGY_RLE          = 3, \/\/!< Use this value to limit match distances to one (run-length encoding).$/;"	e	enum:cv::ImwritePNGFlags
IMWRITE_PXM_BINARY	opencv2/imgcodecs.hpp	/^       IMWRITE_PXM_BINARY          = 32, \/\/!< For PPM, PGM, or PBM, it can be a binary format flag, 0 or 1. Default value is 1.$/;"	e	enum:cv::ImwriteFlags
IMWRITE_WEBP_QUALITY	opencv2/imgcodecs.hpp	/^       IMWRITE_WEBP_QUALITY        = 64, \/\/!< For WEBP, it can be a quality from 1 to 100 (the higher is the better). By default (without any parameter) and for quality above 100 the lossless compression is used.$/;"	e	enum:cv::ImwriteFlags
IMotionStabilizer	opencv2/videostab/motion_stabilizing.hpp	/^class CV_EXPORTS IMotionStabilizer$/;"	c	namespace:cv::videostab
INCLUSIVE	opencv2/core/cuda/scan.hpp	/^    enum ScanKind { EXCLUSIVE = 0,  INCLUSIVE = 1 };$/;"	e	enum:cv::cuda::device::ScanKind
INCVMemAllocator	opencv2/cudalegacy/NCV.hpp	/^class CV_EXPORTS INCVMemAllocator$/;"	c
INPAINT_NS	opencv2/photo.hpp	/^    INPAINT_NS    = 0, \/\/ Navier-Stokes algorithm$/;"	e	enum:cv::__anon116
INPAINT_TELEA	opencv2/photo.hpp	/^    INPAINT_TELEA = 1 \/\/ A. Telea algorithm$/;"	e	enum:cv::__anon116
INSIDE	opencv2/videostab/fast_marching.hpp	/^    enum { INSIDE = 0, BAND = 1, KNOWN = 255 };$/;"	e	enum:cv::videostab::FastMarchingMethod::__anon334
INSIDE_MAP	opencv2/core/persistence.hpp	/^        INSIDE_MAP     = 4$/;"	e	enum:cv::FileStorage::__anon313
INT	opencv2/core.hpp	/^    enum { INT=0, BOOLEAN=1, REAL=2, STRING=3, MAT=4, MAT_VECTOR=5, ALGORITHM=6, FLOAT=7,$/;"	e	enum:cv::Param::__anon344
INT	opencv2/core/persistence.hpp	/^        INT       = 1, \/\/!< an integer$/;"	e	enum:cv::FileNode::Type
INTER	opencv2/ml.hpp	/^        INTER=5$/;"	e	enum:cv::ml::SVM::KernelTypes
INTERPROCESS	opencv2/core/cuda.hpp	/^        INTERPROCESS   = 0x04   \/**< Event is suitable for interprocess use. DisableTiming must be set *\/$/;"	e	enum:cv::cuda::Event::CreateFlags
INTERS	opencv2/stitching/detail/seam_finders.hpp	/^        FIRST = 1, SECOND = 2, INTERS = 4,$/;"	e	enum:cv::detail::DpSeamFinder::ComponentState
INTERSECT_FULL	opencv2/imgproc.hpp	/^    INTERSECT_FULL  = 2 \/\/!< One of the rectangle is fully enclosed in the other$/;"	e	enum:cv::RectanglesIntersectTypes
INTERSECT_NONE	opencv2/imgproc.hpp	/^    INTERSECT_NONE = 0, \/\/!< No intersection$/;"	e	enum:cv::RectanglesIntersectTypes
INTERSECT_PARTIAL	opencv2/imgproc.hpp	/^    INTERSECT_PARTIAL  = 1, \/\/!< There is a partial intersection$/;"	e	enum:cv::RectanglesIntersectTypes
INTERS_FIRST	opencv2/stitching/detail/seam_finders.hpp	/^        INTERS_FIRST = INTERS | FIRST,$/;"	e	enum:cv::detail::DpSeamFinder::ComponentState
INTERS_SECOND	opencv2/stitching/detail/seam_finders.hpp	/^        INTERS_SECOND = INTERS | SECOND$/;"	e	enum:cv::detail::DpSeamFinder::ComponentState
INTER_AREA	opencv2/imgproc.hpp	/^    INTER_AREA           = 3,$/;"	e	enum:cv::InterpolationFlags
INTER_BITS	opencv2/imgproc.hpp	/^       INTER_BITS      = 5,$/;"	e	enum:cv::InterpolationMasks
INTER_BITS2	opencv2/imgproc.hpp	/^       INTER_BITS2     = INTER_BITS * 2,$/;"	e	enum:cv::InterpolationMasks
INTER_CUBIC	opencv2/imgproc.hpp	/^    INTER_CUBIC          = 2,$/;"	e	enum:cv::InterpolationFlags
INTER_LANCZOS4	opencv2/imgproc.hpp	/^    INTER_LANCZOS4       = 4,$/;"	e	enum:cv::InterpolationFlags
INTER_LINEAR	opencv2/imgproc.hpp	/^    INTER_LINEAR         = 1,$/;"	e	enum:cv::InterpolationFlags
INTER_MAX	opencv2/imgproc.hpp	/^    INTER_MAX            = 7,$/;"	e	enum:cv::InterpolationFlags
INTER_NEAREST	opencv2/imgproc.hpp	/^    INTER_NEAREST        = 0,$/;"	e	enum:cv::InterpolationFlags
INTER_TAB_SIZE	opencv2/imgproc.hpp	/^       INTER_TAB_SIZE  = 1 << INTER_BITS,$/;"	e	enum:cv::InterpolationMasks
INTER_TAB_SIZE2	opencv2/imgproc.hpp	/^       INTER_TAB_SIZE2 = INTER_TAB_SIZE * INTER_TAB_SIZE$/;"	e	enum:cv::InterpolationMasks
IOutlierRejector	opencv2/videostab/outlier_rejection.hpp	/^class CV_EXPORTS IOutlierRejector$/;"	c	namespace:cv::videostab
IPL2CV_DEPTH	opencv2/core/types_c.h	500;"	d
IPL_ALIGN_16BYTES	opencv2/core/types_c.h	277;"	d
IPL_ALIGN_32BYTES	opencv2/core/types_c.h	278;"	d
IPL_ALIGN_4BYTES	opencv2/core/types_c.h	275;"	d
IPL_ALIGN_8BYTES	opencv2/core/types_c.h	276;"	d
IPL_ALIGN_DWORD	opencv2/core/types_c.h	280;"	d
IPL_ALIGN_QWORD	opencv2/core/types_c.h	281;"	d
IPL_BORDER_CONSTANT	opencv2/core/types_c.h	283;"	d
IPL_BORDER_REFLECT	opencv2/core/types_c.h	285;"	d
IPL_BORDER_REFLECT_101	opencv2/core/types_c.h	380;"	d
IPL_BORDER_REPLICATE	opencv2/core/types_c.h	284;"	d
IPL_BORDER_TRANSPARENT	opencv2/core/types_c.h	381;"	d
IPL_BORDER_WRAP	opencv2/core/types_c.h	286;"	d
IPL_DATA_ORDER_PIXEL	opencv2/core/types_c.h	269;"	d
IPL_DATA_ORDER_PLANE	opencv2/core/types_c.h	270;"	d
IPL_DEPTH_16S	opencv2/core/types_c.h	266;"	d
IPL_DEPTH_16U	opencv2/core/types_c.h	262;"	d
IPL_DEPTH_1U	opencv2/core/types_c.h	260;"	d
IPL_DEPTH_32F	opencv2/core/types_c.h	263;"	d
IPL_DEPTH_32S	opencv2/core/types_c.h	267;"	d
IPL_DEPTH_64F	opencv2/core/types_c.h	394;"	d
IPL_DEPTH_8S	opencv2/core/types_c.h	265;"	d
IPL_DEPTH_8U	opencv2/core/types_c.h	261;"	d
IPL_DEPTH_SIGN	opencv2/core/types_c.h	258;"	d
IPL_IMAGE_DATA	opencv2/core/types_c.h	374;"	d
IPL_IMAGE_HEADER	opencv2/core/types_c.h	373;"	d
IPL_IMAGE_MAGIC_VAL	opencv2/core/types_c.h	383;"	d
IPL_IMAGE_ROI	opencv2/core/types_c.h	375;"	d
IPL_ORIGIN_BL	opencv2/core/types_c.h	273;"	d
IPL_ORIGIN_TL	opencv2/core/types_c.h	272;"	d
IPPI_CALL	opencv2/core/private.hpp	384;"	d
IPP_DISABLE_BLOCK	opencv2/core/private.hpp	209;"	d
IPP_INITIALIZER	opencv2/core/private.hpp	288;"	d
IPP_INITIALIZER	opencv2/core/private.hpp	296;"	d
IPP_INITIALIZER	opencv2/core/private.hpp	301;"	d
IPP_INITIALIZER	opencv2/core/private.hpp	319;"	d
IPP_INITIALIZER_AUTO	opencv2/core/private.hpp	308;"	d
IPP_INITIALIZER_AUTO	opencv2/core/private.hpp	316;"	d
IPP_INITIALIZER_AUTO	opencv2/core/private.hpp	320;"	d
IPP_VERSION_UPDATE	opencv2/core/private.hpp	203;"	d
IPP_VERSION_X100	opencv2/core/private.hpp	206;"	d
ISparseOptFlowEstimator	opencv2/videostab/optical_flow.hpp	/^class CV_EXPORTS ISparseOptFlowEstimator$/;"	c	namespace:cv::videostab
Identity	opencv2/core/affine.hpp	/^cv::Affine3<T> cv::Affine3<T>::Identity()$/;"	f	class:cv::Affine3
Image2D	opencv2/core/ocl.hpp	/^class CV_EXPORTS Image2D$/;"	c	namespace:cv::ocl
Image2D	opencv2/core/ocl.hpp	/^class CV_EXPORTS Image2D;$/;"	m	namespace:cv::ocl	typeref:class:cv::ocl::CV_EXPORTS
ImageData	opencv2/core/wimage.hpp	/^    T* ImageData() { return reinterpret_cast<T*>(image_->imageData); }$/;"	f	class:cv::WImage
ImageData	opencv2/core/wimage.hpp	/^    const T* ImageData() const {$/;"	f	class:cv::WImage
ImageFeatures	opencv2/stitching/detail/matchers.hpp	/^struct CV_EXPORTS ImageFeatures$/;"	s	namespace:cv::detail
ImageMotionEstimatorBase	opencv2/videostab/global_motion.hpp	/^    ImageMotionEstimatorBase(MotionModel model) { setMotionModel(model); }$/;"	f	class:cv::videostab::ImageMotionEstimatorBase
ImageMotionEstimatorBase	opencv2/videostab/global_motion.hpp	/^class CV_EXPORTS ImageMotionEstimatorBase$/;"	c	namespace:cv::videostab
ImagePairLess	opencv2/stitching/detail/seam_finders.hpp	/^        ImagePairLess(const std::vector<Mat> &images, const std::vector<Point> &corners)$/;"	f	class:cv::detail::DpSeamFinder::ImagePairLess
ImagePairLess	opencv2/stitching/detail/seam_finders.hpp	/^    class ImagePairLess$/;"	c	class:cv::detail::DpSeamFinder
ImagePyramid	opencv2/cudalegacy.hpp	/^class CV_EXPORTS ImagePyramid : public Algorithm$/;"	c	namespace:cv::cuda
ImreadModes	opencv2/imgcodecs.hpp	/^enum ImreadModes {$/;"	g	namespace:cv
ImwriteFlags	opencv2/imgcodecs.hpp	/^enum ImwriteFlags {$/;"	g	namespace:cv
ImwritePAMFlags	opencv2/imgcodecs.hpp	/^enum ImwritePAMFlags {$/;"	g	namespace:cv
ImwritePNGFlags	opencv2/imgcodecs.hpp	/^enum ImwritePNGFlags {$/;"	g	namespace:cv
Index	opencv2/flann/flann_base.hpp	/^    Index(const Matrix<ElementType>& features, const IndexParams& params, Distance distance = Distance() )$/;"	f	class:cvflann::Index
Index	opencv2/flann/flann_base.hpp	/^class Index : public NNIndex<Distance>$/;"	c	namespace:cvflann
Index	opencv2/flann/miniflann.hpp	/^class CV_EXPORTS_W Index$/;"	c	namespace:cv::flann
IndexHeader	opencv2/flann/saving.h	/^struct IndexHeader$/;"	s	namespace:cvflann
IndexParams	opencv2/flann/miniflann.hpp	/^struct CV_EXPORTS IndexParams$/;"	s	namespace:cv::flann
IndexParams	opencv2/flann/params.h	/^typedef std::map<cv::String, any> IndexParams;$/;"	t	namespace:cvflann
Index_	opencv2/flann.hpp	/^    FLANN_DEPRECATED Index_(const Mat& dataset, const ::cvflann::IndexParams& params)$/;"	f	class:cv::flann::Index_
Index_	opencv2/flann.hpp	/^class Index_$/;"	c	namespace:cv::flann
Init	cpp_src/ios_base.h	/^    class Init$/;"	c	class:std::ios_base
InnerParameters	opencv2/objdetect/detection_based_tracker.hpp	/^        struct InnerParameters$/;"	s	class:cv::DetectionBasedTracker
InpainterBase	opencv2/videostab/inpainting.hpp	/^    InpainterBase()$/;"	f	class:cv::videostab::InpainterBase
InpainterBase	opencv2/videostab/inpainting.hpp	/^class CV_EXPORTS InpainterBase$/;"	c	namespace:cv::videostab
InpaintingModes	opencv2/photo/photo_c.h	/^enum InpaintingModes$/;"	g
InpaintingPipeline	opencv2/videostab/inpainting.hpp	/^class CV_EXPORTS InpaintingPipeline : public InpainterBase$/;"	c	namespace:cv::videostab
InputArray	opencv2/core/mat.hpp	/^typedef const _InputArray& InputArray;$/;"	t	namespace:cv
InputArrayOfArrays	opencv2/core/mat.hpp	/^typedef InputArray InputArrayOfArrays;$/;"	t	namespace:cv
InputOutputArray	opencv2/core/mat.hpp	/^typedef const _InputOutputArray& InputOutputArray;$/;"	t	namespace:cv
InputOutputArrayOfArrays	opencv2/core/mat.hpp	/^typedef InputOutputArray InputOutputArrayOfArrays;$/;"	t	namespace:cv
InstrNode	opencv2/core/utility.hpp	/^typedef Node<NodeData> InstrNode;$/;"	t	namespace:cv::instr
InstrStruct	opencv2/core/private.hpp	/^    InstrStruct()$/;"	f	class:cv::instr::InstrStruct
InstrStruct	opencv2/core/private.hpp	/^class InstrStruct$/;"	c	namespace:cv::instr
InstrTLSStruct	opencv2/core/private.hpp	/^    InstrTLSStruct()$/;"	f	struct:cv::instr::InstrTLSStruct
InstrTLSStruct	opencv2/core/private.hpp	/^struct InstrTLSStruct$/;"	s	namespace:cv::instr
Int2Type	opencv2/cudev/util/type_traits.hpp	/^template <int A> struct Int2Type$/;"	s	namespace:cv::cudev
IntegerAreaFilter	opencv2/core/cuda/filters.hpp	/^        explicit __host__ __device__ __forceinline__ IntegerAreaFilter(const Ptr2D& src_, float scale_x_, float scale_y_)$/;"	f	struct:cv::cuda::device::IntegerAreaFilter
IntegerAreaFilter	opencv2/core/cuda/filters.hpp	/^    template <typename Ptr2D> struct IntegerAreaFilter$/;"	s	namespace:cv::cuda::device
IntegerAreaInterPtr	opencv2/cudev/ptr2d/interpolation.hpp	/^template <typename SrcPtr> struct IntegerAreaInterPtr$/;"	s	namespace:cv::cudev
IntegerAreaInterPtrSz	opencv2/cudev/ptr2d/interpolation.hpp	/^template <class SrcPtr> struct IntegerAreaInterPtrSz : IntegerAreaInterPtr<SrcPtr>$/;"	s	namespace:cv::cudev
IntegralBody	opencv2/cudev/expr/reduction.hpp	/^template <class SrcPtr> struct IntegralBody$/;"	s	namespace:cv::cudev
InterpolationFlags	opencv2/imgproc.hpp	/^enum InterpolationFlags{$/;"	g	namespace:cv
InterpolationMasks	opencv2/imgproc.hpp	/^enum InterpolationMasks {$/;"	g	namespace:cv
Interval	opencv2/flann/kdtree_single_index.h	/^    struct Interval$/;"	s	class:cvflann::KDTreeSingleIndex
IntrumentationRegion	opencv2/core/private.hpp	/^class CV_EXPORTS IntrumentationRegion$/;"	c	namespace:cv::instr
Ipl	opencv2/core/wimage.hpp	/^    IplImage* Ipl() {return image_; }$/;"	f	class:cv::WImage
Ipl	opencv2/core/wimage.hpp	/^    const IplImage* Ipl() const {return image_; }$/;"	f	class:cv::WImage
IplConvKernel	opencv2/core/types_c.h	/^IplConvKernel;$/;"	t	typeref:struct:_IplConvKernel
IplConvKernelFP	opencv2/core/types_c.h	/^IplConvKernelFP;$/;"	t	typeref:struct:_IplConvKernelFP
IplImage	opencv2/core/types_c.h	/^IplImage;$/;"	t	typeref:struct:_IplImage
IplROI	opencv2/core/types_c.h	/^IplROI;$/;"	t	typeref:struct:_IplROI
IplTileInfo	opencv2/core/types_c.h	/^typedef struct _IplTileInfo IplTileInfo;$/;"	t	typeref:struct:_IplTileInfo
IppAutoBuffer	opencv2/core/private.hpp	/^    IppAutoBuffer() { m_pBuffer = NULL; }$/;"	f	class:IppAutoBuffer
IppAutoBuffer	opencv2/core/private.hpp	/^    IppAutoBuffer(IppAutoBuffer &) {}$/;"	f	class:IppAutoBuffer
IppAutoBuffer	opencv2/core/private.hpp	/^    IppAutoBuffer(int size) { Alloc(size); }$/;"	f	class:IppAutoBuffer
IppAutoBuffer	opencv2/core/private.hpp	/^class IppAutoBuffer$/;"	c
IsBinaryFunction	opencv2/core/cuda/functional.hpp	/^    template <typename F> struct IsBinaryFunction$/;"	s	namespace:cv::cuda::device
IsBinaryFunction	opencv2/cudev/functional/functional.hpp	/^template <typename F> struct IsBinaryFunction$/;"	s	namespace:cv::cudev
IsFloat	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsFloat<double> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsFloat	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsFloat<float> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsFloat	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <typename T> struct IsFloat { enum {value = 0}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsFloat	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsFloat<double> { enum {value = 1}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsFloat	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsFloat<float> { enum {value = 1}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsFloat	opencv2/cudev/util/detail/type_traits.hpp	/^    template <typename T> struct IsFloat { enum {value = 0}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsIntegral	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsIntegral<bool> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsIntegral	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsIntegral<char> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsIntegral	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <typename T> struct IsIntegral { enum {value = IsSignedIntergral<T>::value || IsUnsignedIntegral<T>::value}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsIntegral	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsIntegral<bool> { enum {value = 1}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsIntegral	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsIntegral<char> { enum {value = 1}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsIntegral	opencv2/cudev/util/detail/type_traits.hpp	/^    template <typename T> struct IsIntegral { enum {value = IsSignedIntergral<T>::value || IsUnsignedIntegral<T>::value}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsNull	opencv2/core/wimage.hpp	/^    bool IsNull() const {return WImage<T>::image_ == NULL; }$/;"	f	class:cv::WImageBuffer
IsNull	opencv2/core/wimage.hpp	/^    bool IsNull() const {return WImage<T>::image_ == NULL; }$/;"	f	class:cv::WImageBufferC
IsPowerOf2	opencv2/core/cuda/detail/reduce.hpp	/^        template <unsigned int N> struct IsPowerOf2$/;"	s	namespace:cv::cuda::device::reduce_detail
IsPowerOf2	opencv2/core/cuda/detail/reduce_key_val.hpp	/^        template <unsigned int N> struct IsPowerOf2$/;"	s	namespace:cv::cuda::device::reduce_key_val_detail
IsPowerOf2	opencv2/cudev/util/type_traits.hpp	/^template <int N> struct IsPowerOf2$/;"	s	namespace:cv::cudev
IsSignedIntergral	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsSignedIntergral<char1> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsSignedIntergral	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsSignedIntergral<int1> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsSignedIntergral	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsSignedIntergral<int> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsSignedIntergral	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsSignedIntergral<schar> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsSignedIntergral	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsSignedIntergral<short1> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsSignedIntergral	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsSignedIntergral<short> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsSignedIntergral	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <typename T> struct IsSignedIntergral { enum {value = 0}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsSignedIntergral	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsSignedIntergral<int> { enum {value = 1}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsSignedIntergral	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsSignedIntergral<schar> { enum {value = 1}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsSignedIntergral	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsSignedIntergral<short> { enum {value = 1}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsSignedIntergral	opencv2/cudev/util/detail/type_traits.hpp	/^    template <typename T> struct IsSignedIntergral { enum {value = 0}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsSimpleParameter	opencv2/core/cuda/type_traits.hpp	/^    template <typename T> struct IsSimpleParameter$/;"	s	namespace:cv::cuda::device
IsSimpleParameter	opencv2/cudev/util/detail/type_traits.hpp	/^    template <typename T> struct IsSimpleParameter$/;"	s	namespace:cv::cudev::type_traits_detail
IsUnaryFunction	opencv2/core/cuda/functional.hpp	/^    template <typename F> struct IsUnaryFunction$/;"	s	namespace:cv::cuda::device
IsUnaryFunction	opencv2/cudev/functional/functional.hpp	/^template <typename F> struct IsUnaryFunction$/;"	s	namespace:cv::cudev
IsUnsignedIntegral	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsUnsignedIntegral<uchar1> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsUnsignedIntegral	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsUnsignedIntegral<uchar> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsUnsignedIntegral	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsUnsignedIntegral<uint1> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsUnsignedIntegral	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsUnsignedIntegral<uint> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsUnsignedIntegral	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsUnsignedIntegral<ushort1> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsUnsignedIntegral	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsUnsignedIntegral<ushort> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsUnsignedIntegral	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <typename T> struct IsUnsignedIntegral { enum {value = 0}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsUnsignedIntegral	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsUnsignedIntegral<uchar> { enum {value = 1}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsUnsignedIntegral	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsUnsignedIntegral<uint> { enum {value = 1}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsUnsignedIntegral	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsUnsignedIntegral<ushort> { enum {value = 1}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsUnsignedIntegral	opencv2/cudev/util/detail/type_traits.hpp	/^    template <typename T> struct IsUnsignedIntegral { enum {value = 0}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsVec	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<char1> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsVec	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<char2> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsVec	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<char3> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsVec	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<char4> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsVec	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<char8> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsVec	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<double1> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsVec	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<double2> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsVec	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<double3> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsVec	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<double4> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsVec	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<double8> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsVec	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<float1> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsVec	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<float2> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsVec	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<float3> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsVec	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<float4> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsVec	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<float8> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsVec	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<int1> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsVec	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<int2> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsVec	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<int3> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsVec	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<int4> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsVec	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<int8> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsVec	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<short1> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsVec	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<short2> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsVec	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<short3> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsVec	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<short4> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsVec	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<short8> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsVec	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<uchar1> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsVec	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<uchar2> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsVec	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<uchar3> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsVec	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<uchar4> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsVec	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<uchar8> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsVec	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<uint1> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsVec	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<uint2> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsVec	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<uint3> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsVec	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<uint4> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsVec	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<uint8> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsVec	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<ushort1> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsVec	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<ushort2> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsVec	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<ushort3> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsVec	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<ushort4> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsVec	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<ushort8> { enum {value = 1}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsVec	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <typename T> struct IsVec { enum {value = 0}; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
IsVec	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<char1> { enum {value = 1}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsVec	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<char2> { enum {value = 1}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsVec	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<char3> { enum {value = 1}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsVec	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<char4> { enum {value = 1}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsVec	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<double1> { enum {value = 1}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsVec	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<double2> { enum {value = 1}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsVec	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<double3> { enum {value = 1}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsVec	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<double4> { enum {value = 1}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsVec	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<float1> { enum {value = 1}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsVec	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<float2> { enum {value = 1}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsVec	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<float3> { enum {value = 1}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsVec	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<float4> { enum {value = 1}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsVec	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<int1> { enum {value = 1}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsVec	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<int2> { enum {value = 1}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsVec	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<int3> { enum {value = 1}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsVec	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<int4> { enum {value = 1}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsVec	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<short1> { enum {value = 1}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsVec	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<short2> { enum {value = 1}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsVec	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<short3> { enum {value = 1}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsVec	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<short4> { enum {value = 1}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsVec	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<uchar1> { enum {value = 1}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsVec	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<uchar2> { enum {value = 1}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsVec	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<uchar3> { enum {value = 1}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsVec	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<uchar4> { enum {value = 1}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsVec	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<uint1> { enum {value = 1}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsVec	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<uint2> { enum {value = 1}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsVec	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<uint3> { enum {value = 1}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsVec	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<uint4> { enum {value = 1}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsVec	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<ushort1> { enum {value = 1}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsVec	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<ushort2> { enum {value = 1}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsVec	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<ushort3> { enum {value = 1}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsVec	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<ushort4> { enum {value = 1}; };$/;"	s	namespace:cv::cudev::type_traits_detail
IsVec	opencv2/cudev/util/detail/type_traits.hpp	/^    template <typename T> struct IsVec { enum {value = 0}; };$/;"	s	namespace:cv::cudev::type_traits_detail
J	opencv2/calib3d/calib3d_c.h	/^    cv::Ptr<CvMat> J;$/;"	m	class:CvLevMarq
JPEG	opencv2/cudacodec.hpp	/^    JPEG,$/;"	e	enum:cv::cudacodec::Codec
JtErr	opencv2/calib3d/calib3d_c.h	/^    cv::Ptr<CvMat> JtErr;$/;"	m	class:CvLevMarq
JtJ	opencv2/calib3d/calib3d_c.h	/^    cv::Ptr<CvMat> JtJ;$/;"	m	class:CvLevMarq
JtJN	opencv2/calib3d/calib3d_c.h	/^    cv::Ptr<CvMat> JtJN;$/;"	m	class:CvLevMarq
JtJV	opencv2/calib3d/calib3d_c.h	/^    cv::Ptr<CvMat> JtJV;$/;"	m	class:CvLevMarq
JtJW	opencv2/calib3d/calib3d_c.h	/^    cv::Ptr<CvMat> JtJW;$/;"	m	class:CvLevMarq
KAZE	opencv2/features2d.hpp	/^class CV_EXPORTS_W KAZE : public Feature2D$/;"	c	namespace:cv
KDTREE	opencv2/flann/defines.h	/^    KDTREE = 1,$/;"	e	enum:cvflann::flann_algorithm_t
KDTREE	opencv2/ml.hpp	/^        KDTREE=2$/;"	e	enum:cv::ml::KNearest::Types
KDTREE_SINGLE	opencv2/flann/defines.h	/^    KDTREE_SINGLE = 4,$/;"	e	enum:cvflann::flann_algorithm_t
KDTreeIndex	opencv2/flann/kdtree_index.h	/^    KDTreeIndex(const Matrix<ElementType>& inputData, const IndexParams& params = KDTreeIndexParams(),$/;"	f	class:cvflann::KDTreeIndex
KDTreeIndex	opencv2/flann/kdtree_index.h	/^class KDTreeIndex : public NNIndex<Distance>$/;"	c	namespace:cvflann
KDTreeIndexParams	opencv2/flann/kdtree_index.h	/^    KDTreeIndexParams(int trees = 4)$/;"	f	struct:cvflann::KDTreeIndexParams
KDTreeIndexParams	opencv2/flann/kdtree_index.h	/^struct KDTreeIndexParams : public IndexParams$/;"	s	namespace:cvflann
KDTreeIndexParams	opencv2/flann/miniflann.hpp	/^struct CV_EXPORTS KDTreeIndexParams : public IndexParams$/;"	s	namespace:cv::flann
KDTreeSingleIndex	opencv2/flann/kdtree_single_index.h	/^    KDTreeSingleIndex(const Matrix<ElementType>& inputData, const IndexParams& params = KDTreeSingleIndexParams(),$/;"	f	class:cvflann::KDTreeSingleIndex
KDTreeSingleIndex	opencv2/flann/kdtree_single_index.h	/^class KDTreeSingleIndex : public NNIndex<Distance>$/;"	c	namespace:cvflann
KDTreeSingleIndexParams	opencv2/flann/kdtree_single_index.h	/^    KDTreeSingleIndexParams(int leaf_max_size = 10, bool reorder = true, int dim = -1)$/;"	f	struct:cvflann::KDTreeSingleIndexParams
KDTreeSingleIndexParams	opencv2/flann/kdtree_single_index.h	/^struct KDTreeSingleIndexParams : public IndexParams$/;"	s	namespace:cvflann
KIND_MASK	opencv2/core/mat.hpp	/^        KIND_MASK = 31 << KIND_SHIFT,$/;"	e	enum:cv::_InputArray::__anon273
KIND_SHIFT	opencv2/core/mat.hpp	/^        KIND_SHIFT = 16,$/;"	e	enum:cv::_InputArray::__anon273
KL	opencv2/flann/defines.h	/^    KL         = 8,$/;"	e	enum:cvflann::flann_distance_t
KL_Divergence	opencv2/flann/dist.h	/^struct KL_Divergence$/;"	s	namespace:cvflann
KMEANS	opencv2/flann/defines.h	/^    KMEANS = 2,$/;"	e	enum:cvflann::flann_algorithm_t
KMEANS_PP_CENTERS	opencv2/core.hpp	/^    KMEANS_PP_CENTERS         = 2,$/;"	e	enum:cv::KmeansFlags
KMEANS_RANDOM_CENTERS	opencv2/core.hpp	/^    KMEANS_RANDOM_CENTERS     = 0,$/;"	e	enum:cv::KmeansFlags
KMEANS_USE_INITIAL_LABELS	opencv2/core.hpp	/^    KMEANS_USE_INITIAL_LABELS = 1$/;"	e	enum:cv::KmeansFlags
KMeansDistanceComputer	opencv2/flann/kmeans_index.h	/^        KMeansDistanceComputer(Distance _distance, const Matrix<ElementType>& _dataset,$/;"	f	class:cvflann::KMeansIndex::KMeansDistanceComputer
KMeansDistanceComputer	opencv2/flann/kmeans_index.h	/^    class KMeansDistanceComputer : public cv::ParallelLoopBody$/;"	c	class:cvflann::KMeansIndex
KMeansIndex	opencv2/flann/kmeans_index.h	/^    KMeansIndex(const Matrix<ElementType>& inputData, const IndexParams& params = KMeansIndexParams(),$/;"	f	class:cvflann::KMeansIndex
KMeansIndex	opencv2/flann/kmeans_index.h	/^class KMeansIndex : public NNIndex<Distance>$/;"	c	namespace:cvflann
KMeansIndexParams	opencv2/flann/kmeans_index.h	/^    KMeansIndexParams(int branching = 32, int iterations = 11,$/;"	f	struct:cvflann::KMeansIndexParams
KMeansIndexParams	opencv2/flann/kmeans_index.h	/^struct KMeansIndexParams : public IndexParams$/;"	s	namespace:cvflann
KMeansIndexParams	opencv2/flann/miniflann.hpp	/^struct CV_EXPORTS KMeansIndexParams : public IndexParams$/;"	s	namespace:cv::flann
KMeansNode	opencv2/flann/kmeans_index.h	/^    struct KMeansNode$/;"	s	class:cvflann::KMeansIndex
KMeansNodePtr	opencv2/flann/kmeans_index.h	/^    typedef KMeansNode* KMeansNodePtr;$/;"	t	class:cvflann::KMeansIndex
KNNRadiusUniqueResultSet	opencv2/flann/result_set.h	/^    KNNRadiusUniqueResultSet(unsigned int capacity, DistanceType radius)$/;"	f	class:cvflann::KNNRadiusUniqueResultSet
KNNRadiusUniqueResultSet	opencv2/flann/result_set.h	/^class KNNRadiusUniqueResultSet : public KNNUniqueResultSet<DistanceType>$/;"	c	namespace:cvflann
KNNResultSet	opencv2/flann/result_set.h	/^    KNNResultSet(int capacity_) : capacity(capacity_), count(0)$/;"	f	class:cvflann::KNNResultSet
KNNResultSet	opencv2/flann/result_set.h	/^class KNNResultSet : public ResultSet<DistanceType>$/;"	c	namespace:cvflann
KNNSimpleResultSet	opencv2/flann/result_set.h	/^    KNNSimpleResultSet(int capacity_) : capacity(capacity_), count(0)$/;"	f	class:cvflann::KNNSimpleResultSet
KNNSimpleResultSet	opencv2/flann/result_set.h	/^class KNNSimpleResultSet : public ResultSet<DistanceType>$/;"	c	namespace:cvflann
KNNUniqueResultSet	opencv2/flann/result_set.h	/^    KNNUniqueResultSet(unsigned int capacity) : capacity_(capacity)$/;"	f	class:cvflann::KNNUniqueResultSet
KNNUniqueResultSet	opencv2/flann/result_set.h	/^class KNNUniqueResultSet : public UniqueResultSet<DistanceType>$/;"	c	namespace:cvflann
KNOWN	opencv2/videostab/fast_marching.hpp	/^    enum { INSIDE = 0, BAND = 1, KNOWN = 255 };$/;"	e	enum:cv::videostab::FastMarchingMethod::__anon334
KNearest	opencv2/ml.hpp	/^class CV_EXPORTS_W KNearest : public StatModel$/;"	c	namespace:cv::ml
KULLBACK_LEIBLER	opencv2/flann/defines.h	/^    KULLBACK_LEIBLER  = 8$/;"	e	enum:cvflann::flann_distance_t
K_LOG2_WARP_SIZE	opencv2/cudalegacy/NCV.hpp	/^const Ncv32u K_LOG2_WARP_SIZE = 5;$/;"	v
K_WARP_SIZE	opencv2/cudalegacy/NCV.hpp	/^const Ncv32u K_WARP_SIZE = 32;$/;"	v
KalmGainMatr	opencv2/video/tracking_c.h	/^    float* KalmGainMatr;        \/* =gain->data.fl *\/$/;"	m	struct:CvKalman
KalmanFilter	opencv2/video/tracking.hpp	/^class CV_EXPORTS_W KalmanFilter$/;"	c	namespace:cv
Kernel	opencv2/core/ocl.hpp	/^class CV_EXPORTS Kernel$/;"	c	namespace:cv::ocl
Kernel	opencv2/core/ocl.hpp	/^class CV_EXPORTS Kernel;$/;"	m	namespace:cv::ocl	typeref:class:cv::ocl::CV_EXPORTS
Kernel	opencv2/ml.hpp	/^    class CV_EXPORTS Kernel : public Algorithm$/;"	c	class:cv::ml::SVM
KernelArg	opencv2/core/ocl.hpp	/^class CV_EXPORTS KernelArg$/;"	c	namespace:cv::ocl
KernelTypes	opencv2/ml.hpp	/^    enum KernelTypes {$/;"	g	class:cv::ml::SVM
KeyPoint	opencv2/core/base.hpp	/^class CV_EXPORTS KeyPoint;$/;"	m	namespace:cv	typeref:class:cv::CV_EXPORTS
KeyPoint	opencv2/core/types.hpp	/^KeyPoint::KeyPoint()$/;"	f	class:cv::KeyPoint
KeyPoint	opencv2/core/types.hpp	/^KeyPoint::KeyPoint(Point2f _pt, float _size, float _angle, float _response, int _octave, int _class_id)$/;"	f	class:cv::KeyPoint
KeyPoint	opencv2/core/types.hpp	/^KeyPoint::KeyPoint(float x, float y, float _size, float _angle, float _response, int _octave, int _class_id)$/;"	f	class:cv::KeyPoint
KeyPoint	opencv2/core/types.hpp	/^class CV_EXPORTS_W_SIMPLE KeyPoint$/;"	c	namespace:cv
KeyPointsFilter	opencv2/features2d.hpp	/^    KeyPointsFilter(){}$/;"	f	class:cv::KeyPointsFilter
KeyPointsFilter	opencv2/features2d.hpp	/^class CV_EXPORTS KeyPointsFilter$/;"	c	namespace:cv
KeypointBasedMotionEstimator	opencv2/videostab/global_motion.hpp	/^class CV_EXPORTS KeypointBasedMotionEstimator : public ImageMotionEstimatorBase$/;"	c	namespace:cv::videostab
KeypointBasedMotionEstimatorGpu	opencv2/videostab/global_motion.hpp	/^class CV_EXPORTS KeypointBasedMotionEstimatorGpu : public ImageMotionEstimatorBase$/;"	c	namespace:cv::videostab
KmeansFlags	opencv2/core.hpp	/^enum KmeansFlags {$/;"	g	namespace:cv
L1	opencv2/features2d.hpp	/^struct CV_EXPORTS L1$/;"	s	namespace:cv
L1	opencv2/flann/dist.h	/^struct L1$/;"	s	namespace:cvflann
L1Dist	opencv2/core/cuda/vec_distance.hpp	/^        __device__ __forceinline__ L1Dist() : mySum(0) {}$/;"	f	struct:cv::cuda::device::L1Dist
L1Dist	opencv2/core/cuda/vec_distance.hpp	/^        __device__ __forceinline__ L1Dist() : mySum(0.0f) {}$/;"	f	struct:cv::cuda::device::L1Dist
L1Dist	opencv2/core/cuda/vec_distance.hpp	/^    template <> struct L1Dist<float>$/;"	s	namespace:cv::cuda::device
L1Dist	opencv2/core/cuda/vec_distance.hpp	/^    template <typename T> struct L1Dist$/;"	s	namespace:cv::cuda::device
L1_cache_size	5/parallel/settings.h	/^    unsigned long long          L1_cache_size;$/;"	m	struct:__gnu_parallel::_Settings
L2	opencv2/features2d.hpp	/^struct CV_EXPORTS L2$/;"	s	namespace:cv
L2	opencv2/flann/dist.h	/^struct L2$/;"	s	namespace:cvflann
L2Dist	opencv2/core/cuda/vec_distance.hpp	/^        __device__ __forceinline__ L2Dist() : mySum(0.0f) {}$/;"	f	struct:cv::cuda::device::L2Dist
L2Dist	opencv2/core/cuda/vec_distance.hpp	/^    struct L2Dist$/;"	s	namespace:cv::cuda::device
L2Hys	opencv2/objdetect.hpp	/^    enum { L2Hys = 0$/;"	e	enum:cv::HOGDescriptor::__anon387
L2HysThreshold	opencv2/objdetect.hpp	/^    CV_PROP double L2HysThreshold;$/;"	m	struct:cv::HOGDescriptor
L2_Simple	opencv2/flann/dist.h	/^struct L2_Simple$/;"	s	namespace:cvflann
L2_cache_size	5/parallel/settings.h	/^    unsigned long long          L2_cache_size;$/;"	m	struct:__gnu_parallel::_Settings
LAB_CBRT_TAB_SIZE	opencv2/core/cuda/detail/color_detail.hpp	/^            LAB_CBRT_TAB_SIZE = 1024,$/;"	e	enum:cv::cuda::device::color_detail::__anon247
LAB_CBRT_TAB_SIZE	opencv2/cudev/functional/detail/color_cvt.hpp	/^        LAB_CBRT_TAB_SIZE = 1024,$/;"	e	enum:cv::cudev::color_cvt_detail::__anon397
LAB_CBRT_TAB_SIZE_B	opencv2/core/cuda/detail/color_detail.hpp	/^            LAB_CBRT_TAB_SIZE_B = (256 * 3 \/ 2 * (1 << gamma_shift))$/;"	e	enum:cv::cuda::device::color_detail::__anon247
LAB_CBRT_TAB_SIZE_B	opencv2/cudev/functional/detail/color_cvt.hpp	/^        LAB_CBRT_TAB_SIZE_B = (256 * 3 \/ 2 * (1 << gamma_shift))$/;"	e	enum:cv::cudev::color_cvt_detail::__anon397
LDA	opencv2/core.hpp	/^class CV_EXPORTS LDA$/;"	c	namespace:cv
LDR_SIZE	opencv2/photo.hpp	/^enum { LDR_SIZE = 256 };$/;"	e	enum:cv::__anon119
LINEAR	5/parallel/types.h	/^      LINEAR $/;"	e	enum:__gnu_parallel::_PartialSumAlgorithm
LINEAR	opencv2/flann/defines.h	/^    LINEAR = 0,$/;"	e	enum:cvflann::flann_algorithm_t
LINEAR	opencv2/ml.hpp	/^        LINEAR=0,$/;"	e	enum:cv::ml::SVM::KernelTypes
LINES	opencv2/core/opengl.hpp	/^    LINES          = 0x0001,$/;"	e	enum:cv::ogl::RenderModes
LINE_4	opencv2/core.hpp	/^    LINE_4  = 4, \/\/!< 4-connected line$/;"	e	enum:cv::LineTypes
LINE_8	opencv2/core.hpp	/^    LINE_8  = 8, \/\/!< 8-connected line$/;"	e	enum:cv::LineTypes
LINE_AA	opencv2/core.hpp	/^    LINE_AA = 16 \/\/!< antialiased line$/;"	e	enum:cv::LineTypes
LINE_LOOP	opencv2/core/opengl.hpp	/^    LINE_LOOP      = 0x0002,$/;"	e	enum:cv::ogl::RenderModes
LINE_STRIP	opencv2/core/opengl.hpp	/^    LINE_STRIP     = 0x0003,$/;"	e	enum:cv::ogl::RenderModes
LMEDS	opencv2/calib3d.hpp	/^enum { LMEDS  = 4, \/\/!< least-median algorithm$/;"	e	enum:cv::__anon96
LOCAL	opencv2/core/ocl.hpp	/^    enum { LOCAL=1, READ_ONLY=2, WRITE_ONLY=4, READ_WRITE=6, CONSTANT=8, PTR_ONLY = 16, NO_SIZE=256 };$/;"	e	enum:cv::ocl::KernelArg::__anon323
LOCAL_IS_GLOBAL	opencv2/core/ocl.hpp	/^        LOCAL_IS_GLOBAL=2$/;"	e	enum:cv::ocl::Device::__anon321
LOCAL_IS_LOCAL	opencv2/core/ocl.hpp	/^        LOCAL_IS_LOCAL=1,$/;"	e	enum:cv::ocl::Device::__anon321
LOCATION_ROW	opencv2/cudafeatures2d.hpp	/^        LOCATION_ROW = 0,$/;"	e	enum:cv::cuda::FastFeatureDetector::__anon91
LOGIT	opencv2/ml.hpp	/^        LOGIT=2, \/\/!< LogitBoost. It can produce good regression fits.$/;"	e	enum:cv::ml::Boost::Types
LOG_METHOD	opencv2/flann/logger.h	108;"	d
LOG_WARP_SIZE	opencv2/core/cuda/warp.hpp	/^            LOG_WARP_SIZE = 5,$/;"	e	enum:cv::cuda::device::Warp::__anon260
LOG_WARP_SIZE	opencv2/cudev/warp/warp.hpp	/^    LOG_WARP_SIZE = 5,$/;"	e	enum:cv::cudev::__anon393
LOSER_TREE	5/parallel/types.h	/^      LOSER_TREE$/;"	e	enum:__gnu_parallel::_MultiwayMergeAlgorithm
LSD_REFINE_ADV	opencv2/imgproc.hpp	/^    LSD_REFINE_ADV  = 2  \/\/!< Advanced refinement. Number of false alarms is calculated, lines are$/;"	e	enum:cv::LineSegmentDetectorModes
LSD_REFINE_NONE	opencv2/imgproc.hpp	/^    LSD_REFINE_NONE = 0, \/\/!< No refinement applied$/;"	e	enum:cv::LineSegmentDetectorModes
LSD_REFINE_STD	opencv2/imgproc.hpp	/^    LSD_REFINE_STD  = 1, \/\/!< Standard refinement is applied. E.g. breaking arches into smaller straighter line approximations.$/;"	e	enum:cv::LineSegmentDetectorModes
Lab2RGB	opencv2/core/cuda/detail/color_detail.hpp	/^            __host__ __device__ __forceinline__ Lab2RGB() {}$/;"	f	struct:cv::cuda::device::color_detail::Lab2RGB
Lab2RGB	opencv2/core/cuda/detail/color_detail.hpp	/^            __host__ __device__ __forceinline__ Lab2RGB(const Lab2RGB&) {}$/;"	f	struct:cv::cuda::device::color_detail::Lab2RGB
Lab2RGB	opencv2/core/cuda/detail/color_detail.hpp	/^        struct Lab2RGB<float, scn, dcn, srgb, blueIdx>$/;"	s	namespace:cv::cuda::device::color_detail
Lab2RGB	opencv2/core/cuda/detail/color_detail.hpp	/^        struct Lab2RGB<uchar, scn, dcn, srgb, blueIdx>$/;"	s	namespace:cv::cuda::device::color_detail
Lab2RGB	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <int scn, int dcn, bool srgb, int blueIdx> struct Lab2RGB<float, scn, dcn, srgb, blueIdx>$/;"	s	namespace:cv::cudev::color_cvt_detail
Lab2RGB	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <int scn, int dcn, bool srgb, int blueIdx> struct Lab2RGB<uchar, scn, dcn, srgb, blueIdx>$/;"	s	namespace:cv::cudev::color_cvt_detail
Lab2RGBConvert_b	opencv2/core/cuda/detail/color_detail.hpp	/^        __device__ __forceinline__ void Lab2RGBConvert_b(const T& src, D& dst)$/;"	f	namespace:cv::cuda::device::color_detail
Lab2RGBConvert_f	opencv2/core/cuda/detail/color_detail.hpp	/^        __device__ __forceinline__ void Lab2RGBConvert_f(const T& src, D& dst)$/;"	f	namespace:cv::cuda::device::color_detail
LabCbrt_b	opencv2/core/cuda/detail/color_detail.hpp	/^        __device__ __forceinline__ int LabCbrt_b(int i)$/;"	f	namespace:cv::cuda::device::color_detail
LabCbrt_b	opencv2/cudev/functional/detail/color_cvt.hpp	/^    __device__ static int LabCbrt_b(int i)$/;"	f	namespace:cv::cudev::color_cvt_detail
LaplacianPtr	opencv2/cudev/ptr2d/deriv.hpp	/^template <class SrcPtr> struct LaplacianPtr<1, SrcPtr>$/;"	s	namespace:cv::cudev
LaplacianPtr	opencv2/cudev/ptr2d/deriv.hpp	/^template <class SrcPtr> struct LaplacianPtr<3, SrcPtr>$/;"	s	namespace:cv::cudev
LaplacianPtrSz	opencv2/cudev/ptr2d/deriv.hpp	/^template <int ksize, class SrcPtr> struct LaplacianPtrSz : LaplacianPtr<ksize, SrcPtr>$/;"	s	namespace:cv::cudev
LargerDepth	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct LargerDepth<double, double>$/;"	s	namespace:cv::cudev::type_traits_detail
LargerDepth	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct LargerDepth<double, float>$/;"	s	namespace:cv::cudev::type_traits_detail
LargerDepth	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct LargerDepth<float, double>$/;"	s	namespace:cv::cudev::type_traits_detail
LargerDepth	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct LargerDepth<float, float>$/;"	s	namespace:cv::cudev::type_traits_detail
LargerDepth	opencv2/cudev/util/detail/type_traits.hpp	/^    template <typename A, typename B> struct LargerDepth$/;"	s	namespace:cv::cudev::type_traits_detail
LargerDepth	opencv2/cudev/util/detail/type_traits.hpp	/^    template <typename A> struct LargerDepth<A, double>$/;"	s	namespace:cv::cudev::type_traits_detail
LargerDepth	opencv2/cudev/util/detail/type_traits.hpp	/^    template <typename A> struct LargerDepth<A, float>$/;"	s	namespace:cv::cudev::type_traits_detail
LargerDepth	opencv2/cudev/util/detail/type_traits.hpp	/^    template <typename A> struct LargerDepth<double, A>$/;"	s	namespace:cv::cudev::type_traits_detail
LargerDepth	opencv2/cudev/util/detail/type_traits.hpp	/^    template <typename A> struct LargerDepth<float, A>$/;"	s	namespace:cv::cudev::type_traits_detail
LargerType	opencv2/cudev/util/type_traits.hpp	/^template <typename A, typename B> struct LargerType$/;"	s	namespace:cv::cudev
Lc	opencv2/cudalegacy.hpp	/^    int Lc;  \/\/!< Quantized levels per 'color' component. Power of two, typically 32, 64 or 128.$/;"	m	struct:cv::cuda::FGDParams
Lcc	opencv2/cudalegacy.hpp	/^    int Lcc;  \/\/!< Quantized levels per 'color co-occurrence' component.  Power of two, typically 16, 32 or 64.$/;"	m	struct:cv::cuda::FGDParams
LineIterator	opencv2/imgproc.hpp	/^class CV_EXPORTS LineIterator$/;"	c	namespace:cv
LineSegmentDetector	opencv2/imgproc.hpp	/^class CV_EXPORTS_W LineSegmentDetector : public Algorithm$/;"	c	namespace:cv
LineSegmentDetectorModes	opencv2/imgproc.hpp	/^enum LineSegmentDetectorModes {$/;"	g	namespace:cv
LineTypes	opencv2/core.hpp	/^enum LineTypes {$/;"	g	namespace:cv
LinearFilter	opencv2/core/cuda/filters.hpp	/^        explicit __host__ __device__ __forceinline__ LinearFilter(const Ptr2D& src_, float fx = 0.f, float fy = 0.f)$/;"	f	struct:cv::cuda::device::LinearFilter
LinearFilter	opencv2/core/cuda/filters.hpp	/^    template <typename Ptr2D> struct LinearFilter$/;"	s	namespace:cv::cuda::device
LinearIndex	opencv2/flann/linear_index.h	/^    LinearIndex(const Matrix<ElementType>& inputData, const IndexParams& params = LinearIndexParams(),$/;"	f	class:cvflann::LinearIndex
LinearIndex	opencv2/flann/linear_index.h	/^class LinearIndex : public NNIndex<Distance>$/;"	c	namespace:cvflann
LinearIndexParams	opencv2/flann/linear_index.h	/^    LinearIndexParams()$/;"	f	struct:cvflann::LinearIndexParams
LinearIndexParams	opencv2/flann/linear_index.h	/^struct LinearIndexParams : public IndexParams$/;"	s	namespace:cvflann
LinearIndexParams	opencv2/flann/miniflann.hpp	/^struct CV_EXPORTS LinearIndexParams : public IndexParams$/;"	s	namespace:cv::flann
LinearInterPtr	opencv2/cudev/ptr2d/interpolation.hpp	/^template <typename SrcPtr> struct LinearInterPtr$/;"	s	namespace:cv::cudev
LinearInterPtrSz	opencv2/cudev/ptr2d/interpolation.hpp	/^template <class SrcPtr> struct LinearInterPtrSz : LinearInterPtr<SrcPtr>$/;"	s	namespace:cv::cudev
Load	opencv2/core/cuda/datamov_utils.hpp	/^            __device__ __forceinline__ static void Load(const T* ptr, int offset, T& val)  { val = ptr[offset];  }$/;"	f	struct:cv::cuda::device::ForceGlob
Local	opencv2/core/ocl.hpp	/^    static KernelArg Local() { return KernelArg(LOCAL, 0); }$/;"	f	class:cv::ocl::KernelArg
Log2	opencv2/cudev/util/type_traits.hpp	/^template <int N, int COUNT> struct Log2<N, 0, COUNT>$/;"	s	namespace:cv::cudev
Log2	opencv2/cudev/util/type_traits.hpp	/^template <int N, int CURRENT_VAL = N, int COUNT = 0> struct Log2$/;"	s	namespace:cv::cudev
LogToStdout	opencv2/videostab/log.hpp	/^class CV_EXPORTS LogToStdout : public ILog$/;"	c	namespace:cv::videostab
Logger	opencv2/flann/logger.h	/^    Logger() : stream(stdout), logLevel(FLANN_LOG_WARN) {}$/;"	f	class:cvflann::Logger
Logger	opencv2/flann/logger.h	/^class Logger$/;"	c	namespace:cvflann
LogisticRegression	opencv2/ml.hpp	/^class CV_EXPORTS_W LogisticRegression : public StatModel$/;"	c	namespace:cv::ml
LookUpTable	opencv2/cudaarithm.hpp	/^class CV_EXPORTS LookUpTable : public Algorithm$/;"	c	namespace:cv::cuda
LpMotionStabilizer	opencv2/videostab/motion_stabilizing.hpp	/^class CV_EXPORTS LpMotionStabilizer : public IMotionStabilizer$/;"	c	namespace:cv::videostab
LshIndex	opencv2/flann/lsh_index.h	/^    LshIndex(const Matrix<ElementType>& input_data, const IndexParams& params = LshIndexParams(),$/;"	f	class:cvflann::LshIndex
LshIndex	opencv2/flann/lsh_index.h	/^class LshIndex : public NNIndex<Distance>$/;"	c	namespace:cvflann
LshIndexParams	opencv2/flann/lsh_index.h	/^    LshIndexParams(unsigned int table_number = 12, unsigned int key_size = 20, unsigned int multi_probe_level = 2)$/;"	f	struct:cvflann::LshIndexParams
LshIndexParams	opencv2/flann/lsh_index.h	/^struct LshIndexParams : public IndexParams$/;"	s	namespace:cvflann
LshIndexParams	opencv2/flann/miniflann.hpp	/^struct CV_EXPORTS LshIndexParams : public IndexParams$/;"	s	namespace:cv::flann
LshStats	opencv2/flann/lsh_table.h	/^struct LshStats$/;"	s	namespace:cvflann::lsh
LshTable	opencv2/flann/lsh_table.h	/^    LshTable()$/;"	f	class:cvflann::lsh::LshTable
LshTable	opencv2/flann/lsh_table.h	/^    LshTable(unsigned int feature_size, unsigned int key_size)$/;"	f	class:cvflann::lsh::LshTable
LshTable	opencv2/flann/lsh_table.h	/^class LshTable$/;"	c	namespace:cvflann::lsh
LshTable	opencv2/flann/lsh_table.h	/^inline LshTable<unsigned char>::LshTable(unsigned int feature_size, unsigned int subsignature_size)$/;"	f	class:cvflann::lsh::LshTable
LutPtr	opencv2/cudev/ptr2d/lut.hpp	/^template <class SrcPtr, class TablePtr> struct LutPtr$/;"	s	namespace:cv::cudev
LutPtrSz	opencv2/cudev/ptr2d/lut.hpp	/^template <class SrcPtr, class TablePtr> struct LutPtrSz : LutPtr<SrcPtr, TablePtr>$/;"	s	namespace:cv::cudev
Luv2RGB	opencv2/core/cuda/detail/color_detail.hpp	/^            __host__ __device__ __forceinline__ Luv2RGB() {}$/;"	f	struct:cv::cuda::device::color_detail::Luv2RGB
Luv2RGB	opencv2/core/cuda/detail/color_detail.hpp	/^            __host__ __device__ __forceinline__ Luv2RGB(const Luv2RGB&) {}$/;"	f	struct:cv::cuda::device::color_detail::Luv2RGB
Luv2RGB	opencv2/core/cuda/detail/color_detail.hpp	/^        struct Luv2RGB<float, scn, dcn, srgb, blueIdx>$/;"	s	namespace:cv::cuda::device::color_detail
Luv2RGB	opencv2/core/cuda/detail/color_detail.hpp	/^        struct Luv2RGB<uchar, scn, dcn, srgb, blueIdx>$/;"	s	namespace:cv::cuda::device::color_detail
Luv2RGB	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <int scn, int dcn, bool srgb, int blueIdx> struct Luv2RGB<float, scn, dcn, srgb, blueIdx>$/;"	s	namespace:cv::cudev::color_cvt_detail
Luv2RGB	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <int scn, int dcn, bool srgb, int blueIdx> struct Luv2RGB<uchar, scn, dcn, srgb, blueIdx>$/;"	s	namespace:cv::cudev::color_cvt_detail
Luv2RGBConvert_b	opencv2/core/cuda/detail/color_detail.hpp	/^        __device__ __forceinline__ void Luv2RGBConvert_b(const T& src, D& dst)$/;"	f	namespace:cv::cuda::device::color_detail
Luv2RGBConvert_f	opencv2/core/cuda/detail/color_detail.hpp	/^        __device__ __forceinline__ void Luv2RGBConvert_f(const T& src, D& dst)$/;"	f	namespace:cv::cuda::device::color_detail
M	opencv2/core.hpp	/^    enum PeriodParameters {N = 624, M = 397};$/;"	e	enum:cv::RNG_MT19937::PeriodParameters
M	opencv2/core/cuda/detail/reduce.hpp	/^            enum { M = N \/ 32 };$/;"	e	enum:cv::cuda::device::reduce_detail::GenericOptimized32::__anon250
M	opencv2/core/cuda/detail/reduce_key_val.hpp	/^            enum { M = N \/ 32 };$/;"	e	enum:cv::cuda::device::reduce_key_val_detail::GenericOptimized32::__anon248
M	opencv2/cudev/block/detail/reduce.hpp	/^        enum { M = N \/ 32 };$/;"	e	enum:cv::cudev::block_reduce_detail::GenericOptimized32::__anon392
M	opencv2/cudev/block/detail/reduce_key_val.hpp	/^        enum { M = N \/ 32 };$/;"	e	enum:cv::cudev::block_reduce_key_val_detail::GenericOptimized32::__anon391
MAGIC_MASK	opencv2/core/mat.hpp	/^    enum { MAGIC_MASK = 0xFFFF0000, TYPE_MASK = 0x00000FFF, DEPTH_MASK = 7 };$/;"	e	enum:cv::Mat::__anon277
MAGIC_MASK	opencv2/core/mat.hpp	/^    enum { MAGIC_MASK = 0xFFFF0000, TYPE_MASK = 0x00000FFF, DEPTH_MASK = 7 };$/;"	e	enum:cv::UMat::__anon279
MAGIC_VAL	opencv2/core/mat.hpp	/^    enum { MAGIC_VAL  = 0x42FF0000, AUTO_STEP = 0, CONTINUOUS_FLAG = CV_MAT_CONT_FLAG, SUBMATRIX_FLAG = CV_SUBMAT_FLAG };$/;"	e	enum:cv::Mat::__anon276
MAGIC_VAL	opencv2/core/mat.hpp	/^    enum { MAGIC_VAL  = 0x42FF0000, AUTO_STEP = 0, CONTINUOUS_FLAG = CV_MAT_CONT_FLAG, SUBMATRIX_FLAG = CV_SUBMAT_FLAG };$/;"	e	enum:cv::UMat::__anon278
MAGIC_VAL	opencv2/core/mat.hpp	/^    enum { MAGIC_VAL=0x42FD0000, MAX_DIM=32, HASH_SCALE=0x5bd1e995, HASH_BIT=0x80000000 };$/;"	e	enum:cv::SparseMat::__anon280
MANHATTAN	opencv2/flann/defines.h	/^    MANHATTAN = 2,$/;"	e	enum:cvflann::flann_distance_t
MAP	opencv2/core/persistence.hpp	/^        MAP       = 6, \/\/!< mapping$/;"	e	enum:cv::FileNode::Type
MARKER_CROSS	opencv2/imgproc.hpp	/^    MARKER_CROSS = 0,           \/\/!< A crosshair marker shape$/;"	e	enum:cv::MarkerTypes
MARKER_DIAMOND	opencv2/imgproc.hpp	/^    MARKER_DIAMOND = 3,         \/\/!< A diamond marker shape$/;"	e	enum:cv::MarkerTypes
MARKER_SQUARE	opencv2/imgproc.hpp	/^    MARKER_SQUARE = 4,          \/\/!< A square marker shape$/;"	e	enum:cv::MarkerTypes
MARKER_STAR	opencv2/imgproc.hpp	/^    MARKER_STAR = 2,            \/\/!< A star marker shape, combination of cross and tilted cross$/;"	e	enum:cv::MarkerTypes
MARKER_TILTED_CROSS	opencv2/imgproc.hpp	/^    MARKER_TILTED_CROSS = 1,    \/\/!< A 45 degree tilted crosshair marker shape$/;"	e	enum:cv::MarkerTypes
MARKER_TRIANGLE_DOWN	opencv2/imgproc.hpp	/^    MARKER_TRIANGLE_DOWN = 6    \/\/!< A downwards pointing triangle marker shape$/;"	e	enum:cv::MarkerTypes
MARKER_TRIANGLE_UP	opencv2/imgproc.hpp	/^    MARKER_TRIANGLE_UP = 5,     \/\/!< An upwards pointing triangle marker shape$/;"	e	enum:cv::MarkerTypes
MAT	opencv2/core.hpp	/^    enum { INT=0, BOOLEAN=1, REAL=2, STRING=3, MAT=4, MAT_VECTOR=5, ALGORITHM=6, FLOAT=7,$/;"	e	enum:cv::Param::__anon344
MAT	opencv2/core/mat.hpp	/^        MAT               = 1 << KIND_SHIFT,$/;"	e	enum:cv::_InputArray::__anon273
MATX	opencv2/core/mat.hpp	/^        MATX              = 2 << KIND_SHIFT,$/;"	e	enum:cv::_InputArray::__anon273
MAT_VECTOR	opencv2/core.hpp	/^    enum { INT=0, BOOLEAN=1, REAL=2, STRING=3, MAT=4, MAT_VECTOR=5, ALGORITHM=6, FLOAT=7,$/;"	e	enum:cv::Param::__anon344
MAX	opencv2/core/cvdef.h	414;"	d
MAX_DIM	opencv2/core/mat.hpp	/^    enum { MAGIC_VAL=0x42FD0000, MAX_DIM=32, HASH_SCALE=0x5bd1e995, HASH_BIT=0x80000000 };$/;"	e	enum:cv::SparseMat::__anon280
MAX_DIST	opencv2/flann/defines.h	/^    MAX_DIST   = 4,$/;"	e	enum:cvflann::flann_distance_t
MAX_ITER	opencv2/core/types.hpp	/^        MAX_ITER=COUNT, \/\/!< ditto$/;"	e	enum:cv::TermCriteria::Type
MEMORY	opencv2/core/persistence.hpp	/^        MEMORY      = 4, \/\/!< flag, read data from source or write data to the internal buffer (which is$/;"	e	enum:cv::FileStorage::Mode
MIN	opencv2/core/cvdef.h	410;"	d
MINI_BATCH	opencv2/ml.hpp	/^        MINI_BATCH = 1 \/\/!< Set MiniBatchSize to a positive integer when using this method.$/;"	e	enum:cv::ml::LogisticRegression::Methods
MINKOWSKI	opencv2/flann/defines.h	/^    MINKOWSKI = 3,$/;"	e	enum:cvflann::flann_distance_t
MIXED_CLONE	opencv2/photo.hpp	/^    MIXED_CLONE  = 2,$/;"	e	enum:cv::__anon117
MM_AFFINE	opencv2/videostab/motion_core.hpp	/^    MM_AFFINE = 5,$/;"	e	enum:cv::videostab::MotionModel
MM_HOMOGRAPHY	opencv2/videostab/motion_core.hpp	/^    MM_HOMOGRAPHY = 6,$/;"	e	enum:cv::videostab::MotionModel
MM_RIGID	opencv2/videostab/motion_core.hpp	/^    MM_RIGID = 3,$/;"	e	enum:cv::videostab::MotionModel
MM_ROTATION	opencv2/videostab/motion_core.hpp	/^    MM_ROTATION = 2,$/;"	e	enum:cv::videostab::MotionModel
MM_SIMILARITY	opencv2/videostab/motion_core.hpp	/^    MM_SIMILARITY = 4,$/;"	e	enum:cv::videostab::MotionModel
MM_TRANSLATION	opencv2/videostab/motion_core.hpp	/^    MM_TRANSLATION = 0,$/;"	e	enum:cv::videostab::MotionModel
MM_TRANSLATION_AND_SCALE	opencv2/videostab/motion_core.hpp	/^    MM_TRANSLATION_AND_SCALE = 1,$/;"	e	enum:cv::videostab::MotionModel
MM_UNKNOWN	opencv2/videostab/motion_core.hpp	/^    MM_UNKNOWN = 7$/;"	e	enum:cv::videostab::MotionModel
MNCovariance	opencv2/video/tracking_c.h	/^    float* MNCovariance;        \/* =measurement_noise_cov->data.fl *\/$/;"	m	struct:CvKalman
MODE_HH	opencv2/calib3d.hpp	/^        MODE_HH   = 1,$/;"	e	enum:cv::StereoSGBM::__anon104
MODE_SGBM	opencv2/calib3d.hpp	/^        MODE_SGBM = 0,$/;"	e	enum:cv::StereoSGBM::__anon104
MODE_SGBM_3WAY	opencv2/calib3d.hpp	/^        MODE_SGBM_3WAY = 2$/;"	e	enum:cv::StereoSGBM::__anon104
MODIFY_A	opencv2/core.hpp	/^        MODIFY_A = 1,$/;"	e	enum:cv::SVD::Flags
MONOCHROME_TRANSFER	opencv2/photo.hpp	/^    MONOCHROME_TRANSFER = 3$/;"	e	enum:cv::__anon117
MORPH_BLACKHAT	opencv2/imgproc.hpp	/^    MORPH_BLACKHAT = 6, \/\/!< "black hat"$/;"	e	enum:cv::MorphTypes
MORPH_CLOSE	opencv2/imgproc.hpp	/^    MORPH_CLOSE    = 3, \/\/!< a closing operation$/;"	e	enum:cv::MorphTypes
MORPH_CROSS	opencv2/imgproc.hpp	/^    MORPH_CROSS   = 1, \/\/!< a cross-shaped structuring element:$/;"	e	enum:cv::MorphShapes
MORPH_DILATE	opencv2/imgproc.hpp	/^    MORPH_DILATE   = 1, \/\/!< see cv::dilate$/;"	e	enum:cv::MorphTypes
MORPH_DILATE	opencv2/imgproc/hal/interface.h	21;"	d
MORPH_ELLIPSE	opencv2/imgproc.hpp	/^    MORPH_ELLIPSE = 2 \/\/!< an elliptic structuring element, that is, a filled ellipse inscribed$/;"	e	enum:cv::MorphShapes
MORPH_ERODE	opencv2/imgproc.hpp	/^    MORPH_ERODE    = 0, \/\/!< see cv::erode$/;"	e	enum:cv::MorphTypes
MORPH_ERODE	opencv2/imgproc/hal/interface.h	20;"	d
MORPH_GRADIENT	opencv2/imgproc.hpp	/^    MORPH_GRADIENT = 4, \/\/!< a morphological gradient$/;"	e	enum:cv::MorphTypes
MORPH_HITMISS	opencv2/imgproc.hpp	/^    MORPH_HITMISS  = 7  \/\/!< "hit and miss"$/;"	e	enum:cv::MorphTypes
MORPH_OPEN	opencv2/imgproc.hpp	/^    MORPH_OPEN     = 2, \/\/!< an opening operation$/;"	e	enum:cv::MorphTypes
MORPH_RECT	opencv2/imgproc.hpp	/^    MORPH_RECT    = 0, \/\/!< a rectangular structuring element:  \\f[E_{ij}=1\\f]$/;"	e	enum:cv::MorphShapes
MORPH_TOPHAT	opencv2/imgproc.hpp	/^    MORPH_TOPHAT   = 5, \/\/!< "top hat"$/;"	e	enum:cv::MorphTypes
MOTION_AFFINE	opencv2/video/tracking.hpp	/^    MOTION_AFFINE      = 2,$/;"	e	enum:cv::__anon337
MOTION_EUCLIDEAN	opencv2/video/tracking.hpp	/^    MOTION_EUCLIDEAN   = 1,$/;"	e	enum:cv::__anon337
MOTION_HOMOGRAPHY	opencv2/video/tracking.hpp	/^    MOTION_HOMOGRAPHY  = 3$/;"	e	enum:cv::__anon337
MOTION_TRANSLATION	opencv2/video/tracking.hpp	/^    MOTION_TRANSLATION = 0,$/;"	e	enum:cv::__anon337
MP	opencv2/video/tracking_c.h	/^    int MP;                     \/* number of measurement vector dimensions *\/$/;"	m	struct:CvKalman
MPEG1	opencv2/cudacodec.hpp	/^    MPEG1 = 0,$/;"	e	enum:cv::cudacodec::Codec
MPEG2	opencv2/cudacodec.hpp	/^    MPEG2,$/;"	e	enum:cv::cudacodec::Codec
MPEG4	opencv2/cudacodec.hpp	/^    MPEG4,$/;"	e	enum:cv::cudacodec::Codec
MSER	opencv2/features2d.hpp	/^class CV_EXPORTS_W MSER : public Feature2D$/;"	c	namespace:cv
MULTI_BAND	opencv2/stitching/detail/blenders.hpp	/^    enum { NO, FEATHER, MULTI_BAND };$/;"	e	enum:cv::detail::Blender::__anon95
MWMS	5/parallel/types.h	/^      MWMS, $/;"	e	enum:__gnu_parallel::_SortAlgorithm
MakeVec	opencv2/cudev/util/vec_traits.hpp	/^template<> struct MakeVec<bool, 1> { typedef uchar  type; };$/;"	s	namespace:cv::cudev
MakeVec	opencv2/cudev/util/vec_traits.hpp	/^template<> struct MakeVec<bool, 2> { typedef uchar2 type; };$/;"	s	namespace:cv::cudev
MakeVec	opencv2/cudev/util/vec_traits.hpp	/^template<> struct MakeVec<bool, 3> { typedef uchar3 type; };$/;"	s	namespace:cv::cudev
MakeVec	opencv2/cudev/util/vec_traits.hpp	/^template<> struct MakeVec<bool, 4> { typedef uchar4 type; };$/;"	s	namespace:cv::cudev
MakeVec	opencv2/cudev/util/vec_traits.hpp	/^template<> struct MakeVec<schar, 1> { typedef schar type; };$/;"	s	namespace:cv::cudev
MakeVec	opencv2/cudev/util/vec_traits.hpp	/^template<> struct MakeVec<schar, 2> { typedef char2 type; };$/;"	s	namespace:cv::cudev
MakeVec	opencv2/cudev/util/vec_traits.hpp	/^template<> struct MakeVec<schar, 3> { typedef char3 type; };$/;"	s	namespace:cv::cudev
MakeVec	opencv2/cudev/util/vec_traits.hpp	/^template<> struct MakeVec<schar, 4> { typedef char4 type; };$/;"	s	namespace:cv::cudev
MarginType	opencv2/ml.hpp	/^    enum MarginType$/;"	g	class:cv::ml::SVMSGD
MarkerTypes	opencv2/imgproc.hpp	/^enum MarkerTypes$/;"	g	namespace:cv
MaskCollection	opencv2/core/cuda/utility.hpp	/^        __device__ __forceinline__ MaskCollection(const MaskCollection& masks_)$/;"	f	struct:cv::cuda::device::MaskCollection
MaskCollection	opencv2/core/cuda/utility.hpp	/^        explicit __host__ __device__ __forceinline__ MaskCollection(PtrStepb* maskCollection_)$/;"	f	struct:cv::cuda::device::MaskCollection
MaskCollection	opencv2/core/cuda/utility.hpp	/^    struct MaskCollection$/;"	s	namespace:cv::cuda::device
MaskGenerator	opencv2/objdetect.hpp	/^    class CV_EXPORTS MaskGenerator$/;"	c	class:cv::BaseCascadeClassifier
MaskIsTiled	opencv2/core/base.hpp	/^    MaskIsTiled=               -26,  \/\/!<$/;"	e	enum:cv::Error::Code
Mat	opencv2/core/base.hpp	/^class CV_EXPORTS Mat;$/;"	m	namespace:cv	typeref:class:cv::CV_EXPORTS
Mat	opencv2/core/cuda.inl.hpp	/^Mat::Mat(const cuda::GpuMat& m)$/;"	f	class:cv::Mat
Mat	opencv2/core/mat.hpp	/^class CV_EXPORTS Mat$/;"	c	namespace:cv
Mat	opencv2/core/mat.inl.hpp	/^Mat::Mat()$/;"	f	class:cv::Mat
Mat	opencv2/core/mat.inl.hpp	/^Mat::Mat(Mat&& m)$/;"	f	class:cv::Mat
Mat	opencv2/core/mat.inl.hpp	/^Mat::Mat(Size _sz, int _type)$/;"	f	class:cv::Mat
Mat	opencv2/core/mat.inl.hpp	/^Mat::Mat(Size _sz, int _type, const Scalar& _s)$/;"	f	class:cv::Mat
Mat	opencv2/core/mat.inl.hpp	/^Mat::Mat(Size _sz, int _type, void* _data, size_t _step)$/;"	f	class:cv::Mat
Mat	opencv2/core/mat.inl.hpp	/^Mat::Mat(const Mat& m)$/;"	f	class:cv::Mat
Mat	opencv2/core/mat.inl.hpp	/^Mat::Mat(const MatCommaInitializer_<_Tp>& commaInitializer)$/;"	f	class:cv::Mat
Mat	opencv2/core/mat.inl.hpp	/^Mat::Mat(const Matx<_Tp,m,n>& M, bool copyData)$/;"	f	class:cv::Mat
Mat	opencv2/core/mat.inl.hpp	/^Mat::Mat(const Point3_<_Tp>& pt, bool copyData)$/;"	f	class:cv::Mat
Mat	opencv2/core/mat.inl.hpp	/^Mat::Mat(const Point_<_Tp>& pt, bool copyData)$/;"	f	class:cv::Mat
Mat	opencv2/core/mat.inl.hpp	/^Mat::Mat(const Vec<_Tp, n>& vec, bool copyData)$/;"	f	class:cv::Mat
Mat	opencv2/core/mat.inl.hpp	/^Mat::Mat(const std::vector<_Tp>& vec, bool copyData)$/;"	f	class:cv::Mat
Mat	opencv2/core/mat.inl.hpp	/^Mat::Mat(const std::vector<int>& _sz, int _type)$/;"	f	class:cv::Mat
Mat	opencv2/core/mat.inl.hpp	/^Mat::Mat(const std::vector<int>& _sz, int _type, const Scalar& _s)$/;"	f	class:cv::Mat
Mat	opencv2/core/mat.inl.hpp	/^Mat::Mat(int _dims, const int* _sz, int _type)$/;"	f	class:cv::Mat
Mat	opencv2/core/mat.inl.hpp	/^Mat::Mat(int _dims, const int* _sz, int _type, const Scalar& _s)$/;"	f	class:cv::Mat
Mat	opencv2/core/mat.inl.hpp	/^Mat::Mat(int _rows, int _cols, int _type)$/;"	f	class:cv::Mat
Mat	opencv2/core/mat.inl.hpp	/^Mat::Mat(int _rows, int _cols, int _type, const Scalar& _s)$/;"	f	class:cv::Mat
Mat	opencv2/core/mat.inl.hpp	/^Mat::Mat(int _rows, int _cols, int _type, void* _data, size_t _step)$/;"	f	class:cv::Mat
Mat1b	opencv2/core/mat.hpp	/^typedef Mat_<uchar> Mat1b;$/;"	t	namespace:cv
Mat1d	opencv2/core/mat.hpp	/^typedef Mat_<double> Mat1d;$/;"	t	namespace:cv
Mat1f	opencv2/core/mat.hpp	/^typedef Mat_<float> Mat1f;$/;"	t	namespace:cv
Mat1i	opencv2/core/mat.hpp	/^typedef Mat_<int>   Mat1i;$/;"	t	namespace:cv
Mat1s	opencv2/core/mat.hpp	/^typedef Mat_<short> Mat1s;$/;"	t	namespace:cv
Mat1w	opencv2/core/mat.hpp	/^typedef Mat_<ushort> Mat1w;$/;"	t	namespace:cv
Mat2b	opencv2/core/mat.hpp	/^typedef Mat_<Vec2b> Mat2b;$/;"	t	namespace:cv
Mat2d	opencv2/core/mat.hpp	/^typedef Mat_<Vec2d> Mat2d;$/;"	t	namespace:cv
Mat2f	opencv2/core/mat.hpp	/^typedef Mat_<Vec2f> Mat2f;$/;"	t	namespace:cv
Mat2i	opencv2/core/mat.hpp	/^typedef Mat_<Vec2i> Mat2i;$/;"	t	namespace:cv
Mat2s	opencv2/core/mat.hpp	/^typedef Mat_<Vec2s> Mat2s;$/;"	t	namespace:cv
Mat2w	opencv2/core/mat.hpp	/^typedef Mat_<Vec2w> Mat2w;$/;"	t	namespace:cv
Mat3	opencv2/core/affine.hpp	/^        typedef Matx<float_type, 3, 3> Mat3;$/;"	t	class:cv::Affine3
Mat3b	opencv2/core/mat.hpp	/^typedef Mat_<Vec3b> Mat3b;$/;"	t	namespace:cv
Mat3d	opencv2/core/mat.hpp	/^typedef Mat_<Vec3d> Mat3d;$/;"	t	namespace:cv
Mat3f	opencv2/core/mat.hpp	/^typedef Mat_<Vec3f> Mat3f;$/;"	t	namespace:cv
Mat3i	opencv2/core/mat.hpp	/^typedef Mat_<Vec3i> Mat3i;$/;"	t	namespace:cv
Mat3s	opencv2/core/mat.hpp	/^typedef Mat_<Vec3s> Mat3s;$/;"	t	namespace:cv
Mat3w	opencv2/core/mat.hpp	/^typedef Mat_<Vec3w> Mat3w;$/;"	t	namespace:cv
Mat4	opencv2/core/affine.hpp	/^        typedef Matx<float_type, 4, 4> Mat4;$/;"	t	class:cv::Affine3
Mat4b	opencv2/core/mat.hpp	/^typedef Mat_<Vec4b> Mat4b;$/;"	t	namespace:cv
Mat4d	opencv2/core/mat.hpp	/^typedef Mat_<Vec4d> Mat4d;$/;"	t	namespace:cv
Mat4f	opencv2/core/mat.hpp	/^typedef Mat_<Vec4f> Mat4f;$/;"	t	namespace:cv
Mat4i	opencv2/core/mat.hpp	/^typedef Mat_<Vec4i> Mat4i;$/;"	t	namespace:cv
Mat4s	opencv2/core/mat.hpp	/^typedef Mat_<Vec4s> Mat4s;$/;"	t	namespace:cv
Mat4w	opencv2/core/mat.hpp	/^typedef Mat_<Vec4w> Mat4w;$/;"	t	namespace:cv
MatAllocator	opencv2/core/mat.hpp	/^    MatAllocator() {}$/;"	f	class:cv::MatAllocator
MatAllocator	opencv2/core/mat.hpp	/^class CV_EXPORTS MatAllocator$/;"	c	namespace:cv
MatCommaInitializer_	opencv2/core/mat.hpp	/^template<typename _Tp> class MatCommaInitializer_$/;"	c	namespace:cv
MatCommaInitializer_	opencv2/core/mat.inl.hpp	/^MatCommaInitializer_<_Tp>::MatCommaInitializer_(Mat_<_Tp>* _m)$/;"	f	class:cv::MatCommaInitializer_
MatConstIterator	opencv2/core/base.hpp	/^class CV_EXPORTS MatConstIterator;$/;"	m	namespace:cv	typeref:class:cv::CV_EXPORTS
MatConstIterator	opencv2/core/mat.hpp	/^class CV_EXPORTS MatConstIterator$/;"	c	namespace:cv
MatConstIterator	opencv2/core/mat.inl.hpp	/^MatConstIterator::MatConstIterator()$/;"	f	class:cv::MatConstIterator
MatConstIterator	opencv2/core/mat.inl.hpp	/^MatConstIterator::MatConstIterator(const Mat* _m)$/;"	f	class:cv::MatConstIterator
MatConstIterator	opencv2/core/mat.inl.hpp	/^MatConstIterator::MatConstIterator(const Mat* _m, Point _pt)$/;"	f	class:cv::MatConstIterator
MatConstIterator	opencv2/core/mat.inl.hpp	/^MatConstIterator::MatConstIterator(const Mat* _m, int _row, int _col)$/;"	f	class:cv::MatConstIterator
MatConstIterator	opencv2/core/mat.inl.hpp	/^MatConstIterator::MatConstIterator(const MatConstIterator& it)$/;"	f	class:cv::MatConstIterator
MatConstIterator_	opencv2/core/mat.hpp	/^class MatConstIterator_ : public MatConstIterator$/;"	c	namespace:cv
MatConstIterator_	opencv2/core/mat.inl.hpp	/^MatConstIterator_<_Tp>::MatConstIterator_()$/;"	f	class:cv::MatConstIterator_
MatConstIterator_	opencv2/core/mat.inl.hpp	/^MatConstIterator_<_Tp>::MatConstIterator_(const MatConstIterator_& it)$/;"	f	class:cv::MatConstIterator_
MatConstIterator_	opencv2/core/mat.inl.hpp	/^MatConstIterator_<_Tp>::MatConstIterator_(const Mat_<_Tp>* _m)$/;"	f	class:cv::MatConstIterator_
MatConstIterator_	opencv2/core/mat.inl.hpp	/^MatConstIterator_<_Tp>::MatConstIterator_(const Mat_<_Tp>* _m, Point _pt)$/;"	f	class:cv::MatConstIterator_
MatConstIterator_	opencv2/core/mat.inl.hpp	/^MatConstIterator_<_Tp>::MatConstIterator_(const Mat_<_Tp>* _m, int _row, int _col)$/;"	f	class:cv::MatConstIterator_
MatExpr	opencv2/core/base.hpp	/^class CV_EXPORTS MatExpr;$/;"	m	namespace:cv	typeref:class:cv::CV_EXPORTS
MatExpr	opencv2/core/mat.hpp	/^class CV_EXPORTS MatExpr$/;"	c	namespace:cv
MatExpr	opencv2/core/mat.inl.hpp	/^MatExpr::MatExpr()$/;"	f	class:cv::MatExpr
MatExpr	opencv2/core/mat.inl.hpp	/^MatExpr::MatExpr(const MatOp* _op, int _flags, const Mat& _a, const Mat& _b,$/;"	f	class:cv::MatExpr
MatIterator_	opencv2/core/mat.hpp	/^class MatIterator_ : public MatConstIterator_<_Tp>$/;"	c	namespace:cv
MatIterator_	opencv2/core/mat.inl.hpp	/^MatIterator_<_Tp>::MatIterator_()$/;"	f	class:cv::MatIterator_
MatIterator_	opencv2/core/mat.inl.hpp	/^MatIterator_<_Tp>::MatIterator_(Mat_<_Tp>* _m)$/;"	f	class:cv::MatIterator_
MatIterator_	opencv2/core/mat.inl.hpp	/^MatIterator_<_Tp>::MatIterator_(Mat_<_Tp>* _m, Point _pt)$/;"	f	class:cv::MatIterator_
MatIterator_	opencv2/core/mat.inl.hpp	/^MatIterator_<_Tp>::MatIterator_(Mat_<_Tp>* _m, const int* _idx)$/;"	f	class:cv::MatIterator_
MatIterator_	opencv2/core/mat.inl.hpp	/^MatIterator_<_Tp>::MatIterator_(Mat_<_Tp>* _m, int _row, int _col)$/;"	f	class:cv::MatIterator_
MatIterator_	opencv2/core/mat.inl.hpp	/^MatIterator_<_Tp>::MatIterator_(const MatIterator_& it)$/;"	f	class:cv::MatIterator_
MatND	opencv2/core/base.hpp	/^typedef Mat MatND;$/;"	t	namespace:cv
MatOp	opencv2/core/mat.hpp	/^class CV_EXPORTS MatOp$/;"	c	namespace:cv
MatSize	opencv2/core/mat.hpp	/^struct CV_EXPORTS MatSize$/;"	s	namespace:cv
MatSize	opencv2/core/mat.inl.hpp	/^MatSize::MatSize(int* _p)$/;"	f	class:cv::MatSize
MatStep	opencv2/core/mat.hpp	/^struct CV_EXPORTS MatStep$/;"	s	namespace:cv
MatStep	opencv2/core/mat.inl.hpp	/^MatStep::MatStep()$/;"	f	class:cv::MatStep
MatStep	opencv2/core/mat.inl.hpp	/^MatStep::MatStep(size_t s)$/;"	f	class:cv::MatStep
Mat_	opencv2/core/mat.hpp	/^template<typename _Tp> class Mat_ : public Mat$/;"	c	namespace:cv
Mat_	opencv2/core/mat.inl.hpp	/^Mat_<_Tp>::Mat_()$/;"	f	class:cv::Mat_
Mat_	opencv2/core/mat.inl.hpp	/^Mat_<_Tp>::Mat_(Mat&& m)$/;"	f	class:cv::Mat_
Mat_	opencv2/core/mat.inl.hpp	/^Mat_<_Tp>::Mat_(MatExpr&& e)$/;"	f	class:cv::Mat_
Mat_	opencv2/core/mat.inl.hpp	/^Mat_<_Tp>::Mat_(Mat_&& m)$/;"	f	class:cv::Mat_
Mat_	opencv2/core/mat.inl.hpp	/^Mat_<_Tp>::Mat_(Size _sz)$/;"	f	class:cv::Mat_
Mat_	opencv2/core/mat.inl.hpp	/^Mat_<_Tp>::Mat_(Size _sz, const _Tp& value)$/;"	f	class:cv::Mat_
Mat_	opencv2/core/mat.inl.hpp	/^Mat_<_Tp>::Mat_(const Mat& m)$/;"	f	class:cv::Mat_
Mat_	opencv2/core/mat.inl.hpp	/^Mat_<_Tp>::Mat_(const MatCommaInitializer_<_Tp>& commaInitializer)$/;"	f	class:cv::Mat_
Mat_	opencv2/core/mat.inl.hpp	/^Mat_<_Tp>::Mat_(const MatExpr& e)$/;"	f	class:cv::Mat_
Mat_	opencv2/core/mat.inl.hpp	/^Mat_<_Tp>::Mat_(const Mat_& m)$/;"	f	class:cv::Mat_
Mat_	opencv2/core/mat.inl.hpp	/^Mat_<_Tp>::Mat_(const Mat_& m, const Range& _rowRange, const Range& _colRange)$/;"	f	class:cv::Mat_
Mat_	opencv2/core/mat.inl.hpp	/^Mat_<_Tp>::Mat_(const Mat_& m, const Rect& roi)$/;"	f	class:cv::Mat_
Mat_	opencv2/core/mat.inl.hpp	/^Mat_<_Tp>::Mat_(const Mat_<_Tp>& m, const Range* ranges)$/;"	f	class:cv::Mat_
Mat_	opencv2/core/mat.inl.hpp	/^Mat_<_Tp>::Mat_(const Mat_<_Tp>& m, const std::vector<Range>& ranges)$/;"	f	class:cv::Mat_
Mat_	opencv2/core/mat.inl.hpp	/^Mat_<_Tp>::Mat_(const Matx<typename DataType<_Tp>::channel_type, m, n>& M, bool copyData)$/;"	f	class:cv::Mat_
Mat_	opencv2/core/mat.inl.hpp	/^Mat_<_Tp>::Mat_(const Point3_<typename DataType<_Tp>::channel_type>& pt, bool copyData)$/;"	f	class:cv::Mat_
Mat_	opencv2/core/mat.inl.hpp	/^Mat_<_Tp>::Mat_(const Point_<typename DataType<_Tp>::channel_type>& pt, bool copyData)$/;"	f	class:cv::Mat_
Mat_	opencv2/core/mat.inl.hpp	/^Mat_<_Tp>::Mat_(const Vec<typename DataType<_Tp>::channel_type, n>& vec, bool copyData)$/;"	f	class:cv::Mat_
Mat_	opencv2/core/mat.inl.hpp	/^Mat_<_Tp>::Mat_(const std::vector<_Tp>& vec, bool copyData)$/;"	f	class:cv::Mat_
Mat_	opencv2/core/mat.inl.hpp	/^Mat_<_Tp>::Mat_(int _dims, const int* _sz)$/;"	f	class:cv::Mat_
Mat_	opencv2/core/mat.inl.hpp	/^Mat_<_Tp>::Mat_(int _dims, const int* _sz, _Tp* _data, const size_t* _steps)$/;"	f	class:cv::Mat_
Mat_	opencv2/core/mat.inl.hpp	/^Mat_<_Tp>::Mat_(int _dims, const int* _sz, const _Tp& _s)$/;"	f	class:cv::Mat_
Mat_	opencv2/core/mat.inl.hpp	/^Mat_<_Tp>::Mat_(int _rows, int _cols)$/;"	f	class:cv::Mat_
Mat_	opencv2/core/mat.inl.hpp	/^Mat_<_Tp>::Mat_(int _rows, int _cols, _Tp* _data, size_t steps)$/;"	f	class:cv::Mat_
Mat_	opencv2/core/mat.inl.hpp	/^Mat_<_Tp>::Mat_(int _rows, int _cols, const _Tp& value)$/;"	f	class:cv::Mat_
MatchesInfo	opencv2/stitching/detail/matchers.hpp	/^struct CV_EXPORTS MatchesInfo$/;"	s	namespace:cv::detail
Matrix	opencv2/flann/matrix.h	/^    Matrix() : rows(0), cols(0), stride(0), data(NULL)$/;"	f	class:cvflann::Matrix
Matrix	opencv2/flann/matrix.h	/^    Matrix(T* data_, size_t rows_, size_t cols_, size_t stride_ = 0) :$/;"	f	class:cvflann::Matrix
Matrix	opencv2/flann/matrix.h	/^class Matrix$/;"	c	namespace:cvflann
Matx	opencv2/core/matx.hpp	/^Matx<_Tp, m, n>::Matx()$/;"	f	class:cv::Matx
Matx	opencv2/core/matx.hpp	/^Matx<_Tp, m, n>::Matx(_Tp v0)$/;"	f	class:cv::Matx
Matx	opencv2/core/matx.hpp	/^Matx<_Tp, m, n>::Matx(_Tp v0, _Tp v1)$/;"	f	class:cv::Matx
Matx	opencv2/core/matx.hpp	/^Matx<_Tp, m, n>::Matx(_Tp v0, _Tp v1, _Tp v2)$/;"	f	class:cv::Matx
Matx	opencv2/core/matx.hpp	/^Matx<_Tp, m, n>::Matx(_Tp v0, _Tp v1, _Tp v2, _Tp v3)$/;"	f	class:cv::Matx
Matx	opencv2/core/matx.hpp	/^Matx<_Tp, m, n>::Matx(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4)$/;"	f	class:cv::Matx
Matx	opencv2/core/matx.hpp	/^Matx<_Tp, m, n>::Matx(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5)$/;"	f	class:cv::Matx
Matx	opencv2/core/matx.hpp	/^Matx<_Tp, m, n>::Matx(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5, _Tp v6)$/;"	f	class:cv::Matx
Matx	opencv2/core/matx.hpp	/^Matx<_Tp, m, n>::Matx(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5, _Tp v6, _Tp v7)$/;"	f	class:cv::Matx
Matx	opencv2/core/matx.hpp	/^Matx<_Tp, m, n>::Matx(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5, _Tp v6, _Tp v7, _Tp v8)$/;"	f	class:cv::Matx
Matx	opencv2/core/matx.hpp	/^Matx<_Tp, m, n>::Matx(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5, _Tp v6, _Tp v7, _Tp v8, _Tp v9)$/;"	f	class:cv::Matx
Matx	opencv2/core/matx.hpp	/^Matx<_Tp, m, n>::Matx(const _Tp* values)$/;"	f	class:cv::Matx
Matx	opencv2/core/matx.hpp	/^Matx<_Tp,m,n>::Matx(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5, _Tp v6, _Tp v7, _Tp v8, _Tp v9, _Tp v10, _Tp v11)$/;"	f	class:cv::Matx
Matx	opencv2/core/matx.hpp	/^Matx<_Tp,m,n>::Matx(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5, _Tp v6, _Tp v7, _Tp v8, _Tp v9, _Tp v10, _Tp v11, _Tp v12, _Tp v13)$/;"	f	class:cv::Matx
Matx	opencv2/core/matx.hpp	/^Matx<_Tp,m,n>::Matx(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5, _Tp v6, _Tp v7, _Tp v8, _Tp v9, _Tp v10, _Tp v11, _Tp v12, _Tp v13, _Tp v14, _Tp v15)$/;"	f	class:cv::Matx
Matx	opencv2/core/matx.hpp	/^Matx<_Tp,m,n>::Matx(const Matx<_Tp, m, l>& a, const Matx<_Tp, l, n>& b, Matx_MatMulOp)$/;"	f	class:cv::Matx
Matx	opencv2/core/matx.hpp	/^Matx<_Tp,m,n>::Matx(const Matx<_Tp, m, n>& a, _T2 alpha, Matx_ScaleOp)$/;"	f	class:cv::Matx
Matx	opencv2/core/matx.hpp	/^Matx<_Tp,m,n>::Matx(const Matx<_Tp, m, n>& a, const Matx<_Tp, m, n>& b, Matx_AddOp)$/;"	f	class:cv::Matx
Matx	opencv2/core/matx.hpp	/^Matx<_Tp,m,n>::Matx(const Matx<_Tp, m, n>& a, const Matx<_Tp, m, n>& b, Matx_DivOp)$/;"	f	class:cv::Matx
Matx	opencv2/core/matx.hpp	/^Matx<_Tp,m,n>::Matx(const Matx<_Tp, m, n>& a, const Matx<_Tp, m, n>& b, Matx_MulOp)$/;"	f	class:cv::Matx
Matx	opencv2/core/matx.hpp	/^Matx<_Tp,m,n>::Matx(const Matx<_Tp, m, n>& a, const Matx<_Tp, m, n>& b, Matx_SubOp)$/;"	f	class:cv::Matx
Matx	opencv2/core/matx.hpp	/^Matx<_Tp,m,n>::Matx(const Matx<_Tp, n, m>& a, Matx_TOp)$/;"	f	class:cv::Matx
Matx	opencv2/core/matx.hpp	/^template<typename _Tp, int m, int n> class Matx$/;"	c	namespace:cv
Matx12d	opencv2/core/matx.hpp	/^typedef Matx<double, 1, 2> Matx12d;$/;"	t	namespace:cv
Matx12f	opencv2/core/matx.hpp	/^typedef Matx<float, 1, 2> Matx12f;$/;"	t	namespace:cv
Matx13d	opencv2/core/matx.hpp	/^typedef Matx<double, 1, 3> Matx13d;$/;"	t	namespace:cv
Matx13f	opencv2/core/matx.hpp	/^typedef Matx<float, 1, 3> Matx13f;$/;"	t	namespace:cv
Matx14d	opencv2/core/matx.hpp	/^typedef Matx<double, 1, 4> Matx14d;$/;"	t	namespace:cv
Matx14f	opencv2/core/matx.hpp	/^typedef Matx<float, 1, 4> Matx14f;$/;"	t	namespace:cv
Matx16d	opencv2/core/matx.hpp	/^typedef Matx<double, 1, 6> Matx16d;$/;"	t	namespace:cv
Matx16f	opencv2/core/matx.hpp	/^typedef Matx<float, 1, 6> Matx16f;$/;"	t	namespace:cv
Matx21d	opencv2/core/matx.hpp	/^typedef Matx<double, 2, 1> Matx21d;$/;"	t	namespace:cv
Matx21f	opencv2/core/matx.hpp	/^typedef Matx<float, 2, 1> Matx21f;$/;"	t	namespace:cv
Matx22d	opencv2/core/matx.hpp	/^typedef Matx<double, 2, 2> Matx22d;$/;"	t	namespace:cv
Matx22f	opencv2/core/matx.hpp	/^typedef Matx<float, 2, 2> Matx22f;$/;"	t	namespace:cv
Matx23d	opencv2/core/matx.hpp	/^typedef Matx<double, 2, 3> Matx23d;$/;"	t	namespace:cv
Matx23f	opencv2/core/matx.hpp	/^typedef Matx<float, 2, 3> Matx23f;$/;"	t	namespace:cv
Matx31d	opencv2/core/matx.hpp	/^typedef Matx<double, 3, 1> Matx31d;$/;"	t	namespace:cv
Matx31f	opencv2/core/matx.hpp	/^typedef Matx<float, 3, 1> Matx31f;$/;"	t	namespace:cv
Matx32d	opencv2/core/matx.hpp	/^typedef Matx<double, 3, 2> Matx32d;$/;"	t	namespace:cv
Matx32f	opencv2/core/matx.hpp	/^typedef Matx<float, 3, 2> Matx32f;$/;"	t	namespace:cv
Matx33d	opencv2/core/matx.hpp	/^typedef Matx<double, 3, 3> Matx33d;$/;"	t	namespace:cv
Matx33f	opencv2/core/matx.hpp	/^typedef Matx<float, 3, 3> Matx33f;$/;"	t	namespace:cv
Matx34d	opencv2/core/matx.hpp	/^typedef Matx<double, 3, 4> Matx34d;$/;"	t	namespace:cv
Matx34f	opencv2/core/matx.hpp	/^typedef Matx<float, 3, 4> Matx34f;$/;"	t	namespace:cv
Matx41d	opencv2/core/matx.hpp	/^typedef Matx<double, 4, 1> Matx41d;$/;"	t	namespace:cv
Matx41f	opencv2/core/matx.hpp	/^typedef Matx<float, 4, 1> Matx41f;$/;"	t	namespace:cv
Matx43d	opencv2/core/matx.hpp	/^typedef Matx<double, 4, 3> Matx43d;$/;"	t	namespace:cv
Matx43f	opencv2/core/matx.hpp	/^typedef Matx<float, 4, 3> Matx43f;$/;"	t	namespace:cv
Matx44d	opencv2/core/matx.hpp	/^typedef Matx<double, 4, 4> Matx44d;$/;"	t	namespace:cv
Matx44f	opencv2/core/matx.hpp	/^typedef Matx<float, 4, 4> Matx44f;$/;"	t	namespace:cv
Matx61d	opencv2/core/matx.hpp	/^typedef Matx<double, 6, 1> Matx61d;$/;"	t	namespace:cv
Matx61f	opencv2/core/matx.hpp	/^typedef Matx<float, 6, 1> Matx61f;$/;"	t	namespace:cv
Matx66d	opencv2/core/matx.hpp	/^typedef Matx<double, 6, 6> Matx66d;$/;"	t	namespace:cv
Matx66f	opencv2/core/matx.hpp	/^typedef Matx<float, 6, 6> Matx66f;$/;"	t	namespace:cv
MatxCommaInitializer	opencv2/core/matx.hpp	/^MatxCommaInitializer<_Tp, m, n>::MatxCommaInitializer(Matx<_Tp, m, n>* _mtx)$/;"	f	class:cv::MatxCommaInitializer
MatxCommaInitializer	opencv2/core/matx.hpp	/^template<typename _Tp, int m, int n> class MatxCommaInitializer$/;"	c	namespace:cv
Matx_AddOp	opencv2/core/matx.hpp	/^struct CV_EXPORTS Matx_AddOp {};$/;"	s	namespace:cv
Matx_DetOp	opencv2/core/matx.hpp	/^template<typename _Tp, int m> struct Matx_DetOp$/;"	s	namespace:cv::internal
Matx_DetOp	opencv2/core/matx.hpp	/^template<typename _Tp> struct Matx_DetOp<_Tp, 1>$/;"	s	namespace:cv::internal
Matx_DetOp	opencv2/core/matx.hpp	/^template<typename _Tp> struct Matx_DetOp<_Tp, 2>$/;"	s	namespace:cv::internal
Matx_DetOp	opencv2/core/matx.hpp	/^template<typename _Tp> struct Matx_DetOp<_Tp, 3>$/;"	s	namespace:cv::internal
Matx_DivOp	opencv2/core/matx.hpp	/^struct CV_EXPORTS Matx_DivOp {};$/;"	s	namespace:cv
Matx_FastInvOp	opencv2/core/operations.hpp	/^template<typename _Tp, int m> struct Matx_FastInvOp$/;"	s	namespace:cv::internal
Matx_FastInvOp	opencv2/core/operations.hpp	/^template<typename _Tp> struct Matx_FastInvOp<_Tp, 2>$/;"	s	namespace:cv::internal
Matx_FastInvOp	opencv2/core/operations.hpp	/^template<typename _Tp> struct Matx_FastInvOp<_Tp, 3>$/;"	s	namespace:cv::internal
Matx_FastSolveOp	opencv2/core/operations.hpp	/^template<typename _Tp, int m, int n> struct Matx_FastSolveOp$/;"	s	namespace:cv::internal
Matx_FastSolveOp	opencv2/core/operations.hpp	/^template<typename _Tp> struct Matx_FastSolveOp<_Tp, 2, 1>$/;"	s	namespace:cv::internal
Matx_FastSolveOp	opencv2/core/operations.hpp	/^template<typename _Tp> struct Matx_FastSolveOp<_Tp, 3, 1>$/;"	s	namespace:cv::internal
Matx_MatMulOp	opencv2/core/matx.hpp	/^struct CV_EXPORTS Matx_MatMulOp {};$/;"	s	namespace:cv
Matx_MulOp	opencv2/core/matx.hpp	/^struct CV_EXPORTS Matx_MulOp {};$/;"	s	namespace:cv
Matx_ScaleOp	opencv2/core/matx.hpp	/^struct CV_EXPORTS Matx_ScaleOp {};$/;"	s	namespace:cv
Matx_SubOp	opencv2/core/matx.hpp	/^struct CV_EXPORTS Matx_SubOp {};$/;"	s	namespace:cv
Matx_TOp	opencv2/core/matx.hpp	/^struct CV_EXPORTS Matx_TOp {};$/;"	s	namespace:cv
Max	opencv2/cudev/grid/reduce_to_vec.hpp	/^template <typename T> struct Max : maximum<T>$/;"	s	namespace:cv::cudev
MaxDistance	opencv2/flann/dist.h	/^struct MaxDistance$/;"	s	namespace:cvflann
MeasurementMatr	opencv2/video/tracking_c.h	/^    float* MeasurementMatr;     \/* =measurement_matrix->data.fl *\/$/;"	m	struct:CvKalman
MemStorage	opencv2/core/core_c.h	/^typedef Ptr<CvMemStorage> MemStorage;$/;"	t	namespace:cv
MercatorProjector	opencv2/stitching/detail/warpers.hpp	/^struct CV_EXPORTS MercatorProjector : ProjectorBase$/;"	s	namespace:cv::detail
MercatorWarper	opencv2/stitching/detail/warpers.hpp	/^    MercatorWarper(float scale) { projector_.scale = scale; }$/;"	f	class:cv::detail::MercatorWarper
MercatorWarper	opencv2/stitching/detail/warpers.hpp	/^class CV_EXPORTS MercatorWarper : public RotationWarperBase<MercatorProjector>$/;"	c	namespace:cv::detail
MercatorWarper	opencv2/stitching/warpers.hpp	/^class MercatorWarper: public WarperCreator$/;"	c	namespace:cv
MergeDebevec	opencv2/photo.hpp	/^class CV_EXPORTS_W MergeDebevec : public MergeExposures$/;"	c	namespace:cv
MergeExposures	opencv2/photo.hpp	/^class CV_EXPORTS_W MergeExposures : public Algorithm$/;"	c	namespace:cv
MergeImpl	opencv2/cudev/grid/detail/split_merge.hpp	/^    template <class Policy> struct MergeImpl<2, Policy>$/;"	s	namespace:cv::cudev::grid_split_merge_detail
MergeImpl	opencv2/cudev/grid/detail/split_merge.hpp	/^    template <class Policy> struct MergeImpl<3, Policy>$/;"	s	namespace:cv::cudev::grid_split_merge_detail
MergeImpl	opencv2/cudev/grid/detail/split_merge.hpp	/^    template <class Policy> struct MergeImpl<4, Policy>$/;"	s	namespace:cv::cudev::grid_split_merge_detail
MergeMertens	opencv2/photo.hpp	/^class CV_EXPORTS_W MergeMertens : public MergeExposures$/;"	c	namespace:cv
MergeRobertson	opencv2/photo.hpp	/^class CV_EXPORTS_W MergeRobertson : public MergeExposures$/;"	c	namespace:cv
Methods	opencv2/ml.hpp	/^    enum Methods {$/;"	g	class:cv::ml::LogisticRegression
Min	opencv2/cudev/grid/reduce_to_vec.hpp	/^template <typename T> struct Min : minimum<T>$/;"	s	namespace:cv::cudev
MinMaxReductor	opencv2/cudev/grid/detail/reduce.hpp	/^        __device__ __forceinline__ MinMaxReductor()$/;"	f	struct:cv::cudev::grid_reduce_detail::MinMaxReductor
MinMaxReductor	opencv2/cudev/grid/detail/reduce.hpp	/^    template <class Op, typename src_type, typename work_type> struct MinMaxReductor$/;"	s	namespace:cv::cudev::grid_reduce_detail
MinMaxReductor	opencv2/cudev/grid/detail/reduce.hpp	/^    template <typename src_type, typename work_type> struct MinMaxReductor<both, src_type, work_type>$/;"	s	namespace:cv::cudev::grid_reduce_detail
MinProblemSolver	opencv2/core/optim.hpp	/^class CV_EXPORTS MinProblemSolver : public Algorithm$/;"	c	namespace:cv
MinkowskiDistance	opencv2/flann/dist.h	/^    MinkowskiDistance(int order_) : order(order_) {}$/;"	f	struct:cvflann::MinkowskiDistance
MinkowskiDistance	opencv2/flann/dist.h	/^struct MinkowskiDistance$/;"	s	namespace:cvflann
Mode	opencv2/core/persistence.hpp	/^    enum Mode$/;"	g	class:cv::FileStorage
Mode	opencv2/stitching.hpp	/^    enum Mode$/;"	g	class:cv::Stitcher
Moments	opencv2/core/types.hpp	/^class CV_EXPORTS_W_MAP Moments$/;"	c	namespace:cv
Monochrome	opencv2/cudacodec.hpp	/^    Monochrome = 0,$/;"	e	enum:cv::cudacodec::ChromaFormat
MoreAccurateMotionWobbleSuppressor	opencv2/videostab/wobble_suppression.hpp	/^class CV_EXPORTS MoreAccurateMotionWobbleSuppressor : public MoreAccurateMotionWobbleSuppressorBase$/;"	c	namespace:cv::videostab
MoreAccurateMotionWobbleSuppressorBase	opencv2/videostab/wobble_suppression.hpp	/^    MoreAccurateMotionWobbleSuppressorBase() { setPeriod(30); }$/;"	f	class:cv::videostab::MoreAccurateMotionWobbleSuppressorBase
MoreAccurateMotionWobbleSuppressorBase	opencv2/videostab/wobble_suppression.hpp	/^class CV_EXPORTS MoreAccurateMotionWobbleSuppressorBase : public WobbleSuppressorBase$/;"	c	namespace:cv::videostab
MoreAccurateMotionWobbleSuppressorGpu	opencv2/videostab/wobble_suppression.hpp	/^class CV_EXPORTS MoreAccurateMotionWobbleSuppressorGpu : public MoreAccurateMotionWobbleSuppressorBase$/;"	c	namespace:cv::videostab
Morph	opencv2/imgproc/hal/hal.hpp	/^struct  CV_EXPORTS Morph$/;"	s	namespace:cv::hal
MorphShapes	opencv2/imgproc.hpp	/^enum MorphShapes {$/;"	g	namespace:cv
MorphShapes_c	opencv2/imgproc/types_c.h	/^enum MorphShapes_c$/;"	g
MorphTypes	opencv2/imgproc.hpp	/^enum MorphTypes{$/;"	g	namespace:cv
MotionEstimatorBase	opencv2/videostab/global_motion.hpp	/^    MotionEstimatorBase(MotionModel model) { setMotionModel(model); }$/;"	f	class:cv::videostab::MotionEstimatorBase
MotionEstimatorBase	opencv2/videostab/global_motion.hpp	/^class CV_EXPORTS MotionEstimatorBase$/;"	c	namespace:cv::videostab
MotionEstimatorL1	opencv2/videostab/global_motion.hpp	/^class CV_EXPORTS MotionEstimatorL1 : public MotionEstimatorBase$/;"	c	namespace:cv::videostab
MotionEstimatorRansacL2	opencv2/videostab/global_motion.hpp	/^class CV_EXPORTS MotionEstimatorRansacL2 : public MotionEstimatorBase$/;"	c	namespace:cv::videostab
MotionFilterBase	opencv2/videostab/motion_stabilizing.hpp	/^class CV_EXPORTS MotionFilterBase : public IMotionStabilizer$/;"	c	namespace:cv::videostab
MotionInpainter	opencv2/videostab/inpainting.hpp	/^class CV_EXPORTS MotionInpainter : public InpainterBase$/;"	c	namespace:cv::videostab
MotionModel	opencv2/videostab/motion_core.hpp	/^enum MotionModel$/;"	g	namespace:cv::videostab
MotionStabilizationPipeline	opencv2/videostab/motion_stabilizing.hpp	/^class CV_EXPORTS MotionStabilizationPipeline : public IMotionStabilizer$/;"	c	namespace:cv::videostab
MouseCallback	opencv2/highgui.hpp	/^typedef void (*MouseCallback)(int event, int x, int y, int flags, void* userdata);$/;"	t	namespace:cv
MouseEventFlags	opencv2/highgui.hpp	/^enum MouseEventFlags {$/;"	g	namespace:cv
MouseEventTypes	opencv2/highgui.hpp	/^enum MouseEventTypes {$/;"	g	namespace:cv
MultiBandBlender	opencv2/stitching/detail/blenders.hpp	/^class CV_EXPORTS MultiBandBlender : public Blender$/;"	c	namespace:cv::detail
Mutex	opencv2/core/utility.hpp	/^class CV_EXPORTS Mutex$/;"	c	namespace:cv
N	opencv2/core.hpp	/^    enum PeriodParameters {N = 624, M = 397};$/;"	e	enum:cv::RNG_MT19937::PeriodParameters
N1c	opencv2/cudalegacy.hpp	/^    int N1c; \/\/!< Number of color vectors used to model normal background color variation at a given pixel.$/;"	m	struct:cv::cuda::FGDParams
N1cc	opencv2/cudalegacy.hpp	/^    int N1cc; \/\/!< Number of color co-occurrence vectors used to model normal background color variation at a given pixel.$/;"	m	struct:cv::cuda::FGDParams
N2c	opencv2/cudalegacy.hpp	/^    int N2c; \/\/!< Number of color vectors retained at given pixel.  Must be > N1c, typically ~ 5\/3 of N1c.$/;"	m	struct:cv::cuda::FGDParams
N2cc	opencv2/cudalegacy.hpp	/^    int N2cc; \/\/!< Number of color co-occurrence vectors retained at given pixel.  Must be > N1cc, typically ~ 5\/3 of N1cc.$/;"	m	struct:cv::cuda::FGDParams
NAMED	opencv2/core/persistence.hpp	/^        NAMED     = 64  \/\/!< the node has a name (i.e. it is element of a mapping)$/;"	e	enum:cv::FileNode::Type
NAME_EXPECTED	opencv2/core/persistence.hpp	/^        NAME_EXPECTED  = 2,$/;"	e	enum:cv::FileStorage::__anon313
NATIVE_DOUBLE	opencv2/core/cuda.hpp	/^    NATIVE_DOUBLE = FEATURE_SET_COMPUTE_13,$/;"	e	enum:cv::cuda::FeatureSet
NAryMatIterator	opencv2/core/mat.hpp	/^class CV_EXPORTS NAryMatIterator$/;"	c	namespace:cv
NCVBroxOpticalFlowDescriptor	opencv2/cudalegacy/NCVBroxOpticalFlow.hpp	/^struct NCVBroxOpticalFlowDescriptor$/;"	s
NCVDebugOutputHandler	opencv2/cudalegacy/NCV.hpp	/^typedef void NCVDebugOutputHandler(const cv::String &msg);$/;"	t
NCVMatrix	opencv2/cudalegacy/NCV.hpp	/^    NCVMatrix()$/;"	f	class:NCVMatrix
NCVMatrix	opencv2/cudalegacy/NCV.hpp	/^class NCVMatrix$/;"	c
NCVMatrixAlloc	opencv2/cudalegacy/NCV.hpp	/^    NCVMatrixAlloc(INCVMemAllocator &allocator_, Ncv32u width_, Ncv32u height_, Ncv32u pitch_=0)$/;"	f	class:NCVMatrixAlloc
NCVMatrixAlloc	opencv2/cudalegacy/NCV.hpp	/^class NCVMatrixAlloc : public NCVMatrix<T>$/;"	c
NCVMatrixReuse	opencv2/cudalegacy/NCV.hpp	/^    NCVMatrixReuse(const NCVMatrix<T> &mat, NcvRect32u roi)$/;"	f	class:NCVMatrixReuse
NCVMatrixReuse	opencv2/cudalegacy/NCV.hpp	/^    NCVMatrixReuse(const NCVMemSegment &memSegment, Ncv32u alignment, Ncv32u width_, Ncv32u height_, Ncv32u pitch_=0, NcvBool bSkipPitchCheck=false)$/;"	f	class:NCVMatrixReuse
NCVMatrixReuse	opencv2/cudalegacy/NCV.hpp	/^class NCVMatrixReuse : public NCVMatrix<T>$/;"	c
NCVMemNativeAllocator	opencv2/cudalegacy/NCV.hpp	/^class CV_EXPORTS NCVMemNativeAllocator : public INCVMemAllocator$/;"	c
NCVMemPtr	opencv2/cudalegacy/NCV.hpp	/^struct CV_EXPORTS NCVMemPtr$/;"	s
NCVMemSegment	opencv2/cudalegacy/NCV.hpp	/^struct CV_EXPORTS NCVMemSegment$/;"	s
NCVMemStackAllocator	opencv2/cudalegacy/NCV.hpp	/^class CV_EXPORTS NCVMemStackAllocator : public INCVMemAllocator$/;"	c
NCVMemoryType	opencv2/cudalegacy/NCV.hpp	/^enum NCVMemoryType$/;"	g
NCVMemoryTypeDevice	opencv2/cudalegacy/NCV.hpp	/^    NCVMemoryTypeDevice$/;"	e	enum:NCVMemoryType
NCVMemoryTypeHostPageable	opencv2/cudalegacy/NCV.hpp	/^    NCVMemoryTypeHostPageable,$/;"	e	enum:NCVMemoryType
NCVMemoryTypeHostPinned	opencv2/cudalegacy/NCV.hpp	/^    NCVMemoryTypeHostPinned,$/;"	e	enum:NCVMemoryType
NCVMemoryTypeNone	opencv2/cudalegacy/NCV.hpp	/^    NCVMemoryTypeNone,$/;"	e	enum:NCVMemoryType
NCVPipeObjDet_Default	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^    NCVPipeObjDet_Default               = 0x000,$/;"	e	enum:__anon333
NCVPipeObjDet_FindLargestObject	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^    NCVPipeObjDet_FindLargestObject     = 0x002,$/;"	e	enum:__anon333
NCVPipeObjDet_UseFairImageScaling	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^    NCVPipeObjDet_UseFairImageScaling   = 0x001,$/;"	e	enum:__anon333
NCVPipeObjDet_VisualizeInPlace	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^    NCVPipeObjDet_VisualizeInPlace      = 0x004,$/;"	e	enum:__anon333
NCVStatus	opencv2/cudalegacy/NCV.hpp	/^typedef Ncv32u NCVStatus;$/;"	t
NCVVector	opencv2/cudalegacy/NCV.hpp	/^    NCVVector()$/;"	f	class:NCVVector
NCVVector	opencv2/cudalegacy/NCV.hpp	/^class NCVVector$/;"	c
NCVVectorAlloc	opencv2/cudalegacy/NCV.hpp	/^    NCVVectorAlloc(INCVMemAllocator &allocator_, Ncv32u length_)$/;"	f	class:NCVVectorAlloc
NCVVectorAlloc	opencv2/cudalegacy/NCV.hpp	/^class NCVVectorAlloc : public NCVVector<T>$/;"	c
NCVVectorReuse	opencv2/cudalegacy/NCV.hpp	/^    NCVVectorReuse(const NCVMemSegment &memSegment, Ncv32u length_)$/;"	f	class:NCVVectorReuse
NCVVectorReuse	opencv2/cudalegacy/NCV.hpp	/^    explicit NCVVectorReuse(const NCVMemSegment &memSegment)$/;"	f	class:NCVVectorReuse
NCVVectorReuse	opencv2/cudalegacy/NCV.hpp	/^class NCVVectorReuse : public NCVVector<T>$/;"	c
NCV_ALLOCATOR_BAD_ALLOC	opencv2/cudalegacy/NCV.hpp	/^    NCV_ALLOCATOR_BAD_ALLOC,$/;"	e	enum:__anon332
NCV_ALLOCATOR_BAD_DEALLOC	opencv2/cudalegacy/NCV.hpp	/^    NCV_ALLOCATOR_BAD_DEALLOC,$/;"	e	enum:__anon332
NCV_ALLOCATOR_BAD_REUSE	opencv2/cudalegacy/NCV.hpp	/^    NCV_ALLOCATOR_BAD_REUSE,$/;"	e	enum:__anon332
NCV_ALLOCATOR_DEALLOC_ORDER	opencv2/cudalegacy/NCV.hpp	/^    NCV_ALLOCATOR_DEALLOC_ORDER,$/;"	e	enum:__anon332
NCV_ALLOCATOR_INSUFFICIENT_CAPACITY	opencv2/cudalegacy/NCV.hpp	/^    NCV_ALLOCATOR_INSUFFICIENT_CAPACITY,$/;"	e	enum:__anon332
NCV_ALLOCATOR_NOT_INITIALIZED	opencv2/cudalegacy/NCV.hpp	/^    NCV_ALLOCATOR_NOT_INITIALIZED,$/;"	e	enum:__anon332
NCV_CT_ASSERT	opencv2/cudalegacy/NCV.hpp	89;"	d
NCV_CT_PREP_PASTE	opencv2/cudalegacy/NCV.hpp	83;"	d
NCV_CT_PREP_PASTE_AUX	opencv2/cudalegacy/NCV.hpp	82;"	d
NCV_CUDA_ERROR	opencv2/cudalegacy/NCV.hpp	/^    NCV_CUDA_ERROR,$/;"	e	enum:__anon332
NCV_DIMENSIONS_INVALID	opencv2/cudalegacy/NCV.hpp	/^    NCV_DIMENSIONS_INVALID,$/;"	e	enum:__anon332
NCV_FILE_ERROR	opencv2/cudalegacy/NCV.hpp	/^    NCV_FILE_ERROR,$/;"	e	enum:__anon332
NCV_HAAR_INVALID_PIXEL_STEP	opencv2/cudalegacy/NCV.hpp	/^    NCV_HAAR_INVALID_PIXEL_STEP,$/;"	e	enum:__anon332
NCV_HAAR_TOO_LARGE_FEATURES	opencv2/cudalegacy/NCV.hpp	/^    NCV_HAAR_TOO_LARGE_FEATURES,$/;"	e	enum:__anon332
NCV_HAAR_TOO_MANY_FEATURES_IN_CASCADE	opencv2/cudalegacy/NCV.hpp	/^    NCV_HAAR_TOO_MANY_FEATURES_IN_CASCADE,$/;"	e	enum:__anon332
NCV_HAAR_TOO_MANY_FEATURES_IN_CLASSIFIER	opencv2/cudalegacy/NCV.hpp	/^    NCV_HAAR_TOO_MANY_FEATURES_IN_CLASSIFIER,$/;"	e	enum:__anon332
NCV_HAAR_XML_LOADING_EXCEPTION	opencv2/cudalegacy/NCV.hpp	/^    NCV_HAAR_XML_LOADING_EXCEPTION,$/;"	e	enum:__anon332
NCV_INCONSISTENT_INPUT	opencv2/cudalegacy/NCV.hpp	/^    NCV_INCONSISTENT_INPUT,$/;"	e	enum:__anon332
NCV_INVALID_ROI	opencv2/cudalegacy/NCV.hpp	/^    NCV_INVALID_ROI,$/;"	e	enum:__anon332
NCV_INVALID_SCALE	opencv2/cudalegacy/NCV.hpp	/^    NCV_INVALID_SCALE,$/;"	e	enum:__anon332
NCV_INVALID_STEP	opencv2/cudalegacy/NCV.hpp	/^    NCV_INVALID_STEP,$/;"	e	enum:__anon332
NCV_LAST_STATUS	opencv2/cudalegacy/NCV.hpp	/^    NCV_LAST_STATUS                           \/\/\/< Marker to continue error numeration in other files$/;"	e	enum:__anon332
NCV_MEM_COPY_ERROR	opencv2/cudalegacy/NCV.hpp	/^    NCV_MEM_COPY_ERROR,$/;"	e	enum:__anon332
NCV_MEM_INSUFFICIENT_CAPACITY	opencv2/cudalegacy/NCV.hpp	/^    NCV_MEM_INSUFFICIENT_CAPACITY,$/;"	e	enum:__anon332
NCV_MEM_RESIDENCE_ERROR	opencv2/cudalegacy/NCV.hpp	/^    NCV_MEM_RESIDENCE_ERROR,$/;"	e	enum:__anon332
NCV_NOIMPL_HAAR_TILTED_FEATURES	opencv2/cudalegacy/NCV.hpp	/^    NCV_NOIMPL_HAAR_TILTED_FEATURES,$/;"	e	enum:__anon332
NCV_NOT_IMPLEMENTED	opencv2/cudalegacy/NCV.hpp	/^    NCV_NOT_IMPLEMENTED,$/;"	e	enum:__anon332
NCV_NPP_ERROR	opencv2/cudalegacy/NCV.hpp	/^    NCV_NPP_ERROR,$/;"	e	enum:__anon332
NCV_NULL_PTR	opencv2/cudalegacy/NCV.hpp	/^    NCV_NULL_PTR,$/;"	e	enum:__anon332
NCV_RESET_SKIP_COND	opencv2/cudalegacy/NCV.hpp	383;"	d
NCV_SET_SKIP_COND	opencv2/cudalegacy/NCV.hpp	379;"	d
NCV_SKIP_COND_BEGIN	opencv2/cudalegacy/NCV.hpp	387;"	d
NCV_SKIP_COND_END	opencv2/cudalegacy/NCV.hpp	391;"	d
NCV_SUCCESS	opencv2/cudalegacy/NCV.hpp	/^    NCV_SUCCESS,$/;"	e	enum:__anon332
NCV_TEXTURE_BIND_ERROR	opencv2/cudalegacy/NCV.hpp	/^    NCV_TEXTURE_BIND_ERROR,$/;"	e	enum:__anon332
NCV_UNKNOWN_ERROR	opencv2/cudalegacy/NCV.hpp	/^    NCV_UNKNOWN_ERROR,$/;"	e	enum:__anon332
NCV_WARNING_HAAR_DETECTIONS_VECTOR_OVERFLOW	opencv2/cudalegacy/NCV.hpp	/^    NCV_WARNING_HAAR_DETECTIONS_VECTOR_OVERFLOW,$/;"	e	enum:__anon332
NEXT_AROUND_DST	opencv2/imgproc.hpp	/^           NEXT_AROUND_DST   = 0x22,$/;"	e	enum:cv::Subdiv2D::__anon390
NEXT_AROUND_LEFT	opencv2/imgproc.hpp	/^           NEXT_AROUND_LEFT  = 0x13,$/;"	e	enum:cv::Subdiv2D::__anon390
NEXT_AROUND_ORG	opencv2/imgproc.hpp	/^    enum { NEXT_AROUND_ORG   = 0x00,$/;"	e	enum:cv::Subdiv2D::__anon390
NEXT_AROUND_RIGHT	opencv2/imgproc.hpp	/^           NEXT_AROUND_RIGHT = 0x31,$/;"	e	enum:cv::Subdiv2D::__anon390
NNIndex	opencv2/flann/nn_index.h	/^class NNIndex$/;"	c	namespace:cvflann
NO	opencv2/stitching/detail/blenders.hpp	/^    enum { NO, FEATHER, MULTI_BAND };$/;"	e	enum:cv::detail::Blender::__anon95
NO	opencv2/stitching/detail/exposure_compensate.hpp	/^    enum { NO, GAIN, GAIN_BLOCKS };$/;"	e	enum:cv::detail::ExposureCompensator::__anon93
NONE	opencv2/core/mat.hpp	/^        NONE              = 0 << KIND_SHIFT,$/;"	e	enum:cv::_InputArray::__anon273
NONE	opencv2/core/opengl.hpp	/^        NONE            = 0,$/;"	e	enum:cv::ogl::Texture2D::Format
NONE	opencv2/core/persistence.hpp	/^        NONE      = 0, \/\/!< empty node$/;"	e	enum:cv::FileNode::Type
NONMAX_SUPPRESSION	opencv2/features2d.hpp	/^        THRESHOLD = 10000, NONMAX_SUPPRESSION = 10001,$/;"	e	enum:cv::AgastFeatureDetector::__anon378
NONMAX_SUPPRESSION	opencv2/features2d.hpp	/^        THRESHOLD = 10000, NONMAX_SUPPRESSION=10001, FAST_N=10002,$/;"	e	enum:cv::FastFeatureDetector::__anon377
NORMAL	opencv2/core.hpp	/^           NORMAL  = 1$/;"	e	enum:cv::RNG::__anon342
NORMAL_CLONE	opencv2/photo.hpp	/^    NORMAL_CLONE = 1,$/;"	e	enum:cv::__anon117
NORMCONV_FILTER	opencv2/photo.hpp	/^    NORMCONV_FILTER = 2$/;"	e	enum:cv::__anon118
NORM_HAMMING	opencv2/core/base.hpp	/^                 NORM_HAMMING   = 6,$/;"	e	enum:cv::NormTypes
NORM_HAMMING2	opencv2/core/base.hpp	/^                 NORM_HAMMING2  = 7,$/;"	e	enum:cv::NormTypes
NORM_INF	opencv2/core/base.hpp	/^enum NormTypes { NORM_INF       = 1,$/;"	e	enum:cv::NormTypes
NORM_L1	opencv2/core/base.hpp	/^                 NORM_L1        = 2,$/;"	e	enum:cv::NormTypes
NORM_L2	opencv2/core/base.hpp	/^                 NORM_L2        = 4,$/;"	e	enum:cv::NormTypes
NORM_L2SQR	opencv2/core/base.hpp	/^                 NORM_L2SQR     = 5,$/;"	e	enum:cv::NormTypes
NORM_MINMAX	opencv2/core/base.hpp	/^                 NORM_MINMAX    = 32 \/\/!< flag$/;"	e	enum:cv::NormTypes
NORM_RELATIVE	opencv2/core/base.hpp	/^                 NORM_RELATIVE  = 8, \/\/!< flag$/;"	e	enum:cv::NormTypes
NORM_TYPE_MASK	opencv2/core/base.hpp	/^                 NORM_TYPE_MASK = 7,$/;"	e	enum:cv::NormTypes
NOT_DRAW_SINGLE_POINTS	opencv2/features2d.hpp	/^          NOT_DRAW_SINGLE_POINTS = 2, \/\/!< Single keypoints will not be drawn.$/;"	e	enum:cv::DrawMatchesFlags::__anon385
NO_CACHE	opencv2/core/ocl.hpp	/^        NO_CACHE=0,$/;"	e	enum:cv::ocl::Device::__anon320
NO_INPUT_SCALE	opencv2/ml.hpp	/^        NO_INPUT_SCALE = 2,$/;"	e	enum:cv::ml::ANN_MLP::TrainFlags
NO_LOCAL_MEM	opencv2/core/ocl.hpp	/^        NO_LOCAL_MEM=0,$/;"	e	enum:cv::ocl::Device::__anon321
NO_OUTPUT_SCALE	opencv2/ml.hpp	/^        NO_OUTPUT_SCALE = 4$/;"	e	enum:cv::ml::ANN_MLP::TrainFlags
NO_SIZE	opencv2/core/ocl.hpp	/^    enum { LOCAL=1, READ_ONLY=2, WRITE_ONLY=4, READ_WRITE=6, CONSTANT=8, PTR_ONLY = 16, NO_SIZE=256 };$/;"	e	enum:cv::ocl::KernelArg::__anon323
NO_UV	opencv2/core.hpp	/^        NO_UV    = 2,$/;"	e	enum:cv::SVD::Flags
NPPST_CUDA_KERNEL_EXECUTION_ERROR	opencv2/cudalegacy/NCV.hpp	/^    NPPST_CUDA_KERNEL_EXECUTION_ERROR,        \/\/\/< CUDA kernel execution error$/;"	e	enum:__anon332
NPPST_ERROR	opencv2/cudalegacy/NCV.hpp	/^    NPPST_ERROR,                              \/\/\/< Unknown error$/;"	e	enum:__anon332
NPPST_INVALID_ROI	opencv2/cudalegacy/NCV.hpp	/^    NPPST_INVALID_ROI,                        \/\/\/< Invalid region of interest argument$/;"	e	enum:__anon332
NPPST_INVALID_SCALE	opencv2/cudalegacy/NCV.hpp	/^    NPPST_INVALID_SCALE,                      \/\/\/< Invalid scale parameter passed$/;"	e	enum:__anon332
NPPST_INVALID_STEP	opencv2/cudalegacy/NCV.hpp	/^    NPPST_INVALID_STEP,                       \/\/\/< Invalid image lines step argument (check sign, alignment, relation to image width)$/;"	e	enum:__anon332
NPPST_MEMCPY_ERROR	opencv2/cudalegacy/NCV.hpp	/^    NPPST_MEMCPY_ERROR,                       \/\/\/< CUDA memory copy error$/;"	e	enum:__anon332
NPPST_MEMFREE_ERR	opencv2/cudalegacy/NCV.hpp	/^    NPPST_MEMFREE_ERR,                        \/\/\/< CUDA memory deallocation error$/;"	e	enum:__anon332
NPPST_MEM_ALLOC_ERR	opencv2/cudalegacy/NCV.hpp	/^    NPPST_MEM_ALLOC_ERR,                      \/\/\/< CUDA memory allocation error$/;"	e	enum:__anon332
NPPST_MEM_INSUFFICIENT_BUFFER	opencv2/cudalegacy/NCV.hpp	/^    NPPST_MEM_INSUFFICIENT_BUFFER,            \/\/\/< Insufficient user-allocated buffer$/;"	e	enum:__anon332
NPPST_MEM_INTERNAL_ERROR	opencv2/cudalegacy/NCV.hpp	/^    NPPST_MEM_INTERNAL_ERROR,                 \/\/\/< Internal memory management error$/;"	e	enum:__anon332
NPPST_MEM_RESIDENCE_ERROR	opencv2/cudalegacy/NCV.hpp	/^    NPPST_MEM_RESIDENCE_ERROR,                \/\/\/< Memory residence error detected (check if pointers should be device or pinned)$/;"	e	enum:__anon332
NPPST_NULL_POINTER_ERROR	opencv2/cudalegacy/NCV.hpp	/^    NPPST_NULL_POINTER_ERROR,                 \/\/\/< NULL pointer argument error$/;"	e	enum:__anon332
NPPST_SUCCESS	opencv2/cudalegacy/NCV.hpp	/^    NPPST_SUCCESS = NCV_SUCCESS,              \/\/\/< Successful operation (same as NPP_NO_ERROR)$/;"	e	enum:__anon332
NPPST_TEXTURE_BIND_ERROR	opencv2/cudalegacy/NCV.hpp	/^    NPPST_TEXTURE_BIND_ERROR,                 \/\/\/< CUDA texture binding error or non-zero offset returned$/;"	e	enum:__anon332
NPP_VERSION	opencv2/core/private.cuda.hpp	65;"	d
NU	opencv2/ml.hpp	/^        NU=3,$/;"	e	enum:cv::ml::SVM::ParamTypes
NU_SVC	opencv2/ml.hpp	/^        NU_SVC=101,$/;"	e	enum:cv::ml::SVM::Types
NU_SVR	opencv2/ml.hpp	/^        NU_SVR=104$/;"	e	enum:cv::ml::SVM::Types
NaluFramingType	opencv2/cudacodec.hpp	/^    int NaluFramingType; \/\/!< NVVE_CONFIGURE_NALU_FRAMING_TYPE$/;"	m	struct:cv::cudacodec::EncoderParams
Ncv16s	opencv2/cudalegacy/NCV.hpp	/^typedef              short Ncv16s;$/;"	t
Ncv16u	opencv2/cudalegacy/NCV.hpp	/^typedef     unsigned short Ncv16u;$/;"	t
Ncv32f	opencv2/cudalegacy/NCV.hpp	/^typedef              float Ncv32f;$/;"	t
Ncv32f_a	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^typedef Ncv32f Ncv32f_a;$/;"	t
Ncv32f_a	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^typedef Ncv32f __attribute__((__may_alias__)) Ncv32f_a;$/;"	t
Ncv32s	opencv2/cudalegacy/NCV.hpp	/^typedef                int Ncv32s;$/;"	t
Ncv32u	opencv2/cudalegacy/NCV.hpp	/^typedef       unsigned int Ncv32u;$/;"	t
Ncv32u_a	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^typedef Ncv32u Ncv32u_a;$/;"	t
Ncv32u_a	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^typedef Ncv32u __attribute__((__may_alias__)) Ncv32u_a;$/;"	t
Ncv64f	opencv2/cudalegacy/NCV.hpp	/^typedef             double Ncv64f;$/;"	t
Ncv64s	opencv2/cudalegacy/NCV.hpp	/^typedef          long long Ncv64s;$/;"	t
Ncv64u	opencv2/cudalegacy/NCV.hpp	/^    typedef uint64_t Ncv64u;$/;"	t
Ncv64u	opencv2/cudalegacy/NCV.hpp	/^    typedef unsigned long long Ncv64u;$/;"	t
Ncv8s	opencv2/cudalegacy/NCV.hpp	/^typedef        signed char Ncv8s;$/;"	t
Ncv8u	opencv2/cudalegacy/NCV.hpp	/^typedef      unsigned char Ncv8u;$/;"	t
NcvBool	opencv2/cudalegacy/NCV.hpp	/^typedef               bool NcvBool;$/;"	t
NcvCTprep	opencv2/cudalegacy/NCV.hpp	/^namespace NcvCTprep$/;"	n
NcvPoint2D32s	opencv2/cudalegacy/NCV.hpp	/^    __host__ __device__ NcvPoint2D32s() : x(0), y(0) {};$/;"	f	struct:NcvPoint2D32s
NcvPoint2D32s	opencv2/cudalegacy/NCV.hpp	/^    __host__ __device__ NcvPoint2D32s(Ncv32s x_, Ncv32s y_) : x(x_), y(y_) {}$/;"	f	struct:NcvPoint2D32s
NcvPoint2D32s	opencv2/cudalegacy/NCV.hpp	/^struct NcvPoint2D32s$/;"	s
NcvPoint2D32u	opencv2/cudalegacy/NCV.hpp	/^    __host__ __device__ NcvPoint2D32u() : x(0), y(0) {};$/;"	f	struct:NcvPoint2D32u
NcvPoint2D32u	opencv2/cudalegacy/NCV.hpp	/^    __host__ __device__ NcvPoint2D32u(Ncv32u x_, Ncv32u y_) : x(x_), y(y_) {}$/;"	f	struct:NcvPoint2D32u
NcvPoint2D32u	opencv2/cudalegacy/NCV.hpp	/^struct NcvPoint2D32u$/;"	s
NcvRect32s	opencv2/cudalegacy/NCV.hpp	/^    __host__ __device__ NcvRect32s() : x(0), y(0), width(0), height(0) {};$/;"	f	struct:NcvRect32s
NcvRect32s	opencv2/cudalegacy/NCV.hpp	/^    __host__ __device__ NcvRect32s(Ncv32s x_, Ncv32s y_, Ncv32s width_, Ncv32s height_)$/;"	f	struct:NcvRect32s
NcvRect32s	opencv2/cudalegacy/NCV.hpp	/^struct NcvRect32s$/;"	s
NcvRect32u	opencv2/cudalegacy/NCV.hpp	/^    __host__ __device__ NcvRect32u() : x(0), y(0), width(0), height(0) {};$/;"	f	struct:NcvRect32u
NcvRect32u	opencv2/cudalegacy/NCV.hpp	/^    __host__ __device__ NcvRect32u(Ncv32u x_, Ncv32u y_, Ncv32u width_, Ncv32u height_)$/;"	f	struct:NcvRect32u
NcvRect32u	opencv2/cudalegacy/NCV.hpp	/^struct NcvRect32u$/;"	s
NcvRect8u	opencv2/cudalegacy/NCV.hpp	/^    __host__ __device__ NcvRect8u() : x(0), y(0), width(0), height(0) {};$/;"	f	struct:NcvRect8u
NcvRect8u	opencv2/cudalegacy/NCV.hpp	/^    __host__ __device__ NcvRect8u(Ncv8u x_, Ncv8u y_, Ncv8u width_, Ncv8u height_) : x(x_), y(y_), width(width_), height(height_) {}$/;"	f	struct:NcvRect8u
NcvRect8u	opencv2/cudalegacy/NCV.hpp	/^struct NcvRect8u$/;"	s
NcvSize32s	opencv2/cudalegacy/NCV.hpp	/^    __host__ __device__ NcvSize32s() : width(0), height(0) {};$/;"	f	struct:NcvSize32s
NcvSize32s	opencv2/cudalegacy/NCV.hpp	/^    __host__ __device__ NcvSize32s(Ncv32s width_, Ncv32s height_) : width(width_), height(height_) {}$/;"	f	struct:NcvSize32s
NcvSize32s	opencv2/cudalegacy/NCV.hpp	/^struct NcvSize32s$/;"	s
NcvSize32u	opencv2/cudalegacy/NCV.hpp	/^    __host__ __device__ NcvSize32u() : width(0), height(0) {};$/;"	f	struct:NcvSize32u
NcvSize32u	opencv2/cudalegacy/NCV.hpp	/^    __host__ __device__ NcvSize32u(Ncv32u width_, Ncv32u height_) : width(width_), height(height_) {}$/;"	f	struct:NcvSize32u
NcvSize32u	opencv2/cudalegacy/NCV.hpp	/^struct NcvSize32u$/;"	s
NcvTimer	opencv2/cudalegacy/NCV.hpp	/^typedef struct _NcvTimer *NcvTimer;$/;"	t	typeref:struct:_NcvTimer
NearestInterPtr	opencv2/cudev/ptr2d/interpolation.hpp	/^template <class SrcPtr> struct NearestInterPtr$/;"	s	namespace:cv::cudev
NearestInterPtrSz	opencv2/cudev/ptr2d/interpolation.hpp	/^template <class SrcPtr> struct NearestInterPtrSz : NearestInterPtr<SrcPtr>$/;"	s	namespace:cv::cudev
No	opencv2/core/cuda/functional.hpp	/^        struct No {Yes a[2];};$/;"	s	struct:cv::cuda::device::IsBinaryFunction
No	opencv2/core/cuda/functional.hpp	/^        struct No {Yes a[2];};$/;"	s	struct:cv::cuda::device::IsUnaryFunction
No	opencv2/cudev/functional/functional.hpp	/^    struct No {Yes a[2];};$/;"	s	struct:cv::cudev::IsBinaryFunction
No	opencv2/cudev/functional/functional.hpp	/^    struct No {Yes a[2];};$/;"	s	struct:cv::cudev::IsUnaryFunction
NoBundleAdjuster	opencv2/stitching/detail/motion_estimators.hpp	/^    NoBundleAdjuster() : BundleAdjusterBase(0, 0) {}$/;"	f	class:cv::detail::NoBundleAdjuster
NoBundleAdjuster	opencv2/stitching/detail/motion_estimators.hpp	/^class CV_EXPORTS NoBundleAdjuster : public BundleAdjusterBase$/;"	c	namespace:cv::detail
NoExposureCompensator	opencv2/stitching/detail/exposure_compensate.hpp	/^class CV_EXPORTS NoExposureCompensator : public ExposureCompensator$/;"	c	namespace:cv::detail
NoSeamFinder	opencv2/stitching/detail/seam_finders.hpp	/^class CV_EXPORTS NoSeamFinder : public SeamFinder$/;"	c	namespace:cv::detail
Node	opencv2/core/mat.hpp	/^    struct CV_EXPORTS Node$/;"	s	class:cv::SparseMat
Node	opencv2/core/utility.hpp	/^    Node()$/;"	f	class:cv::Node
Node	opencv2/core/utility.hpp	/^    Node(OBJECT& payload) : m_payload(payload)$/;"	f	class:cv::Node
Node	opencv2/core/utility.hpp	/^class CV_EXPORTS Node$/;"	c	namespace:cv
Node	opencv2/flann/hierarchical_clustering_index.h	/^    struct Node$/;"	s	class:cvflann::HierarchicalClusteringIndex
Node	opencv2/flann/kdtree_index.h	/^    struct Node$/;"	s	class:cvflann::KDTreeIndex
Node	opencv2/flann/kdtree_single_index.h	/^    struct Node$/;"	s	class:cvflann::KDTreeSingleIndex
Node	opencv2/ml.hpp	/^    class CV_EXPORTS Node$/;"	c	class:cv::ml::DTrees
NodeData	opencv2/core/utility.hpp	/^class CV_EXPORTS NodeData$/;"	c	namespace:cv::instr
NodeDataTls	opencv2/core/utility.hpp	/^    NodeDataTls()$/;"	f	struct:cv::instr::NodeDataTls
NodeDataTls	opencv2/core/utility.hpp	/^struct NodeDataTls$/;"	s	namespace:cv::instr
NodePtr	opencv2/flann/hierarchical_clustering_index.h	/^    typedef Node* NodePtr;$/;"	t	class:cvflann::HierarchicalClusteringIndex
NodePtr	opencv2/flann/kdtree_index.h	/^    typedef Node* NodePtr;$/;"	t	class:cvflann::KDTreeIndex
NodePtr	opencv2/flann/kdtree_single_index.h	/^    typedef Node* NodePtr;$/;"	t	class:cvflann::KDTreeSingleIndex
NonConstType	opencv2/core/cuda/type_traits.hpp	/^        typedef typename type_traits_detail::UnConst<T>::type                                                NonConstType;$/;"	t	struct:cv::cuda::device::TypeTraits
NonVolatileType	opencv2/core/cuda/type_traits.hpp	/^        typedef typename type_traits_detail::UnVolatile<T>::type                                             NonVolatileType;$/;"	t	struct:cv::cuda::device::TypeTraits
NormHamming	opencv2/cudev/block/vec_distance.hpp	/^    __device__ __forceinline__ NormHamming() : mySum(0) {}$/;"	f	struct:cv::cudev::NormHamming
NormHamming	opencv2/cudev/block/vec_distance.hpp	/^struct NormHamming$/;"	s	namespace:cv::cudev
NormHistogramCostExtractor	opencv2/shape/hist_cost.hpp	/^class CV_EXPORTS_W NormHistogramCostExtractor : public HistogramCostExtractor$/;"	c	namespace:cv
NormL1	opencv2/cudev/block/vec_distance.hpp	/^    __device__ __forceinline__ NormL1() : mySum(0) {}$/;"	f	struct:cv::cudev::NormL1
NormL1	opencv2/cudev/block/vec_distance.hpp	/^    __device__ __forceinline__ NormL1() : mySum(0.0f) {}$/;"	f	struct:cv::cudev::NormL1
NormL1	opencv2/cudev/block/vec_distance.hpp	/^template <> struct NormL1<float>$/;"	s	namespace:cv::cudev
NormL1	opencv2/cudev/block/vec_distance.hpp	/^template <typename T> struct NormL1$/;"	s	namespace:cv::cudev
NormL2	opencv2/cudev/block/vec_distance.hpp	/^    __device__ __forceinline__ NormL2() : mySum(0.0f) {}$/;"	f	struct:cv::cudev::NormL2
NormL2	opencv2/cudev/block/vec_distance.hpp	/^struct NormL2$/;"	s	namespace:cv::cudev
NormTypes	opencv2/core/base.hpp	/^enum NormTypes { NORM_INF       = 1,$/;"	g	namespace:cv
NormalBayesClassifier	opencv2/ml.hpp	/^class CV_EXPORTS_W NormalBayesClassifier : public StatModel$/;"	c	namespace:cv::ml
NppStBorderType	opencv2/cudalegacy/NPP_staging.hpp	/^enum NppStBorderType$/;"	g
NppStInterpMode	opencv2/cudalegacy/NPP_staging.hpp	/^enum NppStInterpMode$/;"	g
NppStInterpolationState	opencv2/cudalegacy/NPP_staging.hpp	/^ struct NppStInterpolationState$/;"	s
NppStStreamHandler	opencv2/cudalegacy/private.hpp	/^        inline explicit NppStStreamHandler(cudaStream_t newStream = 0)$/;"	f	class:cv::cuda::NppStStreamHandler
NppStStreamHandler	opencv2/cudalegacy/private.hpp	/^    class NppStStreamHandler$/;"	c	namespace:cv::cuda
NullDeblurer	opencv2/videostab/deblurring.hpp	/^class CV_EXPORTS NullDeblurer : public DeblurerBase$/;"	c	namespace:cv::videostab
NullFrameSource	opencv2/videostab/frame_source.hpp	/^class CV_EXPORTS NullFrameSource : public IFrameSource$/;"	c	namespace:cv::videostab
NullInpainter	opencv2/videostab/inpainting.hpp	/^class CV_EXPORTS NullInpainter : public InpainterBase$/;"	c	namespace:cv::videostab
NullLog	opencv2/videostab/log.hpp	/^class CV_EXPORTS NullLog : public ILog$/;"	c	namespace:cv::videostab
NullOutlierRejector	opencv2/videostab/outlier_rejection.hpp	/^class CV_EXPORTS NullOutlierRejector : public IOutlierRejector$/;"	c	namespace:cv::videostab
NullType	opencv2/cudev/util/type_traits.hpp	/^struct NullType {};$/;"	s	namespace:cv::cudev
NullWobbleSuppressor	opencv2/videostab/wobble_suppression.hpp	/^class CV_EXPORTS NullWobbleSuppressor : public WobbleSuppressorBase$/;"	c	namespace:cv::videostab
NumClassifierRootNodes	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^    Ncv32u NumClassifierRootNodes;$/;"	m	struct:HaarClassifierCascadeDescriptor
NumClassifierTotalNodes	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^    Ncv32u NumClassifierTotalNodes;$/;"	m	struct:HaarClassifierCascadeDescriptor
NumFeatures	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^    Ncv32u NumFeatures;$/;"	m	struct:HaarClassifierCascadeDescriptor
NumStages	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^    Ncv32u NumStages;$/;"	m	struct:HaarClassifierCascadeDescriptor
OAST_9_16	opencv2/features2d.hpp	/^        AGAST_5_8 = 0, AGAST_7_12d = 1, AGAST_7_12s = 2, OAST_9_16 = 3,$/;"	e	enum:cv::AgastFeatureDetector::__anon378
OBJDET_MASK_ELEMENT_INVALID_32U	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	383;"	d
OCL_FORCE_CHECK	opencv2/core/ocl.hpp	743;"	d
OCL_PERFORMANCE_CHECK	opencv2/core/ocl.hpp	746;"	d
OCL_VECTOR_DEFAULT	opencv2/core/ocl.hpp	/^    OCL_VECTOR_DEFAULT = OCL_VECTOR_OWN$/;"	e	enum:cv::ocl::OclVectorStrategy
OCL_VECTOR_MAX	opencv2/core/ocl.hpp	/^    OCL_VECTOR_MAX = 1,$/;"	e	enum:cv::ocl::OclVectorStrategy
OCL_VECTOR_OWN	opencv2/core/ocl.hpp	/^    OCL_VECTOR_OWN = 0,$/;"	e	enum:cv::ocl::OclVectorStrategy
OCTAVE_ROW	opencv2/cudafeatures2d.hpp	/^        OCTAVE_ROW,$/;"	e	enum:cv::cuda::ORB::__anon92
OK	opencv2/stitching.hpp	/^        OK = 0,$/;"	e	enum:cv::Stitcher::Status
ONE_CLASS	opencv2/ml.hpp	/^        ONE_CLASS=102,$/;"	e	enum:cv::ml::SVM::Types
OPENCV_ABI_COMPATIBILITY	opencv2/core/cvdef.h	350;"	d
OPENCV_ALL_HPP	opencv2/opencv.hpp	44;"	d
OPENCV_ASSERT	opencv2/core/core_c.h	2696;"	d
OPENCV_BACKGROUND_SEGM_HPP	opencv2/video/background_segm.hpp	45;"	d
OPENCV_CALIB3D_C_H	opencv2/calib3d/calib3d_c.h	45;"	d
OPENCV_CALIB3D_HPP	opencv2/calib3d.hpp	45;"	d
OPENCV_CALL	opencv2/core/core_c.h	2700;"	d
OPENCV_CORE_AFFINE3_HPP	opencv2/core/affine.hpp	45;"	d
OPENCV_CORE_BASE_HPP	opencv2/core/base.hpp	46;"	d
OPENCV_CORE_BUFFER_POOL_HPP	opencv2/core/bufferpool.hpp	8;"	d
OPENCV_CORE_CUDAINL_HPP	opencv2/core/cuda.inl.hpp	45;"	d
OPENCV_CORE_CUDALEGACY_PRIVATE_HPP	opencv2/cudalegacy/private.hpp	45;"	d
OPENCV_CORE_CUDA_HPP	opencv2/core/cuda.hpp	45;"	d
OPENCV_CORE_CUDA_STREAM_ACCESSOR_HPP	opencv2/core/cuda_stream_accessor.hpp	44;"	d
OPENCV_CORE_CUDA_TYPES_HPP	opencv2/core/cuda_types.hpp	44;"	d
OPENCV_CORE_CVDEF_H	opencv2/core/cvdef.h	46;"	d
OPENCV_CORE_CVSTDINL_HPP	opencv2/core/cvstd.inl.hpp	45;"	d
OPENCV_CORE_CVSTD_HPP	opencv2/core/cvstd.hpp	45;"	d
OPENCV_CORE_C_H	opencv2/core/core_c.h	46;"	d
OPENCV_CORE_DIRECTX_HPP	opencv2/core/directx.hpp	43;"	d
OPENCV_CORE_EIGEN_HPP	opencv2/core/eigen.hpp	46;"	d
OPENCV_CORE_FAST_MATH_HPP	opencv2/core/fast_math.hpp	46;"	d
OPENCV_CORE_HAL_INTERFACE_H	opencv2/core/hal/interface.h	2;"	d
OPENCV_CORE_HPP	opencv2/core.hpp	46;"	d
OPENCV_CORE_IPPASYNC_HPP	opencv2/core/ippasync.hpp	46;"	d
OPENCV_CORE_MATRIX_OPERATIONS_HPP	opencv2/core/mat.inl.hpp	46;"	d
OPENCV_CORE_MATX_HPP	opencv2/core/matx.hpp	45;"	d
OPENCV_CORE_MAT_HPP	opencv2/core/mat.hpp	45;"	d
OPENCV_CORE_OPENGL_HPP	opencv2/core/opengl.hpp	44;"	d
OPENCV_CORE_OPERATIONS_HPP	opencv2/core/operations.hpp	46;"	d
OPENCV_CORE_PERSISTENCE_HPP	opencv2/core/persistence.hpp	45;"	d
OPENCV_CORE_PRIVATE_CUDA_HPP	opencv2/core/private.cuda.hpp	45;"	d
OPENCV_CORE_PRIVATE_HPP	opencv2/core/private.hpp	45;"	d
OPENCV_CORE_PTR_INL_HPP	opencv2/core/ptr.inl.hpp	43;"	d
OPENCV_CORE_SATURATE_HPP	opencv2/core/saturate.hpp	46;"	d
OPENCV_CORE_SSE_UTILS_HPP	opencv2/core/sse_utils.hpp	43;"	d
OPENCV_CORE_TRAITS_HPP	opencv2/core/traits.hpp	45;"	d
OPENCV_CORE_TYPES_H	opencv2/core/types_c.h	45;"	d
OPENCV_CORE_TYPES_HPP	opencv2/core/types.hpp	45;"	d
OPENCV_CORE_UTILITY_H	opencv2/core/utility.hpp	46;"	d
OPENCV_CORE_VA_INTEL_HPP	opencv2/core/va_intel.hpp	9;"	d
OPENCV_CORE_WIMAGE_HPP	opencv2/core/wimage.hpp	43;"	d
OPENCV_CUDAARITHM_HPP	opencv2/cudaarithm.hpp	44;"	d
OPENCV_CUDABGSEGM_HPP	opencv2/cudabgsegm.hpp	44;"	d
OPENCV_CUDACODEC_HPP	opencv2/cudacodec.hpp	45;"	d
OPENCV_CUDAFEATURES2D_HPP	opencv2/cudafeatures2d.hpp	44;"	d
OPENCV_CUDAFILTERS_HPP	opencv2/cudafilters.hpp	44;"	d
OPENCV_CUDAIMGPROC_HPP	opencv2/cudaimgproc.hpp	44;"	d
OPENCV_CUDALEGACY_HPP	opencv2/cudalegacy.hpp	44;"	d
OPENCV_CUDAOBJDETECT_HPP	opencv2/cudaobjdetect.hpp	44;"	d
OPENCV_CUDAOPTFLOW_HPP	opencv2/cudaoptflow.hpp	44;"	d
OPENCV_CUDASTEREO_HPP	opencv2/cudastereo.hpp	44;"	d
OPENCV_CUDAWARPING_HPP	opencv2/cudawarping.hpp	44;"	d
OPENCV_CUDA_BORDER_INTERPOLATE_HPP	opencv2/core/cuda/border_interpolate.hpp	44;"	d
OPENCV_CUDA_COLOR_DETAIL_HPP	opencv2/core/cuda/detail/color_detail.hpp	44;"	d
OPENCV_CUDA_COLOR_HPP	opencv2/core/cuda/color.hpp	44;"	d
OPENCV_CUDA_COMMON_HPP	opencv2/core/cuda/common.hpp	44;"	d
OPENCV_CUDA_DATAMOV_UTILS_HPP	opencv2/core/cuda/datamov_utils.hpp	44;"	d
OPENCV_CUDA_DEVICE_BLOCK_HPP	opencv2/core/cuda/block.hpp	44;"	d
OPENCV_CUDA_DEVICE_FUNCATTRIB_HPP	opencv2/core/cuda/funcattrib.hpp	44;"	d
OPENCV_CUDA_DEVICE_WARP_HPP	opencv2/core/cuda/warp.hpp	44;"	d
OPENCV_CUDA_DYNAMIC_SMEM_HPP	opencv2/core/cuda/dynamic_smem.hpp	44;"	d
OPENCV_CUDA_EMULATION_HPP_	opencv2/core/cuda/emulation.hpp	44;"	d
OPENCV_CUDA_FILTERS_HPP	opencv2/core/cuda/filters.hpp	44;"	d
OPENCV_CUDA_FUNCTIONAL_HPP	opencv2/core/cuda/functional.hpp	44;"	d
OPENCV_CUDA_IMPLEMENT_BIN_FUNCTOR	opencv2/core/cuda/functional.hpp	480;"	d
OPENCV_CUDA_IMPLEMENT_BIN_FUNCTOR	opencv2/core/cuda/functional.hpp	526;"	d
OPENCV_CUDA_IMPLEMENT_GRAY2RGB5x5_TRAITS	opencv2/core/cuda/color.hpp	102;"	d
OPENCV_CUDA_IMPLEMENT_GRAY2RGB5x5_TRAITS	opencv2/core/cuda/detail/color_detail.hpp	390;"	d
OPENCV_CUDA_IMPLEMENT_GRAY2RGB_TRAITS	opencv2/core/cuda/color.hpp	97;"	d
OPENCV_CUDA_IMPLEMENT_GRAY2RGB_TRAITS	opencv2/core/cuda/detail/color_detail.hpp	348;"	d
OPENCV_CUDA_IMPLEMENT_HLS2RGB_TRAITS	opencv2/core/cuda/color.hpp	224;"	d
OPENCV_CUDA_IMPLEMENT_HLS2RGB_TRAITS	opencv2/core/cuda/detail/color_detail.hpp	1482;"	d
OPENCV_CUDA_IMPLEMENT_HSV2RGB_TRAITS	opencv2/core/cuda/color.hpp	202;"	d
OPENCV_CUDA_IMPLEMENT_HSV2RGB_TRAITS	opencv2/core/cuda/detail/color_detail.hpp	1209;"	d
OPENCV_CUDA_IMPLEMENT_Lab2RGB_TRAITS	opencv2/core/cuda/color.hpp	264;"	d
OPENCV_CUDA_IMPLEMENT_Lab2RGB_TRAITS	opencv2/core/cuda/detail/color_detail.hpp	1764;"	d
OPENCV_CUDA_IMPLEMENT_Luv2RGB_TRAITS	opencv2/core/cuda/color.hpp	304;"	d
OPENCV_CUDA_IMPLEMENT_Luv2RGB_TRAITS	opencv2/core/cuda/detail/color_detail.hpp	1964;"	d
OPENCV_CUDA_IMPLEMENT_MINMAX	opencv2/core/cuda/functional.hpp	307;"	d
OPENCV_CUDA_IMPLEMENT_MINMAX	opencv2/core/cuda/functional.hpp	355;"	d
OPENCV_CUDA_IMPLEMENT_RGB2GRAY_TRAITS	opencv2/core/cuda/color.hpp	114;"	d
OPENCV_CUDA_IMPLEMENT_RGB2GRAY_TRAITS	opencv2/core/cuda/detail/color_detail.hpp	483;"	d
OPENCV_CUDA_IMPLEMENT_RGB2HLS_TRAITS	opencv2/core/cuda/color.hpp	213;"	d
OPENCV_CUDA_IMPLEMENT_RGB2HLS_TRAITS	opencv2/core/cuda/detail/color_detail.hpp	1342;"	d
OPENCV_CUDA_IMPLEMENT_RGB2HSV_TRAITS	opencv2/core/cuda/color.hpp	191;"	d
OPENCV_CUDA_IMPLEMENT_RGB2HSV_TRAITS	opencv2/core/cuda/detail/color_detail.hpp	1069;"	d
OPENCV_CUDA_IMPLEMENT_RGB2Lab_TRAITS	opencv2/core/cuda/color.hpp	244;"	d
OPENCV_CUDA_IMPLEMENT_RGB2Lab_TRAITS	opencv2/core/cuda/detail/color_detail.hpp	1651;"	d
OPENCV_CUDA_IMPLEMENT_RGB2Luv_TRAITS	opencv2/core/cuda/color.hpp	284;"	d
OPENCV_CUDA_IMPLEMENT_RGB2Luv_TRAITS	opencv2/core/cuda/detail/color_detail.hpp	1863;"	d
OPENCV_CUDA_IMPLEMENT_RGB2RGB5x5_TRAITS	opencv2/core/cuda/color.hpp	81;"	d
OPENCV_CUDA_IMPLEMENT_RGB2RGB5x5_TRAITS	opencv2/core/cuda/detail/color_detail.hpp	221;"	d
OPENCV_CUDA_IMPLEMENT_RGB2RGB_TRAITS	opencv2/core/cuda/color.hpp	70;"	d
OPENCV_CUDA_IMPLEMENT_RGB2RGB_TRAITS	opencv2/core/cuda/detail/color_detail.hpp	148;"	d
OPENCV_CUDA_IMPLEMENT_RGB2XYZ_TRAITS	opencv2/core/cuda/color.hpp	169;"	d
OPENCV_CUDA_IMPLEMENT_RGB2XYZ_TRAITS	opencv2/core/cuda/detail/color_detail.hpp	856;"	d
OPENCV_CUDA_IMPLEMENT_RGB2YCrCb_TRAITS	opencv2/core/cuda/color.hpp	147;"	d
OPENCV_CUDA_IMPLEMENT_RGB2YCrCb_TRAITS	opencv2/core/cuda/detail/color_detail.hpp	701;"	d
OPENCV_CUDA_IMPLEMENT_RGB2YUV_TRAITS	opencv2/core/cuda/color.hpp	125;"	d
OPENCV_CUDA_IMPLEMENT_RGB2YUV_TRAITS	opencv2/core/cuda/detail/color_detail.hpp	534;"	d
OPENCV_CUDA_IMPLEMENT_RGB5x52GRAY_TRAITS	opencv2/core/cuda/color.hpp	107;"	d
OPENCV_CUDA_IMPLEMENT_RGB5x52GRAY_TRAITS	opencv2/core/cuda/detail/color_detail.hpp	432;"	d
OPENCV_CUDA_IMPLEMENT_RGB5x52RGB_TRAITS	opencv2/core/cuda/color.hpp	92;"	d
OPENCV_CUDA_IMPLEMENT_RGB5x52RGB_TRAITS	opencv2/core/cuda/detail/color_detail.hpp	302;"	d
OPENCV_CUDA_IMPLEMENT_TYPE_VEC	opencv2/core/cuda/vec_traits.hpp	131;"	d
OPENCV_CUDA_IMPLEMENT_TYPE_VEC	opencv2/core/cuda/vec_traits.hpp	152;"	d
OPENCV_CUDA_IMPLEMENT_UN_FUNCTOR	opencv2/core/cuda/functional.hpp	460;"	d
OPENCV_CUDA_IMPLEMENT_UN_FUNCTOR	opencv2/core/cuda/functional.hpp	524;"	d
OPENCV_CUDA_IMPLEMENT_UN_FUNCTOR_NO_DOUBLE	opencv2/core/cuda/functional.hpp	525;"	d
OPENCV_CUDA_IMPLEMENT_VEC_TRAITS	opencv2/core/cuda/vec_traits.hpp	168;"	d
OPENCV_CUDA_IMPLEMENT_VEC_TRAITS	opencv2/core/cuda/vec_traits.hpp	226;"	d
OPENCV_CUDA_IMPLEMENT_XYZ2RGB_TRAITS	opencv2/core/cuda/color.hpp	180;"	d
OPENCV_CUDA_IMPLEMENT_XYZ2RGB_TRAITS	opencv2/core/cuda/detail/color_detail.hpp	931;"	d
OPENCV_CUDA_IMPLEMENT_YCrCb2RGB_TRAITS	opencv2/core/cuda/color.hpp	158;"	d
OPENCV_CUDA_IMPLEMENT_YCrCb2RGB_TRAITS	opencv2/core/cuda/detail/color_detail.hpp	780;"	d
OPENCV_CUDA_IMPLEMENT_YUV2RGB_TRAITS	opencv2/core/cuda/color.hpp	136;"	d
OPENCV_CUDA_IMPLEMENT_YUV2RGB_TRAITS	opencv2/core/cuda/detail/color_detail.hpp	622;"	d
OPENCV_CUDA_LIMITS_HPP	opencv2/core/cuda/limits.hpp	44;"	d
OPENCV_CUDA_LOG_MEM_BANKS	opencv2/core/cuda/utility.hpp	68;"	d
OPENCV_CUDA_LOG_WARP_SIZE	opencv2/core/cuda/utility.hpp	66;"	d
OPENCV_CUDA_MEM_BANKS	opencv2/core/cuda/utility.hpp	69;"	d
OPENCV_CUDA_PRED_VAL_REDUCE_DETAIL_HPP	opencv2/core/cuda/detail/reduce_key_val.hpp	44;"	d
OPENCV_CUDA_REDUCE_DETAIL_HPP	opencv2/core/cuda/detail/reduce.hpp	44;"	d
OPENCV_CUDA_REDUCE_HPP	opencv2/core/cuda/reduce.hpp	44;"	d
OPENCV_CUDA_SATURATE_CAST_HPP	opencv2/core/cuda/saturate_cast.hpp	44;"	d
OPENCV_CUDA_SCAN_HPP	opencv2/core/cuda/scan.hpp	44;"	d
OPENCV_CUDA_SIMD_FUNCTIONS_HPP	opencv2/core/cuda/simd_functions.hpp	74;"	d
OPENCV_CUDA_TRANSFORM_DETAIL_HPP	opencv2/core/cuda/detail/transform_detail.hpp	44;"	d
OPENCV_CUDA_TRANSFORM_FUNCTOR_TRAITS	opencv2/core/cuda/functional.hpp	791;"	d
OPENCV_CUDA_TRANSFORM_HPP	opencv2/core/cuda/transform.hpp	44;"	d
OPENCV_CUDA_TYPE_TRAITS_DETAIL_HPP	opencv2/core/cuda/detail/type_traits_detail.hpp	44;"	d
OPENCV_CUDA_TYPE_TRAITS_HPP	opencv2/core/cuda/type_traits.hpp	44;"	d
OPENCV_CUDA_UTILITY_HPP	opencv2/core/cuda/utility.hpp	44;"	d
OPENCV_CUDA_VECMATH_HPP	opencv2/core/cuda/vec_math.hpp	44;"	d
OPENCV_CUDA_VEC_DISTANCE_DETAIL_HPP	opencv2/core/cuda/detail/vec_distance_detail.hpp	44;"	d
OPENCV_CUDA_VEC_DISTANCE_HPP	opencv2/core/cuda/vec_distance.hpp	44;"	d
OPENCV_CUDA_VEC_TRAITS_HPP	opencv2/core/cuda/vec_traits.hpp	44;"	d
OPENCV_CUDA_WARP_REDUCE_HPP__	opencv2/core/cuda/warp_reduce.hpp	44;"	d
OPENCV_CUDA_WARP_SHUFFLE_HPP	opencv2/core/cuda/warp_shuffle.hpp	44;"	d
OPENCV_CUDA_WARP_SIZE	opencv2/core/cuda/utility.hpp	67;"	d
OPENCV_CUDEV_BLOCK_BLOCK_HPP	opencv2/cudev/block/block.hpp	47;"	d
OPENCV_CUDEV_BLOCK_DYNAMIC_SMEM_HPP	opencv2/cudev/block/dynamic_smem.hpp	47;"	d
OPENCV_CUDEV_BLOCK_REDUCE_DETAIL_HPP	opencv2/cudev/block/detail/reduce.hpp	47;"	d
OPENCV_CUDEV_BLOCK_REDUCE_HPP	opencv2/cudev/block/reduce.hpp	47;"	d
OPENCV_CUDEV_BLOCK_REDUCE_KEY_VAL_DETAIL_HPP	opencv2/cudev/block/detail/reduce_key_val.hpp	47;"	d
OPENCV_CUDEV_BLOCK_SCAN_HPP	opencv2/cudev/block/scan.hpp	47;"	d
OPENCV_CUDEV_BLOCK_VEC_DISTANCE_HPP	opencv2/cudev/block/vec_distance.hpp	47;"	d
OPENCV_CUDEV_COMMON_HPP	opencv2/cudev/common.hpp	47;"	d
OPENCV_CUDEV_EXPR_BINARY_FUNC_HPP	opencv2/cudev/expr/binary_func.hpp	47;"	d
OPENCV_CUDEV_EXPR_BINARY_OP_HPP	opencv2/cudev/expr/binary_op.hpp	47;"	d
OPENCV_CUDEV_EXPR_COLOR_HPP	opencv2/cudev/expr/color.hpp	47;"	d
OPENCV_CUDEV_EXPR_DERIV_HPP	opencv2/cudev/expr/deriv.hpp	47;"	d
OPENCV_CUDEV_EXPR_EXPR_HPP	opencv2/cudev/expr/expr.hpp	47;"	d
OPENCV_CUDEV_EXPR_PER_ELEMENT_FUNC_HPP	opencv2/cudev/expr/per_element_func.hpp	47;"	d
OPENCV_CUDEV_EXPR_REDUCTION_HPP	opencv2/cudev/expr/reduction.hpp	47;"	d
OPENCV_CUDEV_EXPR_UNARY_FUNC_HPP	opencv2/cudev/expr/unary_func.hpp	47;"	d
OPENCV_CUDEV_EXPR_UNARY_OP_HPP	opencv2/cudev/expr/unary_op.hpp	47;"	d
OPENCV_CUDEV_EXPR_WARPING_HPP	opencv2/cudev/expr/warping.hpp	47;"	d
OPENCV_CUDEV_FUNCTIONAL_COLOR_CVT_DETAIL_HPP	opencv2/cudev/functional/detail/color_cvt.hpp	47;"	d
OPENCV_CUDEV_FUNCTIONAL_COLOR_CVT_HPP	opencv2/cudev/functional/color_cvt.hpp	47;"	d
OPENCV_CUDEV_FUNCTIONAL_FUNCTIONAL_HPP	opencv2/cudev/functional/functional.hpp	47;"	d
OPENCV_CUDEV_FUNCTIONAL_TUPLE_ADAPTER_HPP	opencv2/cudev/functional/tuple_adapter.hpp	47;"	d
OPENCV_CUDEV_GRID_COPY_DETAIL_HPP	opencv2/cudev/grid/detail/copy.hpp	47;"	d
OPENCV_CUDEV_GRID_COPY_HPP	opencv2/cudev/grid/copy.hpp	47;"	d
OPENCV_CUDEV_GRID_HISTOGRAM_DETAIL_HPP	opencv2/cudev/grid/detail/histogram.hpp	47;"	d
OPENCV_CUDEV_GRID_HISTOGRAM_HPP	opencv2/cudev/grid/histogram.hpp	47;"	d
OPENCV_CUDEV_GRID_INTEGRAL_DETAIL_HPP	opencv2/cudev/grid/detail/integral.hpp	47;"	d
OPENCV_CUDEV_GRID_INTEGRAL_HPP	opencv2/cudev/grid/integral.hpp	47;"	d
OPENCV_CUDEV_GRID_MINMAXLOC_DETAIL_HPP	opencv2/cudev/grid/detail/minmaxloc.hpp	47;"	d
OPENCV_CUDEV_GRID_PYRAMIDS_HPP	opencv2/cudev/grid/pyramids.hpp	47;"	d
OPENCV_CUDEV_GRID_PYR_DOWN_DETAIL_HPP	opencv2/cudev/grid/detail/pyr_down.hpp	47;"	d
OPENCV_CUDEV_GRID_PYR_UP_DETAIL_HPP	opencv2/cudev/grid/detail/pyr_up.hpp	47;"	d
OPENCV_CUDEV_GRID_REDUCE_DETAIL_HPP	opencv2/cudev/grid/detail/reduce.hpp	47;"	d
OPENCV_CUDEV_GRID_REDUCE_HPP	opencv2/cudev/grid/reduce.hpp	47;"	d
OPENCV_CUDEV_GRID_REDUCE_TO_COLUMN_DETAIL_HPP	opencv2/cudev/grid/detail/reduce_to_column.hpp	47;"	d
OPENCV_CUDEV_GRID_REDUCE_TO_ROW_DETAIL_HPP	opencv2/cudev/grid/detail/reduce_to_row.hpp	47;"	d
OPENCV_CUDEV_GRID_REDUCE_TO_VEC_HPP	opencv2/cudev/grid/reduce_to_vec.hpp	47;"	d
OPENCV_CUDEV_GRID_SPLIT_MERGE_DETAIL_HPP	opencv2/cudev/grid/detail/split_merge.hpp	47;"	d
OPENCV_CUDEV_GRID_SPLIT_MERGE_HPP	opencv2/cudev/grid/split_merge.hpp	47;"	d
OPENCV_CUDEV_GRID_TRANSFORM_DETAIL_HPP	opencv2/cudev/grid/detail/transform.hpp	47;"	d
OPENCV_CUDEV_GRID_TRANSFORM_HPP	opencv2/cudev/grid/transform.hpp	47;"	d
OPENCV_CUDEV_GRID_TRANSPOSE_DETAIL_HPP	opencv2/cudev/grid/detail/transpose.hpp	47;"	d
OPENCV_CUDEV_GRID_TRANSPOSE_HPP	opencv2/cudev/grid/transpose.hpp	47;"	d
OPENCV_CUDEV_HPP	opencv2/cudev.hpp	47;"	d
OPENCV_CUDEV_PTR2D_CONSTANT_HPP	opencv2/cudev/ptr2d/constant.hpp	47;"	d
OPENCV_CUDEV_PTR2D_DERIV_HPP	opencv2/cudev/ptr2d/deriv.hpp	47;"	d
OPENCV_CUDEV_PTR2D_EXTRAPOLATION_HPP	opencv2/cudev/ptr2d/extrapolation.hpp	47;"	d
OPENCV_CUDEV_PTR2D_GLOB_HPP	opencv2/cudev/ptr2d/glob.hpp	47;"	d
OPENCV_CUDEV_PTR2D_GPUMAT_DETAIL_HPP	opencv2/cudev/ptr2d/detail/gpumat.hpp	47;"	d
OPENCV_CUDEV_PTR2D_GPUMAT_HPP	opencv2/cudev/ptr2d/gpumat.hpp	47;"	d
OPENCV_CUDEV_PTR2D_INTERPOLATION_HPP	opencv2/cudev/ptr2d/interpolation.hpp	47;"	d
OPENCV_CUDEV_PTR2D_LUT_HPP	opencv2/cudev/ptr2d/lut.hpp	47;"	d
OPENCV_CUDEV_PTR2D_MASK_HPP	opencv2/cudev/ptr2d/mask.hpp	47;"	d
OPENCV_CUDEV_PTR2D_REMAP_HPP	opencv2/cudev/ptr2d/remap.hpp	47;"	d
OPENCV_CUDEV_PTR2D_RESIZE_HPP	opencv2/cudev/ptr2d/resize.hpp	47;"	d
OPENCV_CUDEV_PTR2D_TEXTURE_HPP	opencv2/cudev/ptr2d/texture.hpp	47;"	d
OPENCV_CUDEV_PTR2D_TRAITS_HPP	opencv2/cudev/ptr2d/traits.hpp	47;"	d
OPENCV_CUDEV_PTR2D_TRANSFORM_HPP	opencv2/cudev/ptr2d/transform.hpp	47;"	d
OPENCV_CUDEV_PTR2D_WARPING_HPP	opencv2/cudev/ptr2d/warping.hpp	47;"	d
OPENCV_CUDEV_PTR2D_ZIP_HPP	opencv2/cudev/ptr2d/zip.hpp	47;"	d
OPENCV_CUDEV_UTIL_ATOMIC_HPP	opencv2/cudev/util/atomic.hpp	47;"	d
OPENCV_CUDEV_UTIL_LIMITS_HPP	opencv2/cudev/util/limits.hpp	47;"	d
OPENCV_CUDEV_UTIL_SATURATE_CAST_HPP	opencv2/cudev/util/saturate_cast.hpp	47;"	d
OPENCV_CUDEV_UTIL_SIMD_FUNCTIONS_HPP	opencv2/cudev/util/simd_functions.hpp	77;"	d
OPENCV_CUDEV_UTIL_TUPLE_DETAIL_HPP	opencv2/cudev/util/detail/tuple.hpp	47;"	d
OPENCV_CUDEV_UTIL_TUPLE_HPP	opencv2/cudev/util/tuple.hpp	47;"	d
OPENCV_CUDEV_UTIL_TYPE_TRAITS_DETAIL_HPP	opencv2/cudev/util/detail/type_traits.hpp	47;"	d
OPENCV_CUDEV_UTIL_TYPE_TRAITS_HPP	opencv2/cudev/util/type_traits.hpp	47;"	d
OPENCV_CUDEV_UTIL_VEC_MATH_HPP	opencv2/cudev/util/vec_math.hpp	47;"	d
OPENCV_CUDEV_UTIL_VEC_TRAITS_HPP	opencv2/cudev/util/vec_traits.hpp	47;"	d
OPENCV_CUDEV_WARP_REDUCE_DETAIL_HPP	opencv2/cudev/warp/detail/reduce.hpp	47;"	d
OPENCV_CUDEV_WARP_REDUCE_HPP	opencv2/cudev/warp/reduce.hpp	47;"	d
OPENCV_CUDEV_WARP_REDUCE_KEY_VAL_DETAIL_HPP	opencv2/cudev/warp/detail/reduce_key_val.hpp	47;"	d
OPENCV_CUDEV_WARP_SCAN_HPP	opencv2/cudev/warp/scan.hpp	47;"	d
OPENCV_CUDEV_WARP_SHUFFLE_HPP	opencv2/cudev/warp/shuffle.hpp	47;"	d
OPENCV_CUDEV_WARP_WARP_HPP	opencv2/cudev/warp/warp.hpp	47;"	d
OPENCV_EMD_L1_HPP	opencv2/shape/emdL1.hpp	44;"	d
OPENCV_ERROR	opencv2/core/core_c.h	2693;"	d
OPENCV_FEATURES_2D_HPP	opencv2/features2d.hpp	44;"	d
OPENCV_FLANN_ALLOCATOR_H_	opencv2/flann/allocator.h	32;"	d
OPENCV_FLANN_ALL_INDICES_H_	opencv2/flann/all_indices.h	31;"	d
OPENCV_FLANN_ANY_H_	opencv2/flann/any.h	2;"	d
OPENCV_FLANN_AUTOTUNED_INDEX_H_	opencv2/flann/autotuned_index.h	31;"	d
OPENCV_FLANN_BASE_HPP_	opencv2/flann/flann_base.hpp	32;"	d
OPENCV_FLANN_COMPOSITE_INDEX_H_	opencv2/flann/composite_index.h	32;"	d
OPENCV_FLANN_CONFIG_H_	opencv2/flann/config.h	31;"	d
OPENCV_FLANN_DATASET_H_	opencv2/flann/matrix.h	32;"	d
OPENCV_FLANN_DEFINES_H_	opencv2/flann/defines.h	31;"	d
OPENCV_FLANN_DIST_H_	opencv2/flann/dist.h	32;"	d
OPENCV_FLANN_DUMMY_H_	opencv2/flann/dummy.h	3;"	d
OPENCV_FLANN_DYNAMIC_BITSET_H_	opencv2/flann/dynamic_bitset.h	36;"	d
OPENCV_FLANN_GENERAL_H_	opencv2/flann/general.h	32;"	d
OPENCV_FLANN_GROUND_TRUTH_H_	opencv2/flann/ground_truth.h	32;"	d
OPENCV_FLANN_HDF5_H_	opencv2/flann/hdf5.h	31;"	d
OPENCV_FLANN_HEAP_H_	opencv2/flann/heap.h	32;"	d
OPENCV_FLANN_HIERARCHICAL_CLUSTERING_INDEX_H_	opencv2/flann/hierarchical_clustering_index.h	32;"	d
OPENCV_FLANN_HPP	opencv2/flann.hpp	44;"	d
OPENCV_FLANN_INDEX_TESTING_H_	opencv2/flann/index_testing.h	32;"	d
OPENCV_FLANN_KDTREE_INDEX_H_	opencv2/flann/kdtree_index.h	32;"	d
OPENCV_FLANN_KDTREE_SINGLE_INDEX_H_	opencv2/flann/kdtree_single_index.h	32;"	d
OPENCV_FLANN_KMEANS_INDEX_H_	opencv2/flann/kmeans_index.h	32;"	d
OPENCV_FLANN_LINEAR_INDEX_H_	opencv2/flann/linear_index.h	32;"	d
OPENCV_FLANN_LOGGER_H	opencv2/flann/logger.h	32;"	d
OPENCV_FLANN_LSH_INDEX_H_	opencv2/flann/lsh_index.h	36;"	d
OPENCV_FLANN_LSH_TABLE_H_	opencv2/flann/lsh_table.h	36;"	d
OPENCV_FLANN_NNINDEX_H	opencv2/flann/nn_index.h	32;"	d
OPENCV_FLANN_OBJECT_FACTORY_H_	opencv2/flann/object_factory.h	32;"	d
OPENCV_FLANN_PARAMS_H_	opencv2/flann/params.h	31;"	d
OPENCV_FLANN_RANDOM_H	opencv2/flann/random.h	32;"	d
OPENCV_FLANN_RESULTSET_H	opencv2/flann/result_set.h	32;"	d
OPENCV_FLANN_SAMPLING_H_	opencv2/flann/sampling.h	31;"	d
OPENCV_FLANN_SAVING_H_	opencv2/flann/saving.h	30;"	d
OPENCV_FLANN_SIMPLEX_DOWNHILL_H_	opencv2/flann/simplex_downhill.h	32;"	d
OPENCV_FLANN_TIMER_H	opencv2/flann/timer.h	32;"	d
OPENCV_HAL_1ST	opencv2/core/hal/intrin.hpp	56;"	d
OPENCV_HAL_ADD	opencv2/core/hal/intrin.hpp	53;"	d
OPENCV_HAL_AND	opencv2/core/hal/intrin.hpp	54;"	d
OPENCV_HAL_HPP	opencv2/core/hal/hal.hpp	46;"	d
OPENCV_HAL_IMPL_ADD_SUB_OP	opencv2/core/hal/intrin_cpp.hpp	635;"	d
OPENCV_HAL_IMPL_BIN_OP	opencv2/core/hal/intrin_cpp.hpp	376;"	d
OPENCV_HAL_IMPL_BIT_OP	opencv2/core/hal/intrin_cpp.hpp	415;"	d
OPENCV_HAL_IMPL_CMP_OP	opencv2/core/hal/intrin_cpp.hpp	592;"	d
OPENCV_HAL_IMPL_C_INIT_VAL	opencv2/core/hal/intrin_cpp.hpp	1532;"	d
OPENCV_HAL_IMPL_C_INIT_ZERO	opencv2/core/hal/intrin_cpp.hpp	1512;"	d
OPENCV_HAL_IMPL_C_PACK	opencv2/core/hal/intrin_cpp.hpp	1630;"	d
OPENCV_HAL_IMPL_C_PACK_STORE	opencv2/core/hal/intrin_cpp.hpp	1696;"	d
OPENCV_HAL_IMPL_C_REINTERPRET	opencv2/core/hal/intrin_cpp.hpp	1552;"	d
OPENCV_HAL_IMPL_C_RSHIFTR	opencv2/core/hal/intrin_cpp.hpp	1608;"	d
OPENCV_HAL_IMPL_C_RSHR_PACK	opencv2/core/hal/intrin_cpp.hpp	1663;"	d
OPENCV_HAL_IMPL_C_RSHR_PACK_STORE	opencv2/core/hal/intrin_cpp.hpp	1724;"	d
OPENCV_HAL_IMPL_C_SHIFTL	opencv2/core/hal/intrin_cpp.hpp	1574;"	d
OPENCV_HAL_IMPL_C_SHIFTR	opencv2/core/hal/intrin_cpp.hpp	1591;"	d
OPENCV_HAL_IMPL_MATH_FUNC	opencv2/core/hal/intrin_cpp.hpp	466;"	d
OPENCV_HAL_IMPL_MINMAX_FUNC	opencv2/core/hal/intrin_cpp.hpp	515;"	d
OPENCV_HAL_IMPL_NEON_ABS	opencv2/core/hal/intrin_neon.hpp	551;"	d
OPENCV_HAL_IMPL_NEON_BIN_FUNC	opencv2/core/hal/intrin_neon.hpp	599;"	d
OPENCV_HAL_IMPL_NEON_BIN_FUNC2	opencv2/core/hal/intrin_neon.hpp	681;"	d
OPENCV_HAL_IMPL_NEON_BIN_OP	opencv2/core/hal/intrin_neon.hpp	396;"	d
OPENCV_HAL_IMPL_NEON_CHECK_ALLANY	opencv2/core/hal/intrin_neon.hpp	858;"	d
OPENCV_HAL_IMPL_NEON_DBL_BIT_OP	opencv2/core/hal/intrin_neon.hpp	562;"	d
OPENCV_HAL_IMPL_NEON_EXPAND	opencv2/core/hal/intrin_neon.hpp	925;"	d
OPENCV_HAL_IMPL_NEON_EXTRACT	opencv2/core/hal/intrin_neon.hpp	1011;"	d
OPENCV_HAL_IMPL_NEON_FLT_BIT_OP	opencv2/core/hal/intrin_neon.hpp	501;"	d
OPENCV_HAL_IMPL_NEON_INIT	opencv2/core/hal/intrin_neon.hpp	310;"	d
OPENCV_HAL_IMPL_NEON_INIT_64	opencv2/core/hal/intrin_neon.hpp	334;"	d
OPENCV_HAL_IMPL_NEON_INTERLEAVED	opencv2/core/hal/intrin_neon.hpp	1115;"	d
OPENCV_HAL_IMPL_NEON_INT_CMP_OP	opencv2/core/hal/intrin_neon.hpp	636;"	d
OPENCV_HAL_IMPL_NEON_LOADSTORE_OP	opencv2/core/hal/intrin_neon.hpp	747;"	d
OPENCV_HAL_IMPL_NEON_LOGIC_OP	opencv2/core/hal/intrin_neon.hpp	483;"	d
OPENCV_HAL_IMPL_NEON_PACK	opencv2/core/hal/intrin_neon.hpp	349;"	d
OPENCV_HAL_IMPL_NEON_REDUCE_OP_4	opencv2/core/hal/intrin_neon.hpp	799;"	d
OPENCV_HAL_IMPL_NEON_REDUCE_OP_8	opencv2/core/hal/intrin_neon.hpp	784;"	d
OPENCV_HAL_IMPL_NEON_REINTERPRET	opencv2/core/hal/intrin_neon.hpp	64;"	d
OPENCV_HAL_IMPL_NEON_SELECT	opencv2/core/hal/intrin_neon.hpp	908;"	d
OPENCV_HAL_IMPL_NEON_SHIFT_OP	opencv2/core/hal/intrin_neon.hpp	726;"	d
OPENCV_HAL_IMPL_NEON_TRANSPOSE4x4	opencv2/core/hal/intrin_neon.hpp	1089;"	d
OPENCV_HAL_IMPL_NEON_UNPACKS	opencv2/core/hal/intrin_neon.hpp	958;"	d
OPENCV_HAL_IMPL_NEON_UNPACKS	opencv2/core/hal/intrin_neon.hpp	978;"	d
OPENCV_HAL_IMPL_REDUCE_MINMAX_FUNC	opencv2/core/hal/intrin_cpp.hpp	526;"	d
OPENCV_HAL_IMPL_SHIFT_OP	opencv2/core/hal/intrin_cpp.hpp	829;"	d
OPENCV_HAL_IMPL_SSE_ABSDIFF_8_16	opencv2/core/hal/intrin_sse.hpp	909;"	d
OPENCV_HAL_IMPL_SSE_ABS_INT_FUNC	opencv2/core/hal/intrin_sse.hpp	743;"	d
OPENCV_HAL_IMPL_SSE_BIN_FUNC	opencv2/core/hal/intrin_sse.hpp	765;"	d
OPENCV_HAL_IMPL_SSE_BIN_OP	opencv2/core/hal/intrin_sse.hpp	604;"	d
OPENCV_HAL_IMPL_SSE_CHECK_SIGNS	opencv2/core/hal/intrin_sse.hpp	1124;"	d
OPENCV_HAL_IMPL_SSE_EXPAND	opencv2/core/hal/intrin_sse.hpp	1167;"	d
OPENCV_HAL_IMPL_SSE_FLT_CMP_OP	opencv2/core/hal/intrin_sse.hpp	883;"	d
OPENCV_HAL_IMPL_SSE_INITVEC	opencv2/core/hal/intrin_sse.hpp	276;"	d
OPENCV_HAL_IMPL_SSE_INIT_FROM_FLT	opencv2/core/hal/intrin_sse.hpp	309;"	d
OPENCV_HAL_IMPL_SSE_INT_CMP_OP	opencv2/core/hal/intrin_sse.hpp	821;"	d
OPENCV_HAL_IMPL_SSE_LOADSTORE_FLT_OP	opencv2/core/hal/intrin_sse.hpp	1031;"	d
OPENCV_HAL_IMPL_SSE_LOADSTORE_INTERLEAVE	opencv2/core/hal/intrin_sse.hpp	1645;"	d
OPENCV_HAL_IMPL_SSE_LOADSTORE_INT_OP	opencv2/core/hal/intrin_sse.hpp	1003;"	d
OPENCV_HAL_IMPL_SSE_LOGIC_OP	opencv2/core/hal/intrin_sse.hpp	701;"	d
OPENCV_HAL_IMPL_SSE_MISC_FLT_OP	opencv2/core/hal/intrin_sse.hpp	937;"	d
OPENCV_HAL_IMPL_SSE_REDUCE_OP_4	opencv2/core/hal/intrin_sse.hpp	1104;"	d
OPENCV_HAL_IMPL_SSE_REDUCE_OP_8	opencv2/core/hal/intrin_sse.hpp	1064;"	d
OPENCV_HAL_IMPL_SSE_REDUCE_OP_8_SUM	opencv2/core/hal/intrin_sse.hpp	1083;"	d
OPENCV_HAL_IMPL_SSE_SELECT	opencv2/core/hal/intrin_sse.hpp	1150;"	d
OPENCV_HAL_IMPL_SSE_SHIFT_OP	opencv2/core/hal/intrin_sse.hpp	961;"	d
OPENCV_HAL_IMPL_SSE_TRANSPOSE4x4	opencv2/core/hal/intrin_sse.hpp	1317;"	d
OPENCV_HAL_IMPL_SSE_UNPACKS	opencv2/core/hal/intrin_sse.hpp	1232;"	d
OPENCV_HAL_INTRIN_CPP_HPP	opencv2/core/hal/intrin_cpp.hpp	46;"	d
OPENCV_HAL_INTRIN_HPP	opencv2/core/hal/intrin.hpp	46;"	d
OPENCV_HAL_INTRIN_NEON_HPP	opencv2/core/hal/intrin_neon.hpp	46;"	d
OPENCV_HAL_NEON_UTILS_HPP	opencv2/core/neon_utils.hpp	43;"	d
OPENCV_HAL_NOP	opencv2/core/hal/intrin.hpp	55;"	d
OPENCV_HAL_PACKS	opencv2/core/hal/intrin_sse.hpp	1134;"	d
OPENCV_HAL_SSE_HPP	opencv2/core/hal/intrin_sse.hpp	46;"	d
OPENCV_HIGHGUI_H	opencv2/highgui/highgui_c.h	43;"	d
OPENCV_HIGHGUI_HPP	opencv2/highgui.hpp	44;"	d
OPENCV_HIST_COST_HPP	opencv2/shape/hist_cost.hpp	45;"	d
OPENCV_IMGCODECS_H	opencv2/imgcodecs/imgcodecs_c.h	43;"	d
OPENCV_IMGCODECS_HPP	opencv2/imgcodecs.hpp	44;"	d
OPENCV_IMGPROC_DETAIL_DISTORTION_MODEL_HPP	opencv2/imgproc/detail/distortion_model.hpp	44;"	d
OPENCV_IMGPROC_HAL_INTERFACE_H	opencv2/imgproc/hal/interface.h	2;"	d
OPENCV_IMGPROC_HPP	opencv2/imgproc.hpp	44;"	d
OPENCV_IMGPROC_IMGPROC_C_H	opencv2/imgproc/imgproc_c.h	44;"	d
OPENCV_IMGPROC_TYPES_C_H	opencv2/imgproc/types_c.h	44;"	d
OPENCV_MINIFLANN_HPP	opencv2/flann/miniflann.hpp	44;"	d
OPENCV_ML_HPP	opencv2/ml.hpp	45;"	d
OPENCV_OBJDETECT_C_H	opencv2/objdetect/objdetect_c.h	45;"	d
OPENCV_OBJDETECT_DBT_HPP	opencv2/objdetect/detection_based_tracker.hpp	45;"	d
OPENCV_OBJDETECT_HPP	opencv2/objdetect.hpp	45;"	d
OPENCV_OLD_AUX_H	opencv/cvaux.h	43;"	d
OPENCV_OLD_AUX_HPP	opencv/cvaux.hpp	43;"	d
OPENCV_OLD_CV_H	opencv/cv.h	44;"	d
OPENCV_OLD_CV_HPP	opencv/cv.hpp	44;"	d
OPENCV_OLD_CXCORE_H	opencv/cxcore.h	44;"	d
OPENCV_OLD_CXCORE_HPP	opencv/cxcore.hpp	44;"	d
OPENCV_OLD_CXMISC_H	opencv/cxmisc.h	2;"	d
OPENCV_OLD_EIGEN_HPP	opencv/cxeigen.hpp	44;"	d
OPENCV_OLD_HIGHGUI_H	opencv/highgui.h	43;"	d
OPENCV_OLD_ML_H	opencv/ml.h	42;"	d
OPENCV_OLD_WIMAGE_HPP	opencv/cvwimage.h	42;"	d
OPENCV_OPENCL_GENBASE_HPP	opencv2/core/ocl_genbase.hpp	43;"	d
OPENCV_OPENCL_HPP	opencv2/core/ocl.hpp	43;"	d
OPENCV_OPTIM_HPP	opencv2/core/optim.hpp	43;"	d
OPENCV_OVX_HPP	opencv2/core/ovx.hpp	12;"	d
OPENCV_PHOTO_CUDA_HPP	opencv2/photo/cuda.hpp	44;"	d
OPENCV_PHOTO_C_H	opencv2/photo/photo_c.h	44;"	d
OPENCV_PHOTO_HPP	opencv2/photo.hpp	44;"	d
OPENCV_SHAPE_HPP	opencv2/shape.hpp	44;"	d
OPENCV_SHAPE_SHAPE_DISTANCE_HPP	opencv2/shape/shape_distance.hpp	45;"	d
OPENCV_SHAPE_SHAPE_TRANSFORM_HPP	opencv2/shape/shape_transformer.hpp	45;"	d
OPENCV_STITCHING_AUTOCALIB_HPP	opencv2/stitching/detail/autocalib.hpp	44;"	d
OPENCV_STITCHING_BLENDERS_HPP	opencv2/stitching/detail/blenders.hpp	44;"	d
OPENCV_STITCHING_CAMERA_HPP	opencv2/stitching/detail/camera.hpp	44;"	d
OPENCV_STITCHING_EXPOSURE_COMPENSATE_HPP	opencv2/stitching/detail/exposure_compensate.hpp	44;"	d
OPENCV_STITCHING_MATCHERS_HPP	opencv2/stitching/detail/matchers.hpp	44;"	d
OPENCV_STITCHING_MOTION_ESTIMATORS_HPP	opencv2/stitching/detail/motion_estimators.hpp	44;"	d
OPENCV_STITCHING_SEAM_FINDERS_HPP	opencv2/stitching/detail/seam_finders.hpp	44;"	d
OPENCV_STITCHING_STITCHER_HPP	opencv2/stitching.hpp	44;"	d
OPENCV_STITCHING_TIMELAPSERS_HPP	opencv2/stitching/detail/timelapsers.hpp	45;"	d
OPENCV_STITCHING_UTIL_HPP	opencv2/stitching/detail/util.hpp	44;"	d
OPENCV_STITCHING_UTIL_INL_HPP	opencv2/stitching/detail/util_inl.hpp	44;"	d
OPENCV_STITCHING_WARPERS_HPP	opencv2/stitching/detail/warpers.hpp	44;"	d
OPENCV_STITCHING_WARPERS_INL_HPP	opencv2/stitching/detail/warpers_inl.hpp	44;"	d
OPENCV_STITCHING_WARPER_CREATORS_HPP	opencv2/stitching/warpers.hpp	44;"	d
OPENCV_SUPERRES_HPP	opencv2/superres.hpp	44;"	d
OPENCV_SUPERRES_OPTICAL_FLOW_HPP	opencv2/superres/optical_flow.hpp	44;"	d
OPENCV_TRACKING_C_H	opencv2/video/tracking_c.h	45;"	d
OPENCV_TRACKING_HPP	opencv2/video/tracking.hpp	45;"	d
OPENCV_VERSION_HPP	opencv2/core/version.hpp	51;"	d
OPENCV_VIDEOIO_H	opencv2/videoio/videoio_c.h	43;"	d
OPENCV_VIDEOIO_HPP	opencv2/videoio.hpp	44;"	d
OPENCV_VIDEOSTAB_DEBLURRING_HPP	opencv2/videostab/deblurring.hpp	44;"	d
OPENCV_VIDEOSTAB_FAST_MARCHING_HPP	opencv2/videostab/fast_marching.hpp	44;"	d
OPENCV_VIDEOSTAB_FAST_MARCHING_INL_HPP	opencv2/videostab/fast_marching_inl.hpp	44;"	d
OPENCV_VIDEOSTAB_FRAME_SOURCE_HPP	opencv2/videostab/frame_source.hpp	44;"	d
OPENCV_VIDEOSTAB_GLOBAL_MOTION_HPP	opencv2/videostab/global_motion.hpp	44;"	d
OPENCV_VIDEOSTAB_HPP	opencv2/videostab.hpp	44;"	d
OPENCV_VIDEOSTAB_INPAINTINT_HPP	opencv2/videostab/inpainting.hpp	44;"	d
OPENCV_VIDEOSTAB_LOG_HPP	opencv2/videostab/log.hpp	44;"	d
OPENCV_VIDEOSTAB_MOTION_CORE_HPP	opencv2/videostab/motion_core.hpp	44;"	d
OPENCV_VIDEOSTAB_MOTION_STABILIZING_HPP	opencv2/videostab/motion_stabilizing.hpp	44;"	d
OPENCV_VIDEOSTAB_OPTICAL_FLOW_HPP	opencv2/videostab/optical_flow.hpp	44;"	d
OPENCV_VIDEOSTAB_OUTLIER_REJECTION_HPP	opencv2/videostab/outlier_rejection.hpp	44;"	d
OPENCV_VIDEOSTAB_RING_BUFFER_HPP	opencv2/videostab/ring_buffer.hpp	44;"	d
OPENCV_VIDEOSTAB_STABILIZER_HPP	opencv2/videostab/stabilizer.hpp	44;"	d
OPENCV_VIDEOSTAB_WOBBLE_SUPPRESSION_HPP	opencv2/videostab/wobble_suppression.hpp	44;"	d
OPENCV_VIDEO_HPP	opencv2/video.hpp	45;"	d
OPENGL_BUFFER	opencv2/core/mat.hpp	/^        OPENGL_BUFFER     = 7 << KIND_SHIFT,$/;"	e	enum:cv::_InputArray::__anon273
OPTFLOW_FARNEBACK_GAUSSIAN	opencv2/video/tracking.hpp	/^       OPTFLOW_FARNEBACK_GAUSSIAN   = 256$/;"	e	enum:cv::__anon336
OPTFLOW_LK_GET_MIN_EIGENVALS	opencv2/video/tracking.hpp	/^       OPTFLOW_LK_GET_MIN_EIGENVALS = 8,$/;"	e	enum:cv::__anon336
OPTFLOW_USE_INITIAL_FLOW	opencv2/video/tracking.hpp	/^enum { OPTFLOW_USE_INITIAL_FLOW     = 4,$/;"	e	enum:cv::__anon336
ORB	opencv2/cudafeatures2d.hpp	/^class CV_EXPORTS ORB : public cv::ORB, public Feature2DAsync$/;"	c	namespace:cv::cuda
ORB	opencv2/features2d.hpp	/^class CV_EXPORTS_W ORB : public Feature2D$/;"	c	namespace:cv
ORIG_RESOL	opencv2/stitching.hpp	/^    enum { ORIG_RESOL = -1 };$/;"	e	enum:cv::Stitcher::__anon335
Object	opencv2/objdetect/detection_based_tracker.hpp	/^        typedef std::pair<cv::Rect, int> Object;$/;"	t	class:cv::DetectionBasedTracker
ObjectFactory	opencv2/flann/object_factory.h	/^    ObjectFactory() {}$/;"	f	class:cvflann::ObjectFactory
ObjectFactory	opencv2/flann/object_factory.h	/^class ObjectFactory$/;"	c	namespace:cvflann
ObjectRegistry	opencv2/flann/object_factory.h	/^    typedef std::map<UniqueIdType, ObjectCreator> ObjectRegistry;$/;"	t	class:cvflann::ObjectFactory
ObjectStatus	opencv2/objdetect/detection_based_tracker.hpp	/^        enum ObjectStatus$/;"	g	class:cv::DetectionBasedTracker
OclVectorStrategy	opencv2/core/ocl.hpp	/^enum OclVectorStrategy$/;"	g	namespace:cv::ocl
OnePassStabilizer	opencv2/videostab/stabilizer.hpp	/^class CV_EXPORTS OnePassStabilizer : public StabilizerBase, public IFrameSource$/;"	c	namespace:cv::videostab
OpUnroller	opencv2/core/cuda/detail/transform_detail.hpp	/^        template <> struct OpUnroller<1>$/;"	s	namespace:cv::cuda::device::transform_detail
OpUnroller	opencv2/core/cuda/detail/transform_detail.hpp	/^        template <> struct OpUnroller<2>$/;"	s	namespace:cv::cuda::device::transform_detail
OpUnroller	opencv2/core/cuda/detail/transform_detail.hpp	/^        template <> struct OpUnroller<3>$/;"	s	namespace:cv::cuda::device::transform_detail
OpUnroller	opencv2/core/cuda/detail/transform_detail.hpp	/^        template <> struct OpUnroller<4>$/;"	s	namespace:cv::cuda::device::transform_detail
OpUnroller	opencv2/core/cuda/detail/transform_detail.hpp	/^        template <> struct OpUnroller<8>$/;"	s	namespace:cv::cuda::device::transform_detail
OpUnroller	opencv2/cudev/grid/detail/transform.hpp	/^    template <> struct OpUnroller<1>$/;"	s	namespace:cv::cudev::grid_transform_detail
OpUnroller	opencv2/cudev/grid/detail/transform.hpp	/^    template <> struct OpUnroller<2>$/;"	s	namespace:cv::cudev::grid_transform_detail
OpUnroller	opencv2/cudev/grid/detail/transform.hpp	/^    template <> struct OpUnroller<3>$/;"	s	namespace:cv::cudev::grid_transform_detail
OpUnroller	opencv2/cudev/grid/detail/transform.hpp	/^    template <> struct OpUnroller<4>$/;"	s	namespace:cv::cudev::grid_transform_detail
OpenCLApiCallError	opencv2/core/base.hpp	/^    OpenCLApiCallError=        -220,$/;"	e	enum:cv::Error::Code
OpenCLDoubleNotSupported	opencv2/core/base.hpp	/^    OpenCLDoubleNotSupported=  -221,$/;"	e	enum:cv::Error::Code
OpenCLInitError	opencv2/core/base.hpp	/^    OpenCLInitError=           -222,$/;"	e	enum:cv::Error::Code
OpenCLNoAMDBlasFft	opencv2/core/base.hpp	/^    OpenCLNoAMDBlasFft=        -223$/;"	e	enum:cv::Error::Code
OpenGlApiCallError	opencv2/core/base.hpp	/^    OpenGlApiCallError=        -219,$/;"	e	enum:cv::Error::Code
OpenGlDrawCallback	opencv2/highgui.hpp	/^typedef void (*OpenGlDrawCallback)(void* userdata);$/;"	t	namespace:cv
OpenGlNotSupported	opencv2/core/base.hpp	/^    OpenGlNotSupported=        -218,$/;"	e	enum:cv::Error::Code
OpticalFlowDual_TVL1	opencv2/cudaoptflow.hpp	/^class CV_EXPORTS OpticalFlowDual_TVL1 : public DenseOpticalFlow$/;"	c	namespace:cv::cuda
OrbFeaturesFinder	opencv2/stitching/detail/matchers.hpp	/^class CV_EXPORTS OrbFeaturesFinder : public FeaturesFinder$/;"	c	namespace:cv::detail
OutputArray	opencv2/core/mat.hpp	/^typedef const _OutputArray& OutputArray;$/;"	t	namespace:cv
OutputArrayOfArrays	opencv2/core/mat.hpp	/^typedef OutputArray OutputArrayOfArrays;$/;"	t	namespace:cv
P	opencv2/ml.hpp	/^        P=2,$/;"	e	enum:cv::ml::SVM::ParamTypes
PAGE_LOCKED	opencv2/core/cuda.hpp	/^    enum AllocType { PAGE_LOCKED = 1, SHARED = 2, WRITE_COMBINED = 4 };$/;"	e	enum:cv::cuda::HostMem::AllocType
PANORAMA	opencv2/stitching.hpp	/^        PANORAMA = 0,$/;"	e	enum:cv::Stitcher::Mode
PB_DS_0_NODE_METADATA_HPP	5/ext/pb_ds/detail/branch_policy/null_node_metadata.hpp	42;"	d
PB_DS_ASSERT_AUX_NULL	5/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp	304;"	d
PB_DS_ASSERT_AUX_NULL	5/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp	315;"	d
PB_DS_ASSERT_BASE_NODE_CONSISTENT	5/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp	192;"	d
PB_DS_ASSERT_BASE_NODE_CONSISTENT	5/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp	203;"	d
PB_DS_ASSERT_BASE_NODE_CONSISTENT	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	256;"	d
PB_DS_ASSERT_BASE_NODE_CONSISTENT	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	268;"	d
PB_DS_ASSERT_NODE_CONSISTENT	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	402;"	d
PB_DS_ASSERT_NODE_CONSISTENT	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	416;"	d
PB_DS_ASSERT_NODE_CONSISTENT	5/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp	168;"	d
PB_DS_ASSERT_NODE_CONSISTENT	5/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp	179;"	d
PB_DS_ASSERT_NODE_CONSISTENT	5/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp	300;"	d
PB_DS_ASSERT_NODE_CONSISTENT	5/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp	316;"	d
PB_DS_ASSERT_NODE_VALID	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	570;"	d
PB_DS_ASSERT_NODE_VALID	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	589;"	d
PB_DS_ASSERT_VALID	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	324;"	d
PB_DS_ASSERT_VALID	5/ext/pb_ds/detail/container_base_dispatch.hpp	46;"	d
PB_DS_ASSERT_VALID	5/ext/pb_ds/detail/container_base_dispatch.hpp	99;"	d
PB_DS_ASSERT_VALID	5/ext/pb_ds/detail/priority_queue_base_dispatch.hpp	44;"	d
PB_DS_ASSERT_VALID	5/ext/pb_ds/detail/priority_queue_base_dispatch.hpp	60;"	d
PB_DS_ASSERT_VALID	5/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_imp.hpp	293;"	d
PB_DS_ASSERT_VALID	5/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_imp.hpp	41;"	d
PB_DS_ASSERT_VALID_COND	5/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp	189;"	d
PB_DS_ASSERT_VALID_COND	5/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp	204;"	d
PB_DS_ASSOC_CNTNR_BASE_DS_DISPATCHER_HPP	5/ext/pb_ds/detail/container_base_dispatch.hpp	42;"	d
PB_DS_ASSOC_CNTNR_HPP	5/ext/pb_ds/assoc_container.hpp	42;"	d
PB_DS_BASE_T_P	5/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp	319;"	d
PB_DS_BASE_T_P	5/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp	61;"	d
PB_DS_BASIC_HEAP_CIT_BASE	5/ext/pb_ds/detail/left_child_next_sibling_heap_/const_iterator.hpp	154;"	d
PB_DS_BASIC_HEAP_CIT_BASE	5/ext/pb_ds/detail/left_child_next_sibling_heap_/const_iterator.hpp	55;"	d
PB_DS_BINARY_HEAP_CONST_FIND_ITERATOR_HPP	5/ext/pb_ds/detail/binary_heap_/point_const_iterator.hpp	43;"	d
PB_DS_BINARY_HEAP_CONST_ITERATOR_HPP	5/ext/pb_ds/detail/binary_heap_/const_iterator.hpp	43;"	d
PB_DS_BINARY_HEAP_ENTRY_CMP_HPP	5/ext/pb_ds/detail/binary_heap_/entry_cmp.hpp	42;"	d
PB_DS_BINARY_HEAP_ENTRY_PRED_HPP	5/ext/pb_ds/detail/binary_heap_/entry_pred.hpp	42;"	d
PB_DS_BINARY_HEAP_HPP	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	42;"	d
PB_DS_BINARY_HEAP_RESIZE_POLICY_HPP	5/ext/pb_ds/detail/binary_heap_/resize_policy.hpp	42;"	d
PB_DS_BINOMIAL_HEAP_BASE_HPP	5/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp	42;"	d
PB_DS_BIN_HEAP_CIT_BASE	5/ext/pb_ds/detail/binary_heap_/const_iterator.hpp	135;"	d
PB_DS_BIN_HEAP_CIT_BASE	5/ext/pb_ds/detail/binary_heap_/const_iterator.hpp	52;"	d
PB_DS_BIN_SEARCH_TREE_FIND_ITERATORS_HPP	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	42;"	d
PB_DS_BIN_SEARCH_TREE_NODE_AND_IT_TRAITS_HPP	5/ext/pb_ds/detail/bin_search_tree_/traits.hpp	42;"	d
PB_DS_BIN_SEARCH_TREE_NODE_ITERATORS_HPP	5/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp	42;"	d
PB_DS_BIN_TREE_NAME	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	/^    class PB_DS_BIN_TREE_NAME :$/;"	c	namespace:__gnu_pbds::detail
PB_DS_BIN_TREE_NAME	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	420;"	d
PB_DS_BIN_TREE_NAME	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	60;"	d
PB_DS_BIN_TREE_NAME	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	64;"	d
PB_DS_BIN_TREE_NAME	5/ext/pb_ds/detail/bin_search_tree_/constructors_destructor_fn_imps.hpp	/^PB_DS_BIN_TREE_NAME() : m_p_head(s_node_allocator.allocate(1)), m_size(0)$/;"	f	class:PB_DS_CLASS_C_DEC
PB_DS_BIN_TREE_NAME	5/ext/pb_ds/detail/bin_search_tree_/constructors_destructor_fn_imps.hpp	/^PB_DS_BIN_TREE_NAME(const Cmp_Fn& r_cmp_fn) :$/;"	f	class:PB_DS_CLASS_C_DEC
PB_DS_BIN_TREE_NAME	5/ext/pb_ds/detail/bin_search_tree_/constructors_destructor_fn_imps.hpp	/^PB_DS_BIN_TREE_NAME(const Cmp_Fn& r_cmp_fn, const node_update& r_node_update) :$/;"	f	class:PB_DS_CLASS_C_DEC
PB_DS_BIN_TREE_NAME	5/ext/pb_ds/detail/bin_search_tree_/constructors_destructor_fn_imps.hpp	/^PB_DS_BIN_TREE_NAME(const PB_DS_CLASS_C_DEC& other) :$/;"	f	class:PB_DS_CLASS_C_DEC
PB_DS_BIN_TREE_TRAITS_BASE	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	421;"	d
PB_DS_BIN_TREE_TRAITS_BASE	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	74;"	d
PB_DS_BRANCH_BASE	5/ext/pb_ds/assoc_container.hpp	528;"	d
PB_DS_BRANCH_BASE	5/ext/pb_ds/assoc_container.hpp	599;"	d
PB_DS_BRANCH_POLICY_BASE	5/ext/pb_ds/tree_policy.hpp	153;"	d
PB_DS_BRANCH_POLICY_BASE	5/ext/pb_ds/tree_policy.hpp	58;"	d
PB_DS_BRANCH_POLICY_BASE_HPP	5/ext/pb_ds/detail/branch_policy/branch_policy.hpp	42;"	d
PB_DS_B_HEAP_BASE	5/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp	207;"	d
PB_DS_B_HEAP_BASE	5/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp	66;"	d
PB_DS_CC_HASH_BASE	5/ext/pb_ds/assoc_container.hpp	166;"	d
PB_DS_CC_HASH_BASE	5/ext/pb_ds/assoc_container.hpp	325;"	d
PB_DS_CC_HASH_NAME	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^    class PB_DS_CC_HASH_NAME:$/;"	c	namespace:__gnu_pbds::detail
PB_DS_CC_HASH_NAME	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	62;"	d
PB_DS_CC_HASH_NAME	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	66;"	d
PB_DS_CC_HASH_NAME	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	677;"	d
PB_DS_CC_HASH_NAME	5/ext/pb_ds/detail/cc_hash_table_map_/constructor_destructor_fn_imps.hpp	/^PB_DS_CC_HASH_NAME() :$/;"	f	class:PB_DS_CLASS_C_DEC
PB_DS_CC_HASH_NAME	5/ext/pb_ds/detail/cc_hash_table_map_/constructor_destructor_fn_imps.hpp	/^PB_DS_CC_HASH_NAME(const Hash_Fn& r_hash_fn) :$/;"	f	class:PB_DS_CLASS_C_DEC
PB_DS_CC_HASH_NAME	5/ext/pb_ds/detail/cc_hash_table_map_/constructor_destructor_fn_imps.hpp	/^PB_DS_CC_HASH_NAME(const Hash_Fn& r_hash_fn, const Eq_Fn& r_eq_fn) :$/;"	f	class:PB_DS_CLASS_C_DEC
PB_DS_CC_HASH_NAME	5/ext/pb_ds/detail/cc_hash_table_map_/constructor_destructor_fn_imps.hpp	/^PB_DS_CC_HASH_NAME(const Hash_Fn& r_hash_fn, const Eq_Fn& r_eq_fn, $/;"	f	class:PB_DS_CLASS_C_DEC
PB_DS_CC_HASH_NAME	5/ext/pb_ds/detail/cc_hash_table_map_/constructor_destructor_fn_imps.hpp	/^PB_DS_CC_HASH_NAME(const PB_DS_CLASS_C_DEC& other) :$/;"	f	class:PB_DS_CLASS_C_DEC
PB_DS_CC_HASH_TRAITS_BASE	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	675;"	d
PB_DS_CC_HASH_TRAITS_BASE	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	84;"	d
PB_DS_CHECK_KEY_DOES_NOT_EXIST	5/ext/pb_ds/detail/container_base_dispatch.hpp	58;"	d
PB_DS_CHECK_KEY_DOES_NOT_EXIST	5/ext/pb_ds/detail/container_base_dispatch.hpp	96;"	d
PB_DS_CHECK_KEY_EXISTS	5/ext/pb_ds/detail/container_base_dispatch.hpp	55;"	d
PB_DS_CHECK_KEY_EXISTS	5/ext/pb_ds/detail/container_base_dispatch.hpp	97;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	418;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	71;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	344;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	67;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/binomial_heap_/binomial_heap_.hpp	109;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/binomial_heap_/binomial_heap_.hpp	59;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp	205;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp	62;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	672;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	74;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/debug_map_base.hpp	341;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/debug_map_base.hpp	67;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	706;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	72;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp	137;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp	143;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp	240;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp	245;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp	297;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp	302;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp	354;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp	61;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp	161;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp	167;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp	288;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp	61;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/left_child_next_sibling_heap_/const_iterator.hpp	153;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/left_child_next_sibling_heap_/const_iterator.hpp	52;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp	280;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp	68;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/left_child_next_sibling_heap_/point_const_iterator.hpp	144;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/left_child_next_sibling_heap_/point_const_iterator.hpp	56;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	338;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	72;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	532;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	77;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp	180;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp	60;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	590;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	77;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	1357;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	993;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	243;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	65;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp	167;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp	54;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	270;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	94;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp	317;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp	57;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/tree_trace_base.hpp	170;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/tree_trace_base.hpp	59;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/trie_policy/trie_policy_base.hpp	117;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/detail/trie_policy/trie_policy_base.hpp	202;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/hash_policy.hpp	102;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/hash_policy.hpp	105;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/hash_policy.hpp	134;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/hash_policy.hpp	137;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/hash_policy.hpp	166;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/hash_policy.hpp	169;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/hash_policy.hpp	284;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/hash_policy.hpp	288;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/hash_policy.hpp	405;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/hash_policy.hpp	408;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/hash_policy.hpp	443;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/hash_policy.hpp	446;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/hash_policy.hpp	478;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/hash_policy.hpp	482;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/hash_policy.hpp	57;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/hash_policy.hpp	613;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/hash_policy.hpp	78;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/hash_policy.hpp	81;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/tree_policy.hpp	152;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/tree_policy.hpp	55;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/trie_policy.hpp	136;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/trie_policy.hpp	142;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/trie_policy.hpp	242;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/trie_policy.hpp	244;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/trie_policy.hpp	355;"	d
PB_DS_CLASS_C_DEC	5/ext/pb_ds/trie_policy.hpp	56;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	419;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	67;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	345;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	64;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/binomial_heap_/binomial_heap_.hpp	110;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/binomial_heap_/binomial_heap_.hpp	56;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp	206;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp	59;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	671;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	69;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/debug_map_base.hpp	340;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/debug_map_base.hpp	64;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	67;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	705;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp	136;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp	139;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp	239;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp	242;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp	296;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp	299;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp	353;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp	57;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp	160;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp	163;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp	287;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp	57;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp	281;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp	64;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/left_child_next_sibling_heap_/point_const_iterator.hpp	143;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/left_child_next_sibling_heap_/point_const_iterator.hpp	53;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	337;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	68;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	533;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	73;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp	181;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp	57;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	591;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	73;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	1356;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	990;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	242;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	51;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp	168;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp	51;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	269;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	90;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp	318;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp	54;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/tree_trace_base.hpp	169;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/tree_trace_base.hpp	55;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/trie_policy/trie_policy_base.hpp	113;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/detail/trie_policy/trie_policy_base.hpp	201;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/hash_policy.hpp	101;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/hash_policy.hpp	104;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/hash_policy.hpp	133;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/hash_policy.hpp	136;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/hash_policy.hpp	165;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/hash_policy.hpp	168;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/hash_policy.hpp	283;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/hash_policy.hpp	287;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/hash_policy.hpp	404;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/hash_policy.hpp	407;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/hash_policy.hpp	442;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/hash_policy.hpp	445;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/hash_policy.hpp	477;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/hash_policy.hpp	480;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/hash_policy.hpp	56;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/hash_policy.hpp	612;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/hash_policy.hpp	77;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/hash_policy.hpp	80;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/tree_policy.hpp	151;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/tree_policy.hpp	51;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/trie_policy.hpp	135;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/trie_policy.hpp	138;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/trie_policy.hpp	354;"	d
PB_DS_CLASS_T_DEC	5/ext/pb_ds/trie_policy.hpp	51;"	d
PB_DS_COND_DEALTOR_HPP	5/ext/pb_ds/detail/cond_dealtor.hpp	42;"	d
PB_DS_CONST_IT_C_DEC	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	471;"	d
PB_DS_CONST_NODE_ITERATOR_NAME	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	540;"	d
PB_DS_CONST_NODE_ITERATOR_NAME	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	65;"	d
PB_DS_CONST_NODE_ITERATOR_NAME	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	70;"	d
PB_DS_CONST_ODIR_IT_C_DEC	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	474;"	d
PB_DS_CONST_ODIR_IT_C_DEC	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	796;"	d
PB_DS_DATA_FALSE_INDICATOR	5/ext/pb_ds/detail/container_base_dispatch.hpp	79;"	d
PB_DS_DATA_FALSE_INDICATOR	5/ext/pb_ds/detail/container_base_dispatch.hpp	91;"	d
PB_DS_DATA_TRUE_INDICATOR	5/ext/pb_ds/detail/container_base_dispatch.hpp	62;"	d
PB_DS_DATA_TRUE_INDICATOR	5/ext/pb_ds/detail/container_base_dispatch.hpp	74;"	d
PB_DS_DEBUG_MAP_BASE_C_DEC	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	422;"	d
PB_DS_DEBUG_MAP_BASE_C_DEC	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	78;"	d
PB_DS_DEBUG_MAP_BASE_C_DEC	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	676;"	d
PB_DS_DEBUG_MAP_BASE_C_DEC	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	88;"	d
PB_DS_DEBUG_MAP_BASE_C_DEC	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	710;"	d
PB_DS_DEBUG_MAP_BASE_C_DEC	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	86;"	d
PB_DS_DEBUG_MAP_BASE_C_DEC	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	340;"	d
PB_DS_DEBUG_MAP_BASE_C_DEC	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	79;"	d
PB_DS_DEBUG_MAP_BASE_C_DEC	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	536;"	d
PB_DS_DEBUG_MAP_BASE_C_DEC	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	84;"	d
PB_DS_DEBUG_MAP_BASE_C_DEC	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	594;"	d
PB_DS_DEBUG_MAP_BASE_C_DEC	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	84;"	d
PB_DS_DEBUG_MAP_BASE_HPP	5/ext/pb_ds/detail/debug_map_base.hpp	42;"	d
PB_DS_DEBUG_VERIFY	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	327;"	d
PB_DS_DEBUG_VERIFY	5/ext/pb_ds/detail/branch_policy/traits.hpp	49;"	d
PB_DS_DEBUG_VERIFY	5/ext/pb_ds/detail/branch_policy/traits.hpp	93;"	d
PB_DS_DEBUG_VERIFY	5/ext/pb_ds/detail/container_base_dispatch.hpp	49;"	d
PB_DS_DEBUG_VERIFY	5/ext/pb_ds/detail/container_base_dispatch.hpp	98;"	d
PB_DS_DEBUG_VERIFY	5/ext/pb_ds/detail/priority_queue_base_dispatch.hpp	47;"	d
PB_DS_DEBUG_VERIFY	5/ext/pb_ds/detail/priority_queue_base_dispatch.hpp	59;"	d
PB_DS_DEBUG_VERIFY	5/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_imp.hpp	277;"	d
PB_DS_DEBUG_VERIFY	5/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_imp.hpp	291;"	d
PB_DS_ENTRY_CMP_DEC	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	346;"	d
PB_DS_ENTRY_CMP_DEC	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	70;"	d
PB_DS_EP2VP	5/ext/pb_ds/detail/container_base_dispatch.hpp	65;"	d
PB_DS_EP2VP	5/ext/pb_ds/detail/container_base_dispatch.hpp	77;"	d
PB_DS_EP2VP	5/ext/pb_ds/detail/container_base_dispatch.hpp	82;"	d
PB_DS_EP2VP	5/ext/pb_ds/detail/container_base_dispatch.hpp	94;"	d
PB_DS_EQ_BY_LESS_HPP	5/ext/pb_ds/detail/eq_fn/eq_by_less.hpp	42;"	d
PB_DS_EXCEPTION_HPP	5/ext/pb_ds/exception.hpp	42;"	d
PB_DS_GEN_POS	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	181;"	d
PB_DS_GEN_POS	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	188;"	d
PB_DS_GEN_POS	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	188;"	d
PB_DS_GEN_POS	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	195;"	d
PB_DS_GEN_POS	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	122;"	d
PB_DS_GEN_POS	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	129;"	d
PB_DS_GP_HASH_BASE	5/ext/pb_ds/assoc_container.hpp	328;"	d
PB_DS_GP_HASH_BASE	5/ext/pb_ds/assoc_container.hpp	520;"	d
PB_DS_GP_HASH_NAME	5/ext/pb_ds/detail/gp_hash_table_map_/constructor_destructor_fn_imps.hpp	/^PB_DS_GP_HASH_NAME() $/;"	f	class:PB_DS_CLASS_C_DEC
PB_DS_GP_HASH_NAME	5/ext/pb_ds/detail/gp_hash_table_map_/constructor_destructor_fn_imps.hpp	/^PB_DS_GP_HASH_NAME(const Hash_Fn& r_hash_fn)    $/;"	f	class:PB_DS_CLASS_C_DEC
PB_DS_GP_HASH_NAME	5/ext/pb_ds/detail/gp_hash_table_map_/constructor_destructor_fn_imps.hpp	/^PB_DS_GP_HASH_NAME(const Hash_Fn& r_hash_fn, const Eq_Fn& r_eq_fn) $/;"	f	class:PB_DS_CLASS_C_DEC
PB_DS_GP_HASH_NAME	5/ext/pb_ds/detail/gp_hash_table_map_/constructor_destructor_fn_imps.hpp	/^PB_DS_GP_HASH_NAME(const Hash_Fn& r_hash_fn, const Eq_Fn& r_eq_fn, $/;"	f	class:PB_DS_CLASS_C_DEC
PB_DS_GP_HASH_NAME	5/ext/pb_ds/detail/gp_hash_table_map_/constructor_destructor_fn_imps.hpp	/^PB_DS_GP_HASH_NAME(const PB_DS_CLASS_C_DEC& other) :$/;"	f	class:PB_DS_CLASS_C_DEC
PB_DS_GP_HASH_NAME	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^    class PB_DS_GP_HASH_NAME :$/;"	c	namespace:__gnu_pbds::detail
PB_DS_GP_HASH_NAME	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	60;"	d
PB_DS_GP_HASH_NAME	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	64;"	d
PB_DS_GP_HASH_NAME	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	711;"	d
PB_DS_GP_HASH_TRAITS_BASE	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	709;"	d
PB_DS_GP_HASH_TRAITS_BASE	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	82;"	d
PB_DS_HASH_BASE	5/ext/pb_ds/assoc_container.hpp	163;"	d
PB_DS_HASH_BASE	5/ext/pb_ds/assoc_container.hpp	64;"	d
PB_DS_HASH_EQ_FN_C_DEC	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	673;"	d
PB_DS_HASH_EQ_FN_C_DEC	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	78;"	d
PB_DS_HASH_EQ_FN_C_DEC	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	707;"	d
PB_DS_HASH_EQ_FN_C_DEC	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	76;"	d
PB_DS_HASH_EQ_FN_HPP	5/ext/pb_ds/detail/eq_fn/hash_eq_fn.hpp	43;"	d
PB_DS_HASH_LOAD_CHECK_RESIZE_TRIGGER_SIZE_BASE_HPP	5/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_size_base.hpp	42;"	d
PB_DS_HASH_POLICY_HPP	5/ext/pb_ds/hash_policy.hpp	42;"	d
PB_DS_IT_C_DEC	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	477;"	d
PB_DS_LEFT_CHILD_NEXT_SIBLING_HEAP_CONST_FIND_ITERATOR_HPP	5/ext/pb_ds/detail/left_child_next_sibling_heap_/point_const_iterator.hpp	43;"	d
PB_DS_LEFT_CHILD_NEXT_SIBLING_HEAP_CONST_ITERATOR_HPP	5/ext/pb_ds/detail/left_child_next_sibling_heap_/const_iterator.hpp	43;"	d
PB_DS_LEFT_CHILD_NEXT_SIBLING_HEAP_HPP	5/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp	42;"	d
PB_DS_LEFT_CHILD_NEXT_SIBLING_HEAP_NODE_HPP	5/ext/pb_ds/detail/left_child_next_sibling_heap_/node.hpp	42;"	d
PB_DS_LU_BASE	5/ext/pb_ds/assoc_container.hpp	793;"	d
PB_DS_LU_BASE	5/ext/pb_ds/assoc_container.hpp	856;"	d
PB_DS_LU_MAP_ENTRY_METADATA_BASE_HPP	5/ext/pb_ds/detail/list_update_map_/entry_metadata_base.hpp	42;"	d
PB_DS_LU_NAME	5/ext/pb_ds/detail/list_update_map_/constructor_destructor_fn_imps.hpp	/^PB_DS_LU_NAME() : m_p_l(0)$/;"	f	class:PB_DS_CLASS_C_DEC
PB_DS_LU_NAME	5/ext/pb_ds/detail/list_update_map_/constructor_destructor_fn_imps.hpp	/^PB_DS_LU_NAME(It first_it, It last_it) : m_p_l(0)$/;"	f	class:PB_DS_CLASS_C_DEC
PB_DS_LU_NAME	5/ext/pb_ds/detail/list_update_map_/constructor_destructor_fn_imps.hpp	/^PB_DS_LU_NAME(const PB_DS_CLASS_C_DEC& other) :$/;"	f	class:PB_DS_CLASS_C_DEC
PB_DS_LU_NAME	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^    class PB_DS_LU_NAME :$/;"	c	namespace:__gnu_pbds::detail
PB_DS_LU_NAME	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	341;"	d
PB_DS_LU_NAME	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	61;"	d
PB_DS_LU_NAME	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	65;"	d
PB_DS_LU_POLICY_HPP	5/ext/pb_ds/list_update_policy.hpp	42;"	d
PB_DS_LU_TRAITS_BASE	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	339;"	d
PB_DS_LU_TRAITS_BASE	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	75;"	d
PB_DS_MASK_BASED_RANGE_HASHING_HPP	5/ext/pb_ds/detail/hash_fn/mask_based_range_hashing.hpp	42;"	d
PB_DS_MOD_BASED_RANGE_HASHING_HPP	5/ext/pb_ds/detail/hash_fn/mod_based_range_hashing.hpp	42;"	d
PB_DS_NODE_AND_IT_TRAITS_HPP	5/ext/pb_ds/detail/branch_policy/traits.hpp	42;"	d
PB_DS_ODIR_IT_C_DEC	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	480;"	d
PB_DS_ODIR_IT_C_DEC	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	797;"	d
PB_DS_OV_TREE_CONST_NODE_ITERATOR_C_DEC	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	286;"	d
PB_DS_OV_TREE_CONST_NODE_ITERATOR_C_DEC	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	52;"	d
PB_DS_OV_TREE_NAME	5/ext/pb_ds/detail/ov_tree_map_/constructors_destructor_fn_imps.hpp	/^PB_DS_OV_TREE_NAME() :$/;"	f	class:PB_DS_CLASS_C_DEC
PB_DS_OV_TREE_NAME	5/ext/pb_ds/detail/ov_tree_map_/constructors_destructor_fn_imps.hpp	/^PB_DS_OV_TREE_NAME(const Cmp_Fn& r_cmp_fn) :$/;"	f	class:PB_DS_CLASS_C_DEC
PB_DS_OV_TREE_NAME	5/ext/pb_ds/detail/ov_tree_map_/constructors_destructor_fn_imps.hpp	/^PB_DS_OV_TREE_NAME(const Cmp_Fn& r_cmp_fn, const node_update& r_nodeu) :$/;"	f	class:PB_DS_CLASS_C_DEC
PB_DS_OV_TREE_NAME	5/ext/pb_ds/detail/ov_tree_map_/constructors_destructor_fn_imps.hpp	/^PB_DS_OV_TREE_NAME(const PB_DS_CLASS_C_DEC& other) :$/;"	f	class:PB_DS_CLASS_C_DEC
PB_DS_OV_TREE_NAME	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^    class PB_DS_OV_TREE_NAME :$/;"	c	namespace:__gnu_pbds::detail
PB_DS_OV_TREE_NAME	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	534;"	d
PB_DS_OV_TREE_NAME	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	64;"	d
PB_DS_OV_TREE_NAME	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	69;"	d
PB_DS_OV_TREE_NODE_AND_IT_TRAITS_HPP	5/ext/pb_ds/detail/ov_tree_map_/traits.hpp	42;"	d
PB_DS_OV_TREE_NODE_ITERATORS_HPP	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	42;"	d
PB_DS_OV_TREE_NODE_ITERATOR_C_DEC	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	199;"	d
PB_DS_OV_TREE_NODE_ITERATOR_C_DEC	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	285;"	d
PB_DS_OV_TREE_TRAITS_BASE	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	535;"	d
PB_DS_OV_TREE_TRAITS_BASE	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	80;"	d
PB_DS_PAT_TRIE_BASE	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	42;"	d
PB_DS_PAT_TRIE_NAME	5/ext/pb_ds/detail/pat_trie_/constructors_destructor_fn_imps.hpp	/^PB_DS_PAT_TRIE_NAME() :$/;"	f	class:PB_DS_CLASS_C_DEC
PB_DS_PAT_TRIE_NAME	5/ext/pb_ds/detail/pat_trie_/constructors_destructor_fn_imps.hpp	/^PB_DS_PAT_TRIE_NAME(const PB_DS_CLASS_C_DEC& other) :$/;"	f	class:PB_DS_CLASS_C_DEC
PB_DS_PAT_TRIE_NAME	5/ext/pb_ds/detail/pat_trie_/constructors_destructor_fn_imps.hpp	/^PB_DS_PAT_TRIE_NAME(const access_traits& r_access_traits) :$/;"	f	class:PB_DS_CLASS_C_DEC
PB_DS_PAT_TRIE_NAME	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^    class PB_DS_PAT_TRIE_NAME :$/;"	c	namespace:__gnu_pbds::detail
PB_DS_PAT_TRIE_NAME	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	592;"	d
PB_DS_PAT_TRIE_NAME	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	66;"	d
PB_DS_PAT_TRIE_NAME	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	70;"	d
PB_DS_PAT_TRIE_NODE_AND_IT_TRAITS_HPP	5/ext/pb_ds/detail/pat_trie_/traits.hpp	42;"	d
PB_DS_PAT_TRIE_NODE_CONST_ITERATOR_C_DEC	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	800;"	d
PB_DS_PAT_TRIE_NODE_ITERATOR_C_DEC	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	803;"	d
PB_DS_PAT_TRIE_TRAITS_BASE	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	593;"	d
PB_DS_PAT_TRIE_TRAITS_BASE	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	80;"	d
PB_DS_PRIORITY_QUEUE_BASE_DS_DISPATCHER_HPP	5/ext/pb_ds/detail/priority_queue_base_dispatch.hpp	42;"	d
PB_DS_PRIORITY_QUEUE_HPP	5/ext/pb_ds/priority_queue.hpp	42;"	d
PB_DS_PROBE_FN_BASE_HPP	5/ext/pb_ds/detail/hash_fn/probe_fn_base.hpp	42;"	d
PB_DS_P_HEAP_BASE	5/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp	182;"	d
PB_DS_P_HEAP_BASE	5/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp	64;"	d
PB_DS_RANGED_HASH_FN_C_DEC	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	674;"	d
PB_DS_RANGED_HASH_FN_C_DEC	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	81;"	d
PB_DS_RANGED_HASH_FN_HPP	5/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp	43;"	d
PB_DS_RANGED_PROBE_FN_C_DEC	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	708;"	d
PB_DS_RANGED_PROBE_FN_C_DEC	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	79;"	d
PB_DS_RANGED_PROBE_FN_HPP	5/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp	43;"	d
PB_DS_RB_TREE_BASE	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	246;"	d
PB_DS_RB_TREE_BASE	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	68;"	d
PB_DS_RB_TREE_BASE_NAME	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	245;"	d
PB_DS_RB_TREE_BASE_NAME	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	57;"	d
PB_DS_RB_TREE_BASE_NAME	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	62;"	d
PB_DS_RB_TREE_NAME	5/ext/pb_ds/detail/rb_tree_map_/constructors_destructor_fn_imps.hpp	/^PB_DS_RB_TREE_NAME()$/;"	f	class:PB_DS_CLASS_C_DEC
PB_DS_RB_TREE_NAME	5/ext/pb_ds/detail/rb_tree_map_/constructors_destructor_fn_imps.hpp	/^PB_DS_RB_TREE_NAME(const Cmp_Fn& r_cmp_fn) :$/;"	f	class:PB_DS_CLASS_C_DEC
PB_DS_RB_TREE_NAME	5/ext/pb_ds/detail/rb_tree_map_/constructors_destructor_fn_imps.hpp	/^PB_DS_RB_TREE_NAME(const Cmp_Fn& r_cmp_fn, const node_update& r_node_update) :$/;"	f	class:PB_DS_CLASS_C_DEC
PB_DS_RB_TREE_NAME	5/ext/pb_ds/detail/rb_tree_map_/constructors_destructor_fn_imps.hpp	/^PB_DS_RB_TREE_NAME(const PB_DS_CLASS_C_DEC& other) :$/;"	f	class:PB_DS_CLASS_C_DEC
PB_DS_RB_TREE_NAME	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	/^    class PB_DS_RB_TREE_NAME : public PB_DS_RB_TREE_BASE$/;"	c	namespace:__gnu_pbds::detail
PB_DS_RB_TREE_NAME	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	244;"	d
PB_DS_RB_TREE_NAME	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	56;"	d
PB_DS_RB_TREE_NAME	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	61;"	d
PB_DS_RB_TREE_NODE_AND_IT_TRAITS_HPP	5/ext/pb_ds/detail/rb_tree_map_/traits.hpp	42;"	d
PB_DS_RB_TREE_NODE_HPP	5/ext/pb_ds/detail/rb_tree_map_/node.hpp	42;"	d
PB_DS_RC_C_DEC	5/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp	169;"	d
PB_DS_RC_C_DEC	5/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp	57;"	d
PB_DS_RC_HPP	5/ext/pb_ds/detail/rc_binomial_heap_/rc.hpp	42;"	d
PB_DS_RECURSIVE_COUNT_LEAFS	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	573;"	d
PB_DS_RECURSIVE_COUNT_LEAFS	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	588;"	d
PB_DS_RESIZE_POLICY_DEC	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	347;"	d
PB_DS_RESIZE_POLICY_DEC	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	73;"	d
PB_DS_SAMPLE_PROBE_FN_HPP	5/ext/pb_ds/detail/hash_fn/sample_probe_fn.hpp	42;"	d
PB_DS_SAMPLE_RANGED_HASH_FN_HPP	5/ext/pb_ds/detail/hash_fn/sample_ranged_hash_fn.hpp	42;"	d
PB_DS_SAMPLE_RANGED_PROBE_FN_HPP	5/ext/pb_ds/detail/hash_fn/sample_ranged_probe_fn.hpp	42;"	d
PB_DS_SAMPLE_RANGE_HASHING_HPP	5/ext/pb_ds/detail/hash_fn/sample_range_hashing.hpp	42;"	d
PB_DS_SAMPLE_RESIZE_POLICY_HPP	5/ext/pb_ds/detail/resize_policy/sample_resize_policy.hpp	42;"	d
PB_DS_SAMPLE_RESIZE_TRIGGER_HPP	5/ext/pb_ds/detail/resize_policy/sample_resize_trigger.hpp	42;"	d
PB_DS_SAMPLE_SIZE_POLICY_HPP	5/ext/pb_ds/detail/resize_policy/sample_size_policy.hpp	42;"	d
PB_DS_SAMPLE_TREE_NODE_UPDATOR_HPP	5/ext/pb_ds/detail/tree_policy/sample_tree_node_update.hpp	42;"	d
PB_DS_SAMPLE_TRIE_E_ACCESS_TRAITS_HPP	5/ext/pb_ds/detail/trie_policy/sample_trie_access_traits.hpp	42;"	d
PB_DS_SAMPLE_TRIE_NODE_UPDATOR_HPP	5/ext/pb_ds/detail/trie_policy/sample_trie_node_update.hpp	42;"	d
PB_DS_SAMPLE_UPDATE_POLICY_HPP	5/ext/pb_ds/detail/list_update_policy/sample_update_policy.hpp	42;"	d
PB_DS_SIZE_BASE_C_DEC	5/ext/pb_ds/hash_policy.hpp	170;"	d
PB_DS_SIZE_BASE_C_DEC	5/ext/pb_ds/hash_policy.hpp	285;"	d
PB_DS_SPLAY_TREE_NODE_AND_IT_TRAITS_HPP	5/ext/pb_ds/detail/splay_tree_/traits.hpp	42;"	d
PB_DS_SPLAY_TREE_NODE_HPP	5/ext/pb_ds/detail/splay_tree_/node.hpp	42;"	d
PB_DS_STANDARD_POLICIES_HPP	5/ext/pb_ds/detail/standard_policies.hpp	42;"	d
PB_DS_STATIC_ASSERT	5/ext/pb_ds/detail/type_utils.hpp	136;"	d
PB_DS_STATIC_ASSERT	5/ext/pb_ds/detail/type_utils.hpp	154;"	d
PB_DS_STRUCT_ONLY_ASSERT_VALID	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	399;"	d
PB_DS_STRUCT_ONLY_ASSERT_VALID	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	417;"	d
PB_DS_STRUCT_ONLY_ASSERT_VALID	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	231;"	d
PB_DS_STRUCT_ONLY_ASSERT_VALID	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	241;"	d
PB_DS_SYNTH_E_ACCESS_TRAITS_C_DEC	5/ext/pb_ds/detail/pat_trie_/synth_access_traits.hpp	213;"	d
PB_DS_SYNTH_E_ACCESS_TRAITS_C_DEC	5/ext/pb_ds/detail/pat_trie_/synth_access_traits.hpp	54;"	d
PB_DS_SYNTH_E_ACCESS_TRAITS_HPP	5/ext/pb_ds/detail/pat_trie_/synth_access_traits.hpp	42;"	d
PB_DS_SYNTH_E_ACCESS_TRAITS_T_DEC	5/ext/pb_ds/detail/pat_trie_/synth_access_traits.hpp	212;"	d
PB_DS_SYNTH_E_ACCESS_TRAITS_T_DEC	5/ext/pb_ds/detail/pat_trie_/synth_access_traits.hpp	51;"	d
PB_DS_S_TREE_BASE	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	273;"	d
PB_DS_S_TREE_BASE	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	97;"	d
PB_DS_S_TREE_BASE_NAME	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	272;"	d
PB_DS_S_TREE_BASE_NAME	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	82;"	d
PB_DS_S_TREE_BASE_NAME	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	87;"	d
PB_DS_S_TREE_NAME	5/ext/pb_ds/detail/splay_tree_/constructors_destructor_fn_imps.hpp	/^PB_DS_S_TREE_NAME()$/;"	f	class:PB_DS_CLASS_C_DEC
PB_DS_S_TREE_NAME	5/ext/pb_ds/detail/splay_tree_/constructors_destructor_fn_imps.hpp	/^PB_DS_S_TREE_NAME(const Cmp_Fn& r_cmp_fn) :$/;"	f	class:PB_DS_CLASS_C_DEC
PB_DS_S_TREE_NAME	5/ext/pb_ds/detail/splay_tree_/constructors_destructor_fn_imps.hpp	/^PB_DS_S_TREE_NAME(const Cmp_Fn& r_cmp_fn, const node_update& r_node_update) :$/;"	f	class:PB_DS_CLASS_C_DEC
PB_DS_S_TREE_NAME	5/ext/pb_ds/detail/splay_tree_/constructors_destructor_fn_imps.hpp	/^PB_DS_S_TREE_NAME(const PB_DS_CLASS_C_DEC& other) :$/;"	f	class:PB_DS_CLASS_C_DEC
PB_DS_S_TREE_NAME	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	/^    class PB_DS_S_TREE_NAME : public PB_DS_S_TREE_BASE$/;"	c	namespace:__gnu_pbds::detail
PB_DS_S_TREE_NAME	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	271;"	d
PB_DS_S_TREE_NAME	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	81;"	d
PB_DS_S_TREE_NAME	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	86;"	d
PB_DS_TAG_AND_TRAIT_HPP	5/ext/pb_ds/tag_and_trait.hpp	43;"	d
PB_DS_THIN_HEAP_HPP	5/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp	42;"	d
PB_DS_TRACE_BASE	5/ext/pb_ds/detail/tree_trace_base.hpp	171;"	d
PB_DS_TRACE_BASE	5/ext/pb_ds/detail/tree_trace_base.hpp	63;"	d
PB_DS_TREE_BASE	5/ext/pb_ds/assoc_container.hpp	605;"	d
PB_DS_TREE_BASE	5/ext/pb_ds/assoc_container.hpp	689;"	d
PB_DS_TREE_CONST_IT_C_DEC	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	359;"	d
PB_DS_TREE_CONST_IT_C_DEC	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	52;"	d
PB_DS_TREE_CONST_NODE_ITERATOR_CLASS_C_DEC	5/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp	183;"	d
PB_DS_TREE_CONST_NODE_ITERATOR_CLASS_C_DEC	5/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp	50;"	d
PB_DS_TREE_CONST_ODIR_IT_C_DEC	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	360;"	d
PB_DS_TREE_CONST_ODIR_IT_C_DEC	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	63;"	d
PB_DS_TREE_IT_C_DEC	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	361;"	d
PB_DS_TREE_IT_C_DEC	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	74;"	d
PB_DS_TREE_NODE_AND_IT_TRAITS	5/ext/pb_ds/assoc_container.hpp	602;"	d
PB_DS_TREE_NODE_AND_IT_TRAITS	5/ext/pb_ds/assoc_container.hpp	690;"	d
PB_DS_TREE_NODE_ITERATOR_CLASS_C_DEC	5/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp	128;"	d
PB_DS_TREE_NODE_ITERATOR_CLASS_C_DEC	5/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp	184;"	d
PB_DS_TREE_NODE_METADATA_DISPATCH_HPP	5/ext/pb_ds/detail/tree_policy/node_metadata_selector.hpp	42;"	d
PB_DS_TREE_ODIR_IT_C_DEC	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	362;"	d
PB_DS_TREE_ODIR_IT_C_DEC	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	85;"	d
PB_DS_TREE_POLICY_HPP	5/ext/pb_ds/tree_policy.hpp	42;"	d
PB_DS_TREE_TRACE_BASE_C_DEC	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	425;"	d
PB_DS_TREE_TRACE_BASE_C_DEC	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	84;"	d
PB_DS_TREE_TRACE_BASE_C_DEC	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	538;"	d
PB_DS_TREE_TRACE_BASE_C_DEC	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	90;"	d
PB_DS_TREE_TRACE_BASE_HPP	5/ext/pb_ds/detail/tree_trace_base.hpp	42;"	d
PB_DS_TRIE_BASE	5/ext/pb_ds/assoc_container.hpp	696;"	d
PB_DS_TRIE_BASE	5/ext/pb_ds/assoc_container.hpp	784;"	d
PB_DS_TRIE_NODE_AND_IT_TRAITS	5/ext/pb_ds/assoc_container.hpp	693;"	d
PB_DS_TRIE_NODE_AND_IT_TRAITS	5/ext/pb_ds/assoc_container.hpp	785;"	d
PB_DS_TRIE_NODE_METADATA_DISPATCH_HPP	5/ext/pb_ds/detail/trie_policy/node_metadata_selector.hpp	42;"	d
PB_DS_TRIE_POLICY_BASE	5/ext/pb_ds/trie_policy.hpp	146;"	d
PB_DS_TRIE_POLICY_BASE	5/ext/pb_ds/trie_policy.hpp	356;"	d
PB_DS_TRIE_POLICY_BASE_HPP	5/ext/pb_ds/detail/trie_policy/trie_policy_base.hpp	42;"	d
PB_DS_TRIE_POLICY_HPP	5/ext/pb_ds/trie_policy.hpp	42;"	d
PB_DS_TYPES_TRAITS_HPP	5/ext/pb_ds/detail/types_traits.hpp	42;"	d
PB_DS_TYPE_UTILS_HPP	5/ext/pb_ds/detail/type_utils.hpp	43;"	d
PB_DS_V2F	5/ext/pb_ds/detail/container_base_dispatch.hpp	63;"	d
PB_DS_V2F	5/ext/pb_ds/detail/container_base_dispatch.hpp	75;"	d
PB_DS_V2F	5/ext/pb_ds/detail/container_base_dispatch.hpp	80;"	d
PB_DS_V2F	5/ext/pb_ds/detail/container_base_dispatch.hpp	92;"	d
PB_DS_V2S	5/ext/pb_ds/detail/container_base_dispatch.hpp	64;"	d
PB_DS_V2S	5/ext/pb_ds/detail/container_base_dispatch.hpp	76;"	d
PB_DS_V2S	5/ext/pb_ds/detail/container_base_dispatch.hpp	81;"	d
PB_DS_V2S	5/ext/pb_ds/detail/container_base_dispatch.hpp	93;"	d
PB_DS_node_begin_imp	5/ext/pb_ds/detail/ov_tree_map_/iterators_fn_imps.hpp	/^PB_DS_node_begin_imp() const$/;"	f	class:PB_DS_CLASS_C_DEC
PB_DS_node_begin_imp	5/ext/pb_ds/detail/ov_tree_map_/iterators_fn_imps.hpp	/^PB_DS_node_begin_imp()$/;"	f	class:PB_DS_CLASS_C_DEC
PB_DS_node_end_imp	5/ext/pb_ds/detail/ov_tree_map_/iterators_fn_imps.hpp	/^PB_DS_node_end_imp() const$/;"	f	class:PB_DS_CLASS_C_DEC
PB_DS_node_end_imp	5/ext/pb_ds/detail/ov_tree_map_/iterators_fn_imps.hpp	/^PB_DS_node_end_imp()$/;"	f	class:PB_DS_CLASS_C_DEC
PCA	opencv2/core.hpp	/^class CV_EXPORTS PCA$/;"	c	namespace:cv
PFRAME	opencv2/cudacodec.hpp	/^        PFRAME = 2,$/;"	e	enum:cv::cudacodec::EncoderCallBack::PicType
PIXEL_PACK_BUFFER	opencv2/core/opengl.hpp	/^        PIXEL_PACK_BUFFER    = 0x88EB, \/\/!< The buffer will be used for reading from OpenGL textures$/;"	e	enum:cv::ogl::Buffer::Target
PIXEL_UNPACK_BUFFER	opencv2/core/opengl.hpp	/^        PIXEL_UNPACK_BUFFER  = 0x88EC  \/\/!< The buffer will be used for writing to OpenGL textures$/;"	e	enum:cv::ogl::Buffer::Target
PNCovariance	opencv2/video/tracking_c.h	/^    float* PNCovariance;        \/* =process_noise_cov->data.fl *\/$/;"	m	struct:CvKalman
POINTS	opencv2/core/opengl.hpp	/^    POINTS         = 0x0000,$/;"	e	enum:cv::ogl::RenderModes
POLY	opencv2/ml.hpp	/^        POLY=1,$/;"	e	enum:cv::ml::SVM::KernelTypes
POLYGON	opencv2/core/opengl.hpp	/^    POLYGON        = 0x0009$/;"	e	enum:cv::ogl::RenderModes
PREDICT_AUTO	opencv2/ml.hpp	/^    enum Flags { PREDICT_AUTO=0, PREDICT_SUM=(1<<8), PREDICT_MAX_VOTE=(2<<8), PREDICT_MASK=(3<<8) };$/;"	e	enum:cv::ml::DTrees::Flags
PREDICT_MASK	opencv2/ml.hpp	/^    enum Flags { PREDICT_AUTO=0, PREDICT_SUM=(1<<8), PREDICT_MAX_VOTE=(2<<8), PREDICT_MASK=(3<<8) };$/;"	e	enum:cv::ml::DTrees::Flags
PREDICT_MAX_VOTE	opencv2/ml.hpp	/^    enum Flags { PREDICT_AUTO=0, PREDICT_SUM=(1<<8), PREDICT_MAX_VOTE=(2<<8), PREDICT_MASK=(3<<8) };$/;"	e	enum:cv::ml::DTrees::Flags
PREDICT_SUM	opencv2/ml.hpp	/^    enum Flags { PREDICT_AUTO=0, PREDICT_SUM=(1<<8), PREDICT_MAX_VOTE=(2<<8), PREDICT_MASK=(3<<8) };$/;"	e	enum:cv::ml::DTrees::Flags
PREFILTER_NORMALIZED_RESPONSE	opencv2/calib3d.hpp	/^    enum { PREFILTER_NORMALIZED_RESPONSE = 0,$/;"	e	enum:cv::StereoBM::__anon103
PREFILTER_XSOBEL	opencv2/calib3d.hpp	/^           PREFILTER_XSOBEL              = 1$/;"	e	enum:cv::StereoBM::__anon103
PREPROCESSED_INPUT	opencv2/ml.hpp	/^        PREPROCESSED_INPUT=4$/;"	e	enum:cv::ml::StatModel::Flags
PREV_AROUND_DST	opencv2/imgproc.hpp	/^           PREV_AROUND_DST   = 0x33,$/;"	e	enum:cv::Subdiv2D::__anon390
PREV_AROUND_LEFT	opencv2/imgproc.hpp	/^           PREV_AROUND_LEFT  = 0x20,$/;"	e	enum:cv::Subdiv2D::__anon390
PREV_AROUND_ORG	opencv2/imgproc.hpp	/^           PREV_AROUND_ORG   = 0x11,$/;"	e	enum:cv::Subdiv2D::__anon390
PREV_AROUND_RIGHT	opencv2/imgproc.hpp	/^           PREV_AROUND_RIGHT = 0x02$/;"	e	enum:cv::Subdiv2D::__anon390
PROJ_SPHERICAL_EQRECT	opencv2/imgproc.hpp	/^       PROJ_SPHERICAL_EQRECT = 1$/;"	e	enum:cv::UndistortTypes
PROJ_SPHERICAL_ORTHO	opencv2/imgproc.hpp	/^       PROJ_SPHERICAL_ORTHO  = 0,$/;"	e	enum:cv::UndistortTypes
PTLOC_ERROR	opencv2/imgproc.hpp	/^    enum { PTLOC_ERROR        = -2, \/\/!< Point location error$/;"	e	enum:cv::Subdiv2D::__anon389
PTLOC_INSIDE	opencv2/imgproc.hpp	/^           PTLOC_INSIDE       = 0, \/\/!< Point inside some facet$/;"	e	enum:cv::Subdiv2D::__anon389
PTLOC_ON_EDGE	opencv2/imgproc.hpp	/^           PTLOC_ON_EDGE      = 2  \/\/!< Point on some edge$/;"	e	enum:cv::Subdiv2D::__anon389
PTLOC_OUTSIDE_RECT	opencv2/imgproc.hpp	/^           PTLOC_OUTSIDE_RECT = -1, \/\/!< Point outside the subdivision bounding rect$/;"	e	enum:cv::Subdiv2D::__anon389
PTLOC_VERTEX	opencv2/imgproc.hpp	/^           PTLOC_VERTEX       = 1, \/\/!< Point coincides with one of the subdivision vertices$/;"	e	enum:cv::Subdiv2D::__anon389
PTR_ONLY	opencv2/core/ocl.hpp	/^    enum { LOCAL=1, READ_ONLY=2, WRITE_ONLY=4, READ_WRITE=6, CONSTANT=8, PTR_ONLY = 16, NO_SIZE=256 };$/;"	e	enum:cv::ocl::KernelArg::__anon323
P_Interval	opencv2/cudacodec.hpp	/^    int P_Interval;      \/\/!< NVVE_P_INTERVAL,$/;"	m	struct:cv::cudacodec::EncoderParams
PairwiseSeamFinder	opencv2/stitching/detail/seam_finders.hpp	/^class CV_EXPORTS PairwiseSeamFinder : public SeamFinder$/;"	c	namespace:cv::detail
PaniniPortraitProjector	opencv2/stitching/detail/warpers.hpp	/^struct CV_EXPORTS PaniniPortraitProjector : ProjectorBase$/;"	s	namespace:cv::detail
PaniniPortraitWarper	opencv2/stitching/detail/warpers.hpp	/^   PaniniPortraitWarper(float scale, float A = 1, float B = 1)$/;"	f	class:cv::detail::PaniniPortraitWarper
PaniniPortraitWarper	opencv2/stitching/detail/warpers.hpp	/^class CV_EXPORTS PaniniPortraitWarper : public RotationWarperBase<PaniniPortraitProjector>$/;"	c	namespace:cv::detail
PaniniPortraitWarper	opencv2/stitching/warpers.hpp	/^    PaniniPortraitWarper(float A = 1, float B = 1)$/;"	f	class:cv::PaniniPortraitWarper
PaniniPortraitWarper	opencv2/stitching/warpers.hpp	/^class PaniniPortraitWarper: public WarperCreator$/;"	c	namespace:cv
PaniniProjector	opencv2/stitching/detail/warpers.hpp	/^struct CV_EXPORTS PaniniProjector : ProjectorBase$/;"	s	namespace:cv::detail
PaniniWarper	opencv2/stitching/detail/warpers.hpp	/^   PaniniWarper(float scale, float A = 1, float B = 1)$/;"	f	class:cv::detail::PaniniWarper
PaniniWarper	opencv2/stitching/detail/warpers.hpp	/^class CV_EXPORTS PaniniWarper : public RotationWarperBase<PaniniProjector>$/;"	c	namespace:cv::detail
PaniniWarper	opencv2/stitching/warpers.hpp	/^    PaniniWarper(float A = 1, float B = 1)$/;"	f	class:cv::PaniniWarper
PaniniWarper	opencv2/stitching/warpers.hpp	/^class PaniniWarper: public WarperCreator$/;"	c	namespace:cv
ParallelLoopBody	opencv2/core/utility.hpp	/^class CV_EXPORTS ParallelLoopBody$/;"	c	namespace:cv
Param	opencv2/core.hpp	/^struct Param {$/;"	s	namespace:cv
ParamGrid	opencv2/ml.hpp	/^class CV_EXPORTS ParamGrid$/;"	c	namespace:cv::ml
ParamType	opencv2/core.hpp	/^template<> struct ParamType<Algorithm>$/;"	s	namespace:cv
ParamType	opencv2/core.hpp	/^template<> struct ParamType<Mat>$/;"	s	namespace:cv
ParamType	opencv2/core.hpp	/^template<> struct ParamType<String>$/;"	s	namespace:cv
ParamType	opencv2/core.hpp	/^template<> struct ParamType<bool>$/;"	s	namespace:cv
ParamType	opencv2/core.hpp	/^template<> struct ParamType<double>$/;"	s	namespace:cv
ParamType	opencv2/core.hpp	/^template<> struct ParamType<float>$/;"	s	namespace:cv
ParamType	opencv2/core.hpp	/^template<> struct ParamType<int>$/;"	s	namespace:cv
ParamType	opencv2/core.hpp	/^template<> struct ParamType<std::vector<Mat> >$/;"	s	namespace:cv
ParamType	opencv2/core.hpp	/^template<> struct ParamType<uchar>$/;"	s	namespace:cv
ParamType	opencv2/core.hpp	/^template<> struct ParamType<uint64>$/;"	s	namespace:cv
ParamType	opencv2/core.hpp	/^template<> struct ParamType<unsigned>$/;"	s	namespace:cv
ParamType	opencv2/core.hpp	/^template<typename _Tp> struct ParamType {};$/;"	s	namespace:cv
ParamTypes	opencv2/ml.hpp	/^    enum ParamTypes {$/;"	g	class:cv::ml::SVM
ParameterType	opencv2/core/cuda/type_traits.hpp	/^            T, typename type_traits_detail::AddParameterType<T>::type>::type ParameterType;$/;"	t	struct:cv::cuda::device::TypeTraits
Parameters	opencv2/objdetect/detection_based_tracker.hpp	/^        struct CV_EXPORTS Parameters$/;"	s	class:cv::DetectionBasedTracker
Params	opencv2/features2d.hpp	/^  struct CV_EXPORTS_W_SIMPLE Params$/;"	s	class:cv::SimpleBlobDetector
PeakBitrate	opencv2/cudacodec.hpp	/^    int PeakBitrate;     \/\/!< NVVE_PEAK_BITRATE,$/;"	m	struct:cv::cudacodec::EncoderParams
PeriodParameters	opencv2/core.hpp	/^    enum PeriodParameters {N = 624, M = 397};$/;"	g	class:cv::RNG_MT19937
PerspectiveMapPtr	opencv2/cudev/ptr2d/warping.hpp	/^struct PerspectiveMapPtr$/;"	s	namespace:cv::cudev
PerspectiveMapPtrSz	opencv2/cudev/ptr2d/warping.hpp	/^struct PerspectiveMapPtrSz : PerspectiveMapPtr$/;"	s	namespace:cv::cudev
PicType	opencv2/cudacodec.hpp	/^    enum PicType$/;"	g	class:cv::cudacodec::EncoderCallBack
PixelSize	opencv2/core/wimage.hpp	/^    int PixelSize() const {return Channels() * ChannelSize(); }$/;"	f	class:cv::WImage
PlanePortraitProjector	opencv2/stitching/detail/warpers.hpp	/^struct PlanePortraitProjector : ProjectorBase$/;"	s	namespace:cv::detail
PlanePortraitWarper	opencv2/stitching/detail/warpers.hpp	/^    PlanePortraitWarper(float scale) { projector_.scale = scale; }$/;"	f	class:cv::detail::PlanePortraitWarper
PlanePortraitWarper	opencv2/stitching/detail/warpers.hpp	/^class CV_EXPORTS PlanePortraitWarper : public RotationWarperBase<PlanePortraitProjector>$/;"	c	namespace:cv::detail
PlaneProjector	opencv2/stitching/detail/warpers.hpp	/^struct CV_EXPORTS PlaneProjector : ProjectorBase$/;"	s	namespace:cv::detail
PlaneWarper	opencv2/stitching/detail/warpers.hpp	/^    PlaneWarper(float scale = 1.f) { projector_.scale = scale; }$/;"	f	class:cv::detail::PlaneWarper
PlaneWarper	opencv2/stitching/detail/warpers.hpp	/^class CV_EXPORTS PlaneWarper : public RotationWarperBase<PlaneProjector>$/;"	c	namespace:cv::detail
PlaneWarper	opencv2/stitching/warpers.hpp	/^class PlaneWarper : public WarperCreator$/;"	c	namespace:cv
PlaneWarperGpu	opencv2/stitching/detail/warpers.hpp	/^    PlaneWarperGpu(float scale = 1.f) : PlaneWarper(scale) {}$/;"	f	class:cv::detail::PlaneWarperGpu
PlaneWarperGpu	opencv2/stitching/detail/warpers.hpp	/^class CV_EXPORTS PlaneWarperGpu : public PlaneWarper$/;"	c	namespace:cv::detail
PlaneWarperGpu	opencv2/stitching/warpers.hpp	/^class PlaneWarperGpu: public WarperCreator$/;"	c	namespace:cv
Platform	opencv2/core/ocl.hpp	/^class CV_EXPORTS Platform$/;"	c	namespace:cv::ocl
PlatformInfo	opencv2/core/ocl.hpp	/^class CV_EXPORTS PlatformInfo$/;"	c	namespace:cv::ocl
PlatformInfo	opencv2/core/ocl.hpp	/^class CV_EXPORTS PlatformInfo;$/;"	m	namespace:cv::ocl	typeref:class:cv::ocl::CV_EXPORTS
Point	opencv2/core/types.hpp	/^typedef Point2i Point;$/;"	t	namespace:cv
Point2d	opencv2/core/types.hpp	/^typedef Point_<double> Point2d;$/;"	t	namespace:cv
Point2f	opencv2/core/types.hpp	/^typedef Point_<float> Point2f;$/;"	t	namespace:cv
Point2i	opencv2/core/types.hpp	/^typedef Point_<int> Point2i;$/;"	t	namespace:cv
Point2l	opencv2/core/types.hpp	/^typedef Point_<int64> Point2l;$/;"	t	namespace:cv
Point3_	opencv2/core/types.hpp	/^Point3_<_Tp>::Point3_()$/;"	f	class:cv::Point3_
Point3_	opencv2/core/types.hpp	/^Point3_<_Tp>::Point3_(_Tp _x, _Tp _y, _Tp _z)$/;"	f	class:cv::Point3_
Point3_	opencv2/core/types.hpp	/^Point3_<_Tp>::Point3_(const Point3_& pt)$/;"	f	class:cv::Point3_
Point3_	opencv2/core/types.hpp	/^Point3_<_Tp>::Point3_(const Point_<_Tp>& pt)$/;"	f	class:cv::Point3_
Point3_	opencv2/core/types.hpp	/^Point3_<_Tp>::Point3_(const Vec<_Tp, 3>& v)$/;"	f	class:cv::Point3_
Point3_	opencv2/core/types.hpp	/^template<typename _Tp> class Point3_$/;"	c	namespace:cv
Point3d	opencv2/core/types.hpp	/^typedef Point3_<double> Point3d;$/;"	t	namespace:cv
Point3f	opencv2/core/types.hpp	/^typedef Point3_<float> Point3f;$/;"	t	namespace:cv
Point3i	opencv2/core/types.hpp	/^typedef Point3_<int> Point3i;$/;"	t	namespace:cv
PointFilter	opencv2/core/cuda/filters.hpp	/^        explicit __host__ __device__ __forceinline__ PointFilter(const Ptr2D& src_, float fx = 0.f, float fy = 0.f)$/;"	f	struct:cv::cuda::device::PointFilter
PointFilter	opencv2/core/cuda/filters.hpp	/^    template <typename Ptr2D> struct PointFilter$/;"	s	namespace:cv::cuda::device
Point_	opencv2/core/types.hpp	/^Point_<_Tp>::Point_()$/;"	f	class:cv::Point_
Point_	opencv2/core/types.hpp	/^Point_<_Tp>::Point_(_Tp _x, _Tp _y)$/;"	f	class:cv::Point_
Point_	opencv2/core/types.hpp	/^Point_<_Tp>::Point_(const Point_& pt)$/;"	f	class:cv::Point_
Point_	opencv2/core/types.hpp	/^Point_<_Tp>::Point_(const Size_<_Tp>& sz)$/;"	f	class:cv::Point_
Point_	opencv2/core/types.hpp	/^Point_<_Tp>::Point_(const Vec<_Tp,2>& v)$/;"	f	class:cv::Point_
Point_	opencv2/core/types.hpp	/^template<typename _Tp> class Point_$/;"	c	namespace:cv
PointeeType	opencv2/core/cuda/type_traits.hpp	/^        typedef typename type_traits_detail::PointerTraits<UnqualifiedType>::type                            PointeeType;$/;"	t	struct:cv::cuda::device::TypeTraits
PointerTraits	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <class U> struct PointerTraits$/;"	s	namespace:cv::cuda::device::type_traits_detail
PointerTraits	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <class U> struct PointerTraits<U*&>$/;"	s	namespace:cv::cuda::device::type_traits_detail
PointerTraits	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <class U> struct PointerTraits<U*>$/;"	s	namespace:cv::cuda::device::type_traits_detail
PointerTraits	opencv2/cudev/util/detail/type_traits.hpp	/^    template <class U> struct PointerTraits$/;"	s	namespace:cv::cudev::type_traits_detail
PointerTraits	opencv2/cudev/util/detail/type_traits.hpp	/^    template <class U> struct PointerTraits<U*&>$/;"	s	namespace:cv::cudev::type_traits_detail
PointerTraits	opencv2/cudev/util/detail/type_traits.hpp	/^    template <class U> struct PointerTraits<U*>$/;"	s	namespace:cv::cudev::type_traits_detail
PooledAllocator	opencv2/flann/allocator.h	/^    PooledAllocator(int blockSize = BLOCKSIZE)$/;"	f	class:cvflann::PooledAllocator
PooledAllocator	opencv2/flann/allocator.h	/^class PooledAllocator$/;"	c	namespace:cvflann
PositionsVector	opencv2/objdetect/detection_based_tracker.hpp	/^            typedef std::vector<cv::Rect> PositionsVector;$/;"	t	struct:cv::DetectionBasedTracker::TrackedObject
PosterErrorCovariance	opencv2/video/tracking_c.h	/^    float* PosterErrorCovariance;\/* =error_cov_post->data.fl *\/$/;"	m	struct:CvKalman
PosterState	opencv2/video/tracking_c.h	/^    float* PosterState;         \/* =state_pre->data.fl *\/$/;"	m	struct:CvKalman
Presets	opencv2/cudacodec.hpp	/^    int Presets;         \/\/!< NVVE_PRESETS,$/;"	m	struct:cv::cudacodec::EncoderParams
PriorErrorCovariance	opencv2/video/tracking_c.h	/^    float* PriorErrorCovariance;\/* =error_cov_pre->data.fl *\/$/;"	m	struct:CvKalman
PriorState	opencv2/video/tracking_c.h	/^    float* PriorState;          \/* =state_post->data.fl *\/$/;"	m	struct:CvKalman
ProfileLevel	opencv2/cudacodec.hpp	/^    int ProfileLevel;    \/\/!< NVVE_PROFILE_LEVEL,$/;"	m	struct:cv::cudacodec::EncoderParams
Program	opencv2/core/ocl.hpp	/^class CV_EXPORTS Program$/;"	c	namespace:cv::ocl
Program	opencv2/core/ocl.hpp	/^class CV_EXPORTS Program;$/;"	m	namespace:cv::ocl	typeref:class:cv::ocl::CV_EXPORTS
ProgramEntry	opencv2/core/ocl_genbase.hpp	/^struct ProgramEntry$/;"	s	namespace:cv::ocl
ProgramSource	opencv2/core/ocl.hpp	/^class CV_EXPORTS ProgramSource$/;"	c	namespace:cv::ocl
ProgramSource	opencv2/core/ocl.hpp	/^class CV_EXPORTS ProgramSource;$/;"	m	namespace:cv::ocl	typeref:class:cv::ocl::CV_EXPORTS
ProjectorBase	opencv2/stitching/detail/warpers.hpp	/^struct CV_EXPORTS ProjectorBase$/;"	s	namespace:cv::detail
Ptr	opencv2/core/cvstd.hpp	/^struct Ptr$/;"	s	namespace:cv
Ptr	opencv2/core/ptr.inl.hpp	/^Ptr<T>::Ptr() : owner(NULL), stored(NULL)$/;"	f	class:cv::Ptr
Ptr	opencv2/core/ptr.inl.hpp	/^Ptr<T>::Ptr(Ptr&& o) : owner(o.owner), stored(o.stored)$/;"	f	class:cv::Ptr
Ptr	opencv2/core/ptr.inl.hpp	/^Ptr<T>::Ptr(Y* p)$/;"	f	class:cv::Ptr
Ptr	opencv2/core/ptr.inl.hpp	/^Ptr<T>::Ptr(Y* p, D d)$/;"	f	class:cv::Ptr
Ptr	opencv2/core/ptr.inl.hpp	/^Ptr<T>::Ptr(const Ptr& o) : owner(o.owner), stored(o.stored)$/;"	f	class:cv::Ptr
Ptr	opencv2/core/ptr.inl.hpp	/^Ptr<T>::Ptr(const Ptr<Y>& o) : owner(o.owner), stored(o.stored)$/;"	f	class:cv::Ptr
Ptr	opencv2/core/ptr.inl.hpp	/^Ptr<T>::Ptr(const Ptr<Y>& o, T* p) : owner(o.owner), stored(p)$/;"	f	class:cv::Ptr
PtrOwner	opencv2/core/ptr.inl.hpp	/^    PtrOwner() : refCount(1)$/;"	f	struct:cv::detail::PtrOwner
PtrOwner	opencv2/core/ptr.inl.hpp	/^struct PtrOwner$/;"	s	namespace:cv::detail
PtrOwnerImpl	opencv2/core/ptr.inl.hpp	/^    PtrOwnerImpl(Y* p, D d) : owned(p), deleter(d)$/;"	f	struct:cv::detail::PtrOwnerImpl
PtrOwnerImpl	opencv2/core/ptr.inl.hpp	/^struct PtrOwnerImpl : PtrOwner$/;"	s	namespace:cv::detail
PtrReadOnly	opencv2/core/ocl.hpp	/^    static KernelArg PtrReadOnly(const UMat& m)$/;"	f	class:cv::ocl::KernelArg
PtrReadWrite	opencv2/core/ocl.hpp	/^    static KernelArg PtrReadWrite(const UMat& m)$/;"	f	class:cv::ocl::KernelArg
PtrStep	opencv2/core/cuda_types.hpp	/^            __CV_CUDA_HOST_DEVICE__ PtrStep() : step(0) {}$/;"	f	struct:cv::cuda::PtrStep
PtrStep	opencv2/core/cuda_types.hpp	/^            __CV_CUDA_HOST_DEVICE__ PtrStep(T* data_, size_t step_) : DevPtr<T>(data_), step(step_) {}$/;"	f	struct:cv::cuda::PtrStep
PtrStep	opencv2/core/cuda_types.hpp	/^        template <typename T> struct PtrStep : public DevPtr<T>$/;"	s	namespace:cv::cuda
PtrStepSz	opencv2/core/cuda_types.hpp	/^            __CV_CUDA_HOST_DEVICE__ PtrStepSz() : cols(0), rows(0) {}$/;"	f	struct:cv::cuda::PtrStepSz
PtrStepSz	opencv2/core/cuda_types.hpp	/^            __CV_CUDA_HOST_DEVICE__ PtrStepSz(int rows_, int cols_, T* data_, size_t step_)$/;"	f	struct:cv::cuda::PtrStepSz
PtrStepSz	opencv2/core/cuda_types.hpp	/^            explicit PtrStepSz(const PtrStepSz<U>& d) : PtrStep<T>((T*)d.data, d.step), cols(d.cols), rows(d.rows){}$/;"	f	struct:cv::cuda::PtrStepSz
PtrStepSz	opencv2/core/cuda_types.hpp	/^        template <typename T> struct PtrStepSz : public PtrStep<T>$/;"	s	namespace:cv::cuda
PtrStepSzb	opencv2/core/cuda_types.hpp	/^        typedef PtrStepSz<unsigned char> PtrStepSzb;$/;"	t	namespace:cv::cuda
PtrStepSzf	opencv2/core/cuda_types.hpp	/^        typedef PtrStepSz<float> PtrStepSzf;$/;"	t	namespace:cv::cuda
PtrStepSzi	opencv2/core/cuda_types.hpp	/^        typedef PtrStepSz<int> PtrStepSzi;$/;"	t	namespace:cv::cuda
PtrStepb	opencv2/core/cuda_types.hpp	/^        typedef PtrStep<unsigned char> PtrStepb;$/;"	t	namespace:cv::cuda
PtrStepf	opencv2/core/cuda_types.hpp	/^        typedef PtrStep<float> PtrStepf;$/;"	t	namespace:cv::cuda
PtrStepi	opencv2/core/cuda_types.hpp	/^        typedef PtrStep<int> PtrStepi;$/;"	t	namespace:cv::cuda
PtrSz	opencv2/core/cuda_types.hpp	/^            __CV_CUDA_HOST_DEVICE__ PtrSz() : size(0) {}$/;"	f	struct:cv::cuda::PtrSz
PtrSz	opencv2/core/cuda_types.hpp	/^            __CV_CUDA_HOST_DEVICE__ PtrSz(T* data_, size_t size_) : DevPtr<T>(data_), size(size_) {}$/;"	f	struct:cv::cuda::PtrSz
PtrSz	opencv2/core/cuda_types.hpp	/^        template <typename T> struct PtrSz : public DevPtr<T>$/;"	s	namespace:cv::cuda
PtrTraits	opencv2/cudev/expr/expr.hpp	/^template <class Body> struct PtrTraits< Expr<Body> >$/;"	s	namespace:cv::cudev
PtrTraits	opencv2/cudev/ptr2d/constant.hpp	/^template <typename T> struct PtrTraits< ConstantPtrSz<T> > : PtrTraitsBase< ConstantPtrSz<T>, ConstantPtr<T> >$/;"	s	namespace:cv::cudev
PtrTraits	opencv2/cudev/ptr2d/deriv.hpp	/^template <class SrcPtr> struct PtrTraits< DerivXPtrSz<SrcPtr> > : PtrTraitsBase<DerivXPtrSz<SrcPtr>, DerivXPtr<SrcPtr> >$/;"	s	namespace:cv::cudev
PtrTraits	opencv2/cudev/ptr2d/deriv.hpp	/^template <class SrcPtr> struct PtrTraits< DerivYPtrSz<SrcPtr> > : PtrTraitsBase<DerivYPtrSz<SrcPtr>, DerivYPtr<SrcPtr> >$/;"	s	namespace:cv::cudev
PtrTraits	opencv2/cudev/ptr2d/deriv.hpp	/^template <class SrcPtr> struct PtrTraits< ScharrXPtrSz<SrcPtr> > : PtrTraitsBase<ScharrXPtrSz<SrcPtr>, ScharrXPtr<SrcPtr> >$/;"	s	namespace:cv::cudev
PtrTraits	opencv2/cudev/ptr2d/deriv.hpp	/^template <class SrcPtr> struct PtrTraits< ScharrYPtrSz<SrcPtr> > : PtrTraitsBase<ScharrYPtrSz<SrcPtr>, ScharrYPtr<SrcPtr> >$/;"	s	namespace:cv::cudev
PtrTraits	opencv2/cudev/ptr2d/deriv.hpp	/^template <class SrcPtr> struct PtrTraits< SobelXPtrSz<SrcPtr> > : PtrTraitsBase<SobelXPtrSz<SrcPtr>, SobelXPtr<SrcPtr> >$/;"	s	namespace:cv::cudev
PtrTraits	opencv2/cudev/ptr2d/deriv.hpp	/^template <class SrcPtr> struct PtrTraits< SobelYPtrSz<SrcPtr> > : PtrTraitsBase<SobelYPtrSz<SrcPtr>, SobelYPtr<SrcPtr> >$/;"	s	namespace:cv::cudev
PtrTraits	opencv2/cudev/ptr2d/deriv.hpp	/^template <int ksize, class SrcPtr> struct PtrTraits< LaplacianPtrSz<ksize, SrcPtr> > : PtrTraitsBase<LaplacianPtrSz<ksize, SrcPtr>, LaplacianPtr<ksize, SrcPtr> >$/;"	s	namespace:cv::cudev
PtrTraits	opencv2/cudev/ptr2d/glob.hpp	/^template <typename T> struct PtrTraits< GlobPtrSz<T> > : PtrTraitsBase<GlobPtrSz<T>, GlobPtr<T> >$/;"	s	namespace:cv::cudev
PtrTraits	opencv2/cudev/ptr2d/gpumat.hpp	/^template <typename T> struct PtrTraits< GpuMat_<T> > : PtrTraitsBase<GpuMat_<T>, GlobPtr<T> >$/;"	s	namespace:cv::cudev
PtrTraits	opencv2/cudev/ptr2d/interpolation.hpp	/^template <class SrcPtr> struct PtrTraits< CommonAreaInterPtrSz<SrcPtr> > : PtrTraitsBase<CommonAreaInterPtrSz<SrcPtr>, CommonAreaInterPtr<SrcPtr> >$/;"	s	namespace:cv::cudev
PtrTraits	opencv2/cudev/ptr2d/interpolation.hpp	/^template <class SrcPtr> struct PtrTraits< CubicInterPtrSz<SrcPtr> > : PtrTraitsBase<CubicInterPtrSz<SrcPtr>, CubicInterPtr<SrcPtr> >$/;"	s	namespace:cv::cudev
PtrTraits	opencv2/cudev/ptr2d/interpolation.hpp	/^template <class SrcPtr> struct PtrTraits< IntegerAreaInterPtrSz<SrcPtr> > : PtrTraitsBase<IntegerAreaInterPtrSz<SrcPtr>, IntegerAreaInterPtr<SrcPtr> >$/;"	s	namespace:cv::cudev
PtrTraits	opencv2/cudev/ptr2d/interpolation.hpp	/^template <class SrcPtr> struct PtrTraits< LinearInterPtrSz<SrcPtr> > : PtrTraitsBase<LinearInterPtrSz<SrcPtr>, LinearInterPtr<SrcPtr> >$/;"	s	namespace:cv::cudev
PtrTraits	opencv2/cudev/ptr2d/interpolation.hpp	/^template <class SrcPtr> struct PtrTraits< NearestInterPtrSz<SrcPtr> > : PtrTraitsBase<NearestInterPtrSz<SrcPtr>, NearestInterPtr<SrcPtr> >$/;"	s	namespace:cv::cudev
PtrTraits	opencv2/cudev/ptr2d/lut.hpp	/^template <class SrcPtr, class TablePtr> struct PtrTraits< LutPtrSz<SrcPtr, TablePtr> > : PtrTraitsBase<LutPtrSz<SrcPtr, TablePtr>, LutPtr<SrcPtr, TablePtr> >$/;"	s	namespace:cv::cudev
PtrTraits	opencv2/cudev/ptr2d/mask.hpp	/^template <class MaskPtr> struct PtrTraits< SingleMaskChannelsSz<MaskPtr> > : PtrTraitsBase<SingleMaskChannelsSz<MaskPtr>, SingleMaskChannels<MaskPtr> >$/;"	s	namespace:cv::cudev
PtrTraits	opencv2/cudev/ptr2d/remap.hpp	/^template <class SrcPtr, class MapPtr> struct PtrTraits< RemapPtr1Sz<SrcPtr, MapPtr> > : PtrTraitsBase<RemapPtr1Sz<SrcPtr, MapPtr>, RemapPtr1<SrcPtr, MapPtr> >$/;"	s	namespace:cv::cudev
PtrTraits	opencv2/cudev/ptr2d/remap.hpp	/^template <class SrcPtr, class MapXPtr, class MapYPtr> struct PtrTraits< RemapPtr2Sz<SrcPtr, MapXPtr, MapYPtr> > : PtrTraitsBase<RemapPtr2Sz<SrcPtr, MapXPtr, MapYPtr>, RemapPtr2<SrcPtr, MapXPtr, MapYPtr> >$/;"	s	namespace:cv::cudev
PtrTraits	opencv2/cudev/ptr2d/resize.hpp	/^template <class SrcPtr> struct PtrTraits< ResizePtrSz<SrcPtr> > : PtrTraitsBase<ResizePtrSz<SrcPtr>, ResizePtr<SrcPtr> >$/;"	s	namespace:cv::cudev
PtrTraits	opencv2/cudev/ptr2d/texture.hpp	/^template <typename T> struct PtrTraits< Texture<T> > : PtrTraitsBase<Texture<T>, TexturePtr<T> >$/;"	s	namespace:cv::cudev
PtrTraits	opencv2/cudev/ptr2d/traits.hpp	/^template <class Ptr2DSz> struct PtrTraits : PtrTraitsBase<Ptr2DSz, Ptr2DSz>$/;"	s	namespace:cv::cudev
PtrTraits	opencv2/cudev/ptr2d/transform.hpp	/^template <class Src1Ptr, class Src2Ptr, class Op> struct PtrTraits< BinaryTransformPtrSz<Src1Ptr, Src2Ptr, Op> > : PtrTraitsBase<BinaryTransformPtrSz<Src1Ptr, Src2Ptr, Op>, BinaryTransformPtr<Src1Ptr, Src2Ptr, Op> >$/;"	s	namespace:cv::cudev
PtrTraits	opencv2/cudev/ptr2d/transform.hpp	/^template <class SrcPtr, class Op> struct PtrTraits< UnaryTransformPtrSz<SrcPtr, Op> > : PtrTraitsBase<UnaryTransformPtrSz<SrcPtr, Op>, UnaryTransformPtr<SrcPtr, Op> >$/;"	s	namespace:cv::cudev
PtrTraits	opencv2/cudev/ptr2d/warping.hpp	/^template <> struct PtrTraits<AffineMapPtrSz> : PtrTraitsBase<AffineMapPtrSz, AffineMapPtr>$/;"	s	namespace:cv::cudev
PtrTraits	opencv2/cudev/ptr2d/warping.hpp	/^template <> struct PtrTraits<PerspectiveMapPtrSz> : PtrTraitsBase<PerspectiveMapPtrSz, PerspectiveMapPtr>$/;"	s	namespace:cv::cudev
PtrTraits	opencv2/cudev/ptr2d/zip.hpp	/^template <class PtrTuple> struct PtrTraits< ZipPtrSz<PtrTuple> > : PtrTraitsBase<ZipPtrSz<PtrTuple>, ZipPtr<PtrTuple> >$/;"	s	namespace:cv::cudev
PtrTraitsBase	opencv2/cudev/ptr2d/traits.hpp	/^template <class Ptr2DSz, class Ptr2D> struct PtrTraitsBase$/;"	s	namespace:cv::cudev
PtrWriteOnly	opencv2/core/ocl.hpp	/^    static KernelArg PtrWriteOnly(const UMat& m)$/;"	f	class:cv::ocl::KernelArg
PyrDownBody	opencv2/cudev/expr/warping.hpp	/^template <class SrcPtr> struct PyrDownBody$/;"	s	namespace:cv::cudev
PyrLKOpticalFlow	opencv2/superres/optical_flow.hpp	/^        class PyrLKOpticalFlow : public virtual DenseOpticalFlowExt$/;"	c	namespace:cv::superres
PyrLkOptFlowEstimatorBase	opencv2/videostab/optical_flow.hpp	/^    PyrLkOptFlowEstimatorBase() { setWinSize(Size(21, 21)); setMaxLevel(3); }$/;"	f	class:cv::videostab::PyrLkOptFlowEstimatorBase
PyrLkOptFlowEstimatorBase	opencv2/videostab/optical_flow.hpp	/^class CV_EXPORTS PyrLkOptFlowEstimatorBase$/;"	c	namespace:cv::videostab
PyrUpBody	opencv2/cudev/expr/warping.hpp	/^template <class SrcPtr> struct PyrUpBody$/;"	s	namespace:cv::cudev
QP_Level_InterB	opencv2/cudacodec.hpp	/^    int QP_Level_InterB; \/\/!< NVVE_QP_LEVEL_INTER_B,$/;"	m	struct:cv::cudacodec::EncoderParams
QP_Level_InterP	opencv2/cudacodec.hpp	/^    int QP_Level_InterP; \/\/!< NVVE_QP_LEVEL_INTER_P,$/;"	m	struct:cv::cudacodec::EncoderParams
QP_Level_Intra	opencv2/cudacodec.hpp	/^    int QP_Level_Intra;  \/\/!< NVVE_QP_LEVEL_INTRA,$/;"	m	struct:cv::cudacodec::EncoderParams
QS	5/parallel/types.h	/^      QS, $/;"	e	enum:__gnu_parallel::_SortAlgorithm
QS_BALANCED	5/parallel/types.h	/^      QS_BALANCED $/;"	e	enum:__gnu_parallel::_SortAlgorithm
QT_CHECKBOX	opencv2/highgui.hpp	/^       QT_CHECKBOX      = 1,    \/\/!< Checkbox button.$/;"	e	enum:cv::QtButtonTypes
QT_FONT_BLACK	opencv2/highgui.hpp	/^        QT_FONT_BLACK           = 87  \/\/!< Weight of 87$/;"	e	enum:cv::QtFontWeights
QT_FONT_BOLD	opencv2/highgui.hpp	/^        QT_FONT_BOLD            = 75, \/\/!< Weight of 75$/;"	e	enum:cv::QtFontWeights
QT_FONT_DEMIBOLD	opencv2/highgui.hpp	/^        QT_FONT_DEMIBOLD        = 63, \/\/!< Weight of 63$/;"	e	enum:cv::QtFontWeights
QT_FONT_LIGHT	opencv2/highgui.hpp	/^        QT_FONT_LIGHT           = 25, \/\/!< Weight of 25$/;"	e	enum:cv::QtFontWeights
QT_FONT_NORMAL	opencv2/highgui.hpp	/^        QT_FONT_NORMAL          = 50, \/\/!< Weight of 50$/;"	e	enum:cv::QtFontWeights
QT_NEW_BUTTONBAR	opencv2/highgui.hpp	/^       QT_NEW_BUTTONBAR = 1024  \/\/!< Button should create a new buttonbar$/;"	e	enum:cv::QtButtonTypes
QT_PUSH_BUTTON	opencv2/highgui.hpp	/^       QT_PUSH_BUTTON   = 0,    \/\/!< Push button.$/;"	e	enum:cv::QtButtonTypes
QT_RADIOBOX	opencv2/highgui.hpp	/^       QT_RADIOBOX      = 2,    \/\/!< Radiobox button.$/;"	e	enum:cv::QtButtonTypes
QT_STYLE_ITALIC	opencv2/highgui.hpp	/^        QT_STYLE_ITALIC         = 1, \/\/!< Italic font.$/;"	e	enum:cv::QtFontStyles
QT_STYLE_NORMAL	opencv2/highgui.hpp	/^        QT_STYLE_NORMAL         = 0, \/\/!< Normal font.$/;"	e	enum:cv::QtFontStyles
QT_STYLE_OBLIQUE	opencv2/highgui.hpp	/^        QT_STYLE_OBLIQUE        = 2  \/\/!< Oblique font.$/;"	e	enum:cv::QtFontStyles
QUADS	opencv2/core/opengl.hpp	/^    QUADS          = 0x0007,$/;"	e	enum:cv::ogl::RenderModes
QUAD_STRIP	opencv2/core/opengl.hpp	/^    QUAD_STRIP     = 0x0008,$/;"	e	enum:cv::ogl::RenderModes
QtButtonTypes	opencv2/highgui.hpp	/^enum QtButtonTypes {$/;"	g	namespace:cv
QtFont	opencv2/highgui.hpp	/^struct QtFont$/;"	s	namespace:cv
QtFontStyles	opencv2/highgui.hpp	/^enum QtFontStyles {$/;"	g	namespace:cv
QtFontWeights	opencv2/highgui.hpp	/^enum QtFontWeights {$/;"	g	namespace:cv
QuadEdge	opencv2/imgproc.hpp	/^    struct CV_EXPORTS QuadEdge$/;"	s	class:cv::Subdiv2D
Queue	opencv2/core/ocl.hpp	/^class CV_EXPORTS Queue$/;"	c	namespace:cv::ocl
Queue	opencv2/core/ocl.hpp	/^class CV_EXPORTS Queue;$/;"	m	namespace:cv::ocl	typeref:class:cv::ocl::CV_EXPORTS
R	opencv2/stitching/detail/camera.hpp	/^    Mat R; \/\/ Rotation$/;"	m	struct:cv::detail::CameraParams
R2Y	opencv2/core/cuda/detail/color_detail.hpp	/^            R2Y        = 4899,$/;"	e	enum:cv::cuda::device::color_detail::__anon246
R2Y	opencv2/cudev/functional/detail/color_cvt.hpp	/^        R2Y        = 4899,$/;"	e	enum:cv::cudev::color_cvt_detail::__anon396
RAND_DIM	opencv2/flann/kdtree_index.h	/^        RAND_DIM=5$/;"	e	enum:cvflann::KDTreeIndex::__anon115
RANSAC	opencv2/calib3d.hpp	/^       RANSAC = 8, \/\/!< RANSAC algorithm$/;"	e	enum:cv::__anon96
RAW_OUTPUT	opencv2/ml.hpp	/^        RAW_OUTPUT=1, \/\/!< makes the method return the raw results (the sum), not the class label$/;"	e	enum:cv::ml::StatModel::Flags
RBF	opencv2/ml.hpp	/^        RBF=2,$/;"	e	enum:cv::ml::SVM::KernelTypes
RCType	opencv2/cudacodec.hpp	/^    int RCType;          \/\/!< NVVE_RC_TYPE,$/;"	m	struct:cv::cudacodec::EncoderParams
READ	opencv2/core/persistence.hpp	/^        READ        = 0, \/\/!< value, open the file for reading$/;"	e	enum:cv::FileStorage::Mode
READ_ONLY	opencv2/core/ocl.hpp	/^    enum { LOCAL=1, READ_ONLY=2, WRITE_ONLY=4, READ_WRITE=6, CONSTANT=8, PTR_ONLY = 16, NO_SIZE=256 };$/;"	e	enum:cv::ocl::KernelArg::__anon323
READ_ONLY	opencv2/core/opengl.hpp	/^        READ_ONLY  = 0x88B8,$/;"	e	enum:cv::ogl::Buffer::Access
READ_ONLY_CACHE	opencv2/core/ocl.hpp	/^        READ_ONLY_CACHE=1,$/;"	e	enum:cv::ocl::Device::__anon320
READ_WRITE	opencv2/core/ocl.hpp	/^    enum { LOCAL=1, READ_ONLY=2, WRITE_ONLY=4, READ_WRITE=6, CONSTANT=8, PTR_ONLY = 16, NO_SIZE=256 };$/;"	e	enum:cv::ocl::KernelArg::__anon323
READ_WRITE	opencv2/core/opengl.hpp	/^        READ_WRITE = 0x88BA$/;"	e	enum:cv::ogl::Buffer::Access
READ_WRITE_CACHE	opencv2/core/ocl.hpp	/^        READ_WRITE_CACHE=2$/;"	e	enum:cv::ocl::Device::__anon320
REAL	opencv2/core.hpp	/^    enum { INT=0, BOOLEAN=1, REAL=2, STRING=3, MAT=4, MAT_VECTOR=5, ALGORITHM=6, FLOAT=7,$/;"	e	enum:cv::Param::__anon344
REAL	opencv2/core/persistence.hpp	/^        REAL      = 2, \/\/!< floating-point number$/;"	e	enum:cv::FileNode::Type
REAL	opencv2/ml.hpp	/^        REAL=1, \/\/!< Real AdaBoost. It is a technique that utilizes confidence-rated predictions$/;"	e	enum:cv::ml::Boost::Types
RECT_SIMILARITY_PROPORTION	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	420;"	d
RECURSIVE	5/parallel/types.h	/^      RECURSIVE, $/;"	e	enum:__gnu_parallel::_PartialSumAlgorithm
RECURS_FILTER	opencv2/photo.hpp	/^    RECURS_FILTER = 1,$/;"	e	enum:cv::__anon118
REDUCE_AVG	opencv2/core.hpp	/^                   REDUCE_AVG = 1, \/\/!< the output is the mean vector of all rows\/columns of the matrix.$/;"	e	enum:cv::ReduceTypes
REDUCE_MAX	opencv2/core.hpp	/^                   REDUCE_MAX = 2, \/\/!< the output is the maximum (column\/row-wise) of all rows\/columns of the matrix.$/;"	e	enum:cv::ReduceTypes
REDUCE_MIN	opencv2/core.hpp	/^                   REDUCE_MIN = 3  \/\/!< the output is the minimum (column\/row-wise) of all rows\/columns of the matrix.$/;"	e	enum:cv::ReduceTypes
REDUCE_SUM	opencv2/core.hpp	/^enum ReduceTypes { REDUCE_SUM = 0, \/\/!< the output is the sum of all rows\/columns of the matrix.$/;"	e	enum:cv::ReduceTypes
REF	opencv2/core/persistence.hpp	/^        REF       = 4, \/\/!< integer of size size_t. Typically used for storing complex dynamic structures where some elements reference the others$/;"	e	enum:cv::FileNode::Type
REG_DISABLE	opencv2/ml.hpp	/^        REG_DISABLE = -1, \/\/!< Regularization disabled$/;"	e	enum:cv::ml::LogisticRegression::RegKinds
REG_L1	opencv2/ml.hpp	/^        REG_L1 = 0, \/\/!< %L1 norm$/;"	e	enum:cv::ml::LogisticRegression::RegKinds
REG_L2	opencv2/ml.hpp	/^        REG_L2 = 1 \/\/!< %L2 norm$/;"	e	enum:cv::ml::LogisticRegression::RegKinds
RESPONSE_ROW	opencv2/cudafeatures2d.hpp	/^        RESPONSE_ROW,$/;"	e	enum:cv::cuda::FastFeatureDetector::__anon91
RESPONSE_ROW	opencv2/cudafeatures2d.hpp	/^        RESPONSE_ROW,$/;"	e	enum:cv::cuda::ORB::__anon92
RETR_CCOMP	opencv2/imgproc.hpp	/^    RETR_CCOMP     = 2,$/;"	e	enum:cv::RetrievalModes
RETR_EXTERNAL	opencv2/imgproc.hpp	/^    RETR_EXTERNAL  = 0,$/;"	e	enum:cv::RetrievalModes
RETR_FLOODFILL	opencv2/imgproc.hpp	/^    RETR_FLOODFILL = 4 \/\/!<$/;"	e	enum:cv::RetrievalModes
RETR_LIST	opencv2/imgproc.hpp	/^    RETR_LIST      = 1,$/;"	e	enum:cv::RetrievalModes
RETR_TREE	opencv2/imgproc.hpp	/^    RETR_TREE      = 3,$/;"	e	enum:cv::RetrievalModes
RGB	opencv2/core/opengl.hpp	/^        RGB             = 0x1907, \/\/!< Red, Green, Blue$/;"	e	enum:cv::ogl::Texture2D::Format
RGB2Gray	opencv2/core/cuda/detail/color_detail.hpp	/^            __host__ __device__ __forceinline__ RGB2Gray() {}$/;"	f	struct:cv::cuda::device::color_detail::RGB2Gray
RGB2Gray	opencv2/core/cuda/detail/color_detail.hpp	/^            __host__ __device__ __forceinline__ RGB2Gray(const RGB2Gray&) {}$/;"	f	struct:cv::cuda::device::color_detail::RGB2Gray
RGB2Gray	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx> struct RGB2Gray<uchar, 4, bidx> : unary_function<uint, uchar>$/;"	s	namespace:cv::cuda::device::color_detail
RGB2Gray	opencv2/core/cuda/detail/color_detail.hpp	/^        template <typename T, int scn, int bidx> struct RGB2Gray : unary_function<typename TypeVec<T, scn>::vec_type, T>$/;"	s	namespace:cv::cuda::device::color_detail
RGB2Gray	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <int scn, int bidx> struct RGB2Gray<float, scn, bidx>$/;"	s	namespace:cv::cudev::color_cvt_detail
RGB2Gray	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <typename T, int scn, int bidx> struct RGB2Gray$/;"	s	namespace:cv::cudev::color_cvt_detail
RGB2GrayConvert	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx, typename T> static __device__ __forceinline__ T RGB2GrayConvert(const T* src)$/;"	f	namespace:cv::cuda::device::color_detail
RGB2GrayConvert	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx> static __device__ __forceinline__ float RGB2GrayConvert(const float* src)$/;"	f	namespace:cv::cuda::device::color_detail
RGB2GrayConvert	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx> static __device__ __forceinline__ uchar RGB2GrayConvert(uint src)$/;"	f	namespace:cv::cuda::device::color_detail
RGB2HLS	opencv2/core/cuda/detail/color_detail.hpp	/^            __host__ __device__ __forceinline__ RGB2HLS() {}$/;"	f	struct:cv::cuda::device::color_detail::RGB2HLS
RGB2HLS	opencv2/core/cuda/detail/color_detail.hpp	/^            __host__ __device__ __forceinline__ RGB2HLS(const RGB2HLS&) {}$/;"	f	struct:cv::cuda::device::color_detail::RGB2HLS
RGB2HLS	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx, int hr> struct RGB2HLS<uchar, 4, 4, bidx, hr> : unary_function<uint, uint>$/;"	s	namespace:cv::cuda::device::color_detail
RGB2HLS	opencv2/core/cuda/detail/color_detail.hpp	/^        template <typename T, int scn, int dcn, int bidx, int hr> struct RGB2HLS$/;"	s	namespace:cv::cuda::device::color_detail
RGB2HLS	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <int scn, int dcn, int bidx, int hr> struct RGB2HLS<float, scn, dcn, bidx, hr>$/;"	s	namespace:cv::cudev::color_cvt_detail
RGB2HLS	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <int scn, int dcn, int bidx, int hr> struct RGB2HLS<uchar, scn, dcn, bidx, hr>$/;"	s	namespace:cv::cudev::color_cvt_detail
RGB2HLSConvert	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx, int hr, typename D> static __device__ void RGB2HLSConvert(const float* src, D& dst)$/;"	f	namespace:cv::cuda::device::color_detail
RGB2HLSConvert	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx, int hr, typename D> static __device__ void RGB2HLSConvert(const uchar* src, D& dst)$/;"	f	namespace:cv::cuda::device::color_detail
RGB2HLSConvert	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx, int hr> static __device__ uint RGB2HLSConvert(uint src)$/;"	f	namespace:cv::cuda::device::color_detail
RGB2HSV	opencv2/core/cuda/detail/color_detail.hpp	/^            __host__ __device__ __forceinline__ RGB2HSV() {}$/;"	f	struct:cv::cuda::device::color_detail::RGB2HSV
RGB2HSV	opencv2/core/cuda/detail/color_detail.hpp	/^            __host__ __device__ __forceinline__ RGB2HSV(const RGB2HSV&) {}$/;"	f	struct:cv::cuda::device::color_detail::RGB2HSV
RGB2HSV	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx, int hr> struct RGB2HSV<uchar, 4, 4, bidx, hr> : unary_function<uint, uint>$/;"	s	namespace:cv::cuda::device::color_detail
RGB2HSV	opencv2/core/cuda/detail/color_detail.hpp	/^        template <typename T, int scn, int dcn, int bidx, int hr> struct RGB2HSV$/;"	s	namespace:cv::cuda::device::color_detail
RGB2HSV	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <int scn, int dcn, int bidx, int hr> struct RGB2HSV<float, scn, dcn, bidx, hr>$/;"	s	namespace:cv::cudev::color_cvt_detail
RGB2HSV	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <int scn, int dcn, int bidx, int hr> struct RGB2HSV<uchar, scn, dcn, bidx, hr>$/;"	s	namespace:cv::cudev::color_cvt_detail
RGB2HSVConvert	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx, int hr, typename D> static __device__ void RGB2HSVConvert(const float* src, D& dst)$/;"	f	namespace:cv::cuda::device::color_detail
RGB2HSVConvert	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx, int hr, typename D> static __device__ void RGB2HSVConvert(const uchar* src, D& dst)$/;"	f	namespace:cv::cuda::device::color_detail
RGB2HSVConvert	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx, int hr> static __device__ uint RGB2HSVConvert(uint src)$/;"	f	namespace:cv::cuda::device::color_detail
RGB2Lab	opencv2/core/cuda/detail/color_detail.hpp	/^            __host__ __device__ __forceinline__ RGB2Lab() {}$/;"	f	struct:cv::cuda::device::color_detail::RGB2Lab
RGB2Lab	opencv2/core/cuda/detail/color_detail.hpp	/^            __host__ __device__ __forceinline__ RGB2Lab(const RGB2Lab&) {}$/;"	f	struct:cv::cuda::device::color_detail::RGB2Lab
RGB2Lab	opencv2/core/cuda/detail/color_detail.hpp	/^        struct RGB2Lab<float, scn, dcn, srgb, blueIdx>$/;"	s	namespace:cv::cuda::device::color_detail
RGB2Lab	opencv2/core/cuda/detail/color_detail.hpp	/^        struct RGB2Lab<uchar, scn, dcn, srgb, blueIdx>$/;"	s	namespace:cv::cuda::device::color_detail
RGB2Lab	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <int scn, int dcn, bool srgb, int blueIdx> struct RGB2Lab<float, scn, dcn, srgb, blueIdx>$/;"	s	namespace:cv::cudev::color_cvt_detail
RGB2Lab	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <int scn, int dcn, bool srgb, int blueIdx> struct RGB2Lab<uchar, scn, dcn, srgb, blueIdx>$/;"	s	namespace:cv::cudev::color_cvt_detail
RGB2LabConvert_b	opencv2/core/cuda/detail/color_detail.hpp	/^        __device__ __forceinline__ void RGB2LabConvert_b(const T& src, D& dst)$/;"	f	namespace:cv::cuda::device::color_detail
RGB2LabConvert_f	opencv2/core/cuda/detail/color_detail.hpp	/^        __device__ __forceinline__ void RGB2LabConvert_f(const T& src, D& dst)$/;"	f	namespace:cv::cuda::device::color_detail
RGB2Luv	opencv2/core/cuda/detail/color_detail.hpp	/^            __host__ __device__ __forceinline__ RGB2Luv() {}$/;"	f	struct:cv::cuda::device::color_detail::RGB2Luv
RGB2Luv	opencv2/core/cuda/detail/color_detail.hpp	/^            __host__ __device__ __forceinline__ RGB2Luv(const RGB2Luv&) {}$/;"	f	struct:cv::cuda::device::color_detail::RGB2Luv
RGB2Luv	opencv2/core/cuda/detail/color_detail.hpp	/^        struct RGB2Luv<float, scn, dcn, srgb, blueIdx>$/;"	s	namespace:cv::cuda::device::color_detail
RGB2Luv	opencv2/core/cuda/detail/color_detail.hpp	/^        struct RGB2Luv<uchar, scn, dcn, srgb, blueIdx>$/;"	s	namespace:cv::cuda::device::color_detail
RGB2Luv	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <int scn, int dcn, bool srgb, int blueIdx> struct RGB2Luv<float, scn, dcn, srgb, blueIdx>$/;"	s	namespace:cv::cudev::color_cvt_detail
RGB2Luv	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <int scn, int dcn, bool srgb, int blueIdx> struct RGB2Luv<uchar, scn, dcn, srgb, blueIdx>$/;"	s	namespace:cv::cudev::color_cvt_detail
RGB2LuvConvert_b	opencv2/core/cuda/detail/color_detail.hpp	/^        __device__ __forceinline__ void RGB2LuvConvert_b(const T& src, D& dst)$/;"	f	namespace:cv::cuda::device::color_detail
RGB2LuvConvert_f	opencv2/core/cuda/detail/color_detail.hpp	/^        __device__ __forceinline__ void RGB2LuvConvert_f(const T& src, D& dst)$/;"	f	namespace:cv::cuda::device::color_detail
RGB2RGB	opencv2/core/cuda/detail/color_detail.hpp	/^            __host__ __device__ __forceinline__ RGB2RGB() {}$/;"	f	struct:cv::cuda::device::color_detail::RGB2RGB
RGB2RGB	opencv2/core/cuda/detail/color_detail.hpp	/^            __host__ __device__ __forceinline__ RGB2RGB(const RGB2RGB&) {}$/;"	f	struct:cv::cuda::device::color_detail::RGB2RGB
RGB2RGB	opencv2/core/cuda/detail/color_detail.hpp	/^        template <> struct RGB2RGB<uchar, 4, 4, 2> : unary_function<uint, uint>$/;"	s	namespace:cv::cuda::device::color_detail
RGB2RGB	opencv2/core/cuda/detail/color_detail.hpp	/^        template <typename T, int scn, int dcn, int bidx> struct RGB2RGB$/;"	s	namespace:cv::cuda::device::color_detail
RGB2RGB	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <typename T, int scn, int dcn, int bidx> struct RGB2RGB$/;"	s	namespace:cv::cudev::color_cvt_detail
RGB2RGB5x5	opencv2/core/cuda/detail/color_detail.hpp	/^            __host__ __device__ __forceinline__ RGB2RGB5x5() {}$/;"	f	struct:cv::cuda::device::color_detail::RGB2RGB5x5
RGB2RGB5x5	opencv2/core/cuda/detail/color_detail.hpp	/^            __host__ __device__ __forceinline__ RGB2RGB5x5(const RGB2RGB5x5&) {}$/;"	f	struct:cv::cuda::device::color_detail::RGB2RGB5x5
RGB2RGB5x5	opencv2/core/cuda/detail/color_detail.hpp	/^        template<int bidx, int green_bits> struct RGB2RGB5x5<3, bidx,green_bits> : unary_function<uchar3, ushort>$/;"	s	namespace:cv::cuda::device::color_detail
RGB2RGB5x5	opencv2/core/cuda/detail/color_detail.hpp	/^        template<int bidx, int green_bits> struct RGB2RGB5x5<4, bidx,green_bits> : unary_function<uint, ushort>$/;"	s	namespace:cv::cuda::device::color_detail
RGB2RGB5x5	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <int bidx> struct RGB2RGB5x5<3, bidx, 5>$/;"	s	namespace:cv::cudev::color_cvt_detail
RGB2RGB5x5	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <int bidx> struct RGB2RGB5x5<4, bidx, 5>$/;"	s	namespace:cv::cudev::color_cvt_detail
RGB2RGB5x5	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <int scn, int bidx> struct RGB2RGB5x5<scn, bidx, 6>$/;"	s	namespace:cv::cudev::color_cvt_detail
RGB2RGB5x5Converter	opencv2/core/cuda/detail/color_detail.hpp	/^        template<int bidx> struct RGB2RGB5x5Converter<5, bidx>$/;"	s	namespace:cv::cuda::device::color_detail
RGB2RGB5x5Converter	opencv2/core/cuda/detail/color_detail.hpp	/^        template<int bidx> struct RGB2RGB5x5Converter<6, bidx>$/;"	s	namespace:cv::cuda::device::color_detail
RGB2XYZ	opencv2/core/cuda/detail/color_detail.hpp	/^            __host__ __device__ __forceinline__ RGB2XYZ() {}$/;"	f	struct:cv::cuda::device::color_detail::RGB2XYZ
RGB2XYZ	opencv2/core/cuda/detail/color_detail.hpp	/^            __host__ __device__ __forceinline__ RGB2XYZ(const RGB2XYZ&) {}$/;"	f	struct:cv::cuda::device::color_detail::RGB2XYZ
RGB2XYZ	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx> struct RGB2XYZ<uchar, 4, 4, bidx> : unary_function<uint, uint>$/;"	s	namespace:cv::cuda::device::color_detail
RGB2XYZ	opencv2/core/cuda/detail/color_detail.hpp	/^        template <typename T, int scn, int dcn, int bidx> struct RGB2XYZ$/;"	s	namespace:cv::cuda::device::color_detail
RGB2XYZ	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <int scn, int dcn, int bidx> struct RGB2XYZ<float, scn, dcn, bidx>$/;"	s	namespace:cv::cudev::color_cvt_detail
RGB2XYZ	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <typename T, int scn, int dcn, int bidx> struct RGB2XYZ$/;"	s	namespace:cv::cudev::color_cvt_detail
RGB2XYZConvert	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx, typename D> static __device__ __forceinline__ void RGB2XYZConvert(const float* src, D& dst)$/;"	f	namespace:cv::cuda::device::color_detail
RGB2XYZConvert	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx, typename T, typename D> static __device__ __forceinline__ void RGB2XYZConvert(const T* src, D& dst)$/;"	f	namespace:cv::cuda::device::color_detail
RGB2XYZConvert	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx> static __device__ __forceinline__ uint RGB2XYZConvert(uint src)$/;"	f	namespace:cv::cuda::device::color_detail
RGB2YCrCb	opencv2/core/cuda/detail/color_detail.hpp	/^            __host__ __device__ __forceinline__ RGB2YCrCb() {}$/;"	f	struct:cv::cuda::device::color_detail::RGB2YCrCb
RGB2YCrCb	opencv2/core/cuda/detail/color_detail.hpp	/^            __host__ __device__ __forceinline__ RGB2YCrCb(const RGB2YCrCb&) {}$/;"	f	struct:cv::cuda::device::color_detail::RGB2YCrCb
RGB2YCrCb	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx> struct RGB2YCrCb<uchar, 4, 4, bidx> : unary_function<uint, uint>$/;"	s	namespace:cv::cuda::device::color_detail
RGB2YCrCb	opencv2/core/cuda/detail/color_detail.hpp	/^        template <typename T, int scn, int dcn, int bidx> struct RGB2YCrCb$/;"	s	namespace:cv::cuda::device::color_detail
RGB2YCrCb	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <int scn, int dcn, int bidx> struct RGB2YCrCb<float, scn, dcn, bidx>$/;"	s	namespace:cv::cudev::color_cvt_detail
RGB2YCrCb	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <typename T, int scn, int dcn, int bidx> struct RGB2YCrCb$/;"	s	namespace:cv::cudev::color_cvt_detail
RGB2YCrCbConvert	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx, typename D> static __device__ __forceinline__ void RGB2YCrCbConvert(const float* src, D& dst)$/;"	f	namespace:cv::cuda::device::color_detail
RGB2YCrCbConvert	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx, typename T, typename D> static __device__ void RGB2YCrCbConvert(const T* src, D& dst)$/;"	f	namespace:cv::cuda::device::color_detail
RGB2YCrCbConvert	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx> static __device__ uint RGB2YCrCbConvert(uint src)$/;"	f	namespace:cv::cuda::device::color_detail
RGB2YUV	opencv2/core/cuda/detail/color_detail.hpp	/^            __host__ __device__ __forceinline__ RGB2YUV() {}$/;"	f	struct:cv::cuda::device::color_detail::RGB2YUV
RGB2YUV	opencv2/core/cuda/detail/color_detail.hpp	/^            __host__ __device__ __forceinline__ RGB2YUV(const RGB2YUV&) {}$/;"	f	struct:cv::cuda::device::color_detail::RGB2YUV
RGB2YUV	opencv2/core/cuda/detail/color_detail.hpp	/^        template <typename T, int scn, int dcn, int bidx> struct RGB2YUV$/;"	s	namespace:cv::cuda::device::color_detail
RGB2YUV	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <int scn, int dcn, int bidx> struct RGB2YUV<float, scn, dcn, bidx>$/;"	s	namespace:cv::cudev::color_cvt_detail
RGB2YUV	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <typename T, int scn, int dcn, int bidx> struct RGB2YUV$/;"	s	namespace:cv::cudev::color_cvt_detail
RGB2YUVConvert	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx, typename D> static __device__ __forceinline__ void RGB2YUVConvert(const float* src, D& dst)$/;"	f	namespace:cv::cuda::device::color_detail
RGB2YUVConvert	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx, typename T, typename D> static __device__ void RGB2YUVConvert(const T* src, D& dst)$/;"	f	namespace:cv::cuda::device::color_detail
RGB5x52Gray	opencv2/core/cuda/detail/color_detail.hpp	/^            __host__ __device__ __forceinline__ RGB5x52Gray() {}$/;"	f	struct:cv::cuda::device::color_detail::RGB5x52Gray
RGB5x52Gray	opencv2/core/cuda/detail/color_detail.hpp	/^            __host__ __device__ __forceinline__ RGB5x52Gray(const RGB5x52Gray&) {}$/;"	f	struct:cv::cuda::device::color_detail::RGB5x52Gray
RGB5x52Gray	opencv2/core/cuda/detail/color_detail.hpp	/^        template<int green_bits> struct RGB5x52Gray : unary_function<ushort, uchar>$/;"	s	namespace:cv::cuda::device::color_detail
RGB5x52Gray	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <> struct RGB5x52Gray<5>$/;"	s	namespace:cv::cudev::color_cvt_detail
RGB5x52Gray	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <> struct RGB5x52Gray<6>$/;"	s	namespace:cv::cudev::color_cvt_detail
RGB5x52GrayConverter	opencv2/core/cuda/detail/color_detail.hpp	/^        template <> struct RGB5x52GrayConverter<5>$/;"	s	namespace:cv::cuda::device::color_detail
RGB5x52GrayConverter	opencv2/core/cuda/detail/color_detail.hpp	/^        template <> struct RGB5x52GrayConverter<6>$/;"	s	namespace:cv::cuda::device::color_detail
RGB5x52RGB	opencv2/core/cuda/detail/color_detail.hpp	/^            __host__ __device__ __forceinline__ RGB5x52RGB() {}$/;"	f	struct:cv::cuda::device::color_detail::RGB5x52RGB
RGB5x52RGB	opencv2/core/cuda/detail/color_detail.hpp	/^            __host__ __device__ __forceinline__ RGB5x52RGB(const RGB5x52RGB&) {}$/;"	f	struct:cv::cuda::device::color_detail::RGB5x52RGB
RGB5x52RGB	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx, int green_bits> struct RGB5x52RGB<3, bidx, green_bits> : unary_function<ushort, uchar3>$/;"	s	namespace:cv::cuda::device::color_detail
RGB5x52RGB	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx, int green_bits> struct RGB5x52RGB<4, bidx, green_bits> : unary_function<ushort, uint>$/;"	s	namespace:cv::cuda::device::color_detail
RGB5x52RGB	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <int bidx> struct RGB5x52RGB<3, bidx, 5>$/;"	s	namespace:cv::cudev::color_cvt_detail
RGB5x52RGB	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <int bidx> struct RGB5x52RGB<3, bidx, 6>$/;"	s	namespace:cv::cudev::color_cvt_detail
RGB5x52RGB	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <int bidx> struct RGB5x52RGB<4, bidx, 5>$/;"	s	namespace:cv::cudev::color_cvt_detail
RGB5x52RGB	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <int bidx> struct RGB5x52RGB<4, bidx, 6>$/;"	s	namespace:cv::cudev::color_cvt_detail
RGB5x52RGBConverter	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx> struct RGB5x52RGBConverter<5, bidx>$/;"	s	namespace:cv::cuda::device::color_detail
RGB5x52RGBConverter	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx> struct RGB5x52RGBConverter<6, bidx>$/;"	s	namespace:cv::cuda::device::color_detail
RGBA	opencv2/core/opengl.hpp	/^        RGBA            = 0x1908  \/\/!< Red, Green, Blue, Alpha$/;"	e	enum:cv::ogl::Texture2D::Format
RHO	opencv2/calib3d.hpp	/^       RHO    = 16 \/\/!< RHO algorithm$/;"	e	enum:cv::__anon96
RNG	opencv2/core.hpp	/^class CV_EXPORTS RNG$/;"	c	namespace:cv
RNG	opencv2/core/base.hpp	/^class CV_EXPORTS RNG;$/;"	m	namespace:cv	typeref:class:cv::CV_EXPORTS
RNG	opencv2/core/operations.hpp	/^inline RNG::RNG()              { state = 0xffffffff; }$/;"	f	class:cv::RNG
RNG	opencv2/core/operations.hpp	/^inline RNG::RNG(uint64 _state) { state = _state ? _state : 0xffffffff; }$/;"	f	class:cv::RNG
RNG_MT19937	opencv2/core.hpp	/^class CV_EXPORTS RNG_MT19937$/;"	c	namespace:cv
ROTATE_180	opencv2/core.hpp	/^    ROTATE_180 = 1, \/\/Rotate 180 degrees clockwise$/;"	e	enum:cv::RotateFlags
ROTATE_90_CLOCKWISE	opencv2/core.hpp	/^    ROTATE_90_CLOCKWISE = 0, \/\/Rotate 90 degrees clockwise$/;"	e	enum:cv::RotateFlags
ROTATE_90_COUNTERCLOCKWISE	opencv2/core.hpp	/^    ROTATE_90_COUNTERCLOCKWISE = 2, \/\/Rotate 270 degrees clockwise$/;"	e	enum:cv::RotateFlags
ROWS_COUNT	opencv2/cudafeatures2d.hpp	/^        ROWS_COUNT$/;"	e	enum:cv::cuda::ORB::__anon92
ROWS_COUNT	opencv2/cudafeatures2d.hpp	/^        ROWS_COUNT,$/;"	e	enum:cv::cuda::FastFeatureDetector::__anon91
ROW_SAMPLE	opencv2/ml.hpp	/^    ROW_SAMPLE = 0, \/\/!< each training sample is a row of samples$/;"	e	enum:cv::ml::SampleTypes
RPROP	opencv2/ml.hpp	/^        RPROP=1 \/\/!< The RPROP algorithm. See @cite RPROP93 for details.$/;"	e	enum:cv::ml::ANN_MLP::TrainingMethods
RTrees	opencv2/ml.hpp	/^class CV_EXPORTS_W RTrees : public DTrees$/;"	c	namespace:cv::ml
RadiusResultSet	opencv2/flann/result_set.h	/^    RadiusResultSet(DistanceType radius_, int* indices_, DistanceType* dists_, int capacity_) :$/;"	f	class:cvflann::RadiusResultSet
RadiusResultSet	opencv2/flann/result_set.h	/^class RadiusResultSet : public ResultSet<DistanceType>$/;"	c	namespace:cvflann
RadiusUniqueResultSet	opencv2/flann/result_set.h	/^    RadiusUniqueResultSet(DistanceType radius) :$/;"	f	class:cvflann::RadiusUniqueResultSet
RadiusUniqueResultSet	opencv2/flann/result_set.h	/^class RadiusUniqueResultSet : public UniqueResultSet<DistanceType>$/;"	c	namespace:cvflann
Range	opencv2/core/base.hpp	/^class CV_EXPORTS Range;$/;"	m	namespace:cv	typeref:class:cv::CV_EXPORTS
Range	opencv2/core/types.hpp	/^Range::Range()$/;"	f	class:cv::Range
Range	opencv2/core/types.hpp	/^Range::Range(int _start, int _end)$/;"	f	class:cv::Range
Range	opencv2/core/types.hpp	/^class CV_EXPORTS Range$/;"	c	namespace:cv
RansacParams	opencv2/videostab/motion_core.hpp	/^    RansacParams() : size(0), thresh(0), eps(0), prob(0) {}$/;"	f	struct:cv::videostab::RansacParams
RansacParams	opencv2/videostab/motion_core.hpp	/^inline RansacParams::RansacParams(int _size, float _thresh, float _eps, float _prob)$/;"	f	class:cv::videostab::RansacParams
RansacParams	opencv2/videostab/motion_core.hpp	/^struct CV_EXPORTS RansacParams$/;"	s	namespace:cv::videostab
RawVideoSource	opencv2/cudacodec.hpp	/^class CV_EXPORTS RawVideoSource$/;"	c	namespace:cv::cudacodec
ReadOnly	opencv2/core/ocl.hpp	/^    static KernelArg ReadOnly(const UMat& m, int wscale=1, int iwscale=1)$/;"	f	class:cv::ocl::KernelArg
ReadOnlyNoSize	opencv2/core/ocl.hpp	/^    static KernelArg ReadOnlyNoSize(const UMat& m, int wscale=1, int iwscale=1)$/;"	f	class:cv::ocl::KernelArg
ReadWrite	opencv2/core/ocl.hpp	/^    static KernelArg ReadWrite(const UMat& m, int wscale=1, int iwscale=1)$/;"	f	class:cv::ocl::KernelArg
ReadWriteNoSize	opencv2/core/ocl.hpp	/^    static KernelArg ReadWriteNoSize(const UMat& m, int wscale=1, int iwscale=1)$/;"	f	class:cv::ocl::KernelArg
Rect	opencv2/core/types.hpp	/^typedef Rect2i Rect;$/;"	t	namespace:cv
Rect2d	opencv2/core/types.hpp	/^typedef Rect_<double> Rect2d;$/;"	t	namespace:cv
Rect2f	opencv2/core/types.hpp	/^typedef Rect_<float> Rect2f;$/;"	t	namespace:cv
Rect2i	opencv2/core/types.hpp	/^typedef Rect_<int> Rect2i;$/;"	t	namespace:cv
Rect_	opencv2/core/types.hpp	/^Rect_<_Tp>::Rect_()$/;"	f	class:cv::Rect_
Rect_	opencv2/core/types.hpp	/^Rect_<_Tp>::Rect_(_Tp _x, _Tp _y, _Tp _width, _Tp _height)$/;"	f	class:cv::Rect_
Rect_	opencv2/core/types.hpp	/^Rect_<_Tp>::Rect_(const Point_<_Tp>& org, const Size_<_Tp>& sz)$/;"	f	class:cv::Rect_
Rect_	opencv2/core/types.hpp	/^Rect_<_Tp>::Rect_(const Point_<_Tp>& pt1, const Point_<_Tp>& pt2)$/;"	f	class:cv::Rect_
Rect_	opencv2/core/types.hpp	/^Rect_<_Tp>::Rect_(const Rect_<_Tp>& r)$/;"	f	class:cv::Rect_
Rect_	opencv2/core/types.hpp	/^template<typename _Tp> class Rect_$/;"	c	namespace:cv
RectanglesIntersectTypes	opencv2/imgproc.hpp	/^enum RectanglesIntersectTypes {$/;"	g	namespace:cv
Reduce	opencv2/cudev/grid/detail/reduce_to_column.hpp	/^    template <int BLOCK_SIZE, typename work_type, typename work_elem_type, class Reductor> struct Reduce<BLOCK_SIZE, work_type, work_elem_type, Reductor, 1>$/;"	s	namespace:cv::cudev::grid_reduce_to_vec_detail
Reduce	opencv2/cudev/grid/detail/reduce_to_column.hpp	/^    template <int BLOCK_SIZE, typename work_type, typename work_elem_type, class Reductor> struct Reduce<BLOCK_SIZE, work_type, work_elem_type, Reductor, 2>$/;"	s	namespace:cv::cudev::grid_reduce_to_vec_detail
Reduce	opencv2/cudev/grid/detail/reduce_to_column.hpp	/^    template <int BLOCK_SIZE, typename work_type, typename work_elem_type, class Reductor> struct Reduce<BLOCK_SIZE, work_type, work_elem_type, Reductor, 3>$/;"	s	namespace:cv::cudev::grid_reduce_to_vec_detail
Reduce	opencv2/cudev/grid/detail/reduce_to_column.hpp	/^    template <int BLOCK_SIZE, typename work_type, typename work_elem_type, class Reductor> struct Reduce<BLOCK_SIZE, work_type, work_elem_type, Reductor, 4>$/;"	s	namespace:cv::cudev::grid_reduce_to_vec_detail
ReduceToColumnBody	opencv2/cudev/expr/reduction.hpp	/^template <class Reductor, class SrcPtr> struct ReduceToColumnBody$/;"	s	namespace:cv::cudev
ReduceToRowBody	opencv2/cudev/expr/reduction.hpp	/^template <class Reductor, class SrcPtr> struct ReduceToRowBody$/;"	s	namespace:cv::cudev
ReduceTypes	opencv2/core.hpp	/^enum ReduceTypes { REDUCE_SUM = 0, \/\/!< the output is the sum of all rows\/columns of the matrix.$/;"	g	namespace:cv
RefOrVoid	opencv2/core/cvstd.hpp	/^struct RefOrVoid { typedef T& type; };$/;"	s	namespace:cv::detail
RefOrVoid	opencv2/core/cvstd.hpp	/^struct RefOrVoid<const void>{ typedef const void type; };$/;"	s	namespace:cv::detail
RefOrVoid	opencv2/core/cvstd.hpp	/^struct RefOrVoid<const volatile void>{ typedef const volatile void type; };$/;"	s	namespace:cv::detail
RefOrVoid	opencv2/core/cvstd.hpp	/^struct RefOrVoid<void>{ typedef void type; };$/;"	s	namespace:cv::detail
RefOrVoid	opencv2/core/cvstd.hpp	/^struct RefOrVoid<volatile void>{ typedef volatile void type; };$/;"	s	namespace:cv::detail
ReferenceTraits	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <class U> struct ReferenceTraits$/;"	s	namespace:cv::cuda::device::type_traits_detail
ReferenceTraits	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <class U> struct ReferenceTraits<U&>$/;"	s	namespace:cv::cuda::device::type_traits_detail
ReferenceTraits	opencv2/cudev/util/detail/type_traits.hpp	/^    template <class U> struct ReferenceTraits$/;"	s	namespace:cv::cudev::type_traits_detail
ReferenceTraits	opencv2/cudev/util/detail/type_traits.hpp	/^    template <class U> struct ReferenceTraits<U&>$/;"	s	namespace:cv::cudev::type_traits_detail
ReferredType	opencv2/core/cuda/type_traits.hpp	/^        typedef typename type_traits_detail::ReferenceTraits<T>::type                                        ReferredType;$/;"	t	struct:cv::cuda::device::TypeTraits
ReflectUtil	5/sun/reflect/misc/ReflectUtil.h	/^class sun::reflect::misc::ReflectUtil : public ::java::lang::Object$/;"	c	class:sun::reflect::misc
Reflection	5/sun/reflect/Reflection.h	/^class sun::reflect::Reflection : public ::java::lang::Object$/;"	c	class:sun::reflect
RegKinds	opencv2/ml.hpp	/^    enum RegKinds {$/;"	g	class:cv::ml::LogisticRegression
Release	opencv2/core/private.hpp	/^    void Release() { if(m_pBuffer) ippFree(m_pBuffer); }$/;"	f	class:IppAutoBuffer
ReleaseImage	opencv2/core/wimage.hpp	/^    void ReleaseImage() {$/;"	f	class:cv::WImageBuffer
ReleaseImage	opencv2/core/wimage.hpp	/^    void ReleaseImage() {$/;"	f	class:cv::WImageBufferC
RemapPtr1	opencv2/cudev/ptr2d/remap.hpp	/^template <class SrcPtr, class MapPtr> struct RemapPtr1$/;"	s	namespace:cv::cudev
RemapPtr1Sz	opencv2/cudev/ptr2d/remap.hpp	/^template <class SrcPtr, class MapPtr> struct RemapPtr1Sz : RemapPtr1<SrcPtr, MapPtr>$/;"	s	namespace:cv::cudev
RemapPtr2	opencv2/cudev/ptr2d/remap.hpp	/^template <class SrcPtr, class MapXPtr, class MapYPtr> struct RemapPtr2$/;"	s	namespace:cv::cudev
RemapPtr2Sz	opencv2/cudev/ptr2d/remap.hpp	/^template <class SrcPtr, class MapXPtr, class MapYPtr> struct RemapPtr2Sz : RemapPtr2<SrcPtr, MapXPtr, MapYPtr>$/;"	s	namespace:cv::cudev
RenderModes	opencv2/core/opengl.hpp	/^enum RenderModes {$/;"	g	namespace:cv::ogl
ResizePtr	opencv2/cudev/ptr2d/resize.hpp	/^template <class SrcPtr> struct ResizePtr$/;"	s	namespace:cv::cudev
ResizePtrSz	opencv2/cudev/ptr2d/resize.hpp	/^template <class SrcPtr> struct ResizePtrSz : ResizePtr<SrcPtr>$/;"	s	namespace:cv::cudev
ResultSet	opencv2/flann/result_set.h	/^class ResultSet$/;"	c	namespace:cvflann
ResultType	opencv2/core/base.hpp	/^    typedef int ResultType;$/;"	t	struct:cv::Hamming
ResultType	opencv2/features2d.hpp	/^    typedef typename Accumulator<T>::Type ResultType;$/;"	t	struct:cv::L1
ResultType	opencv2/features2d.hpp	/^    typedef typename Accumulator<T>::Type ResultType;$/;"	t	struct:cv::L2
ResultType	opencv2/features2d.hpp	/^    typedef typename Accumulator<T>::Type ResultType;$/;"	t	struct:cv::SL2
ResultType	opencv2/flann/dist.h	/^    typedef int ResultType;$/;"	t	struct:cvflann::Hamming
ResultType	opencv2/flann/dist.h	/^    typedef int ResultType;$/;"	t	struct:cvflann::Hamming2
ResultType	opencv2/flann/dist.h	/^    typedef int ResultType;$/;"	t	struct:cvflann::HammingLUT
ResultType	opencv2/flann/dist.h	/^    typedef typename Accumulator<T>::Type ResultType;$/;"	t	struct:cvflann::ChiSquareDistance
ResultType	opencv2/flann/dist.h	/^    typedef typename Accumulator<T>::Type ResultType;$/;"	t	struct:cvflann::HellingerDistance
ResultType	opencv2/flann/dist.h	/^    typedef typename Accumulator<T>::Type ResultType;$/;"	t	struct:cvflann::HistIntersectionDistance
ResultType	opencv2/flann/dist.h	/^    typedef typename Accumulator<T>::Type ResultType;$/;"	t	struct:cvflann::KL_Divergence
ResultType	opencv2/flann/dist.h	/^    typedef typename Accumulator<T>::Type ResultType;$/;"	t	struct:cvflann::L1
ResultType	opencv2/flann/dist.h	/^    typedef typename Accumulator<T>::Type ResultType;$/;"	t	struct:cvflann::L2
ResultType	opencv2/flann/dist.h	/^    typedef typename Accumulator<T>::Type ResultType;$/;"	t	struct:cvflann::L2_Simple
ResultType	opencv2/flann/dist.h	/^    typedef typename Accumulator<T>::Type ResultType;$/;"	t	struct:cvflann::MaxDistance
ResultType	opencv2/flann/dist.h	/^    typedef typename Accumulator<T>::Type ResultType;$/;"	t	struct:cvflann::MinkowskiDistance
ResultType	opencv2/flann/dist.h	/^    typedef typename ChiSquareDistance<ElementType>::ResultType ResultType;$/;"	t	struct:cvflann::simpleDistance
ResultType	opencv2/flann/dist.h	/^    typedef typename ChiSquareDistance<ElementType>::ResultType ResultType;$/;"	t	struct:cvflann::squareDistance
ResultType	opencv2/flann/dist.h	/^    typedef typename Distance::ResultType ResultType;$/;"	t	struct:cvflann::simpleDistance
ResultType	opencv2/flann/dist.h	/^    typedef typename Distance::ResultType ResultType;$/;"	t	struct:cvflann::squareDistance
ResultType	opencv2/flann/dist.h	/^    typedef typename HellingerDistance<ElementType>::ResultType ResultType;$/;"	t	struct:cvflann::simpleDistance
ResultType	opencv2/flann/dist.h	/^    typedef typename HellingerDistance<ElementType>::ResultType ResultType;$/;"	t	struct:cvflann::squareDistance
ResultType	opencv2/flann/dist.h	/^    typedef typename L2<ElementType>::ResultType ResultType;$/;"	t	struct:cvflann::simpleDistance
ResultType	opencv2/flann/dist.h	/^    typedef typename L2<ElementType>::ResultType ResultType;$/;"	t	struct:cvflann::squareDistance
ResultType	opencv2/flann/dist.h	/^    typedef typename L2_Simple<ElementType>::ResultType ResultType;$/;"	t	struct:cvflann::simpleDistance
ResultType	opencv2/flann/dist.h	/^    typedef typename L2_Simple<ElementType>::ResultType ResultType;$/;"	t	struct:cvflann::squareDistance
ResultType	opencv2/flann/dist.h	/^    typedef typename MinkowskiDistance<ElementType>::ResultType ResultType;$/;"	t	struct:cvflann::simpleDistance
ResultType	opencv2/flann/dist.h	/^    typedef typename MinkowskiDistance<ElementType>::ResultType ResultType;$/;"	t	struct:cvflann::squareDistance
RetrievalModes	opencv2/imgproc.hpp	/^enum RetrievalModes {$/;"	g	namespace:cv
RotateFlags	opencv2/core.hpp	/^enum RotateFlags {$/;"	g	namespace:cv
RotatedRect	opencv2/core/base.hpp	/^class CV_EXPORTS RotatedRect;$/;"	m	namespace:cv	typeref:class:cv::CV_EXPORTS
RotatedRect	opencv2/core/types.hpp	/^RotatedRect::RotatedRect()$/;"	f	class:cv::RotatedRect
RotatedRect	opencv2/core/types.hpp	/^RotatedRect::RotatedRect(const Point2f& _center, const Size2f& _size, float _angle)$/;"	f	class:cv::RotatedRect
RotatedRect	opencv2/core/types.hpp	/^class CV_EXPORTS RotatedRect$/;"	c	namespace:cv
RotationWarper	opencv2/stitching/detail/warpers.hpp	/^class CV_EXPORTS RotationWarper$/;"	c	namespace:cv::detail
RotationWarperBase	opencv2/stitching/detail/warpers.hpp	/^class CV_EXPORTS RotationWarperBase : public RotationWarper$/;"	c	namespace:cv::detail
Row	opencv2/core/wimage.hpp	/^    inline T* Row(int r) {$/;"	f	class:cv::WImage
Row	opencv2/core/wimage.hpp	/^    inline const T* Row(int r) const {$/;"	f	class:cv::WImage
SADWindowSize	opencv2/calib3d/calib3d_c.h	/^    int SADWindowSize; \/\/ ~5x5..21x21$/;"	m	struct:CvStereoBMState
SAMPLE_MEAN	opencv2/flann/kdtree_index.h	/^        SAMPLE_MEAN = 100,$/;"	e	enum:cvflann::KDTreeIndex::__anon115
SAMPLING	5/parallel/types.h	/^      SAMPLING, $/;"	e	enum:__gnu_parallel::_SplittingAlgorithm
SAVED	opencv2/flann/defines.h	/^    SAVED = 254,$/;"	e	enum:cvflann::flann_algorithm_t
SCANS	opencv2/stitching.hpp	/^        SCANS = 1,$/;"	e	enum:cv::Stitcher::Mode
SECOND	opencv2/stitching/detail/seam_finders.hpp	/^        FIRST = 1, SECOND = 2, INTERS = 4,$/;"	e	enum:cv::detail::DpSeamFinder::ComponentState
SEQ	opencv2/core/persistence.hpp	/^        SEQ       = 5, \/\/!< sequence$/;"	e	enum:cv::FileNode::Type
SF_BGR	opencv2/cudacodec.hpp	/^    SF_BGR,$/;"	e	enum:cv::cudacodec::SurfaceFormat
SF_GRAY	opencv2/cudacodec.hpp	/^    SF_GRAY = SF_BGR$/;"	e	enum:cv::cudacodec::SurfaceFormat
SF_IYUV	opencv2/cudacodec.hpp	/^    SF_IYUV,$/;"	e	enum:cv::cudacodec::SurfaceFormat
SF_NV12	opencv2/cudacodec.hpp	/^    SF_NV12,$/;"	e	enum:cv::cudacodec::SurfaceFormat
SF_UYVY	opencv2/cudacodec.hpp	/^    SF_UYVY = 0,$/;"	e	enum:cv::cudacodec::SurfaceFormat
SF_YUY2	opencv2/cudacodec.hpp	/^    SF_YUY2,$/;"	e	enum:cv::cudacodec::SurfaceFormat
SF_YV12	opencv2/cudacodec.hpp	/^    SF_YV12,$/;"	e	enum:cv::cudacodec::SurfaceFormat
SGD	opencv2/ml.hpp	/^        SGD, \/\/!< Stochastic Gradient Descent$/;"	e	enum:cv::ml::SVMSGD::SvmsgdType
SHARED	opencv2/core/cuda.hpp	/^    enum AllocType { PAGE_LOCKED = 1, SHARED = 2, WRITE_COMBINED = 4 };$/;"	e	enum:cv::cuda::HostMem::AllocType
SHARED_ATOMICS	opencv2/core/cuda.hpp	/^    SHARED_ATOMICS = FEATURE_SET_COMPUTE_12,$/;"	e	enum:cv::cuda::FeatureSet
SIGMOID	opencv2/ml.hpp	/^        SIGMOID=3,$/;"	e	enum:cv::ml::SVM::KernelTypes
SIGMOID_SYM	opencv2/ml.hpp	/^        SIGMOID_SYM = 1,$/;"	e	enum:cv::ml::ANN_MLP::ActivationFunctions
SIZE_ROW	opencv2/cudafeatures2d.hpp	/^        SIZE_ROW,$/;"	e	enum:cv::cuda::ORB::__anon92
SL2	opencv2/features2d.hpp	/^struct CV_EXPORTS SL2$/;"	s	namespace:cv
SMALL_POLICY	opencv2/flann/any.h	141;"	d
SMALL_POLICY	opencv2/flann/any.h	157;"	d
SOFT_MARGIN	opencv2/ml.hpp	/^        SOFT_MARGIN, \/\/!< General case, suits to the case of non-linearly separable sets, allows outliers.$/;"	e	enum:cv::ml::SVMSGD::MarginType
SOLVELP_MULTI	opencv2/core/optim.hpp	/^    SOLVELP_MULTI    = 1 \/\/!< there are multiple maxima for target function - the arbitrary one is returned$/;"	e	enum:cv::SolveLPResult
SOLVELP_SINGLE	opencv2/core/optim.hpp	/^    SOLVELP_SINGLE    = 0, \/\/!< there is only one maximum for target function$/;"	e	enum:cv::SolveLPResult
SOLVELP_UNBOUNDED	opencv2/core/optim.hpp	/^    SOLVELP_UNBOUNDED    = -2, \/\/!< problem is unbounded (target function can achieve arbitrary high values)$/;"	e	enum:cv::SolveLPResult
SOLVELP_UNFEASIBLE	opencv2/core/optim.hpp	/^    SOLVELP_UNFEASIBLE    = -1, \/\/!< problem is unfeasible (there are no points that satisfy all the constraints imposed)$/;"	e	enum:cv::SolveLPResult
SOLVEPNP_DLS	opencv2/calib3d.hpp	/^       SOLVEPNP_DLS       = 3, \/\/!< A Direct Least-Squares (DLS) Method for PnP  @cite hesch2011direct$/;"	e	enum:cv::__anon97
SOLVEPNP_EPNP	opencv2/calib3d.hpp	/^       SOLVEPNP_EPNP      = 1, \/\/!< EPnP: Efficient Perspective-n-Point Camera Pose Estimation @cite lepetit2009epnp$/;"	e	enum:cv::__anon97
SOLVEPNP_ITERATIVE	opencv2/calib3d.hpp	/^enum { SOLVEPNP_ITERATIVE = 0,$/;"	e	enum:cv::__anon97
SOLVEPNP_P3P	opencv2/calib3d.hpp	/^       SOLVEPNP_P3P       = 2, \/\/!< Complete Solution Classification for the Perspective-Three-Point Problem @cite gao2003complete$/;"	e	enum:cv::__anon97
SOLVEPNP_UPNP	opencv2/calib3d.hpp	/^       SOLVEPNP_UPNP      = 4  \/\/!< Exhaustive Linearization for Robust Camera Pose and Focal Length Estimation @cite penate2013exhaustive$/;"	e	enum:cv::__anon97
SORT_ASCENDING	opencv2/core.hpp	/^                 SORT_ASCENDING    = 0, \/\/!< each matrix row is sorted in the ascending$/;"	e	enum:cv::SortFlags
SORT_DESCENDING	opencv2/core.hpp	/^                 SORT_DESCENDING   = 16 \/\/!< each matrix row is sorted in the$/;"	e	enum:cv::SortFlags
SORT_EVERY_COLUMN	opencv2/core.hpp	/^                 SORT_EVERY_COLUMN = 1, \/\/!< each matrix column is sorted$/;"	e	enum:cv::SortFlags
SORT_EVERY_ROW	opencv2/core.hpp	/^enum SortFlags { SORT_EVERY_ROW    = 0, \/\/!< each matrix row is sorted independently$/;"	e	enum:cv::SortFlags
SQR	opencv2/cudalegacy/NCV.hpp	1023;"	d
STARTED	opencv2/calib3d/calib3d_c.h	/^    enum { DONE=0, STARTED=1, CALC_J=2, CHECK_ERR=3 };$/;"	e	enum:CvLevMarq::__anon339
START_AUTO_STEP	opencv2/ml.hpp	/^    enum {START_E_STEP=1, START_M_STEP=2, START_AUTO_STEP=0};$/;"	e	enum:cv::ml::EM::__anon341
START_E_STEP	opencv2/ml.hpp	/^    enum {START_E_STEP=1, START_M_STEP=2, START_AUTO_STEP=0};$/;"	e	enum:cv::ml::EM::__anon341
START_M_STEP	opencv2/ml.hpp	/^    enum {START_E_STEP=1, START_M_STEP=2, START_AUTO_STEP=0};$/;"	e	enum:cv::ml::EM::__anon341
STD_BOOL_VECTOR	opencv2/core/mat.hpp	/^        STD_BOOL_VECTOR   =12 << KIND_SHIFT,$/;"	e	enum:cv::_InputArray::__anon273
STD_VECTOR	opencv2/core/mat.hpp	/^        STD_VECTOR        = 3 << KIND_SHIFT,$/;"	e	enum:cv::_InputArray::__anon273
STD_VECTOR_CUDA_GPU_MAT	opencv2/core/mat.hpp	/^        STD_VECTOR_CUDA_GPU_MAT = 13 << KIND_SHIFT$/;"	e	enum:cv::_InputArray::__anon273
STD_VECTOR_MAT	opencv2/core/mat.hpp	/^        STD_VECTOR_MAT    = 5 << KIND_SHIFT,$/;"	e	enum:cv::_InputArray::__anon273
STD_VECTOR_UMAT	opencv2/core/mat.hpp	/^        STD_VECTOR_UMAT   =11 << KIND_SHIFT,$/;"	e	enum:cv::_InputArray::__anon273
STD_VECTOR_VECTOR	opencv2/core/mat.hpp	/^        STD_VECTOR_VECTOR = 4 << KIND_SHIFT,$/;"	e	enum:cv::_InputArray::__anon273
STR	opencv2/core/persistence.hpp	/^        STR       = 3, \/\/!< text string in UTF-8 encoding$/;"	e	enum:cv::FileNode::Type
STRIDE	opencv2/core/cuda/warp.hpp	/^            STRIDE        = WARP_SIZE$/;"	e	enum:cv::cuda::device::Warp::__anon260
STRING	opencv2/core.hpp	/^    enum { INT=0, BOOLEAN=1, REAL=2, STRING=3, MAT=4, MAT_VECTOR=5, ALGORITHM=6, FLOAT=7,$/;"	e	enum:cv::Param::__anon344
STRING	opencv2/core/persistence.hpp	/^        STRING    = STR, \/\/!< synonym for STR$/;"	e	enum:cv::FileNode::Type
SUBMATRIX_FLAG	opencv2/core/mat.hpp	/^    enum { MAGIC_VAL  = 0x42FF0000, AUTO_STEP = 0, CONTINUOUS_FLAG = CV_MAT_CONT_FLAG, SUBMATRIX_FLAG = CV_SUBMAT_FLAG };$/;"	e	enum:cv::Mat::__anon276
SUBMATRIX_FLAG	opencv2/core/mat.hpp	/^    enum { MAGIC_VAL  = 0x42FF0000, AUTO_STEP = 0, CONTINUOUS_FLAG = CV_MAT_CONT_FLAG, SUBMATRIX_FLAG = CV_SUBMAT_FLAG };$/;"	e	enum:cv::UMat::__anon278
SUB_BEGIN	opencv2/cudalegacy/NCV.hpp	1019;"	d
SUB_CALL	opencv2/cudalegacy/NCV.hpp	1021;"	d
SUB_END	opencv2/cudalegacy/NCV.hpp	1020;"	d
SVD	opencv2/core.hpp	/^class CV_EXPORTS SVD$/;"	c	namespace:cv
SVD	opencv2/core/operations.hpp	/^inline SVD::SVD( InputArray m, int flags ) { operator ()(m, flags); }$/;"	f	class:cv::SVD
SVD	opencv2/core/operations.hpp	/^inline SVD::SVD() {}$/;"	f	class:cv::SVD
SVM	opencv2/ml.hpp	/^class CV_EXPORTS_W SVM : public StatModel$/;"	c	namespace:cv::ml
SVMSGD	opencv2/ml.hpp	/^class CV_EXPORTS_W SVMSGD : public cv::ml::StatModel$/;"	c	namespace:cv::ml
SampleTypes	opencv2/ml.hpp	/^enum SampleTypes$/;"	g	namespace:cv::ml
SatCastHelper	opencv2/core/cuda/vec_math.hpp	/^    template <typename VecD> struct SatCastHelper<1, VecD>$/;"	s	namespace:cv::cuda::device::vec_math_detail
SatCastHelper	opencv2/core/cuda/vec_math.hpp	/^    template <typename VecD> struct SatCastHelper<2, VecD>$/;"	s	namespace:cv::cuda::device::vec_math_detail
SatCastHelper	opencv2/core/cuda/vec_math.hpp	/^    template <typename VecD> struct SatCastHelper<3, VecD>$/;"	s	namespace:cv::cuda::device::vec_math_detail
SatCastHelper	opencv2/core/cuda/vec_math.hpp	/^    template <typename VecD> struct SatCastHelper<4, VecD>$/;"	s	namespace:cv::cuda::device::vec_math_detail
SatCastHelper	opencv2/cudev/util/vec_math.hpp	/^    template <typename VecD> struct SatCastHelper<1, VecD>$/;"	s	namespace:cv::cudev::vec_math_detail
SatCastHelper	opencv2/cudev/util/vec_math.hpp	/^    template <typename VecD> struct SatCastHelper<2, VecD>$/;"	s	namespace:cv::cudev::vec_math_detail
SatCastHelper	opencv2/cudev/util/vec_math.hpp	/^    template <typename VecD> struct SatCastHelper<3, VecD>$/;"	s	namespace:cv::cudev::vec_math_detail
SatCastHelper	opencv2/cudev/util/vec_math.hpp	/^    template <typename VecD> struct SatCastHelper<4, VecD>$/;"	s	namespace:cv::cudev::vec_math_detail
SavedIndexParams	opencv2/flann/flann_base.hpp	/^    SavedIndexParams(cv::String filename)$/;"	f	struct:cvflann::SavedIndexParams
SavedIndexParams	opencv2/flann/flann_base.hpp	/^struct SavedIndexParams : public IndexParams$/;"	s	namespace:cvflann
SavedIndexParams	opencv2/flann/miniflann.hpp	/^struct CV_EXPORTS SavedIndexParams : public IndexParams$/;"	s	namespace:cv::flann
Scalar	opencv2/core/types.hpp	/^typedef Scalar_<double> Scalar;$/;"	t	namespace:cv
Scalar_	opencv2/core/types.hpp	/^Scalar_<_Tp>::Scalar_()$/;"	f	class:cv::Scalar_
Scalar_	opencv2/core/types.hpp	/^Scalar_<_Tp>::Scalar_(_Tp v0)$/;"	f	class:cv::Scalar_
Scalar_	opencv2/core/types.hpp	/^Scalar_<_Tp>::Scalar_(_Tp v0, _Tp v1, _Tp v2, _Tp v3)$/;"	f	class:cv::Scalar_
Scalar_	opencv2/core/types.hpp	/^Scalar_<_Tp>::Scalar_(const Vec<_Tp2, cn>& v)$/;"	f	class:cv::Scalar_
Scalar_	opencv2/core/types.hpp	/^template<typename _Tp> class Scalar_ : public Vec<_Tp, 4>$/;"	c	namespace:cv
ScanKind	opencv2/core/cuda/scan.hpp	/^    enum ScanKind { EXCLUSIVE = 0,  INCLUSIVE = 1 };$/;"	g	namespace:cv::cuda::device
ScharrXPtr	opencv2/cudev/ptr2d/deriv.hpp	/^template <class SrcPtr> struct ScharrXPtr$/;"	s	namespace:cv::cudev
ScharrXPtrSz	opencv2/cudev/ptr2d/deriv.hpp	/^template <class SrcPtr> struct ScharrXPtrSz : ScharrXPtr<SrcPtr>$/;"	s	namespace:cv::cudev
ScharrYPtr	opencv2/cudev/ptr2d/deriv.hpp	/^template <class SrcPtr> struct ScharrYPtr$/;"	s	namespace:cv::cudev
ScharrYPtrSz	opencv2/cudev/ptr2d/deriv.hpp	/^template <class SrcPtr> struct ScharrYPtrSz : ScharrYPtr<SrcPtr>$/;"	s	namespace:cv::cudev
ScoreIndexPair	opencv2/flann/lsh_index.h	/^    typedef std::pair<float, unsigned int> ScoreIndexPair;$/;"	t	class:cvflann::LshIndex
SeamFinder	opencv2/stitching/detail/seam_finders.hpp	/^class CV_EXPORTS SeamFinder$/;"	c	namespace:cv::detail
SearchParams	opencv2/flann/miniflann.hpp	/^struct CV_EXPORTS SearchParams : public IndexParams$/;"	s	namespace:cv::flann
SearchParams	opencv2/flann/params.h	/^    SearchParams(int checks = 32, float eps = 0, bool sorted = true )$/;"	f	struct:cvflann::SearchParams
SearchParams	opencv2/flann/params.h	/^struct SearchParams : public IndexParams$/;"	s	namespace:cvflann
Select	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <bool, typename T1, typename T2> struct Select { typedef T1 type; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
Select	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <typename T1, typename T2> struct Select<false, T1, T2> { typedef T2 type; };$/;"	s	namespace:cv::cuda::device::type_traits_detail
SelectIf	opencv2/cudev/util/detail/type_traits.hpp	/^        typedef typename SelectIf<sizeof(A) >= sizeof(B), A, B>::type type;$/;"	t	struct:cv::cudev::type_traits_detail::LargerDepth
SelectIf	opencv2/cudev/util/detail/type_traits.hpp	/^    template <bool, typename ThenType, typename ElseType> struct SelectIf$/;"	s	namespace:cv::cudev::type_traits_detail
SelectIf	opencv2/cudev/util/detail/type_traits.hpp	/^    template <typename ThenType, typename ElseType> struct SelectIf<false, ThenType, ElseType>$/;"	s	namespace:cv::cudev::type_traits_detail
SelectIf	opencv2/cudev/util/type_traits.hpp	/^template <bool, typename ThenType, typename ElseType> struct SelectIf$/;"	s	namespace:cv::cudev
SelectIf	opencv2/cudev/util/type_traits.hpp	/^template <typename ThenType, typename ElseType> struct SelectIf<false, ThenType, ElseType>$/;"	s	namespace:cv::cudev
SepFilter2D	opencv2/imgproc/hal/hal.hpp	/^struct CV_EXPORTS SepFilter2D$/;"	s	namespace:cv::hal
Seq	opencv2/core/core_c.h	/^template<typename _Tp> class Seq$/;"	c	namespace:cv
Seq	opencv2/core/core_c.h	/^template<typename _Tp> inline Seq<_Tp>::Seq( MemStorage& storage,$/;"	f	class:cv::Seq
Seq	opencv2/core/core_c.h	/^template<typename _Tp> inline Seq<_Tp>::Seq( const CvSeq* _seq ) : seq((CvSeq*)_seq)$/;"	f	class:cv::Seq
Seq	opencv2/core/core_c.h	/^template<typename _Tp> inline Seq<_Tp>::Seq() : seq(0) {}$/;"	f	class:cv::Seq
SeqIterator	opencv2/core/core_c.h	/^template<typename _Tp> class SeqIterator : public CvSeqReader$/;"	c	namespace:cv
SeqIterator	opencv2/core/core_c.h	/^template<typename _Tp> inline SeqIterator<_Tp>::SeqIterator()$/;"	f	class:cv::SeqIterator
SeqIterator	opencv2/core/core_c.h	/^template<typename _Tp> inline SeqIterator<_Tp>::SeqIterator(const Seq<_Tp>& _seq, bool seekEnd)$/;"	f	class:cv::SeqIterator
SeqReader	opencv2/core/persistence.hpp	/^    struct SeqReader$/;"	s	class:cv::FileNodeIterator
Service	5/sun/misc/Service.h	/^class sun::misc::Service : public ::java::lang::Object$/;"	c	class:sun::misc
ServiceConfigurationError	5/sun/misc/ServiceConfigurationError.h	/^class sun::misc::ServiceConfigurationError : public ::java::lang::Error$/;"	c	class:sun::misc
SetIpl	opencv2/core/wimage.hpp	/^    void SetIpl(IplImage* image) {$/;"	f	class:cv::WImage
SetIpl	opencv2/core/wimage.hpp	/^    void SetIpl(IplImage* image) {$/;"	f	class:cv::WImageC
SetIpl	opencv2/core/wimage.hpp	/^    void SetIpl(IplImage* img) {$/;"	f	class:cv::WImageBuffer
SetIpl	opencv2/core/wimage.hpp	/^    void SetIpl(IplImage* img) {$/;"	f	class:cv::WImageBufferC
SetZero	opencv2/core/wimage.hpp	/^    void SetZero() { cvSetZero(image_); }$/;"	f	class:cv::WImage
ShapeContextDistanceExtractor	opencv2/shape/shape_distance.hpp	/^class CV_EXPORTS_W ShapeContextDistanceExtractor : public ShapeDistanceExtractor$/;"	c	namespace:cv
ShapeDistanceExtractor	opencv2/shape/shape_distance.hpp	/^class CV_EXPORTS_W ShapeDistanceExtractor : public Algorithm$/;"	c	namespace:cv
ShapeMatchModes	opencv2/imgproc/types_c.h	/^enum ShapeMatchModes$/;"	g
ShapeTransformer	opencv2/shape/shape_transformer.hpp	/^class CV_EXPORTS_W ShapeTransformer : public Algorithm$/;"	c	namespace:cv
ShiftDispatcher	opencv2/core/cuda/functional.hpp	/^        template <typename Func> struct ShiftDispatcher<Func, false>$/;"	s	namespace:cv::cuda::device::functional_detail
ShiftDispatcher	opencv2/core/cuda/functional.hpp	/^        template <typename Func> struct ShiftDispatcher<Func, true>$/;"	s	namespace:cv::cuda::device::functional_detail
SimilarRects	opencv2/objdetect.hpp	/^    SimilarRects(double _eps) : eps(_eps) {}$/;"	f	class:cv::SimilarRects
SimilarRects	opencv2/objdetect.hpp	/^class CV_EXPORTS SimilarRects$/;"	c	namespace:cv
SimpleBlobDetector	opencv2/features2d.hpp	/^class CV_EXPORTS_W SimpleBlobDetector : public Feature2D$/;"	c	namespace:cv
SingleMask	opencv2/core/cuda/utility.hpp	/^        __host__ __device__ __forceinline__ SingleMask(const SingleMask& mask_): mask(mask_.mask){}$/;"	f	struct:cv::cuda::device::SingleMask
SingleMask	opencv2/core/cuda/utility.hpp	/^        explicit __host__ __device__ __forceinline__ SingleMask(PtrStepb mask_) : mask(mask_) {}$/;"	f	struct:cv::cuda::device::SingleMask
SingleMask	opencv2/core/cuda/utility.hpp	/^    struct SingleMask$/;"	s	namespace:cv::cuda::device
SingleMaskChannels	opencv2/core/cuda/utility.hpp	/^        __host__ __device__ __forceinline__ SingleMaskChannels(PtrStepb mask_, int channels_)$/;"	f	struct:cv::cuda::device::SingleMaskChannels
SingleMaskChannels	opencv2/core/cuda/utility.hpp	/^        __host__ __device__ __forceinline__ SingleMaskChannels(const SingleMaskChannels& mask_)$/;"	f	struct:cv::cuda::device::SingleMaskChannels
SingleMaskChannels	opencv2/core/cuda/utility.hpp	/^    struct SingleMaskChannels$/;"	s	namespace:cv::cuda::device
SingleMaskChannels	opencv2/cudev/ptr2d/mask.hpp	/^template <class MaskPtr> struct SingleMaskChannels$/;"	s	namespace:cv::cudev
SingleMaskChannelsSz	opencv2/cudev/ptr2d/mask.hpp	/^template <class MaskPtr> struct SingleMaskChannelsSz : SingleMaskChannels<MaskPtr>$/;"	s	namespace:cv::cudev
SinglePolicy	opencv2/flann/any.h	/^class SinglePolicy$/;"	c	namespace:cvflann::anyimpl
Size	opencv2/core/types.hpp	/^typedef Size2i Size;$/;"	t	namespace:cv
Size2d	opencv2/core/types.hpp	/^typedef Size_<double> Size2d;$/;"	t	namespace:cv
Size2f	opencv2/core/types.hpp	/^typedef Size_<float> Size2f;$/;"	t	namespace:cv
Size2i	opencv2/core/types.hpp	/^typedef Size_<int> Size2i;$/;"	t	namespace:cv
Size2l	opencv2/core/types.hpp	/^typedef Size_<int64> Size2l;$/;"	t	namespace:cv
Size_	opencv2/core/types.hpp	/^Size_<_Tp>::Size_()$/;"	f	class:cv::Size_
Size_	opencv2/core/types.hpp	/^Size_<_Tp>::Size_(_Tp _width, _Tp _height)$/;"	f	class:cv::Size_
Size_	opencv2/core/types.hpp	/^Size_<_Tp>::Size_(const Point_<_Tp>& pt)$/;"	f	class:cv::Size_
Size_	opencv2/core/types.hpp	/^Size_<_Tp>::Size_(const Size_& sz)$/;"	f	class:cv::Size_
Size_	opencv2/core/types.hpp	/^template<typename _Tp> class Size_$/;"	c	namespace:cv
SmoothMethod_c	opencv2/imgproc/types_c.h	/^enum SmoothMethod_c$/;"	g
SobelXPtr	opencv2/cudev/ptr2d/deriv.hpp	/^template <class SrcPtr> struct SobelXPtr$/;"	s	namespace:cv::cudev
SobelXPtrSz	opencv2/cudev/ptr2d/deriv.hpp	/^template <class SrcPtr> struct SobelXPtrSz : SobelXPtr<SrcPtr>$/;"	s	namespace:cv::cudev
SobelYPtr	opencv2/cudev/ptr2d/deriv.hpp	/^template <class SrcPtr> struct SobelYPtr$/;"	s	namespace:cv::cudev
SobelYPtrSz	opencv2/cudev/ptr2d/deriv.hpp	/^template <class SrcPtr> struct SobelYPtrSz : SobelYPtr<SrcPtr>$/;"	s	namespace:cv::cudev
SolveLPResult	opencv2/core/optim.hpp	/^enum SolveLPResult$/;"	g	namespace:cv
SortFlags	opencv2/core.hpp	/^enum SortFlags { SORT_EVERY_ROW    = 0, \/\/!< each matrix row is sorted independently$/;"	g	namespace:cv
SortScoreIndexPairOnSecond	opencv2/flann/lsh_index.h	/^    struct SortScoreIndexPairOnSecond$/;"	s	class:cvflann::LshIndex
SparseMat	opencv2/core/base.hpp	/^class CV_EXPORTS SparseMat;$/;"	m	namespace:cv	typeref:class:cv::CV_EXPORTS
SparseMat	opencv2/core/mat.hpp	/^class CV_EXPORTS SparseMat$/;"	c	namespace:cv
SparseMat	opencv2/core/mat.inl.hpp	/^SparseMat::SparseMat()$/;"	f	class:cv::SparseMat
SparseMat	opencv2/core/mat.inl.hpp	/^SparseMat::SparseMat(const SparseMat& m)$/;"	f	class:cv::SparseMat
SparseMat	opencv2/core/mat.inl.hpp	/^SparseMat::SparseMat(int _dims, const int* _sizes, int _type)$/;"	f	class:cv::SparseMat
SparseMatConstIterator	opencv2/core/base.hpp	/^class CV_EXPORTS SparseMatConstIterator;$/;"	m	namespace:cv	typeref:class:cv::CV_EXPORTS
SparseMatConstIterator	opencv2/core/mat.hpp	/^class CV_EXPORTS SparseMatConstIterator$/;"	c	namespace:cv
SparseMatConstIterator	opencv2/core/mat.inl.hpp	/^SparseMatConstIterator::SparseMatConstIterator()$/;"	f	class:cv::SparseMatConstIterator
SparseMatConstIterator	opencv2/core/mat.inl.hpp	/^SparseMatConstIterator::SparseMatConstIterator(const SparseMatConstIterator& it)$/;"	f	class:cv::SparseMatConstIterator
SparseMatConstIterator_	opencv2/core/mat.hpp	/^template<typename _Tp> class SparseMatConstIterator_ : public SparseMatConstIterator$/;"	c	namespace:cv
SparseMatConstIterator_	opencv2/core/mat.inl.hpp	/^SparseMatConstIterator_<_Tp>::SparseMatConstIterator_()$/;"	f	class:cv::SparseMatConstIterator_
SparseMatConstIterator_	opencv2/core/mat.inl.hpp	/^SparseMatConstIterator_<_Tp>::SparseMatConstIterator_(const SparseMat* _m)$/;"	f	class:cv::SparseMatConstIterator_
SparseMatConstIterator_	opencv2/core/mat.inl.hpp	/^SparseMatConstIterator_<_Tp>::SparseMatConstIterator_(const SparseMatConstIterator_<_Tp>& it)$/;"	f	class:cv::SparseMatConstIterator_
SparseMatConstIterator_	opencv2/core/mat.inl.hpp	/^SparseMatConstIterator_<_Tp>::SparseMatConstIterator_(const SparseMat_<_Tp>* _m)$/;"	f	class:cv::SparseMatConstIterator_
SparseMatIterator	opencv2/core/base.hpp	/^class CV_EXPORTS SparseMatIterator;$/;"	m	namespace:cv	typeref:class:cv::CV_EXPORTS
SparseMatIterator	opencv2/core/mat.hpp	/^class CV_EXPORTS SparseMatIterator : public SparseMatConstIterator$/;"	c	namespace:cv
SparseMatIterator	opencv2/core/mat.inl.hpp	/^SparseMatIterator::SparseMatIterator()$/;"	f	class:cv::SparseMatIterator
SparseMatIterator	opencv2/core/mat.inl.hpp	/^SparseMatIterator::SparseMatIterator(SparseMat* _m)$/;"	f	class:cv::SparseMatIterator
SparseMatIterator	opencv2/core/mat.inl.hpp	/^SparseMatIterator::SparseMatIterator(const SparseMatIterator& it)$/;"	f	class:cv::SparseMatIterator
SparseMatIterator_	opencv2/core/mat.hpp	/^template<typename _Tp> class SparseMatIterator_ : public SparseMatConstIterator_<_Tp>$/;"	c	namespace:cv
SparseMatIterator_	opencv2/core/mat.inl.hpp	/^SparseMatIterator_<_Tp>::SparseMatIterator_()$/;"	f	class:cv::SparseMatIterator_
SparseMatIterator_	opencv2/core/mat.inl.hpp	/^SparseMatIterator_<_Tp>::SparseMatIterator_(SparseMat* _m)$/;"	f	class:cv::SparseMatIterator_
SparseMatIterator_	opencv2/core/mat.inl.hpp	/^SparseMatIterator_<_Tp>::SparseMatIterator_(SparseMat_<_Tp>* _m)$/;"	f	class:cv::SparseMatIterator_
SparseMatIterator_	opencv2/core/mat.inl.hpp	/^SparseMatIterator_<_Tp>::SparseMatIterator_(const SparseMatIterator_<_Tp>& it)$/;"	f	class:cv::SparseMatIterator_
SparseMat_	opencv2/core/mat.hpp	/^template<typename _Tp> class SparseMat_ : public SparseMat$/;"	c	namespace:cv
SparseMat_	opencv2/core/mat.inl.hpp	/^SparseMat_<_Tp>::SparseMat_()$/;"	f	class:cv::SparseMat_
SparseMat_	opencv2/core/mat.inl.hpp	/^SparseMat_<_Tp>::SparseMat_(const Mat& m)$/;"	f	class:cv::SparseMat_
SparseMat_	opencv2/core/mat.inl.hpp	/^SparseMat_<_Tp>::SparseMat_(const SparseMat& m)$/;"	f	class:cv::SparseMat_
SparseMat_	opencv2/core/mat.inl.hpp	/^SparseMat_<_Tp>::SparseMat_(const SparseMat_<_Tp>& m)$/;"	f	class:cv::SparseMat_
SparseMat_	opencv2/core/mat.inl.hpp	/^SparseMat_<_Tp>::SparseMat_(int _dims, const int* _sizes)$/;"	f	class:cv::SparseMat_
SparseOpticalFlow	opencv2/cudaoptflow.hpp	/^class CV_EXPORTS SparseOpticalFlow : public Algorithm$/;"	c	namespace:cv::cuda
SparseOpticalFlow	opencv2/video/tracking.hpp	/^class CV_EXPORTS_W SparseOpticalFlow : public Algorithm$/;"	c	namespace:cv
SparsePyrLKOpticalFlow	opencv2/cudaoptflow.hpp	/^class CV_EXPORTS SparsePyrLKOpticalFlow : public SparseOpticalFlow$/;"	c	namespace:cv::cuda
SparsePyrLKOpticalFlow	opencv2/video/tracking.hpp	/^class CV_EXPORTS_W SparsePyrLKOpticalFlow : public SparseOpticalFlow$/;"	c	namespace:cv
SparsePyrLkOptFlowEstimator	opencv2/videostab/optical_flow.hpp	/^class CV_EXPORTS SparsePyrLkOptFlowEstimator$/;"	c	namespace:cv::videostab
SparsePyrLkOptFlowEstimatorGpu	opencv2/videostab/optical_flow.hpp	/^class CV_EXPORTS SparsePyrLkOptFlowEstimatorGpu$/;"	c	namespace:cv::videostab
SpeedLevel	opencv2/flann/lsh_table.h	/^    enum SpeedLevel$/;"	g	class:cvflann::lsh::LshTable
SphericalPortraitProjector	opencv2/stitching/detail/warpers.hpp	/^struct SphericalPortraitProjector : ProjectorBase$/;"	s	namespace:cv::detail
SphericalPortraitWarper	opencv2/stitching/detail/warpers.hpp	/^    SphericalPortraitWarper(float scale) { projector_.scale = scale; }$/;"	f	class:cv::detail::SphericalPortraitWarper
SphericalPortraitWarper	opencv2/stitching/detail/warpers.hpp	/^class CV_EXPORTS SphericalPortraitWarper : public RotationWarperBase<SphericalPortraitProjector>$/;"	c	namespace:cv::detail
SphericalProjector	opencv2/stitching/detail/warpers.hpp	/^struct CV_EXPORTS SphericalProjector : ProjectorBase$/;"	s	namespace:cv::detail
SphericalWarper	opencv2/stitching/detail/warpers.hpp	/^    SphericalWarper(float scale) { projector_.scale = scale; }$/;"	f	class:cv::detail::SphericalWarper
SphericalWarper	opencv2/stitching/detail/warpers.hpp	/^class CV_EXPORTS SphericalWarper : public RotationWarperBase<SphericalProjector>$/;"	c	namespace:cv::detail
SphericalWarper	opencv2/stitching/warpers.hpp	/^class SphericalWarper: public WarperCreator$/;"	c	namespace:cv
SphericalWarperGpu	opencv2/stitching/detail/warpers.hpp	/^    SphericalWarperGpu(float scale) : SphericalWarper(scale) {}$/;"	f	class:cv::detail::SphericalWarperGpu
SphericalWarperGpu	opencv2/stitching/detail/warpers.hpp	/^class CV_EXPORTS SphericalWarperGpu : public SphericalWarper$/;"	c	namespace:cv::detail
SphericalWarperGpu	opencv2/stitching/warpers.hpp	/^class SphericalWarperGpu: public WarperCreator$/;"	c	namespace:cv
Split	opencv2/core/private.hpp	/^    typedef tbb::split Split;$/;"	t	namespace:cv
Split	opencv2/ml.hpp	/^    class CV_EXPORTS Split$/;"	c	class:cv::ml::DTrees
StabilizerBase	opencv2/videostab/stabilizer.hpp	/^class CV_EXPORTS StabilizerBase$/;"	c	namespace:cv::videostab
StartStopTimer	opencv2/flann/timer.h	/^    StartStopTimer()$/;"	f	class:cvflann::StartStopTimer
StartStopTimer	opencv2/flann/timer.h	/^class StartStopTimer$/;"	c	namespace:cvflann
StatModel	opencv2/ml.hpp	/^class CV_EXPORTS_W StatModel : public Algorithm$/;"	c	namespace:cv::ml
StaticIf	opencv2/core/cuda/detail/reduce.hpp	/^        template <class T1, class T2> struct StaticIf<false, T1, T2>$/;"	s	namespace:cv::cuda::device::reduce_detail
StaticIf	opencv2/core/cuda/detail/reduce.hpp	/^        template <class T1, class T2> struct StaticIf<true, T1, T2>$/;"	s	namespace:cv::cuda::device::reduce_detail
StaticIf	opencv2/core/cuda/detail/reduce_key_val.hpp	/^        template <class T1, class T2> struct StaticIf<false, T1, T2>$/;"	s	namespace:cv::cuda::device::reduce_key_val_detail
StaticIf	opencv2/core/cuda/detail/reduce_key_val.hpp	/^        template <class T1, class T2> struct StaticIf<true, T1, T2>$/;"	s	namespace:cv::cuda::device::reduce_key_val_detail
Status	opencv2/stitching.hpp	/^    enum Status$/;"	g	class:cv::Stitcher
StereoBM	opencv2/calib3d.hpp	/^class CV_EXPORTS_W StereoBM : public StereoMatcher$/;"	c	namespace:cv
StereoBM	opencv2/cudastereo.hpp	/^class CV_EXPORTS StereoBM : public cv::StereoBM$/;"	c	namespace:cv::cuda
StereoBeliefPropagation	opencv2/cudastereo.hpp	/^class CV_EXPORTS StereoBeliefPropagation : public cv::StereoMatcher$/;"	c	namespace:cv::cuda
StereoConstantSpaceBP	opencv2/cudastereo.hpp	/^class CV_EXPORTS StereoConstantSpaceBP : public cuda::StereoBeliefPropagation$/;"	c	namespace:cv::cuda
StereoMatcher	opencv2/calib3d.hpp	/^class CV_EXPORTS_W StereoMatcher : public Algorithm$/;"	c	namespace:cv
StereoSGBM	opencv2/calib3d.hpp	/^class CV_EXPORTS_W StereoSGBM : public StereoMatcher$/;"	c	namespace:cv
StereographicProjector	opencv2/stitching/detail/warpers.hpp	/^struct CV_EXPORTS StereographicProjector : ProjectorBase$/;"	s	namespace:cv::detail
StereographicWarper	opencv2/stitching/detail/warpers.hpp	/^    StereographicWarper(float scale) { projector_.scale = scale; }$/;"	f	class:cv::detail::StereographicWarper
StereographicWarper	opencv2/stitching/detail/warpers.hpp	/^class CV_EXPORTS StereographicWarper : public RotationWarperBase<StereographicProjector>$/;"	c	namespace:cv::detail
StereographicWarper	opencv2/stitching/warpers.hpp	/^class StereographicWarper: public WarperCreator$/;"	c	namespace:cv
Stitcher	opencv2/stitching.hpp	/^class CV_EXPORTS_W Stitcher$/;"	c	namespace:cv
Stream	opencv2/core/base.hpp	/^    class CV_EXPORTS Stream;$/;"	m	namespace:cv::cuda	typeref:class:cv::cuda::CV_EXPORTS
Stream	opencv2/core/cuda.hpp	/^class CV_EXPORTS Stream$/;"	c	namespace:cv::cuda
Stream	opencv2/core/cuda.inl.hpp	/^Stream::Stream(const Ptr<Impl>& impl)$/;"	f	class:cv::cuda::Stream
StreamAccessor	opencv2/core/cuda_stream_accessor.hpp	/^        struct StreamAccessor$/;"	s	namespace:cv::cuda
StreamCallback	opencv2/core/cuda.hpp	/^    typedef void (*StreamCallback)(int status, void* userData);$/;"	t	class:cv::cuda::Stream
String	opencv2/core/cvstd.hpp	/^String::String()$/;"	f	class:cv::String
String	opencv2/core/cvstd.hpp	/^String::String(Iterator first, Iterator last)$/;"	f	class:cv::String
String	opencv2/core/cvstd.hpp	/^String::String(const String& str)$/;"	f	class:cv::String
String	opencv2/core/cvstd.hpp	/^String::String(const String& str, size_t pos, size_t len)$/;"	f	class:cv::String
String	opencv2/core/cvstd.hpp	/^String::String(const char* first, const char* last)$/;"	f	class:cv::String
String	opencv2/core/cvstd.hpp	/^String::String(const char* s)$/;"	f	class:cv::String
String	opencv2/core/cvstd.hpp	/^String::String(const char* s, size_t n)$/;"	f	class:cv::String
String	opencv2/core/cvstd.hpp	/^String::String(size_t n, char c)$/;"	f	class:cv::String
String	opencv2/core/cvstd.hpp	/^class CV_EXPORTS String$/;"	c	namespace:cv
String	opencv2/core/cvstd.inl.hpp	/^String::String(const std::string& str)$/;"	f	class:cv::String
String	opencv2/core/cvstd.inl.hpp	/^String::String(const std::string& str, size_t pos, size_t len)$/;"	f	class:cv::String
String	opencv2/core/persistence.hpp	/^inline String::String(const FileNode& fn): cstr_(0), len_(0) { read(fn, *this, *this); }$/;"	f	class:cv::String
StsAssert	opencv2/core/base.hpp	/^    StsAssert=                 -215, \/\/!< assertion failed$/;"	e	enum:cv::Error::Code
StsAutoTrace	opencv2/core/base.hpp	/^    StsAutoTrace=               -8,  \/\/!< tracing$/;"	e	enum:cv::Error::Code
StsBackTrace	opencv2/core/base.hpp	/^    StsBackTrace=               -1,  \/\/!< pseudo error for back trace$/;"	e	enum:cv::Error::Code
StsBadArg	opencv2/core/base.hpp	/^    StsBadArg=                  -5,  \/\/!< function arg\/param is bad$/;"	e	enum:cv::Error::Code
StsBadFlag	opencv2/core/base.hpp	/^    StsBadFlag=                -206, \/\/!< flag is wrong or not supported$/;"	e	enum:cv::Error::Code
StsBadFunc	opencv2/core/base.hpp	/^    StsBadFunc=                 -6,  \/\/!< unsupported function$/;"	e	enum:cv::Error::Code
StsBadMask	opencv2/core/base.hpp	/^    StsBadMask=                -208, \/\/!< bad format of mask (neither 8uC1 nor 8sC1)$/;"	e	enum:cv::Error::Code
StsBadMemBlock	opencv2/core/base.hpp	/^    StsBadMemBlock=            -214, \/\/!< an allocated block has been corrupted$/;"	e	enum:cv::Error::Code
StsBadPoint	opencv2/core/base.hpp	/^    StsBadPoint=               -207, \/\/!< bad CvPoint$/;"	e	enum:cv::Error::Code
StsBadSize	opencv2/core/base.hpp	/^    StsBadSize=                -201, \/\/!< the input\/output structure size is incorrect$/;"	e	enum:cv::Error::Code
StsDivByZero	opencv2/core/base.hpp	/^    StsDivByZero=              -202, \/\/!< division by zero$/;"	e	enum:cv::Error::Code
StsError	opencv2/core/base.hpp	/^    StsError=                   -2,  \/\/!< unknown \/unspecified error$/;"	e	enum:cv::Error::Code
StsFilterOffsetErr	opencv2/core/base.hpp	/^    StsFilterOffsetErr=        -31,  \/\/!< incorrect filter ofset value$/;"	e	enum:cv::Error::Code
StsFilterStructContentErr	opencv2/core/base.hpp	/^    StsFilterStructContentErr= -29,  \/\/!< incorr. filter structure content$/;"	e	enum:cv::Error::Code
StsInplaceNotSupported	opencv2/core/base.hpp	/^    StsInplaceNotSupported=    -203, \/\/!< in-place operation is not supported$/;"	e	enum:cv::Error::Code
StsInternal	opencv2/core/base.hpp	/^    StsInternal=                -3,  \/\/!< internal error (bad state)$/;"	e	enum:cv::Error::Code
StsKernelStructContentErr	opencv2/core/base.hpp	/^    StsKernelStructContentErr= -30,  \/\/!< incorr. transform kernel content$/;"	e	enum:cv::Error::Code
StsNoConv	opencv2/core/base.hpp	/^    StsNoConv=                  -7,  \/\/!< iter. didn't converge$/;"	e	enum:cv::Error::Code
StsNoMem	opencv2/core/base.hpp	/^    StsNoMem=                   -4,  \/\/!< insufficient memory$/;"	e	enum:cv::Error::Code
StsNotImplemented	opencv2/core/base.hpp	/^    StsNotImplemented=         -213, \/\/!< the requested function\/feature is not implemented$/;"	e	enum:cv::Error::Code
StsNullPtr	opencv2/core/base.hpp	/^    StsNullPtr=                -27,  \/\/!< null pointer$/;"	e	enum:cv::Error::Code
StsObjectNotFound	opencv2/core/base.hpp	/^    StsObjectNotFound=         -204, \/\/!< request can't be completed$/;"	e	enum:cv::Error::Code
StsOk	opencv2/core/base.hpp	/^    StsOk=                       0,  \/\/!< everithing is ok$/;"	e	enum:cv::Error::Code
StsOutOfRange	opencv2/core/base.hpp	/^    StsOutOfRange=             -211, \/\/!< some of parameters are out of range$/;"	e	enum:cv::Error::Code
StsParseError	opencv2/core/base.hpp	/^    StsParseError=             -212, \/\/!< invalid syntax\/structure of the parsed file$/;"	e	enum:cv::Error::Code
StsUnmatchedFormats	opencv2/core/base.hpp	/^    StsUnmatchedFormats=       -205, \/\/!< formats of input\/output arrays differ$/;"	e	enum:cv::Error::Code
StsUnmatchedSizes	opencv2/core/base.hpp	/^    StsUnmatchedSizes=         -209, \/\/!< sizes of input\/output structures do not match$/;"	e	enum:cv::Error::Code
StsUnsupportedFormat	opencv2/core/base.hpp	/^    StsUnsupportedFormat=      -210, \/\/!< the data format\/type is not supported by the function$/;"	e	enum:cv::Error::Code
StsVecLengthErr	opencv2/core/base.hpp	/^    StsVecLengthErr=           -28,  \/\/!< incorrect vector length$/;"	e	enum:cv::Error::Code
Subdiv2D	opencv2/imgproc.hpp	/^class CV_EXPORTS_W Subdiv2D$/;"	c	namespace:cv
Sum	opencv2/cudev/grid/reduce_to_vec.hpp	/^template <typename T> struct Sum : plus<T>$/;"	s	namespace:cv::cudev
SumExprBody	opencv2/cudev/expr/reduction.hpp	/^template <class SrcPtr> struct SumExprBody$/;"	s	namespace:cv::cudev
SumReductor	opencv2/cudev/grid/detail/reduce.hpp	/^        __device__ __forceinline__ SumReductor()$/;"	f	struct:cv::cudev::grid_reduce_detail::SumReductor
SumReductor	opencv2/cudev/grid/detail/reduce.hpp	/^    template <typename src_type, typename work_type> struct SumReductor$/;"	s	namespace:cv::cudev::grid_reduce_detail
SuperResolution	opencv2/superres.hpp	/^        class CV_EXPORTS SuperResolution : public cv::Algorithm, public FrameSource$/;"	c	namespace:cv::superres
SurfFeaturesFinder	opencv2/stitching/detail/matchers.hpp	/^class CV_EXPORTS SurfFeaturesFinder : public FeaturesFinder$/;"	c	namespace:cv::detail
SurfFeaturesFinderGpu	opencv2/stitching/detail/matchers.hpp	/^class CV_EXPORTS SurfFeaturesFinderGpu : public FeaturesFinder$/;"	c	namespace:cv::detail
SurfaceFormat	opencv2/cudacodec.hpp	/^enum SurfaceFormat$/;"	g	namespace:cv::cudacodec
SvmsgdType	opencv2/ml.hpp	/^    enum SvmsgdType$/;"	g	class:cv::ml::SVMSGD
T	opencv2/cudalegacy.hpp	/^    float T;       \/\/!< A percentage value which determines when new features can be recognized as new background. (Typically 0.9).$/;"	m	struct:cv::cuda::FGDParams
TAG_MASK	opencv2/core/cuda/emulation.hpp	/^            enum { TAG_MASK = (1U << ( (sizeof(unsigned int) << 3) - 5U)) - 1U };$/;"	e	enum:cv::cuda::device::Emulation::smem::__anon252
TEMP_COPIED_UMAT	opencv2/core/mat.hpp	/^        DEVICE_COPY_OBSOLETE=4, TEMP_UMAT=8, TEMP_COPIED_UMAT=24,$/;"	e	enum:cv::UMatData::__anon275
TEMP_UMAT	opencv2/core/mat.hpp	/^        DEVICE_COPY_OBSOLETE=4, TEMP_UMAT=8, TEMP_COPIED_UMAT=24,$/;"	e	enum:cv::UMatData::__anon275
TEST_ERROR	opencv2/ml.hpp	/^    TEST_ERROR = 0,$/;"	e	enum:cv::ml::ErrorTypes
THRESHOLD	opencv2/features2d.hpp	/^        THRESHOLD = 10000, NONMAX_SUPPRESSION = 10001,$/;"	e	enum:cv::AgastFeatureDetector::__anon378
THRESHOLD	opencv2/features2d.hpp	/^        THRESHOLD = 10000, NONMAX_SUPPRESSION=10001, FAST_N=10002,$/;"	e	enum:cv::FastFeatureDetector::__anon377
THRESH_BINARY	opencv2/imgproc.hpp	/^    THRESH_BINARY     = 0, \/\/!< \\f[\\texttt{dst} (x,y) =  \\fork{\\texttt{maxval}}{if \\(\\texttt{src}(x,y) > \\texttt{thresh}\\)}{0}{otherwise}\\f]$/;"	e	enum:cv::ThresholdTypes
THRESH_BINARY_INV	opencv2/imgproc.hpp	/^    THRESH_BINARY_INV = 1, \/\/!< \\f[\\texttt{dst} (x,y) =  \\fork{0}{if \\(\\texttt{src}(x,y) > \\texttt{thresh}\\)}{\\texttt{maxval}}{otherwise}\\f]$/;"	e	enum:cv::ThresholdTypes
THRESH_MASK	opencv2/imgproc.hpp	/^    THRESH_MASK       = 7,$/;"	e	enum:cv::ThresholdTypes
THRESH_OTSU	opencv2/imgproc.hpp	/^    THRESH_OTSU       = 8, \/\/!< flag, use Otsu algorithm to choose the optimal threshold value$/;"	e	enum:cv::ThresholdTypes
THRESH_TOZERO	opencv2/imgproc.hpp	/^    THRESH_TOZERO     = 3, \/\/!< \\f[\\texttt{dst} (x,y) =  \\fork{\\texttt{src}(x,y)}{if \\(\\texttt{src}(x,y) > \\texttt{thresh}\\)}{0}{otherwise}\\f]$/;"	e	enum:cv::ThresholdTypes
THRESH_TOZERO_INV	opencv2/imgproc.hpp	/^    THRESH_TOZERO_INV = 4, \/\/!< \\f[\\texttt{dst} (x,y) =  \\fork{0}{if \\(\\texttt{src}(x,y) > \\texttt{thresh}\\)}{\\texttt{src}(x,y)}{otherwise}\\f]$/;"	e	enum:cv::ThresholdTypes
THRESH_TRIANGLE	opencv2/imgproc.hpp	/^    THRESH_TRIANGLE   = 16 \/\/!< flag, use Triangle algorithm to choose the optimal threshold value$/;"	e	enum:cv::ThresholdTypes
THRESH_TRUNC	opencv2/imgproc.hpp	/^    THRESH_TRUNC      = 2, \/\/!< \\f[\\texttt{dst} (x,y) =  \\fork{\\texttt{threshold}}{if \\(\\texttt{src}(x,y) > \\texttt{thresh}\\)}{\\texttt{src}(x,y)}{otherwise}\\f]$/;"	e	enum:cv::ThresholdTypes
THRUST_DEBUG	opencv2/core/cuda/reduce.hpp	47;"	d
TLB_size	5/parallel/settings.h	/^    unsigned int                TLB_size;$/;"	m	struct:__gnu_parallel::_Settings
TLSData	opencv2/core/utility.hpp	/^    TLSData(TLSData &) {}$/;"	f	class:cv::TLSData
TLSData	opencv2/core/utility.hpp	/^    inline TLSData()        {}$/;"	f	class:cv::TLSData
TLSData	opencv2/core/utility.hpp	/^class TLSData : protected TLSDataContainer$/;"	c	namespace:cv
TLSDataContainer	opencv2/core/utility.hpp	/^class CV_EXPORTS TLSDataContainer$/;"	c	namespace:cv
TM_CCOEFF	opencv2/imgproc.hpp	/^    TM_CCOEFF        = 4, \/\/!< \\f[R(x,y)= \\sum _{x',y'} (T'(x',y')  \\cdot I'(x+x',y+y'))\\f]$/;"	e	enum:cv::TemplateMatchModes
TM_CCOEFF_NORMED	opencv2/imgproc.hpp	/^    TM_CCOEFF_NORMED = 5  \/\/!< \\f[R(x,y)= \\frac{ \\sum_{x',y'} (T'(x',y') \\cdot I'(x+x',y+y')) }{ \\sqrt{\\sum_{x',y'}T'(x',y')^2 \\cdot \\sum_{x',y'} I'(x+x',y+y')^2} }\\f]$/;"	e	enum:cv::TemplateMatchModes
TM_CCORR	opencv2/imgproc.hpp	/^    TM_CCORR         = 2, \/\/!< \\f[R(x,y)= \\sum _{x',y'} (T(x',y')  \\cdot I(x+x',y+y'))\\f]$/;"	e	enum:cv::TemplateMatchModes
TM_CCORR_NORMED	opencv2/imgproc.hpp	/^    TM_CCORR_NORMED  = 3, \/\/!< \\f[R(x,y)= \\frac{\\sum_{x',y'} (T(x',y') \\cdot I(x+x',y+y'))}{\\sqrt{\\sum_{x',y'}T(x',y')^2 \\cdot \\sum_{x',y'} I(x+x',y+y')^2}}\\f]$/;"	e	enum:cv::TemplateMatchModes
TM_SQDIFF	opencv2/imgproc.hpp	/^    TM_SQDIFF        = 0, \/\/!< \\f[R(x,y)= \\sum _{x',y'} (T(x',y')-I(x+x',y+y'))^2\\f]$/;"	e	enum:cv::TemplateMatchModes
TM_SQDIFF_NORMED	opencv2/imgproc.hpp	/^    TM_SQDIFF_NORMED = 1, \/\/!< \\f[R(x,y)= \\frac{\\sum_{x',y'} (T(x',y')-I(x+x',y+y'))^2}{\\sqrt{\\sum_{x',y'}T(x',y')^2 \\cdot \\sum_{x',y'} I(x+x',y+y')^2}}\\f]$/;"	e	enum:cv::TemplateMatchModes
TRAIN_ERROR	opencv2/ml.hpp	/^    TRAIN_ERROR = 1$/;"	e	enum:cv::ml::ErrorTypes
TRIANGLES	opencv2/core/opengl.hpp	/^    TRIANGLES      = 0x0004,$/;"	e	enum:cv::ogl::RenderModes
TRIANGLE_FAN	opencv2/core/opengl.hpp	/^    TRIANGLE_FAN   = 0x0006,$/;"	e	enum:cv::ogl::RenderModes
TRIANGLE_STRIP	opencv2/core/opengl.hpp	/^    TRIANGLE_STRIP = 0x0005,$/;"	e	enum:cv::ogl::RenderModes
TYPE	opencv2/core/utility.hpp	/^enum TYPE$/;"	g	namespace:cv::instr
TYPE_5_8	opencv2/features2d.hpp	/^        TYPE_5_8 = 0, TYPE_7_12 = 1, TYPE_9_16 = 2,$/;"	e	enum:cv::FastFeatureDetector::__anon377
TYPE_7_12	opencv2/features2d.hpp	/^        TYPE_5_8 = 0, TYPE_7_12 = 1, TYPE_9_16 = 2,$/;"	e	enum:cv::FastFeatureDetector::__anon377
TYPE_9_16	opencv2/features2d.hpp	/^        TYPE_5_8 = 0, TYPE_7_12 = 1, TYPE_9_16 = 2,$/;"	e	enum:cv::FastFeatureDetector::__anon377
TYPE_ACCELERATOR	opencv2/core/ocl.hpp	/^        TYPE_ACCELERATOR = (1 << 3),$/;"	e	enum:cv::ocl::Device::__anon317
TYPE_ALL	opencv2/core/ocl.hpp	/^        TYPE_ALL         = 0xFFFFFFFF$/;"	e	enum:cv::ocl::Device::__anon317
TYPE_CPU	opencv2/core/ocl.hpp	/^        TYPE_CPU         = (1 << 1),$/;"	e	enum:cv::ocl::Device::__anon317
TYPE_DEFAULT	opencv2/core/ocl.hpp	/^        TYPE_DEFAULT     = (1 << 0),$/;"	e	enum:cv::ocl::Device::__anon317
TYPE_DGPU	opencv2/core/ocl.hpp	/^        TYPE_DGPU        = TYPE_GPU + (1 << 16),$/;"	e	enum:cv::ocl::Device::__anon317
TYPE_FUN	opencv2/core/utility.hpp	/^    TYPE_FUN,           \/\/ Simple function call$/;"	e	enum:cv::instr::TYPE
TYPE_GENERAL	opencv2/core/utility.hpp	/^    TYPE_GENERAL = 0,   \/\/ OpenCV API function, e.g. exported function$/;"	e	enum:cv::instr::TYPE
TYPE_GPU	opencv2/core/ocl.hpp	/^        TYPE_GPU         = (1 << 2),$/;"	e	enum:cv::ocl::Device::__anon317
TYPE_IGPU	opencv2/core/ocl.hpp	/^        TYPE_IGPU        = TYPE_GPU + (1 << 17),$/;"	e	enum:cv::ocl::Device::__anon317
TYPE_MARKER	opencv2/core/utility.hpp	/^    TYPE_MARKER,        \/\/ Information marker$/;"	e	enum:cv::instr::TYPE
TYPE_MASK	opencv2/core/mat.hpp	/^    enum { MAGIC_MASK = 0xFFFF0000, TYPE_MASK = 0x00000FFF, DEPTH_MASK = 7 };$/;"	e	enum:cv::Mat::__anon277
TYPE_MASK	opencv2/core/mat.hpp	/^    enum { MAGIC_MASK = 0xFFFF0000, TYPE_MASK = 0x00000FFF, DEPTH_MASK = 7 };$/;"	e	enum:cv::UMat::__anon279
TYPE_MASK	opencv2/core/persistence.hpp	/^        TYPE_MASK = 7,$/;"	e	enum:cv::FileNode::Type
TYPE_WRAPPER	opencv2/core/utility.hpp	/^    TYPE_WRAPPER,       \/\/ Wrapper function for implementation$/;"	e	enum:cv::instr::TYPE
Target	opencv2/core/opengl.hpp	/^    enum Target$/;"	g	class:cv::ogl::Buffer
TargetArchs	opencv2/core/cuda.hpp	/^class CV_EXPORTS TargetArchs$/;"	c	namespace:cv::cuda
Temp1	opencv2/video/tracking_c.h	/^    float* Temp1;               \/* temp1->data.fl *\/$/;"	m	struct:CvKalman
Temp2	opencv2/video/tracking_c.h	/^    float* Temp2;               \/* temp2->data.fl *\/$/;"	m	struct:CvKalman
TemplateMatchModes	opencv2/imgproc.hpp	/^enum TemplateMatchModes {$/;"	g	namespace:cv
TemplateMatching	opencv2/cudaimgproc.hpp	/^class CV_EXPORTS TemplateMatching : public Algorithm$/;"	c	namespace:cv::cuda
TermCriteria	opencv2/core/base.hpp	/^class CV_EXPORTS TermCriteria;$/;"	m	namespace:cv	typeref:class:cv::CV_EXPORTS
TermCriteria	opencv2/core/types.hpp	/^TermCriteria::TermCriteria()$/;"	f	class:cv::TermCriteria
TermCriteria	opencv2/core/types.hpp	/^TermCriteria::TermCriteria(int _type, int _maxCount, double _epsilon)$/;"	f	class:cv::TermCriteria
TermCriteria	opencv2/core/types.hpp	/^class CV_EXPORTS TermCriteria$/;"	c	namespace:cv
TexRef	opencv2/cudev/ptr2d/texture.hpp	/^        typedef texture<T, cudaTextureType2D, cudaReadModeElementType> TexRef;$/;"	t	struct:__anon406::CvCudevTextureRef
Texture	opencv2/cudev/ptr2d/texture.hpp	/^    __host__ explicit Texture(const GlobPtrSz<T>& mat,$/;"	f	struct:cv::cudev::Texture
Texture	opencv2/cudev/ptr2d/texture.hpp	/^template <typename T> struct Texture : TexturePtr<T>$/;"	s	namespace:cv::cudev
Texture2D	opencv2/core/base.hpp	/^    class CV_EXPORTS Texture2D;$/;"	m	namespace:cv::ogl	typeref:class:cv::ogl::CV_EXPORTS
Texture2D	opencv2/core/opengl.hpp	/^class CV_EXPORTS Texture2D$/;"	c	namespace:cv::ogl
Texture2D	opencv2/core/opengl.hpp	/^cv::ogl::Texture2D::Texture2D(Size asize, Format aformat, bool autoRelease) : rows_(0), cols_(0), format_(NONE)$/;"	f	class:cv::ogl::Texture2D
Texture2D	opencv2/core/opengl.hpp	/^cv::ogl::Texture2D::Texture2D(int arows, int acols, Format aformat, bool autoRelease) : rows_(0), cols_(0), format_(NONE)$/;"	f	class:cv::ogl::Texture2D
TexturePtr	opencv2/cudev/ptr2d/texture.hpp	/^template <typename T> struct TexturePtr$/;"	s	namespace:cv::cudev
ThinPlateSplineShapeTransformer	opencv2/shape/shape_transformer.hpp	/^class CV_EXPORTS_W ThinPlateSplineShapeTransformer : public ShapeTransformer$/;"	c	namespace:cv
ThisClass	opencv2/flann/object_factory.h	/^    typedef ObjectFactory<BaseClass,UniqueIdType,ObjectCreator> ThisClass;$/;"	t	class:cvflann::ObjectFactory
ThreshBinaryFunc	opencv2/cudev/functional/functional.hpp	/^template <typename T> struct ThreshBinaryFunc : unary_function<T, T>$/;"	s	namespace:cv::cudev
ThreshBinaryInvFunc	opencv2/cudev/functional/functional.hpp	/^template <typename T> struct ThreshBinaryInvFunc : unary_function<T, T>$/;"	s	namespace:cv::cudev
ThreshToZeroFunc	opencv2/cudev/functional/functional.hpp	/^template <typename T> struct ThreshToZeroFunc : unary_function<T, T>$/;"	s	namespace:cv::cudev
ThreshToZeroInvFunc	opencv2/cudev/functional/functional.hpp	/^template <typename T> struct ThreshToZeroInvFunc : unary_function<T, T>$/;"	s	namespace:cv::cudev
ThreshTruncFunc	opencv2/cudev/functional/functional.hpp	/^template <typename T> struct ThreshTruncFunc : unary_function<T, T>$/;"	s	namespace:cv::cudev
ThresholdTypes	opencv2/imgproc.hpp	/^enum ThresholdTypes {$/;"	g	namespace:cv
ThrustAllocator	opencv2/core/cuda/utility.hpp	/^    struct CV_EXPORTS ThrustAllocator$/;"	s	namespace:cv::cuda::device
TickMeter	opencv2/core/utility.hpp	/^    CV_WRAP TickMeter()$/;"	f	class:cv::TickMeter
TickMeter	opencv2/core/utility.hpp	/^class CV_EXPORTS_W TickMeter$/;"	c	namespace:cv
Timelapser	opencv2/stitching/detail/timelapsers.hpp	/^class CV_EXPORTS Timelapser$/;"	c	namespace:cv::detail
TimelapserCrop	opencv2/stitching/detail/timelapsers.hpp	/^class CV_EXPORTS TimelapserCrop : public Timelapser$/;"	c	namespace:cv::detail
ToFileMotionWriter	opencv2/videostab/global_motion.hpp	/^class CV_EXPORTS ToFileMotionWriter : public ImageMotionEstimatorBase$/;"	c	namespace:cv::videostab
Tonemap	opencv2/photo.hpp	/^class CV_EXPORTS_W Tonemap : public Algorithm$/;"	c	namespace:cv
TonemapDrago	opencv2/photo.hpp	/^class CV_EXPORTS_W TonemapDrago : public Tonemap$/;"	c	namespace:cv
TonemapDurand	opencv2/photo.hpp	/^class CV_EXPORTS_W TonemapDurand : public Tonemap$/;"	c	namespace:cv
TonemapMantiuk	opencv2/photo.hpp	/^class CV_EXPORTS_W TonemapMantiuk : public Tonemap$/;"	c	namespace:cv
TonemapReinhard	opencv2/photo.hpp	/^class CV_EXPORTS_W TonemapReinhard : public Tonemap$/;"	c	namespace:cv
TrackbarCallback	opencv2/highgui.hpp	/^typedef void (*TrackbarCallback)(int pos, void* userdata);$/;"	t	namespace:cv
TrackedObject	opencv2/objdetect/detection_based_tracker.hpp	/^            TrackedObject(const cv::Rect& rect):numDetectedFrames(1), numFramesNotDetected(0)$/;"	f	struct:cv::DetectionBasedTracker::TrackedObject
TrackedObject	opencv2/objdetect/detection_based_tracker.hpp	/^        struct TrackedObject$/;"	s	class:cv::DetectionBasedTracker
TrainData	opencv2/ml.hpp	/^class CV_EXPORTS_W TrainData$/;"	c	namespace:cv::ml
TrainFlags	opencv2/ml.hpp	/^    enum TrainFlags {$/;"	g	class:cv::ml::ANN_MLP
TrainingMethods	opencv2/ml.hpp	/^    enum TrainingMethods {$/;"	g	class:cv::ml::ANN_MLP
TransformDispatcher	opencv2/core/cuda/detail/transform_detail.hpp	/^        template<> struct TransformDispatcher<false>$/;"	s	namespace:cv::cuda::device::transform_detail
TransformDispatcher	opencv2/core/cuda/detail/transform_detail.hpp	/^        template<> struct TransformDispatcher<true>$/;"	s	namespace:cv::cuda::device::transform_detail
TransformDispatcher	opencv2/cudev/grid/detail/transform.hpp	/^    template <class Policy> struct TransformDispatcher<false, Policy>$/;"	s	namespace:cv::cudev::grid_transform_detail
TransformDispatcher	opencv2/cudev/grid/detail/transform.hpp	/^    template <class Policy> struct TransformDispatcher<true, Policy>$/;"	s	namespace:cv::cudev::grid_transform_detail
TransformFunctorTraits	opencv2/core/cuda/functional.hpp	/^    template <typename Func> struct TransformFunctorTraits : DefaultTransformFunctorTraits<Func> {};$/;"	s	namespace:cv::cuda::device
TranslationBasedLocalOutlierRejector	opencv2/videostab/outlier_rejection.hpp	/^class CV_EXPORTS TranslationBasedLocalOutlierRejector : public IOutlierRejector$/;"	c	namespace:cv::videostab
TransposeBody	opencv2/cudev/expr/warping.hpp	/^template <class SrcPtr> struct TransposeBody$/;"	s	namespace:cv::cudev
TransverseMercatorProjector	opencv2/stitching/detail/warpers.hpp	/^struct CV_EXPORTS TransverseMercatorProjector : ProjectorBase$/;"	s	namespace:cv::detail
TransverseMercatorWarper	opencv2/stitching/detail/warpers.hpp	/^    TransverseMercatorWarper(float scale) { projector_.scale = scale; }$/;"	f	class:cv::detail::TransverseMercatorWarper
TransverseMercatorWarper	opencv2/stitching/detail/warpers.hpp	/^class CV_EXPORTS TransverseMercatorWarper : public RotationWarperBase<TransverseMercatorProjector>$/;"	c	namespace:cv::detail
TransverseMercatorWarper	opencv2/stitching/warpers.hpp	/^class TransverseMercatorWarper: public WarperCreator$/;"	c	namespace:cv
True	opencv2/flann/dist.h	/^class True$/;"	c	namespace:cvflann
True	opencv2/flann/dist.h	84;"	d
TupleTraits	opencv2/cudev/util/tuple.hpp	/^struct TupleTraits< tuple<P0, P1, P2, P3, P4, P5, P6, P7, P8, P9> >$/;"	s	namespace:cv::cudev
TupleTraits	opencv2/cudev/util/tuple.hpp	/^template <typename T> struct TupleTraits$/;"	s	namespace:cv::cudev
TwoPassStabilizer	opencv2/videostab/stabilizer.hpp	/^class CV_EXPORTS TwoPassStabilizer : public StabilizerBase, public IFrameSource$/;"	c	namespace:cv::videostab
Type	opencv2/core/persistence.hpp	/^    enum Type$/;"	g	class:cv::FileNode
Type	opencv2/core/types.hpp	/^    enum Type$/;"	g	class:cv::TermCriteria
Type	opencv2/features2d.hpp	/^    typedef T Type;$/;"	t	struct:cv::Accumulator
Type	opencv2/features2d.hpp	/^template<> struct Accumulator<char>   { typedef float Type; };$/;"	t	struct:cv::Accumulator
Type	opencv2/features2d.hpp	/^template<> struct Accumulator<short>  { typedef float Type; };$/;"	t	struct:cv::Accumulator
Type	opencv2/features2d.hpp	/^template<> struct Accumulator<unsigned char>  { typedef float Type; };$/;"	t	struct:cv::Accumulator
Type	opencv2/features2d.hpp	/^template<> struct Accumulator<unsigned short> { typedef float Type; };$/;"	t	struct:cv::Accumulator
Type	opencv2/flann/dist.h	/^struct Accumulator { typedef T Type; };$/;"	t	struct:cvflann::Accumulator
Type	opencv2/flann/dist.h	/^struct Accumulator<char>   { typedef float Type; };$/;"	t	struct:cvflann::Accumulator
Type	opencv2/flann/dist.h	/^struct Accumulator<int> { typedef float Type; };$/;"	t	struct:cvflann::Accumulator
Type	opencv2/flann/dist.h	/^struct Accumulator<short>  { typedef float Type; };$/;"	t	struct:cvflann::Accumulator
Type	opencv2/flann/dist.h	/^struct Accumulator<unsigned char>  { typedef float Type; };$/;"	t	struct:cvflann::Accumulator
Type	opencv2/flann/dist.h	/^struct Accumulator<unsigned int> { typedef float Type; };$/;"	t	struct:cvflann::Accumulator
Type	opencv2/flann/dist.h	/^struct Accumulator<unsigned short> { typedef float Type; };$/;"	t	struct:cvflann::Accumulator
TypeDepth	opencv2/core/traits.hpp	/^template<> class TypeDepth<CV_16S>$/;"	c	namespace:cv
TypeDepth	opencv2/core/traits.hpp	/^template<> class TypeDepth<CV_16U>$/;"	c	namespace:cv
TypeDepth	opencv2/core/traits.hpp	/^template<> class TypeDepth<CV_32F>$/;"	c	namespace:cv
TypeDepth	opencv2/core/traits.hpp	/^template<> class TypeDepth<CV_32S>$/;"	c	namespace:cv
TypeDepth	opencv2/core/traits.hpp	/^template<> class TypeDepth<CV_64F>$/;"	c	namespace:cv
TypeDepth	opencv2/core/traits.hpp	/^template<> class TypeDepth<CV_8S>$/;"	c	namespace:cv
TypeDepth	opencv2/core/traits.hpp	/^template<> class TypeDepth<CV_8U>$/;"	c	namespace:cv
TypeDepth	opencv2/core/traits.hpp	/^template<int _depth> class TypeDepth$/;"	c	namespace:cv
TypeTraits	opencv2/core/cuda/type_traits.hpp	/^    template <typename T> struct TypeTraits$/;"	s	namespace:cv::cuda::device
TypeTraits	opencv2/cudev/util/type_traits.hpp	/^template <typename T> struct TypeTraits$/;"	s	namespace:cv::cudev
TypeVec	opencv2/core/cuda/vec_traits.hpp	/^    template<> struct TypeVec<bool, 1> { typedef uchar vec_type; };$/;"	s	namespace:cv::cuda::device
TypeVec	opencv2/core/cuda/vec_traits.hpp	/^    template<> struct TypeVec<bool, 2> { typedef uchar2 vec_type; };$/;"	s	namespace:cv::cuda::device
TypeVec	opencv2/core/cuda/vec_traits.hpp	/^    template<> struct TypeVec<bool, 3> { typedef uchar3 vec_type; };$/;"	s	namespace:cv::cuda::device
TypeVec	opencv2/core/cuda/vec_traits.hpp	/^    template<> struct TypeVec<bool, 4> { typedef uchar4 vec_type; };$/;"	s	namespace:cv::cuda::device
TypeVec	opencv2/core/cuda/vec_traits.hpp	/^    template<> struct TypeVec<bool, 8> { typedef uchar8 vec_type; };$/;"	s	namespace:cv::cuda::device
TypeVec	opencv2/core/cuda/vec_traits.hpp	/^    template<> struct TypeVec<schar, 1> { typedef schar vec_type; };$/;"	s	namespace:cv::cuda::device
TypeVec	opencv2/core/cuda/vec_traits.hpp	/^    template<> struct TypeVec<schar, 2> { typedef char2 vec_type; };$/;"	s	namespace:cv::cuda::device
TypeVec	opencv2/core/cuda/vec_traits.hpp	/^    template<> struct TypeVec<schar, 3> { typedef char3 vec_type; };$/;"	s	namespace:cv::cuda::device
TypeVec	opencv2/core/cuda/vec_traits.hpp	/^    template<> struct TypeVec<schar, 4> { typedef char4 vec_type; };$/;"	s	namespace:cv::cuda::device
TypeVec	opencv2/core/cuda/vec_traits.hpp	/^    template<> struct TypeVec<schar, 8> { typedef char8 vec_type; };$/;"	s	namespace:cv::cuda::device
Types	opencv2/ml.hpp	/^    enum Types {$/;"	g	class:cv::ml::Boost
Types	opencv2/ml.hpp	/^    enum Types {$/;"	g	class:cv::ml::EM
Types	opencv2/ml.hpp	/^    enum Types {$/;"	g	class:cv::ml::SVM
Types	opencv2/ml.hpp	/^    enum Types$/;"	g	class:cv::ml::KNearest
TypesEquals	opencv2/cudev/util/type_traits.hpp	/^template <typename A, typename B> struct TypesEquals$/;"	s	namespace:cv::cudev
TypesEquals	opencv2/cudev/util/type_traits.hpp	/^template <typename A> struct TypesEquals<A, A>$/;"	s	namespace:cv::cudev
UCHAR	opencv2/core.hpp	/^           UNSIGNED_INT=8, UINT64=9, UCHAR=11 };$/;"	e	enum:cv::Param::__anon344
UINT64	opencv2/core.hpp	/^           UNSIGNED_INT=8, UINT64=9, UCHAR=11 };$/;"	e	enum:cv::Param::__anon344
UMAT	opencv2/core/mat.hpp	/^        UMAT              =10 << KIND_SHIFT,$/;"	e	enum:cv::_InputArray::__anon273
UMat	opencv2/core/base.hpp	/^class CV_EXPORTS UMat;$/;"	m	namespace:cv	typeref:class:cv::CV_EXPORTS
UMat	opencv2/core/mat.hpp	/^class CV_EXPORTS UMat$/;"	c	namespace:cv
UMat	opencv2/core/mat.inl.hpp	/^UMat::UMat(Size _sz, int _type, UMatUsageFlags _usageFlags)$/;"	f	class:cv::UMat
UMat	opencv2/core/mat.inl.hpp	/^UMat::UMat(Size _sz, int _type, const Scalar& _s, UMatUsageFlags _usageFlags)$/;"	f	class:cv::UMat
UMat	opencv2/core/mat.inl.hpp	/^UMat::UMat(UMat&& m)$/;"	f	class:cv::UMat
UMat	opencv2/core/mat.inl.hpp	/^UMat::UMat(UMatUsageFlags _usageFlags)$/;"	f	class:cv::UMat
UMat	opencv2/core/mat.inl.hpp	/^UMat::UMat(const UMat& m)$/;"	f	class:cv::UMat
UMat	opencv2/core/mat.inl.hpp	/^UMat::UMat(const std::vector<_Tp>& vec, bool copyData)$/;"	f	class:cv::UMat
UMat	opencv2/core/mat.inl.hpp	/^UMat::UMat(int _dims, const int* _sz, int _type, UMatUsageFlags _usageFlags)$/;"	f	class:cv::UMat
UMat	opencv2/core/mat.inl.hpp	/^UMat::UMat(int _dims, const int* _sz, int _type, const Scalar& _s, UMatUsageFlags _usageFlags)$/;"	f	class:cv::UMat
UMat	opencv2/core/mat.inl.hpp	/^UMat::UMat(int _rows, int _cols, int _type, UMatUsageFlags _usageFlags)$/;"	f	class:cv::UMat
UMat	opencv2/core/mat.inl.hpp	/^UMat::UMat(int _rows, int _cols, int _type, const Scalar& _s, UMatUsageFlags _usageFlags)$/;"	f	class:cv::UMat
UMatData	opencv2/core/mat.hpp	/^struct CV_EXPORTS UMatData$/;"	s	namespace:cv
UMatData	opencv2/core/mat.hpp	/^struct CV_EXPORTS UMatData;$/;"	m	namespace:cv	typeref:struct:cv::CV_EXPORTS
UMatDataAutoLock	opencv2/core/mat.hpp	/^struct CV_EXPORTS UMatDataAutoLock$/;"	s	namespace:cv
UMatDataAutoLock	opencv2/core/mat.inl.hpp	/^inline UMatDataAutoLock::UMatDataAutoLock(UMatData* _u) : u(_u) { u->lock(); }$/;"	f	class:cv::UMatDataAutoLock
UMatUsageFlags	opencv2/core/mat.hpp	/^enum UMatUsageFlags$/;"	g	namespace:cv
UNDEFINED	opencv2/core/persistence.hpp	/^        UNDEFINED      = 0,$/;"	e	enum:cv::FileStorage::__anon313
UNIFORM	opencv2/core.hpp	/^    enum { UNIFORM = 0,$/;"	e	enum:cv::RNG::__anon342
UNKNOWN_VENDOR	opencv2/core/ocl.hpp	/^        UNKNOWN_VENDOR=0,$/;"	e	enum:cv::ocl::Device::__anon322
UNSIGNED_INT	opencv2/core.hpp	/^           UNSIGNED_INT=8, UINT64=9, UCHAR=11 };$/;"	e	enum:cv::Param::__anon344
UPDATE_MODEL	opencv2/ml.hpp	/^        UPDATE_MODEL = 1,$/;"	e	enum:cv::ml::StatModel::Flags
UPDATE_WEIGHTS	opencv2/ml.hpp	/^        UPDATE_WEIGHTS = 1,$/;"	e	enum:cv::ml::ANN_MLP::TrainFlags
USAGE_ALLOCATE_DEVICE_MEMORY	opencv2/core/mat.hpp	/^    USAGE_ALLOCATE_DEVICE_MEMORY = 1 << 1,$/;"	e	enum:cv::UMatUsageFlags
USAGE_ALLOCATE_HOST_MEMORY	opencv2/core/mat.hpp	/^    USAGE_ALLOCATE_HOST_MEMORY = 1 << 0,$/;"	e	enum:cv::UMatUsageFlags
USAGE_ALLOCATE_SHARED_MEMORY	opencv2/core/mat.hpp	/^    USAGE_ALLOCATE_SHARED_MEMORY = 1 << 2, \/\/ It is not equal to: USAGE_ALLOCATE_HOST_MEMORY | USAGE_ALLOCATE_DEVICE_MEMORY$/;"	e	enum:cv::UMatUsageFlags
USAGE_DEFAULT	opencv2/core/mat.hpp	/^    USAGE_DEFAULT = 0,$/;"	e	enum:cv::UMatUsageFlags
USER	opencv2/core/persistence.hpp	/^        USER      = 16, \/\/!< a registered object (e.g. a matrix)$/;"	e	enum:cv::FileNode::Type
USER_ALLOCATED	opencv2/core/mat.hpp	/^        USER_ALLOCATED=32, DEVICE_MEM_MAPPED=64};$/;"	e	enum:cv::UMatData::__anon275
USE_AVG	opencv2/core.hpp	/^                 USE_AVG     = 2  \/\/!$/;"	e	enum:cv::PCA::Flags
USE_UNORDERED_MAP	opencv2/flann/lsh_table.h	44;"	d
USE_UNORDERED_MAP	opencv2/flann/lsh_table.h	46;"	d
UnConst	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <class U> struct UnConst$/;"	s	namespace:cv::cuda::device::type_traits_detail
UnConst	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <class U> struct UnConst<const U&>$/;"	s	namespace:cv::cuda::device::type_traits_detail
UnConst	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <class U> struct UnConst<const U>$/;"	s	namespace:cv::cuda::device::type_traits_detail
UnConst	opencv2/cudev/util/detail/type_traits.hpp	/^    template <class U> struct UnConst$/;"	s	namespace:cv::cudev::type_traits_detail
UnConst	opencv2/cudev/util/detail/type_traits.hpp	/^    template <class U> struct UnConst<const U&>$/;"	s	namespace:cv::cudev::type_traits_detail
UnConst	opencv2/cudev/util/detail/type_traits.hpp	/^    template <class U> struct UnConst<const U>$/;"	s	namespace:cv::cudev::type_traits_detail
UnOpShift	opencv2/core/cuda/functional.hpp	/^        template <size_t src_elem_size, size_t dst_elem_size> struct UnOpShift { enum { shift = 1 }; };$/;"	s	namespace:cv::cuda::device::functional_detail
UnOpShift	opencv2/core/cuda/functional.hpp	/^        template <size_t src_elem_size> struct UnOpShift<src_elem_size, 1> { enum { shift = 4 }; };$/;"	s	namespace:cv::cuda::device::functional_detail
UnOpShift	opencv2/core/cuda/functional.hpp	/^        template <size_t src_elem_size> struct UnOpShift<src_elem_size, 2> { enum { shift = 2 }; };$/;"	s	namespace:cv::cuda::device::functional_detail
UnVolatile	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <class U> struct UnVolatile$/;"	s	namespace:cv::cuda::device::type_traits_detail
UnVolatile	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <class U> struct UnVolatile<volatile U&>$/;"	s	namespace:cv::cuda::device::type_traits_detail
UnVolatile	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <class U> struct UnVolatile<volatile U>$/;"	s	namespace:cv::cuda::device::type_traits_detail
UnVolatile	opencv2/cudev/util/detail/type_traits.hpp	/^    template <class U> struct UnVolatile$/;"	s	namespace:cv::cudev::type_traits_detail
UnVolatile	opencv2/cudev/util/detail/type_traits.hpp	/^    template <class U> struct UnVolatile<volatile U&>$/;"	s	namespace:cv::cudev::type_traits_detail
UnVolatile	opencv2/cudev/util/detail/type_traits.hpp	/^    template <class U> struct UnVolatile<volatile U>$/;"	s	namespace:cv::cudev::type_traits_detail
UnaryNegate	opencv2/cudev/functional/functional.hpp	/^template <class Predicate> struct UnaryNegate : unary_function<typename Predicate::argument_type, typename Predicate::result_type>$/;"	s	namespace:cv::cudev
UnaryReadWriteTraits	opencv2/core/cuda/detail/transform_detail.hpp	/^        template <typename T, typename D, int shift> struct UnaryReadWriteTraits$/;"	s	namespace:cv::cuda::device::transform_detail
UnaryTransformPtr	opencv2/cudev/ptr2d/transform.hpp	/^template <class SrcPtr, class Op> struct UnaryTransformPtr$/;"	s	namespace:cv::cudev
UnaryTransformPtrSz	opencv2/cudev/ptr2d/transform.hpp	/^template <class SrcPtr, class Op> struct UnaryTransformPtrSz : UnaryTransformPtr<SrcPtr, Op>$/;"	s	namespace:cv::cudev
UnaryTupleAdapter	opencv2/cudev/functional/tuple_adapter.hpp	/^template <class Op, int n> struct UnaryTupleAdapter$/;"	s	namespace:cv::cudev
Uncompressed_NV12	opencv2/cudacodec.hpp	/^    Uncompressed_NV12   = (('N'<<24)|('V'<<16)|('1'<<8)|('2')),   \/\/!< Y,UV  (4:2:0)$/;"	e	enum:cv::cudacodec::Codec
Uncompressed_UYVY	opencv2/cudacodec.hpp	/^    Uncompressed_UYVY   = (('U'<<24)|('Y'<<16)|('V'<<8)|('Y'))    \/\/!< UYVY (4:2:2)$/;"	e	enum:cv::cudacodec::Codec
Uncompressed_YUV420	opencv2/cudacodec.hpp	/^    Uncompressed_YUV420 = (('I'<<24)|('Y'<<16)|('U'<<8)|('V')),   \/\/!< Y,U,V (4:2:0)$/;"	e	enum:cv::cudacodec::Codec
Uncompressed_YUYV	opencv2/cudacodec.hpp	/^    Uncompressed_YUYV   = (('Y'<<24)|('U'<<16)|('Y'<<8)|('V')),   \/\/!< YUYV\/YUY2 (4:2:2)$/;"	e	enum:cv::cudacodec::Codec
Uncompressed_YV12	opencv2/cudacodec.hpp	/^    Uncompressed_YV12   = (('Y'<<24)|('V'<<16)|('1'<<8)|('2')),   \/\/!< Y,V,U (4:2:0)$/;"	e	enum:cv::cudacodec::Codec
UndistortTypes	opencv2/imgproc.hpp	/^enum UndistortTypes {$/;"	g	namespace:cv
UniqueRandom	opencv2/flann/random.h	/^    UniqueRandom(int n)$/;"	f	class:cvflann::UniqueRandom
UniqueRandom	opencv2/flann/random.h	/^class UniqueRandom$/;"	c	namespace:cvflann
UniqueResultSet	opencv2/flann/result_set.h	/^    UniqueResultSet() :$/;"	f	class:cvflann::UniqueResultSet
UniqueResultSet	opencv2/flann/result_set.h	/^class UniqueResultSet : public ResultSet<DistanceType>$/;"	c	namespace:cvflann
UnqualifiedType	opencv2/core/cuda/type_traits.hpp	/^        typedef typename type_traits_detail::UnVolatile<typename type_traits_detail::UnConst<T>::type>::type UnqualifiedType;$/;"	t	struct:cv::cuda::device::TypeTraits
Unroll	opencv2/core/cuda/detail/reduce.hpp	/^        struct Unroll$/;"	s	namespace:cv::cuda::device::reduce_detail
Unroll	opencv2/core/cuda/detail/reduce.hpp	/^        struct Unroll<0, Pointer, Reference, Op>$/;"	s	namespace:cv::cuda::device::reduce_detail
Unroll	opencv2/core/cuda/detail/reduce_key_val.hpp	/^        struct Unroll$/;"	s	namespace:cv::cuda::device::reduce_key_val_detail
Unroll	opencv2/core/cuda/detail/reduce_key_val.hpp	/^        struct Unroll<0, KP, KR, VP, VR, Cmp>$/;"	s	namespace:cv::cuda::device::reduce_key_val_detail
Unroll	opencv2/cudev/block/detail/reduce.hpp	/^    template <int I, typename Pointer, typename Reference, class Op> struct Unroll$/;"	s	namespace:cv::cudev::block_reduce_detail
Unroll	opencv2/cudev/block/detail/reduce.hpp	/^    template <typename Pointer, typename Reference, class Op> struct Unroll<0, Pointer, Reference, Op>$/;"	s	namespace:cv::cudev::block_reduce_detail
Unroll	opencv2/cudev/block/detail/reduce_key_val.hpp	/^    template <class KP, class KR, class VP, class VR, class Cmp> struct Unroll<0, KP, KR, VP, VR, Cmp>$/;"	s	namespace:cv::cudev::block_reduce_key_val_detail
Unroll	opencv2/cudev/block/detail/reduce_key_val.hpp	/^    template <int I, class KP, class KR, class VP, class VR, class Cmp> struct Unroll$/;"	s	namespace:cv::cudev::block_reduce_key_val_detail
Unroll	opencv2/cudev/grid/detail/copy.hpp	/^    template <> struct Unroll<0>$/;"	s	namespace:cv::cudev::grid_copy_detail
Unroll	opencv2/cudev/grid/detail/copy.hpp	/^    template <int count> struct Unroll$/;"	s	namespace:cv::cudev::grid_copy_detail
Unroll	opencv2/cudev/grid/detail/reduce.hpp	/^    template <> struct Unroll<1>$/;"	s	namespace:cv::cudev::grid_reduce_detail
Unroll	opencv2/cudev/grid/detail/reduce.hpp	/^    template <> struct Unroll<2>$/;"	s	namespace:cv::cudev::grid_reduce_detail
Unroll	opencv2/cudev/grid/detail/reduce.hpp	/^    template <> struct Unroll<3>$/;"	s	namespace:cv::cudev::grid_reduce_detail
Unroll	opencv2/cudev/grid/detail/reduce.hpp	/^    template <> struct Unroll<4>$/;"	s	namespace:cv::cudev::grid_reduce_detail
Unroll	opencv2/cudev/grid/detail/transform.hpp	/^    template <> struct Unroll<0>$/;"	s	namespace:cv::cudev::grid_transform_detail
Unroll	opencv2/cudev/grid/detail/transform.hpp	/^    template <int count> struct Unroll$/;"	s	namespace:cv::cudev::grid_transform_detail
UnrollVecDiffCached	opencv2/core/cuda/detail/vec_distance_detail.hpp	/^        template <int THREAD_DIM, int N> struct UnrollVecDiffCached$/;"	s	namespace:cv::cuda::device::vec_distance_detail
UnrollVecDiffCached	opencv2/core/cuda/detail/vec_distance_detail.hpp	/^        template <int THREAD_DIM> struct UnrollVecDiffCached<THREAD_DIM, 0>$/;"	s	namespace:cv::cuda::device::vec_distance_detail
Unsafe	5/sun/misc/Unsafe.h	/^class sun::misc::Unsafe : public ::java::lang::Object$/;"	c	class:sun::misc
UntypedMatrix	opencv2/flann/matrix.h	/^    UntypedMatrix(void* data_, long rows_, long cols_) :$/;"	f	class:cvflann::UntypedMatrix
UntypedMatrix	opencv2/flann/matrix.h	/^class UntypedMatrix$/;"	c	namespace:cvflann
VADisplay	opencv2/core/va_intel.hpp	/^    typedef void* VADisplay;$/;"	t
VALUE	opencv2/cudev/util/type_traits.hpp	/^    enum { value = Log2<N, (CURRENT_VAL >> 1), COUNT + 1>::VALUE };$/;"	e	class:cv::cudev::Log2::__anon481::COUNT
VALUE_EXPECTED	opencv2/core/persistence.hpp	/^        VALUE_EXPECTED = 1,$/;"	e	enum:cv::FileStorage::__anon313
VAR_CATEGORICAL	opencv2/ml.hpp	/^    VAR_CATEGORICAL  =1  \/\/!< categorical variables$/;"	e	enum:cv::ml::VariableTypes
VAR_NUMERICAL	opencv2/ml.hpp	/^    VAR_NUMERICAL    =0, \/\/!< same as VAR_ORDERED$/;"	e	enum:cv::ml::VariableTypes
VAR_ORDERED	opencv2/ml.hpp	/^    VAR_ORDERED      =0, \/\/!< ordered variables$/;"	e	enum:cv::ml::VariableTypes
VASurfaceID	opencv2/core/va_intel.hpp	/^    typedef unsigned int VASurfaceID;$/;"	t
VC1	opencv2/cudacodec.hpp	/^    VC1,$/;"	e	enum:cv::cudacodec::Codec
VENDOR_AMD	opencv2/core/ocl.hpp	/^        VENDOR_AMD=1,$/;"	e	enum:cv::ocl::Device::__anon322
VENDOR_INTEL	opencv2/core/ocl.hpp	/^        VENDOR_INTEL=2,$/;"	e	enum:cv::ocl::Device::__anon322
VENDOR_NVIDIA	opencv2/core/ocl.hpp	/^        VENDOR_NVIDIA=3$/;"	e	enum:cv::ocl::Device::__anon322
VIDEOWRITER_PROP_FRAMEBYTES	opencv2/videoio.hpp	/^  VIDEOWRITER_PROP_FRAMEBYTES = 2, \/\/!< (Read-only): Size of just encoded video frame. Note that the encoding order may be different from representation order.$/;"	e	enum:cv::VideoWriterProperties
VIDEOWRITER_PROP_NSTRIPES	opencv2/videoio.hpp	/^  VIDEOWRITER_PROP_NSTRIPES = 3    \/\/!< Number of stripes for parallel encoding. -1 for auto detection.$/;"	e	enum:cv::VideoWriterProperties
VIDEOWRITER_PROP_QUALITY	opencv2/videoio.hpp	/^  VIDEOWRITER_PROP_QUALITY = 1,    \/\/!< Current quality (0..100%) of the encoded videostream. Can be adjusted dynamically in some codecs.$/;"	e	enum:cv::VideoWriterProperties
V_RegTrait128	opencv2/core/hal/intrin.hpp	/^template <> struct V_RegTrait128<double> {$/;"	s	namespace:cv
V_RegTrait128	opencv2/core/hal/intrin.hpp	/^template <> struct V_RegTrait128<float> {$/;"	s	namespace:cv
V_RegTrait128	opencv2/core/hal/intrin.hpp	/^template <> struct V_RegTrait128<int64> {$/;"	s	namespace:cv
V_RegTrait128	opencv2/core/hal/intrin.hpp	/^template <> struct V_RegTrait128<int> {$/;"	s	namespace:cv
V_RegTrait128	opencv2/core/hal/intrin.hpp	/^template <> struct V_RegTrait128<schar> {$/;"	s	namespace:cv
V_RegTrait128	opencv2/core/hal/intrin.hpp	/^template <> struct V_RegTrait128<short> {$/;"	s	namespace:cv
V_RegTrait128	opencv2/core/hal/intrin.hpp	/^template <> struct V_RegTrait128<uchar> {$/;"	s	namespace:cv
V_RegTrait128	opencv2/core/hal/intrin.hpp	/^template <> struct V_RegTrait128<uint64> {$/;"	s	namespace:cv
V_RegTrait128	opencv2/core/hal/intrin.hpp	/^template <> struct V_RegTrait128<unsigned> {$/;"	s	namespace:cv
V_RegTrait128	opencv2/core/hal/intrin.hpp	/^template <> struct V_RegTrait128<ushort> {$/;"	s	namespace:cv
V_SIMD128Traits	opencv2/core/hal/intrin.hpp	/^template <typename T> struct V_SIMD128Traits$/;"	s	namespace:cv
V_TypeTraits	opencv2/core/hal/intrin.hpp	/^template<> struct V_TypeTraits<double>$/;"	s	namespace:cv
V_TypeTraits	opencv2/core/hal/intrin.hpp	/^template<> struct V_TypeTraits<float>$/;"	s	namespace:cv
V_TypeTraits	opencv2/core/hal/intrin.hpp	/^template<> struct V_TypeTraits<int64>$/;"	s	namespace:cv
V_TypeTraits	opencv2/core/hal/intrin.hpp	/^template<> struct V_TypeTraits<int>$/;"	s	namespace:cv
V_TypeTraits	opencv2/core/hal/intrin.hpp	/^template<> struct V_TypeTraits<schar>$/;"	s	namespace:cv
V_TypeTraits	opencv2/core/hal/intrin.hpp	/^template<> struct V_TypeTraits<short>$/;"	s	namespace:cv
V_TypeTraits	opencv2/core/hal/intrin.hpp	/^template<> struct V_TypeTraits<uchar>$/;"	s	namespace:cv
V_TypeTraits	opencv2/core/hal/intrin.hpp	/^template<> struct V_TypeTraits<uint64>$/;"	s	namespace:cv
V_TypeTraits	opencv2/core/hal/intrin.hpp	/^template<> struct V_TypeTraits<unsigned>$/;"	s	namespace:cv
V_TypeTraits	opencv2/core/hal/intrin.hpp	/^template<> struct V_TypeTraits<ushort>$/;"	s	namespace:cv
V_TypeTraits	opencv2/core/hal/intrin.hpp	/^template<typename _Tp> struct V_TypeTraits$/;"	s	namespace:cv
ValueType	opencv2/core/base.hpp	/^    typedef unsigned char ValueType;$/;"	t	struct:cv::Hamming
ValueType	opencv2/features2d.hpp	/^    typedef T ValueType;$/;"	t	struct:cv::L1
ValueType	opencv2/features2d.hpp	/^    typedef T ValueType;$/;"	t	struct:cv::L2
ValueType	opencv2/features2d.hpp	/^    typedef T ValueType;$/;"	t	struct:cv::SL2
VariableTypes	opencv2/ml.hpp	/^enum VariableTypes$/;"	g	namespace:cv::ml
Vec	opencv2/core/matx.hpp	/^Vec<_Tp, cn>::Vec() {}$/;"	f	class:cv::Vec
Vec	opencv2/core/matx.hpp	/^Vec<_Tp, cn>::Vec(_Tp v0)$/;"	f	class:cv::Vec
Vec	opencv2/core/matx.hpp	/^Vec<_Tp, cn>::Vec(_Tp v0, _Tp v1)$/;"	f	class:cv::Vec
Vec	opencv2/core/matx.hpp	/^Vec<_Tp, cn>::Vec(_Tp v0, _Tp v1, _Tp v2)$/;"	f	class:cv::Vec
Vec	opencv2/core/matx.hpp	/^Vec<_Tp, cn>::Vec(_Tp v0, _Tp v1, _Tp v2, _Tp v3)$/;"	f	class:cv::Vec
Vec	opencv2/core/matx.hpp	/^Vec<_Tp, cn>::Vec(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4)$/;"	f	class:cv::Vec
Vec	opencv2/core/matx.hpp	/^Vec<_Tp, cn>::Vec(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5)$/;"	f	class:cv::Vec
Vec	opencv2/core/matx.hpp	/^Vec<_Tp, cn>::Vec(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5, _Tp v6)$/;"	f	class:cv::Vec
Vec	opencv2/core/matx.hpp	/^Vec<_Tp, cn>::Vec(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5, _Tp v6, _Tp v7)$/;"	f	class:cv::Vec
Vec	opencv2/core/matx.hpp	/^Vec<_Tp, cn>::Vec(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5, _Tp v6, _Tp v7, _Tp v8)$/;"	f	class:cv::Vec
Vec	opencv2/core/matx.hpp	/^Vec<_Tp, cn>::Vec(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5, _Tp v6, _Tp v7, _Tp v8, _Tp v9)$/;"	f	class:cv::Vec
Vec	opencv2/core/matx.hpp	/^Vec<_Tp, cn>::Vec(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4, _Tp v5, _Tp v6, _Tp v7, _Tp v8, _Tp v9, _Tp v10, _Tp v11, _Tp v12, _Tp v13)$/;"	f	class:cv::Vec
Vec	opencv2/core/matx.hpp	/^Vec<_Tp, cn>::Vec(const Matx<_Tp, cn, 1>& a, _T2 alpha, Matx_ScaleOp op)$/;"	f	class:cv::Vec
Vec	opencv2/core/matx.hpp	/^Vec<_Tp, cn>::Vec(const Matx<_Tp, cn, 1>& a, const Matx<_Tp, cn, 1>& b, Matx_AddOp op)$/;"	f	class:cv::Vec
Vec	opencv2/core/matx.hpp	/^Vec<_Tp, cn>::Vec(const Matx<_Tp, cn, 1>& a, const Matx<_Tp, cn, 1>& b, Matx_SubOp op)$/;"	f	class:cv::Vec
Vec	opencv2/core/matx.hpp	/^Vec<_Tp, cn>::Vec(const Vec<_Tp, cn>& m)$/;"	f	class:cv::Vec
Vec	opencv2/core/matx.hpp	/^Vec<_Tp, cn>::Vec(const _Tp* values)$/;"	f	class:cv::Vec
Vec	opencv2/core/matx.hpp	/^template<typename _Tp, int cn> class Vec : public Matx<_Tp, cn, 1>$/;"	c	namespace:cv
Vec2b	opencv2/core/matx.hpp	/^typedef Vec<uchar, 2> Vec2b;$/;"	t	namespace:cv
Vec2d	opencv2/core/matx.hpp	/^typedef Vec<double, 2> Vec2d;$/;"	t	namespace:cv
Vec2f	opencv2/core/matx.hpp	/^typedef Vec<float, 2> Vec2f;$/;"	t	namespace:cv
Vec2i	opencv2/core/matx.hpp	/^typedef Vec<int, 2> Vec2i;$/;"	t	namespace:cv
Vec2s	opencv2/core/matx.hpp	/^typedef Vec<short, 2> Vec2s;$/;"	t	namespace:cv
Vec2w	opencv2/core/matx.hpp	/^typedef Vec<ushort, 2> Vec2w;$/;"	t	namespace:cv
Vec3	opencv2/core/affine.hpp	/^        typedef Vec<float_type, 3> Vec3;$/;"	t	class:cv::Affine3
Vec3b	opencv2/core/matx.hpp	/^typedef Vec<uchar, 3> Vec3b;$/;"	t	namespace:cv
Vec3d	opencv2/core/matx.hpp	/^typedef Vec<double, 3> Vec3d;$/;"	t	namespace:cv
Vec3f	opencv2/core/matx.hpp	/^typedef Vec<float, 3> Vec3f;$/;"	t	namespace:cv
Vec3i	opencv2/core/matx.hpp	/^typedef Vec<int, 3> Vec3i;$/;"	t	namespace:cv
Vec3s	opencv2/core/matx.hpp	/^typedef Vec<short, 3> Vec3s;$/;"	t	namespace:cv
Vec3w	opencv2/core/matx.hpp	/^typedef Vec<ushort, 3> Vec3w;$/;"	t	namespace:cv
Vec4b	opencv2/core/matx.hpp	/^typedef Vec<uchar, 4> Vec4b;$/;"	t	namespace:cv
Vec4d	opencv2/core/matx.hpp	/^typedef Vec<double, 4> Vec4d;$/;"	t	namespace:cv
Vec4f	opencv2/core/matx.hpp	/^typedef Vec<float, 4> Vec4f;$/;"	t	namespace:cv
Vec4i	opencv2/core/matx.hpp	/^typedef Vec<int, 4> Vec4i;$/;"	t	namespace:cv
Vec4s	opencv2/core/matx.hpp	/^typedef Vec<short, 4> Vec4s;$/;"	t	namespace:cv
Vec4w	opencv2/core/matx.hpp	/^typedef Vec<ushort, 4> Vec4w;$/;"	t	namespace:cv
Vec6d	opencv2/core/matx.hpp	/^typedef Vec<double, 6> Vec6d;$/;"	t	namespace:cv
Vec6f	opencv2/core/matx.hpp	/^typedef Vec<float, 6> Vec6f;$/;"	t	namespace:cv
Vec6i	opencv2/core/matx.hpp	/^typedef Vec<int, 6> Vec6i;$/;"	t	namespace:cv
Vec8i	opencv2/core/matx.hpp	/^typedef Vec<int, 8> Vec8i;$/;"	t	namespace:cv
VecCommaInitializer	opencv2/core/matx.hpp	/^VecCommaInitializer<_Tp, cn>::VecCommaInitializer(Vec<_Tp, cn>* _vec)$/;"	f	class:cv::VecCommaInitializer
VecCommaInitializer	opencv2/core/matx.hpp	/^template<typename _Tp, int m> class VecCommaInitializer : public MatxCommaInitializer<_Tp, m, 1>$/;"	c	namespace:cv
VecDiffCachedCalculator	opencv2/core/cuda/detail/vec_distance_detail.hpp	/^        template <int THREAD_DIM, int MAX_LEN> struct VecDiffCachedCalculator<THREAD_DIM, MAX_LEN, false>$/;"	s	namespace:cv::cuda::device::vec_distance_detail
VecDiffCachedCalculator	opencv2/core/cuda/detail/vec_distance_detail.hpp	/^        template <int THREAD_DIM, int MAX_LEN> struct VecDiffCachedCalculator<THREAD_DIM, MAX_LEN, true>$/;"	s	namespace:cv::cuda::device::vec_distance_detail
VecDiffCachedRegister	opencv2/core/cuda/vec_distance.hpp	/^        template <typename T1> __device__ __forceinline__ VecDiffCachedRegister(const T1* vec1, int len, U* smem, int glob_tid, int tid)$/;"	f	struct:cv::cuda::device::VecDiffCachedRegister
VecDiffCachedRegister	opencv2/core/cuda/vec_distance.hpp	/^    template <int THREAD_DIM, int MAX_LEN, bool LEN_EQ_MAX_LEN, typename U> struct VecDiffCachedRegister$/;"	s	namespace:cv::cuda::device
VecDiffGlobal	opencv2/core/cuda/vec_distance.hpp	/^        explicit __device__ __forceinline__ VecDiffGlobal(const T1* vec1_, int = 0, void* = 0, int = 0, int = 0)$/;"	f	struct:cv::cuda::device::VecDiffGlobal
VecDiffGlobal	opencv2/core/cuda/vec_distance.hpp	/^    template <int THREAD_DIM, typename T1> struct VecDiffGlobal$/;"	s	namespace:cv::cuda::device
VecReaderProxy	opencv2/core/persistence.hpp	/^        VecReaderProxy( FileNodeIterator* _it ) : it(_it) {}$/;"	f	class:cv::internal::VecReaderProxy
VecReaderProxy	opencv2/core/persistence.hpp	/^    template<typename _Tp, int numflag> class VecReaderProxy$/;"	c	namespace:cv::internal
VecReaderProxy	opencv2/core/persistence.hpp	/^    template<typename _Tp> class VecReaderProxy<_Tp, 1>$/;"	c	namespace:cv::internal
VecTraits	opencv2/core/cuda/vec_traits.hpp	/^    template<> struct VecTraits<char1>$/;"	s	namespace:cv::cuda::device
VecTraits	opencv2/core/cuda/vec_traits.hpp	/^    template<> struct VecTraits<char2>$/;"	s	namespace:cv::cuda::device
VecTraits	opencv2/core/cuda/vec_traits.hpp	/^    template<> struct VecTraits<char3>$/;"	s	namespace:cv::cuda::device
VecTraits	opencv2/core/cuda/vec_traits.hpp	/^    template<> struct VecTraits<char4>$/;"	s	namespace:cv::cuda::device
VecTraits	opencv2/core/cuda/vec_traits.hpp	/^    template<> struct VecTraits<char8>$/;"	s	namespace:cv::cuda::device
VecTraits	opencv2/core/cuda/vec_traits.hpp	/^    template<> struct VecTraits<char>$/;"	s	namespace:cv::cuda::device
VecTraits	opencv2/core/cuda/vec_traits.hpp	/^    template<> struct VecTraits<schar>$/;"	s	namespace:cv::cuda::device
VecTraits	opencv2/cudev/util/vec_traits.hpp	/^template<> struct VecTraits<char1>$/;"	s	namespace:cv::cudev
VecTraits	opencv2/cudev/util/vec_traits.hpp	/^template<> struct VecTraits<char2>$/;"	s	namespace:cv::cudev
VecTraits	opencv2/cudev/util/vec_traits.hpp	/^template<> struct VecTraits<char3>$/;"	s	namespace:cv::cudev
VecTraits	opencv2/cudev/util/vec_traits.hpp	/^template<> struct VecTraits<char4>$/;"	s	namespace:cv::cudev
VecTraits	opencv2/cudev/util/vec_traits.hpp	/^template<> struct VecTraits<schar>$/;"	s	namespace:cv::cudev
VecWriterProxy	opencv2/core/persistence.hpp	/^        VecWriterProxy( FileStorage* _fs ) : fs(_fs) {}$/;"	f	class:cv::internal::VecWriterProxy
VecWriterProxy	opencv2/core/persistence.hpp	/^    template<typename _Tp, int numflag> class VecWriterProxy$/;"	c	namespace:cv::internal
VecWriterProxy	opencv2/core/persistence.hpp	/^    template<typename _Tp> class VecWriterProxy<_Tp, 1>$/;"	c	namespace:cv::internal
Vertex	opencv2/imgproc.hpp	/^    struct CV_EXPORTS Vertex$/;"	s	class:cv::Subdiv2D
VideoCapture	opencv2/videoio.hpp	/^class CV_EXPORTS_W VideoCapture$/;"	c	namespace:cv
VideoCaptureAPIs	opencv2/videoio.hpp	/^enum VideoCaptureAPIs {$/;"	g	namespace:cv
VideoCaptureModes	opencv2/videoio.hpp	/^enum VideoCaptureModes {$/;"	g	namespace:cv
VideoCaptureProperties	opencv2/videoio.hpp	/^enum VideoCaptureProperties {$/;"	g	namespace:cv
VideoFileSource	opencv2/videostab/frame_source.hpp	/^class CV_EXPORTS VideoFileSource : public IFrameSource$/;"	c	namespace:cv::videostab
VideoReader	opencv2/cudacodec.hpp	/^class CV_EXPORTS VideoReader$/;"	c	namespace:cv::cudacodec
VideoWriter	opencv2/cudacodec.hpp	/^class CV_EXPORTS VideoWriter$/;"	c	namespace:cv::cudacodec
VideoWriter	opencv2/videoio.hpp	/^class CV_EXPORTS_W VideoWriter$/;"	c	namespace:cv
VideoWriterProperties	opencv2/videoio.hpp	/^enum VideoWriterProperties {$/;"	g	namespace:cv
View	opencv2/core/wimage.hpp	/^WImageView<T> WImage<T>::View(int c, int r, int width, int height) {$/;"	f	class:cv::WImage
View	opencv2/core/wimage.hpp	/^WImageViewC<T, C> WImageC<T, C>::View(int c, int r, int width, int height) {$/;"	f	class:cv::WImageC
VoronoiSeamFinder	opencv2/stitching/detail/seam_finders.hpp	/^class CV_EXPORTS VoronoiSeamFinder : public PairwiseSeamFinder$/;"	c	namespace:cv::detail
WARP_FILL_OUTLIERS	opencv2/imgproc.hpp	/^    WARP_FILL_OUTLIERS   = 8,$/;"	e	enum:cv::InterpolationFlags
WARP_INVERSE_MAP	opencv2/imgproc.hpp	/^    WARP_INVERSE_MAP     = 16$/;"	e	enum:cv::InterpolationFlags
WARP_SHUFFLE_FUNCTIONS	opencv2/core/cuda.hpp	/^    WARP_SHUFFLE_FUNCTIONS = FEATURE_SET_COMPUTE_30,$/;"	e	enum:cv::cuda::FeatureSet
WARP_SIZE	opencv2/core/cuda/warp.hpp	/^            WARP_SIZE     = 1 << LOG_WARP_SIZE,$/;"	e	enum:cv::cuda::device::Warp::__anon260
WARP_SIZE	opencv2/cudev/warp/warp.hpp	/^    WARP_SIZE     = 1 << LOG_WARP_SIZE$/;"	e	enum:cv::cudev::__anon393
WAVE_CORRECT_HORIZ	opencv2/stitching/detail/motion_estimators.hpp	/^    WAVE_CORRECT_HORIZ,$/;"	e	enum:cv::detail::WaveCorrectKind
WAVE_CORRECT_VERT	opencv2/stitching/detail/motion_estimators.hpp	/^    WAVE_CORRECT_VERT$/;"	e	enum:cv::detail::WaveCorrectKind
WIN32_LEAN_AND_MEAN	opencv2/cudalegacy/NCV.hpp	49;"	d
WINDOW_AUTOSIZE	opencv2/highgui.hpp	/^       WINDOW_AUTOSIZE   = 0x00000001, \/\/!< the user cannot resize the window, the size is constrainted by the image displayed.$/;"	e	enum:cv::WindowFlags
WINDOW_FREERATIO	opencv2/highgui.hpp	/^       WINDOW_FREERATIO  = 0x00000100, \/\/!< the image expends as much as it can (no ratio constraint).$/;"	e	enum:cv::WindowFlags
WINDOW_FULLSCREEN	opencv2/highgui.hpp	/^       WINDOW_FULLSCREEN = 1,          \/\/!< change the window to fullscreen.$/;"	e	enum:cv::WindowFlags
WINDOW_GUI_EXPANDED	opencv2/highgui.hpp	/^       WINDOW_GUI_EXPANDED=0x00000000, \/\/!< status bar and tool bar$/;"	e	enum:cv::WindowFlags
WINDOW_GUI_NORMAL	opencv2/highgui.hpp	/^       WINDOW_GUI_NORMAL = 0x00000010, \/\/!< old fashious way$/;"	e	enum:cv::WindowFlags
WINDOW_KEEPRATIO	opencv2/highgui.hpp	/^       WINDOW_KEEPRATIO  = 0x00000000, \/\/!< the ratio of the image is respected.$/;"	e	enum:cv::WindowFlags
WINDOW_NORMAL	opencv2/highgui.hpp	/^       WINDOW_NORMAL     = 0x00000000, \/\/!< the user can resize the window (no constraint) \/ also use to switch a fullscreen window to a normal size.$/;"	e	enum:cv::WindowFlags
WINDOW_OPENGL	opencv2/highgui.hpp	/^       WINDOW_OPENGL     = 0x00001000, \/\/!< window with opengl support.$/;"	e	enum:cv::WindowFlags
WImage	opencv2/core/wimage.hpp	/^    explicit WImage(IplImage* img) : image_(img) {$/;"	f	class:cv::WImage
WImage	opencv2/core/wimage.hpp	/^class WImage$/;"	c	namespace:cv
WImage1_16s	opencv2/core/wimage.hpp	/^typedef WImageC<short, 1>        WImage1_16s;$/;"	t	namespace:cv
WImage1_16u	opencv2/core/wimage.hpp	/^typedef WImageC<ushort, 1>        WImage1_16u;$/;"	t	namespace:cv
WImage1_b	opencv2/core/wimage.hpp	/^typedef WImageC<uchar, 1>        WImage1_b;$/;"	t	namespace:cv
WImage1_f	opencv2/core/wimage.hpp	/^typedef WImageC<float, 1>        WImage1_f;$/;"	t	namespace:cv
WImage3_16s	opencv2/core/wimage.hpp	/^typedef WImageC<short, 3>        WImage3_16s;$/;"	t	namespace:cv
WImage3_16u	opencv2/core/wimage.hpp	/^typedef WImageC<ushort, 3>        WImage3_16u;$/;"	t	namespace:cv
WImage3_b	opencv2/core/wimage.hpp	/^typedef WImageC<uchar, 3>        WImage3_b;$/;"	t	namespace:cv
WImage3_f	opencv2/core/wimage.hpp	/^typedef WImageC<float, 3>        WImage3_f;$/;"	t	namespace:cv
WImageBuffer	opencv2/core/wimage.hpp	/^    WImageBuffer() : WImage<T>(0) {}$/;"	f	class:cv::WImageBuffer
WImageBuffer	opencv2/core/wimage.hpp	/^    WImageBuffer(int width, int height, int nchannels) : WImage<T>(0) {$/;"	f	class:cv::WImageBuffer
WImageBuffer	opencv2/core/wimage.hpp	/^    explicit WImageBuffer(IplImage* img) : WImage<T>(img) {}$/;"	f	class:cv::WImageBuffer
WImageBuffer	opencv2/core/wimage.hpp	/^class WImageBuffer : public WImage<T>$/;"	c	namespace:cv
WImageBuffer1_16s	opencv2/core/wimage.hpp	/^typedef WImageBufferC<short, 1>  WImageBuffer1_16s;$/;"	t	namespace:cv
WImageBuffer1_16u	opencv2/core/wimage.hpp	/^typedef WImageBufferC<ushort, 1>  WImageBuffer1_16u;$/;"	t	namespace:cv
WImageBuffer1_b	opencv2/core/wimage.hpp	/^typedef WImageBufferC<uchar, 1>  WImageBuffer1_b;$/;"	t	namespace:cv
WImageBuffer1_f	opencv2/core/wimage.hpp	/^typedef WImageBufferC<float, 1>  WImageBuffer1_f;$/;"	t	namespace:cv
WImageBuffer3_16s	opencv2/core/wimage.hpp	/^typedef WImageBufferC<short, 3>  WImageBuffer3_16s;$/;"	t	namespace:cv
WImageBuffer3_16u	opencv2/core/wimage.hpp	/^typedef WImageBufferC<ushort, 3>  WImageBuffer3_16u;$/;"	t	namespace:cv
WImageBuffer3_b	opencv2/core/wimage.hpp	/^typedef WImageBufferC<uchar, 3>  WImageBuffer3_b;$/;"	t	namespace:cv
WImageBuffer3_f	opencv2/core/wimage.hpp	/^typedef WImageBufferC<float, 3>  WImageBuffer3_f;$/;"	t	namespace:cv
WImageBufferC	opencv2/core/wimage.hpp	/^    WImageBufferC() : WImageC<T, C>(0) {}$/;"	f	class:cv::WImageBufferC
WImageBufferC	opencv2/core/wimage.hpp	/^    WImageBufferC(int width, int height) : WImageC<T, C>(0) {$/;"	f	class:cv::WImageBufferC
WImageBufferC	opencv2/core/wimage.hpp	/^    explicit WImageBufferC(IplImage* img) : WImageC<T, C>(img) {}$/;"	f	class:cv::WImageBufferC
WImageBufferC	opencv2/core/wimage.hpp	/^class WImageBufferC : public WImageC<T, C>$/;"	c	namespace:cv
WImageBuffer_16s	opencv2/core/wimage.hpp	/^typedef WImageBuffer<short>      WImageBuffer_16s;$/;"	t	namespace:cv
WImageBuffer_16u	opencv2/core/wimage.hpp	/^typedef WImageBuffer<ushort>      WImageBuffer_16u;$/;"	t	namespace:cv
WImageBuffer_b	opencv2/core/wimage.hpp	/^typedef WImageBuffer<uchar>      WImageBuffer_b;$/;"	t	namespace:cv
WImageBuffer_f	opencv2/core/wimage.hpp	/^typedef WImageBuffer<float>      WImageBuffer_f;$/;"	t	namespace:cv
WImageC	opencv2/core/wimage.hpp	/^    explicit WImageC(IplImage* img) : WImage<T>(img) {$/;"	f	class:cv::WImageC
WImageC	opencv2/core/wimage.hpp	/^class WImageC : public WImage<T>$/;"	c	namespace:cv
WImageView	opencv2/core/wimage.hpp	/^    WImageView(IplImage* img) : WImage<T>(img) {}$/;"	f	class:cv::WImageView
WImageView	opencv2/core/wimage.hpp	/^    WImageView(const WImage<T>& img) : WImage<T>(0) {$/;"	f	class:cv::WImageView
WImageView	opencv2/core/wimage.hpp	/^WImageView<T>::WImageView(T* data, int width, int height, int nchannels, int width_step)$/;"	f	class:cv::WImageView
WImageView	opencv2/core/wimage.hpp	/^WImageView<T>::WImageView(WImage<T>* img, int c, int r, int width, int height)$/;"	f	class:cv::WImageView
WImageView	opencv2/core/wimage.hpp	/^template<typename T> class WImageView : public WImage<T>$/;"	c	namespace:cv
WImageView1_16s	opencv2/core/wimage.hpp	/^typedef WImageViewC<short, 1>    WImageView1_16s;$/;"	t	namespace:cv
WImageView1_16u	opencv2/core/wimage.hpp	/^typedef WImageViewC<ushort, 1>    WImageView1_16u;$/;"	t	namespace:cv
WImageView1_b	opencv2/core/wimage.hpp	/^typedef WImageViewC<uchar, 1>    WImageView1_b;$/;"	t	namespace:cv
WImageView1_f	opencv2/core/wimage.hpp	/^typedef WImageViewC<float, 1>    WImageView1_f;$/;"	t	namespace:cv
WImageView3_16s	opencv2/core/wimage.hpp	/^typedef WImageViewC<short, 3>    WImageView3_16s;$/;"	t	namespace:cv
WImageView3_16u	opencv2/core/wimage.hpp	/^typedef WImageViewC<ushort, 3>    WImageView3_16u;$/;"	t	namespace:cv
WImageView3_b	opencv2/core/wimage.hpp	/^typedef WImageViewC<uchar, 3>    WImageView3_b;$/;"	t	namespace:cv
WImageView3_f	opencv2/core/wimage.hpp	/^typedef WImageViewC<float, 3>    WImageView3_f;$/;"	t	namespace:cv
WImageViewC	opencv2/core/wimage.hpp	/^    WImageViewC(IplImage* img) : WImageC<T, C>(img) {}$/;"	f	class:cv::WImageViewC
WImageViewC	opencv2/core/wimage.hpp	/^    WImageViewC(const WImageC<T, C>& img) : WImageC<T, C>(0) {$/;"	f	class:cv::WImageViewC
WImageViewC	opencv2/core/wimage.hpp	/^    WImageViewC(const WImageViewC<T, C>& img) : WImageC<T, C>(0) {$/;"	f	class:cv::WImageViewC
WImageViewC	opencv2/core/wimage.hpp	/^WImageViewC<T, C>::WImageViewC() : WImageC<T, C>(0) {$/;"	f	class:cv::WImageViewC
WImageViewC	opencv2/core/wimage.hpp	/^WImageViewC<T, C>::WImageViewC(T* data, int width, int height, int width_step)$/;"	f	class:cv::WImageViewC
WImageViewC	opencv2/core/wimage.hpp	/^WImageViewC<T, C>::WImageViewC(WImageC<T, C>* img, int c, int r, int width, int height)$/;"	f	class:cv::WImageViewC
WImageViewC	opencv2/core/wimage.hpp	/^class WImageViewC : public WImageC<T, C>$/;"	c	namespace:cv
WImageView_16s	opencv2/core/wimage.hpp	/^typedef WImageView<short>        WImageView_16s;$/;"	t	namespace:cv
WImageView_16u	opencv2/core/wimage.hpp	/^typedef WImageView<ushort>        WImageView_16u;$/;"	t	namespace:cv
WImageView_b	opencv2/core/wimage.hpp	/^typedef WImageView<uchar>        WImageView_b;$/;"	t	namespace:cv
WImageView_f	opencv2/core/wimage.hpp	/^typedef WImageView<float>        WImageView_f;$/;"	t	namespace:cv
WImage_16s	opencv2/core/wimage.hpp	/^typedef WImage<short>            WImage_16s;$/;"	t	namespace:cv
WImage_16u	opencv2/core/wimage.hpp	/^typedef WImage<ushort>            WImage_16u;$/;"	t	namespace:cv
WImage_b	opencv2/core/wimage.hpp	/^typedef WImage<uchar>            WImage_b;$/;"	t	namespace:cv
WImage_f	opencv2/core/wimage.hpp	/^typedef WImage<float>            WImage_f;$/;"	t	namespace:cv
WND_PROP_ASPECT_RATIO	opencv2/highgui.hpp	/^       WND_PROP_ASPECT_RATIO = 2, \/\/!< window's aspect ration (can be set to WINDOW_FREERATIO or WINDOW_KEEPRATIO).$/;"	e	enum:cv::WindowPropertyFlags
WND_PROP_AUTOSIZE	opencv2/highgui.hpp	/^       WND_PROP_AUTOSIZE     = 1, \/\/!< autosize property      (can be WINDOW_NORMAL or WINDOW_AUTOSIZE).$/;"	e	enum:cv::WindowPropertyFlags
WND_PROP_FULLSCREEN	opencv2/highgui.hpp	/^       WND_PROP_FULLSCREEN   = 0, \/\/!< fullscreen property    (can be WINDOW_NORMAL or WINDOW_FULLSCREEN).$/;"	e	enum:cv::WindowPropertyFlags
WND_PROP_OPENGL	opencv2/highgui.hpp	/^       WND_PROP_OPENGL       = 3, \/\/!< opengl support.$/;"	e	enum:cv::WindowPropertyFlags
WND_PROP_VISIBLE	opencv2/highgui.hpp	/^       WND_PROP_VISIBLE      = 4  \/\/!< checks whether the window exists and is visible$/;"	e	enum:cv::WindowPropertyFlags
WORDSIZE	opencv2/flann/allocator.h	/^const size_t     WORDSIZE=16;$/;"	m	namespace:cvflann
WRITE	opencv2/core/persistence.hpp	/^        WRITE       = 1, \/\/!< value, open the file for writing$/;"	e	enum:cv::FileStorage::Mode
WRITE_BASE64	opencv2/core/persistence.hpp	/^        WRITE_BASE64 = BASE64 | WRITE, \/\/!< flag, enable both WRITE and BASE64$/;"	e	enum:cv::FileStorage::Mode
WRITE_COMBINED	opencv2/core/cuda.hpp	/^    enum AllocType { PAGE_LOCKED = 1, SHARED = 2, WRITE_COMBINED = 4 };$/;"	e	enum:cv::cuda::HostMem::AllocType
WRITE_ONLY	opencv2/core/ocl.hpp	/^    enum { LOCAL=1, READ_ONLY=2, WRITE_ONLY=4, READ_WRITE=6, CONSTANT=8, PTR_ONLY = 16, NO_SIZE=256 };$/;"	e	enum:cv::ocl::KernelArg::__anon323
WRITE_ONLY	opencv2/core/opengl.hpp	/^        WRITE_ONLY = 0x88B9,$/;"	e	enum:cv::ogl::Buffer::Access
WRONG_OBJECT	opencv2/objdetect/detection_based_tracker.hpp	/^            WRONG_OBJECT$/;"	e	enum:cv::DetectionBasedTracker::ObjectStatus
Warp	opencv2/core/cuda/warp.hpp	/^    struct Warp$/;"	s	namespace:cv::cuda::device
Warp	opencv2/cudev/warp/warp.hpp	/^struct Warp$/;"	s	namespace:cv::cudev
WarpOptimized	opencv2/core/cuda/detail/reduce.hpp	/^        template <unsigned int N> struct WarpOptimized$/;"	s	namespace:cv::cuda::device::reduce_detail
WarpOptimized	opencv2/core/cuda/detail/reduce_key_val.hpp	/^        template <unsigned int N> struct WarpOptimized$/;"	s	namespace:cv::cuda::device::reduce_key_val_detail
WarpOptimized	opencv2/cudev/block/detail/reduce.hpp	/^    template <int N> struct WarpOptimized$/;"	s	namespace:cv::cudev::block_reduce_detail
WarpOptimized	opencv2/cudev/block/detail/reduce_key_val.hpp	/^    template <int N> struct WarpOptimized$/;"	s	namespace:cv::cudev::block_reduce_key_val_detail
WarpReductor	opencv2/cudev/warp/detail/reduce.hpp	/^    struct WarpReductor$/;"	s	namespace:cv::cudev::warp_reduce_detail
WarpReductor	opencv2/cudev/warp/detail/reduce_key_val.hpp	/^    struct WarpReductor$/;"	s	namespace:cv::cudev::warp_reduce_key_val_detail
WarpScan	opencv2/core/cuda/scan.hpp	/^        __device__ __forceinline__ WarpScan() {}$/;"	f	struct:cv::cuda::device::WarpScan
WarpScan	opencv2/core/cuda/scan.hpp	/^        __device__ __forceinline__ WarpScan(const WarpScan& other) { (void)other; }$/;"	f	struct:cv::cuda::device::WarpScan
WarpScan	opencv2/core/cuda/scan.hpp	/^    template <ScanKind Kind, typename T, typename F> struct WarpScan$/;"	s	namespace:cv::cuda::device
WarpScanNoComp	opencv2/core/cuda/scan.hpp	/^        __device__ __forceinline__ WarpScanNoComp() {}$/;"	f	struct:cv::cuda::device::WarpScanNoComp
WarpScanNoComp	opencv2/core/cuda/scan.hpp	/^        __device__ __forceinline__ WarpScanNoComp(const WarpScanNoComp& other) { (void)other; }$/;"	f	struct:cv::cuda::device::WarpScanNoComp
WarpScanNoComp	opencv2/core/cuda/scan.hpp	/^    template <ScanKind Kind , typename T, typename F> struct WarpScanNoComp$/;"	s	namespace:cv::cuda::device
WarperCreator	opencv2/stitching/warpers.hpp	/^class WarperCreator$/;"	c	namespace:cv
WaveCorrectKind	opencv2/stitching/detail/motion_estimators.hpp	/^enum WaveCorrectKind$/;"	g	namespace:cv::detail
WeightingDeblurer	opencv2/videostab/deblurring.hpp	/^class CV_EXPORTS WeightingDeblurer : public DeblurerBase$/;"	c	namespace:cv::videostab
Width	opencv2/core/wimage.hpp	/^    int Width() const {return image_->width; }$/;"	f	class:cv::WImage
WidthStep	opencv2/core/wimage.hpp	/^    int WidthStep() const {return image_->widthStep; }$/;"	f	class:cv::WImage
WindowFlags	opencv2/highgui.hpp	/^enum WindowFlags {$/;"	g	namespace:cv
WindowPropertyFlags	opencv2/highgui.hpp	/^enum WindowPropertyFlags {$/;"	g	namespace:cv
WithOutMask	opencv2/core/cuda/utility.hpp	/^        __host__ __device__ __forceinline__ WithOutMask(){}$/;"	f	struct:cv::cuda::device::WithOutMask
WithOutMask	opencv2/core/cuda/utility.hpp	/^        __host__ __device__ __forceinline__ WithOutMask(const WithOutMask&){}$/;"	f	struct:cv::cuda::device::WithOutMask
WithOutMask	opencv2/core/cuda/utility.hpp	/^    struct WithOutMask$/;"	s	namespace:cv::cuda::device
WithOutMask	opencv2/cudev/ptr2d/mask.hpp	/^struct WithOutMask$/;"	s	namespace:cv::cudev
WobbleSuppressorBase	opencv2/videostab/wobble_suppression.hpp	/^class CV_EXPORTS WobbleSuppressorBase$/;"	c	namespace:cv::videostab
WriteOnly	opencv2/core/ocl.hpp	/^    static KernelArg WriteOnly(const UMat& m, int wscale=1, int iwscale=1)$/;"	f	class:cv::ocl::KernelArg
WriteOnlyNoSize	opencv2/core/ocl.hpp	/^    static KernelArg WriteOnlyNoSize(const UMat& m, int wscale=1, int iwscale=1)$/;"	f	class:cv::ocl::KernelArg
WriteStructContext	opencv2/core/persistence.hpp	/^    class CV_EXPORTS WriteStructContext$/;"	c	namespace:cv::internal
XYZ2RGB	opencv2/core/cuda/detail/color_detail.hpp	/^            __host__ __device__ __forceinline__ XYZ2RGB() {}$/;"	f	struct:cv::cuda::device::color_detail::XYZ2RGB
XYZ2RGB	opencv2/core/cuda/detail/color_detail.hpp	/^            __host__ __device__ __forceinline__ XYZ2RGB(const XYZ2RGB&) {}$/;"	f	struct:cv::cuda::device::color_detail::XYZ2RGB
XYZ2RGB	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx> struct XYZ2RGB<uchar, 4, 4, bidx> : unary_function<uint, uint>$/;"	s	namespace:cv::cuda::device::color_detail
XYZ2RGB	opencv2/core/cuda/detail/color_detail.hpp	/^        template <typename T, int scn, int dcn, int bidx> struct XYZ2RGB$/;"	s	namespace:cv::cuda::device::color_detail
XYZ2RGB	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <int scn, int dcn, int bidx> struct XYZ2RGB<float, scn, dcn, bidx>$/;"	s	namespace:cv::cudev::color_cvt_detail
XYZ2RGB	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <typename T, int scn, int dcn, int bidx> struct XYZ2RGB$/;"	s	namespace:cv::cudev::color_cvt_detail
XYZ2RGBConvert	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx, typename T, typename D> static __device__ __forceinline__ void XYZ2RGBConvert(const T& src, D* dst)$/;"	f	namespace:cv::cuda::device::color_detail
XYZ2RGBConvert	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx, typename T> static __device__ __forceinline__ void XYZ2RGBConvert(const T& src, float* dst)$/;"	f	namespace:cv::cuda::device::color_detail
XYZ2RGBConvert	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx> static __device__ __forceinline__ uint XYZ2RGBConvert(uint src)$/;"	f	namespace:cv::cuda::device::color_detail
X_ROW	opencv2/cudafeatures2d.hpp	/^        X_ROW = 0,$/;"	e	enum:cv::cuda::ORB::__anon92
YCrCb2RGB	opencv2/core/cuda/detail/color_detail.hpp	/^            __host__ __device__ __forceinline__ YCrCb2RGB() {}$/;"	f	struct:cv::cuda::device::color_detail::YCrCb2RGB
YCrCb2RGB	opencv2/core/cuda/detail/color_detail.hpp	/^            __host__ __device__ __forceinline__ YCrCb2RGB(const YCrCb2RGB&) {}$/;"	f	struct:cv::cuda::device::color_detail::YCrCb2RGB
YCrCb2RGB	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx> struct YCrCb2RGB<uchar, 4, 4, bidx> : unary_function<uint, uint>$/;"	s	namespace:cv::cuda::device::color_detail
YCrCb2RGB	opencv2/core/cuda/detail/color_detail.hpp	/^        template <typename T, int scn, int dcn, int bidx> struct YCrCb2RGB$/;"	s	namespace:cv::cuda::device::color_detail
YCrCb2RGB	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <int scn, int dcn, int bidx> struct YCrCb2RGB<float, scn, dcn, bidx>$/;"	s	namespace:cv::cudev::color_cvt_detail
YCrCb2RGB	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <typename T, int scn, int dcn, int bidx> struct YCrCb2RGB$/;"	s	namespace:cv::cudev::color_cvt_detail
YCrCb2RGBConvert	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx, typename T, typename D> static __device__ void YCrCb2RGBConvert(const T& src, D* dst)$/;"	f	namespace:cv::cuda::device::color_detail
YCrCb2RGBConvert	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx, typename T> __device__ __forceinline__ void YCrCb2RGBConvert(const T& src, float* dst)$/;"	f	namespace:cv::cuda::device::color_detail
YCrCb2RGBConvert	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx> static __device__ uint YCrCb2RGBConvert(uint src)$/;"	f	namespace:cv::cuda::device::color_detail
YUV2RGB	opencv2/core/cuda/detail/color_detail.hpp	/^            __host__ __device__ __forceinline__ YUV2RGB() {}$/;"	f	struct:cv::cuda::device::color_detail::YUV2RGB
YUV2RGB	opencv2/core/cuda/detail/color_detail.hpp	/^            __host__ __device__ __forceinline__ YUV2RGB(const YUV2RGB&) {}$/;"	f	struct:cv::cuda::device::color_detail::YUV2RGB
YUV2RGB	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx> struct YUV2RGB<uchar, 4, 4, bidx> : unary_function<uint, uint>$/;"	s	namespace:cv::cuda::device::color_detail
YUV2RGB	opencv2/core/cuda/detail/color_detail.hpp	/^        template <typename T, int scn, int dcn, int bidx> struct YUV2RGB$/;"	s	namespace:cv::cuda::device::color_detail
YUV2RGB	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <int scn, int dcn, int bidx> struct YUV2RGB<float, scn, dcn, bidx>$/;"	s	namespace:cv::cudev::color_cvt_detail
YUV2RGB	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <typename T, int scn, int dcn, int bidx> struct YUV2RGB$/;"	s	namespace:cv::cudev::color_cvt_detail
YUV2RGBConvert	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx, typename T, typename D> static __device__ void YUV2RGBConvert(const T& src, D* dst)$/;"	f	namespace:cv::cuda::device::color_detail
YUV2RGBConvert	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx, typename T> static __device__ __forceinline__ void YUV2RGBConvert(const T& src, float* dst)$/;"	f	namespace:cv::cuda::device::color_detail
YUV2RGBConvert	opencv2/core/cuda/detail/color_detail.hpp	/^        template <int bidx> static __device__ uint YUV2RGBConvert(uint src)$/;"	f	namespace:cv::cuda::device::color_detail
YUV420	opencv2/cudacodec.hpp	/^    YUV420,$/;"	e	enum:cv::cudacodec::ChromaFormat
YUV422	opencv2/cudacodec.hpp	/^    YUV422,$/;"	e	enum:cv::cudacodec::ChromaFormat
YUV444	opencv2/cudacodec.hpp	/^    YUV444$/;"	e	enum:cv::cudacodec::ChromaFormat
Y_ROW	opencv2/cudafeatures2d.hpp	/^        Y_ROW,$/;"	e	enum:cv::cuda::ORB::__anon92
Yes	opencv2/core/cuda/functional.hpp	/^        typedef char Yes;$/;"	t	struct:cv::cuda::device::IsBinaryFunction
Yes	opencv2/core/cuda/functional.hpp	/^        typedef char Yes;$/;"	t	struct:cv::cuda::device::IsUnaryFunction
Yes	opencv2/cudev/functional/functional.hpp	/^    typedef char Yes;$/;"	t	struct:cv::cudev::IsBinaryFunction
Yes	opencv2/cudev/functional/functional.hpp	/^    typedef char Yes;$/;"	t	struct:cv::cudev::IsUnaryFunction
ZeroIterator	opencv2/flann/dist.h	/^struct ZeroIterator$/;"	s	namespace:cvflann
ZipPtr	opencv2/cudev/ptr2d/zip.hpp	/^    __host__ __device__ __forceinline__ ZipPtr() {}$/;"	f	struct:cv::cudev::ZipPtr
ZipPtr	opencv2/cudev/ptr2d/zip.hpp	/^    __host__ __device__ __forceinline__ ZipPtr(const tuple<Ptr0, Ptr1, Ptr2, Ptr3>& t) : tuple<Ptr0, Ptr1, Ptr2, Ptr3>(t) {}$/;"	f	struct:cv::cudev::ZipPtr
ZipPtr	opencv2/cudev/ptr2d/zip.hpp	/^    __host__ __device__ __forceinline__ ZipPtr(const tuple<Ptr0, Ptr1, Ptr2>& t) : tuple<Ptr0, Ptr1, Ptr2>(t) {}$/;"	f	struct:cv::cudev::ZipPtr
ZipPtr	opencv2/cudev/ptr2d/zip.hpp	/^    __host__ __device__ __forceinline__ ZipPtr(const tuple<Ptr0, Ptr1>& t) : tuple<Ptr0, Ptr1>(t) {}$/;"	f	struct:cv::cudev::ZipPtr
ZipPtr	opencv2/cudev/ptr2d/zip.hpp	/^template <class Ptr0, class Ptr1, class Ptr2, class Ptr3> struct ZipPtr< tuple<Ptr0, Ptr1, Ptr2, Ptr3> > : tuple<Ptr0, Ptr1, Ptr2, Ptr3>$/;"	s	namespace:cv::cudev
ZipPtr	opencv2/cudev/ptr2d/zip.hpp	/^template <class Ptr0, class Ptr1, class Ptr2> struct ZipPtr< tuple<Ptr0, Ptr1, Ptr2> > : tuple<Ptr0, Ptr1, Ptr2>$/;"	s	namespace:cv::cudev
ZipPtr	opencv2/cudev/ptr2d/zip.hpp	/^template <class Ptr0, class Ptr1> struct ZipPtr< tuple<Ptr0, Ptr1> > : tuple<Ptr0, Ptr1>$/;"	s	namespace:cv::cudev
ZipPtrSz	opencv2/cudev/ptr2d/zip.hpp	/^    __host__ __device__ __forceinline__ ZipPtrSz() {}$/;"	f	struct:cv::cudev::ZipPtrSz
ZipPtrSz	opencv2/cudev/ptr2d/zip.hpp	/^    __host__ __device__ __forceinline__ ZipPtrSz(const PtrTuple& t) : ZipPtr<PtrTuple>(t) {}$/;"	f	struct:cv::cudev::ZipPtrSz
ZipPtrSz	opencv2/cudev/ptr2d/zip.hpp	/^template <class PtrTuple> struct ZipPtrSz : ZipPtr<PtrTuple>$/;"	s	namespace:cv::cudev
_ALGOBASE_H	cpp_src/stl_algobase.h	63;"	d
_ALGO_H	cpp_src/stl_algo.h	63;"	d
_ALIGNED_BUFFER_H	5/ext/aligned_buffer.h	30;"	d
_ALLOCATED_PTR_H	5/bits/allocated_ptr.h	31;"	d
_ALLOCATOR_H	5/bits/allocator.h	44;"	d
_ALLOCATOR_H	cpp_src/allocator.h	50;"	d
_ALLOC_TRAITS_H	5/bits/alloc_traits.h	31;"	d
_ARRAY_ALLOCATOR_H	5/ext/array_allocator.h	30;"	d
_After_nth_from	5/debug/safe_sequence.h	/^      _After_nth_from(const difference_type& __n, const _Iterator& __base)$/;"	f	class:__gnu_debug::_After_nth_from
_After_nth_from	5/debug/safe_sequence.h	/^    class _After_nth_from$/;"	c	namespace:__gnu_debug
_AlgorithmStrategy	5/parallel/types.h	/^  enum _AlgorithmStrategy$/;"	g	namespace:__gnu_parallel
_Alloc	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	typedef typename Metadata::allocator_type		_Alloc;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Node_base
_Alloc	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef allocator_type				_Alloc;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_CIter
_Alloc	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename base_type::allocator_type		_Alloc;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Inode
_Alloc_hider	cpp_src/basic_string.h	/^	_Alloc_hider(_CharT* __dat, const _Alloc& __a)$/;"	f	struct:std::basic_string::_Alloc_hider
_Alloc_hider	cpp_src/basic_string.h	/^      struct _Alloc_hider : _Alloc$/;"	s	class:std::basic_string
_Alloc_value_type	cpp_src/stl_deque.h	/^      typedef typename _Alloc::value_type        _Alloc_value_type;$/;"	t	class:std::deque
_Alloc_value_type	cpp_src/stl_list.h	/^      typedef typename _Alloc::value_type                _Alloc_value_type;$/;"	t	class:std::list
_Alloc_value_type	cpp_src/stl_map.h	/^      typedef typename _Alloc::value_type                   _Alloc_value_type;$/;"	t	class:std::map
_Alloc_value_type	cpp_src/stl_multimap.h	/^      typedef typename _Alloc::value_type                   _Alloc_value_type;$/;"	t	class:std::multimap
_Alloc_value_type	cpp_src/stl_multiset.h	/^      typedef typename _Alloc::value_type                   _Alloc_value_type;$/;"	t	class:std::multiset
_Alloc_value_type	cpp_src/stl_set.h	/^      typedef typename _Alloc::value_type                   _Alloc_value_type;$/;"	t	class:std::set
_Alloc_value_type	cpp_src/stl_vector.h	/^      typedef typename _Alloc::value_type                _Alloc_value_type;$/;"	t	class:std::vector
_Arg	cpp_src/valarray_before.h	/^      typedef _Dom _Arg;$/;"	t	struct:std::_UnClos
_Arg	cpp_src/valarray_before.h	/^      typedef valarray<_Tp> _Arg;$/;"	t	struct:std::_UnClos
_Array	cpp_src/valarray_array.h	/^    _Array<_Tp>::_Array(_Tp* const __restrict__ __p)$/;"	f	class:std::_Array
_Array	cpp_src/valarray_array.h	/^    _Array<_Tp>::_Array(const _Tp* __restrict__ __b, size_t __s)$/;"	f	class:std::_Array
_Array	cpp_src/valarray_array.h	/^    _Array<_Tp>::_Array(const valarray<_Tp>& __v)$/;"	f	class:std::_Array
_Array	cpp_src/valarray_array.h	/^    _Array<_Tp>::_Array(size_t __n)$/;"	f	class:std::_Array
_Array	cpp_src/valarray_array.h	/^    struct _Array$/;"	s	namespace:std
_Array_copier	cpp_src/valarray_array.h	/^    struct _Array_copier$/;"	s	namespace:std
_Array_copier	cpp_src/valarray_array.h	/^    struct _Array_copier<_Tp, true>$/;"	s	namespace:std
_Array_copy_ctor	cpp_src/valarray_array.h	/^    struct _Array_copy_ctor$/;"	s	namespace:std
_Array_copy_ctor	cpp_src/valarray_array.h	/^    struct _Array_copy_ctor<_Tp, true>$/;"	s	namespace:std
_Array_default_ctor	cpp_src/valarray_array.h	/^    struct _Array_default_ctor$/;"	s	namespace:std
_Array_default_ctor	cpp_src/valarray_array.h	/^    struct _Array_default_ctor<_Tp, true>$/;"	s	namespace:std
_Array_init_ctor	cpp_src/valarray_array.h	/^    struct _Array_init_ctor$/;"	s	namespace:std
_Array_init_ctor	cpp_src/valarray_array.h	/^    struct _Array_init_ctor<_Tp, true>$/;"	s	namespace:std
_AssignableConcept	cpp_src/boost_concept_check.h	/^  struct _AssignableConcept$/;"	s
_AssociativeContainerConcept	cpp_src/boost_concept_check.h	/^  struct _AssociativeContainerConcept$/;"	s
_Attach_single	5/debug/safe_iterator.h	/^      struct _Attach_single$/;"	s	class:__gnu_debug::_Safe_iterator
_Attach_single	5/debug/safe_local_iterator.h	/^      struct _Attach_single$/;"	s	class:__gnu_debug::_Safe_local_iterator
_Aux_require_same	cpp_src/boost_concept_check.h	/^struct _Aux_require_same { };$/;"	s
_Aux_require_same	cpp_src/boost_concept_check.h	/^struct _Aux_require_same<_Tp,_Tp> { typedef _Tp _Type; };$/;"	s
_BACKWARD_AUTO_PTR_H	5/backward/auto_ptr.h	31;"	d
_BACKWARD_BACKWARD_WARNING_H	5/backward/backward_warning.h	29;"	d
_BACKWARD_BINDERS_H	5/backward/binders.h	57;"	d
_BACKWARD_HASHTABLE_H	5/backward/hashtable.h	57;"	d
_BACKWARD_HASH_FUN_H	5/backward/hash_fun.h	57;"	d
_BALLOC_ALIGN_BYTES	5/ext/bitmap_allocator.h	43;"	d
_BASIC_IOS_H	5/bits/basic_ios.h	31;"	d
_BASIC_IOS_H	cpp_src/basic_ios.h	37;"	d
_BASIC_STRING_H	5/bits/basic_string.h	35;"	d
_BASIC_STRING_H	cpp_src/basic_string.h	42;"	d
_BITMAP_ALLOCATOR_H	5/ext/bitmap_allocator.h	30;"	d
_BOOST_CONCEPT_CHECK_H	5/bits/boost_concept_check.h	40;"	d
_BOOST_CONCEPT_CHECK_H	cpp_src/boost_concept_check.h	45;"	d
_BVECTOR_H	cpp_src/stl_bvector.h	63;"	d
_BackInsertionSequenceConcept	cpp_src/boost_concept_check.h	/^  struct _BackInsertionSequenceConcept$/;"	s
_Base	5/debug/safe_container.h	/^      typedef _SafeBase<_SafeContainer> _Base;$/;"	t	class:__gnu_debug::_Safe_container
_Base	5/debug/safe_unordered_base.h	/^    typedef _Safe_sequence_base _Base;$/;"	t	class:__gnu_debug::_Safe_unordered_container_base
_Base	5/parallel/iterator.h	/^      typedef std::pair<_Iterator1, _Iterator2> _Base;$/;"	t	class:__gnu_parallel::_IteratorPair
_Base	5/parallel/losertree.h	/^      typedef _LoserTreeBase<_Tp, _Compare> _Base;$/;"	t	class:__gnu_parallel::_LoserTree
_Base	5/parallel/losertree.h	/^      typedef _LoserTreePointerBase<_Tp, _Compare> _Base;$/;"	t	class:__gnu_parallel::_LoserTreePointer
_Base	5/parallel/losertree.h	/^      typedef _LoserTreePointerUnguardedBase<_Tp, _Compare> _Base;$/;"	t	class:__gnu_parallel::_LoserTreePointerUnguarded
_Base	5/parallel/losertree.h	/^      typedef _LoserTreeUnguardedBase<_Tp, _Compare> _Base;$/;"	t	class:__gnu_parallel::_LoserTreeUnguarded
_Base	cpp_src/stl_bvector.h	/^    typedef _Bvector_base<_Alloc>			 _Base;$/;"	t	class:std::vector
_Base	cpp_src/stl_deque.h	/^      typedef _Deque_base<_Tp, _Alloc>           _Base;$/;"	t	class:std::deque
_Base	cpp_src/stl_list.h	/^      typedef _List_base<_Tp, _Alloc>                    _Base;$/;"	t	class:std::list
_Base	cpp_src/stl_vector.h	/^      typedef _Vector_base<_Tp, _Alloc>			 _Base;$/;"	t	class:std::vector
_Base	cpp_src/valarray_after.h	/^      typedef _GBase<_Array<_Tp> > _Base;$/;"	t	struct:std::_GClos
_Base	cpp_src/valarray_after.h	/^      typedef _GBase<_Dom> _Base;$/;"	t	struct:std::_GClos
_Base	cpp_src/valarray_after.h	/^      typedef _IBase<_Dom> _Base;$/;"	t	struct:std::_IClos
_Base	cpp_src/valarray_after.h	/^      typedef _IBase<valarray<_Tp> > _Base;$/;"	t	struct:std::_IClos
_Base	cpp_src/valarray_before.h	/^      typedef  _SBase<_Array<_Tp> > _Base;$/;"	t	struct:std::_SClos
_Base	cpp_src/valarray_before.h	/^      typedef _BinBase1<_Oper, _Dom> _Base;$/;"	t	struct:std::_BinClos
_Base	cpp_src/valarray_before.h	/^      typedef _BinBase1<_Oper, valarray<_Tp> > _Base;$/;"	t	struct:std::_BinClos
_Base	cpp_src/valarray_before.h	/^      typedef _BinBase2<_Oper,_Dom> _Base;$/;"	t	struct:std::_BinClos
_Base	cpp_src/valarray_before.h	/^      typedef _BinBase2<_Oper,valarray<_Tp> > _Base;$/;"	t	struct:std::_BinClos
_Base	cpp_src/valarray_before.h	/^      typedef _BinBase<_Oper, _Dom1, _Dom2> _Base;$/;"	t	struct:std::_BinClos
_Base	cpp_src/valarray_before.h	/^      typedef _BinBase<_Oper, valarray<_Tp>, _Dom> _Base;$/;"	t	struct:std::_BinClos
_Base	cpp_src/valarray_before.h	/^      typedef _BinBase<_Oper, valarray<_Tp>, valarray<_Tp> > _Base;$/;"	t	struct:std::_BinClos
_Base	cpp_src/valarray_before.h	/^      typedef _BinBase<_Oper,_Dom,valarray<_Tp> > _Base;$/;"	t	struct:std::_BinClos
_Base	cpp_src/valarray_before.h	/^      typedef _FunBase<_Dom, const typename _Dom::value_type&> _Base;$/;"	t	struct:std::_RefFunClos
_Base	cpp_src/valarray_before.h	/^      typedef _FunBase<_Dom, typename _Dom::value_type> _Base;$/;"	t	struct:std::_ValFunClos
_Base	cpp_src/valarray_before.h	/^      typedef _FunBase<valarray<_Tp>, _Tp> _Base;$/;"	t	struct:std::_ValFunClos
_Base	cpp_src/valarray_before.h	/^      typedef _FunBase<valarray<_Tp>, const _Tp&> _Base;$/;"	t	struct:std::_RefFunClos
_Base	cpp_src/valarray_before.h	/^      typedef _SBase<_Dom> _Base;$/;"	t	struct:std::_SClos
_Base	cpp_src/valarray_before.h	/^      typedef _UnBase<_Oper, _Dom> _Base;$/;"	t	struct:std::_UnClos
_Base	cpp_src/valarray_before.h	/^      typedef _UnBase<_Oper, valarray<_Tp> > _Base;$/;"	t	struct:std::_UnClos
_Base_ptr	cpp_src/stl_tree.h	/^      typedef _Rb_tree_node_base* _Base_ptr;$/;"	t	class:std::_Rb_tree
_Base_ptr	cpp_src/stl_tree.h	/^      typedef _Rb_tree_node_base::_Base_ptr _Base_ptr;$/;"	t	struct:std::_Rb_tree_iterator
_Base_ptr	cpp_src/stl_tree.h	/^      typedef _Rb_tree_node_base::_Const_Base_ptr _Base_ptr;$/;"	t	struct:std::_Rb_tree_const_iterator
_Base_ptr	cpp_src/stl_tree.h	/^    typedef _Rb_tree_node_base* _Base_ptr;$/;"	t	struct:std::_Rb_tree_node_base
_BeforeBeginHelper	5/debug/safe_iterator.h	/^    struct _BeforeBeginHelper$/;"	s	namespace:__gnu_debug
_BidirectionalIteratorConcept	cpp_src/boost_concept_check.h	/^  struct _BidirectionalIteratorConcept$/;"	s
_BinBase	cpp_src/valarray_before.h	/^      _BinBase(const _FirstArg& __e1, const _SecondArg& __e2)$/;"	f	class:std::_BinBase
_BinBase	cpp_src/valarray_before.h	/^    class _BinBase$/;"	c	namespace:std
_BinBase1	cpp_src/valarray_before.h	/^      _BinBase1(const _Vt& __t, const _Clos& __e)$/;"	f	class:std::_BinBase1
_BinBase1	cpp_src/valarray_before.h	/^    class _BinBase1$/;"	c	namespace:std
_BinBase2	cpp_src/valarray_before.h	/^      _BinBase2(const _Clos& __e, const _Vt& __t)$/;"	f	class:std::_BinBase2
_BinBase2	cpp_src/valarray_before.h	/^    class _BinBase2$/;"	c	namespace:std
_BinClos	cpp_src/valarray_before.h	/^      _BinClos(const _Dom& __e1, const _Tp& __e2) : _Base(__e1, __e2) {}$/;"	f	struct:std::_BinClos
_BinClos	cpp_src/valarray_before.h	/^      _BinClos(const _Dom& __e1, const valarray<_Tp>& __e2)$/;"	f	struct:std::_BinClos
_BinClos	cpp_src/valarray_before.h	/^      _BinClos(const _Dom1& __e1, const _Dom2& __e2) : _Base(__e1, __e2) {}$/;"	f	struct:std::_BinClos
_BinClos	cpp_src/valarray_before.h	/^      _BinClos(const _Tp& __e1, const _Dom& __e2) : _Base(__e1, __e2) {}$/;"	f	struct:std::_BinClos
_BinClos	cpp_src/valarray_before.h	/^      _BinClos(const _Tp& __t, const valarray<_Tp>& __v) : _Base(__t, __v) {}$/;"	f	struct:std::_BinClos
_BinClos	cpp_src/valarray_before.h	/^      _BinClos(const valarray<_Tp>& __e1, const _Dom& __e2)$/;"	f	struct:std::_BinClos
_BinClos	cpp_src/valarray_before.h	/^      _BinClos(const valarray<_Tp>& __v, const _Tp& __t) : _Base(__v, __t) {}$/;"	f	struct:std::_BinClos
_BinClos	cpp_src/valarray_before.h	/^      _BinClos(const valarray<_Tp>& __v, const valarray<_Tp>& __w)$/;"	f	struct:std::_BinClos
_BinClos	cpp_src/valarray_before.h	/^    struct _BinClos<_Oper, _Constant, _Expr, typename _Dom::value_type, _Dom>$/;"	s	namespace:std
_BinClos	cpp_src/valarray_before.h	/^    struct _BinClos<_Oper, _Constant, _ValArray, _Tp, _Tp>$/;"	s	namespace:std
_BinClos	cpp_src/valarray_before.h	/^    struct _BinClos<_Oper, _Expr, _Constant, _Dom, typename _Dom::value_type>$/;"	s	namespace:std
_BinClos	cpp_src/valarray_before.h	/^    struct _BinClos<_Oper, _Expr, _Expr, _Dom1, _Dom2>$/;"	s	namespace:std
_BinClos	cpp_src/valarray_before.h	/^    struct _BinClos<_Oper, _Expr, _ValArray, _Dom, typename _Dom::value_type>$/;"	s	namespace:std
_BinClos	cpp_src/valarray_before.h	/^    struct _BinClos<_Oper, _ValArray, _Constant, _Tp, _Tp>$/;"	s	namespace:std
_BinClos	cpp_src/valarray_before.h	/^    struct _BinClos<_Oper, _ValArray, _Expr, typename _Dom::value_type, _Dom>$/;"	s	namespace:std
_BinClos	cpp_src/valarray_before.h	/^    struct _BinClos<_Oper,_ValArray, _ValArray, _Tp, _Tp>$/;"	s	namespace:std
_BinIndex	5/parallel/random_shuffle.h	/^  typedef unsigned short _BinIndex;$/;"	t	namespace:__gnu_parallel
_BinaryFunctionConcept	cpp_src/boost_concept_check.h	/^  struct _BinaryFunctionConcept$/;"	s
_BinaryFunctionConcept	cpp_src/boost_concept_check.h	/^  struct _BinaryFunctionConcept<_Func, void, _First, _Second>$/;"	s
_BinaryPredicateConcept	cpp_src/boost_concept_check.h	/^  struct _BinaryPredicateConcept$/;"	s
_Bit_alloc_type	cpp_src/stl_bvector.h	/^        _Bit_alloc_type;$/;"	t	struct:std::_Bvector_base
_Bit_const_iterator	cpp_src/stl_bvector.h	/^    _Bit_const_iterator() : _Bit_iterator_base(0, 0) { }$/;"	f	struct:std::_Bit_const_iterator
_Bit_const_iterator	cpp_src/stl_bvector.h	/^    _Bit_const_iterator(_Bit_type * __x, unsigned int __y)$/;"	f	struct:std::_Bit_const_iterator
_Bit_const_iterator	cpp_src/stl_bvector.h	/^    _Bit_const_iterator(const _Bit_iterator& __x)$/;"	f	struct:std::_Bit_const_iterator
_Bit_const_iterator	cpp_src/stl_bvector.h	/^  struct _Bit_const_iterator : public _Bit_iterator_base$/;"	s	namespace:std
_Bit_iterator	cpp_src/stl_bvector.h	/^    _Bit_iterator() : _Bit_iterator_base(0, 0) { }$/;"	f	struct:std::_Bit_iterator
_Bit_iterator	cpp_src/stl_bvector.h	/^    _Bit_iterator(_Bit_type * __x, unsigned int __y)$/;"	f	struct:std::_Bit_iterator
_Bit_iterator	cpp_src/stl_bvector.h	/^  struct _Bit_iterator : public _Bit_iterator_base$/;"	s	namespace:std
_Bit_iterator_base	cpp_src/stl_bvector.h	/^    _Bit_iterator_base(_Bit_type * __x, unsigned int __y)$/;"	f	struct:std::_Bit_iterator_base
_Bit_iterator_base	cpp_src/stl_bvector.h	/^  struct _Bit_iterator_base$/;"	s	namespace:std
_Bit_reference	cpp_src/stl_bvector.h	/^    _Bit_reference() : _M_p(0), _M_mask(0) { }$/;"	f	struct:std::_Bit_reference
_Bit_reference	cpp_src/stl_bvector.h	/^    _Bit_reference(_Bit_type * __x, _Bit_type __y)$/;"	f	struct:std::_Bit_reference
_Bit_reference	cpp_src/stl_bvector.h	/^  struct _Bit_reference$/;"	s	namespace:std
_Bit_type	cpp_src/stl_bvector.h	/^  typedef unsigned long _Bit_type;$/;"	t	namespace:std
_Bvector_base	cpp_src/stl_bvector.h	/^      _Bvector_base(const allocator_type& __a) : _M_impl(__a) { }$/;"	f	struct:std::_Bvector_base
_Bvector_base	cpp_src/stl_bvector.h	/^    struct _Bvector_base$/;"	s	namespace:std
_Bvector_impl	cpp_src/stl_bvector.h	/^	_Bvector_impl(const _Bit_alloc_type& __a)$/;"	f	struct:std::_Bvector_base::_Bvector_impl
_Bvector_impl	cpp_src/stl_bvector.h	/^      struct _Bvector_impl$/;"	s	struct:std::_Bvector_base
_CASable	5/parallel/types.h	/^  typedef int64_t _CASable;$/;"	t	namespace:__gnu_parallel
_CASable_bits	5/parallel/types.h	/^  static const int _CASable_bits = std::numeric_limits<_CASable>::digits;$/;"	m	namespace:__gnu_parallel
_CASable_mask	5/parallel/types.h	/^  static const _CASable _CASable_mask =$/;"	m	namespace:__gnu_parallel
_CHAR_TRAITS_H	5/bits/char_traits.h	35;"	d
_CHAR_TRAITS_H	cpp_src/char_traits.h	41;"	d
_CIter	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      _CIter(const PB_DS_CONST_ODIR_IT_C_DEC& other)$/;"	f	class:__gnu_pbds::detail::pat_trie_base::_CIter
_CIter	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      _CIter(node_pointer p_nd = 0) : m_p_nd(p_nd)$/;"	f	class:__gnu_pbds::detail::pat_trie_base::_CIter
_CIter	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^    class _CIter$/;"	c	struct:__gnu_pbds::detail::pat_trie_base
_CODECVT_H	5/bits/codecvt.h	37;"	d
_CODECVT_H	cpp_src/codecvt.h	43;"	d
_CONCEPT_CHECK_H	5/bits/concept_check.h	31;"	d
_CONCEPT_CHECK_H	cpp_src/concept_check.h	36;"	d
_CONCURRENCE_H	5/ext/concurrence.h	30;"	d
_CPP_TYPE_TRAITS_H	5/bits/cpp_type_traits.h	33;"	d
_CPP_TYPE_TRAITS_H	cpp_src/cpp_type_traits.h	39;"	d
_CRT_SECURE_NO_DEPRECATE	opencv2/core/cvdef.h	52;"	d
_CRT_SECURE_NO_DEPRECATE	opencv2/core/cvdef.h	63;"	d
_CXX0X_WARNING_H	5/bits/c++0x_warning.h	29;"	d
_CXX14_WARNING_H	5/bits/c++14_warning.h	29;"	d
_CXXABI_FORCED_H	5/bits/cxxabi_forced.h	32;"	d
_CXXABI_H	5/cxxabi.h	42;"	d
_CXX_POINTER_ARITH_OPERATOR_SET	5/ext/pointer.h	405;"	d
_Callback_list	cpp_src/ios_base.h	/^      _Callback_list(ios_base::event_callback __fn, int __index,$/;"	f	struct:std::ios_base::_Callback_list
_Callback_list	cpp_src/ios_base.h	/^    struct _Callback_list$/;"	s	class:std::ios_base
_CharT_alloc_type	cpp_src/basic_string.h	/^      typedef typename _Alloc::template rebind<_CharT>::other _CharT_alloc_type;$/;"	t	class:std::basic_string
_Char_types	cpp_src/char_traits.h	/^    struct _Char_types$/;"	s
_ComparableConcept	cpp_src/boost_concept_check.h	/^  struct _ComparableConcept$/;"	s
_Const_Base_ptr	cpp_src/stl_tree.h	/^      typedef const _Rb_tree_node_base* _Const_Base_ptr;$/;"	t	class:std::_Rb_tree
_Const_Base_ptr	cpp_src/stl_tree.h	/^    typedef const _Rb_tree_node_base* _Const_Base_ptr;$/;"	t	struct:std::_Rb_tree_node_base
_Const_BinaryPredicateConcept	cpp_src/boost_concept_check.h	/^  struct _Const_BinaryPredicateConcept {$/;"	s
_Const_Link_type	cpp_src/stl_tree.h	/^      typedef const _Rb_tree_node* _Const_Link_type;$/;"	t	class:std::_Rb_tree
_Const_iterator	5/debug/safe_iterator.h	/^      typedef typename _Sequence::const_iterator _Const_iterator;$/;"	t	class:__gnu_debug::_Safe_iterator
_Const_iterator	cpp_src/boost_concept_check.h	/^      _Const_iterator;$/;"	t	struct:_SortedAssociativeContainerConcept
_Const_iterator	cpp_src/boost_concept_check.h	/^    typedef typename _AssociativeContainer::const_iterator _Const_iterator;$/;"	t	struct:_AssociativeContainerConcept
_Const_iterator	cpp_src/boost_concept_check.h	/^    typedef typename _Container::const_iterator _Const_iterator;$/;"	t	struct:_ContainerConcept
_Const_iterator	cpp_src/boost_concept_check.h	/^    typedef typename _RandomAccessContainer::const_iterator _Const_iterator;$/;"	t	struct:_RandomAccessContainerConcept
_Const_iterator	cpp_src/boost_concept_check.h	/^    typedef typename _ReversibleContainer::const_iterator _Const_iterator;$/;"	t	struct:_ReversibleContainerConcept
_Const_local_iterator	5/debug/safe_local_iterator.h	/^      typedef typename _Sequence::const_local_iterator _Const_local_iterator;$/;"	t	class:__gnu_debug::_Safe_local_iterator
_Const_pointer	cpp_src/boost_concept_check.h	/^    typedef typename _Container::const_pointer _Const_pointer;$/;"	t	struct:_ContainerConcept
_Const_reference	cpp_src/boost_concept_check.h	/^    typedef typename _BackInsertionSequence::const_reference _Const_reference;$/;"	t	struct:_BackInsertionSequenceConcept
_Const_reference	cpp_src/boost_concept_check.h	/^    typedef typename _Container::const_reference _Const_reference;$/;"	t	struct:_ContainerConcept
_Const_reference	cpp_src/boost_concept_check.h	/^    typedef typename _RandomAccessContainer::const_reference _Const_reference;$/;"	t	struct:_RandomAccessContainerConcept
_Const_reference	cpp_src/boost_concept_check.h	/^    typedef typename _Sequence::const_reference _Const_reference;$/;"	t	struct:_SequenceConcept
_Const_reverse_iterator	cpp_src/boost_concept_check.h	/^      _Const_reverse_iterator;$/;"	t	struct:_RandomAccessContainerConcept
_Const_reverse_iterator	cpp_src/boost_concept_check.h	/^      _Const_reverse_iterator;$/;"	t	struct:_ReversibleContainerConcept
_Constness	5/debug/formatter.h	/^    enum _Constness$/;"	g	class:__gnu_debug::_Error_formatter
_Construct	cpp_src/stl_construct.h	/^    _Construct(_T1* __p)$/;"	f	namespace:std
_Construct	cpp_src/stl_construct.h	/^    _Construct(_T1* __p, const _T2& __value)$/;"	f	namespace:std
_ContainerConcept	cpp_src/boost_concept_check.h	/^  struct _ContainerConcept$/;"	s
_ConvertibleConcept	cpp_src/boost_concept_check.h	/^  struct _ConvertibleConcept$/;"	s
_CopyConstructibleConcept	cpp_src/boost_concept_check.h	/^  struct _CopyConstructibleConcept$/;"	s
_Cxx_hashtable_define_trivial_hash	5/bits/functional_hash.h	124;"	d
_Cxx_hashtable_define_trivial_hash	5/bits/functional_hash.h	70;"	d
_DEBUG_ALLOCATOR_H	5/ext/debug_allocator.h	43;"	d
_DEFINE_ARRAY_FUNCTION	5/bits/valarray_array.h	527;"	d
_DEFINE_ARRAY_FUNCTION	5/bits/valarray_array.h	686;"	d
_DEFINE_ARRAY_FUNCTION	cpp_src/valarray_array.h	537;"	d
_DEFINE_ARRAY_FUNCTION	cpp_src/valarray_array.h	696;"	d
_DEFINE_DECIMAL_BINARY_OP_BOTH	5/decimal/decimal.h	314;"	d
_DEFINE_DECIMAL_BINARY_OP_BOTH	5/decimal/decimal.h	405;"	d
_DEFINE_DECIMAL_BINARY_OP_LHS	5/decimal/decimal.h	322;"	d
_DEFINE_DECIMAL_BINARY_OP_LHS	5/decimal/decimal.h	406;"	d
_DEFINE_DECIMAL_BINARY_OP_RHS	5/decimal/decimal.h	330;"	d
_DEFINE_DECIMAL_BINARY_OP_RHS	5/decimal/decimal.h	407;"	d
_DEFINE_DECIMAL_BINARY_OP_WITH_DEC	5/decimal/decimal.h	306;"	d
_DEFINE_DECIMAL_BINARY_OP_WITH_DEC	5/decimal/decimal.h	404;"	d
_DEFINE_DECIMAL_BINARY_OP_WITH_INT	5/decimal/decimal.h	338;"	d
_DEFINE_DECIMAL_BINARY_OP_WITH_INT	5/decimal/decimal.h	408;"	d
_DEFINE_DECIMAL_COMPARISONS	5/decimal/decimal.h	424;"	d
_DEFINE_DECIMAL_COMPARISONS	5/decimal/decimal.h	463;"	d
_DEFINE_DECIMAL_COMPARISON_BOTH	5/decimal/decimal.h	412;"	d
_DEFINE_DECIMAL_COMPARISON_BOTH	5/decimal/decimal.h	460;"	d
_DEFINE_DECIMAL_COMPARISON_LHS	5/decimal/decimal.h	416;"	d
_DEFINE_DECIMAL_COMPARISON_LHS	5/decimal/decimal.h	461;"	d
_DEFINE_DECIMAL_COMPARISON_RHS	5/decimal/decimal.h	420;"	d
_DEFINE_DECIMAL_COMPARISON_RHS	5/decimal/decimal.h	462;"	d
_DEFINE_DECIMAL_COMPOUND_ASSIGNMENTS	5/decimal/decimal.h	69;"	d
_DEFINE_DECIMAL_COMPOUND_ASSIGNMENTS	5/decimal/decimal.h	97;"	d
_DEFINE_DECIMAL_COMPOUND_ASSIGNMENT_DEC	5/decimal/decimal.h	55;"	d
_DEFINE_DECIMAL_COMPOUND_ASSIGNMENT_DEC	5/decimal/decimal.h	95;"	d
_DEFINE_DECIMAL_COMPOUND_ASSIGNMENT_INT	5/decimal/decimal.h	62;"	d
_DEFINE_DECIMAL_COMPOUND_ASSIGNMENT_INT	5/decimal/decimal.h	96;"	d
_DEFINE_DECIMAL_UNARY_OP	5/decimal/decimal.h	287;"	d
_DEFINE_DECIMAL_UNARY_OP	5/decimal/decimal.h	302;"	d
_DEFINE_EXPR_BINARY_FUNCTION	5/bits/valarray_after.h	459;"	d
_DEFINE_EXPR_BINARY_FUNCTION	5/bits/valarray_after.h	546;"	d
_DEFINE_EXPR_BINARY_FUNCTION	cpp_src/valarray_after.h	463;"	d
_DEFINE_EXPR_BINARY_FUNCTION	cpp_src/valarray_after.h	550;"	d
_DEFINE_EXPR_BINARY_OPERATOR	5/bits/valarray_after.h	337;"	d
_DEFINE_EXPR_BINARY_OPERATOR	5/bits/valarray_after.h	421;"	d
_DEFINE_EXPR_BINARY_OPERATOR	cpp_src/valarray_after.h	341;"	d
_DEFINE_EXPR_BINARY_OPERATOR	cpp_src/valarray_after.h	425;"	d
_DEFINE_EXPR_UNARY_FUNCTION	5/bits/valarray_after.h	423;"	d
_DEFINE_EXPR_UNARY_FUNCTION	5/bits/valarray_after.h	457;"	d
_DEFINE_EXPR_UNARY_FUNCTION	cpp_src/valarray_after.h	427;"	d
_DEFINE_EXPR_UNARY_FUNCTION	cpp_src/valarray_after.h	461;"	d
_DEFINE_EXPR_UNARY_OPERATOR	5/bits/valarray_after.h	322;"	d
_DEFINE_EXPR_UNARY_OPERATOR	5/bits/valarray_after.h	335;"	d
_DEFINE_EXPR_UNARY_OPERATOR	cpp_src/valarray_after.h	326;"	d
_DEFINE_EXPR_UNARY_OPERATOR	cpp_src/valarray_after.h	339;"	d
_DEFINE_VALARRAY_OPERATOR	5/bits/gslice_array.h	181;"	d
_DEFINE_VALARRAY_OPERATOR	5/bits/gslice_array.h	182;"	d
_DEFINE_VALARRAY_OPERATOR	5/bits/gslice_array.h	211;"	d
_DEFINE_VALARRAY_OPERATOR	5/bits/indirect_array.h	177;"	d
_DEFINE_VALARRAY_OPERATOR	5/bits/indirect_array.h	178;"	d
_DEFINE_VALARRAY_OPERATOR	5/bits/indirect_array.h	205;"	d
_DEFINE_VALARRAY_OPERATOR	5/bits/mask_array.h	172;"	d
_DEFINE_VALARRAY_OPERATOR	5/bits/mask_array.h	173;"	d
_DEFINE_VALARRAY_OPERATOR	5/bits/mask_array.h	201;"	d
_DEFINE_VALARRAY_OPERATOR	5/bits/slice_array.h	238;"	d
_DEFINE_VALARRAY_OPERATOR	5/bits/slice_array.h	239;"	d
_DEFINE_VALARRAY_OPERATOR	5/bits/slice_array.h	267;"	d
_DEFINE_VALARRAY_OPERATOR	cpp_src/gslice_array.h	180;"	d
_DEFINE_VALARRAY_OPERATOR	cpp_src/gslice_array.h	181;"	d
_DEFINE_VALARRAY_OPERATOR	cpp_src/gslice_array.h	210;"	d
_DEFINE_VALARRAY_OPERATOR	cpp_src/indirect_array.h	176;"	d
_DEFINE_VALARRAY_OPERATOR	cpp_src/indirect_array.h	177;"	d
_DEFINE_VALARRAY_OPERATOR	cpp_src/indirect_array.h	204;"	d
_DEFINE_VALARRAY_OPERATOR	cpp_src/mask_array.h	171;"	d
_DEFINE_VALARRAY_OPERATOR	cpp_src/mask_array.h	172;"	d
_DEFINE_VALARRAY_OPERATOR	cpp_src/mask_array.h	200;"	d
_DEFINE_VALARRAY_OPERATOR	cpp_src/slice_array.h	236;"	d
_DEFINE_VALARRAY_OPERATOR	cpp_src/slice_array.h	237;"	d
_DEFINE_VALARRAY_OPERATOR	cpp_src/slice_array.h	265;"	d
_DEQUE_H	cpp_src/stl_deque.h	63;"	d
_DRSSorterPU	5/parallel/random_shuffle.h	/^    struct _DRSSorterPU$/;"	s	namespace:__gnu_parallel
_DRandomShufflingGlobalData	5/parallel/random_shuffle.h	/^      _DRandomShufflingGlobalData(_RAIter& __source)$/;"	f	struct:__gnu_parallel::_DRandomShufflingGlobalData
_DRandomShufflingGlobalData	5/parallel/random_shuffle.h	/^    struct _DRandomShufflingGlobalData$/;"	s	namespace:__gnu_parallel
_Debug_msg_id	5/debug/formatter.h	/^  enum _Debug_msg_id$/;"	g	namespace:__gnu_debug
_DefaultConstructibleConcept	cpp_src/boost_concept_check.h	/^  struct _DefaultConstructibleConcept$/;"	s
_Deque_base	cpp_src/stl_deque.h	/^      _Deque_base(const allocator_type& __a)$/;"	f	class:std::_Deque_base
_Deque_base	cpp_src/stl_deque.h	/^      _Deque_base(const allocator_type& __a, size_t __num_elements)$/;"	f	class:std::_Deque_base
_Deque_base	cpp_src/stl_deque.h	/^    class _Deque_base$/;"	c	namespace:std
_Deque_impl	cpp_src/stl_deque.h	/^	_Deque_impl(const _Tp_alloc_type& __a)$/;"	f	struct:std::_Deque_base::_Deque_impl
_Deque_impl	cpp_src/stl_deque.h	/^      struct _Deque_impl$/;"	s	class:std::_Deque_base
_Deque_iterator	cpp_src/stl_deque.h	/^      _Deque_iterator() : _M_cur(0), _M_first(0), _M_last(0), _M_node(0) {}$/;"	f	struct:std::_Deque_iterator
_Deque_iterator	cpp_src/stl_deque.h	/^      _Deque_iterator(_Tp* __x, _Map_pointer __y)$/;"	f	struct:std::_Deque_iterator
_Deque_iterator	cpp_src/stl_deque.h	/^      _Deque_iterator(const iterator& __x)$/;"	f	struct:std::_Deque_iterator
_Deque_iterator	cpp_src/stl_deque.h	/^    struct _Deque_iterator$/;"	s	namespace:std
_Destroy	cpp_src/stl_construct.h	/^    _Destroy(_ForwardIterator __first, _ForwardIterator __last)$/;"	f	namespace:std
_Destroy	cpp_src/stl_construct.h	/^    _Destroy(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std
_Destroy	cpp_src/stl_construct.h	/^    _Destroy(_Tp* __pointer)$/;"	f	namespace:std
_DifferenceType	5/parallel/balanced_quicksort.h	/^      typedef typename _TraitsType::difference_type _DifferenceType;$/;"	t	struct:__gnu_parallel::_QSBThreadLocal
_DifferenceType	5/parallel/base.h	/^      typedef _DifferenceTp _DifferenceType;$/;"	t	class:__gnu_parallel::_PseudoSequence
_DifferenceType	5/parallel/base.h	/^      typedef _DifferenceTp _DifferenceType;$/;"	t	class:__gnu_parallel::_PseudoSequenceIterator
_DifferenceType	5/parallel/multiway_mergesort.h	/^      typedef _DifferenceTp _DifferenceType;$/;"	t	struct:__gnu_parallel::_Piece
_DifferenceType	5/parallel/multiway_mergesort.h	/^      typedef typename _TraitsType::difference_type _DifferenceType;$/;"	t	struct:__gnu_parallel::_PMWMSSortingData
_DifferenceType	5/parallel/random_shuffle.h	/^      typedef typename _TraitsType::difference_type _DifferenceType;$/;"	t	struct:__gnu_parallel::_DRandomShufflingGlobalData
_DifferenceType	5/parallel/set_operations.h	/^      _DifferenceType;$/;"	t	struct:__gnu_parallel::__union_func
_DifferenceType	5/parallel/set_operations.h	/^      typedef typename _TraitsType::difference_type _DifferenceType;$/;"	t	struct:__gnu_parallel::__difference_func
_DifferenceType	5/parallel/set_operations.h	/^      typedef typename _TraitsType::difference_type _DifferenceType;$/;"	t	struct:__gnu_parallel::__intersection_func
_DifferenceType	5/parallel/set_operations.h	/^      typedef typename _TraitsType::difference_type _DifferenceType;$/;"	t	struct:__gnu_parallel::__symmetric_difference_func
_DifferenceType	5/parallel/workstealing.h	/^      typedef _DifferenceTp _DifferenceType;$/;"	t	struct:__gnu_parallel::_Job
_Difference_type	cpp_src/boost_concept_check.h	/^    typedef typename _Container::difference_type _Difference_type;$/;"	t	struct:_ContainerConcept
_Distance_precision	5/debug/safe_iterator.h	/^  enum _Distance_precision$/;"	g	namespace:__gnu_debug
_DummyReduct	5/parallel/for_each_selectors.h	/^  struct _DummyReduct$/;"	s	namespace:__gnu_parallel
_ENABLE_SPECIAL_MEMBERS_H	5/bits/enable_special_members.h	31;"	d
_EXCEPTION_DEFINES_H	5/bits/exception_defines.h	31;"	d
_EXCEPTION_DEFINES_H	cpp_src/exception_defines.h	39;"	d
_EXCEPTION_PTR_H	5/bits/exception_ptr.h	32;"	d
_EXTPTR_ALLOCATOR_H	5/ext/extptr_allocator.h	37;"	d
_EXT_ALLOC_TRAITS_H	5/ext/alloc_traits.h	30;"	d
_EXT_CODECVT_SPECIALIZATIONS_H	5/ext/codecvt_specializations.h	36;"	d
_EXT_ENC_FILEBUF_H	5/ext/enc_filebuf.h	30;"	d
_EXT_NUMERIC_TRAITS	5/ext/numeric_traits.h	30;"	d
_EXT_TYPE_TRAITS	5/ext/type_traits.h	30;"	d
_EqualFromLess	5/parallel/base.h	/^      _EqualFromLess(_Compare& __comp) : _M_comp(__comp) { }$/;"	f	class:__gnu_parallel::_EqualFromLess
_EqualFromLess	5/parallel/base.h	/^    class _EqualFromLess : public std::binary_function<_T1, _T2, bool>$/;"	c	namespace:__gnu_parallel
_EqualTo	5/parallel/base.h	/^    struct _EqualTo : std::binary_function<_T1, _T2, bool>$/;"	s	namespace:__gnu_parallel
_Equal_to	5/debug/safe_sequence.h	/^      explicit _Equal_to(const _Type& __v) : __value(__v) { }$/;"	f	class:__gnu_debug::_Equal_to
_Equal_to	5/debug/safe_sequence.h	/^    class _Equal_to$/;"	c	namespace:__gnu_debug
_EqualityComparableConcept	cpp_src/boost_concept_check.h	/^  struct _EqualityComparableConcept$/;"	s
_Error_formatter	5/debug/formatter.h	/^    _Error_formatter(const char* __file, std::size_t __line)$/;"	f	class:__gnu_debug::_Error_formatter
_Error_formatter	5/debug/formatter.h	/^  class _Error_formatter$/;"	c	namespace:__gnu_debug
_Expr	cpp_src/valarray_after.h	/^    _Expr<_Clos, _Tp>::_Expr(const _Clos& __c) : _M_closure(__c) {}$/;"	f	class:std::_Expr
_Expr	cpp_src/valarray_after.h	/^    class _Expr$/;"	c	namespace:std
_FORWARD_LIST_H	5/bits/forward_list.h	31;"	d
_FUNCTEXCEPT_H	5/bits/functexcept.h	37;"	d
_FUNCTEXCEPT_H	cpp_src/functexcept.h	39;"	d
_FUNCTIONAL_HASH_H	5/bits/functional_hash.h	31;"	d
_FUNCTION_H	cpp_src/stl_function.h	62;"	d
_FindAlgorithm	5/parallel/types.h	/^  enum _FindAlgorithm $/;"	g	namespace:__gnu_parallel
_ForwardContainerConcept	cpp_src/boost_concept_check.h	/^  struct _ForwardContainerConcept$/;"	s
_ForwardIteratorConcept	cpp_src/boost_concept_check.h	/^  struct _ForwardIteratorConcept$/;"	s
_FrontInsertionSequenceConcept	cpp_src/boost_concept_check.h	/^  struct _FrontInsertionSequenceConcept$/;"	s
_FunBase	cpp_src/valarray_before.h	/^      _FunBase(const _Dom& __e, value_type __f(_Arg))$/;"	f	class:std::_FunBase
_FunBase	cpp_src/valarray_before.h	/^    class _FunBase$/;"	c	namespace:std
_GBase	cpp_src/valarray_after.h	/^      _GBase (_Array<_Tp> __a, const valarray<size_t>& __i)$/;"	f	class:std::_GBase
_GBase	cpp_src/valarray_after.h	/^      _GBase (const _Dom& __e, const valarray<size_t>& __i)$/;"	f	class:std::_GBase
_GBase	cpp_src/valarray_after.h	/^    class _GBase$/;"	c	namespace:std
_GBase	cpp_src/valarray_after.h	/^    class _GBase<_Array<_Tp> >$/;"	c	namespace:std
_GCC_CXX_POINTER_COMPARISON_OPERATION_SET	5/ext/pointer.h	475;"	d
_GClos	cpp_src/valarray_after.h	/^      _GClos (_Array<_Tp> __a, const valarray<size_t>& __i)$/;"	f	struct:std::_GClos
_GClos	cpp_src/valarray_after.h	/^      _GClos (const _Dom& __e, const valarray<size_t>& __i)$/;"	f	struct:std::_GClos
_GClos	cpp_src/valarray_after.h	/^    struct _GClos<_Expr, _Dom>$/;"	s	namespace:std
_GClos	cpp_src/valarray_after.h	/^    struct _GClos<_ValArray, _Tp>$/;"	s	namespace:std
_GLIBCXX_ALGORITHMFWD_H	5/bits/algorithmfwd.h	31;"	d
_GLIBCXX_ALLOC_TR_NESTED_TYPE	5/bits/alloc_traits.h	197;"	d
_GLIBCXX_ALLOC_TR_NESTED_TYPE	5/bits/alloc_traits.h	90;"	d
_GLIBCXX_ALWAYS_INLINE	5/bits/atomic_base.h	40;"	d
_GLIBCXX_ALWAYS_INLINE	5/bits/atomic_futex.h	44;"	d
_GLIBCXX_ASSERTIONS	5/parallel/compiletime_settings.h	61;"	d
_GLIBCXX_ATOMICITY_H	5/ext/atomicity.h	30;"	d
_GLIBCXX_ATOMIC_BASE_H	5/bits/atomic_base.h	31;"	d
_GLIBCXX_ATOMIC_FUTEX_H	5/bits/atomic_futex.h	31;"	d
_GLIBCXX_ATOMIC_LOCK_FREE_H	5/bits/atomic_lockfree_defines.h	31;"	d
_GLIBCXX_BAL_QUICKSORT	5/parallel/features.h	55;"	d
_GLIBCXX_BITS_UNIFORM_INT_DIST_H	5/bits/uniform_int_dist.h	32;"	d
_GLIBCXX_CALL	5/parallel/compiletime_settings.h	44;"	d
_GLIBCXX_CALL	5/parallel/compiletime_settings.h	47;"	d
_GLIBCXX_CAST_H	5/ext/cast.h	31;"	d
_GLIBCXX_CDTOR_CALLABI	5/cxxabi.h	54;"	d
_GLIBCXX_CLASS_REQUIRES	5/bits/boost_concept_check.h	70;"	d
_GLIBCXX_CLASS_REQUIRES	cpp_src/boost_concept_check.h	74;"	d
_GLIBCXX_CLASS_REQUIRES2	5/bits/boost_concept_check.h	78;"	d
_GLIBCXX_CLASS_REQUIRES2	cpp_src/boost_concept_check.h	82;"	d
_GLIBCXX_CLASS_REQUIRES3	5/bits/boost_concept_check.h	86;"	d
_GLIBCXX_CLASS_REQUIRES3	cpp_src/boost_concept_check.h	90;"	d
_GLIBCXX_CLASS_REQUIRES4	5/bits/boost_concept_check.h	94;"	d
_GLIBCXX_CLASS_REQUIRES4	cpp_src/boost_concept_check.h	98;"	d
_GLIBCXX_COMPLEX_H	5/complex.h	44;"	d
_GLIBCXX_DEBUG_ASSERT	5/debug/debug.h	61;"	d
_GLIBCXX_DEBUG_FORMATTER_H	5/debug/formatter.h	30;"	d
_GLIBCXX_DEBUG_FUNCTIONS_H	5/debug/functions.h	30;"	d
_GLIBCXX_DEBUG_MACROS_H	5/debug/macros.h	30;"	d
_GLIBCXX_DEBUG_MACRO_SWITCH_H	5/debug/debug.h	30;"	d
_GLIBCXX_DEBUG_MAP_H	5/debug/map.h	30;"	d
_GLIBCXX_DEBUG_MULTIMAP_H	5/debug/multimap.h	30;"	d
_GLIBCXX_DEBUG_MULTISET_H	5/debug/multiset.h	30;"	d
_GLIBCXX_DEBUG_ONLY	5/debug/debug.h	63;"	d
_GLIBCXX_DEBUG_PEDASSERT	5/debug/debug.h	62;"	d
_GLIBCXX_DEBUG_SAFE_BASE_H	5/debug/safe_base.h	30;"	d
_GLIBCXX_DEBUG_SAFE_CONTAINER_H	5/debug/safe_container.h	30;"	d
_GLIBCXX_DEBUG_SAFE_ITERATOR_H	5/debug/safe_iterator.h	30;"	d
_GLIBCXX_DEBUG_SAFE_LOCAL_ITERATOR_H	5/debug/safe_local_iterator.h	30;"	d
_GLIBCXX_DEBUG_SAFE_SEQUENCE_H	5/debug/safe_sequence.h	30;"	d
_GLIBCXX_DEBUG_SAFE_UNORDERED_BASE_H	5/debug/safe_unordered_base.h	30;"	d
_GLIBCXX_DEBUG_SAFE_UNORDERED_CONTAINER_H	5/debug/safe_unordered_container.h	30;"	d
_GLIBCXX_DEBUG_SET_H	5/debug/set.h	30;"	d
_GLIBCXX_DEBUG_VERIFY	5/debug/macros.h	49;"	d
_GLIBCXX_DEBUG_VERIFY_AT	5/debug/macros.h	41;"	d
_GLIBCXX_DECIMAL_IMPL	5/decimal/decimal.h	34;"	d
_GLIBCXX_DEFINE_BINARY_OPERATOR_CONSTRAINT	5/bits/boost_concept_check.h	282;"	d
_GLIBCXX_DEFINE_BINARY_OPERATOR_CONSTRAINT	5/bits/boost_concept_check.h	307;"	d
_GLIBCXX_DEFINE_BINARY_OPERATOR_CONSTRAINT	cpp_src/boost_concept_check.h	286;"	d
_GLIBCXX_DEFINE_BINARY_OPERATOR_CONSTRAINT	cpp_src/boost_concept_check.h	311;"	d
_GLIBCXX_DEFINE_BINARY_PREDICATE_OP_CONSTRAINT	5/bits/boost_concept_check.h	271;"	d
_GLIBCXX_DEFINE_BINARY_PREDICATE_OP_CONSTRAINT	5/bits/boost_concept_check.h	306;"	d
_GLIBCXX_DEFINE_BINARY_PREDICATE_OP_CONSTRAINT	cpp_src/boost_concept_check.h	275;"	d
_GLIBCXX_DEFINE_BINARY_PREDICATE_OP_CONSTRAINT	cpp_src/boost_concept_check.h	310;"	d
_GLIBCXX_DEPRECATED	5/bits/exception_ptr.h	/^    copy_exception(_Ex __ex) _GLIBCXX_USE_NOEXCEPT _GLIBCXX_DEPRECATED;$/;"	m	namespace:std
_GLIBCXX_DEQUE_BUF_SIZE	5/bits/stl_deque.h	2277;"	d
_GLIBCXX_DEQUE_BUF_SIZE	5/bits/stl_deque.h	85;"	d
_GLIBCXX_EXPERIMENTAL_FS_DIR_H	5/experimental/fs_dir.h	31;"	d
_GLIBCXX_EXPERIMENTAL_FS_FWD_H	5/experimental/fs_fwd.h	31;"	d
_GLIBCXX_EXPERIMENTAL_FS_OPS_H	5/experimental/fs_ops.h	31;"	d
_GLIBCXX_EXPERIMENTAL_FS_PATH_H	5/experimental/fs_path.h	31;"	d
_GLIBCXX_FENV_H	5/fenv.h	30;"	d
_GLIBCXX_FILESYSTEM_IS_WINDOWS	5/experimental/fs_path.h	49;"	d
_GLIBCXX_FIND_CONSTANT_SIZE_BLOCKS	5/parallel/features.h	67;"	d
_GLIBCXX_FIND_EQUAL_SPLIT	5/parallel/features.h	74;"	d
_GLIBCXX_FIND_GROWING_BLOCKS	5/parallel/features.h	61;"	d
_GLIBCXX_FORWARD	5/bits/move.h	153;"	d
_GLIBCXX_FORWARD	5/bits/move.h	156;"	d
_GLIBCXX_IMPL_UNORDERED_MAP	5/profile/impl/profiler_trace.h	39;"	d
_GLIBCXX_IMPL_UNORDERED_MAP	5/profile/impl/profiler_trace.h	42;"	d
_GLIBCXX_JOB_VOLATILE	5/parallel/workstealing.h	50;"	d
_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR	5/bits/stl_iterator.h	1175;"	d
_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR	5/bits/stl_iterator.h	1179;"	d
_GLIBCXX_MAKE_MOVE_ITERATOR	5/bits/stl_iterator.h	1174;"	d
_GLIBCXX_MAKE_MOVE_ITERATOR	5/bits/stl_iterator.h	1178;"	d
_GLIBCXX_MERGESORT	5/parallel/features.h	41;"	d
_GLIBCXX_MOVE	5/bits/move.h	152;"	d
_GLIBCXX_MOVE	5/bits/move.h	155;"	d
_GLIBCXX_MOVE3	5/bits/stl_algobase.h	507;"	d
_GLIBCXX_MOVE_BACKWARD3	5/bits/stl_algobase.h	689;"	d
_GLIBCXX_NESTED_EXCEPTION_H	5/bits/nested_exception.h	31;"	d
_GLIBCXX_NOEXCEPT	5/bits/exception_ptr.h	/^      void *_M_get() const _GLIBCXX_NOEXCEPT __attribute__ ((__pure__));$/;"	m	class:std::__exception_ptr::exception_ptr
_GLIBCXX_NUM_CXX11_FACETS	5/bits/locale_facets.h	57;"	d
_GLIBCXX_NUM_FACETS	5/bits/locale_facets.h	56;"	d
_GLIBCXX_NUM_FACETS	cpp_src/locale_facets.h	57;"	d
_GLIBCXX_NUM_UNICODE_FACETS	5/bits/locale_facets.h	63;"	d
_GLIBCXX_PARALLEL_ALGOBASE_H	5/parallel/algobase.h	37;"	d
_GLIBCXX_PARALLEL_ALGORITHMFWD_H	5/parallel/algorithmfwd.h	30;"	d
_GLIBCXX_PARALLEL_ALGO_H	5/parallel/algo.h	38;"	d
_GLIBCXX_PARALLEL_ASSERT	5/parallel/base.h	422;"	d
_GLIBCXX_PARALLEL_BALANCED_QUICKSORT_H	5/parallel/balanced_quicksort.h	43;"	d
_GLIBCXX_PARALLEL_BASE_H	5/parallel/base.h	33;"	d
_GLIBCXX_PARALLEL_BASIC_ITERATOR_H	5/parallel/basic_iterator.h	34;"	d
_GLIBCXX_PARALLEL_CHECKERS_H	5/parallel/checkers.h	33;"	d
_GLIBCXX_PARALLEL_COMPATIBILITY_H	5/parallel/compatibility.h	35;"	d
_GLIBCXX_PARALLEL_CONDITION	5/parallel/settings.h	95;"	d
_GLIBCXX_PARALLEL_DECISION	5/parallel/multiway_merge.h	380;"	d
_GLIBCXX_PARALLEL_DECISION	5/parallel/multiway_merge.h	454;"	d
_GLIBCXX_PARALLEL_EQUALLY_SPLIT_H	5/parallel/equally_split.h	32;"	d
_GLIBCXX_PARALLEL_FEATURES_H	5/parallel/features.h	35;"	d
_GLIBCXX_PARALLEL_FIND_H	5/parallel/find.h	34;"	d
_GLIBCXX_PARALLEL_FIND_SELECTORS_H	5/parallel/find_selectors.h	34;"	d
_GLIBCXX_PARALLEL_FOR_EACH_H	5/parallel/for_each.h	36;"	d
_GLIBCXX_PARALLEL_FOR_EACH_SELECTORS_H	5/parallel/for_each_selectors.h	34;"	d
_GLIBCXX_PARALLEL_ITERATOR_H	5/parallel/iterator.h	33;"	d
_GLIBCXX_PARALLEL_LENGTH	5/parallel/multiway_merge.h	54;"	d
_GLIBCXX_PARALLEL_LIST_PARTITION_H	5/parallel/list_partition.h	34;"	d
_GLIBCXX_PARALLEL_LOSERTREE_H	5/parallel/losertree.h	33;"	d
_GLIBCXX_PARALLEL_MERGE_3_CASE	5/parallel/multiway_merge.h	290;"	d
_GLIBCXX_PARALLEL_MERGE_3_CASE	5/parallel/multiway_merge.h	308;"	d
_GLIBCXX_PARALLEL_MERGE_4_CASE	5/parallel/multiway_merge.h	412;"	d
_GLIBCXX_PARALLEL_MERGE_4_CASE	5/parallel/multiway_merge.h	453;"	d
_GLIBCXX_PARALLEL_MERGE_H	5/parallel/merge.h	33;"	d
_GLIBCXX_PARALLEL_MULTISEQ_SELECTION_H	5/parallel/multiseq_selection.h	42;"	d
_GLIBCXX_PARALLEL_MULTIWAY_MERGESORT_H	5/parallel/multiway_mergesort.h	33;"	d
_GLIBCXX_PARALLEL_MULTIWAY_MERGE_H	5/parallel/multiway_merge.h	40;"	d
_GLIBCXX_PARALLEL_NUMERICFWD_H	5/parallel/numericfwd.h	30;"	d
_GLIBCXX_PARALLEL_OMP_LOOP_H	5/parallel/omp_loop.h	34;"	d
_GLIBCXX_PARALLEL_OMP_LOOP_STATIC_H	5/parallel/omp_loop_static.h	34;"	d
_GLIBCXX_PARALLEL_PARALLEL_H	5/parallel/parallel.h	34;"	d
_GLIBCXX_PARALLEL_PARTIAL_SUM_H	5/parallel/partial_sum.h	34;"	d
_GLIBCXX_PARALLEL_PARTITION_H	5/parallel/partition.h	34;"	d
_GLIBCXX_PARALLEL_PAR_LOOP_H	5/parallel/par_loop.h	34;"	d
_GLIBCXX_PARALLEL_QUEUE_H	5/parallel/queue.h	33;"	d
_GLIBCXX_PARALLEL_QUICKSORT_H	5/parallel/quicksort.h	33;"	d
_GLIBCXX_PARALLEL_RANDOM_NUMBER_H	5/parallel/random_number.h	33;"	d
_GLIBCXX_PARALLEL_RANDOM_SHUFFLE_H	5/parallel/random_shuffle.h	33;"	d
_GLIBCXX_PARALLEL_SEARCH_H	5/parallel/search.h	34;"	d
_GLIBCXX_PARALLEL_SETTINGS_H	5/parallel/settings.h	84;"	d
_GLIBCXX_PARALLEL_SET_OPERATIONS_H	5/parallel/set_operations.h	35;"	d
_GLIBCXX_PARALLEL_SORT_H	5/parallel/sort.h	33;"	d
_GLIBCXX_PARALLEL_TAGS_H	5/parallel/tags.h	34;"	d
_GLIBCXX_PARALLEL_TYPES_H	5/parallel/types.h	33;"	d
_GLIBCXX_PARALLEL_UNIQUE_COPY_H	5/parallel/unique_copy.h	33;"	d
_GLIBCXX_PARALLEL_WORKSTEALING_H	5/parallel/workstealing.h	41;"	d
_GLIBCXX_PARSE_NUMBERS_H	5/bits/parse_numbers.h	31;"	d
_GLIBCXX_POSTYPES_H	5/bits/postypes.h	36;"	d
_GLIBCXX_POSTYPES_H	cpp_src/postypes.h	42;"	d
_GLIBCXX_PREDEFINED_OPS_H	5/bits/predefined_ops.h	31;"	d
_GLIBCXX_PROFILE_BASE_H	5/profile/base.h	32;"	d
_GLIBCXX_PROFILE_DATA	5/profile/impl/profiler.h	48;"	d
_GLIBCXX_PROFILE_DEFINE_DATA	5/profile/impl/profiler.h	43;"	d
_GLIBCXX_PROFILE_DEFINE_UNINIT_DATA	5/profile/impl/profiler.h	36;"	d
_GLIBCXX_PROFILE_HASHTABLE_TOO_LARGE	5/profile/impl/profiler.h	163;"	d
_GLIBCXX_PROFILE_HASHTABLE_TOO_SMALL	5/profile/impl/profiler.h	160;"	d
_GLIBCXX_PROFILE_INEFFICIENT_HASH	5/profile/impl/profiler.h	172;"	d
_GLIBCXX_PROFILE_ITERATOR_TRACKER	5/profile/iterator_tracker.h	30;"	d
_GLIBCXX_PROFILE_LIST_TO_SLIST	5/profile/impl/profiler.h	178;"	d
_GLIBCXX_PROFILE_LIST_TO_VECTOR	5/profile/impl/profiler.h	181;"	d
_GLIBCXX_PROFILE_MAP_H	5/profile/map.h	29;"	d
_GLIBCXX_PROFILE_MAP_TO_UNORDERED_MAP	5/profile/impl/profiler.h	184;"	d
_GLIBCXX_PROFILE_MAX_STACK_DEPTH	5/profile/impl/profiler.h	347;"	d
_GLIBCXX_PROFILE_MAX_STACK_DEPTH_ENV_VAR	5/profile/impl/profiler.h	350;"	d
_GLIBCXX_PROFILE_MAX_WARN_COUNT	5/profile/impl/profiler.h	344;"	d
_GLIBCXX_PROFILE_MAX_WARN_COUNT_ENV_VAR	5/profile/impl/profiler.h	340;"	d
_GLIBCXX_PROFILE_MEM_PER_DIAGNOSTIC	5/profile/impl/profiler.h	354;"	d
_GLIBCXX_PROFILE_MEM_PER_DIAGNOSTIC_ENV_VAR	5/profile/impl/profiler.h	357;"	d
_GLIBCXX_PROFILE_MULTIMAP_H	5/profile/multimap.h	30;"	d
_GLIBCXX_PROFILE_MULTISET_H	5/profile/multiset.h	30;"	d
_GLIBCXX_PROFILE_ORDERED	5/profile/ordered_base.h	29;"	d
_GLIBCXX_PROFILE_PROFILER_ALGOS_H	5/profile/impl/profiler_algos.h	34;"	d
_GLIBCXX_PROFILE_PROFILER_CONTAINER_SIZE_H	5/profile/impl/profiler_container_size.h	31;"	d
_GLIBCXX_PROFILE_PROFILER_H	5/profile/impl/profiler.h	31;"	d
_GLIBCXX_PROFILE_PROFILER_HASHTABLE_SIZE_H	5/profile/impl/profiler_hashtable_size.h	31;"	d
_GLIBCXX_PROFILE_PROFILER_HASH_FUNC_H	5/profile/impl/profiler_hash_func.h	31;"	d
_GLIBCXX_PROFILE_PROFILER_LIST_TO_SLIST_H	5/profile/impl/profiler_list_to_slist.h	31;"	d
_GLIBCXX_PROFILE_PROFILER_LIST_TO_VECTOR_H	5/profile/impl/profiler_list_to_vector.h	31;"	d
_GLIBCXX_PROFILE_PROFILER_MAP_TO_UNORDERED_MAP_H	5/profile/impl/profiler_map_to_unordered_map.h	31;"	d
_GLIBCXX_PROFILE_PROFILER_NODE_H	5/profile/impl/profiler_node.h	31;"	d
_GLIBCXX_PROFILE_PROFILER_STATE_H	5/profile/impl/profiler_state.h	31;"	d
_GLIBCXX_PROFILE_PROFILER_TRACE_H	5/profile/impl/profiler_trace.h	31;"	d
_GLIBCXX_PROFILE_PROFILER_VECTOR_SIZE_H	5/profile/impl/profiler_vector_size.h	31;"	d
_GLIBCXX_PROFILE_PROFILER_VECTOR_TO_LIST_H	5/profile/impl/profiler_vector_to_list.h	31;"	d
_GLIBCXX_PROFILE_SET_H	5/profile/set.h	30;"	d
_GLIBCXX_PROFILE_TRACE_ENV_VAR	5/profile/impl/profiler.h	337;"	d
_GLIBCXX_PROFILE_TRACE_PATH_ROOT	5/profile/impl/profiler.h	334;"	d
_GLIBCXX_PROFILE_UNORDERED	5/profile/unordered_base.h	29;"	d
_GLIBCXX_PROFILE_VECTOR_TOO_LARGE	5/profile/impl/profiler.h	169;"	d
_GLIBCXX_PROFILE_VECTOR_TOO_SMALL	5/profile/impl/profiler.h	166;"	d
_GLIBCXX_PROFILE_VECTOR_TO_LIST	5/profile/impl/profiler.h	175;"	d
_GLIBCXX_QUICKSORT	5/parallel/features.h	48;"	d
_GLIBCXX_QUOTED_STRING_H	5/bits/quoted_string.h	31;"	d
_GLIBCXX_RANDOM_SHUFFLE_CONSIDER_L1	5/parallel/compiletime_settings.h	68;"	d
_GLIBCXX_RANDOM_SHUFFLE_CONSIDER_TLB	5/parallel/compiletime_settings.h	74;"	d
_GLIBCXX_RANGE_ACCESS_H	5/bits/range_access.h	31;"	d
_GLIBCXX_READ_MEM_BARRIER	5/ext/atomicity.h	111;"	d
_GLIBCXX_REGEX_STATE_LIMIT	5/bits/regex_automaton.h	33;"	d
_GLIBCXX_SCALE_DOWN_FPU	5/parallel/compiletime_settings.h	55;"	d
_GLIBCXX_TGMATH_H	5/tgmath.h	40;"	d
_GLIBCXX_TR1_COMPLEX_H	5/tr1/complex.h	30;"	d
_GLIBCXX_TR1_FUNCTIONAL_HASH_H	5/tr1/functional_hash.h	31;"	d
_GLIBCXX_TR1_HASHTABLE_H	5/tr1/hashtable.h	32;"	d
_GLIBCXX_TR1_INTTYPES_H	5/tr1/inttypes.h	30;"	d
_GLIBCXX_TR1_MATH_H	5/tr1/math.h	30;"	d
_GLIBCXX_TR1_RANDOM_H	5/tr1/random.h	32;"	d
_GLIBCXX_TR1_SPECIAL_FUNCTION_UTIL_H	5/tr1/special_function_util.h	37;"	d
_GLIBCXX_TR1_STDLIB_H	5/tr1/stdlib.h	30;"	d
_GLIBCXX_TR1_TGMATH_H	5/tr1/tgmath.h	30;"	d
_GLIBCXX_TR1_WCHAR_H	5/tr1/wchar.h	30;"	d
_GLIBCXX_TR1_WCTYPE_H	5/tr1/wctype.h	30;"	d
_GLIBCXX_TREE_DYNAMIC_BALANCING	5/parallel/features.h	91;"	d
_GLIBCXX_TREE_FULL_COPY	5/parallel/features.h	100;"	d
_GLIBCXX_TREE_INITIAL_SPLITTING	5/parallel/features.h	83;"	d
_GLIBCXX_TYPELIST_CHAIN1	5/ext/typelist.h	374;"	d
_GLIBCXX_TYPELIST_CHAIN10	5/ext/typelist.h	383;"	d
_GLIBCXX_TYPELIST_CHAIN11	5/ext/typelist.h	384;"	d
_GLIBCXX_TYPELIST_CHAIN12	5/ext/typelist.h	385;"	d
_GLIBCXX_TYPELIST_CHAIN13	5/ext/typelist.h	386;"	d
_GLIBCXX_TYPELIST_CHAIN14	5/ext/typelist.h	387;"	d
_GLIBCXX_TYPELIST_CHAIN15	5/ext/typelist.h	388;"	d
_GLIBCXX_TYPELIST_CHAIN16	5/ext/typelist.h	389;"	d
_GLIBCXX_TYPELIST_CHAIN17	5/ext/typelist.h	390;"	d
_GLIBCXX_TYPELIST_CHAIN18	5/ext/typelist.h	391;"	d
_GLIBCXX_TYPELIST_CHAIN19	5/ext/typelist.h	392;"	d
_GLIBCXX_TYPELIST_CHAIN2	5/ext/typelist.h	375;"	d
_GLIBCXX_TYPELIST_CHAIN20	5/ext/typelist.h	393;"	d
_GLIBCXX_TYPELIST_CHAIN3	5/ext/typelist.h	376;"	d
_GLIBCXX_TYPELIST_CHAIN4	5/ext/typelist.h	377;"	d
_GLIBCXX_TYPELIST_CHAIN5	5/ext/typelist.h	378;"	d
_GLIBCXX_TYPELIST_CHAIN6	5/ext/typelist.h	379;"	d
_GLIBCXX_TYPELIST_CHAIN7	5/ext/typelist.h	380;"	d
_GLIBCXX_TYPELIST_CHAIN8	5/ext/typelist.h	381;"	d
_GLIBCXX_TYPELIST_CHAIN9	5/ext/typelist.h	382;"	d
_GLIBCXX_USE_NOEXCEPT	5/bits/exception_ptr.h	/^	_GLIBCXX_USE_NOEXCEPT __attribute__ ((__pure__));$/;"	m	class:std::__exception_ptr::exception_ptr
_GLIBCXX_USE_NOEXCEPT	5/bits/exception_ptr.h	/^      _GLIBCXX_USE_NOEXCEPT __attribute__ ((__pure__));$/;"	m	namespace:std::__exception_ptr
_GLIBCXX_USE_NOEXCEPT	5/bits/exception_ptr.h	/^      __cxa_exception_type() const _GLIBCXX_USE_NOEXCEPT$/;"	m	class:std::__exception_ptr::exception_ptr
_GLIBCXX_USE_NOEXCEPT	5/bits/exception_ptr.h	/^      bool operator!() const _GLIBCXX_USE_NOEXCEPT$/;"	m	class:std::__exception_ptr::exception_ptr
_GLIBCXX_USE_NOEXCEPT	5/bits/exception_ptr.h	/^      exception_ptr() _GLIBCXX_USE_NOEXCEPT;$/;"	m	class:std::__exception_ptr::exception_ptr
_GLIBCXX_USE_NOEXCEPT	5/bits/exception_ptr.h	/^      exception_ptr(__safe_bool) _GLIBCXX_USE_NOEXCEPT;$/;"	m	class:std::__exception_ptr::exception_ptr
_GLIBCXX_USE_NOEXCEPT	5/bits/exception_ptr.h	/^      exception_ptr(const exception_ptr&) _GLIBCXX_USE_NOEXCEPT;$/;"	m	class:std::__exception_ptr::exception_ptr
_GLIBCXX_USE_NOEXCEPT	5/bits/exception_ptr.h	/^      explicit exception_ptr(void* __e) _GLIBCXX_USE_NOEXCEPT;$/;"	m	class:std::__exception_ptr::exception_ptr
_GLIBCXX_USE_NOEXCEPT	5/bits/exception_ptr.h	/^      friend exception_ptr std::current_exception() _GLIBCXX_USE_NOEXCEPT;$/;"	m	class:std::__exception_ptr::exception_ptr
_GLIBCXX_USE_NOEXCEPT	5/bits/exception_ptr.h	/^      operator __safe_bool() const _GLIBCXX_USE_NOEXCEPT;$/;"	m	class:std::__exception_ptr::exception_ptr
_GLIBCXX_USE_NOEXCEPT	5/bits/exception_ptr.h	/^      operator=(const exception_ptr&) _GLIBCXX_USE_NOEXCEPT;$/;"	m	class:std::__exception_ptr::exception_ptr
_GLIBCXX_USE_NOEXCEPT	5/bits/exception_ptr.h	/^      swap(exception_ptr&) _GLIBCXX_USE_NOEXCEPT;$/;"	m	class:std::__exception_ptr::exception_ptr
_GLIBCXX_USE_NOEXCEPT	5/bits/exception_ptr.h	/^      void _M_addref() _GLIBCXX_USE_NOEXCEPT;$/;"	m	class:std::__exception_ptr::exception_ptr
_GLIBCXX_USE_NOEXCEPT	5/bits/exception_ptr.h	/^      void _M_release() _GLIBCXX_USE_NOEXCEPT;$/;"	m	class:std::__exception_ptr::exception_ptr
_GLIBCXX_USE_NOEXCEPT	5/bits/exception_ptr.h	/^      void _M_safe_bool_dummy() _GLIBCXX_USE_NOEXCEPT$/;"	m	class:std::__exception_ptr::exception_ptr
_GLIBCXX_USE_NOEXCEPT	5/bits/exception_ptr.h	/^      ~exception_ptr() _GLIBCXX_USE_NOEXCEPT;$/;"	m	class:std::__exception_ptr::exception_ptr
_GLIBCXX_USE_NOEXCEPT	5/bits/exception_ptr.h	/^  exception_ptr current_exception() _GLIBCXX_USE_NOEXCEPT;$/;"	m	namespace:std
_GLIBCXX_USE_NOEXCEPT	5/debug/safe_base.h	/^    _M_swap(_Safe_sequence_base& __x) _GLIBCXX_USE_NOEXCEPT;$/;"	m	class:__gnu_debug::_Safe_sequence_base
_GLIBCXX_VERBOSE_LEVEL	5/parallel/compiletime_settings.h	37;"	d
_GLIBCXX_VISIBILITY	5/backward/auto_ptr.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/backward/binders.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/backward/hash_fun.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/backward/hashtable.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/algorithmfwd.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/alloc_traits.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/allocated_ptr.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/allocator.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/atomic_base.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/atomic_futex.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/basic_ios.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/basic_string.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/boost_concept_check.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/char_traits.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/char_traits.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/codecvt.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/cpp_type_traits.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/cpp_type_traits.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/enable_special_members.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/forward_list.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/functexcept.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/functional_hash.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/gslice.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/gslice_array.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/hashtable.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/hashtable_policy.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/indirect_array.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/ios_base.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/locale_classes.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/locale_conv.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/locale_facets.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/locale_facets_nonio.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/localefwd.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/mask_array.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/memoryfwd.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/move.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/ostream_insert.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/parse_numbers.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/postypes.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/ptr_traits.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/quoted_string.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/random.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/range_access.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/regex.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/regex_automaton.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/regex_compiler.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/regex_constants.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/regex_error.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/regex_executor.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/regex_scanner.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/shared_ptr.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/shared_ptr_atomic.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/shared_ptr_base.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/slice_array.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/stl_algo.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/stl_algobase.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/stl_bvector.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/stl_construct.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/stl_deque.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/stl_function.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/stl_heap.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/stl_iterator.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/stl_iterator.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/stl_iterator_base_funcs.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/stl_iterator_base_types.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/stl_list.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/stl_map.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/stl_multimap.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/stl_multiset.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/stl_numeric.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/stl_pair.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/stl_queue.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/stl_raw_storage_iter.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/stl_relops.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/stl_set.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/stl_stack.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/stl_tempbuf.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/stl_tree.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/stl_uninitialized.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/stl_vector.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/stream_iterator.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/streambuf_iterator.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/stringfwd.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/uniform_int_dist.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/unique_ptr.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/unordered_map.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/unordered_set.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/uses_allocator.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/valarray_after.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/valarray_array.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/bits/valarray_before.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/debug/map.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/debug/multimap.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/debug/multiset.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/debug/set.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/decimal/decimal.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/experimental/fs_dir.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/experimental/fs_fwd.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/experimental/fs_ops.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/experimental/fs_path.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/ext/alloc_traits.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/ext/array_allocator.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/ext/atomicity.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/ext/bitmap_allocator.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/ext/cast.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/ext/codecvt_specializations.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/ext/codecvt_specializations.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/ext/concurrence.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/ext/debug_allocator.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/ext/enc_filebuf.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/ext/extptr_allocator.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/ext/malloc_allocator.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/ext/mt_allocator.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/ext/new_allocator.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/ext/numeric_traits.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/ext/pod_char_traits.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/ext/pod_char_traits.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/ext/pointer.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/ext/pointer.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/ext/pool_allocator.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/ext/rc_string_base.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/ext/ropeimpl.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/ext/sso_string_base.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/ext/stdio_filebuf.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/ext/stdio_sync_filebuf.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/ext/string_conversions.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/ext/throw_allocator.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/ext/throw_allocator.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/ext/type_traits.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/ext/typelist.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/ext/vstring.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/ext/vstring.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/ext/vstring_fwd.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/ext/vstring_util.h	/^namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/parallel/algo.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/parallel/algobase.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/parallel/algorithmfwd.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/parallel/base.h	/^namespace std _GLIBCXX_VISIBILITY(default) $/;"	f
_GLIBCXX_VISIBILITY	5/parallel/numericfwd.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/profile/base.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/profile/iterator_tracker.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/profile/map.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/profile/multimap.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/profile/multiset.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/profile/ordered_base.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/profile/set.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/profile/unordered_base.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/tr1/functional_hash.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/tr1/hashtable.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/tr1/hashtable_policy.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/tr1/random.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/tr1/shared_ptr.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/tr1/special_function_util.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/tr1/unordered_map.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VISIBILITY	5/tr1/unordered_set.h	/^namespace std _GLIBCXX_VISIBILITY(default)$/;"	f
_GLIBCXX_VOLATILE	5/parallel/partition.h	432;"	d
_GLIBCXX_VOLATILE	5/parallel/partition.h	43;"	d
_GLIBCXX_VOLATILE	5/parallel/queue.h	153;"	d
_GLIBCXX_VOLATILE	5/parallel/queue.h	40;"	d
_GLIBCXX_WRITE_MEM_BARRIER	5/ext/atomicity.h	114;"	d
_GSLICE_ARRAY_H	5/bits/gslice_array.h	33;"	d
_GSLICE_ARRAY_H	cpp_src/gslice_array.h	39;"	d
_GSLICE_H	5/bits/gslice.h	33;"	d
_GSLICE_H	cpp_src/gslice.h	39;"	d
_GeneratorConcept	cpp_src/boost_concept_check.h	/^  struct _GeneratorConcept$/;"	s
_GeneratorConcept	cpp_src/boost_concept_check.h	/^  struct _GeneratorConcept<_Func,void>$/;"	s
_GuardedIterator	5/parallel/multiway_merge.h	/^      _GuardedIterator(_RAIter __begin, _RAIter __end, _Compare& __comp)$/;"	f	class:__gnu_parallel::_GuardedIterator
_GuardedIterator	5/parallel/multiway_merge.h	/^    class _GuardedIterator$/;"	c	namespace:__gnu_parallel
_HASHTABLE_H	5/bits/hashtable.h	31;"	d
_HASHTABLE_POLICY_H	5/bits/hashtable_policy.h	32;"	d
_HASH_BYTES_H	5/bits/hash_bytes.h	31;"	d
_Head	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      _Head() : base_type(head_node) { }$/;"	f	struct:__gnu_pbds::detail::pat_trie_base::_Head
_Head	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^    struct _Head$/;"	s	struct:__gnu_pbds::detail::pat_trie_base
_IBase	cpp_src/valarray_after.h	/^      _IBase (const _Dom& __e, const valarray<size_t>& __i)$/;"	f	class:std::_IBase
_IBase	cpp_src/valarray_after.h	/^    class _IBase$/;"	c	namespace:std
_IClos	cpp_src/valarray_after.h	/^      _IClos (const _Dom& __e, const valarray<size_t>& __i)$/;"	f	struct:std::_IClos
_IClos	cpp_src/valarray_after.h	/^      _IClos (const valarray<_Tp>& __a, const valarray<size_t>& __i)$/;"	f	struct:std::_IClos
_IClos	cpp_src/valarray_after.h	/^    struct _IClos<_Expr, _Dom>$/;"	s	namespace:std
_IClos	cpp_src/valarray_after.h	/^    struct _IClos<_ValArray, _Tp>$/;"	s	namespace:std
_INDIRECT_ARRAY_H	5/bits/indirect_array.h	33;"	d
_INDIRECT_ARRAY_H	cpp_src/indirect_array.h	39;"	d
_IOS_BASE_H	5/bits/ios_base.h	35;"	d
_IOS_BASE_H	cpp_src/ios_base.h	41;"	d
_ITERATOR_BASE_FUNCS_H	cpp_src/stl_iterator_base_funcs.h	66;"	d
_ITERATOR_BASE_TYPES_H	cpp_src/stl_iterator_base_types.h	65;"	d
_ITERATOR_H	cpp_src/stl_iterator.h	67;"	d
_Identity	cpp_src/stl_function.h	/^    struct _Identity : public unary_function<_Tp,_Tp>$/;"	s	namespace:std
_Impl	cpp_src/locale_classes.h	/^  class locale::_Impl$/;"	c	class:std::locale
_Indexer	cpp_src/gslice.h	/^    struct _Indexer$/;"	s	class:std::gslice
_Inode	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^    _Inode(size_type len, const a_const_iterator it)$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
_Inode	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^    struct _Inode$/;"	s	struct:__gnu_pbds::detail::pat_trie_base
_InputArray	opencv2/core/mat.hpp	/^class CV_EXPORTS _InputArray$/;"	c	namespace:cv
_InputArray	opencv2/core/mat.inl.hpp	/^_InputArray::_InputArray(const Mat_<_Tp>& m)$/;"	f	class:cv::_InputArray
_InputArray	opencv2/core/mat.inl.hpp	/^_InputArray::_InputArray(const Matx<_Tp, m, n>& mtx)$/;"	f	class:cv::_InputArray
_InputArray	opencv2/core/mat.inl.hpp	/^_InputArray::_InputArray(const _Tp* vec, int n)$/;"	f	class:cv::_InputArray
_InputArray	opencv2/core/mat.inl.hpp	/^_InputArray::_InputArray(const std::vector<Mat_<_Tp> >& vec)$/;"	f	class:cv::_InputArray
_InputArray	opencv2/core/mat.inl.hpp	/^_InputArray::_InputArray(const std::vector<_Tp>& vec)$/;"	f	class:cv::_InputArray
_InputArray	opencv2/core/mat.inl.hpp	/^_InputArray::_InputArray(const std::vector<bool>& vec)$/;"	f	class:cv::_InputArray
_InputArray	opencv2/core/mat.inl.hpp	/^_InputArray::_InputArray(const std::vector<std::vector<_Tp> >& vec)$/;"	f	class:cv::_InputArray
_InputArray	opencv2/core/mat.inl.hpp	/^inline _InputArray::_InputArray() { init(NONE, 0); }$/;"	f	class:cv::_InputArray
_InputArray	opencv2/core/mat.inl.hpp	/^inline _InputArray::_InputArray(const Mat& m) { init(MAT+ACCESS_READ, &m); }$/;"	f	class:cv::_InputArray
_InputArray	opencv2/core/mat.inl.hpp	/^inline _InputArray::_InputArray(const MatExpr& expr)$/;"	f	class:cv::_InputArray
_InputArray	opencv2/core/mat.inl.hpp	/^inline _InputArray::_InputArray(const UMat& m) { init(UMAT+ACCESS_READ, &m); }$/;"	f	class:cv::_InputArray
_InputArray	opencv2/core/mat.inl.hpp	/^inline _InputArray::_InputArray(const cuda::GpuMat& d_mat)$/;"	f	class:cv::_InputArray
_InputArray	opencv2/core/mat.inl.hpp	/^inline _InputArray::_InputArray(const cuda::HostMem& cuda_mem)$/;"	f	class:cv::_InputArray
_InputArray	opencv2/core/mat.inl.hpp	/^inline _InputArray::_InputArray(const double& val)$/;"	f	class:cv::_InputArray
_InputArray	opencv2/core/mat.inl.hpp	/^inline _InputArray::_InputArray(const ogl::Buffer& buf)$/;"	f	class:cv::_InputArray
_InputArray	opencv2/core/mat.inl.hpp	/^inline _InputArray::_InputArray(const std::vector<Mat>& vec) { init(STD_VECTOR_MAT+ACCESS_READ, &vec); }$/;"	f	class:cv::_InputArray
_InputArray	opencv2/core/mat.inl.hpp	/^inline _InputArray::_InputArray(const std::vector<UMat>& vec) { init(STD_VECTOR_UMAT+ACCESS_READ, &vec); }$/;"	f	class:cv::_InputArray
_InputArray	opencv2/core/mat.inl.hpp	/^inline _InputArray::_InputArray(const std::vector<cuda::GpuMat>& d_mat)$/;"	f	class:cv::_InputArray
_InputArray	opencv2/core/mat.inl.hpp	/^inline _InputArray::_InputArray(int _flags, void* _obj) { init(_flags, _obj); }$/;"	f	class:cv::_InputArray
_InputArray	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^__host__ _InputArray::_InputArray(const cudev::GpuMat_<_Tp>& m)$/;"	f	class:cv::_InputArray
_InputIteratorConcept	cpp_src/boost_concept_check.h	/^  struct _InputIteratorConcept$/;"	s
_InputOutputArray	opencv2/core/mat.hpp	/^class CV_EXPORTS _InputOutputArray : public _OutputArray$/;"	c	namespace:cv
_InputOutputArray	opencv2/core/mat.inl.hpp	/^_InputOutputArray::_InputOutputArray(Mat_<_Tp>& m)$/;"	f	class:cv::_InputOutputArray
_InputOutputArray	opencv2/core/mat.inl.hpp	/^_InputOutputArray::_InputOutputArray(Matx<_Tp, m, n>& mtx)$/;"	f	class:cv::_InputOutputArray
_InputOutputArray	opencv2/core/mat.inl.hpp	/^_InputOutputArray::_InputOutputArray(_Tp* vec, int n)$/;"	f	class:cv::_InputOutputArray
_InputOutputArray	opencv2/core/mat.inl.hpp	/^_InputOutputArray::_InputOutputArray(const Mat_<_Tp>& m)$/;"	f	class:cv::_InputOutputArray
_InputOutputArray	opencv2/core/mat.inl.hpp	/^_InputOutputArray::_InputOutputArray(const Matx<_Tp, m, n>& mtx)$/;"	f	class:cv::_InputOutputArray
_InputOutputArray	opencv2/core/mat.inl.hpp	/^_InputOutputArray::_InputOutputArray(const _Tp* vec, int n)$/;"	f	class:cv::_InputOutputArray
_InputOutputArray	opencv2/core/mat.inl.hpp	/^_InputOutputArray::_InputOutputArray(const std::vector<Mat_<_Tp> >& vec)$/;"	f	class:cv::_InputOutputArray
_InputOutputArray	opencv2/core/mat.inl.hpp	/^_InputOutputArray::_InputOutputArray(const std::vector<_Tp>& vec)$/;"	f	class:cv::_InputOutputArray
_InputOutputArray	opencv2/core/mat.inl.hpp	/^_InputOutputArray::_InputOutputArray(const std::vector<std::vector<_Tp> >& vec)$/;"	f	class:cv::_InputOutputArray
_InputOutputArray	opencv2/core/mat.inl.hpp	/^_InputOutputArray::_InputOutputArray(std::vector<Mat_<_Tp> >& vec)$/;"	f	class:cv::_InputOutputArray
_InputOutputArray	opencv2/core/mat.inl.hpp	/^_InputOutputArray::_InputOutputArray(std::vector<_Tp>& vec)$/;"	f	class:cv::_InputOutputArray
_InputOutputArray	opencv2/core/mat.inl.hpp	/^_InputOutputArray::_InputOutputArray(std::vector<std::vector<_Tp> >& vec)$/;"	f	class:cv::_InputOutputArray
_InputOutputArray	opencv2/core/mat.inl.hpp	/^inline _InputOutputArray::_InputOutputArray() { init(ACCESS_RW, 0); }$/;"	f	class:cv::_InputOutputArray
_InputOutputArray	opencv2/core/mat.inl.hpp	/^inline _InputOutputArray::_InputOutputArray(Mat& m) { init(MAT+ACCESS_RW, &m); }$/;"	f	class:cv::_InputOutputArray
_InputOutputArray	opencv2/core/mat.inl.hpp	/^inline _InputOutputArray::_InputOutputArray(UMat& m) { init(UMAT+ACCESS_RW, &m); }$/;"	f	class:cv::_InputOutputArray
_InputOutputArray	opencv2/core/mat.inl.hpp	/^inline _InputOutputArray::_InputOutputArray(const Mat& m)$/;"	f	class:cv::_InputOutputArray
_InputOutputArray	opencv2/core/mat.inl.hpp	/^inline _InputOutputArray::_InputOutputArray(const UMat& m)$/;"	f	class:cv::_InputOutputArray
_InputOutputArray	opencv2/core/mat.inl.hpp	/^inline _InputOutputArray::_InputOutputArray(const cuda::GpuMat& d_mat)$/;"	f	class:cv::_InputOutputArray
_InputOutputArray	opencv2/core/mat.inl.hpp	/^inline _InputOutputArray::_InputOutputArray(const cuda::HostMem& cuda_mem)$/;"	f	class:cv::_InputOutputArray
_InputOutputArray	opencv2/core/mat.inl.hpp	/^inline _InputOutputArray::_InputOutputArray(const ogl::Buffer& buf)$/;"	f	class:cv::_InputOutputArray
_InputOutputArray	opencv2/core/mat.inl.hpp	/^inline _InputOutputArray::_InputOutputArray(const std::vector<Mat>& vec)$/;"	f	class:cv::_InputOutputArray
_InputOutputArray	opencv2/core/mat.inl.hpp	/^inline _InputOutputArray::_InputOutputArray(const std::vector<UMat>& vec)$/;"	f	class:cv::_InputOutputArray
_InputOutputArray	opencv2/core/mat.inl.hpp	/^inline _InputOutputArray::_InputOutputArray(const std::vector<cuda::GpuMat>& d_mat)$/;"	f	class:cv::_InputOutputArray
_InputOutputArray	opencv2/core/mat.inl.hpp	/^inline _InputOutputArray::_InputOutputArray(cuda::GpuMat& d_mat)$/;"	f	class:cv::_InputOutputArray
_InputOutputArray	opencv2/core/mat.inl.hpp	/^inline _InputOutputArray::_InputOutputArray(cuda::HostMem& cuda_mem)$/;"	f	class:cv::_InputOutputArray
_InputOutputArray	opencv2/core/mat.inl.hpp	/^inline _InputOutputArray::_InputOutputArray(int _flags, void* _obj) { init(_flags|ACCESS_RW, _obj); }$/;"	f	class:cv::_InputOutputArray
_InputOutputArray	opencv2/core/mat.inl.hpp	/^inline _InputOutputArray::_InputOutputArray(ogl::Buffer& buf)$/;"	f	class:cv::_InputOutputArray
_InputOutputArray	opencv2/core/mat.inl.hpp	/^inline _InputOutputArray::_InputOutputArray(std::vector<Mat>& vec) { init(STD_VECTOR_MAT+ACCESS_RW, &vec); }$/;"	f	class:cv::_InputOutputArray
_InputOutputArray	opencv2/core/mat.inl.hpp	/^inline _InputOutputArray::_InputOutputArray(std::vector<UMat>& vec) { init(STD_VECTOR_UMAT+ACCESS_RW, &vec); }$/;"	f	class:cv::_InputOutputArray
_InputOutputArray	opencv2/core/mat.inl.hpp	/^inline _InputOutputArray::_InputOutputArray(std::vector<bool>&)$/;"	f	class:cv::_InputOutputArray
_InputOutputArray	opencv2/core/mat.inl.hpp	/^template<> inline _InputOutputArray::_InputOutputArray(std::vector<cuda::GpuMat>& d_mat)$/;"	f	class:cv::_InputOutputArray
_Insert_range_from_self_is_safe	5/debug/functions.h	/^    struct _Insert_range_from_self_is_safe$/;"	s	namespace:__gnu_debug
_IntegerConcept	cpp_src/boost_concept_check.h	/^  struct _IntegerConcept {$/;"	s
_IntegerConcept	cpp_src/boost_concept_check.h	/^  template <> struct _IntegerConcept<int> { void __constraints() {} };$/;"	s
_IntegerConcept	cpp_src/boost_concept_check.h	/^  template <> struct _IntegerConcept<long long> { void __constraints() {} };$/;"	s
_IntegerConcept	cpp_src/boost_concept_check.h	/^  template <> struct _IntegerConcept<long> { void __constraints() {} };$/;"	s
_IntegerConcept	cpp_src/boost_concept_check.h	/^  template <> struct _IntegerConcept<short> { void __constraints() {} };$/;"	s
_IntegerConcept	cpp_src/boost_concept_check.h	/^  template <> struct _IntegerConcept<unsigned int> { void __constraints() {} };$/;"	s
_IntegerConcept	cpp_src/boost_concept_check.h	/^  template <> struct _IntegerConcept<unsigned long long>$/;"	s
_IntegerConcept	cpp_src/boost_concept_check.h	/^  template <> struct _IntegerConcept<unsigned long> { void __constraints() {} };$/;"	s
_IntegerConcept	cpp_src/boost_concept_check.h	/^  template <> struct _IntegerConcept<unsigned short> { void __constraints(){} };$/;"	s
_Ios_Fmtflags	cpp_src/ios_base.h	/^  enum _Ios_Fmtflags $/;"	g	namespace:std
_Ios_Iostate	cpp_src/ios_base.h	/^  enum _Ios_Iostate$/;"	g	namespace:std
_Ios_Openmode	cpp_src/ios_base.h	/^  enum _Ios_Openmode $/;"	g	namespace:std
_Ios_Seekdir	cpp_src/ios_base.h	/^  enum _Ios_Seekdir $/;"	g	namespace:std
_IplConvKernel	opencv2/core/types_c.h	/^typedef struct _IplConvKernel$/;"	s
_IplConvKernelFP	opencv2/core/types_c.h	/^typedef struct _IplConvKernelFP$/;"	s
_IplImage	opencv2/core/types_c.h	/^    _IplImage() {}$/;"	f	struct:_IplImage
_IplImage	opencv2/core/types_c.h	/^_IplImage$/;"	s
_IplROI	opencv2/core/types_c.h	/^typedef struct _IplROI$/;"	s
_IsUnused	5/bits/boost_concept_check.h	51;"	d
_IsUnused	5/bits/boost_concept_check.h	786;"	d
_IsUnused	cpp_src/boost_concept_check.h	55;"	d
_Is_contiguous_sequence	5/debug/functions.h	/^    struct _Is_contiguous_sequence : std::__false_type { };$/;"	s	namespace:__gnu_debug
_Is_iterator	5/debug/formatter.h	/^    struct _Is_iterator { };$/;"	s	class:__gnu_debug::_Error_formatter
_Is_sequence	5/debug/formatter.h	/^    struct _Is_sequence { };$/;"	s	class:__gnu_debug::_Error_formatter
_Iter	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      _Iter(const PB_DS_ODIR_IT_C_DEC& other)$/;"	f	class:__gnu_pbds::detail::pat_trie_base::_Iter
_Iter	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      _Iter(node_pointer p_nd = 0)$/;"	f	class:__gnu_pbds::detail::pat_trie_base::_Iter
_Iter	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^    class _Iter$/;"	c	struct:__gnu_pbds::detail::pat_trie_base
_Iter_base	5/debug/safe_iterator.h	/^	: _Iter_base(__x.base())$/;"	f	class:__gnu_debug::_Safe_iterator
_Iter_base	5/debug/safe_iterator.h	/^      : _Iter_base()$/;"	f	class:__gnu_debug::_Safe_iterator
_Iter_base	5/debug/safe_iterator.h	/^      : _Iter_base(__i)$/;"	f	class:__gnu_debug::_Safe_iterator
_Iter_base	5/debug/safe_iterator.h	/^      : _Iter_base(__x.base())$/;"	f	class:__gnu_debug::_Safe_iterator
_Iter_base	5/debug/safe_iterator.h	/^      _Safe_iterator() _GLIBCXX_NOEXCEPT : _Iter_base() { }$/;"	f	class:__gnu_debug::_Safe_iterator
_Iter_base	5/debug/safe_iterator.h	/^      typedef _Iterator _Iter_base;$/;"	t	class:__gnu_debug::_Safe_iterator
_Iter_base	5/debug/safe_local_iterator.h	/^      : _Iter_base()$/;"	f	class:__gnu_debug::_Safe_local_iterator
_Iter_base	5/debug/safe_local_iterator.h	/^      : _Iter_base(__i)$/;"	f	class:__gnu_debug::_Safe_local_iterator
_Iter_base	5/debug/safe_local_iterator.h	/^      : _Iter_base(__x.base())$/;"	f	class:__gnu_debug::_Safe_local_iterator
_Iter_base	5/debug/safe_local_iterator.h	/^      _Safe_local_iterator() noexcept : _Iter_base() { }$/;"	f	class:__gnu_debug::_Safe_local_iterator
_Iter_base	5/debug/safe_local_iterator.h	/^      typedef _Iterator _Iter_base;$/;"	t	class:__gnu_debug::_Safe_local_iterator
_Iter_comp_iter	5/bits/predefined_ops.h	/^      _Iter_comp_iter(_Compare __comp)$/;"	f	struct:__gnu_cxx::__ops::_Iter_comp_iter
_Iter_comp_iter	5/bits/predefined_ops.h	/^    struct _Iter_comp_iter$/;"	s	namespace:__gnu_cxx::__ops
_Iter_comp_to_iter	5/bits/predefined_ops.h	/^      _Iter_comp_to_iter(_Compare __comp, _Iterator1 __it1)$/;"	f	struct:__gnu_cxx::__ops::_Iter_comp_to_iter
_Iter_comp_to_iter	5/bits/predefined_ops.h	/^    struct _Iter_comp_to_iter$/;"	s	namespace:__gnu_cxx::__ops
_Iter_comp_to_val	5/bits/predefined_ops.h	/^      _Iter_comp_to_val(_Compare __comp, _Value& __value)$/;"	f	struct:__gnu_cxx::__ops::_Iter_comp_to_val
_Iter_comp_to_val	5/bits/predefined_ops.h	/^    struct _Iter_comp_to_val$/;"	s	namespace:__gnu_cxx::__ops
_Iter_comp_val	5/bits/predefined_ops.h	/^      _Iter_comp_val(_Compare __comp)$/;"	f	struct:__gnu_cxx::__ops::_Iter_comp_val
_Iter_comp_val	5/bits/predefined_ops.h	/^    struct _Iter_comp_val$/;"	s	namespace:__gnu_cxx::__ops
_Iter_equal_to_iter	5/bits/predefined_ops.h	/^  struct _Iter_equal_to_iter$/;"	s	namespace:__gnu_cxx::__ops
_Iter_equal_to_val	5/bits/predefined_ops.h	/^  struct _Iter_equal_to_val$/;"	s	namespace:__gnu_cxx::__ops
_Iter_equals_iter	5/bits/predefined_ops.h	/^      _Iter_equals_iter(_Iterator1 __it1)$/;"	f	struct:__gnu_cxx::__ops::_Iter_equals_iter
_Iter_equals_iter	5/bits/predefined_ops.h	/^    struct _Iter_equals_iter$/;"	s	namespace:__gnu_cxx::__ops
_Iter_equals_val	5/bits/predefined_ops.h	/^      _Iter_equals_val(_Value& __value)$/;"	f	struct:__gnu_cxx::__ops::_Iter_equals_val
_Iter_equals_val	5/bits/predefined_ops.h	/^    struct _Iter_equals_val$/;"	s	namespace:__gnu_cxx::__ops
_Iter_less_iter	5/bits/predefined_ops.h	/^  struct _Iter_less_iter$/;"	s	namespace:__gnu_cxx::__ops
_Iter_less_val	5/bits/predefined_ops.h	/^  struct _Iter_less_val$/;"	s	namespace:__gnu_cxx::__ops
_Iter_negate	5/bits/predefined_ops.h	/^      _Iter_negate(_Predicate __pred)$/;"	f	struct:__gnu_cxx::__ops::_Iter_negate
_Iter_negate	5/bits/predefined_ops.h	/^    struct _Iter_negate$/;"	s	namespace:__gnu_cxx::__ops
_Iter_pred	5/bits/predefined_ops.h	/^      _Iter_pred(_Predicate __pred)$/;"	f	struct:__gnu_cxx::__ops::_Iter_pred
_Iter_pred	5/bits/predefined_ops.h	/^    struct _Iter_pred$/;"	s	namespace:__gnu_cxx::__ops
_Iterator	cpp_src/boost_concept_check.h	/^    typedef typename _AssociativeContainer::iterator _Iterator;$/;"	t	struct:_AssociativeContainerConcept
_Iterator	cpp_src/boost_concept_check.h	/^    typedef typename _Container::iterator _Iterator;$/;"	t	struct:_Mutable_ContainerConcept
_Iterator	cpp_src/boost_concept_check.h	/^    typedef typename _RandomAccessContainer::iterator _Iterator;$/;"	t	struct:_Mutable_RandomAccessContainerConcept
_Iterator	cpp_src/boost_concept_check.h	/^    typedef typename _ReversibleContainer::iterator _Iterator;$/;"	t	struct:_Mutable_ReversibleContainerConcept
_Iterator	cpp_src/boost_concept_check.h	/^    typedef typename _SortedAssociativeContainer::iterator _Iterator;$/;"	t	struct:_SortedAssociativeContainerConcept
_IteratorPair	5/parallel/iterator.h	/^      _IteratorPair() { }$/;"	f	class:__gnu_parallel::_IteratorPair
_IteratorPair	5/parallel/iterator.h	/^      _IteratorPair(const _Iterator1& __first, const _Iterator2& __second)$/;"	f	class:__gnu_parallel::_IteratorPair
_IteratorPair	5/parallel/iterator.h	/^    class _IteratorPair : public std::pair<_Iterator1, _Iterator2>$/;"	c	namespace:__gnu_parallel
_IteratorPair	5/parallel/set_operations.h	/^      typedef typename std::pair<_IIter, _IIter> _IteratorPair;$/;"	t	struct:__gnu_parallel::__difference_func
_IteratorPair	5/parallel/set_operations.h	/^      typedef typename std::pair<_IIter, _IIter> _IteratorPair;$/;"	t	struct:__gnu_parallel::__intersection_func
_IteratorPair	5/parallel/set_operations.h	/^      typedef typename std::pair<_IIter, _IIter> _IteratorPair;$/;"	t	struct:__gnu_parallel::__symmetric_difference_func
_IteratorTriple	5/parallel/iterator.h	/^      _IteratorTriple() { }$/;"	f	class:__gnu_parallel::_IteratorTriple
_IteratorTriple	5/parallel/iterator.h	/^      _IteratorTriple(const _Iterator1& __first, const _Iterator2& __second,$/;"	f	class:__gnu_parallel::_IteratorTriple
_IteratorTriple	5/parallel/iterator.h	/^    class _IteratorTriple$/;"	c	namespace:__gnu_parallel
_Iterator_state	5/debug/formatter.h	/^    enum _Iterator_state$/;"	g	class:__gnu_debug::_Error_formatter
_Job	5/parallel/workstealing.h	/^    struct _Job$/;"	s	namespace:__gnu_parallel
_Key_alloc_type	cpp_src/stl_multiset.h	/^      typedef typename _Alloc::template rebind<_Key>::other _Key_alloc_type;$/;"	t	class:std::multiset
_Key_alloc_type	cpp_src/stl_set.h	/^      typedef typename _Alloc::template rebind<_Key>::other _Key_alloc_type;$/;"	t	class:std::set
_LIST_H	cpp_src/stl_list.h	63;"	d
_LOCALE_CLASSES_H	5/bits/locale_classes.h	35;"	d
_LOCALE_CLASSES_H	cpp_src/locale_classes.h	41;"	d
_LOCALE_CONV_H	5/bits/locale_conv.h	31;"	d
_LOCALE_FACETS_H	5/bits/locale_facets.h	35;"	d
_LOCALE_FACETS_H	cpp_src/locale_facets.h	41;"	d
_LOCALE_FACETS_NONIO_H	5/bits/locale_facets_nonio.h	35;"	d
_LOCALE_FWD_H	5/bits/localefwd.h	35;"	d
_LOCALE_FWD_H	cpp_src/localefwd.h	41;"	d
_Leaf	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      _Leaf(const_reference other)$/;"	f	struct:__gnu_pbds::detail::pat_trie_base::_Leaf
_Leaf	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^    struct _Leaf$/;"	s	struct:__gnu_pbds::detail::pat_trie_base
_Less	5/parallel/base.h	/^    struct _Less : std::binary_function<_T1, _T2, bool>$/;"	s	namespace:__gnu_parallel
_Less	5/parallel/base.h	/^    struct _Less<_Tp, _Tp>$/;"	s	namespace:__gnu_parallel
_LessThanComparableConcept	cpp_src/boost_concept_check.h	/^  struct _LessThanComparableConcept$/;"	s
_Lexicographic	5/parallel/multiseq_selection.h	/^      _Lexicographic(_Compare& __comp) : _M_comp(__comp) { }$/;"	f	class:__gnu_parallel::_Lexicographic
_Lexicographic	5/parallel/multiseq_selection.h	/^    class _Lexicographic$/;"	c	namespace:__gnu_parallel
_LexicographicReverse	5/parallel/multiseq_selection.h	/^      _LexicographicReverse(_Compare& __comp) : _M_comp(__comp) { }$/;"	f	class:__gnu_parallel::_LexicographicReverse
_LexicographicReverse	5/parallel/multiseq_selection.h	/^    class _LexicographicReverse : public std::binary_function<_T1, _T2, bool>$/;"	c	namespace:__gnu_parallel
_Link_type	cpp_src/stl_tree.h	/^      typedef _Rb_tree_node* _Link_type;$/;"	t	class:std::_Rb_tree
_Link_type	cpp_src/stl_tree.h	/^      typedef _Rb_tree_node<_Tp>*           _Link_type;$/;"	t	struct:std::_Rb_tree_iterator
_Link_type	cpp_src/stl_tree.h	/^      typedef _Rb_tree_node<_Val>* _Link_type;$/;"	t	struct:std::_Rb_tree_node
_Link_type	cpp_src/stl_tree.h	/^      typedef const _Rb_tree_node<_Tp>*           _Link_type;$/;"	t	struct:std::_Rb_tree_const_iterator
_List_base	cpp_src/stl_list.h	/^      _List_base(const allocator_type& __a)$/;"	f	class:std::_List_base
_List_base	cpp_src/stl_list.h	/^    class _List_base$/;"	c	namespace:std
_List_const_iterator	cpp_src/stl_list.h	/^      _List_const_iterator()$/;"	f	struct:std::_List_const_iterator
_List_const_iterator	cpp_src/stl_list.h	/^      _List_const_iterator(const _List_node_base* __x)$/;"	f	struct:std::_List_const_iterator
_List_const_iterator	cpp_src/stl_list.h	/^      _List_const_iterator(const iterator& __x)$/;"	f	struct:std::_List_const_iterator
_List_const_iterator	cpp_src/stl_list.h	/^    struct _List_const_iterator$/;"	s	namespace:std
_List_impl	cpp_src/stl_list.h	/^	_List_impl(const _Node_alloc_type& __a)$/;"	f	struct:std::_List_base::_List_impl
_List_impl	cpp_src/stl_list.h	/^      struct _List_impl $/;"	s	class:std::_List_base
_List_iterator	cpp_src/stl_list.h	/^      _List_iterator()$/;"	f	struct:std::_List_iterator
_List_iterator	cpp_src/stl_list.h	/^      _List_iterator(_List_node_base* __x)$/;"	f	struct:std::_List_iterator
_List_iterator	cpp_src/stl_list.h	/^    struct _List_iterator$/;"	s	namespace:std
_List_node	cpp_src/stl_list.h	/^    struct _List_node : public _List_node_base$/;"	s	namespace:std
_List_node_base	cpp_src/stl_list.h	/^  struct _List_node_base$/;"	s	namespace:std
_Loser	5/parallel/losertree.h	/^      struct _Loser$/;"	s	class:__gnu_parallel::_LoserTreeBase
_Loser	5/parallel/losertree.h	/^      struct _Loser$/;"	s	class:__gnu_parallel::_LoserTreePointerBase
_Loser	5/parallel/losertree.h	/^      struct _Loser$/;"	s	class:__gnu_parallel::_LoserTreePointerUnguardedBase
_Loser	5/parallel/losertree.h	/^      struct _Loser$/;"	s	class:__gnu_parallel::_LoserTreeUnguardedBase
_LoserTree	5/parallel/losertree.h	/^      _LoserTree(unsigned int __k, _Compare __comp)$/;"	f	class:__gnu_parallel::_LoserTree
_LoserTree	5/parallel/losertree.h	/^    class _LoserTree$/;"	c	namespace:__gnu_parallel
_LoserTree	5/parallel/losertree.h	/^    class _LoserTree<\/* __stable == *\/false, _Tp, _Compare>$/;"	c	namespace:__gnu_parallel
_LoserTreeBase	5/parallel/losertree.h	/^      _LoserTreeBase(unsigned int __k, _Compare __comp)$/;"	f	class:__gnu_parallel::_LoserTreeBase
_LoserTreeBase	5/parallel/losertree.h	/^    class _LoserTreeBase$/;"	c	namespace:__gnu_parallel
_LoserTreePointer	5/parallel/losertree.h	/^      _LoserTreePointer(unsigned int __k, _Compare __comp = std::less<_Tp>())$/;"	f	class:__gnu_parallel::_LoserTreePointer
_LoserTreePointer	5/parallel/losertree.h	/^    class _LoserTreePointer$/;"	c	namespace:__gnu_parallel
_LoserTreePointer	5/parallel/losertree.h	/^    class _LoserTreePointer<\/* __stable == *\/false, _Tp, _Compare>$/;"	c	namespace:__gnu_parallel
_LoserTreePointerBase	5/parallel/losertree.h	/^      _LoserTreePointerBase(unsigned int __k,$/;"	f	class:__gnu_parallel::_LoserTreePointerBase
_LoserTreePointerBase	5/parallel/losertree.h	/^    class _LoserTreePointerBase$/;"	c	namespace:__gnu_parallel
_LoserTreePointerUnguarded	5/parallel/losertree.h	/^      _LoserTreePointerUnguarded(unsigned int __k, const _Tp& __sentinel,$/;"	f	class:__gnu_parallel::_LoserTreePointerUnguarded
_LoserTreePointerUnguarded	5/parallel/losertree.h	/^    class _LoserTreePointerUnguarded$/;"	c	namespace:__gnu_parallel
_LoserTreePointerUnguarded	5/parallel/losertree.h	/^    class _LoserTreePointerUnguarded<\/* __stable == *\/false, _Tp, _Compare>$/;"	c	namespace:__gnu_parallel
_LoserTreePointerUnguardedBase	5/parallel/losertree.h	/^      _LoserTreePointerUnguardedBase(unsigned int __k, const _Tp& __sentinel,$/;"	f	class:__gnu_parallel::_LoserTreePointerUnguardedBase
_LoserTreePointerUnguardedBase	5/parallel/losertree.h	/^    class _LoserTreePointerUnguardedBase$/;"	c	namespace:__gnu_parallel
_LoserTreeTraits	5/parallel/multiway_merge.h	/^    struct _LoserTreeTraits$/;"	s	namespace:__gnu_parallel
_LoserTreeUnguarded	5/parallel/losertree.h	/^      _LoserTreeUnguarded(unsigned int __k, const _Tp& __sentinel,$/;"	f	class:__gnu_parallel::_LoserTreeUnguarded
_LoserTreeUnguarded	5/parallel/losertree.h	/^    class _LoserTreeUnguarded$/;"	c	namespace:__gnu_parallel
_LoserTreeUnguarded	5/parallel/losertree.h	/^    class _LoserTreeUnguarded<\/* __stable == *\/false, _Tp, _Compare>$/;"	c	namespace:__gnu_parallel
_LoserTreeUnguardedBase	5/parallel/losertree.h	/^      _LoserTreeUnguardedBase(unsigned int __k, const _Tp& __sentinel,$/;"	f	class:__gnu_parallel::_LoserTreeUnguardedBase
_LoserTreeUnguardedBase	5/parallel/losertree.h	/^    class _LoserTreeUnguardedBase$/;"	c	namespace:__gnu_parallel
_MALLOC_ALLOCATOR_H	5/ext/malloc_allocator.h	30;"	d
_MAP_H	cpp_src/stl_map.h	63;"	d
_MASK_ARRAY_H	5/bits/mask_array.h	33;"	d
_MASK_ARRAY_H	cpp_src/mask_array.h	39;"	d
_MEMORYFWD_H	5/bits/memoryfwd.h	44;"	d
_MOVE_H	5/bits/move.h	31;"	d
_MT_ALLOCATOR_H	5/ext/mt_allocator.h	30;"	d
_MULTIMAP_H	cpp_src/stl_multimap.h	62;"	d
_MULTISET_H	cpp_src/stl_multiset.h	62;"	d
_M_accesses	5/profile/impl/profiler_hash_func.h	/^    std::size_t _M_accesses;$/;"	m	class:__gnu_profile::__hashfunc_info
_M_aday1	cpp_src/locale_facets.h	/^      const _CharT*			_M_aday1;$/;"	m	struct:std::__timepunct_cache
_M_aday2	cpp_src/locale_facets.h	/^      const _CharT*			_M_aday2;$/;"	m	struct:std::__timepunct_cache
_M_aday3	cpp_src/locale_facets.h	/^      const _CharT*			_M_aday3;$/;"	m	struct:std::__timepunct_cache
_M_aday4	cpp_src/locale_facets.h	/^      const _CharT*			_M_aday4;$/;"	m	struct:std::__timepunct_cache
_M_aday5	cpp_src/locale_facets.h	/^      const _CharT*			_M_aday5;$/;"	m	struct:std::__timepunct_cache
_M_aday6	cpp_src/locale_facets.h	/^      const _CharT*			_M_aday6;$/;"	m	struct:std::__timepunct_cache
_M_aday7	cpp_src/locale_facets.h	/^      const _CharT*			_M_aday7;$/;"	m	struct:std::__timepunct_cache
_M_add_reference	cpp_src/ios_base.h	/^      _M_add_reference() { __gnu_cxx::__atomic_add_dispatch(&_M_refcount, 1); }$/;"	f	struct:std::ios_base::_Callback_list
_M_add_reference	cpp_src/locale_classes.h	/^    _M_add_reference() const throw()$/;"	f	class:std::locale::facet
_M_add_reference	cpp_src/locale_classes.h	/^    _M_add_reference() throw()$/;"	f	class:std::locale::_Impl
_M_address	5/debug/formatter.h	/^	  const void*      _M_address;$/;"	m	struct:__gnu_debug::_Error_formatter::_Parameter::__anon2::__anon3
_M_address	5/debug/formatter.h	/^	  const void*      _M_address;$/;"	m	struct:__gnu_debug::_Error_formatter::_Parameter::__anon2::__anon4
_M_allocate	cpp_src/stl_bvector.h	/^      _M_allocate(size_t __n)$/;"	f	struct:std::_Bvector_base
_M_allocate	cpp_src/stl_vector.h	/^      _M_allocate(size_t __n)$/;"	f	struct:std::_Vector_base
_M_allocate_and_copy	cpp_src/stl_vector.h	/^        _M_allocate_and_copy(size_type __n,$/;"	f	class:std::vector
_M_allocate_map	cpp_src/stl_deque.h	/^      _M_allocate_map(size_t __n)$/;"	f	class:std::_Deque_base
_M_allocate_node	cpp_src/stl_deque.h	/^      _M_allocate_node()$/;"	f	class:std::_Deque_base
_M_allocated	cpp_src/locale_facets.h	/^      bool				_M_allocated;$/;"	m	struct:std::__moneypunct_cache
_M_allocated	cpp_src/locale_facets.h	/^      bool				_M_allocated;$/;"	m	struct:std::__numpunct_cache
_M_allocated	cpp_src/locale_facets.h	/^      bool				_M_allocated;$/;"	m	struct:std::__timepunct_cache
_M_am	cpp_src/locale_facets.h	/^      const _CharT*			_M_am;$/;"	m	struct:std::__timepunct_cache
_M_am_pm	cpp_src/locale_facets.h	/^      _M_am_pm(const _CharT** __ampm) const$/;"	f	class:std::__timepunct
_M_am_pm_format	cpp_src/locale_facets.h	/^      _M_am_pm_format(const _CharT* __ampm) const$/;"	f	class:std::__timepunct
_M_am_pm_format	cpp_src/locale_facets.h	/^      const _CharT*			_M_am_pm_format;$/;"	m	struct:std::__timepunct_cache
_M_amonth01	cpp_src/locale_facets.h	/^      const _CharT*			_M_amonth01;$/;"	m	struct:std::__timepunct_cache
_M_amonth02	cpp_src/locale_facets.h	/^      const _CharT*			_M_amonth02;$/;"	m	struct:std::__timepunct_cache
_M_amonth03	cpp_src/locale_facets.h	/^      const _CharT*			_M_amonth03;$/;"	m	struct:std::__timepunct_cache
_M_amonth04	cpp_src/locale_facets.h	/^      const _CharT*			_M_amonth04;$/;"	m	struct:std::__timepunct_cache
_M_amonth05	cpp_src/locale_facets.h	/^      const _CharT*			_M_amonth05;$/;"	m	struct:std::__timepunct_cache
_M_amonth06	cpp_src/locale_facets.h	/^      const _CharT*			_M_amonth06;$/;"	m	struct:std::__timepunct_cache
_M_amonth07	cpp_src/locale_facets.h	/^      const _CharT*			_M_amonth07;$/;"	m	struct:std::__timepunct_cache
_M_amonth08	cpp_src/locale_facets.h	/^      const _CharT*			_M_amonth08;$/;"	m	struct:std::__timepunct_cache
_M_amonth09	cpp_src/locale_facets.h	/^      const _CharT*			_M_amonth09;$/;"	m	struct:std::__timepunct_cache
_M_amonth10	cpp_src/locale_facets.h	/^      const _CharT*			_M_amonth10;$/;"	m	struct:std::__timepunct_cache
_M_amonth11	cpp_src/locale_facets.h	/^      const _CharT*			_M_amonth11;$/;"	m	struct:std::__timepunct_cache
_M_amonth12	cpp_src/locale_facets.h	/^      const _CharT*			_M_amonth12;$/;"	m	struct:std::__timepunct_cache
_M_array	cpp_src/gslice_array.h	/^      _Array<_Tp>    _M_array;$/;"	m	class:std::gslice_array
_M_array	cpp_src/indirect_array.h	/^      const _Array<_Tp>	 _M_array;$/;"	m	class:std::indirect_array
_M_array	cpp_src/mask_array.h	/^      const _Array<_Tp>  _M_array;$/;"	m	class:std::mask_array
_M_array	cpp_src/slice_array.h	/^      const _Array<_Tp> _M_array;$/;"	m	class:std::slice_array
_M_array	cpp_src/valarray_after.h	/^      const _Array<_Tp>       _M_array;$/;"	m	class:std::_GBase
_M_array	cpp_src/valarray_before.h	/^      const _Array<_Tp> _M_array;$/;"	m	class:std::_SBase
_M_assign	cpp_src/basic_string.h	/^      _M_assign(_CharT* __d, size_type __n, _CharT __c)$/;"	f	class:std::basic_string
_M_assign_aux	cpp_src/stl_bvector.h	/^      _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	class:std::vector
_M_assign_aux	cpp_src/stl_bvector.h	/^      _M_assign_aux(_InputIterator __first, _InputIterator __last,$/;"	f	class:std::vector
_M_assign_aux	cpp_src/stl_deque.h	/^        _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	class:std::deque
_M_assign_dispatch	cpp_src/stl_bvector.h	/^      _M_assign_dispatch(_InputIterator __first, _InputIterator __last,$/;"	f	class:std::vector
_M_assign_dispatch	cpp_src/stl_bvector.h	/^      _M_assign_dispatch(_Integer __n, _Integer __val, __true_type)$/;"	f	class:std::vector
_M_assign_dispatch	cpp_src/stl_deque.h	/^        _M_assign_dispatch(_InputIterator __first, _InputIterator __last,$/;"	f	class:std::deque
_M_assign_dispatch	cpp_src/stl_deque.h	/^        _M_assign_dispatch(_Integer __n, _Integer __val, __true_type)$/;"	f	class:std::deque
_M_assign_dispatch	cpp_src/stl_list.h	/^        _M_assign_dispatch(_Integer __n, _Integer __val, __true_type)$/;"	f	class:std::list
_M_assign_dispatch	cpp_src/stl_vector.h	/^        _M_assign_dispatch(_InputIterator __first, _InputIterator __last,$/;"	f	class:std::vector
_M_assign_dispatch	cpp_src/stl_vector.h	/^        _M_assign_dispatch(_Integer __n, _Integer __val, __true_type)$/;"	f	class:std::vector
_M_at	5/debug/formatter.h	/^    _M_at(const char* __file, std::size_t __line)$/;"	f	class:__gnu_debug::_Error_formatter
_M_at_eof	cpp_src/streambuf_iterator.h	/^      _M_at_eof() const$/;"	f	class:std::istreambuf_iterator
_M_atoms	cpp_src/locale_facets.h	/^      _CharT				_M_atoms[money_base::_S_end];$/;"	m	struct:std::__moneypunct_cache
_M_atoms_in	cpp_src/locale_facets.h	/^      _CharT				_M_atoms_in[__num_base::_S_iend];$/;"	m	struct:std::__numpunct_cache
_M_atoms_out	cpp_src/locale_facets.h	/^      _CharT				_M_atoms_out[__num_base::_S_oend];$/;"	m	struct:std::__numpunct_cache
_M_attach	5/debug/safe_iterator.h	/^      _M_attach(_Safe_sequence_base* __seq)$/;"	f	class:__gnu_debug::_Safe_iterator
_M_attach	5/debug/safe_local_iterator.h	/^      _M_attach(_Safe_sequence_base* __seq)$/;"	f	class:__gnu_debug::_Safe_local_iterator
_M_attach_single	5/debug/safe_iterator.h	/^      _M_attach_single(_Safe_sequence_base* __seq)$/;"	f	class:__gnu_debug::_Safe_iterator
_M_attach_single	5/debug/safe_local_iterator.h	/^      _M_attach_single(_Safe_sequence_base* __seq)$/;"	f	class:__gnu_debug::_Safe_local_iterator
_M_attached_to	5/debug/safe_base.h	/^    _M_attached_to(const _Safe_sequence_base* __seq) const$/;"	f	class:__gnu_debug::_Safe_iterator_base
_M_base	5/debug/safe_sequence.h	/^      _Iterator _M_base;$/;"	m	class:__gnu_debug::_After_nth_from
_M_base	5/parallel/queue.h	/^      _Tp* _M_base;$/;"	m	class:__gnu_parallel::_RestrictedBoundedConcurrentQueue
_M_before_dereferenceable	5/debug/safe_iterator.h	/^      _M_before_dereferenceable() const$/;"	f	class:__gnu_debug::_Safe_iterator
_M_begin	5/parallel/find_selectors.h	/^      _FIterator _M_begin;$/;"	m	struct:__gnu_parallel::__find_first_of_selector
_M_begin	5/parallel/multiway_mergesort.h	/^      _DifferenceType _M_begin;$/;"	m	struct:__gnu_parallel::_Piece
_M_begin	cpp_src/stl_tree.h	/^      _M_begin() const$/;"	f	class:std::_Rb_tree
_M_begin	cpp_src/stl_tree.h	/^      _M_begin()$/;"	f	class:std::_Rb_tree
_M_bin_proc	5/parallel/random_shuffle.h	/^      _ThreadIndex* _M_bin_proc;$/;"	m	struct:__gnu_parallel::_DRandomShufflingGlobalData
_M_bins_begin	5/parallel/random_shuffle.h	/^      _BinIndex _M_bins_begin;$/;"	m	struct:__gnu_parallel::_DRSSorterPU
_M_bit	cpp_src/locale_facets.h	/^      mask                      _M_bit[16];$/;"	m	class:std::ctype
_M_borders	5/parallel/queue.h	/^      _GLIBCXX_VOLATILE _CASable _M_borders;$/;"	m	class:__gnu_parallel::_RestrictedBoundedConcurrentQueue
_M_buffer	cpp_src/stl_tempbuf.h	/^      pointer    _M_buffer;$/;"	m	class:std::_Temporary_buffer
_M_bump_down	cpp_src/stl_bvector.h	/^    _M_bump_down()$/;"	f	struct:std::_Bit_iterator_base
_M_bump_up	cpp_src/stl_bvector.h	/^    _M_bump_up()$/;"	f	struct:std::_Bit_iterator_base
_M_c	cpp_src/streambuf_iterator.h	/^      mutable int_type		_M_c;$/;"	m	class:std::istreambuf_iterator
_M_c_locale_codecvt	cpp_src/codecvt.h	/^      __c_locale			_M_c_locale_codecvt;$/;"	m	class:std::codecvt
_M_c_locale_collate	cpp_src/locale_facets.h	/^      __c_locale			_M_c_locale_collate;$/;"	m	class:std::collate
_M_c_locale_ctype	cpp_src/locale_facets.h	/^      __c_locale		_M_c_locale_ctype;$/;"	m	class:std::ctype
_M_c_locale_messages	cpp_src/locale_facets.h	/^      __c_locale			_M_c_locale_messages;$/;"	m	class:std::messages
_M_c_locale_timepunct	cpp_src/locale_facets.h	/^      __c_locale			_M_c_locale_timepunct;$/;"	m	class:std::__timepunct
_M_caches	cpp_src/locale_classes.h	/^    const facet**			_M_caches;$/;"	m	class:std::locale::_Impl
_M_callbacks	cpp_src/ios_base.h	/^     _Callback_list*	_M_callbacks;$/;"	m	class:std::ios_base
_M_capacity	cpp_src/basic_string.h	/^	size_type		_M_capacity;$/;"	m	struct:std::basic_string::_Rep_base
_M_check	cpp_src/basic_string.h	/^      _M_check(size_type __pos, const char* __s) const$/;"	f	class:std::basic_string
_M_check_equal_allocators	cpp_src/stl_list.h	/^      _M_check_equal_allocators(list& __x)$/;"	f	class:std::list
_M_check_length	cpp_src/basic_string.h	/^      _M_check_length(size_type __n1, size_type __n2, const char* __s) const$/;"	f	class:std::basic_string
_M_check_same_name	cpp_src/locale_classes.h	/^    _M_check_same_name()$/;"	f	class:std::locale::_Impl
_M_clone_node	cpp_src/stl_tree.h	/^      _M_clone_node(_Const_Link_type __x)$/;"	f	class:std::_Rb_tree
_M_closure	cpp_src/valarray_after.h	/^      const _Clos _M_closure;$/;"	m	class:std::_Expr
_M_color	cpp_src/stl_tree.h	/^    _Rb_tree_color	_M_color;$/;"	m	struct:std::_Rb_tree_node_base
_M_column	5/debug/formatter.h	/^    mutable std::size_t _M_column;$/;"	m	class:__gnu_debug::_Error_formatter
_M_comp	5/bits/predefined_ops.h	/^      _Compare _M_comp;$/;"	m	struct:__gnu_cxx::__ops::_Iter_comp_iter
_M_comp	5/bits/predefined_ops.h	/^      _Compare _M_comp;$/;"	m	struct:__gnu_cxx::__ops::_Iter_comp_to_iter
_M_comp	5/bits/predefined_ops.h	/^      _Compare _M_comp;$/;"	m	struct:__gnu_cxx::__ops::_Iter_comp_to_val
_M_comp	5/bits/predefined_ops.h	/^      _Compare _M_comp;$/;"	m	struct:__gnu_cxx::__ops::_Iter_comp_val
_M_comp	5/bits/predefined_ops.h	/^      _Compare _M_comp;$/;"	m	struct:__gnu_cxx::__ops::_Val_comp_iter
_M_comp	5/parallel/base.h	/^      _Compare& _M_comp;$/;"	m	class:__gnu_parallel::_EqualFromLess
_M_comp	5/parallel/losertree.h	/^      _Compare _M_comp;$/;"	m	class:__gnu_parallel::_LoserTreeBase
_M_comp	5/parallel/losertree.h	/^      _Compare _M_comp;$/;"	m	class:__gnu_parallel::_LoserTreePointerBase
_M_comp	5/parallel/losertree.h	/^      _Compare _M_comp;$/;"	m	class:__gnu_parallel::_LoserTreePointerUnguardedBase
_M_comp	5/parallel/losertree.h	/^      _Compare _M_comp;$/;"	m	class:__gnu_parallel::_LoserTreeUnguardedBase
_M_comp	5/parallel/multiseq_selection.h	/^      _Compare& _M_comp;$/;"	m	class:__gnu_parallel::_Lexicographic
_M_comp	5/parallel/multiseq_selection.h	/^      _Compare& _M_comp;$/;"	m	class:__gnu_parallel::_LexicographicReverse
_M_comp	5/parallel/set_operations.h	/^      _Compare _M_comp;$/;"	m	struct:__gnu_parallel::__difference_func
_M_comp	5/parallel/set_operations.h	/^      _Compare _M_comp;$/;"	m	struct:__gnu_parallel::__intersection_func
_M_comp	5/parallel/set_operations.h	/^      _Compare _M_comp;$/;"	m	struct:__gnu_parallel::__symmetric_difference_func
_M_comp	5/parallel/set_operations.h	/^      _Compare _M_comp;$/;"	m	struct:__gnu_parallel::__union_func
_M_const_iterators	5/debug/safe_base.h	/^    _Safe_iterator_base* _M_const_iterators;$/;"	m	class:__gnu_debug::_Safe_sequence_base
_M_const_local_iterators	5/debug/safe_unordered_base.h	/^    : _M_local_iterators(nullptr), _M_const_local_iterators(nullptr)$/;"	f	class:__gnu_debug::_Safe_unordered_container_base
_M_const_local_iterators	5/debug/safe_unordered_base.h	/^    _Safe_iterator_base* _M_const_local_iterators;$/;"	m	class:__gnu_debug::_Safe_unordered_container_base
_M_constant	5/debug/safe_iterator.h	/^      _M_constant() const$/;"	f	class:__gnu_debug::_Safe_iterator
_M_constant	5/debug/safe_local_iterator.h	/^      _M_constant() const$/;"	f	class:__gnu_debug::_Safe_local_iterator
_M_constness	5/debug/formatter.h	/^	  _Constness       _M_constness;$/;"	m	struct:__gnu_debug::_Error_formatter::_Parameter::__anon2::__anon3
_M_convert_from_char	cpp_src/locale_facets.h	/^      _M_convert_from_char(char*) const$/;"	f	class:std::messages
_M_convert_to_char	cpp_src/locale_facets.h	/^      _M_convert_to_char(const string_type& __msg) const$/;"	f	class:std::messages
_M_copy	cpp_src/basic_string.h	/^      _M_copy(_CharT* __d, const _CharT* __s, size_type __n)$/;"	f	class:std::basic_string
_M_copy	cpp_src/stl_tree.h	/^    _M_copy(_Const_Link_type __x, _Link_type __p)$/;"	f	class:std::_Rb_tree
_M_copy_aligned	cpp_src/stl_bvector.h	/^    _M_copy_aligned(const_iterator __first, const_iterator __last,$/;"	f	class:std::vector
_M_cost	5/profile/impl/profiler_container_size.h	/^    std::size_t _M_cost;$/;"	m	class:__gnu_profile::__container_size_info
_M_count	5/parallel/base.h	/^      _DifferenceType _M_count;$/;"	m	class:__gnu_parallel::_PseudoSequence
_M_count	5/profile/impl/profiler_container_size.h	/^    std::size_t _M_count;$/;"	m	class:__gnu_profile::__container_size_info
_M_count	cpp_src/gslice.h	/^      size_t _M_count;$/;"	m	struct:std::gslice::_Indexer
_M_create_node	cpp_src/stl_list.h	/^      _M_create_node(const value_type& __x)$/;"	f	class:std::list
_M_create_node	cpp_src/stl_tree.h	/^      _M_create_node(const value_type& __x)$/;"	f	class:std::_Rb_tree
_M_create_nodes	cpp_src/stl_deque.h	/^    _M_create_nodes(_Tp** __nstart, _Tp** __nfinish)$/;"	f	class:std::_Deque_base
_M_ctype	cpp_src/basic_ios.h	/^      const __ctype_type*                            _M_ctype;$/;"	m	class:std::basic_ios
_M_cur	cpp_src/stl_deque.h	/^      _Tp* _M_cur;$/;"	m	struct:std::_Deque_iterator
_M_curr_symbol	cpp_src/locale_facets.h	/^      const _CharT*			_M_curr_symbol;$/;"	m	struct:std::__moneypunct_cache
_M_curr_symbol_size	cpp_src/locale_facets.h	/^      size_t                            _M_curr_symbol_size;$/;"	m	struct:std::__moneypunct_cache
_M_current	5/parallel/multiway_merge.h	/^      _RAIter _M_current;$/;"	m	class:__gnu_parallel::_GuardedIterator
_M_current	5/parallel/multiway_merge.h	/^      _RAIter _M_current;$/;"	m	class:__gnu_parallel::_UnguardedIterator
_M_current	cpp_src/stl_iterator.h	/^      _Iterator _M_current;$/;"	m	class:__normal_iterator
_M_data	cpp_src/basic_string.h	/^      _M_data() const$/;"	f	class:std::basic_string
_M_data	cpp_src/basic_string.h	/^      _M_data(_CharT* __p)$/;"	f	class:std::basic_string
_M_data	cpp_src/locale_facets.h	/^      __cache_type*			_M_data;$/;"	m	class:std::__timepunct
_M_data	cpp_src/locale_facets.h	/^      __cache_type*			_M_data;$/;"	m	class:std::moneypunct
_M_data	cpp_src/locale_facets.h	/^      __cache_type*			_M_data;$/;"	m	class:std::numpunct
_M_data	cpp_src/stl_list.h	/^      _Tp _M_data;                \/\/\/< User's data.$/;"	m	struct:std::_List_node
_M_data	cpp_src/valarray_array.h	/^      _Tp* const __restrict__ _M_data;$/;"	m	struct:std::_Array
_M_dataplus	cpp_src/basic_string.h	/^      mutable _Alloc_hider	_M_dataplus;$/;"	m	class:std::basic_string
_M_date_era_format	cpp_src/locale_facets.h	/^      const _CharT*			_M_date_era_format;$/;"	m	struct:std::__timepunct_cache
_M_date_format	cpp_src/locale_facets.h	/^      const _CharT*			_M_date_format;$/;"	m	struct:std::__timepunct_cache
_M_date_formats	cpp_src/locale_facets.h	/^      _M_date_formats(const _CharT** __date) const$/;"	f	class:std::__timepunct
_M_date_time_era_format	cpp_src/locale_facets.h	/^      const _CharT*			_M_date_time_era_format;$/;"	m	struct:std::__timepunct_cache
_M_date_time_format	cpp_src/locale_facets.h	/^      const _CharT*			_M_date_time_format;$/;"	m	struct:std::__timepunct_cache
_M_date_time_formats	cpp_src/locale_facets.h	/^      _M_date_time_formats(const _CharT** __dt) const$/;"	f	class:std::__timepunct
_M_day1	cpp_src/locale_facets.h	/^      const _CharT*			_M_day1;$/;"	m	struct:std::__timepunct_cache
_M_day2	cpp_src/locale_facets.h	/^      const _CharT*			_M_day2;$/;"	m	struct:std::__timepunct_cache
_M_day3	cpp_src/locale_facets.h	/^      const _CharT*			_M_day3;$/;"	m	struct:std::__timepunct_cache
_M_day4	cpp_src/locale_facets.h	/^      const _CharT*			_M_day4;$/;"	m	struct:std::__timepunct_cache
_M_day5	cpp_src/locale_facets.h	/^      const _CharT*			_M_day5;$/;"	m	struct:std::__timepunct_cache
_M_day6	cpp_src/locale_facets.h	/^      const _CharT*			_M_day6;$/;"	m	struct:std::__timepunct_cache
_M_day7	cpp_src/locale_facets.h	/^      const _CharT*			_M_day7;$/;"	m	struct:std::__timepunct_cache
_M_days	cpp_src/locale_facets.h	/^      _M_days(const _CharT** __days) const$/;"	f	class:std::__timepunct
_M_days_abbreviated	cpp_src/locale_facets.h	/^      _M_days_abbreviated(const _CharT** __days) const$/;"	f	class:std::__timepunct
_M_deallocate	cpp_src/stl_bvector.h	/^      _M_deallocate()$/;"	f	struct:std::_Bvector_base
_M_deallocate	cpp_src/stl_vector.h	/^      _M_deallocate(_Tp* __p, size_t __n)$/;"	f	struct:std::_Vector_base
_M_deallocate_map	cpp_src/stl_deque.h	/^      _M_deallocate_map(_Tp** __p, size_t __n)$/;"	f	class:std::_Deque_base
_M_deallocate_node	cpp_src/stl_deque.h	/^      _M_deallocate_node(_Tp* __p)$/;"	f	class:std::_Deque_base
_M_decimal_point	cpp_src/locale_facets.h	/^      _CharT				_M_decimal_point;$/;"	m	struct:std::__moneypunct_cache
_M_decimal_point	cpp_src/locale_facets.h	/^      _CharT				_M_decimal_point;$/;"	m	struct:std::__numpunct_cache
_M_decrement_use	cpp_src/gslice.h	/^      _M_decrement_use()$/;"	f	struct:std::gslice::_Indexer
_M_decrementable	5/debug/safe_iterator.h	/^      _M_decrementable() const { return !_M_singular() && !_M_is_begin(); }$/;"	f	class:__gnu_debug::_Safe_iterator
_M_del	cpp_src/locale_facets.h	/^      bool			_M_del;$/;"	m	class:std::ctype
_M_dereferenceable	5/debug/safe_iterator.h	/^      _M_dereferenceable() const$/;"	f	class:__gnu_debug::_Safe_iterator
_M_dereferenceable	5/debug/safe_local_iterator.h	/^      _M_dereferenceable() const$/;"	f	class:__gnu_debug::_Safe_local_iterator
_M_destroy_data	cpp_src/stl_deque.h	/^        _M_destroy_data(iterator __first, iterator __last, const _Alloc1&)$/;"	f	class:std::deque
_M_destroy_data	cpp_src/stl_deque.h	/^      _M_destroy_data(iterator __first, iterator __last,$/;"	f	class:std::deque
_M_destroy_data_dispatch	cpp_src/stl_deque.h	/^      _M_destroy_data_dispatch(iterator __first, iterator __last, __false_type)$/;"	f	class:std::deque
_M_destroy_data_dispatch	cpp_src/stl_deque.h	/^      _M_destroy_data_dispatch(iterator, iterator, __true_type) { }$/;"	f	class:std::deque
_M_destroy_node	cpp_src/stl_tree.h	/^      _M_destroy_node(_Link_type __p)$/;"	f	class:std::_Rb_tree
_M_destroy_nodes	cpp_src/stl_deque.h	/^    _M_destroy_nodes(_Tp** __nstart, _Tp** __nfinish)$/;"	f	class:std::_Deque_base
_M_disjunct	cpp_src/basic_string.h	/^      _M_disjunct(const _CharT* __s) const$/;"	f	class:std::basic_string
_M_dispose	cpp_src/basic_string.h	/^	_M_dispose(const _Alloc& __a)$/;"	f	struct:std::basic_string::_Rep
_M_dist	5/parallel/random_shuffle.h	/^      _DifferenceType** _M_dist;$/;"	m	struct:__gnu_parallel::_DRandomShufflingGlobalData
_M_elements_leftover	5/parallel/balanced_quicksort.h	/^      volatile _DifferenceType* _M_elements_leftover;$/;"	m	struct:__gnu_parallel::_QSBThreadLocal
_M_end	5/parallel/find_selectors.h	/^      _FIterator _M_end;$/;"	m	struct:__gnu_parallel::__find_first_of_selector
_M_end	5/parallel/multiway_merge.h	/^      _RAIter _M_end;$/;"	m	class:__gnu_parallel::_GuardedIterator
_M_end	5/parallel/multiway_mergesort.h	/^      _DifferenceType _M_end;$/;"	m	struct:__gnu_parallel::_Piece
_M_end	cpp_src/stl_tree.h	/^      _M_end() const$/;"	f	class:std::_Rb_tree
_M_end	cpp_src/stl_tree.h	/^      _M_end()$/;"	f	class:std::_Rb_tree
_M_end_of_storage	cpp_src/stl_bvector.h	/^	_Bit_type* 	_M_end_of_storage;$/;"	m	struct:std::_Bvector_base::_Bvector_impl
_M_end_of_storage	cpp_src/stl_vector.h	/^	_Tp*           _M_end_of_storage;$/;"	m	struct:std::_Vector_base::_Vector_impl
_M_equal	cpp_src/stream_iterator.h	/^      _M_equal(const istream_iterator& __x) const$/;"	f	class:std::istream_iterator
_M_erase	5/profile/impl/profiler_map_to_unordered_map.h	/^    std::size_t _M_erase;$/;"	m	class:__gnu_profile::__map2umap_info
_M_erase	cpp_src/stl_list.h	/^      _M_erase(iterator __position)$/;"	f	class:std::list
_M_erase	cpp_src/stl_tree.h	/^    _M_erase(_Link_type __x)$/;"	f	class:std::_Rb_tree
_M_erase_at_begin	cpp_src/stl_deque.h	/^      _M_erase_at_begin(iterator __pos)$/;"	f	class:std::deque
_M_erase_at_end	cpp_src/stl_bvector.h	/^    _M_erase_at_end(iterator __pos)$/;"	f	class:std::vector
_M_erase_at_end	cpp_src/stl_deque.h	/^      _M_erase_at_end(iterator __pos)$/;"	f	class:std::deque
_M_erase_at_end	cpp_src/stl_vector.h	/^      _M_erase_at_end(pointer __pos)$/;"	f	class:std::vector
_M_exception	cpp_src/ios_base.h	/^    iostate		_M_exception;$/;"	m	class:std::ios_base
_M_exception_object	5/bits/exception_ptr.h	/^      : _M_exception_object(__o._M_exception_object)$/;"	f	class:std::__exception_ptr::exception_ptr
_M_exception_object	5/bits/exception_ptr.h	/^      void* _M_exception_object;$/;"	m	class:std::__exception_ptr::exception_ptr
_M_expr	cpp_src/valarray_after.h	/^      const _Dom&	      _M_expr;$/;"	m	class:std::_GBase
_M_expr	cpp_src/valarray_after.h	/^      const _Dom&	      _M_expr;$/;"	m	class:std::_IBase
_M_expr	cpp_src/valarray_before.h	/^      const _Arg& _M_expr;$/;"	m	class:std::_UnBase
_M_expr	cpp_src/valarray_before.h	/^      const _Dom& _M_expr;$/;"	m	class:std::_FunBase
_M_expr	cpp_src/valarray_before.h	/^      const _Dom& _M_expr;$/;"	m	class:std::_SBase
_M_expr1	cpp_src/valarray_before.h	/^      const _Clos& _M_expr1;$/;"	m	class:std::_BinBase2
_M_expr1	cpp_src/valarray_before.h	/^      const _FirstArg& _M_expr1;$/;"	m	class:std::_BinBase
_M_expr1	cpp_src/valarray_before.h	/^      const _Vt& _M_expr1;$/;"	m	class:std::_BinBase1
_M_expr2	cpp_src/valarray_before.h	/^      const _Clos& _M_expr2;$/;"	m	class:std::_BinBase1
_M_expr2	cpp_src/valarray_before.h	/^      const _SecondArg& _M_expr2;$/;"	m	class:std::_BinBase
_M_expr2	cpp_src/valarray_before.h	/^      const _Vt& _M_expr2;$/;"	m	class:std::_BinBase2
_M_f	cpp_src/stl_function.h	/^      _Ret (_Tp::*_M_f)() const;$/;"	m	class:std::const_mem_fun_ref_t
_M_f	cpp_src/stl_function.h	/^      _Ret (_Tp::*_M_f)() const;$/;"	m	class:std::const_mem_fun_t
_M_f	cpp_src/stl_function.h	/^      _Ret (_Tp::*_M_f)();$/;"	m	class:std::mem_fun_ref_t
_M_f	cpp_src/stl_function.h	/^      _Ret (_Tp::*_M_f)();$/;"	m	class:std::mem_fun_t
_M_f	cpp_src/stl_function.h	/^      _Ret (_Tp::*_M_f)(_Arg) const;$/;"	m	class:std::const_mem_fun1_ref_t
_M_f	cpp_src/stl_function.h	/^      _Ret (_Tp::*_M_f)(_Arg) const;$/;"	m	class:std::const_mem_fun1_t
_M_f	cpp_src/stl_function.h	/^      _Ret (_Tp::*_M_f)(_Arg);$/;"	m	class:std::mem_fun1_ref_t
_M_f	cpp_src/stl_function.h	/^      _Ret (_Tp::*_M_f)(_Arg);$/;"	m	class:std::mem_fun1_t
_M_facets	cpp_src/locale_classes.h	/^    const facet**			_M_facets;$/;"	m	class:std::locale::_Impl
_M_facets_size	cpp_src/locale_classes.h	/^    size_t				_M_facets_size;$/;"	m	class:std::locale::_Impl
_M_failed	cpp_src/streambuf_iterator.h	/^      bool		_M_failed;$/;"	m	class:std::ostreambuf_iterator
_M_falsename	cpp_src/locale_facets.h	/^      const _CharT*			_M_falsename;$/;"	m	struct:std::__numpunct_cache
_M_falsename_size	cpp_src/locale_facets.h	/^      size_t                            _M_falsename_size;$/;"	m	struct:std::__numpunct_cache
_M_file	5/debug/formatter.h	/^    const char*         _M_file;$/;"	m	class:__gnu_debug::_Error_formatter
_M_fill	cpp_src/basic_ios.h	/^      mutable char_type                              _M_fill;$/;"	m	class:std::basic_ios
_M_fill_assign	cpp_src/stl_bvector.h	/^    _M_fill_assign(size_t __n, bool __x)$/;"	f	class:std::vector
_M_fill_assign	cpp_src/stl_deque.h	/^      _M_fill_assign(size_type __n, const value_type& __val)$/;"	f	class:std::deque
_M_fill_init	cpp_src/basic_ios.h	/^      mutable bool                                   _M_fill_init;$/;"	m	class:std::basic_ios
_M_fill_initialize	cpp_src/stl_list.h	/^      _M_fill_initialize(size_type __n, const value_type& __x)$/;"	f	class:std::list
_M_fill_insert	cpp_src/stl_bvector.h	/^    _M_fill_insert(iterator __position, size_type __n, bool __x)$/;"	f	class:std::vector
_M_find	5/profile/impl/profiler_map_to_unordered_map.h	/^    std::size_t _M_find;$/;"	m	class:__gnu_profile::__map2umap_info
_M_find	cpp_src/locale_facets.h	/^        _M_find(const _CharT2* __zero, size_t __len, _CharT2 __c) const$/;"	f	class:std::num_get
_M_find	cpp_src/locale_facets.h	/^        _M_find(const _CharT2*, size_t __len, _CharT2 __c) const$/;"	f	class:std::num_get
_M_finish	cpp_src/stl_bvector.h	/^	_Bit_iterator 	_M_finish;$/;"	m	struct:std::_Bvector_base::_Bvector_impl
_M_finish	cpp_src/stl_deque.h	/^	iterator _M_finish;$/;"	m	struct:std::_Deque_base::_Deque_impl
_M_finish	cpp_src/stl_vector.h	/^	_Tp*           _M_finish;$/;"	m	struct:std::_Vector_base::_Vector_impl
_M_finish_iterator	5/parallel/for_each_selectors.h	/^      _It _M_finish_iterator;$/;"	m	struct:__gnu_parallel::__generic_for_each_selector
_M_first	5/parallel/iterator.h	/^      _Iterator1 _M_first;$/;"	m	class:__gnu_parallel::_IteratorTriple
_M_first	5/parallel/workstealing.h	/^      _GLIBCXX_JOB_VOLATILE _DifferenceType _M_first;$/;"	m	struct:__gnu_parallel::_Job
_M_first	cpp_src/stl_deque.h	/^      _Tp* _M_first;$/;"	m	struct:std::_Deque_iterator
_M_first_insert	5/parallel/losertree.h	/^      bool _M_first_insert;$/;"	m	class:__gnu_parallel::_LoserTreeBase
_M_first_line	5/debug/formatter.h	/^    mutable bool        _M_first_line;$/;"	m	class:__gnu_debug::_Error_formatter
_M_flags	cpp_src/ios_base.h	/^    fmtflags		_M_flags;$/;"	m	class:std::ios_base
_M_fn	cpp_src/ios_base.h	/^      ios_base::event_callback	_M_fn;$/;"	m	struct:std::ios_base::_Callback_list
_M_frac_digits	cpp_src/locale_facets.h	/^      int				_M_frac_digits;$/;"	m	struct:std::__moneypunct_cache
_M_func	cpp_src/valarray_before.h	/^      value_type (*_M_func)(_Arg);$/;"	m	class:std::_FunBase
_M_get	cpp_src/streambuf_iterator.h	/^      _M_get() const$/;"	f	class:std::istreambuf_iterator
_M_get_Bit_allocator	cpp_src/stl_bvector.h	/^      _M_get_Bit_allocator() const$/;"	f	struct:std::_Bvector_base
_M_get_Bit_allocator	cpp_src/stl_bvector.h	/^      _M_get_Bit_allocator()$/;"	f	struct:std::_Bvector_base
_M_get_Node_allocator	cpp_src/stl_list.h	/^      _M_get_Node_allocator() const$/;"	f	class:std::_List_base
_M_get_Node_allocator	cpp_src/stl_list.h	/^      _M_get_Node_allocator()$/;"	f	class:std::_List_base
_M_get_Node_allocator	cpp_src/stl_tree.h	/^      _M_get_Node_allocator() const$/;"	f	class:std::_Rb_tree
_M_get_Node_allocator	cpp_src/stl_tree.h	/^      _M_get_Node_allocator()$/;"	f	class:std::_Rb_tree
_M_get_Tp_allocator	cpp_src/stl_deque.h	/^      _M_get_Tp_allocator() const$/;"	f	class:std::_Deque_base
_M_get_Tp_allocator	cpp_src/stl_deque.h	/^      _M_get_Tp_allocator()$/;"	f	class:std::_Deque_base
_M_get_Tp_allocator	cpp_src/stl_list.h	/^      _M_get_Tp_allocator() const$/;"	f	class:std::_List_base
_M_get_Tp_allocator	cpp_src/stl_vector.h	/^      _M_get_Tp_allocator() const$/;"	f	struct:std::_Vector_base
_M_get_Tp_allocator	cpp_src/stl_vector.h	/^      _M_get_Tp_allocator()$/;"	f	struct:std::_Vector_base
_M_get_map_allocator	cpp_src/stl_deque.h	/^      _M_get_map_allocator() const$/;"	f	class:std::_Deque_base
_M_get_node	cpp_src/stl_list.h	/^      _M_get_node()$/;"	f	class:std::_List_base
_M_get_node	cpp_src/stl_tree.h	/^      _M_get_node()$/;"	f	class:std::_Rb_tree
_M_get_sequence	5/debug/safe_iterator.h	/^      _M_get_sequence() const$/;"	f	class:__gnu_debug::_Safe_iterator
_M_get_sequence	5/debug/safe_local_iterator.h	/^      _M_get_sequence() const$/;"	f	class:__gnu_debug::_Safe_local_iterator
_M_getloc	cpp_src/ios_base.h	/^    _M_getloc() const { return _M_ios_locale; }$/;"	f	class:std::ios_base
_M_global	5/parallel/balanced_quicksort.h	/^      _Piece _M_global;$/;"	m	struct:__gnu_parallel::_QSBThreadLocal
_M_grab	cpp_src/basic_string.h	/^	_M_grab(const _Alloc& __alloc1, const _Alloc& __alloc2)$/;"	f	struct:std::basic_string::_Rep
_M_grouping	cpp_src/locale_facets.h	/^      const char*			_M_grouping;$/;"	m	struct:std::__moneypunct_cache
_M_grouping	cpp_src/locale_facets.h	/^      const char*			_M_grouping;$/;"	m	struct:std::__numpunct_cache
_M_grouping_size	cpp_src/locale_facets.h	/^      size_t                            _M_grouping_size;$/;"	m	struct:std::__moneypunct_cache
_M_grouping_size	cpp_src/locale_facets.h	/^      size_t                            _M_grouping_size;$/;"	m	struct:std::__numpunct_cache
_M_header	cpp_src/stl_tree.h	/^	  _Rb_tree_node_base 	_M_header;$/;"	m	struct:std::_Rb_tree::_Rb_tree_impl
_M_hops	5/profile/impl/profiler_hash_func.h	/^    std::size_t _M_hops;$/;"	m	class:__gnu_profile::__hashfunc_info
_M_ibegin	cpp_src/basic_string.h	/^      _M_ibegin() const$/;"	f	class:std::basic_string
_M_iend	cpp_src/basic_string.h	/^      _M_iend() const$/;"	f	class:std::basic_string
_M_ik	5/parallel/losertree.h	/^      unsigned int _M_ik, _M_k, _M_offset;$/;"	m	class:__gnu_parallel::_LoserTreeBase
_M_ik	5/parallel/losertree.h	/^      unsigned int _M_ik, _M_k, _M_offset;$/;"	m	class:__gnu_parallel::_LoserTreePointerBase
_M_ik	5/parallel/losertree.h	/^      unsigned int _M_ik, _M_k, _M_offset;$/;"	m	class:__gnu_parallel::_LoserTreePointerUnguardedBase
_M_ik	5/parallel/losertree.h	/^      unsigned int _M_ik, _M_k, _M_offset;$/;"	m	class:__gnu_parallel::_LoserTreeUnguardedBase
_M_impl	cpp_src/locale_classes.h	/^    _Impl*		_M_impl;$/;"	m	class:std::locale
_M_impl	cpp_src/stl_bvector.h	/^      _Bvector_impl _M_impl;$/;"	m	struct:std::_Bvector_base
_M_impl	cpp_src/stl_deque.h	/^      _Deque_impl _M_impl;$/;"	m	class:std::_Deque_base
_M_impl	cpp_src/stl_list.h	/^      _List_impl _M_impl;$/;"	m	class:std::_List_base
_M_impl	cpp_src/stl_tree.h	/^      _Rb_tree_impl<_Compare> _M_impl;$/;"	m	class:std::_Rb_tree
_M_impl	cpp_src/stl_vector.h	/^      _Vector_impl _M_impl;$/;"	m	struct:std::_Vector_base
_M_in_same_bucket	5/debug/safe_local_iterator.h	/^	_M_in_same_bucket(const _Safe_local_iterator<_Other,$/;"	f	class:__gnu_debug::_Safe_local_iterator
_M_incr	cpp_src/stl_bvector.h	/^    _M_incr(ptrdiff_t __i)$/;"	f	struct:std::_Bit_iterator_base
_M_increment_use	cpp_src/gslice.h	/^      _M_increment_use()$/;"	f	struct:std::gslice::_Indexer
_M_incrementable	5/debug/safe_iterator.h	/^      _M_incrementable() const$/;"	f	class:__gnu_debug::_Safe_iterator
_M_incrementable	5/debug/safe_local_iterator.h	/^      _M_incrementable() const$/;"	f	class:__gnu_debug::_Safe_local_iterator
_M_indent	5/debug/formatter.h	/^    enum { _M_indent = 4 } ;$/;"	e	enum:__gnu_debug::_Error_formatter::__anon8
_M_index	cpp_src/gslice.h	/^      valarray<size_t> _M_index; \/\/ Linear array of referenced indices$/;"	m	struct:std::gslice::_Indexer
_M_index	cpp_src/gslice.h	/^    _Indexer* _M_index;$/;"	m	class:std::gslice
_M_index	cpp_src/gslice_array.h	/^      const valarray<size_t>& _M_index;$/;"	m	class:std::gslice_array
_M_index	cpp_src/indirect_array.h	/^      const _Array<size_t> _M_index;$/;"	m	class:std::indirect_array
_M_index	cpp_src/ios_base.h	/^      int			_M_index;$/;"	m	struct:std::ios_base::_Callback_list
_M_index	cpp_src/locale_classes.h	/^    mutable size_t		_M_index;$/;"	m	class:std::locale::id
_M_index	cpp_src/valarray_after.h	/^      const valarray<size_t>& _M_index;$/;"	m	class:std::_GBase
_M_index	cpp_src/valarray_after.h	/^      const valarray<size_t>& _M_index;$/;"	m	class:std::_IBase
_M_init	5/profile/impl/profiler_container_size.h	/^    std::size_t _M_init;$/;"	m	class:__gnu_profile::__container_size_info
_M_init	cpp_src/stl_list.h	/^      _M_init()$/;"	f	class:std::_List_base
_M_init_facet	cpp_src/locale_classes.h	/^      _M_init_facet(_Facet* __facet)$/;"	f	class:std::locale::_Impl
_M_initial	5/parallel/balanced_quicksort.h	/^      _Piece _M_initial;$/;"	m	struct:__gnu_parallel::_QSBThreadLocal
_M_initialize	cpp_src/stl_bvector.h	/^    _M_initialize(size_type __n)$/;"	f	class:std::vector
_M_initialize_buffer	cpp_src/stl_tempbuf.h	/^      _M_initialize_buffer(const _Tp& __val, __false_type)$/;"	f	class:std::_Temporary_buffer
_M_initialize_buffer	cpp_src/stl_tempbuf.h	/^      _M_initialize_buffer(const _Tp&, __true_type) { }$/;"	f	class:std::_Temporary_buffer
_M_initialize_dispatch	cpp_src/stl_bvector.h	/^      _M_initialize_dispatch(_InputIterator __first, _InputIterator __last,$/;"	f	class:std::vector
_M_initialize_dispatch	cpp_src/stl_bvector.h	/^      _M_initialize_dispatch(_Integer __n, _Integer __x, __true_type)$/;"	f	class:std::vector
_M_initialize_dispatch	cpp_src/stl_deque.h	/^        _M_initialize_dispatch(_InputIterator __first, _InputIterator __last,$/;"	f	class:std::deque
_M_initialize_dispatch	cpp_src/stl_deque.h	/^        _M_initialize_dispatch(_Integer __n, _Integer __x, __true_type)$/;"	f	class:std::deque
_M_initialize_dispatch	cpp_src/stl_list.h	/^        _M_initialize_dispatch(_InputIterator __first, _InputIterator __last,$/;"	f	class:std::list
_M_initialize_dispatch	cpp_src/stl_list.h	/^        _M_initialize_dispatch(_Integer __n, _Integer __x, __true_type)$/;"	f	class:std::list
_M_initialize_dispatch	cpp_src/stl_vector.h	/^        _M_initialize_dispatch(_InputIterator __first, _InputIterator __last,$/;"	f	class:std::vector
_M_initialize_dispatch	cpp_src/stl_vector.h	/^        _M_initialize_dispatch(_Integer __n, _Integer __value, __true_type)$/;"	f	class:std::vector
_M_initialize_map	cpp_src/stl_deque.h	/^    _M_initialize_map(size_t __num_elements)$/;"	f	class:std::_Deque_base
_M_initialize_range	cpp_src/stl_bvector.h	/^      _M_initialize_range(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	class:std::vector
_M_initialize_range	cpp_src/stl_bvector.h	/^      _M_initialize_range(_InputIterator __first, _InputIterator __last,$/;"	f	class:std::vector
_M_insert	5/profile/impl/profiler_map_to_unordered_map.h	/^    std::size_t _M_insert;$/;"	m	class:__gnu_profile::__map2umap_info
_M_insert	cpp_src/stl_list.h	/^      _M_insert(iterator __position, const value_type& __x)$/;"	f	class:std::list
_M_insert	cpp_src/stl_tree.h	/^    _M_insert(_Base_ptr __x, _Base_ptr __p, const _Val& __v)$/;"	f	class:std::_Rb_tree
_M_insert	cpp_src/stl_tree.h	/^    _M_insert(_Const_Base_ptr __x, _Const_Base_ptr __p, const _Val& __v)$/;"	f	class:std::_Rb_tree
_M_insert_aux	cpp_src/stl_bvector.h	/^    _M_insert_aux(iterator __position, bool __x)$/;"	f	class:std::vector
_M_insert_dispatch	cpp_src/stl_bvector.h	/^      _M_insert_dispatch(iterator __pos, _Integer __n, _Integer __x,$/;"	f	class:std::vector
_M_insert_dispatch	cpp_src/stl_bvector.h	/^      _M_insert_dispatch(iterator __pos,$/;"	f	class:std::vector
_M_insert_dispatch	cpp_src/stl_deque.h	/^        _M_insert_dispatch(iterator __pos,$/;"	f	class:std::deque
_M_insert_dispatch	cpp_src/stl_vector.h	/^        _M_insert_dispatch(iterator __pos, _InputIterator __first,$/;"	f	class:std::vector
_M_insert_dispatch	cpp_src/stl_vector.h	/^        _M_insert_dispatch(iterator __pos, _Integer __n, _Integer __val,$/;"	f	class:std::vector
_M_insert_equal	cpp_src/stl_tree.h	/^      _M_insert_equal(_II __first, _II __last)$/;"	f	class:std::_Rb_tree
_M_insert_equal	cpp_src/stl_tree.h	/^    _M_insert_equal(const _Val& __v)$/;"	f	class:std::_Rb_tree
_M_insert_equal	cpp_src/stl_tree.h	/^    _M_insert_equal(const_iterator __position, const _Val& __v)$/;"	f	class:std::_Rb_tree
_M_insert_equal	cpp_src/stl_tree.h	/^    _M_insert_equal(iterator __position, const _Val& __v)$/;"	f	class:std::_Rb_tree
_M_insert_equal_lower	cpp_src/stl_tree.h	/^    _M_insert_equal_lower(const _Val& __v)$/;"	f	class:std::_Rb_tree
_M_insert_lower	cpp_src/stl_tree.h	/^    _M_insert_lower(_Base_ptr __x, _Base_ptr __p, const _Val& __v)$/;"	f	class:std::_Rb_tree
_M_insert_range	cpp_src/stl_bvector.h	/^      _M_insert_range(iterator __pos, _InputIterator __first, $/;"	f	class:std::vector
_M_insert_range	cpp_src/stl_bvector.h	/^      _M_insert_range(iterator __position, _ForwardIterator __first, $/;"	f	class:std::vector
_M_insert_unique	cpp_src/stl_tree.h	/^      _M_insert_unique(_II __first, _II __last)$/;"	f	class:std::_Rb_tree
_M_insert_unique	cpp_src/stl_tree.h	/^    _M_insert_unique(const _Val& __v)$/;"	f	class:std::_Rb_tree
_M_insert_unique	cpp_src/stl_tree.h	/^    _M_insert_unique(const_iterator __position, const _Val& __v)$/;"	f	class:std::_Rb_tree
_M_insert_unique	cpp_src/stl_tree.h	/^    _M_insert_unique(iterator __position, const _Val& __v)$/;"	f	class:std::_Rb_tree
_M_integer	5/debug/formatter.h	/^	} _M_integer;$/;"	m	union:__gnu_debug::_Error_formatter::_Parameter::__anon2	typeref:struct:__gnu_debug::_Error_formatter::_Parameter::__anon2::__anon5
_M_integer	5/debug/formatter.h	/^    _M_integer(long __value, const char* __name = 0) const$/;"	f	class:__gnu_debug::_Error_formatter
_M_invalidate	5/debug/safe_base.h	/^    _M_invalidate()$/;"	f	class:__gnu_debug::_Safe_iterator_base
_M_invalidate_all	5/debug/safe_base.h	/^    _M_invalidate_all() const$/;"	f	class:__gnu_debug::_Safe_sequence_base
_M_invalidate_all	5/debug/safe_sequence.h	/^      _M_invalidate_all()$/;"	f	class:__gnu_debug::_Safe_node_sequence
_M_invalidate_all	5/debug/safe_unordered_container.h	/^      _M_invalidate_all()$/;"	f	class:__gnu_debug::_Safe_unordered_container
_M_invalidate_locals	5/debug/safe_unordered_container.h	/^      _M_invalidate_locals()$/;"	f	class:__gnu_debug::_Safe_unordered_container
_M_invoke	5/parallel/set_operations.h	/^      _M_invoke(_IIter __a, _IIter __b, _IIter __c, _IIter __d,$/;"	f	struct:__gnu_parallel::__difference_func
_M_invoke	5/parallel/set_operations.h	/^      _M_invoke(_IIter __a, _IIter __b, _IIter __c, _IIter __d,$/;"	f	struct:__gnu_parallel::__intersection_func
_M_invoke	5/parallel/set_operations.h	/^      _M_invoke(_IIter __a, _IIter __b, _IIter __c, _IIter __d,$/;"	f	struct:__gnu_parallel::__symmetric_difference_func
_M_invoke	5/parallel/set_operations.h	/^      _M_invoke(_IIter __a, const _IIter __b, _IIter __c,$/;"	f	struct:__gnu_parallel::__union_func
_M_ios_locale	cpp_src/ios_base.h	/^    locale		_M_ios_locale;$/;"	m	class:std::ios_base
_M_is_before_begin	5/debug/safe_iterator.h	/^      _M_is_before_begin() const$/;"	f	class:__gnu_debug::_Safe_iterator
_M_is_begin	5/debug/safe_iterator.h	/^      _M_is_begin() const$/;"	f	class:__gnu_debug::_Safe_iterator
_M_is_begin	5/debug/safe_local_iterator.h	/^      bool _M_is_begin() const$/;"	f	class:__gnu_debug::_Safe_local_iterator
_M_is_beginnest	5/debug/safe_iterator.h	/^      _M_is_beginnest() const$/;"	f	class:__gnu_debug::_Safe_iterator
_M_is_end	5/debug/safe_iterator.h	/^      _M_is_end() const$/;"	f	class:__gnu_debug::_Safe_iterator
_M_is_end	5/debug/safe_local_iterator.h	/^      bool _M_is_end() const$/;"	f	class:__gnu_debug::_Safe_local_iterator
_M_is_leaked	cpp_src/basic_string.h	/^	_M_is_leaked() const$/;"	f	struct:std::basic_string::_Rep
_M_is_shared	cpp_src/basic_string.h	/^	_M_is_shared() const$/;"	f	struct:std::basic_string::_Rep
_M_item_max	5/profile/impl/profiler_container_size.h	/^    std::size_t _M_item_max;$/;"	m	class:__gnu_profile::__container_size_info
_M_item_min	5/profile/impl/profiler_container_size.h	/^    std::size_t _M_item_min;  \/\/ range of # items$/;"	m	class:__gnu_profile::__container_size_info
_M_item_total	5/profile/impl/profiler_container_size.h	/^    std::size_t _M_item_total;$/;"	m	class:__gnu_profile::__container_size_info
_M_iter	cpp_src/stl_raw_storage_iter.h	/^      _ForwardIterator _M_iter;$/;"	m	class:std::raw_storage_iterator
_M_iterate	5/profile/impl/profiler_list_to_vector.h	/^    mutable _Atomic_word _M_iterate;$/;"	m	class:__gnu_profile::__list2vector_info
_M_iterate	5/profile/impl/profiler_map_to_unordered_map.h	/^    mutable _Atomic_word _M_iterate;$/;"	m	class:__gnu_profile::__map2umap_info
_M_iterate	5/profile/impl/profiler_vector_to_list.h	/^    mutable _Atomic_word _M_iterate;$/;"	m	class:__gnu_profile::__vector2list_info
_M_iterator	5/debug/formatter.h	/^	} _M_iterator;$/;"	m	union:__gnu_debug::_Error_formatter::_Parameter::__anon2	typeref:struct:__gnu_debug::_Error_formatter::_Parameter::__anon2::__anon3
_M_iterator	5/debug/formatter.h	/^      _M_iterator(const _Iterator& __it, const char* __name = 0)  const$/;"	f	class:__gnu_debug::_Error_formatter
_M_iterators	5/debug/safe_base.h	/^    _Safe_iterator_base* _M_iterators;$/;"	m	class:__gnu_debug::_Safe_sequence_base
_M_iword	cpp_src/ios_base.h	/^      long	_M_iword;$/;"	m	struct:std::ios_base::_Words
_M_k	5/parallel/losertree.h	/^      unsigned int _M_ik, _M_k, _M_offset;$/;"	m	class:__gnu_parallel::_LoserTreeBase
_M_k	5/parallel/losertree.h	/^      unsigned int _M_ik, _M_k, _M_offset;$/;"	m	class:__gnu_parallel::_LoserTreePointerBase
_M_k	5/parallel/losertree.h	/^      unsigned int _M_ik, _M_k, _M_offset;$/;"	m	class:__gnu_parallel::_LoserTreePointerUnguardedBase
_M_k	5/parallel/losertree.h	/^      unsigned int _M_ik, _M_k, _M_offset;$/;"	m	class:__gnu_parallel::_LoserTreeUnguardedBase
_M_key	5/parallel/losertree.h	/^	_Tp _M_key;$/;"	m	struct:__gnu_parallel::_LoserTreeBase::_Loser
_M_key	5/parallel/losertree.h	/^	_Tp _M_key;$/;"	m	struct:__gnu_parallel::_LoserTreeUnguardedBase::_Loser
_M_key_compare	cpp_src/stl_tree.h	/^	  _Key_compare		_M_key_compare;$/;"	m	struct:std::_Rb_tree::_Rb_tree_impl
_M_key_compare	cpp_src/stl_tree.h	/^	  _Key_compare 		_M_key_compare;$/;"	m	struct:std::_Rb_tree::_Rb_tree_impl
_M_keyp	5/parallel/losertree.h	/^	const _Tp* _M_keyp;$/;"	m	struct:__gnu_parallel::_LoserTreePointerBase::_Loser
_M_keyp	5/parallel/losertree.h	/^	const _Tp* _M_keyp;$/;"	m	struct:__gnu_parallel::_LoserTreePointerUnguardedBase::_Loser
_M_kind	5/debug/formatter.h	/^      } _M_kind;$/;"	m	struct:__gnu_debug::_Error_formatter::_Parameter	typeref:enum:__gnu_debug::_Error_formatter::_Parameter::__anon1
_M_last	5/parallel/workstealing.h	/^      _GLIBCXX_JOB_VOLATILE _DifferenceType _M_last;$/;"	m	struct:__gnu_parallel::_Job
_M_last	cpp_src/stl_deque.h	/^      _Tp* _M_last;$/;"	m	struct:std::_Deque_iterator
_M_leak	cpp_src/basic_string.h	/^      _M_leak()    \/\/ for use in begin() & non-const op[]$/;"	f	class:std::basic_string
_M_left	cpp_src/stl_tree.h	/^    _Base_ptr		_M_left;$/;"	m	struct:std::_Rb_tree_node_base
_M_leftmost	cpp_src/stl_tree.h	/^      _M_leftmost() const$/;"	f	class:std::_Rb_tree
_M_leftmost	cpp_src/stl_tree.h	/^      _M_leftmost()$/;"	f	class:std::_Rb_tree
_M_leftover_parts	5/parallel/balanced_quicksort.h	/^      _RestrictedBoundedConcurrentQueue<_Piece> _M_leftover_parts;$/;"	m	struct:__gnu_parallel::_QSBThreadLocal
_M_len	cpp_src/stl_tempbuf.h	/^      size_type  _M_len;$/;"	m	class:std::_Temporary_buffer
_M_length	cpp_src/basic_string.h	/^	size_type		_M_length;$/;"	m	struct:std::basic_string::_Rep_base
_M_limit	cpp_src/basic_string.h	/^      _M_limit(size_type __pos, size_type __off) const$/;"	f	class:std::basic_string
_M_line	5/debug/formatter.h	/^    std::size_t         _M_line;$/;"	m	class:__gnu_debug::_Error_formatter
_M_list_cost	5/profile/impl/profiler_list_to_vector.h	/^    float _M_list_cost;$/;"	m	class:__gnu_profile::__list2vector_info
_M_list_cost	5/profile/impl/profiler_vector_to_list.h	/^    float _M_list_cost;$/;"	m	class:__gnu_profile::__vector2list_info
_M_load	5/parallel/workstealing.h	/^      _GLIBCXX_JOB_VOLATILE _DifferenceType _M_load;$/;"	m	struct:__gnu_parallel::_Job
_M_local_iterators	5/debug/safe_unordered_base.h	/^    _Safe_iterator_base* _M_local_iterators;$/;"	m	class:__gnu_debug::_Safe_unordered_container_base
_M_local_word	cpp_src/ios_base.h	/^    _Words		_M_local_word[_S_local_word_size];$/;"	m	class:std::ios_base
_M_log_k	5/parallel/losertree.h	/^      unsigned int _M_log_k;$/;"	m	class:__gnu_parallel::_LoserTreeBase
_M_longest_chain	5/profile/impl/profiler_hash_func.h	/^    std::size_t _M_longest_chain;$/;"	m	class:__gnu_profile::__hashfunc_info
_M_losers	5/parallel/losertree.h	/^      _Loser* _M_losers;$/;"	m	class:__gnu_parallel::_LoserTreeBase
_M_losers	5/parallel/losertree.h	/^      _Loser* _M_losers;$/;"	m	class:__gnu_parallel::_LoserTreePointerBase
_M_losers	5/parallel/losertree.h	/^      _Loser* _M_losers;$/;"	m	class:__gnu_parallel::_LoserTreePointerUnguardedBase
_M_losers	5/parallel/losertree.h	/^      _Loser* _M_losers;$/;"	m	class:__gnu_parallel::_LoserTreeUnguardedBase
_M_map	cpp_src/stl_deque.h	/^	_Tp** _M_map;$/;"	m	struct:std::_Deque_base::_Deque_impl
_M_map_cost	5/profile/impl/profiler_map_to_unordered_map.h	/^    float _M_map_cost;$/;"	m	class:__gnu_profile::__map2umap_info
_M_map_size	cpp_src/stl_deque.h	/^	size_t _M_map_size;$/;"	m	struct:std::_Deque_base::_Deque_impl
_M_mask	cpp_src/mask_array.h	/^      const _Array<bool> _M_mask;$/;"	m	class:std::mask_array
_M_mask	cpp_src/stl_bvector.h	/^    _Bit_type _M_mask;$/;"	m	struct:std::_Bit_reference
_M_max	5/profile/impl/profiler_container_size.h	/^    std::size_t _M_max;  \/\/ range of # buckets$/;"	m	class:__gnu_profile::__container_size_info
_M_max_length	5/debug/formatter.h	/^    mutable std::size_t _M_max_length;$/;"	m	class:__gnu_debug::_Error_formatter
_M_max_size	5/parallel/queue.h	/^      _SequenceIndex _M_max_size;$/;"	m	class:__gnu_parallel::_RestrictedBoundedConcurrentQueue
_M_max_size	5/profile/impl/profiler_list_to_vector.h	/^    std::size_t _M_max_size;$/;"	m	class:__gnu_profile::__list2vector_info
_M_message	5/debug/formatter.h	/^    _M_message(const char* __text) const$/;"	f	class:__gnu_debug::_Error_formatter
_M_min	5/profile/impl/profiler_container_size.h	/^    std::size_t _M_min;$/;"	m	class:__gnu_profile::__container_size_info
_M_month01	cpp_src/locale_facets.h	/^      const _CharT*			_M_month01;$/;"	m	struct:std::__timepunct_cache
_M_month02	cpp_src/locale_facets.h	/^      const _CharT*			_M_month02;$/;"	m	struct:std::__timepunct_cache
_M_month03	cpp_src/locale_facets.h	/^      const _CharT*			_M_month03;$/;"	m	struct:std::__timepunct_cache
_M_month04	cpp_src/locale_facets.h	/^      const _CharT*			_M_month04;$/;"	m	struct:std::__timepunct_cache
_M_month05	cpp_src/locale_facets.h	/^      const _CharT*			_M_month05;$/;"	m	struct:std::__timepunct_cache
_M_month06	cpp_src/locale_facets.h	/^      const _CharT*			_M_month06;$/;"	m	struct:std::__timepunct_cache
_M_month07	cpp_src/locale_facets.h	/^      const _CharT*			_M_month07;$/;"	m	struct:std::__timepunct_cache
_M_month08	cpp_src/locale_facets.h	/^      const _CharT*			_M_month08;$/;"	m	struct:std::__timepunct_cache
_M_month09	cpp_src/locale_facets.h	/^      const _CharT*			_M_month09;$/;"	m	struct:std::__timepunct_cache
_M_month10	cpp_src/locale_facets.h	/^      const _CharT*			_M_month10;$/;"	m	struct:std::__timepunct_cache
_M_month11	cpp_src/locale_facets.h	/^      const _CharT*			_M_month11;$/;"	m	struct:std::__timepunct_cache
_M_month12	cpp_src/locale_facets.h	/^      const _CharT*			_M_month12;$/;"	m	struct:std::__timepunct_cache
_M_months	cpp_src/locale_facets.h	/^      _M_months(const _CharT** __months) const$/;"	f	class:std::__timepunct
_M_months_abbreviated	cpp_src/locale_facets.h	/^      _M_months_abbreviated(const _CharT** __months) const$/;"	f	class:std::__timepunct
_M_move	cpp_src/basic_string.h	/^      _M_move(_CharT* __d, const _CharT* __s, size_type __n)$/;"	f	class:std::basic_string
_M_msg	cpp_src/ios_base.h	/^      string _M_msg;$/;"	m	class:std::ios_base::failure
_M_mt	5/parallel/random_number.h	/^    std::tr1::mt19937   _M_mt;$/;"	m	class:__gnu_parallel::_RandomNumber
_M_n	5/debug/safe_sequence.h	/^      difference_type _M_n;$/;"	m	class:__gnu_debug::_After_nth_from
_M_name	5/debug/formatter.h	/^	  const char*      _M_name;$/;"	m	struct:__gnu_debug::_Error_formatter::_Parameter::__anon2::__anon3
_M_name	5/debug/formatter.h	/^	  const char*      _M_name;$/;"	m	struct:__gnu_debug::_Error_formatter::_Parameter::__anon2::__anon4
_M_name	5/debug/formatter.h	/^	  const char* _M_name;$/;"	m	struct:__gnu_debug::_Error_formatter::_Parameter::__anon2::__anon5
_M_name	5/debug/formatter.h	/^	  const char* _M_name;$/;"	m	struct:__gnu_debug::_Error_formatter::_Parameter::__anon2::__anon6
_M_name_messages	cpp_src/locale_facets.h	/^      const char*			_M_name_messages;$/;"	m	class:std::messages
_M_name_timepunct	cpp_src/locale_facets.h	/^      const char*			_M_name_timepunct;$/;"	m	class:std::__timepunct
_M_names	cpp_src/locale_classes.h	/^    char**				_M_names;$/;"	m	class:std::locale::_Impl
_M_narrow	cpp_src/locale_facets.h	/^      char                      _M_narrow[128];$/;"	m	class:std::ctype
_M_narrow	cpp_src/locale_facets.h	/^      mutable char		_M_narrow[1 + static_cast<unsigned char>(-1)];$/;"	m	class:std::ctype
_M_narrow_init	cpp_src/locale_facets.h	/^      void _M_narrow_init() const$/;"	f	class:std::ctype
_M_narrow_ok	cpp_src/locale_facets.h	/^      bool                      _M_narrow_ok;$/;"	m	class:std::ctype
_M_narrow_ok	cpp_src/locale_facets.h	/^      mutable char		_M_narrow_ok;	\/\/ 0 uninitialized, 1 init,$/;"	m	class:std::ctype
_M_neg_format	cpp_src/locale_facets.h	/^      money_base::pattern	        _M_neg_format;$/;"	m	struct:std::__moneypunct_cache
_M_negative_sign	cpp_src/locale_facets.h	/^      const _CharT*			_M_negative_sign;$/;"	m	struct:std::__moneypunct_cache
_M_negative_sign_size	cpp_src/locale_facets.h	/^      size_t                            _M_negative_sign_size;$/;"	m	struct:std::__moneypunct_cache
_M_next	5/debug/safe_base.h	/^    _Safe_iterator_base*	_M_next;$/;"	m	class:__gnu_debug::_Safe_iterator_base
_M_next	cpp_src/ios_base.h	/^      _Callback_list*		_M_next;$/;"	m	struct:std::ios_base::_Callback_list
_M_next	cpp_src/stl_list.h	/^    _List_node_base* _M_next;   \/\/\/< Self-explanatory$/;"	m	struct:std::_List_node_base
_M_node	cpp_src/stl_deque.h	/^      _Map_pointer _M_node;$/;"	m	struct:std::_Deque_iterator
_M_node	cpp_src/stl_list.h	/^	_List_node_base _M_node;$/;"	m	struct:std::_List_base::_List_impl
_M_node	cpp_src/stl_list.h	/^      _List_node_base* _M_node;$/;"	m	struct:std::_List_iterator
_M_node	cpp_src/stl_list.h	/^      const _List_node_base* _M_node;$/;"	m	struct:std::_List_const_iterator
_M_node	cpp_src/stl_tree.h	/^      _Base_ptr _M_node;$/;"	m	struct:std::_Rb_tree_const_iterator
_M_node	cpp_src/stl_tree.h	/^      _Base_ptr _M_node;$/;"	m	struct:std::_Rb_tree_iterator
_M_node_count	cpp_src/stl_tree.h	/^	  size_type 		_M_node_count; \/\/ Keeps track of size of tree.$/;"	m	struct:std::_Rb_tree::_Rb_tree_impl
_M_num_bins	5/parallel/random_shuffle.h	/^      int _M_num_bins;$/;"	m	struct:__gnu_parallel::_DRandomShufflingGlobalData
_M_num_bits	5/parallel/random_shuffle.h	/^      int _M_num_bits;$/;"	m	struct:__gnu_parallel::_DRandomShufflingGlobalData
_M_num_get	cpp_src/basic_ios.h	/^      const __num_get_type*                          _M_num_get;$/;"	m	class:std::basic_ios
_M_num_parameters	5/debug/formatter.h	/^    mutable std::size_t _M_num_parameters;$/;"	m	class:__gnu_debug::_Error_formatter
_M_num_put	cpp_src/basic_ios.h	/^      const __num_put_type*                          _M_num_put;$/;"	m	class:std::basic_ios
_M_num_threads	5/parallel/balanced_quicksort.h	/^      _ThreadIndex _M_num_threads;$/;"	m	struct:__gnu_parallel::_QSBThreadLocal
_M_num_threads	5/parallel/multiway_mergesort.h	/^      _ThreadIndex _M_num_threads;$/;"	m	struct:__gnu_parallel::_PMWMSSortingData
_M_num_threads	5/parallel/random_shuffle.h	/^      int _M_num_threads;$/;"	m	struct:__gnu_parallel::_DRSSorterPU
_M_num_threads	5/parallel/tags.h	/^      _ThreadIndex _M_num_threads;$/;"	m	struct:__gnu_parallel::parallel_tag
_M_off	cpp_src/postypes.h	/^      streamoff	                _M_off;$/;"	m	class:std::fpos
_M_off	cpp_src/slice_array.h	/^    size_t _M_off;                      \/\/ offset$/;"	m	class:std::slice
_M_offset	5/parallel/losertree.h	/^      unsigned int _M_ik, _M_k, _M_offset;$/;"	m	class:__gnu_parallel::_LoserTreeBase
_M_offset	5/parallel/losertree.h	/^      unsigned int _M_ik, _M_k, _M_offset;$/;"	m	class:__gnu_parallel::_LoserTreePointerBase
_M_offset	5/parallel/losertree.h	/^      unsigned int _M_ik, _M_k, _M_offset;$/;"	m	class:__gnu_parallel::_LoserTreePointerUnguardedBase
_M_offset	5/parallel/losertree.h	/^      unsigned int _M_ik, _M_k, _M_offset;$/;"	m	class:__gnu_parallel::_LoserTreeUnguardedBase
_M_offset	cpp_src/stl_bvector.h	/^    unsigned int _M_offset;$/;"	m	struct:std::_Bit_iterator_base
_M_offsets	5/parallel/multiway_mergesort.h	/^      _DifferenceType* _M_offsets;$/;"	m	struct:__gnu_parallel::_PMWMSSortingData
_M_ok	cpp_src/stream_iterator.h	/^      bool		_M_ok;$/;"	m	class:std::istream_iterator
_M_op	5/parallel/base.h	/^      _Operation _M_op;$/;"	m	class:__gnu_parallel::__binder1st
_M_op	5/parallel/base.h	/^      _Operation _M_op;$/;"	m	class:__gnu_parallel::__binder2nd
_M_operations	5/profile/impl/profiler_list_to_slist.h	/^    std::size_t _M_operations;$/;"	m	class:__gnu_profile::__list2slist_info
_M_original_len	cpp_src/stl_tempbuf.h	/^      size_type  _M_original_len;$/;"	m	class:std::_Temporary_buffer
_M_p	cpp_src/basic_string.h	/^	_CharT* _M_p; \/\/ The actual data.$/;"	m	struct:std::basic_string::_Alloc_hider
_M_p	cpp_src/stl_bvector.h	/^    _Bit_type * _M_p;$/;"	m	struct:std::_Bit_iterator_base
_M_p	cpp_src/stl_bvector.h	/^    _Bit_type * _M_p;$/;"	m	struct:std::_Bit_reference
_M_parameters	5/debug/formatter.h	/^    mutable _Parameter  _M_parameters[__max_parameters];$/;"	m	class:__gnu_debug::_Error_formatter
_M_parent	cpp_src/stl_tree.h	/^    _Base_ptr		_M_parent;$/;"	m	struct:std::_Rb_tree_node_base
_M_pieces	5/parallel/multiway_mergesort.h	/^      std::vector<_Piece<_DifferenceType> >* _M_pieces;$/;"	m	struct:__gnu_parallel::_PMWMSSortingData
_M_pm	cpp_src/locale_facets.h	/^      const _CharT*			_M_pm;$/;"	m	struct:std::__timepunct_cache
_M_pos	5/parallel/base.h	/^      _DifferenceType _M_pos;$/;"	m	class:__gnu_parallel::_PseudoSequenceIterator
_M_pos_format	cpp_src/locale_facets.h	/^      money_base::pattern		_M_pos_format;$/;"	m	struct:std::__moneypunct_cache
_M_positive_sign	cpp_src/locale_facets.h	/^      const _CharT*			_M_positive_sign;$/;"	m	struct:std::__moneypunct_cache
_M_positive_sign_size	cpp_src/locale_facets.h	/^      size_t                            _M_positive_sign_size;$/;"	m	struct:std::__moneypunct_cache
_M_precision	cpp_src/ios_base.h	/^    streamsize		_M_precision;$/;"	m	class:std::ios_base
_M_pred	5/bits/predefined_ops.h	/^      _Predicate _M_pred;$/;"	m	struct:__gnu_cxx::__ops::_Iter_negate
_M_pred	5/bits/predefined_ops.h	/^      _Predicate _M_pred;$/;"	m	struct:__gnu_cxx::__ops::_Iter_pred
_M_pred	5/parallel/base.h	/^      _Predicate _M_pred;$/;"	m	class:__gnu_parallel::__unary_negate
_M_pred	cpp_src/stl_function.h	/^      _Predicate _M_pred;$/;"	m	class:std::binary_negate
_M_pred	cpp_src/stl_function.h	/^      _Predicate _M_pred;$/;"	m	class:std::unary_negate
_M_prev	cpp_src/stl_list.h	/^    _List_node_base* _M_prev;   \/\/\/< Self-explanatory$/;"	m	struct:std::_List_node_base
_M_prior	5/debug/safe_base.h	/^    _Safe_iterator_base*	_M_prior;$/;"	m	class:__gnu_debug::_Safe_iterator_base
_M_ptr	5/bits/nested_exception.h	/^    exception_ptr _M_ptr;$/;"	m	class:std::nested_exception
_M_ptr	cpp_src/stl_function.h	/^      _Result (*_M_ptr)(_Arg);$/;"	m	class:std::pointer_to_unary_function
_M_ptr	cpp_src/stl_function.h	/^      _Result (*_M_ptr)(_Arg1, _Arg2);$/;"	m	class:std::pointer_to_binary_function
_M_put	cpp_src/streambuf_iterator.h	/^      _M_put(const _CharT* __ws, streamsize __len)$/;"	f	class:std::ostreambuf_iterator
_M_put_node	cpp_src/stl_list.h	/^      _M_put_node(_List_node<_Tp>* __p)$/;"	f	class:std::_List_base
_M_put_node	cpp_src/stl_tree.h	/^      _M_put_node(_Rb_tree_node* __p)$/;"	f	class:std::_Rb_tree
_M_pword	cpp_src/ios_base.h	/^      void*	_M_pword;$/;"	m	struct:std::ios_base::_Words
_M_rand_sup	5/parallel/random_number.h	/^    uint64_t            _M_rand_sup;$/;"	m	class:__gnu_parallel::_RandomNumber
_M_rand_sup_reciprocal	5/parallel/random_number.h	/^    double              _M_rand_sup_reciprocal;$/;"	m	class:__gnu_parallel::_RandomNumber
_M_range_check	cpp_src/stl_bvector.h	/^    _M_range_check(size_type __n) const$/;"	f	class:std::vector
_M_range_check	cpp_src/stl_deque.h	/^      _M_range_check(size_type __n) const$/;"	f	class:std::deque
_M_range_check	cpp_src/stl_vector.h	/^      _M_range_check(size_type __n) const$/;"	f	class:std::vector
_M_range_initialize	cpp_src/stl_vector.h	/^        _M_range_initialize(_ForwardIterator __first,$/;"	f	class:std::vector
_M_range_initialize	cpp_src/stl_vector.h	/^        _M_range_initialize(_InputIterator __first,$/;"	f	class:std::vector
_M_read	cpp_src/stream_iterator.h	/^      _M_read()$/;"	f	class:std::istream_iterator
_M_ref	5/bits/predefined_ops.h	/^      typename std::iterator_traits<_Iterator1>::reference _M_ref;$/;"	m	struct:__gnu_cxx::__ops::_Iter_comp_to_iter
_M_ref	5/bits/predefined_ops.h	/^      typename std::iterator_traits<_Iterator1>::reference _M_ref;$/;"	m	struct:__gnu_cxx::__ops::_Iter_equals_iter
_M_refcopy	cpp_src/basic_string.h	/^	_M_refcopy() throw()$/;"	f	struct:std::basic_string::_Rep
_M_refcount	cpp_src/basic_string.h	/^	_Atomic_word		_M_refcount;$/;"	m	struct:std::basic_string::_Rep_base
_M_refcount	cpp_src/ios_base.h	/^      _Atomic_word		_M_refcount;  \/\/ 0 means one reference.$/;"	m	struct:std::ios_base::_Callback_list
_M_refcount	cpp_src/locale_classes.h	/^    _Atomic_word			_M_refcount;$/;"	m	class:std::locale::_Impl
_M_refcount	cpp_src/locale_classes.h	/^    mutable _Atomic_word		_M_refcount;$/;"	m	class:std::locale::facet
_M_refdata	cpp_src/basic_string.h	/^	_M_refdata() throw()$/;"	f	struct:std::basic_string::_Rep
_M_remove_reference	cpp_src/ios_base.h	/^      _M_remove_reference() $/;"	f	struct:std::ios_base::_Callback_list
_M_remove_reference	cpp_src/locale_classes.h	/^    _M_remove_reference() const throw()$/;"	f	class:std::locale::facet
_M_remove_reference	cpp_src/locale_classes.h	/^    _M_remove_reference() throw()$/;"	f	class:std::locale::_Impl
_M_rep	cpp_src/basic_string.h	/^      _M_rep() const$/;"	f	class:std::basic_string
_M_replace_dispatch	cpp_src/basic_string.h	/^	_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n,$/;"	f	class:std::basic_string
_M_reserve_elements_at_back	cpp_src/stl_deque.h	/^      _M_reserve_elements_at_back(size_type __n)$/;"	f	class:std::deque
_M_reserve_elements_at_front	cpp_src/stl_deque.h	/^      _M_reserve_elements_at_front(size_type __n)$/;"	f	class:std::deque
_M_reserve_map_at_back	cpp_src/stl_deque.h	/^      _M_reserve_map_at_back(size_type __nodes_to_add = 1)$/;"	f	class:std::deque
_M_reserve_map_at_front	cpp_src/stl_deque.h	/^      _M_reserve_map_at_front(size_type __nodes_to_add = 1)$/;"	f	class:std::deque
_M_resize	5/profile/impl/profiler_container_size.h	/^    std::size_t _M_resize;$/;"	m	class:__gnu_profile::__container_size_info
_M_resize	5/profile/impl/profiler_list_to_vector.h	/^    std::size_t _M_resize;$/;"	m	class:__gnu_profile::__list2vector_info
_M_resize	5/profile/impl/profiler_vector_to_list.h	/^    std::size_t _M_resize;$/;"	m	class:__gnu_profile::__vector2list_info
_M_rewind	5/profile/impl/profiler_list_to_slist.h	/^    bool _M_rewind;$/;"	m	class:__gnu_profile::__list2slist_info
_M_right	cpp_src/stl_tree.h	/^    _Base_ptr		_M_right;$/;"	m	struct:std::_Rb_tree_node_base
_M_rightmost	cpp_src/stl_tree.h	/^      _M_rightmost() const$/;"	f	class:std::_Rb_tree
_M_rightmost	cpp_src/stl_tree.h	/^      _M_rightmost()$/;"	f	class:std::_Rb_tree
_M_root	cpp_src/stl_tree.h	/^      _M_root() const$/;"	f	class:std::_Rb_tree
_M_root	cpp_src/stl_tree.h	/^      _M_root()$/;"	f	class:std::_Rb_tree
_M_samples	5/parallel/multiway_mergesort.h	/^      _ValueType* _M_samples;$/;"	m	struct:__gnu_parallel::_PMWMSSortingData
_M_sbuf	cpp_src/streambuf_iterator.h	/^      mutable streambuf_type*	_M_sbuf;$/;"	m	class:std::istreambuf_iterator
_M_sbuf	cpp_src/streambuf_iterator.h	/^      streambuf_type*	_M_sbuf;$/;"	m	class:std::ostreambuf_iterator
_M_sd	5/parallel/random_shuffle.h	/^      _DRandomShufflingGlobalData<_RAIter>* _M_sd;$/;"	m	struct:__gnu_parallel::_DRSSorterPU
_M_second	5/parallel/iterator.h	/^      _Iterator2 _M_second;$/;"	m	class:__gnu_parallel::_IteratorTriple
_M_seed	5/parallel/random_shuffle.h	/^      uint32_t _M_seed;$/;"	m	struct:__gnu_parallel::_DRSSorterPU
_M_seq_type	5/debug/formatter.h	/^	  const type_info* _M_seq_type;$/;"	m	struct:__gnu_debug::_Error_formatter::_Parameter::__anon2::__anon3
_M_sequence	5/debug/formatter.h	/^	  const void*      _M_sequence;$/;"	m	struct:__gnu_debug::_Error_formatter::_Parameter::__anon2::__anon3
_M_sequence	5/debug/formatter.h	/^	} _M_sequence;$/;"	m	union:__gnu_debug::_Error_formatter::_Parameter::__anon2	typeref:struct:__gnu_debug::_Error_formatter::_Parameter::__anon2::__anon4
_M_sequence	5/debug/formatter.h	/^      _M_sequence(const _Sequence& __seq, const char* __name = 0) const$/;"	f	class:__gnu_debug::_Error_formatter
_M_sequence	5/debug/safe_base.h	/^    _Safe_sequence_base*	_M_sequence;$/;"	m	class:__gnu_debug::_Safe_iterator_base
_M_sequential_algorithm	5/parallel/find_selectors.h	/^        _M_sequential_algorithm(_RAIter1 __begin1,$/;"	f	struct:__gnu_parallel::__find_first_of_selector
_M_sequential_algorithm	5/parallel/find_selectors.h	/^      _M_sequential_algorithm(_RAIter1 __begin1,$/;"	f	struct:__gnu_parallel::__adjacent_find_selector
_M_sequential_algorithm	5/parallel/find_selectors.h	/^      _M_sequential_algorithm(_RAIter1 __begin1,$/;"	f	struct:__gnu_parallel::__find_if_selector
_M_sequential_algorithm	5/parallel/find_selectors.h	/^      _M_sequential_algorithm(_RAIter1 __begin1,$/;"	f	struct:__gnu_parallel::__mismatch_selector
_M_set_leaked	cpp_src/basic_string.h	/^	_M_set_leaked()$/;"	f	struct:std::basic_string::_Rep
_M_set_length_and_sharable	cpp_src/basic_string.h	/^	_M_set_length_and_sharable(size_type __n)$/;"	f	struct:std::basic_string::_Rep
_M_set_node	cpp_src/stl_deque.h	/^      _M_set_node(_Map_pointer __new_node)$/;"	f	struct:std::_Deque_iterator
_M_set_sharable	cpp_src/basic_string.h	/^	_M_set_sharable()$/;"	f	struct:std::basic_string::_Rep
_M_setstate	cpp_src/basic_ios.h	/^      _M_setstate(iostate __state)$/;"	f	class:std::basic_ios
_M_shift_count	5/profile/impl/profiler_list_to_vector.h	/^    std::size_t _M_shift_count;$/;"	m	class:__gnu_profile::__list2vector_info
_M_shift_count	5/profile/impl/profiler_vector_to_list.h	/^    std::size_t _M_shift_count;$/;"	m	class:__gnu_profile::__vector2list_info
_M_size	cpp_src/gslice.h	/^      valarray<size_t> _M_size;$/;"	m	struct:std::gslice::_Indexer
_M_size	cpp_src/valarray_before.h	/^      const size_t _M_size;$/;"	m	class:std::_SBase
_M_slice	cpp_src/valarray_before.h	/^      const slice& _M_slice;$/;"	m	class:std::_SBase
_M_source	5/parallel/losertree.h	/^	int _M_source;$/;"	m	struct:__gnu_parallel::_LoserTreeBase::_Loser
_M_source	5/parallel/losertree.h	/^	int _M_source;$/;"	m	struct:__gnu_parallel::_LoserTreePointerBase::_Loser
_M_source	5/parallel/losertree.h	/^	int _M_source;$/;"	m	struct:__gnu_parallel::_LoserTreePointerUnguardedBase::_Loser
_M_source	5/parallel/losertree.h	/^	int _M_source;$/;"	m	struct:__gnu_parallel::_LoserTreeUnguardedBase::_Loser
_M_source	5/parallel/multiway_mergesort.h	/^      _RAIter _M_source;$/;"	m	struct:__gnu_parallel::_PMWMSSortingData
_M_source	5/parallel/random_shuffle.h	/^      _RAIter& _M_source;$/;"	m	struct:__gnu_parallel::_DRandomShufflingGlobalData
_M_st	cpp_src/slice_array.h	/^    size_t _M_st;			\/\/ stride unit$/;"	m	class:std::slice
_M_stack	5/profile/impl/profiler_node.h	/^    __stack_t _M_stack;$/;"	m	class:__gnu_profile::__object_info_base
_M_start	cpp_src/gslice.h	/^      size_t _M_start;$/;"	m	struct:std::gslice::_Indexer
_M_start	cpp_src/stl_bvector.h	/^	_Bit_iterator 	_M_start;$/;"	m	struct:std::_Bvector_base::_Bvector_impl
_M_start	cpp_src/stl_deque.h	/^	iterator _M_start;$/;"	m	struct:std::_Deque_base::_Deque_impl
_M_start	cpp_src/stl_vector.h	/^	_Tp*           _M_start;$/;"	m	struct:std::_Vector_base::_Vector_impl
_M_starts	5/parallel/multiway_mergesort.h	/^      _DifferenceType* _M_starts;$/;"	m	struct:__gnu_parallel::_PMWMSSortingData
_M_starts	5/parallel/random_shuffle.h	/^      _DifferenceType* _M_starts;$/;"	m	struct:__gnu_parallel::_DRandomShufflingGlobalData
_M_state	5/debug/formatter.h	/^	  _Iterator_state  _M_state;$/;"	m	struct:__gnu_debug::_Error_formatter::_Parameter::__anon2::__anon3
_M_state	cpp_src/postypes.h	/^      _StateT			_M_state;$/;"	m	class:std::fpos
_M_storage	5/ext/aligned_buffer.h	/^	_M_storage;$/;"	m	struct:__gnu_cxx::__aligned_buffer
_M_storage	5/ext/aligned_buffer.h	/^      alignas(__alignof__(_Tp2::_M_t)) unsigned char _M_storage[sizeof(_Tp)];$/;"	m	struct:__gnu_cxx::__aligned_membuf
_M_stream	cpp_src/stream_iterator.h	/^      istream_type*	_M_stream;$/;"	m	class:std::istream_iterator
_M_stream	cpp_src/stream_iterator.h	/^      ostream_type*	_M_stream;$/;"	m	class:std::ostream_iterator
_M_streambuf	cpp_src/basic_ios.h	/^      basic_streambuf<_CharT, _Traits>*              _M_streambuf;$/;"	m	class:std::basic_ios
_M_streambuf_state	cpp_src/ios_base.h	/^    iostate		_M_streambuf_state;$/;"	m	class:std::ios_base
_M_stride	cpp_src/gslice.h	/^      valarray<size_t> _M_stride;$/;"	m	struct:std::gslice::_Indexer
_M_stride	cpp_src/slice_array.h	/^      const size_t      _M_stride;$/;"	m	class:std::slice_array
_M_stride	cpp_src/valarray_before.h	/^      const size_t _M_stride;$/;"	m	class:std::_SBase
_M_string	5/debug/formatter.h	/^	} _M_string;$/;"	m	union:__gnu_debug::_Error_formatter::_Parameter::__anon2	typeref:struct:__gnu_debug::_Error_formatter::_Parameter::__anon2::__anon6
_M_string	5/debug/formatter.h	/^    _M_string(const char* __value, const char* __name = 0) const$/;"	f	class:__gnu_debug::_Error_formatter
_M_string	cpp_src/stream_iterator.h	/^      const _CharT*	_M_string;$/;"	m	class:std::ostream_iterator
_M_sup	5/parallel/losertree.h	/^	bool _M_sup;$/;"	m	struct:__gnu_parallel::_LoserTreeBase::_Loser
_M_sup	5/parallel/losertree.h	/^	bool _M_sup;$/;"	m	struct:__gnu_parallel::_LoserTreePointerBase::_Loser
_M_supremum	5/parallel/random_number.h	/^    uint64_t            _M_supremum;$/;"	m	class:__gnu_parallel::_RandomNumber
_M_supremum_reciprocal	5/parallel/random_number.h	/^    double              _M_supremum_reciprocal;$/;"	m	class:__gnu_parallel::_RandomNumber
_M_sz	cpp_src/indirect_array.h	/^      const size_t	 _M_sz;$/;"	m	class:std::indirect_array
_M_sz	cpp_src/mask_array.h	/^      const size_t       _M_sz;$/;"	m	class:std::mask_array
_M_sz	cpp_src/slice_array.h	/^      const size_t      _M_sz;$/;"	m	class:std::slice_array
_M_sz	cpp_src/slice_array.h	/^    size_t _M_sz;			\/\/ size$/;"	m	class:std::slice
_M_t	5/ext/aligned_buffer.h	/^      struct _Tp2 { _Tp _M_t; };$/;"	m	struct:__gnu_cxx::__aligned_membuf::_Tp2
_M_t	cpp_src/stl_map.h	/^      _Rep_type _M_t;$/;"	m	class:std::map
_M_t	cpp_src/stl_multimap.h	/^      _Rep_type _M_t;$/;"	m	class:std::multimap
_M_t	cpp_src/stl_multiset.h	/^      _Rep_type _M_t;$/;"	m	class:std::multiset
_M_t	cpp_src/stl_set.h	/^      _Rep_type _M_t;  \/\/ red-black tree representing set$/;"	m	class:std::set
_M_table	cpp_src/locale_facets.h	/^      const mask*		_M_table;$/;"	m	class:std::ctype
_M_temporaries	5/parallel/random_shuffle.h	/^      _ValueType** _M_temporaries;$/;"	m	struct:__gnu_parallel::_DRandomShufflingGlobalData
_M_temporary	5/parallel/multiway_mergesort.h	/^      _ValueType** _M_temporary;$/;"	m	struct:__gnu_parallel::_PMWMSSortingData
_M_text	5/debug/formatter.h	/^    mutable const char* _M_text;$/;"	m	class:__gnu_debug::_Error_formatter
_M_third	5/parallel/iterator.h	/^      _Iterator3 _M_third;$/;"	m	class:__gnu_parallel::_IteratorTriple
_M_thousands_sep	cpp_src/locale_facets.h	/^      _CharT				_M_thousands_sep;$/;"	m	struct:std::__moneypunct_cache
_M_thousands_sep	cpp_src/locale_facets.h	/^      _CharT				_M_thousands_sep;$/;"	m	struct:std::__numpunct_cache
_M_tie	cpp_src/basic_ios.h	/^      basic_ostream<_CharT, _Traits>*                _M_tie;$/;"	m	class:std::basic_ios
_M_time_era_format	cpp_src/locale_facets.h	/^      const _CharT*			_M_time_era_format;$/;"	m	struct:std::__timepunct_cache
_M_time_format	cpp_src/locale_facets.h	/^      const _CharT*			_M_time_format;$/;"	m	struct:std::__timepunct_cache
_M_time_formats	cpp_src/locale_facets.h	/^      _M_time_formats(const _CharT** __time) const$/;"	f	class:std::__timepunct
_M_tolower	cpp_src/locale_facets.h	/^      __to_type			_M_tolower;$/;"	m	class:std::ctype
_M_total	5/profile/impl/profiler_container_size.h	/^    std::size_t _M_total;$/;"	m	class:__gnu_profile::__container_size_info
_M_toupper	cpp_src/locale_facets.h	/^      __to_type			_M_toupper;$/;"	m	class:std::ctype
_M_transfer	cpp_src/stl_list.h	/^      _M_transfer(iterator __position, iterator __first, iterator __last)$/;"	f	class:std::list
_M_truename	cpp_src/locale_facets.h	/^      const _CharT*			_M_truename;$/;"	m	struct:std::__numpunct_cache
_M_truename_size	cpp_src/locale_facets.h	/^      size_t                            _M_truename_size;$/;"	m	struct:std::__numpunct_cache
_M_type	5/debug/formatter.h	/^	  const type_info* _M_type;$/;"	m	struct:__gnu_debug::_Error_formatter::_Parameter::__anon2::__anon3
_M_type	5/debug/formatter.h	/^	  const type_info* _M_type;$/;"	m	struct:__gnu_debug::_Error_formatter::_Parameter::__anon2::__anon4
_M_umap_cost	5/profile/impl/profiler_map_to_unordered_map.h	/^    float _M_umap_cost;$/;"	m	class:__gnu_profile::__map2umap_info
_M_unlink	5/debug/safe_base.h	/^    _M_unlink() throw ()$/;"	f	class:__gnu_debug::_Safe_iterator_base
_M_use_grouping	cpp_src/locale_facets.h	/^      bool				_M_use_grouping;$/;"	m	struct:std::__moneypunct_cache
_M_use_grouping	cpp_src/locale_facets.h	/^      bool				_M_use_grouping;$/;"	m	struct:std::__numpunct_cache
_M_use_pointer	5/parallel/multiway_merge.h	/^      static const bool _M_use_pointer = (sizeof(_Tp) > 4 * sizeof(_Tp*));$/;"	m	struct:__gnu_parallel::_LoserTreeTraits
_M_val	5/parallel/base.h	/^      const _Tp& _M_val;$/;"	m	class:__gnu_parallel::_PseudoSequence
_M_val	5/parallel/base.h	/^      const _Tp& _M_val;$/;"	m	class:__gnu_parallel::_PseudoSequenceIterator
_M_valid	5/profile/impl/profiler_node.h	/^    bool _M_valid;$/;"	m	class:__gnu_profile::__object_info_base
_M_value	5/bits/predefined_ops.h	/^      _Value& _M_value;$/;"	m	struct:__gnu_cxx::__ops::_Iter_comp_to_val
_M_value	5/bits/predefined_ops.h	/^      _Value& _M_value;$/;"	m	struct:__gnu_cxx::__ops::_Iter_equals_val
_M_value	5/debug/formatter.h	/^	  const char* _M_value;$/;"	m	struct:__gnu_debug::_Error_formatter::_Parameter::__anon2::__anon6
_M_value	5/debug/formatter.h	/^	  long        _M_value;$/;"	m	struct:__gnu_debug::_Error_formatter::_Parameter::__anon2::__anon5
_M_value	5/parallel/base.h	/^      _FirstArgumentType _M_value;$/;"	m	class:__gnu_parallel::__binder1st
_M_value	5/parallel/base.h	/^      _SecondArgumentType _M_value;$/;"	m	class:__gnu_parallel::__binder2nd
_M_value	cpp_src/stream_iterator.h	/^      _Tp		_M_value;$/;"	m	class:std::istream_iterator
_M_value_field	cpp_src/stl_tree.h	/^      _Val _M_value_field;$/;"	m	struct:std::_Rb_tree_node
_M_variant	5/debug/formatter.h	/^      } _M_variant;$/;"	m	struct:__gnu_debug::_Error_formatter::_Parameter	typeref:union:__gnu_debug::_Error_formatter::_Parameter::__anon2
_M_vector_cost	5/profile/impl/profiler_list_to_vector.h	/^    float _M_vector_cost;$/;"	m	class:__gnu_profile::__list2vector_info
_M_vector_cost	5/profile/impl/profiler_vector_to_list.h	/^    float _M_vector_cost;$/;"	m	class:__gnu_profile::__vector2list_info
_M_version	5/debug/safe_base.h	/^    mutable unsigned int _M_version;$/;"	m	class:__gnu_debug::_Safe_sequence_base
_M_version	5/debug/safe_base.h	/^    unsigned int		_M_version;$/;"	m	class:__gnu_debug::_Safe_iterator_base
_M_widen	cpp_src/locale_facets.h	/^      mutable char		_M_widen[1 + static_cast<unsigned char>(-1)];$/;"	m	class:std::ctype
_M_widen	cpp_src/locale_facets.h	/^      wint_t                    _M_widen[1 + static_cast<unsigned char>(-1)];$/;"	m	class:std::ctype
_M_widen_init	cpp_src/locale_facets.h	/^      void _M_widen_init() const$/;"	f	class:std::ctype
_M_widen_ok	cpp_src/locale_facets.h	/^      mutable char		_M_widen_ok;$/;"	m	class:std::ctype
_M_width	cpp_src/ios_base.h	/^    streamsize		_M_width;$/;"	m	class:std::ios_base
_M_wmask	cpp_src/locale_facets.h	/^      __wmask_type              _M_wmask[16];$/;"	m	class:std::ctype
_M_word	cpp_src/ios_base.h	/^    _Words*		_M_word;$/;"	m	class:std::ios_base
_M_word_size	cpp_src/ios_base.h	/^    int			_M_word_size;$/;"	m	class:std::ios_base
_M_word_zero	cpp_src/ios_base.h	/^    _Words		_M_word_zero;$/;"	m	class:std::ios_base
_M_wordwrap	5/debug/formatter.h	/^    mutable bool        _M_wordwrap;$/;"	m	class:__gnu_debug::_Error_formatter
_Map_alloc_type	cpp_src/stl_deque.h	/^      typedef typename _Alloc::template rebind<_Tp*>::other _Map_alloc_type;$/;"	t	class:std::_Deque_base
_Map_pointer	cpp_src/stl_deque.h	/^      typedef _Tp**                           _Map_pointer;$/;"	t	struct:std::_Deque_iterator
_Map_pointer	cpp_src/stl_deque.h	/^      typedef pointer*                           _Map_pointer;$/;"	t	class:std::deque
_Metadata	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	struct _Metadata$/;"	s	struct:__gnu_pbds::detail::pat_trie_base
_Metadata	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	struct _Metadata<null_type, _Alloc>$/;"	s	struct:__gnu_pbds::detail::pat_trie_base
_MultipleAssociativeContainerConcept	cpp_src/boost_concept_check.h	/^  struct _MultipleAssociativeContainerConcept$/;"	s
_Multiplies	5/parallel/base.h	/^    struct _Multiplies : public std::binary_function<_Tp1, _Tp2, _Result>$/;"	s	namespace:__gnu_parallel
_Multiplies	5/parallel/base.h	/^    struct _Multiplies<_Tp, _Tp, _Tp>$/;"	s	namespace:__gnu_parallel
_MultiwayMergeAlgorithm	5/parallel/types.h	/^  enum _MultiwayMergeAlgorithm$/;"	g	namespace:__gnu_parallel
_Mutable_BidirectionalIteratorConcept	cpp_src/boost_concept_check.h	/^  struct _Mutable_BidirectionalIteratorConcept$/;"	s
_Mutable_ContainerConcept	cpp_src/boost_concept_check.h	/^  struct _Mutable_ContainerConcept$/;"	s
_Mutable_ForwardContainerConcept	cpp_src/boost_concept_check.h	/^  struct _Mutable_ForwardContainerConcept$/;"	s
_Mutable_ForwardIteratorConcept	cpp_src/boost_concept_check.h	/^  struct _Mutable_ForwardIteratorConcept$/;"	s
_Mutable_RandomAccessContainerConcept	cpp_src/boost_concept_check.h	/^  struct _Mutable_RandomAccessContainerConcept$/;"	s
_Mutable_RandomAccessIteratorConcept	cpp_src/boost_concept_check.h	/^  struct _Mutable_RandomAccessIteratorConcept$/;"	s
_Mutable_ReversibleContainerConcept	cpp_src/boost_concept_check.h	/^  struct _Mutable_ReversibleContainerConcept$/;"	s
_Mutable_TrivialIteratorConcept	cpp_src/boost_concept_check.h	/^  struct _Mutable_TrivialIteratorConcept$/;"	s
_NEW_ALLOCATOR_H	5/ext/new_allocator.h	30;"	d
_Nested_exception	5/bits/nested_exception.h	/^      explicit _Nested_exception(_Except&& __ex)$/;"	f	struct:std::_Nested_exception
_Nested_exception	5/bits/nested_exception.h	/^      explicit _Nested_exception(const _Except& __ex)$/;"	f	struct:std::_Nested_exception
_Nested_exception	5/bits/nested_exception.h	/^    struct _Nested_exception : public _Except, public nested_exception$/;"	s	namespace:std
_Node	cpp_src/stl_list.h	/^      typedef _List_node<_Tp>				 _Node;$/;"	t	class:std::list
_Node	cpp_src/stl_list.h	/^      typedef _List_node<_Tp>                    _Node;$/;"	t	struct:std::_List_iterator
_Node	cpp_src/stl_list.h	/^      typedef const _List_node<_Tp>              _Node;$/;"	t	struct:std::_List_const_iterator
_Node_alloc_type	cpp_src/stl_list.h	/^        _Node_alloc_type;$/;"	t	class:std::_List_base
_Node_allocator	cpp_src/stl_tree.h	/^              _Node_allocator;$/;"	t	class:std::_Rb_tree
_Node_base	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	_Node_base(node_type type) : m_type(type)$/;"	f	struct:__gnu_pbds::detail::pat_trie_base::_Node_base
_Node_base	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      struct _Node_base$/;"	s	struct:__gnu_pbds::detail::pat_trie_base
_Node_citer	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      _Node_citer(node_pointer p_nd = 0, a_const_pointer p_traits = 0)$/;"	f	class:__gnu_pbds::detail::pat_trie_base::_Node_citer
_Node_citer	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^    class _Node_citer$/;"	c	struct:__gnu_pbds::detail::pat_trie_base
_Node_iter	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      _Node_iter(node_pointer p_nd = 0, a_const_pointer p_traits = 0)$/;"	f	class:__gnu_pbds::detail::pat_trie_base::_Node_iter
_Node_iter	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^    class _Node_iter$/;"	c	struct:__gnu_pbds::detail::pat_trie_base
_Not_equal_to	5/debug/safe_sequence.h	/^      explicit _Not_equal_to(const _Type& __v) : __value(__v) { }$/;"	f	class:__gnu_debug::_Not_equal_to
_Not_equal_to	5/debug/safe_sequence.h	/^    class _Not_equal_to$/;"	c	namespace:__gnu_debug
_Nothing	5/parallel/for_each_selectors.h	/^  struct _Nothing$/;"	s	namespace:__gnu_parallel
_OSTREAM_INSERT_H	5/bits/ostream_insert.h	31;"	d
_OSTREAM_INSERT_H	cpp_src/ostream_insert.h	36;"	d
_OutputArray	opencv2/core/mat.hpp	/^class CV_EXPORTS _OutputArray : public _InputArray$/;"	c	namespace:cv
_OutputArray	opencv2/core/mat.hpp	/^class CV_EXPORTS _OutputArray;$/;"	m	namespace:cv	typeref:class:cv::CV_EXPORTS
_OutputArray	opencv2/core/mat.inl.hpp	/^_OutputArray::_OutputArray(Mat_<_Tp>& m)$/;"	f	class:cv::_OutputArray
_OutputArray	opencv2/core/mat.inl.hpp	/^_OutputArray::_OutputArray(Matx<_Tp, m, n>& mtx)$/;"	f	class:cv::_OutputArray
_OutputArray	opencv2/core/mat.inl.hpp	/^_OutputArray::_OutputArray(_Tp* vec, int n)$/;"	f	class:cv::_OutputArray
_OutputArray	opencv2/core/mat.inl.hpp	/^_OutputArray::_OutputArray(const Mat_<_Tp>& m)$/;"	f	class:cv::_OutputArray
_OutputArray	opencv2/core/mat.inl.hpp	/^_OutputArray::_OutputArray(const Matx<_Tp, m, n>& mtx)$/;"	f	class:cv::_OutputArray
_OutputArray	opencv2/core/mat.inl.hpp	/^_OutputArray::_OutputArray(const _Tp* vec, int n)$/;"	f	class:cv::_OutputArray
_OutputArray	opencv2/core/mat.inl.hpp	/^_OutputArray::_OutputArray(const std::vector<Mat_<_Tp> >& vec)$/;"	f	class:cv::_OutputArray
_OutputArray	opencv2/core/mat.inl.hpp	/^_OutputArray::_OutputArray(const std::vector<_Tp>& vec)$/;"	f	class:cv::_OutputArray
_OutputArray	opencv2/core/mat.inl.hpp	/^_OutputArray::_OutputArray(const std::vector<std::vector<_Tp> >& vec)$/;"	f	class:cv::_OutputArray
_OutputArray	opencv2/core/mat.inl.hpp	/^_OutputArray::_OutputArray(std::vector<Mat_<_Tp> >& vec)$/;"	f	class:cv::_OutputArray
_OutputArray	opencv2/core/mat.inl.hpp	/^_OutputArray::_OutputArray(std::vector<_Tp>& vec)$/;"	f	class:cv::_OutputArray
_OutputArray	opencv2/core/mat.inl.hpp	/^_OutputArray::_OutputArray(std::vector<bool>&)$/;"	f	class:cv::_OutputArray
_OutputArray	opencv2/core/mat.inl.hpp	/^_OutputArray::_OutputArray(std::vector<std::vector<_Tp> >& vec)$/;"	f	class:cv::_OutputArray
_OutputArray	opencv2/core/mat.inl.hpp	/^inline _OutputArray::_OutputArray() { init(ACCESS_WRITE, 0); }$/;"	f	class:cv::_OutputArray
_OutputArray	opencv2/core/mat.inl.hpp	/^inline _OutputArray::_OutputArray(Mat& m) { init(MAT+ACCESS_WRITE, &m); }$/;"	f	class:cv::_OutputArray
_OutputArray	opencv2/core/mat.inl.hpp	/^inline _OutputArray::_OutputArray(UMat& m) { init(UMAT+ACCESS_WRITE, &m); }$/;"	f	class:cv::_OutputArray
_OutputArray	opencv2/core/mat.inl.hpp	/^inline _OutputArray::_OutputArray(const Mat& m)$/;"	f	class:cv::_OutputArray
_OutputArray	opencv2/core/mat.inl.hpp	/^inline _OutputArray::_OutputArray(const UMat& m)$/;"	f	class:cv::_OutputArray
_OutputArray	opencv2/core/mat.inl.hpp	/^inline _OutputArray::_OutputArray(const cuda::GpuMat& d_mat)$/;"	f	class:cv::_OutputArray
_OutputArray	opencv2/core/mat.inl.hpp	/^inline _OutputArray::_OutputArray(const cuda::HostMem& cuda_mem)$/;"	f	class:cv::_OutputArray
_OutputArray	opencv2/core/mat.inl.hpp	/^inline _OutputArray::_OutputArray(const ogl::Buffer& buf)$/;"	f	class:cv::_OutputArray
_OutputArray	opencv2/core/mat.inl.hpp	/^inline _OutputArray::_OutputArray(const std::vector<Mat>& vec)$/;"	f	class:cv::_OutputArray
_OutputArray	opencv2/core/mat.inl.hpp	/^inline _OutputArray::_OutputArray(const std::vector<UMat>& vec)$/;"	f	class:cv::_OutputArray
_OutputArray	opencv2/core/mat.inl.hpp	/^inline _OutputArray::_OutputArray(cuda::GpuMat& d_mat)$/;"	f	class:cv::_OutputArray
_OutputArray	opencv2/core/mat.inl.hpp	/^inline _OutputArray::_OutputArray(cuda::HostMem& cuda_mem)$/;"	f	class:cv::_OutputArray
_OutputArray	opencv2/core/mat.inl.hpp	/^inline _OutputArray::_OutputArray(int _flags, void* _obj) { init(_flags|ACCESS_WRITE, _obj); }$/;"	f	class:cv::_OutputArray
_OutputArray	opencv2/core/mat.inl.hpp	/^inline _OutputArray::_OutputArray(ogl::Buffer& buf)$/;"	f	class:cv::_OutputArray
_OutputArray	opencv2/core/mat.inl.hpp	/^inline _OutputArray::_OutputArray(std::vector<Mat>& vec) { init(STD_VECTOR_MAT+ACCESS_WRITE, &vec); }$/;"	f	class:cv::_OutputArray
_OutputArray	opencv2/core/mat.inl.hpp	/^inline _OutputArray::_OutputArray(std::vector<UMat>& vec) { init(STD_VECTOR_UMAT+ACCESS_WRITE, &vec); }$/;"	f	class:cv::_OutputArray
_OutputArray	opencv2/core/mat.inl.hpp	/^inline _OutputArray::_OutputArray(std::vector<cuda::GpuMat>& d_mat)$/;"	f	class:cv::_OutputArray
_OutputArray	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^__host__ _OutputArray::_OutputArray(const cudev::GpuMat_<_Tp>& m)$/;"	f	class:cv::_OutputArray
_OutputArray	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^__host__ _OutputArray::_OutputArray(cudev::GpuMat_<_Tp>& m)$/;"	f	class:cv::_OutputArray
_OutputIteratorConcept	cpp_src/boost_concept_check.h	/^  struct _OutputIteratorConcept$/;"	s
_PAIR_H	cpp_src/stl_pair.h	62;"	d
_PMWMSSortingData	5/parallel/multiway_mergesort.h	/^    struct _PMWMSSortingData$/;"	s	namespace:__gnu_parallel
_POD_CHAR_TRAITS_H	5/ext/pod_char_traits.h	33;"	d
_POINTER_H	5/ext/pointer.h	37;"	d
_POOL_ALLOCATOR_H	5/ext/pool_allocator.h	43;"	d
_PTR_TRAITS_H	5/bits/ptr_traits.h	31;"	d
_PairAssociativeContainerConcept	cpp_src/boost_concept_check.h	/^  struct _PairAssociativeContainerConcept$/;"	s
_Pair_alloc_type	cpp_src/stl_map.h	/^        _Pair_alloc_type;$/;"	t	class:std::map
_Pair_alloc_type	cpp_src/stl_multimap.h	/^        _Pair_alloc_type;$/;"	t	class:std::multimap
_Parallelism	5/parallel/types.h	/^  enum _Parallelism$/;"	g	namespace:__gnu_parallel
_Parameter	5/debug/formatter.h	/^	_Parameter(const _Safe_local_iterator<_Iterator, _Sequence>& __it,$/;"	f	struct:__gnu_debug::_Error_formatter::_Parameter
_Parameter	5/debug/formatter.h	/^        _Parameter(_Type*& __it, const char* __name, _Is_iterator)$/;"	f	struct:__gnu_debug::_Error_formatter::_Parameter
_Parameter	5/debug/formatter.h	/^        _Parameter(const _Iterator& __it, const char* __name, _Is_iterator)$/;"	f	struct:__gnu_debug::_Error_formatter::_Parameter
_Parameter	5/debug/formatter.h	/^        _Parameter(const _Safe_iterator<_Iterator, _Sequence>& __it,$/;"	f	struct:__gnu_debug::_Error_formatter::_Parameter
_Parameter	5/debug/formatter.h	/^        _Parameter(const _Safe_sequence<_Sequence>& __seq,$/;"	f	struct:__gnu_debug::_Error_formatter::_Parameter
_Parameter	5/debug/formatter.h	/^        _Parameter(const _Sequence& __seq, const char* __name, _Is_sequence)$/;"	f	struct:__gnu_debug::_Error_formatter::_Parameter
_Parameter	5/debug/formatter.h	/^        _Parameter(const _Type*& __it, const char* __name, _Is_iterator)$/;"	f	struct:__gnu_debug::_Error_formatter::_Parameter
_Parameter	5/debug/formatter.h	/^      _Parameter() : _M_kind(__unused_param), _M_variant() { }$/;"	f	struct:__gnu_debug::_Error_formatter::_Parameter
_Parameter	5/debug/formatter.h	/^      _Parameter(const char* __value, const char* __name) $/;"	f	struct:__gnu_debug::_Error_formatter::_Parameter
_Parameter	5/debug/formatter.h	/^      _Parameter(long __value, const char* __name) $/;"	f	struct:__gnu_debug::_Error_formatter::_Parameter
_Parameter	5/debug/formatter.h	/^    struct _Parameter$/;"	s	class:__gnu_debug::_Error_formatter
_PartialSumAlgorithm	5/parallel/types.h	/^  enum _PartialSumAlgorithm $/;"	g	namespace:__gnu_parallel
_Piece	5/parallel/balanced_quicksort.h	/^      typedef std::pair<_RAIter, _RAIter> _Piece;$/;"	t	struct:__gnu_parallel::_QSBThreadLocal
_Piece	5/parallel/multiway_mergesort.h	/^    struct _Piece$/;"	s	namespace:__gnu_parallel
_Plus	5/parallel/base.h	/^    struct _Plus : public std::binary_function<_Tp1, _Tp2, _Result>$/;"	s	namespace:__gnu_parallel
_Plus	5/parallel/base.h	/^    struct _Plus<_Tp, _Tp, _Tp>$/;"	s	namespace:__gnu_parallel
_Pointer	cpp_src/boost_concept_check.h	/^    typedef typename _Container::pointer _Pointer;$/;"	t	struct:_Mutable_ContainerConcept
_PseudoSequence	5/parallel/base.h	/^      _PseudoSequence(const _Tp& __val, _DifferenceType __count)$/;"	f	class:__gnu_parallel::_PseudoSequence
_PseudoSequence	5/parallel/base.h	/^    class _PseudoSequence$/;"	c	namespace:__gnu_parallel
_PseudoSequenceIterator	5/parallel/base.h	/^      _PseudoSequenceIterator(const _Tp& __val, _DifferenceType __pos)$/;"	f	class:__gnu_parallel::_PseudoSequenceIterator
_PseudoSequenceIterator	5/parallel/base.h	/^    class _PseudoSequenceIterator$/;"	c	namespace:__gnu_parallel
_QSBThreadLocal	5/parallel/balanced_quicksort.h	/^      _QSBThreadLocal(int __queue_size) : _M_leftover_parts(__queue_size) { }$/;"	f	struct:__gnu_parallel::_QSBThreadLocal
_QSBThreadLocal	5/parallel/balanced_quicksort.h	/^    struct _QSBThreadLocal$/;"	s	namespace:__gnu_parallel
_QUEUE_H	cpp_src/stl_queue.h	63;"	d
_RANDOM_H	5/bits/random.h	32;"	d
_RC_STRING_BASE_H	5/ext/rc_string_base.h	31;"	d
_RandomAccessContainerConcept	cpp_src/boost_concept_check.h	/^  struct _RandomAccessContainerConcept$/;"	s
_RandomAccessIteratorConcept	cpp_src/boost_concept_check.h	/^  struct _RandomAccessIteratorConcept$/;"	s
_RandomNumber	5/parallel/random_number.h	/^    _RandomNumber()$/;"	f	class:__gnu_parallel::_RandomNumber
_RandomNumber	5/parallel/random_number.h	/^    _RandomNumber(uint32_t __seed, uint64_t _M_supremum = 0x100000000ULL)$/;"	f	class:__gnu_parallel::_RandomNumber
_RandomNumber	5/parallel/random_number.h	/^  class _RandomNumber$/;"	c	namespace:__gnu_parallel
_Raw_bytes_alloc	cpp_src/basic_string.h	/^	typedef typename _Alloc::template rebind<char>::other _Raw_bytes_alloc;$/;"	t	struct:std::basic_string::_Rep
_Rb_tree	cpp_src/stl_tree.h	/^      _Rb_tree()$/;"	f	class:std::_Rb_tree
_Rb_tree	cpp_src/stl_tree.h	/^      _Rb_tree(const _Compare& __comp)$/;"	f	class:std::_Rb_tree
_Rb_tree	cpp_src/stl_tree.h	/^      _Rb_tree(const _Compare& __comp, const allocator_type& __a)$/;"	f	class:std::_Rb_tree
_Rb_tree	cpp_src/stl_tree.h	/^      _Rb_tree(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x)$/;"	f	class:std::_Rb_tree
_Rb_tree	cpp_src/stl_tree.h	/^    class _Rb_tree$/;"	c	namespace:std
_Rb_tree_color	cpp_src/stl_tree.h	/^  enum _Rb_tree_color { _S_red = false, _S_black = true };$/;"	g	namespace:std
_Rb_tree_const_iterator	cpp_src/stl_tree.h	/^      _Rb_tree_const_iterator()$/;"	f	struct:std::_Rb_tree_const_iterator
_Rb_tree_const_iterator	cpp_src/stl_tree.h	/^      _Rb_tree_const_iterator(_Link_type __x)$/;"	f	struct:std::_Rb_tree_const_iterator
_Rb_tree_const_iterator	cpp_src/stl_tree.h	/^      _Rb_tree_const_iterator(const iterator& __it)$/;"	f	struct:std::_Rb_tree_const_iterator
_Rb_tree_const_iterator	cpp_src/stl_tree.h	/^    struct _Rb_tree_const_iterator$/;"	s	namespace:std
_Rb_tree_impl	cpp_src/stl_tree.h	/^	  _Rb_tree_impl(const _Node_allocator& __a = _Node_allocator(),$/;"	f	struct:std::_Rb_tree::_Rb_tree_impl
_Rb_tree_impl	cpp_src/stl_tree.h	/^        struct _Rb_tree_impl : public _Node_allocator$/;"	s	class:std::_Rb_tree
_Rb_tree_impl	cpp_src/stl_tree.h	/^        struct _Rb_tree_impl<_Key_compare, true> : public _Node_allocator $/;"	s	class:std::_Rb_tree
_Rb_tree_iterator	cpp_src/stl_tree.h	/^      _Rb_tree_iterator()$/;"	f	struct:std::_Rb_tree_iterator
_Rb_tree_iterator	cpp_src/stl_tree.h	/^      _Rb_tree_iterator(_Link_type __x)$/;"	f	struct:std::_Rb_tree_iterator
_Rb_tree_iterator	cpp_src/stl_tree.h	/^    struct _Rb_tree_iterator$/;"	s	namespace:std
_Rb_tree_node	cpp_src/stl_tree.h	/^      typedef _Rb_tree_node<_Val> _Rb_tree_node;$/;"	t	class:std::_Rb_tree
_Rb_tree_node	cpp_src/stl_tree.h	/^    struct _Rb_tree_node : public _Rb_tree_node_base$/;"	s	namespace:std
_Rb_tree_node_base	cpp_src/stl_tree.h	/^  struct _Rb_tree_node_base$/;"	s	namespace:std
_RefFunClos	cpp_src/valarray_before.h	/^      _RefFunClos(const _Dom& __e, _Tp __f(const _Tp&))$/;"	f	struct:std::_RefFunClos
_RefFunClos	cpp_src/valarray_before.h	/^      _RefFunClos(const valarray<_Tp>& __v, _Tp __f(const _Tp&))$/;"	f	struct:std::_RefFunClos
_RefFunClos	cpp_src/valarray_before.h	/^    struct _RefFunClos<_Expr, _Dom>$/;"	s	namespace:std
_RefFunClos	cpp_src/valarray_before.h	/^    struct _RefFunClos<_ValArray, _Tp>$/;"	s	namespace:std
_Reference	cpp_src/boost_concept_check.h	/^    typedef typename _BackInsertionSequence::reference _Reference;$/;"	t	struct:_BackInsertionSequenceConcept
_Reference	cpp_src/boost_concept_check.h	/^    typedef typename _Container::reference _Reference;$/;"	t	struct:_Mutable_ContainerConcept
_Reference	cpp_src/boost_concept_check.h	/^    typedef typename _RandomAccessContainer::reference _Reference;$/;"	t	struct:_Mutable_RandomAccessContainerConcept
_Reference	cpp_src/boost_concept_check.h	/^    typedef typename _Sequence::reference _Reference;$/;"	t	struct:_SequenceConcept
_Rep	cpp_src/basic_string.h	/^      struct _Rep : _Rep_base$/;"	s	class:std::basic_string
_Rep_base	cpp_src/basic_string.h	/^      struct _Rep_base$/;"	s	class:std::basic_string
_Rep_type	cpp_src/stl_map.h	/^		       key_compare, _Pair_alloc_type> _Rep_type;$/;"	t	class:std::map
_Rep_type	cpp_src/stl_multimap.h	/^		       key_compare, _Pair_alloc_type> _Rep_type;$/;"	t	class:std::multimap
_Rep_type	cpp_src/stl_multiset.h	/^		       key_compare, _Key_alloc_type> _Rep_type;$/;"	t	class:std::multiset
_Rep_type	cpp_src/stl_set.h	/^		       key_compare, _Key_alloc_type> _Rep_type;$/;"	t	class:std::set
_RestrictedBoundedConcurrentQueue	5/parallel/queue.h	/^      _RestrictedBoundedConcurrentQueue(_SequenceIndex __max_size)$/;"	f	class:__gnu_parallel::_RestrictedBoundedConcurrentQueue
_RestrictedBoundedConcurrentQueue	5/parallel/queue.h	/^    class _RestrictedBoundedConcurrentQueue$/;"	c	namespace:__gnu_parallel
_Ret	cpp_src/stl_function.h	/^      const_mem_fun1_ref_t(_Ret (_Tp::*__pf)(_Arg) const)$/;"	f	class:std::const_mem_fun1_ref_t
_Ret	cpp_src/stl_function.h	/^      const_mem_fun1_t(_Ret (_Tp::*__pf)(_Arg) const)$/;"	f	class:std::const_mem_fun1_t
_Ret	cpp_src/stl_function.h	/^      const_mem_fun_ref_t(_Ret (_Tp::*__pf)() const)$/;"	f	class:std::const_mem_fun_ref_t
_Ret	cpp_src/stl_function.h	/^      const_mem_fun_t(_Ret (_Tp::*__pf)() const)$/;"	f	class:std::const_mem_fun_t
_Ret	cpp_src/stl_function.h	/^      mem_fun1_ref_t(_Ret (_Tp::*__pf)(_Arg))$/;"	f	class:std::mem_fun1_ref_t
_Ret	cpp_src/stl_function.h	/^      mem_fun1_t(_Ret (_Tp::*__pf)(_Arg))$/;"	f	class:std::mem_fun1_t
_Ret	cpp_src/stl_function.h	/^      mem_fun_ref_t(_Ret (_Tp::*__pf)())$/;"	f	class:std::mem_fun_ref_t
_Ret	cpp_src/stl_function.h	/^      mem_fun_t(_Ret (_Tp::*__pf)())$/;"	f	class:std::mem_fun_t
_Ret	cpp_src/stl_function.h	/^    mem_fun(_Ret (_Tp::*__f)() const)$/;"	f	namespace:std
_Ret	cpp_src/stl_function.h	/^    mem_fun(_Ret (_Tp::*__f)())$/;"	f	namespace:std
_Ret	cpp_src/stl_function.h	/^    mem_fun(_Ret (_Tp::*__f)(_Arg) const)$/;"	f	namespace:std
_Ret	cpp_src/stl_function.h	/^    mem_fun(_Ret (_Tp::*__f)(_Arg))$/;"	f	namespace:std
_Ret	cpp_src/stl_function.h	/^    mem_fun_ref(_Ret (_Tp::*__f)() const)$/;"	f	namespace:std
_Ret	cpp_src/stl_function.h	/^    mem_fun_ref(_Ret (_Tp::*__f)())$/;"	f	namespace:std
_Ret	cpp_src/stl_function.h	/^    mem_fun_ref(_Ret (_Tp::*__f)(_Arg) const)$/;"	f	namespace:std
_Ret	cpp_src/stl_function.h	/^    mem_fun_ref(_Ret (_Tp::*__f)(_Arg))$/;"	f	namespace:std
_Rethrow_if_nested_impl	5/bits/nested_exception.h	/^    struct _Rethrow_if_nested_impl$/;"	s	namespace:std
_Rethrow_if_nested_impl	5/bits/nested_exception.h	/^    struct _Rethrow_if_nested_impl<_Tp, false>$/;"	s	namespace:std
_Reverse_iterator	cpp_src/boost_concept_check.h	/^    typedef typename _RandomAccessContainer::reverse_iterator _Reverse_iterator;$/;"	t	struct:_Mutable_RandomAccessContainerConcept
_Reverse_iterator	cpp_src/boost_concept_check.h	/^    typedef typename _ReversibleContainer::reverse_iterator _Reverse_iterator;$/;"	t	struct:_Mutable_ReversibleContainerConcept
_ReversibleContainerConcept	cpp_src/boost_concept_check.h	/^  struct _ReversibleContainerConcept$/;"	s
_SBase	cpp_src/valarray_before.h	/^      _SBase (_Array<_Tp> __a, const slice& __s)$/;"	f	class:std::_SBase
_SBase	cpp_src/valarray_before.h	/^      _SBase (const _Dom& __e, const slice& __s)$/;"	f	class:std::_SBase
_SBase	cpp_src/valarray_before.h	/^    class _SBase$/;"	c	namespace:std
_SBase	cpp_src/valarray_before.h	/^    class _SBase<_Array<_Tp> >$/;"	c	namespace:std
_SClos	cpp_src/valarray_before.h	/^      _SClos (_Array<_Tp> __a, const slice& __s) : _Base (__a, __s) {}$/;"	f	struct:std::_SClos
_SClos	cpp_src/valarray_before.h	/^      _SClos (const _Dom& __e, const slice& __s) : _Base (__e, __s) {}$/;"	f	struct:std::_SClos
_SClos	cpp_src/valarray_before.h	/^    struct _SClos<_Expr, _Dom>$/;"	s	namespace:std
_SClos	cpp_src/valarray_before.h	/^    struct _SClos<_ValArray, _Tp>$/;"	s	namespace:std
_SET_H	cpp_src/stl_set.h	62;"	d
_SGIAssignableConcept	cpp_src/boost_concept_check.h	/^  struct _SGIAssignableConcept$/;"	s
_SHARED_PTR_ATOMIC_H	5/bits/shared_ptr_atomic.h	31;"	d
_SHARED_PTR_BASE_H	5/bits/shared_ptr_base.h	50;"	d
_SHARED_PTR_H	5/bits/shared_ptr.h	50;"	d
_SLICE_ARRAY_H	5/bits/slice_array.h	33;"	d
_SLICE_ARRAY_H	cpp_src/slice_array.h	39;"	d
_SSO_STRING_BASE_H	5/ext/sso_string_base.h	31;"	d
_STACK_H	cpp_src/stl_stack.h	63;"	d
_STDIO_FILEBUF_H	5/ext/stdio_filebuf.h	30;"	d
_STDIO_SYNC_FILEBUF_H	5/ext/stdio_sync_filebuf.h	30;"	d
_STL_ALGOBASE_H	5/bits/stl_algobase.h	57;"	d
_STL_ALGO_H	5/bits/stl_algo.h	57;"	d
_STL_BVECTOR_H	5/bits/stl_bvector.h	57;"	d
_STL_CONSTRUCT_H	5/bits/stl_construct.h	57;"	d
_STL_CONSTRUCT_H	cpp_src/stl_construct.h	62;"	d
_STL_DEQUE_H	5/bits/stl_deque.h	57;"	d
_STL_FUNCTION_H	5/bits/stl_function.h	57;"	d
_STL_HEAP_H	5/bits/stl_heap.h	56;"	d
_STL_HEAP_H	cpp_src/stl_heap.h	61;"	d
_STL_ITERATOR_BASE_FUNCS_H	5/bits/stl_iterator_base_funcs.h	60;"	d
_STL_ITERATOR_BASE_TYPES_H	5/bits/stl_iterator_base_types.h	60;"	d
_STL_ITERATOR_H	5/bits/stl_iterator.h	61;"	d
_STL_LIST_H	5/bits/stl_list.h	57;"	d
_STL_MAP_H	5/bits/stl_map.h	57;"	d
_STL_MULTIMAP_H	5/bits/stl_multimap.h	57;"	d
_STL_MULTISET_H	5/bits/stl_multiset.h	57;"	d
_STL_NUMERIC_H	5/bits/stl_numeric.h	57;"	d
_STL_NUMERIC_H	cpp_src/stl_numeric.h	62;"	d
_STL_PAIR_H	5/bits/stl_pair.h	57;"	d
_STL_QUEUE_H	5/bits/stl_queue.h	57;"	d
_STL_RAW_STORAGE_ITERATOR_H	5/bits/stl_raw_storage_iter.h	57;"	d
_STL_RAW_STORAGE_ITERATOR_H	cpp_src/stl_raw_storage_iter.h	62;"	d
_STL_RELOPS_H	5/bits/stl_relops.h	65;"	d
_STL_RELOPS_H	cpp_src/stl_relops.h	72;"	d
_STL_SET_H	5/bits/stl_set.h	57;"	d
_STL_STACK_H	5/bits/stl_stack.h	57;"	d
_STL_TEMPBUF_H	5/bits/stl_tempbuf.h	57;"	d
_STL_TREE_H	5/bits/stl_tree.h	59;"	d
_STL_UNINITIALIZED_H	5/bits/stl_uninitialized.h	57;"	d
_STL_UNINITIALIZED_H	cpp_src/stl_uninitialized.h	63;"	d
_STL_VECTOR_H	5/bits/stl_vector.h	57;"	d
_STREAMBUF_ITERATOR_H	5/bits/streambuf_iterator.h	31;"	d
_STREAMBUF_ITERATOR_H	cpp_src/streambuf_iterator.h	37;"	d
_STREAM_ITERATOR_H	5/bits/stream_iterator.h	31;"	d
_STREAM_ITERATOR_H	cpp_src/stream_iterator.h	36;"	d
_STRINGFWD_H	5/bits/stringfwd.h	35;"	d
_STRINGFWD_H	cpp_src/stringfwd.h	40;"	d
_STRING_CONVERSIONS_H	5/ext/string_conversions.h	30;"	d
_S_Is	5/debug/safe_iterator.h	/^	_S_Is(const _Safe_iterator<_Iterator, _Sequence>&)$/;"	f	struct:__gnu_debug::_BeforeBeginHelper
_S_Is_Beginnest	5/debug/safe_iterator.h	/^	_S_Is_Beginnest(const _Safe_iterator<_Iterator, _Sequence>& __it)$/;"	f	struct:__gnu_debug::_BeforeBeginHelper
_S_adjustfield	cpp_src/ios_base.h	/^      _S_adjustfield 	= _S_left | _S_right | _S_internal,$/;"	e	enum:std::_Ios_Fmtflags
_S_app	cpp_src/ios_base.h	/^      _S_app 		= 1L << 0,$/;"	e	enum:std::_Ios_Openmode
_S_ate	cpp_src/ios_base.h	/^      _S_ate 		= 1L << 1,$/;"	e	enum:std::_Ios_Openmode
_S_atoms	cpp_src/locale_facets.h	/^    static const char* _S_atoms;$/;"	m	class:std::money_base
_S_atoms_in	cpp_src/locale_facets.h	/^    static const char* _S_atoms_in;$/;"	m	class:std::__num_base
_S_atoms_out	cpp_src/locale_facets.h	/^    static const char* _S_atoms_out;$/;"	m	class:std::__num_base
_S_badbit	cpp_src/ios_base.h	/^      _S_badbit 		= 1L << 0,$/;"	e	enum:std::_Ios_Iostate
_S_basefield	cpp_src/ios_base.h	/^      _S_basefield 	= _S_dec | _S_oct | _S_hex,$/;"	e	enum:std::_Ios_Fmtflags
_S_beg	cpp_src/ios_base.h	/^      _S_beg = 0,$/;"	e	enum:std::_Ios_Seekdir
_S_bin	cpp_src/ios_base.h	/^      _S_bin 		= 1L << 2,$/;"	e	enum:std::_Ios_Openmode
_S_black	cpp_src/stl_tree.h	/^  enum _Rb_tree_color { _S_red = false, _S_black = true };$/;"	e	enum:std::_Rb_tree_color
_S_boolalpha	cpp_src/ios_base.h	/^      _S_boolalpha 	= 1L << 0,$/;"	e	enum:std::_Ios_Fmtflags
_S_buffer_size	cpp_src/stl_deque.h	/^      static size_t _S_buffer_size()$/;"	f	class:std::deque
_S_buffer_size	cpp_src/stl_deque.h	/^      static size_t _S_buffer_size()$/;"	f	struct:std::_Deque_iterator
_S_c_locale	cpp_src/locale_classes.h	/^    static __c_locale                   _S_c_locale;$/;"	m	class:std::locale::facet
_S_c_name	cpp_src/locale_classes.h	/^    static const char			_S_c_name[2];$/;"	m	class:std::locale::facet
_S_categories	cpp_src/locale_classes.h	/^    static const char* const* const _S_categories;$/;"	m	class:std::locale
_S_categories_size	cpp_src/locale_classes.h	/^    enum { _S_categories_size = 6 + _GLIBCXX_NUM_CATEGORIES };$/;"	e	enum:std::locale::__anon61
_S_chunk_size	cpp_src/stl_algo.h	/^  enum { _S_chunk_size = 7 };$/;"	e	enum:std::__anon54
_S_classic	cpp_src/locale_classes.h	/^    static _Impl*       _S_classic;$/;"	m	class:std::locale
_S_construct	cpp_src/basic_string.h	/^        _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a)$/;"	f	class:std::basic_string
_S_construct_aux	cpp_src/basic_string.h	/^        _S_construct_aux(_InIterator __beg, _InIterator __end,$/;"	f	class:std::basic_string
_S_copy_chars	cpp_src/basic_string.h	/^        _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)$/;"	f	class:std::basic_string
_S_copy_chars	cpp_src/basic_string.h	/^      _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2)$/;"	f	class:std::basic_string
_S_copy_chars	cpp_src/basic_string.h	/^      _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)$/;"	f	class:std::basic_string
_S_copy_chars	cpp_src/basic_string.h	/^      _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)$/;"	f	class:std::basic_string
_S_copy_chars	cpp_src/basic_string.h	/^      _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2)$/;"	f	class:std::basic_string
_S_cur	cpp_src/ios_base.h	/^      _S_cur = SEEK_CUR,$/;"	e	enum:std::_Ios_Seekdir
_S_dec	cpp_src/ios_base.h	/^      _S_dec 		= 1L << 1,$/;"	e	enum:std::_Ios_Fmtflags
_S_default_pattern	cpp_src/locale_facets.h	/^    static const pattern _S_default_pattern;$/;"	m	class:std::money_base
_S_do_it	cpp_src/allocator.h	/^      _S_do_it(_Alloc& __one, _Alloc& __two)$/;"	f	struct:std::__alloc_swap
_S_do_it	cpp_src/allocator.h	/^    { static void _S_do_it(_Alloc&, _Alloc&) { } };$/;"	f	struct:std::__alloc_swap
_S_do_it	cpp_src/valarray_array.h	/^      _S_do_it(_Tp* __restrict__ __b, _Tp* __restrict__ __e)$/;"	f	struct:std::_Array_default_ctor
_S_do_it	cpp_src/valarray_array.h	/^      _S_do_it(_Tp* __restrict__ __b, _Tp* __restrict__ __e,  const _Tp __t)$/;"	f	struct:std::_Array_init_ctor
_S_do_it	cpp_src/valarray_array.h	/^      _S_do_it(_Tp* __restrict__ __b, _Tp* __restrict__ __e, const _Tp __t)$/;"	f	struct:std::_Array_init_ctor
_S_do_it	cpp_src/valarray_array.h	/^      _S_do_it(const _Tp* __restrict__ __a, size_t __n, _Tp* __restrict__ __b)$/;"	f	struct:std::_Array_copier
_S_do_it	cpp_src/valarray_array.h	/^      _S_do_it(const _Tp* __restrict__ __b, const _Tp* __restrict__ __e,$/;"	f	struct:std::_Array_copy_ctor
_S_empty_rep	cpp_src/basic_string.h	/^        _S_empty_rep()$/;"	f	struct:std::basic_string::_Rep
_S_empty_rep	cpp_src/basic_string.h	/^      _S_empty_rep()$/;"	f	class:std::basic_string
_S_empty_rep_storage	cpp_src/basic_string.h	/^        static size_type _S_empty_rep_storage[];$/;"	m	struct:std::basic_string::_Rep
_S_end	cpp_src/ios_base.h	/^      _S_end = SEEK_END,$/;"	e	enum:std::_Ios_Seekdir
_S_end	cpp_src/locale_facets.h	/^      _S_end = 11$/;"	e	enum:std::money_base::__anon57
_S_eofbit	cpp_src/ios_base.h	/^      _S_eofbit 		= 1L << 1,$/;"	e	enum:std::_Ios_Iostate
_S_facet_categories	cpp_src/locale_classes.h	/^    static const locale::id* const* const _S_facet_categories[];$/;"	m	class:std::locale::_Impl::locale
_S_failbit	cpp_src/ios_base.h	/^      _S_failbit		= 1L << 2,$/;"	e	enum:std::_Ios_Iostate
_S_fixed	cpp_src/ios_base.h	/^      _S_fixed 		= 1L << 2,$/;"	e	enum:std::_Ios_Fmtflags
_S_floatfield	cpp_src/ios_base.h	/^      _S_floatfield 	= _S_scientific | _S_fixed,$/;"	e	enum:std::_Ios_Fmtflags
_S_global	cpp_src/locale_classes.h	/^    static _Impl*	_S_global;$/;"	m	class:std::locale
_S_goodbit	cpp_src/ios_base.h	/^      _S_goodbit 		= 0,$/;"	e	enum:std::_Ios_Iostate
_S_hex	cpp_src/ios_base.h	/^      _S_hex 		= 1L << 3,$/;"	e	enum:std::_Ios_Fmtflags
_S_iE	cpp_src/locale_facets.h	/^      _S_iE = _S_izero + 20,$/;"	e	enum:std::__num_base::__anon56
_S_iX	cpp_src/locale_facets.h	/^      _S_iX,$/;"	e	enum:std::__num_base::__anon56
_S_id_collate	cpp_src/locale_classes.h	/^    static const locale::id* const	_S_id_collate[];$/;"	m	class:std::locale::_Impl::locale
_S_id_ctype	cpp_src/locale_classes.h	/^    static const locale::id* const	_S_id_ctype[];$/;"	m	class:std::locale::_Impl::locale
_S_id_messages	cpp_src/locale_classes.h	/^    static const locale::id* const	_S_id_messages[];$/;"	m	class:std::locale::_Impl::locale
_S_id_monetary	cpp_src/locale_classes.h	/^    static const locale::id* const	_S_id_monetary[];$/;"	m	class:std::locale::_Impl::locale
_S_id_numeric	cpp_src/locale_classes.h	/^    static const locale::id* const	_S_id_numeric[];$/;"	m	class:std::locale::_Impl::locale
_S_id_time	cpp_src/locale_classes.h	/^    static const locale::id* const	_S_id_time[];$/;"	m	class:std::locale::_Impl::locale
_S_ie	cpp_src/locale_facets.h	/^      _S_ie = _S_izero + 14,$/;"	e	enum:std::__num_base::__anon56
_S_iend	cpp_src/locale_facets.h	/^      _S_iend = 26$/;"	e	enum:std::__num_base::__anon56
_S_iminus	cpp_src/locale_facets.h	/^      _S_iminus,$/;"	e	enum:std::__num_base::__anon56
_S_in	cpp_src/ios_base.h	/^      _S_in 		= 1L << 3,$/;"	e	enum:std::_Ios_Openmode
_S_initial_map_size	cpp_src/stl_deque.h	/^      enum { _S_initial_map_size = 8 };$/;"	e	enum:std::_Deque_base::__anon58
_S_internal	cpp_src/ios_base.h	/^      _S_internal 	= 1L << 4,$/;"	e	enum:std::_Ios_Fmtflags
_S_ios_fmtflags_end	cpp_src/ios_base.h	/^      _S_ios_fmtflags_end = 1L << 16 $/;"	e	enum:std::_Ios_Fmtflags
_S_ios_iostate_end	cpp_src/ios_base.h	/^      _S_ios_iostate_end = 1L << 16 $/;"	e	enum:std::_Ios_Iostate
_S_ios_openmode_end	cpp_src/ios_base.h	/^      _S_ios_openmode_end = 1L << 16 $/;"	e	enum:std::_Ios_Openmode
_S_ios_seekdir_end	cpp_src/ios_base.h	/^      _S_ios_seekdir_end = 1L << 16 $/;"	e	enum:std::_Ios_Seekdir
_S_iplus	cpp_src/locale_facets.h	/^      _S_iplus,$/;"	e	enum:std::__num_base::__anon56
_S_ix	cpp_src/locale_facets.h	/^      _S_ix,$/;"	e	enum:std::__num_base::__anon56
_S_izero	cpp_src/locale_facets.h	/^      _S_izero,$/;"	e	enum:std::__num_base::__anon56
_S_key	cpp_src/stl_tree.h	/^      _S_key(_Const_Base_ptr __x)$/;"	f	class:std::_Rb_tree
_S_key	cpp_src/stl_tree.h	/^      _S_key(_Const_Link_type __x)$/;"	f	class:std::_Rb_tree
_S_left	cpp_src/ios_base.h	/^      _S_left 		= 1L << 5,$/;"	e	enum:std::_Ios_Fmtflags
_S_left	cpp_src/stl_tree.h	/^      _S_left(_Base_ptr __x)$/;"	f	class:std::_Rb_tree
_S_left	cpp_src/stl_tree.h	/^      _S_left(_Const_Base_ptr __x)$/;"	f	class:std::_Rb_tree
_S_local_word_size	cpp_src/ios_base.h	/^    enum { _S_local_word_size = 8 };$/;"	e	enum:std::ios_base::__anon59
_S_max_size	cpp_src/basic_string.h	/^	static const size_type	_S_max_size;$/;"	m	struct:std::basic_string::_Rep
_S_maximum	cpp_src/stl_tree.h	/^      _S_maximum(_Base_ptr __x)$/;"	f	class:std::_Rb_tree
_S_maximum	cpp_src/stl_tree.h	/^      _S_maximum(_Const_Base_ptr __x)$/;"	f	class:std::_Rb_tree
_S_maximum	cpp_src/stl_tree.h	/^    _S_maximum(_Base_ptr __x)$/;"	f	struct:std::_Rb_tree_node_base
_S_maximum	cpp_src/stl_tree.h	/^    _S_maximum(_Const_Base_ptr __x)$/;"	f	struct:std::_Rb_tree_node_base
_S_minimum	cpp_src/stl_tree.h	/^      _S_minimum(_Base_ptr __x)$/;"	f	class:std::_Rb_tree
_S_minimum	cpp_src/stl_tree.h	/^      _S_minimum(_Const_Base_ptr __x)$/;"	f	class:std::_Rb_tree
_S_minimum	cpp_src/stl_tree.h	/^    _S_minimum(_Base_ptr __x)$/;"	f	struct:std::_Rb_tree_node_base
_S_minimum	cpp_src/stl_tree.h	/^    _S_minimum(_Const_Base_ptr __x)$/;"	f	struct:std::_Rb_tree_node_base
_S_minus	cpp_src/locale_facets.h	/^      _S_minus,$/;"	e	enum:std::money_base::__anon57
_S_oE	cpp_src/locale_facets.h	/^        _S_oE = _S_oudigits + 14, \/\/ For scientific notation, 'E'$/;"	e	enum:std::__num_base::__anon55
_S_oX	cpp_src/locale_facets.h	/^        _S_oX,$/;"	e	enum:std::__num_base::__anon55
_S_oct	cpp_src/ios_base.h	/^      _S_oct 		= 1L << 6,$/;"	e	enum:std::_Ios_Fmtflags
_S_odigits	cpp_src/locale_facets.h	/^        _S_odigits,$/;"	e	enum:std::__num_base::__anon55
_S_odigits_end	cpp_src/locale_facets.h	/^        _S_odigits_end = _S_odigits + 16,$/;"	e	enum:std::__num_base::__anon55
_S_oe	cpp_src/locale_facets.h	/^        _S_oe = _S_odigits + 14,  \/\/ For scientific notation, 'e'$/;"	e	enum:std::__num_base::__anon55
_S_oend	cpp_src/locale_facets.h	/^	_S_oend = _S_oudigits_end$/;"	e	enum:std::__num_base::__anon55
_S_ominus	cpp_src/locale_facets.h	/^        _S_ominus,$/;"	e	enum:std::__num_base::__anon55
_S_once	cpp_src/locale_classes.h	/^    static __gthread_once_t		_S_once;$/;"	m	class:std::locale::facet
_S_once	cpp_src/locale_classes.h	/^    static __gthread_once_t _S_once;$/;"	m	class:std::locale
_S_oplus	cpp_src/locale_facets.h	/^        _S_oplus,$/;"	e	enum:std::__num_base::__anon55
_S_oudigits	cpp_src/locale_facets.h	/^        _S_oudigits = _S_odigits_end,$/;"	e	enum:std::__num_base::__anon55
_S_oudigits_end	cpp_src/locale_facets.h	/^        _S_oudigits_end = _S_oudigits + 16,$/;"	e	enum:std::__num_base::__anon55
_S_out	cpp_src/ios_base.h	/^      _S_out 		= 1L << 4,$/;"	e	enum:std::_Ios_Openmode
_S_ox	cpp_src/locale_facets.h	/^        _S_ox,$/;"	e	enum:std::__num_base::__anon55
_S_red	cpp_src/stl_tree.h	/^  enum _Rb_tree_color { _S_red = false, _S_black = true };$/;"	e	enum:std::_Rb_tree_color
_S_refcount	cpp_src/ios_base.h	/^      static _Atomic_word	_S_refcount;$/;"	m	class:std::ios_base::Init
_S_refcount	cpp_src/locale_classes.h	/^    static _Atomic_word		_S_refcount;$/;"	m	class:std::locale::id
_S_rethrow	5/bits/nested_exception.h	/^      static void _S_rethrow(const _Tp& __t)$/;"	f	struct:std::_Rethrow_if_nested_impl
_S_rethrow	5/bits/nested_exception.h	/^      static void _S_rethrow(const _Tp&) { }$/;"	f	struct:std::_Rethrow_if_nested_impl
_S_right	cpp_src/ios_base.h	/^      _S_right 		= 1L << 7,$/;"	e	enum:std::_Ios_Fmtflags
_S_right	cpp_src/stl_tree.h	/^      _S_right(_Base_ptr __x)$/;"	f	class:std::_Rb_tree
_S_right	cpp_src/stl_tree.h	/^      _S_right(_Const_Base_ptr __x)$/;"	f	class:std::_Rb_tree
_S_scientific	cpp_src/ios_base.h	/^      _S_scientific 	= 1L << 8,$/;"	e	enum:std::_Ios_Fmtflags
_S_showbase	cpp_src/ios_base.h	/^      _S_showbase 	= 1L << 9,$/;"	e	enum:std::_Ios_Fmtflags
_S_showpoint	cpp_src/ios_base.h	/^      _S_showpoint 	= 1L << 10,$/;"	e	enum:std::_Ios_Fmtflags
_S_showpos	cpp_src/ios_base.h	/^      _S_showpos 	= 1L << 11,$/;"	e	enum:std::_Ios_Fmtflags
_S_skipws	cpp_src/ios_base.h	/^      _S_skipws 	= 1L << 12,$/;"	e	enum:std::_Ios_Fmtflags
_S_synced_with_stdio	cpp_src/ios_base.h	/^      static bool		_S_synced_with_stdio;$/;"	m	class:std::ios_base::Init
_S_terminal	cpp_src/basic_string.h	/^	static const _CharT	_S_terminal;$/;"	m	struct:std::basic_string::_Rep
_S_threshold	cpp_src/stl_algo.h	/^  enum { _S_threshold = 16 };$/;"	e	enum:std::__anon53
_S_throw	5/bits/nested_exception.h	/^	static void _S_throw(_Up&& __t)$/;"	f	struct:std::_Throw_with_nested_impl
_S_timezones	cpp_src/locale_facets.h	/^      static const _CharT*		_S_timezones[14];$/;"	m	struct:std::__timepunct_cache
_S_timezones	cpp_src/locale_facets.h	/^    __timepunct_cache<char>::_S_timezones[14];$/;"	m	class:std::__timepunct_cache
_S_timezones	cpp_src/locale_facets.h	/^    __timepunct_cache<wchar_t>::_S_timezones[14];$/;"	m	class:std::__timepunct_cache
_S_timezones	cpp_src/locale_facets.h	/^    const _CharT* __timepunct_cache<_CharT>::_S_timezones[14];$/;"	m	class:std::__timepunct_cache
_S_trunc	cpp_src/ios_base.h	/^      _S_trunc 		= 1L << 5,$/;"	e	enum:std::_Ios_Openmode
_S_unitbuf	cpp_src/ios_base.h	/^      _S_unitbuf 	= 1L << 13,$/;"	e	enum:std::_Ios_Fmtflags
_S_uppercase	cpp_src/ios_base.h	/^      _S_uppercase 	= 1L << 14,$/;"	e	enum:std::_Ios_Fmtflags
_S_value	cpp_src/stl_tree.h	/^      _S_value(_Const_Base_ptr __x)$/;"	f	class:std::_Rb_tree
_S_value	cpp_src/stl_tree.h	/^      _S_value(_Const_Link_type __x)$/;"	f	class:std::_Rb_tree
_S_word_bit	cpp_src/stl_bvector.h	/^  enum { _S_word_bit = int(CHAR_BIT * sizeof(_Bit_type)) };$/;"	e	enum:std::__anon60
_S_zero	cpp_src/locale_facets.h	/^      _S_zero,$/;"	e	enum:std::money_base::__anon57
_Safe_base	5/debug/safe_iterator.h	/^      : _Iter_base(__i), _Safe_base(__seq, _M_constant())$/;"	f	class:__gnu_debug::_Safe_iterator
_Safe_base	5/debug/safe_iterator.h	/^      typedef _Safe_iterator_base _Safe_base;$/;"	t	class:__gnu_debug::_Safe_iterator
_Safe_base	5/debug/safe_local_iterator.h	/^      typedef _Safe_local_iterator_base _Safe_base;$/;"	t	class:__gnu_debug::_Safe_local_iterator
_Safe_container	5/debug/safe_container.h	/^      : _Safe_container()$/;"	f	class:__gnu_debug::_Safe_container
_Safe_container	5/debug/safe_container.h	/^      _Safe_container(_Safe_container&& __x,$/;"	f	class:__gnu_debug::_Safe_container
_Safe_container	5/debug/safe_container.h	/^    class _Safe_container$/;"	c	namespace:__gnu_debug
_Safe_iterator	5/debug/safe_iterator.h	/^    class _Safe_iterator$/;"	c	namespace:__gnu_debug
_Safe_iterator_base	5/debug/safe_base.h	/^    _Safe_iterator_base()$/;"	f	class:__gnu_debug::_Safe_iterator_base
_Safe_iterator_base	5/debug/safe_base.h	/^    _Safe_iterator_base(const _Safe_iterator_base& __x, bool __constant)$/;"	f	class:__gnu_debug::_Safe_iterator_base
_Safe_iterator_base	5/debug/safe_base.h	/^    _Safe_iterator_base(const _Safe_sequence_base* __seq, bool __constant)$/;"	f	class:__gnu_debug::_Safe_iterator_base
_Safe_iterator_base	5/debug/safe_base.h	/^  class _Safe_iterator_base$/;"	c	namespace:__gnu_debug
_Safe_local_iterator	5/debug/safe_local_iterator.h	/^	_Safe_local_iterator($/;"	f	class:__gnu_debug::_Safe_local_iterator
_Safe_local_iterator	5/debug/safe_local_iterator.h	/^      _Safe_local_iterator(const _Iterator& __i,$/;"	f	class:__gnu_debug::_Safe_local_iterator
_Safe_local_iterator	5/debug/safe_local_iterator.h	/^    class _Safe_local_iterator$/;"	c	namespace:__gnu_debug
_Safe_local_iterator_base	5/debug/safe_unordered_base.h	/^    _Safe_local_iterator_base()$/;"	f	class:__gnu_debug::_Safe_local_iterator_base
_Safe_local_iterator_base	5/debug/safe_unordered_base.h	/^    _Safe_local_iterator_base(const _Safe_local_iterator_base& __x,$/;"	f	class:__gnu_debug::_Safe_local_iterator_base
_Safe_local_iterator_base	5/debug/safe_unordered_base.h	/^    _Safe_local_iterator_base(const _Safe_sequence_base* __seq, bool __constant)$/;"	f	class:__gnu_debug::_Safe_local_iterator_base
_Safe_local_iterator_base	5/debug/safe_unordered_base.h	/^  class _Safe_local_iterator_base : public _Safe_iterator_base$/;"	c	namespace:__gnu_debug
_Safe_node_sequence	5/debug/safe_sequence.h	/^    class _Safe_node_sequence$/;"	c	namespace:__gnu_debug
_Safe_sequence	5/debug/safe_sequence.h	/^    class _Safe_sequence : public _Safe_sequence_base$/;"	c	namespace:__gnu_debug
_Safe_sequence_base	5/debug/safe_base.h	/^    : _Safe_sequence_base() { }$/;"	f	class:__gnu_debug::_Safe_sequence_base
_Safe_sequence_base	5/debug/safe_base.h	/^  class _Safe_sequence_base$/;"	c	namespace:__gnu_debug
_Safe_unordered_container	5/debug/safe_unordered_container.h	/^    class _Safe_unordered_container : public _Safe_unordered_container_base$/;"	c	namespace:__gnu_debug
_Safe_unordered_container_base	5/debug/safe_unordered_base.h	/^    : _Safe_unordered_container_base() { }$/;"	f	class:__gnu_debug::_Safe_unordered_container_base
_Safe_unordered_container_base	5/debug/safe_unordered_base.h	/^    : _Safe_unordered_container_base()$/;"	f	class:__gnu_debug::_Safe_unordered_container_base
_Safe_unordered_container_base	5/debug/safe_unordered_base.h	/^  class _Safe_unordered_container_base : public _Safe_sequence_base$/;"	c	namespace:__gnu_debug
_SameTypeConcept	cpp_src/boost_concept_check.h	/^  struct _SameTypeConcept$/;"	s
_SamplingSorter	5/parallel/multiway_merge.h	/^    struct _SamplingSorter$/;"	s	namespace:__gnu_parallel
_SamplingSorter	5/parallel/multiway_merge.h	/^    struct _SamplingSorter<false, _RAIter, _StrictWeakOrdering>$/;"	s	namespace:__gnu_parallel
_Select1st	cpp_src/stl_function.h	/^    struct _Select1st : public unary_function<_Pair,$/;"	s	namespace:std
_Select2nd	cpp_src/stl_function.h	/^    struct _Select2nd : public unary_function<_Pair,$/;"	s	namespace:std
_Self	cpp_src/stl_deque.h	/^      typedef _Deque_iterator                 _Self;$/;"	t	struct:std::_Deque_iterator
_Self	cpp_src/stl_list.h	/^      typedef _List_const_iterator<_Tp>          _Self;$/;"	t	struct:std::_List_const_iterator
_Self	cpp_src/stl_list.h	/^      typedef _List_iterator<_Tp>                _Self;$/;"	t	struct:std::_List_iterator
_Self	cpp_src/stl_tree.h	/^      typedef _Rb_tree_const_iterator<_Tp>        _Self;$/;"	t	struct:std::_Rb_tree_const_iterator
_Self	cpp_src/stl_tree.h	/^      typedef _Rb_tree_iterator<_Tp>        _Self;$/;"	t	struct:std::_Rb_tree_iterator
_SequenceConcept	cpp_src/boost_concept_check.h	/^  struct _SequenceConcept$/;"	s
_SequenceIndex	5/parallel/types.h	/^  typedef uint64_t _SequenceIndex;$/;"	t	namespace:__gnu_parallel
_Sequence_value_type	cpp_src/stl_queue.h	/^      typedef typename _Sequence::value_type _Sequence_value_type;$/;"	t	class:std::priority_queue
_Sequence_value_type	cpp_src/stl_queue.h	/^      typedef typename _Sequence::value_type _Sequence_value_type;$/;"	t	class:std::queue
_Sequence_value_type	cpp_src/stl_stack.h	/^      typedef typename _Sequence::value_type _Sequence_value_type;$/;"	t	class:std::stack
_Settings	5/parallel/settings.h	/^    _Settings() :$/;"	f	struct:__gnu_parallel::_Settings
_Settings	5/parallel/settings.h	/^  struct _Settings$/;"	s	namespace:__gnu_parallel
_SignedIntegerConcept	cpp_src/boost_concept_check.h	/^  struct _SignedIntegerConcept {$/;"	s
_SignedIntegerConcept	cpp_src/boost_concept_check.h	/^  template <> struct _SignedIntegerConcept<int> { void __constraints() {} };$/;"	s
_SignedIntegerConcept	cpp_src/boost_concept_check.h	/^  template <> struct _SignedIntegerConcept<long long> { void __constraints(){}};$/;"	s
_SignedIntegerConcept	cpp_src/boost_concept_check.h	/^  template <> struct _SignedIntegerConcept<long> { void __constraints() {} };$/;"	s
_SignedIntegerConcept	cpp_src/boost_concept_check.h	/^  template <> struct _SignedIntegerConcept<short> { void __constraints() {} };$/;"	s
_SimpleAssociativeContainerConcept	cpp_src/boost_concept_check.h	/^  struct _SimpleAssociativeContainerConcept$/;"	s
_Siter_base	5/debug/functions.h	/^    struct _Siter_base$/;"	s	namespace:__gnu_debug
_Size_type	cpp_src/boost_concept_check.h	/^    typedef typename _Container::size_type _Size_type;$/;"	t	struct:_ContainerConcept
_Size_type	cpp_src/boost_concept_check.h	/^    typedef typename _RandomAccessContainer::size_type _Size_type;$/;"	t	struct:_Mutable_RandomAccessContainerConcept
_Size_type	cpp_src/boost_concept_check.h	/^    typedef typename _RandomAccessContainer::size_type _Size_type;$/;"	t	struct:_RandomAccessContainerConcept
_SortAlgorithm	5/parallel/types.h	/^  enum _SortAlgorithm $/;"	g	namespace:__gnu_parallel
_SortedAssociativeContainerConcept	cpp_src/boost_concept_check.h	/^  struct _SortedAssociativeContainerConcept$/;"	s
_SplitConsistently	5/parallel/multiway_mergesort.h	/^    struct _SplitConsistently$/;"	s	namespace:__gnu_parallel
_SplitConsistently	5/parallel/multiway_mergesort.h	/^    struct _SplitConsistently<false, _RAIter, _Compare, _SortingPlacesIterator>$/;"	s	namespace:__gnu_parallel
_SplitConsistently	5/parallel/multiway_mergesort.h	/^    struct _SplitConsistently<true, _RAIter, _Compare, _SortingPlacesIterator>$/;"	s	namespace:__gnu_parallel
_SplittingAlgorithm	5/parallel/types.h	/^  enum _SplittingAlgorithm $/;"	g	namespace:__gnu_parallel
_TEMPBUF_H	cpp_src/stl_tempbuf.h	63;"	d
_THROW_ALLOCATOR_H	5/ext/throw_allocator.h	47;"	d
_TR1_CTYPE_H	5/tr1/ctype.h	30;"	d
_TR1_FENV_H	5/tr1/fenv.h	30;"	d
_TR1_FLOAT_H	5/tr1/float.h	30;"	d
_TR1_LIMITS_H	5/tr1/limits.h	30;"	d
_TR1_SHARED_PTR_H	5/tr1/shared_ptr.h	50;"	d
_TR1_STDARG_H	5/tr1/stdarg.h	30;"	d
_TR1_STDBOOL_H	5/tr1/stdbool.h	30;"	d
_TR1_STDINT_H	5/tr1/stdint.h	30;"	d
_TR1_STDIO_H	5/tr1/stdio.h	30;"	d
_TR1_hashtable_define_trivial_hash	5/tr1/functional_hash.h	61;"	d
_TR1_hashtable_define_trivial_hash	5/tr1/functional_hash.h	81;"	d
_TREE_H	cpp_src/stl_tree.h	65;"	d
_TYPELIST_H	5/ext/typelist.h	44;"	d
_Temporary_buffer	cpp_src/stl_tempbuf.h	/^    _Temporary_buffer(_ForwardIterator __first, _ForwardIterator __last)$/;"	f	class:std::_Temporary_buffer
_Temporary_buffer	cpp_src/stl_tempbuf.h	/^    class _Temporary_buffer$/;"	c	namespace:std
_ThreadIndex	5/parallel/types.h	/^  typedef uint16_t _ThreadIndex;$/;"	t	namespace:__gnu_parallel
_Throw_with_nested_helper	5/bits/nested_exception.h	/^    struct _Throw_with_nested_helper : _Throw_with_nested_impl<_Tp>$/;"	s	namespace:std
_Throw_with_nested_helper	5/bits/nested_exception.h	/^    struct _Throw_with_nested_helper<_Tp&&, false>$/;"	s	namespace:std
_Throw_with_nested_helper	5/bits/nested_exception.h	/^    struct _Throw_with_nested_helper<_Tp&, false>$/;"	s	namespace:std
_Throw_with_nested_helper	5/bits/nested_exception.h	/^    struct _Throw_with_nested_helper<_Tp, false>$/;"	s	namespace:std
_Throw_with_nested_impl	5/bits/nested_exception.h	/^    struct _Throw_with_nested_impl$/;"	s	namespace:std
_Throw_with_nested_impl	5/bits/nested_exception.h	/^    struct _Throw_with_nested_impl<_Tp, false>$/;"	s	namespace:std
_Tp	cpp_src/valarray_before.h	/^      typedef typename _Dom::value_type _Tp;$/;"	t	struct:std::_BinClos
_Tp	cpp_src/valarray_before.h	/^      typedef value_type _Tp;$/;"	t	struct:std::_RefFunClos
_Tp	cpp_src/valarray_before.h	/^      typedef value_type _Tp;$/;"	t	struct:std::_ValFunClos
_Tp2	5/ext/aligned_buffer.h	/^      struct _Tp2 { _Tp _M_t; };$/;"	s	struct:__gnu_cxx::__aligned_membuf
_Tp_alloc_type	cpp_src/stl_deque.h	/^      typedef typename _Alloc::template rebind<_Tp>::other  _Tp_alloc_type;$/;"	t	class:std::_Deque_base
_Tp_alloc_type	cpp_src/stl_deque.h	/^      typedef typename _Base::_Tp_alloc_type	 _Tp_alloc_type;$/;"	t	class:std::deque
_Tp_alloc_type	cpp_src/stl_list.h	/^      typedef typename _Alloc::template rebind<_Tp>::other _Tp_alloc_type;$/;"	t	class:std::_List_base
_Tp_alloc_type	cpp_src/stl_list.h	/^      typedef typename _Base::_Tp_alloc_type		 _Tp_alloc_type;$/;"	t	class:std::list
_Tp_alloc_type	cpp_src/stl_vector.h	/^      typedef typename _Alloc::template rebind<_Tp>::other _Tp_alloc_type;$/;"	t	struct:std::_Vector_base
_Tp_alloc_type	cpp_src/stl_vector.h	/^      typedef typename _Base::_Tp_alloc_type		 _Tp_alloc_type;$/;"	t	class:std::vector
_Traits	5/debug/safe_iterator.h	/^      typedef std::iterator_traits<_Iterator> _Traits;$/;"	t	class:__gnu_debug::_Safe_iterator
_Traits	5/debug/safe_local_iterator.h	/^      typedef std::iterator_traits<_Iterator> _Traits;$/;"	t	class:__gnu_debug::_Safe_local_iterator
_TraitsType	5/parallel/balanced_quicksort.h	/^      typedef std::iterator_traits<_RAIter> _TraitsType;$/;"	t	struct:__gnu_parallel::_QSBThreadLocal
_TraitsType	5/parallel/iterator.h	/^      typedef std::iterator_traits<_Iterator1> _TraitsType;$/;"	t	class:__gnu_parallel::_IteratorPair
_TraitsType	5/parallel/multiway_mergesort.h	/^      typedef std::iterator_traits<_RAIter> _TraitsType;$/;"	t	struct:__gnu_parallel::_PMWMSSortingData
_TraitsType	5/parallel/random_shuffle.h	/^      typedef std::iterator_traits<_RAIter> _TraitsType;$/;"	t	struct:__gnu_parallel::_DRandomShufflingGlobalData
_TraitsType	5/parallel/set_operations.h	/^      typedef std::iterator_traits<_IIter> _TraitsType;$/;"	t	struct:__gnu_parallel::__difference_func
_TraitsType	5/parallel/set_operations.h	/^      typedef std::iterator_traits<_IIter> _TraitsType;$/;"	t	struct:__gnu_parallel::__intersection_func
_TraitsType	5/parallel/set_operations.h	/^      typedef std::iterator_traits<_IIter> _TraitsType;$/;"	t	struct:__gnu_parallel::__symmetric_difference_func
_TrivialIteratorConcept	cpp_src/boost_concept_check.h	/^  struct _TrivialIteratorConcept$/;"	s
_Type	cpp_src/boost_concept_check.h	/^struct _Aux_require_same<_Tp,_Tp> { typedef _Tp _Type; };$/;"	t	struct:_Aux_require_same
_UNDEF__STDC_CONSTANT_MACROS	5/bits/postypes.h	53;"	d
_UNDEF__STDC_CONSTANT_MACROS	5/bits/postypes.h	63;"	d
_UNDEF__STDC_LIMIT_MACROS	5/bits/postypes.h	49;"	d
_UNDEF__STDC_LIMIT_MACROS	5/bits/postypes.h	59;"	d
_UNIQUE_PTR_H	5/bits/unique_ptr.h	31;"	d
_UNORDERED_MAP_H	5/bits/unordered_map.h	31;"	d
_UNORDERED_SET_H	5/bits/unordered_set.h	31;"	d
_USES_ALLOCATOR_H	5/bits/uses_allocator.h	26;"	d
_UnBase	cpp_src/valarray_before.h	/^      _UnBase(const _Arg& __e) : _M_expr(__e) {}$/;"	f	class:std::_UnBase
_UnBase	cpp_src/valarray_before.h	/^    class _UnBase$/;"	c	namespace:std
_UnClos	cpp_src/valarray_before.h	/^      _UnClos(const _Arg& __e) : _Base(__e) {}$/;"	f	struct:std::_UnClos
_UnClos	cpp_src/valarray_before.h	/^    struct _UnClos<_Oper, _Expr, _Dom>$/;"	s	namespace:std
_UnClos	cpp_src/valarray_before.h	/^    struct _UnClos<_Oper, _ValArray, _Tp>$/;"	s	namespace:std
_UnaryFunctionConcept	cpp_src/boost_concept_check.h	/^  struct _UnaryFunctionConcept$/;"	s
_UnaryFunctionConcept	cpp_src/boost_concept_check.h	/^  struct _UnaryFunctionConcept<_Func, void, _Arg> {$/;"	s
_UnaryPredicateConcept	cpp_src/boost_concept_check.h	/^  struct _UnaryPredicateConcept$/;"	s
_UnguardedIterator	5/parallel/multiway_merge.h	/^      _UnguardedIterator(_RAIter __begin,$/;"	f	class:__gnu_parallel::_UnguardedIterator
_UnguardedIterator	5/parallel/multiway_merge.h	/^    class _UnguardedIterator$/;"	c	namespace:__gnu_parallel
_UniqueAssociativeContainerConcept	cpp_src/boost_concept_check.h	/^  struct _UniqueAssociativeContainerConcept$/;"	s
_UnsignedIntegerConcept	cpp_src/boost_concept_check.h	/^  struct _UnsignedIntegerConcept {$/;"	s
_UnsignedIntegerConcept	cpp_src/boost_concept_check.h	/^  template <> struct _UnsignedIntegerConcept<unsigned int>$/;"	s
_UnsignedIntegerConcept	cpp_src/boost_concept_check.h	/^  template <> struct _UnsignedIntegerConcept<unsigned long long>$/;"	s
_UnsignedIntegerConcept	cpp_src/boost_concept_check.h	/^  template <> struct _UnsignedIntegerConcept<unsigned long>$/;"	s
_UnsignedIntegerConcept	cpp_src/boost_concept_check.h	/^  template <> struct _UnsignedIntegerConcept<unsigned short>$/;"	s
_VALARRAY_AFTER_H	5/bits/valarray_after.h	33;"	d
_VALARRAY_AFTER_H	cpp_src/valarray_after.h	39;"	d
_VALARRAY_ARRAY_H	5/bits/valarray_array.h	33;"	d
_VALARRAY_ARRAY_H	cpp_src/valarray_array.h	39;"	d
_VALARRAY_BEFORE_H	5/bits/valarray_before.h	33;"	d
_VALARRAY_BEFORE_H	cpp_src/valarray_before.h	39;"	d
_VECTOR_H	cpp_src/stl_vector.h	63;"	d
_VSTRING_FWD_H	5/ext/vstring_fwd.h	31;"	d
_VSTRING_H	5/ext/vstring.h	30;"	d
_VSTRING_UTIL_H	5/ext/vstring_util.h	31;"	d
_ValFunClos	cpp_src/valarray_before.h	/^      _ValFunClos(const _Dom& __e, _Tp __f(_Tp)) : _Base(__e, __f) {}$/;"	f	struct:std::_ValFunClos
_ValFunClos	cpp_src/valarray_before.h	/^      _ValFunClos(const valarray<_Tp>& __v, _Tp __f(_Tp)) : _Base(__v, __f) {}$/;"	f	struct:std::_ValFunClos
_ValFunClos	cpp_src/valarray_before.h	/^    struct _ValFunClos<_Expr,_Dom> : _FunBase<_Dom, typename _Dom::value_type>$/;"	s	namespace:std
_ValFunClos	cpp_src/valarray_before.h	/^    struct _ValFunClos<_ValArray,_Tp> : _FunBase<valarray<_Tp>, _Tp>$/;"	s	namespace:std
_Val_comp_iter	5/bits/predefined_ops.h	/^      _Val_comp_iter(_Compare __comp)$/;"	f	struct:__gnu_cxx::__ops::_Val_comp_iter
_Val_comp_iter	5/bits/predefined_ops.h	/^    struct _Val_comp_iter$/;"	s	namespace:__gnu_cxx::__ops
_Val_less_iter	5/bits/predefined_ops.h	/^  struct _Val_less_iter$/;"	s	namespace:__gnu_cxx::__ops
_ValueType	5/parallel/multiway_mergesort.h	/^      typedef typename _TraitsType::value_type _ValueType;$/;"	t	struct:__gnu_parallel::_PMWMSSortingData
_ValueType	5/parallel/random_shuffle.h	/^      typedef typename _TraitsType::value_type _ValueType;$/;"	t	struct:__gnu_parallel::_DRandomShufflingGlobalData
_Value_type	cpp_src/boost_concept_check.h	/^    typedef typename _Container::value_type _Value_type;$/;"	t	struct:_ContainerConcept
_Value_type	cpp_src/boost_concept_check.h	/^    typedef typename _Container::value_type _Value_type;$/;"	t	struct:_Mutable_ContainerConcept
_Vector_base	cpp_src/stl_vector.h	/^      _Vector_base(const allocator_type& __a)$/;"	f	struct:std::_Vector_base
_Vector_base	cpp_src/stl_vector.h	/^      _Vector_base(size_t __n, const allocator_type& __a)$/;"	f	struct:std::_Vector_base
_Vector_base	cpp_src/stl_vector.h	/^    struct _Vector_base$/;"	s	namespace:std
_Vector_impl	cpp_src/stl_vector.h	/^	_Vector_impl(_Tp_alloc_type const& __a)$/;"	f	struct:std::_Vector_base::_Vector_impl
_Vector_impl	cpp_src/stl_vector.h	/^      struct _Vector_impl $/;"	s	struct:std::_Vector_base
_Vt	cpp_src/valarray_before.h	/^      typedef typename _Arg::value_type _Vt;$/;"	t	class:std::_UnBase
_Vt	cpp_src/valarray_before.h	/^      typedef typename _Clos::value_type _Vt;$/;"	t	class:std::_BinBase1
_Vt	cpp_src/valarray_before.h	/^      typedef typename _Clos::value_type _Vt;$/;"	t	class:std::_BinBase2
_Vt	cpp_src/valarray_before.h	/^      typedef typename _FirstArg::value_type _Vt;$/;"	t	class:std::_BinBase
_Words	cpp_src/ios_base.h	/^      _Words() : _M_pword(0), _M_iword(0) { }$/;"	f	struct:std::ios_base::_Words
_Words	cpp_src/ios_base.h	/^    struct _Words$/;"	s	class:std::ios_base
__CVMSVCLOC__	opencv/cv.h	50;"	d
__CVSTR1__	opencv/cv.h	49;"	d
__CVSTR2__	opencv/cv.h	48;"	d
__CV_BEGIN__	opencv2/core/core_c.h	2757;"	d
__CV_CUDA_HOST_DEVICE__	opencv2/core/cuda_types.hpp	57;"	d
__CV_CUDA_HOST_DEVICE__	opencv2/core/cuda_types.hpp	59;"	d
__CV_END__	opencv2/core/core_c.h	2758;"	d
__CV_EXIT__	opencv2/core/core_c.h	2759;"	d
__INT_N	5/bits/cpp_type_traits.h	255;"	d
__INT_N	5/bits/cpp_type_traits.h	282;"	d
__INVALID	5/profile/impl/profiler_state.h	/^  enum __state_type { __ON, __OFF, __INVALID };$/;"	e	enum:__gnu_profile::__state_type
__OFF	5/profile/impl/profiler_state.h	/^  enum __state_type { __ON, __OFF, __INVALID };$/;"	e	enum:__gnu_profile::__state_type
__ON	5/profile/impl/profiler_state.h	/^  enum __state_type { __ON, __OFF, __INVALID };$/;"	e	enum:__gnu_profile::__state_type
__S	5/parallel/multiseq_selection.h	200;"	d
__S	5/parallel/multiseq_selection.h	451;"	d
__S	5/parallel/multiseq_selection.h	642;"	d
__STDC_CONSTANT_MACROS	5/bits/postypes.h	54;"	d
__STDC_CONSTANT_MACROS	5/bits/postypes.h	62;"	d
__STDC_LIMIT_MACROS	5/bits/postypes.h	50;"	d
__STDC_LIMIT_MACROS	5/bits/postypes.h	58;"	d
__UMAT_USAGE_FLAGS_32BIT	opencv2/core/mat.hpp	/^    __UMAT_USAGE_FLAGS_32BIT = 0x7fffffff \/\/ Binary compatibility hint$/;"	e	enum:cv::UMatUsageFlags
__a	cpp_src/boost_concept_check.h	/^    _First __a;$/;"	m	struct:_BinaryPredicateConcept
__a	cpp_src/boost_concept_check.h	/^    _First __a;$/;"	m	struct:_Const_BinaryPredicateConcept
__a	cpp_src/boost_concept_check.h	/^    _Tp __a, __b;$/;"	m	struct:_ComparableConcept
__a	cpp_src/boost_concept_check.h	/^    _Tp __a, __b;$/;"	m	struct:_EqualityComparableConcept
__a	cpp_src/boost_concept_check.h	/^    _Tp __a, __b;$/;"	m	struct:_LessThanComparableConcept
__a	cpp_src/boost_concept_check.h	/^    _Tp __a, __b;$/;"	m	struct:_RandomAccessIteratorConcept
__a	cpp_src/boost_concept_check.h	/^    _Tp __a;$/;"	m	struct:_AssignableConcept
__a	cpp_src/boost_concept_check.h	/^    _Tp __a;$/;"	m	struct:_SGIAssignableConcept
__abs	cpp_src/valarray_before.h	/^  struct __abs$/;"	s	namespace:std
__accumulate_binop_reduct	5/parallel/for_each_selectors.h	/^      __accumulate_binop_reduct(_BinOp& __b) : __binop(__b) { }$/;"	f	struct:__gnu_parallel::__accumulate_binop_reduct
__accumulate_binop_reduct	5/parallel/for_each_selectors.h	/^    struct __accumulate_binop_reduct$/;"	s	namespace:__gnu_parallel
__accumulate_selector	5/parallel/for_each_selectors.h	/^    struct __accumulate_selector : public __generic_for_each_selector<_It>$/;"	s	namespace:__gnu_parallel
__acos	cpp_src/valarray_before.h	/^  struct __acos$/;"	s	namespace:std
__add_object	5/profile/impl/profiler_trace.h	/^    __add_object(__stack_t __stack)$/;"	f	class:__gnu_profile::__trace_base
__add_omp	5/parallel/compatibility.h	/^    __add_omp(volatile _Tp* __ptr, _Tp __addend)$/;"	f	namespace:__gnu_parallel
__adjacent_difference_selector	5/parallel/for_each_selectors.h	/^    struct __adjacent_difference_selector$/;"	s	namespace:__gnu_parallel
__adjacent_find_selector	5/parallel/find_selectors.h	/^  struct __adjacent_find_selector : public __generic_find_selector$/;"	s	namespace:__gnu_parallel
__adjust_heap	cpp_src/stl_heap.h	/^    __adjust_heap(_RandomAccessIterator __first, _Distance __holeIndex,$/;"	f	namespace:std
__advance	cpp_src/stl_iterator_base_funcs.h	/^    __advance(_BidirectionalIterator& __i, _Distance __n,$/;"	f	namespace:std
__advance	cpp_src/stl_iterator_base_funcs.h	/^    __advance(_InputIterator& __i, _Distance __n, input_iterator_tag)$/;"	f	namespace:std
__advance	cpp_src/stl_iterator_base_funcs.h	/^    __advance(_RandomAccessIterator& __i, _Distance __n,$/;"	f	namespace:std
__advice	5/profile/impl/profiler_container_size.h	/^    __advice() const$/;"	f	class:__gnu_profile::__container_size_info
__advice	5/profile/impl/profiler_hash_func.h	/^    __advice() const$/;"	f	class:__gnu_profile::__hashfunc_info
__advice	5/profile/impl/profiler_list_to_slist.h	/^    __advice() const$/;"	f	class:__gnu_profile::__list2slist_info
__advice	5/profile/impl/profiler_list_to_vector.h	/^    __advice() const$/;"	f	class:__gnu_profile::__list2vector_info
__advice	5/profile/impl/profiler_map_to_unordered_map.h	/^    __advice() const$/;"	f	class:__gnu_profile::__map2umap_info
__advice	5/profile/impl/profiler_vector_to_list.h	/^    __advice() const $/;"	f	class:__gnu_profile::__vector2list_info
__align__	opencv2/cudalegacy/NCV.hpp	104;"	d
__aligned_buffer	5/ext/aligned_buffer.h	/^      __aligned_buffer(std::nullptr_t) { }$/;"	f	struct:__gnu_cxx::__aligned_buffer
__aligned_buffer	5/ext/aligned_buffer.h	/^    struct __aligned_buffer$/;"	s	namespace:__gnu_cxx
__aligned_membuf	5/ext/aligned_buffer.h	/^      __aligned_membuf(std::nullptr_t) { }$/;"	f	struct:__gnu_cxx::__aligned_membuf
__aligned_membuf	5/ext/aligned_buffer.h	/^    struct __aligned_membuf$/;"	s	namespace:__gnu_cxx
__alloc_swap	cpp_src/allocator.h	/^    struct __alloc_swap$/;"	s	namespace:std
__alloc_swap	cpp_src/allocator.h	/^    struct __alloc_swap<_Alloc, false>$/;"	s	namespace:std
__allocator_base	5/bits/allocator.h	160;"	d
__arg	cpp_src/boost_concept_check.h	/^    _Arg __arg;$/;"	m	struct:_UnaryFunctionConcept
__arg	cpp_src/boost_concept_check.h	/^    _Arg __arg;$/;"	m	struct:_UnaryPredicateConcept
__array_type_info	5/cxxabi.h	/^    __array_type_info(const char* __n) : std::type_info(__n) { }$/;"	f	class:__cxxabiv1::__array_type_info
__array_type_info	5/cxxabi.h	/^  class __array_type_info : public std::type_info$/;"	c	namespace:__cxxabiv1
__asin	cpp_src/valarray_before.h	/^  struct __asin$/;"	s	namespace:std
__atan	cpp_src/valarray_before.h	/^  struct __atan$/;"	s	namespace:std
__atan2	cpp_src/valarray_before.h	/^  struct __atan2$/;"	s	namespace:std
__aux_require_boolean_expr	cpp_src/boost_concept_check.h	/^  void __aux_require_boolean_expr(const _Tp& __t) {$/;"	f
__b	cpp_src/boost_concept_check.h	/^    _Second __b;$/;"	m	struct:_BinaryPredicateConcept
__b	cpp_src/boost_concept_check.h	/^    _Second __b;$/;"	m	struct:_Const_BinaryPredicateConcept
__b	cpp_src/boost_concept_check.h	/^    _Tp __a, __b;$/;"	m	struct:_ComparableConcept
__b	cpp_src/boost_concept_check.h	/^    _Tp __a, __b;$/;"	m	struct:_EqualityComparableConcept
__b	cpp_src/boost_concept_check.h	/^    _Tp __a, __b;$/;"	m	struct:_LessThanComparableConcept
__b	cpp_src/boost_concept_check.h	/^    _Tp __a, __b;$/;"	m	struct:_RandomAccessIteratorConcept
__b	cpp_src/boost_concept_check.h	/^    _Tp __b;$/;"	m	struct:_CopyConstructibleConcept
__b	cpp_src/boost_concept_check.h	/^    bool __b;$/;"	m	struct:_ContainerConcept
__base	5/debug/functions.h	/^    __base(_Iterator __it)$/;"	f	namespace:__gnu_debug
__base_class_type_info	5/cxxabi.h	/^  class __base_class_type_info$/;"	c	namespace:__cxxabiv1
__base_count	5/cxxabi.h	/^    unsigned int 		__base_count;  \/\/ Number of direct bases.$/;"	m	class:__cxxabiv1::__vmi_class_type_info
__base_info	5/cxxabi.h	/^    __base_class_type_info 	__base_info[1];  \/\/ Array of bases.$/;"	m	class:__cxxabiv1::__vmi_class_type_info
__base_type	5/cxxabi.h	/^    const __class_type_info* 	__base_type;  \/\/ Base class type.$/;"	m	class:__cxxabiv1::__base_class_type_info
__base_type	5/cxxabi.h	/^    const __class_type_info* __base_type;$/;"	m	class:__cxxabiv1::__si_class_type_info
__before_begin	5/debug/formatter.h	/^      __before_begin,  \/\/ before begin$/;"	e	enum:__gnu_debug::_Error_formatter::_Iterator_state
__begin	5/debug/formatter.h	/^      __begin,         \/\/ dereferenceable, and at the beginning$/;"	e	enum:__gnu_debug::_Error_formatter::_Iterator_state
__begin1_iterator	5/parallel/for_each_selectors.h	/^      _It  __begin1_iterator;$/;"	m	struct:__gnu_parallel::__inner_product_selector
__begin2_iterator	5/parallel/for_each_selectors.h	/^      _It2 __begin2_iterator;$/;"	m	struct:__gnu_parallel::__inner_product_selector
__binder1st	5/parallel/base.h	/^      __binder1st(const _Operation& __x, const _FirstArgumentType& __y)$/;"	f	class:__gnu_parallel::__binder1st
__binder1st	5/parallel/base.h	/^    class __binder1st$/;"	c	namespace:__gnu_parallel
__binder2nd	5/parallel/base.h	/^      __binder2nd(const _Operation& __x, const _SecondArgumentType& __y)$/;"	f	class:__gnu_parallel::__binder2nd
__binder2nd	5/parallel/base.h	/^    class __binder2nd$/;"	c	namespace:__gnu_parallel
__binop	5/parallel/for_each_selectors.h	/^      _BinOp& __binop;$/;"	m	struct:__gnu_parallel::__accumulate_binop_reduct
__bins_end	5/parallel/random_shuffle.h	/^      _BinIndex __bins_end;$/;"	m	struct:__gnu_parallel::_DRSSorterPU
__bits_left	5/parallel/random_number.h	/^    int __bits_left;$/;"	m	class:__gnu_parallel::_RandomNumber
__bitwise_and	cpp_src/valarray_before.h	/^  struct __bitwise_and$/;"	s	namespace:std
__bitwise_not	cpp_src/valarray_before.h	/^  struct __bitwise_not$/;"	s	namespace:std
__bitwise_or	cpp_src/valarray_before.h	/^  struct __bitwise_or$/;"	s	namespace:std
__bitwise_xor	cpp_src/valarray_before.h	/^  struct __bitwise_xor$/;"	s	namespace:std
__c	cpp_src/boost_concept_check.h	/^    _AssociativeContainer __c;$/;"	m	struct:_AssociativeContainerConcept
__c	cpp_src/boost_concept_check.h	/^    _BackInsertionSequence __c;$/;"	m	struct:_BackInsertionSequenceConcept
__c	cpp_src/boost_concept_check.h	/^    _Container __c, __c2;$/;"	m	struct:_Mutable_ContainerConcept
__c	cpp_src/boost_concept_check.h	/^    _FrontInsertionSequence __c;$/;"	m	struct:_FrontInsertionSequenceConcept
__c	cpp_src/boost_concept_check.h	/^    _RandomAccessContainer __c;$/;"	m	struct:_Mutable_RandomAccessContainerConcept
__c	cpp_src/boost_concept_check.h	/^    _ReversibleContainer __c;$/;"	m	struct:_Mutable_ReversibleContainerConcept
__c2	cpp_src/boost_concept_check.h	/^    _Container __c, __c2;$/;"	m	struct:_Mutable_ContainerConcept
__cache	5/parallel/random_number.h	/^    uint64_t              __cache;$/;"	m	class:__gnu_parallel::_RandomNumber
__cache_type	cpp_src/locale_facets.h	/^      typedef __moneypunct_cache<_CharT, _Intl>     __cache_type;$/;"	t	class:std::moneypunct
__cache_type	cpp_src/locale_facets.h	/^      typedef __numpunct_cache<_CharT>  __cache_type;$/;"	t	class:std::numpunct
__cache_type	cpp_src/locale_facets.h	/^      typedef __timepunct_cache<_CharT>	__cache_type;$/;"	t	class:std::__timepunct
__calc_borders	5/parallel/search.h	/^    __calc_borders(_RAIter __elements, _DifferenceTp __length, $/;"	f	namespace:__gnu_parallel
__cas_omp	5/parallel/compatibility.h	/^    __cas_omp(volatile _Tp* __ptr, _Tp __comparand, _Tp __replacement)$/;"	f	namespace:__gnu_parallel
__catch	5/bits/exception_defines.h	36;"	d
__catch	5/bits/exception_defines.h	41;"	d
__char_type	cpp_src/locale_facets.h	/^      typedef _CharT			__char_type;$/;"	t	class:std::__timepunct
__check_dereferenceable	5/debug/functions.h	/^    __check_dereferenceable(const _Iterator&)$/;"	f	namespace:__gnu_debug
__check_dereferenceable	5/debug/functions.h	/^    __check_dereferenceable(const _Safe_iterator<_Iterator, _Sequence>& __x)$/;"	f	namespace:__gnu_debug
__check_dereferenceable	5/debug/functions.h	/^    __check_dereferenceable(const _Safe_local_iterator<_Iterator,$/;"	f	namespace:__gnu_debug
__check_dereferenceable	5/debug/functions.h	/^    __check_dereferenceable(const _Tp* __ptr)$/;"	f	namespace:__gnu_debug
__check_facet	cpp_src/localefwd.h	/^    __check_facet(const _Facet* __f)$/;"	f	namespace:std
__check_partitioned_lower	5/debug/functions.h	/^    __check_partitioned_lower(_ForwardIterator __first,$/;"	f	namespace:__gnu_debug
__check_partitioned_upper	5/debug/functions.h	/^    __check_partitioned_upper(_ForwardIterator __first,$/;"	f	namespace:__gnu_debug
__check_singular	5/debug/functions.h	/^    __check_singular(const _Iterator& __x)$/;"	f	namespace:__gnu_debug
__check_singular	5/debug/functions.h	/^    __check_singular(const _Tp* __ptr)$/;"	f	namespace:__gnu_debug
__check_singular_aux	5/debug/functions.h	/^  __check_singular_aux(const void*) { return false; }$/;"	f	namespace:__gnu_debug
__check_singular_aux	5/debug/safe_iterator.h	/^  __check_singular_aux(const _Safe_iterator_base* __x)$/;"	f	namespace:__gnu_debug
__check_sorted	5/debug/functions.h	/^    __check_sorted(const _InputIterator& __first, const _InputIterator& __last)$/;"	f	namespace:__gnu_debug
__check_sorted	5/debug/functions.h	/^    __check_sorted(const _InputIterator& __first, const _InputIterator& __last,$/;"	f	namespace:__gnu_debug
__check_sorted_aux	5/debug/functions.h	/^    __check_sorted_aux(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:__gnu_debug
__check_sorted_aux	5/debug/functions.h	/^    __check_sorted_aux(const _InputIterator&, const _InputIterator&,$/;"	f	namespace:__gnu_debug
__check_sorted_set	5/debug/functions.h	/^    __check_sorted_set(const _InputIterator1& __first,$/;"	f	namespace:__gnu_debug
__check_sorted_set_aux	5/debug/functions.h	/^    __check_sorted_set_aux(const _InputIterator& __first,$/;"	f	namespace:__gnu_debug
__check_sorted_set_aux	5/debug/functions.h	/^    __check_sorted_set_aux(const _InputIterator&,$/;"	f	namespace:__gnu_debug
__check_string	5/debug/functions.h	/^    __check_string(const _CharT* __s)$/;"	f	namespace:__gnu_debug
__check_string	5/debug/functions.h	/^    __check_string(const _CharT* __s,$/;"	f	namespace:__gnu_debug
__check_valid_range	5/debug/functions.h	/^    __check_valid_range(const _InputIterator& __first,$/;"	f	namespace:__gnu_debug
__chunk_insertion_sort	cpp_src/stl_algo.h	/^    __chunk_insertion_sort(_RandomAccessIterator __first,$/;"	f	namespace:std
__ci	cpp_src/boost_concept_check.h	/^    _Const_iterator __ci;$/;"	m	struct:_AssociativeContainerConcept
__class_type_info	5/cxxabi.h	/^    __class_type_info (const char *__n) : type_info(__n) { }$/;"	f	class:__cxxabiv1::__class_type_info
__class_type_info	5/cxxabi.h	/^  class __class_type_info : public std::type_info$/;"	c	namespace:__cxxabiv1
__codecvt_abstract_base	cpp_src/codecvt.h	/^      __codecvt_abstract_base(size_t __refs = 0) : locale::facet(__refs) { }$/;"	f	class:std::__codecvt_abstract_base
__codecvt_abstract_base	cpp_src/codecvt.h	/^    class __codecvt_abstract_base$/;"	c	namespace:std
__collect_warnings	5/profile/impl/profiler_trace.h	/^    __collect_warnings(__warning_vector_t& __warnings)$/;"	f	class:__gnu_profile::__trace_base
__comp	5/parallel/for_each_selectors.h	/^      _Compare& __comp;$/;"	m	struct:__gnu_parallel::__max_element_reduct
__comp	5/parallel/for_each_selectors.h	/^      _Compare& __comp;$/;"	m	struct:__gnu_parallel::__min_element_reduct
__comp	5/parallel/multiway_merge.h	/^      _Compare& __comp;$/;"	m	class:__gnu_parallel::_GuardedIterator
__comp	5/parallel/multiway_merge.h	/^      _Compare& __comp;$/;"	m	class:__gnu_parallel::_UnguardedIterator
__compare_and_swap	5/parallel/compatibility.h	/^    __compare_and_swap(volatile _Tp* __ptr, _Tp __comparand, _Tp __replacement)$/;"	f	namespace:__gnu_parallel
__const_constraints	cpp_src/boost_concept_check.h	/^    void __const_constraints(const _AssociativeContainer& __c) {$/;"	f	struct:_AssociativeContainerConcept
__const_constraints	cpp_src/boost_concept_check.h	/^    void __const_constraints(const _BackInsertionSequence& __c) {$/;"	f	struct:_BackInsertionSequenceConcept
__const_constraints	cpp_src/boost_concept_check.h	/^    void __const_constraints(const _Func& __fun) {$/;"	f	struct:_Const_BinaryPredicateConcept
__const_constraints	cpp_src/boost_concept_check.h	/^    void __const_constraints(const _Sequence& __c) {$/;"	f	struct:_SequenceConcept
__const_constraints	cpp_src/boost_concept_check.h	/^    void __const_constraints(const _SortedAssociativeContainer& __c) {$/;"	f	struct:_SortedAssociativeContainerConcept
__const_constraints	cpp_src/boost_concept_check.h	/^    void __const_constraints(const _Tp& __a) {$/;"	f	struct:_CopyConstructibleConcept
__const_constraints	cpp_src/boost_concept_check.h	/^    void __const_constraints(const _Tp& __b) {$/;"	f	struct:_AssignableConcept
__const_constraints	cpp_src/boost_concept_check.h	/^    void __const_constraints(const _Tp& __b) {$/;"	f	struct:_SGIAssignableConcept
__const_iterator	5/debug/formatter.h	/^      __const_iterator,$/;"	e	enum:__gnu_debug::_Error_formatter::_Constness
__const_mask	5/cxxabi.h	/^	__const_mask = 0x1,$/;"	e	enum:__cxxabiv1::__pbase_type_info::__masks
__constraints	cpp_src/boost_concept_check.h	/^                                                { void __constraints() {} };$/;"	f	struct:_IntegerConcept
__constraints	cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	struct:_AssignableConcept
__constraints	cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	struct:_AssociativeContainerConcept
__constraints	cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	struct:_BackInsertionSequenceConcept
__constraints	cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	struct:_BidirectionalIteratorConcept
__constraints	cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	struct:_BinaryFunctionConcept
__constraints	cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	struct:_BinaryPredicateConcept
__constraints	cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	struct:_ComparableConcept
__constraints	cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	struct:_Const_BinaryPredicateConcept
__constraints	cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	struct:_ContainerConcept
__constraints	cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	struct:_ConvertibleConcept
__constraints	cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	struct:_CopyConstructibleConcept
__constraints	cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	struct:_DefaultConstructibleConcept
__constraints	cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	struct:_EqualityComparableConcept
__constraints	cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	struct:_ForwardContainerConcept
__constraints	cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	struct:_ForwardIteratorConcept
__constraints	cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	struct:_FrontInsertionSequenceConcept
__constraints	cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	struct:_GeneratorConcept
__constraints	cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	struct:_InputIteratorConcept
__constraints	cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	struct:_IntegerConcept
__constraints	cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	struct:_LessThanComparableConcept
__constraints	cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	struct:_MultipleAssociativeContainerConcept
__constraints	cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	struct:_Mutable_BidirectionalIteratorConcept
__constraints	cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	struct:_Mutable_ContainerConcept
__constraints	cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	struct:_Mutable_ForwardContainerConcept
__constraints	cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	struct:_Mutable_ForwardIteratorConcept
__constraints	cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	struct:_Mutable_RandomAccessContainerConcept
__constraints	cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	struct:_Mutable_RandomAccessIteratorConcept
__constraints	cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	struct:_Mutable_ReversibleContainerConcept
__constraints	cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	struct:_Mutable_TrivialIteratorConcept
__constraints	cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	struct:_OutputIteratorConcept
__constraints	cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	struct:_PairAssociativeContainerConcept
__constraints	cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	struct:_RandomAccessContainerConcept
__constraints	cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	struct:_RandomAccessIteratorConcept
__constraints	cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	struct:_ReversibleContainerConcept
__constraints	cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	struct:_SGIAssignableConcept
__constraints	cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	struct:_SameTypeConcept
__constraints	cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	struct:_SequenceConcept
__constraints	cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	struct:_SignedIntegerConcept
__constraints	cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	struct:_SimpleAssociativeContainerConcept
__constraints	cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	struct:_SortedAssociativeContainerConcept
__constraints	cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	struct:_TrivialIteratorConcept
__constraints	cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	struct:_UnaryFunctionConcept
__constraints	cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	struct:_UnaryPredicateConcept
__constraints	cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	struct:_UniqueAssociativeContainerConcept
__constraints	cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	struct:_UnsignedIntegerConcept
__constraints	cpp_src/boost_concept_check.h	/^    { void __constraints() {} };$/;"	f	struct:_UnsignedIntegerConcept
__constraints	cpp_src/boost_concept_check.h	/^  template <> struct _IntegerConcept<int> { void __constraints() {} };$/;"	f	struct:_IntegerConcept
__constraints	cpp_src/boost_concept_check.h	/^  template <> struct _IntegerConcept<long long> { void __constraints() {} };$/;"	f	struct:_IntegerConcept
__constraints	cpp_src/boost_concept_check.h	/^  template <> struct _IntegerConcept<long> { void __constraints() {} };$/;"	f	struct:_IntegerConcept
__constraints	cpp_src/boost_concept_check.h	/^  template <> struct _IntegerConcept<short> { void __constraints() {} };$/;"	f	struct:_IntegerConcept
__constraints	cpp_src/boost_concept_check.h	/^  template <> struct _IntegerConcept<unsigned int> { void __constraints() {} };$/;"	f	struct:_IntegerConcept
__constraints	cpp_src/boost_concept_check.h	/^  template <> struct _IntegerConcept<unsigned long> { void __constraints() {} };$/;"	f	struct:_IntegerConcept
__constraints	cpp_src/boost_concept_check.h	/^  template <> struct _IntegerConcept<unsigned short> { void __constraints(){} };$/;"	f	struct:_IntegerConcept
__constraints	cpp_src/boost_concept_check.h	/^  template <> struct _SignedIntegerConcept<int> { void __constraints() {} };$/;"	f	struct:_SignedIntegerConcept
__constraints	cpp_src/boost_concept_check.h	/^  template <> struct _SignedIntegerConcept<long long> { void __constraints(){}};$/;"	f	struct:_SignedIntegerConcept
__constraints	cpp_src/boost_concept_check.h	/^  template <> struct _SignedIntegerConcept<long> { void __constraints() {} };$/;"	f	struct:_SignedIntegerConcept
__constraints	cpp_src/boost_concept_check.h	/^  template <> struct _SignedIntegerConcept<short> { void __constraints() {} };$/;"	f	struct:_SignedIntegerConcept
__contained_ambig	5/cxxabi.h	/^	__contained_ambig,$/;"	e	enum:__cxxabiv1::__class_type_info::__sub_kind
__contained_mask	5/cxxabi.h	/^	__contained_mask = 1 << __base_class_type_info::__hwm_bit,$/;"	e	enum:__cxxabiv1::__class_type_info::__sub_kind
__contained_private	5/cxxabi.h	/^	__contained_private = __contained_mask,$/;"	e	enum:__cxxabiv1::__class_type_info::__sub_kind
__contained_public	5/cxxabi.h	/^	__contained_public = __contained_mask | __contained_public_mask$/;"	e	enum:__cxxabiv1::__class_type_info::__sub_kind
__contained_public_mask	5/cxxabi.h	/^	__contained_public_mask = __base_class_type_info::__public_mask,$/;"	e	enum:__cxxabiv1::__class_type_info::__sub_kind
__contained_virtual_mask	5/cxxabi.h	/^	__contained_virtual_mask = __base_class_type_info::__virtual_mask,$/;"	e	enum:__cxxabiv1::__class_type_info::__sub_kind
__container_size_info	5/profile/impl/profiler_container_size.h	/^    __container_size_info(__stack_t __stack)$/;"	f	class:__gnu_profile::__container_size_info
__container_size_info	5/profile/impl/profiler_container_size.h	/^  class __container_size_info$/;"	c	namespace:__gnu_profile
__container_size_stack_info	5/profile/impl/profiler_container_size.h	/^    __container_size_stack_info(const __container_size_info& __o)$/;"	f	class:__gnu_profile::__container_size_stack_info
__container_size_stack_info	5/profile/impl/profiler_container_size.h	/^  class __container_size_stack_info$/;"	c	namespace:__gnu_profile
__context	5/cxxabi.h	/^    __class_type_info* __context;   \/\/ Class of the member.$/;"	m	class:__cxxabiv1::__pointer_to_member_type_info
__context	5/profile/impl/profiler_trace.h	/^    __stack_t __context;$/;"	m	struct:__gnu_profile::__warning_data
__copy	cpp_src/stl_algobase.h	/^    struct __copy$/;"	s	namespace:std
__copy	cpp_src/stl_algobase.h	/^    struct __copy<_BoolType, random_access_iterator_tag>$/;"	s	namespace:std
__copy	cpp_src/stl_algobase.h	/^    struct __copy<true, random_access_iterator_tag>$/;"	s	namespace:std
__copy_aux	cpp_src/stl_algobase.h	/^    __copy_aux(_II __first, _II __last, _OI __result)$/;"	f	namespace:std
__copy_aux	cpp_src/streambuf_iterator.h	/^    __copy_aux(_CharT* __first, _CharT* __last,$/;"	f	namespace:std
__copy_aux	cpp_src/streambuf_iterator.h	/^    __copy_aux(const _CharT* __first, const _CharT* __last,$/;"	f	namespace:std
__copy_aux	cpp_src/streambuf_iterator.h	/^    __copy_aux(istreambuf_iterator<_CharT> __first,$/;"	f	namespace:std
__copy_b	cpp_src/stl_algobase.h	/^        __copy_b(_BI1 __first, _BI1 __last, _BI2 __result)$/;"	f	struct:std::__copy_backward
__copy_b	cpp_src/stl_algobase.h	/^        __copy_b(const _Tp* __first, const _Tp* __last, _Tp* __result)$/;"	f	struct:std::__copy_backward
__copy_b_n	cpp_src/stl_algobase.h	/^        __copy_b_n(_BI1 __first, _BI1 __last, _BI2 __result)$/;"	f	struct:std::__copy_backward_normal
__copy_backward	cpp_src/stl_algobase.h	/^    struct __copy_backward$/;"	s	namespace:std
__copy_backward	cpp_src/stl_algobase.h	/^    struct __copy_backward<_BoolType, random_access_iterator_tag>$/;"	s	namespace:std
__copy_backward	cpp_src/stl_algobase.h	/^    struct __copy_backward<true, random_access_iterator_tag>$/;"	s	namespace:std
__copy_backward_aux	cpp_src/stl_algobase.h	/^    __copy_backward_aux(_BI1 __first, _BI1 __last, _BI2 __result)$/;"	f	namespace:std
__copy_backward_normal	cpp_src/stl_algobase.h	/^    struct __copy_backward_normal$/;"	s	namespace:std
__copy_backward_normal	cpp_src/stl_algobase.h	/^    struct __copy_backward_normal<false, true>$/;"	s	namespace:std
__copy_backward_normal	cpp_src/stl_algobase.h	/^    struct __copy_backward_normal<true, false>$/;"	s	namespace:std
__copy_backward_normal	cpp_src/stl_algobase.h	/^    struct __copy_backward_normal<true, true>$/;"	s	namespace:std
__copy_n	cpp_src/stl_algobase.h	/^        __copy_n(_II __first, _II __last, _OI __result)$/;"	f	struct:std::__copy_normal
__copy_normal	cpp_src/stl_algobase.h	/^    struct __copy_normal$/;"	s	namespace:std
__copy_normal	cpp_src/stl_algobase.h	/^    struct __copy_normal<false, true>$/;"	s	namespace:std
__copy_normal	cpp_src/stl_algobase.h	/^    struct __copy_normal<true, false>$/;"	s	namespace:std
__copy_normal	cpp_src/stl_algobase.h	/^    struct __copy_normal<true, true>$/;"	s	namespace:std
__copy_tail	5/parallel/set_operations.h	/^    __copy_tail(std::pair<_IIter, _IIter> __b,$/;"	f	namespace:__gnu_parallel
__cos	cpp_src/valarray_before.h	/^  struct __cos$/;"	s	namespace:std
__cosh	cpp_src/valarray_before.h	/^  struct __cosh$/;"	s	namespace:std
__cost_factor	5/profile/impl/profiler_trace.h	/^  struct __cost_factor$/;"	s	namespace:__gnu_profile
__cost_factor_setter	5/profile/impl/profiler_trace.h	/^  struct __cost_factor_setter$/;"	s	namespace:__gnu_profile
__cost_factor_vector	5/profile/impl/profiler_trace.h	/^  typedef std::_GLIBCXX_STD_C::vector<__cost_factor*> __cost_factor_vector;$/;"	t	namespace:__gnu_profile
__cost_factor_writer	5/profile/impl/profiler_trace.h	/^    __cost_factor_writer(FILE* __f)$/;"	f	struct:__gnu_profile::__cost_factor_writer
__cost_factor_writer	5/profile/impl/profiler_trace.h	/^  struct __cost_factor_writer$/;"	s	namespace:__gnu_profile
__count	5/parallel/set_operations.h	/^      __count(_IIter __a, _IIter __b, _IIter __c, _IIter __d) const$/;"	f	struct:__gnu_parallel::__intersection_func
__count	5/parallel/set_operations.h	/^      __count(_IIter __a, _IIter __b, _IIter __c, _IIter __d) const$/;"	f	struct:__gnu_parallel::__symmetric_difference_func
__count	5/parallel/set_operations.h	/^      __count(_IIter __a, _IIter __b, _IIter __c, _IIter __d) const$/;"	f	struct:__gnu_parallel::__union_func
__count	5/parallel/set_operations.h	/^      __count(_IIter __a, _IIter __b,$/;"	f	struct:__gnu_parallel::__difference_func
__count_if_selector	5/parallel/for_each_selectors.h	/^    struct __count_if_selector : public __generic_for_each_selector<_It>$/;"	s	namespace:__gnu_parallel
__count_selector	5/parallel/for_each_selectors.h	/^    struct __count_selector : public __generic_for_each_selector<_It>$/;"	s	namespace:__gnu_parallel
__cp	cpp_src/boost_concept_check.h	/^    _Const_iterator __cp;$/;"	m	struct:_SortedAssociativeContainerConcept
__cpp_lib_make_reverse_iterator	5/bits/stl_iterator.h	392;"	d
__cpp_lib_make_unique	5/bits/unique_ptr.h	747;"	d
__cpp_lib_robust_nonmodifying_seq_ops	5/bits/stl_algobase.h	1105;"	d
__cpp_lib_string_udls	5/bits/basic_string.h	5546;"	d
__cpp_lib_transparent_operators	5/bits/stl_function.h	227;"	d
__cr	cpp_src/boost_concept_check.h	/^    std::pair<_Const_iterator,_Const_iterator> __cr;$/;"	m	struct:_AssociativeContainerConcept
__cr	cpp_src/boost_concept_check.h	/^    std::pair<_Const_iterator,_Const_iterator> __cr;$/;"	m	struct:_SortedAssociativeContainerConcept
__ctype_abstract_base	cpp_src/locale_facets.h	/^      __ctype_abstract_base(size_t __refs = 0): facet(__refs) { }$/;"	f	class:std::__ctype_abstract_base
__ctype_abstract_base	cpp_src/locale_facets.h	/^    class __ctype_abstract_base : public locale::facet, public ctype_base$/;"	c	namespace:std
__ctype_type	cpp_src/basic_ios.h	/^      typedef ctype<_CharT>                          __ctype_type;$/;"	t	class:std::basic_ios
__cxa_cdtor_type	5/cxxabi.h	/^  typedef __cxa_cdtor_return_type (*__cxa_cdtor_type)(void *);$/;"	t
__cxxabiv1	5/bits/cxxabi_forced.h	/^namespace __cxxabiv1$/;"	n
__cxxabiv1	5/cxxabi.h	/^namespace __cxxabiv1$/;"	n
__debug	5/debug/debug.h	/^  namespace __debug { } $/;"	n	namespace:std
__decode2	5/parallel/base.h	/^  __decode2(_CASable __x, int& __a, int& __b)$/;"	f	namespace:__gnu_parallel
__delete_min_insert	5/parallel/losertree.h	/^      __delete_min_insert(_Tp __key, bool __sup)$/;"	f	class:__gnu_parallel::_LoserTree
__delete_min_insert	5/parallel/losertree.h	/^      __delete_min_insert(_Tp __key, bool)$/;"	f	class:__gnu_parallel::_LoserTreeUnguarded
__delete_min_insert	5/parallel/losertree.h	/^      __delete_min_insert(const _Tp& __key, bool __sup)$/;"	f	class:__gnu_parallel::_LoserTreePointerUnguarded
__delete_min_insert	5/parallel/losertree.h	/^      void __delete_min_insert(const _Tp& __key, bool __sup)$/;"	f	class:__gnu_parallel::_LoserTreePointer
__deque_buf_size	cpp_src/stl_deque.h	/^  __deque_buf_size(size_t __size)$/;"	f	namespace:std
__destroy_aux	cpp_src/stl_construct.h	/^    __destroy_aux(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std
__destroy_aux	cpp_src/stl_construct.h	/^    __destroy_aux(_ForwardIterator, _ForwardIterator, __true_type)$/;"	f	namespace:std
__destruct	5/profile/impl/profiler_container_size.h	/^    __destruct(__container_size_info* __obj_info,$/;"	f	class:__gnu_profile::__trace_container_size
__destruct	5/profile/impl/profiler_container_size.h	/^    __destruct(std::size_t __num, std::size_t __inum)$/;"	f	class:__gnu_profile::__container_size_info
__destruct	5/profile/impl/profiler_hash_func.h	/^    __destruct(__hashfunc_info* __obj_info, $/;"	f	class:__gnu_profile::__trace_hash_func
__destruct	5/profile/impl/profiler_hash_func.h	/^    __destruct(std::size_t __chain, std::size_t __accesses,$/;"	f	class:__gnu_profile::__hashfunc_info
__destruct	5/profile/impl/profiler_list_to_slist.h	/^    __destruct(__list2slist_info* __obj_info)$/;"	f	class:__gnu_profile::__trace_list_to_slist
__destruct	5/profile/impl/profiler_list_to_vector.h	/^    __destruct(__list2vector_info* __obj_info)$/;"	f	class:__gnu_profile::__trace_list_to_vector
__destruct	5/profile/impl/profiler_map_to_unordered_map.h	/^    __destruct(__map2umap_info* __obj_info)$/;"	f	class:__gnu_profile::__trace_map2umap
__destruct	5/profile/impl/profiler_vector_to_list.h	/^    __destruct(__vector2list_info* __obj_info)$/;"	f	class:__gnu_profile::__trace_vector_to_list
__determine_samples	5/parallel/multiway_mergesort.h	/^    __determine_samples(_PMWMSSortingData<_RAIter>* __sd,$/;"	f	namespace:__gnu_parallel
__diamond_shaped_mask	5/cxxabi.h	/^	__diamond_shaped_mask = 0x2, \/\/ Diamond shaped multiple inheritance.$/;"	e	enum:__cxxabiv1::__vmi_class_type_info::__flags_masks
__difference_func	5/parallel/set_operations.h	/^      __difference_func(_Compare __comp) : _M_comp(__comp) {}$/;"	f	struct:__gnu_parallel::__difference_func
__difference_func	5/parallel/set_operations.h	/^    struct __difference_func$/;"	s	namespace:__gnu_parallel
__distance	cpp_src/stl_iterator_base_funcs.h	/^    __distance(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std
__distance	cpp_src/stl_iterator_base_funcs.h	/^    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	namespace:std
__divides	cpp_src/valarray_before.h	/^  struct __divides$/;"	s	namespace:std
__dp_equality	5/debug/safe_iterator.h	/^      __dp_equality, \/\/< Can compare iterator equality, only$/;"	e	enum:__gnu_debug::_Distance_precision
__dp_exact	5/debug/safe_iterator.h	/^      __dp_exact     \/\/< Can determine distance precisely$/;"	e	enum:__gnu_debug::_Distance_precision
__dp_sign	5/debug/safe_iterator.h	/^      __dp_sign,     \/\/< Can determine equality and ordering$/;"	e	enum:__gnu_debug::_Distance_precision
__dtrie_alloc	5/ext/pb_ds/detail/standard_policies.hpp	137;"	d
__dtrie_alloc	5/ext/pb_ds/detail/standard_policies.hpp	152;"	d
__dtrie_string	5/ext/pb_ds/detail/standard_policies.hpp	138;"	d
__dtrie_string	5/ext/pb_ds/detail/standard_policies.hpp	153;"	d
__encode2	5/parallel/base.h	/^  __encode2(int __a, int __b)     \/\/must all be non-negative, actually$/;"	f	namespace:__gnu_parallel
__end	5/debug/formatter.h	/^      __end,           \/\/ past-the-end, may be at beginning if sequence empty$/;"	e	enum:__gnu_debug::_Error_formatter::_Iterator_state
__enum_type_info	5/cxxabi.h	/^    __enum_type_info(const char* __n) : std::type_info(__n) { }$/;"	f	class:__cxxabiv1::__enum_type_info
__enum_type_info	5/cxxabi.h	/^  class __enum_type_info : public std::type_info$/;"	c	namespace:__cxxabiv1
__env_t	5/profile/impl/profiler_trace.h	/^  typedef _GLIBCXX_IMPL_UNORDERED_MAP<std::string, std::string> __env_t;$/;"	t	namespace:__gnu_profile
__env_to_size_t	5/profile/impl/profiler_trace.h	/^  __env_to_size_t(const char* __env_var, std::size_t __default_value)$/;"	f	namespace:__gnu_profile
__env_var	5/profile/impl/profiler_trace.h	/^    const char* __env_var;$/;"	m	struct:__gnu_profile::__cost_factor
__equal_to	cpp_src/valarray_before.h	/^  struct __equal_to$/;"	s	namespace:std
__equally_split	5/parallel/equally_split.h	/^    __equally_split(_DifferenceType __n, _ThreadIndex __num_threads,$/;"	f	namespace:__gnu_parallel
__equally_split_point	5/parallel/equally_split.h	/^    __equally_split_point(_DifferenceType __n,$/;"	f	namespace:__gnu_parallel
__exception_ptr	5/bits/exception_ptr.h	/^  namespace __exception_ptr$/;"	n	namespace:std
__exp	cpp_src/valarray_before.h	/^  struct __exp$/;"	s	namespace:std
__f	cpp_src/boost_concept_check.h	/^    _Func __f;$/;"	m	struct:_BinaryFunctionConcept
__f	cpp_src/boost_concept_check.h	/^    _Func __f;$/;"	m	struct:_BinaryPredicateConcept
__f	cpp_src/boost_concept_check.h	/^    _Func __f;$/;"	m	struct:_Const_BinaryPredicateConcept
__f	cpp_src/boost_concept_check.h	/^    _Func __f;$/;"	m	struct:_GeneratorConcept
__f	cpp_src/boost_concept_check.h	/^    _Func __f;$/;"	m	struct:_UnaryFunctionConcept
__f	cpp_src/boost_concept_check.h	/^    _Func __f;$/;"	m	struct:_UnaryPredicateConcept
__f	cpp_src/valarray_after.h	/^    _Expr<_Clos, _Tp>::apply(_Tp __f(_Tp)) const$/;"	f	class:std::_Expr
__f	cpp_src/valarray_after.h	/^    _Expr<_Clos, _Tp>::apply(_Tp __f(const _Tp&)) const$/;"	f	class:std::_Expr
__fetch_and_add	5/parallel/compatibility.h	/^    __fetch_and_add(volatile _Tp* __ptr, _Tp __addend)$/;"	f	namespace:__gnu_parallel
__file	5/profile/impl/profiler_trace.h	/^    FILE* __file;$/;"	m	struct:__gnu_profile::__cost_factor_writer
__file	5/profile/impl/profiler_trace.h	/^    FILE* __file;$/;"	m	struct:__gnu_profile::__warn
__fill	cpp_src/stl_algobase.h	/^    struct __fill$/;"	s	namespace:std
__fill	cpp_src/stl_algobase.h	/^    struct __fill<true>$/;"	s	namespace:std
__fill_bvector	cpp_src/stl_bvector.h	/^  __fill_bvector(_Bit_iterator __first, _Bit_iterator __last, bool __x)$/;"	f	namespace:std
__fill_n	cpp_src/stl_algobase.h	/^    struct __fill_n$/;"	s	namespace:std
__fill_n	cpp_src/stl_algobase.h	/^    struct __fill_n<true>$/;"	s	namespace:std
__fill_selector	5/parallel/for_each_selectors.h	/^    struct __fill_selector : public __generic_for_each_selector<_It>$/;"	s	namespace:__gnu_parallel
__final_insertion_sort	cpp_src/stl_algo.h	/^    __final_insertion_sort(_RandomAccessIterator __first,$/;"	f	namespace:std
__find	cpp_src/stl_algo.h	/^    __find(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std
__find	cpp_src/stl_algo.h	/^    __find(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	namespace:std
__find_end	cpp_src/stl_algo.h	/^    __find_end(_BidirectionalIterator1 __first1,$/;"	f	namespace:std
__find_end	cpp_src/stl_algo.h	/^    __find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1,$/;"	f	namespace:std
__find_first_of_selector	5/parallel/find_selectors.h	/^      explicit __find_first_of_selector(_FIterator __begin,$/;"	f	struct:__gnu_parallel::__find_first_of_selector
__find_first_of_selector	5/parallel/find_selectors.h	/^    struct __find_first_of_selector : public __generic_find_selector$/;"	s	namespace:__gnu_parallel
__find_if	cpp_src/stl_algo.h	/^    __find_if(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std
__find_if	cpp_src/stl_algo.h	/^    __find_if(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	namespace:std
__find_if_selector	5/parallel/find_selectors.h	/^  struct __find_if_selector : public __generic_find_selector$/;"	s	namespace:__gnu_parallel
__find_template	5/parallel/find.h	/^    __find_template(_RAIter1 __begin1, _RAIter1 __end1,$/;"	f	namespace:__gnu_parallel
__first	cpp_src/boost_concept_check.h	/^    _First __first;$/;"	m	struct:_BinaryFunctionConcept
__first	cpp_src/boost_concept_check.h	/^    typename _MultipleAssociativeContainer::value_type *__first, *__last;$/;"	m	struct:_MultipleAssociativeContainerConcept
__first	cpp_src/boost_concept_check.h	/^    typename _Sequence::value_type *__first, *__last;$/;"	m	struct:_SequenceConcept
__first	cpp_src/boost_concept_check.h	/^    typename _SortedAssociativeContainer::value_type *__first, *__last;$/;"	m	struct:_SortedAssociativeContainerConcept
__first	cpp_src/boost_concept_check.h	/^    typename _UniqueAssociativeContainer::value_type *__first, *__last;$/;"	m	struct:_UniqueAssociativeContainerConcept
__first_empty	5/parallel/set_operations.h	/^      __first_empty(_IIter __c, _IIter __d, _OutputIterator __out) const$/;"	f	struct:__gnu_parallel::__symmetric_difference_func
__first_empty	5/parallel/set_operations.h	/^      __first_empty(_IIter __c, _IIter __d, _OutputIterator __out) const$/;"	f	struct:__gnu_parallel::__union_func
__first_empty	5/parallel/set_operations.h	/^      __first_empty(_IIter, _IIter, _OutputIterator __out) const$/;"	f	struct:__gnu_parallel::__difference_func
__first_empty	5/parallel/set_operations.h	/^      __first_empty(_IIter, _IIter, _OutputIterator __out) const$/;"	f	struct:__gnu_parallel::__intersection_func
__flags	5/cxxabi.h	/^    unsigned int 		__flags;  \/\/ Details about the class hierarchy.$/;"	m	class:__cxxabiv1::__vmi_class_type_info
__flags	5/cxxabi.h	/^    unsigned int 		__flags; \/\/ Qualification of the target object.$/;"	m	class:__cxxabiv1::__pbase_type_info
__flags_masks	5/cxxabi.h	/^    enum __flags_masks$/;"	g	class:__cxxabiv1::__vmi_class_type_info
__flags_unknown_mask	5/cxxabi.h	/^	__flags_unknown_mask = 0x10$/;"	e	enum:__cxxabiv1::__vmi_class_type_info::__flags_masks
__for_each	5/profile/impl/profiler_algos.h	/^    __for_each(_InputIterator __first, _InputIterator __last, _Function __f)$/;"	f	namespace:__gnu_profile
__for_each_selector	5/parallel/for_each_selectors.h	/^    struct __for_each_selector : public __generic_for_each_selector<_It>$/;"	s	namespace:__gnu_parallel
__for_each_template_random_access	5/parallel/for_each.h	/^    __for_each_template_random_access(_IIter __begin, _IIter __end,$/;"	f	namespace:__gnu_parallel
__for_each_template_random_access_ed	5/parallel/par_loop.h	/^    __for_each_template_random_access_ed(_RAIter __begin, _RAIter __end,$/;"	f	namespace:__gnu_parallel
__for_each_template_random_access_omp_loop	5/parallel/omp_loop.h	/^    __for_each_template_random_access_omp_loop(_RAIter __begin, _RAIter __end,$/;"	f	namespace:__gnu_parallel
__for_each_template_random_access_omp_loop_static	5/parallel/omp_loop_static.h	/^    __for_each_template_random_access_omp_loop_static(_RAIter __begin,$/;"	f	namespace:__gnu_parallel
__for_each_template_random_access_workstealing	5/parallel/workstealing.h	/^    __for_each_template_random_access_workstealing(_RAIter __begin,$/;"	f	namespace:__gnu_parallel
__forced_unwind	5/bits/cxxabi_forced.h	/^  class __forced_unwind$/;"	c	namespace:__cxxabiv1
__foreign_exception	5/cxxabi.h	/^  class __foreign_exception$/;"	c	namespace:__cxxabiv1
__foreign_iterator	5/debug/functions.h	/^    __foreign_iterator(const _Safe_iterator<_Iterator, _Sequence>& __it,$/;"	f	namespace:__gnu_debug
__foreign_iterator_aux	5/debug/functions.h	/^    __foreign_iterator_aux(const _Safe_iterator<_Iterator, _Sequence>& __it,$/;"	f	namespace:__gnu_debug
__foreign_iterator_aux	5/debug/functions.h	/^    __foreign_iterator_aux(const _Safe_iterator<_Iterator, _Sequence>&,$/;"	f	namespace:__gnu_debug
__foreign_iterator_aux2	5/debug/functions.h	/^    __foreign_iterator_aux2(const _Safe_iterator<_Iterator, _Sequence>& __it,$/;"	f	namespace:__gnu_debug
__foreign_iterator_aux3	5/debug/functions.h	/^    __foreign_iterator_aux3(const _Safe_iterator<_Iterator, _Sequence>& __it,$/;"	f	namespace:__gnu_debug
__foreign_iterator_aux3	5/debug/functions.h	/^    __foreign_iterator_aux3(const _Safe_iterator<_Iterator, _Sequence>&,$/;"	f	namespace:__gnu_debug
__foreign_iterator_aux4	5/debug/functions.h	/^    __foreign_iterator_aux4(const _Safe_iterator<_Iterator, _Sequence>& __it,$/;"	f	namespace:__gnu_debug
__foreign_iterator_aux4	5/debug/functions.h	/^    __foreign_iterator_aux4(const _Safe_iterator<_Iterator, _Sequence>&, ...)$/;"	f	namespace:__gnu_debug
__fun	cpp_src/valarray_before.h	/^    struct __fun$/;"	s	namespace:std
__fun	cpp_src/valarray_before.h	/^    struct __fun<__equal_to, _Tp>$/;"	s	namespace:std
__fun	cpp_src/valarray_before.h	/^    struct __fun<__greater, _Tp>$/;"	s	namespace:std
__fun	cpp_src/valarray_before.h	/^    struct __fun<__greater_equal, _Tp>$/;"	s	namespace:std
__fun	cpp_src/valarray_before.h	/^    struct __fun<__less, _Tp>$/;"	s	namespace:std
__fun	cpp_src/valarray_before.h	/^    struct __fun<__less_equal, _Tp>$/;"	s	namespace:std
__fun	cpp_src/valarray_before.h	/^    struct __fun<__logical_and, _Tp>$/;"	s	namespace:std
__fun	cpp_src/valarray_before.h	/^    struct __fun<__logical_not, _Tp>$/;"	s	namespace:std
__fun	cpp_src/valarray_before.h	/^    struct __fun<__logical_or, _Tp>$/;"	s	namespace:std
__fun	cpp_src/valarray_before.h	/^    struct __fun<__not_equal_to, _Tp>$/;"	s	namespace:std
__function_requires	cpp_src/boost_concept_check.h	/^inline void __function_requires()$/;"	f
__function_type_info	5/cxxabi.h	/^    __function_type_info(const char* __n) : std::type_info(__n) { }$/;"	f	class:__cxxabiv1::__function_type_info
__function_type_info	5/cxxabi.h	/^  class __function_type_info : public std::type_info$/;"	c	namespace:__cxxabiv1
__fundamental_type_info	5/cxxabi.h	/^    __fundamental_type_info(const char* __n) : std::type_info(__n) { }$/;"	f	class:__cxxabiv1::__fundamental_type_info
__fundamental_type_info	5/cxxabi.h	/^  class __fundamental_type_info : public std::type_info$/;"	c	namespace:__cxxabiv1
__gcd	cpp_src/stl_algo.h	/^    __gcd(_EuclideanRingElement __m, _EuclideanRingElement __n)$/;"	f	namespace:std
__generate_selector	5/parallel/for_each_selectors.h	/^    struct __generate_selector : public __generic_for_each_selector<_It>$/;"	s	namespace:__gnu_parallel
__generic_find_selector	5/parallel/find_selectors.h	/^  struct __generic_find_selector$/;"	s	namespace:__gnu_parallel
__generic_for_each_selector	5/parallel/for_each_selectors.h	/^    struct __generic_for_each_selector$/;"	s	namespace:__gnu_parallel
__genrand_bits	5/parallel/random_number.h	/^    __genrand_bits(int __bits)$/;"	f	class:__gnu_parallel::_RandomNumber
__get_distance	5/debug/safe_iterator.h	/^    __get_distance(const _Iterator& __lhs, const _Iterator& __rhs)$/;"	f	namespace:__gnu_debug
__get_distance	5/debug/safe_iterator.h	/^    __get_distance(const _Iterator& __lhs, const _Iterator& __rhs,$/;"	f	namespace:__gnu_debug
__get_in	5/profile/impl/profiler.h	/^    __get_in()$/;"	f	struct:__gnu_profile::__reentrance_guard
__get_max_threads	5/parallel/base.h	/^  __get_max_threads() $/;"	f	namespace:__gnu_parallel
__get_min_source	5/parallel/losertree.h	/^      __get_min_source()$/;"	f	class:__gnu_parallel::_LoserTreePointerUnguardedBase
__get_min_source	5/parallel/losertree.h	/^      __get_min_source()$/;"	f	class:__gnu_parallel::_LoserTreeUnguardedBase
__get_min_source	5/parallel/losertree.h	/^      int __get_min_source()$/;"	f	class:__gnu_parallel::_LoserTreeBase
__get_min_source	5/parallel/losertree.h	/^      int __get_min_source()$/;"	f	class:__gnu_parallel::_LoserTreePointerBase
__get_num_threads	5/parallel/tags.h	/^      _ThreadIndex __get_num_threads()$/;"	f	struct:__gnu_parallel::parallel_tag
__get_stack	5/profile/impl/profiler_node.h	/^  __get_stack()$/;"	f	namespace:__gnu_profile
__glibcxx_base_allocator	cpp_src/allocator.h	142;"	d
__glibcxx_check_bucket_index	5/debug/macros.h	214;"	d
__glibcxx_check_equal_allocs	5/debug/macros.h	350;"	d
__glibcxx_check_erase	5/debug/macros.h	139;"	d
__glibcxx_check_erase_after	5/debug/macros.h	153;"	d
__glibcxx_check_erase_range	5/debug/macros.h	167;"	d
__glibcxx_check_erase_range_after	5/debug/macros.h	179;"	d
__glibcxx_check_heap	5/debug/macros.h	320;"	d
__glibcxx_check_heap_pred	5/debug/macros.h	329;"	d
__glibcxx_check_insert	5/debug/macros.h	73;"	d
__glibcxx_check_insert_after	5/debug/macros.h	90;"	d
__glibcxx_check_insert_range	5/debug/macros.h	107;"	d
__glibcxx_check_insert_range_after	5/debug/macros.h	126;"	d
__glibcxx_check_max_load_factor	5/debug/macros.h	345;"	d
__glibcxx_check_non_empty_range	5/debug/macros.h	60;"	d
__glibcxx_check_nonempty	5/debug/macros.h	222;"	d
__glibcxx_check_partitioned_lower	5/debug/macros.h	273;"	d
__glibcxx_check_partitioned_lower_pred	5/debug/macros.h	295;"	d
__glibcxx_check_partitioned_upper	5/debug/macros.h	283;"	d
__glibcxx_check_partitioned_upper_pred	5/debug/macros.h	308;"	d
__glibcxx_check_self_move_assign	5/debug/macros.h	339;"	d
__glibcxx_check_sorted	5/debug/macros.h	228;"	d
__glibcxx_check_sorted_pred	5/debug/macros.h	239;"	d
__glibcxx_check_sorted_set	5/debug/macros.h	250;"	d
__glibcxx_check_sorted_set_pred	5/debug/macros.h	260;"	d
__glibcxx_check_string	5/debug/macros.h	356;"	d
__glibcxx_check_string	5/debug/macros.h	360;"	d
__glibcxx_check_string_len	5/debug/macros.h	357;"	d
__glibcxx_check_string_len	5/debug/macros.h	361;"	d
__glibcxx_check_subscript	5/debug/macros.h	206;"	d
__glibcxx_check_valid_range	5/debug/macros.h	53;"	d
__glibcxx_class_requires	5/bits/concept_check.h	48;"	d
__glibcxx_class_requires	5/bits/concept_check.h	69;"	d
__glibcxx_class_requires	cpp_src/concept_check.h	53;"	d
__glibcxx_class_requires	cpp_src/concept_check.h	74;"	d
__glibcxx_class_requires2	5/bits/concept_check.h	49;"	d
__glibcxx_class_requires2	5/bits/concept_check.h	71;"	d
__glibcxx_class_requires2	cpp_src/concept_check.h	54;"	d
__glibcxx_class_requires2	cpp_src/concept_check.h	76;"	d
__glibcxx_class_requires3	5/bits/concept_check.h	50;"	d
__glibcxx_class_requires3	5/bits/concept_check.h	73;"	d
__glibcxx_class_requires3	cpp_src/concept_check.h	55;"	d
__glibcxx_class_requires3	cpp_src/concept_check.h	78;"	d
__glibcxx_class_requires4	5/bits/concept_check.h	51;"	d
__glibcxx_class_requires4	5/bits/concept_check.h	75;"	d
__glibcxx_class_requires4	cpp_src/concept_check.h	56;"	d
__glibcxx_class_requires4	cpp_src/concept_check.h	80;"	d
__glibcxx_digits	5/ext/numeric_traits.h	44;"	d
__glibcxx_digits	5/ext/numeric_traits.h	80;"	d
__glibcxx_digits10	5/ext/numeric_traits.h	135;"	d
__glibcxx_digits10	5/ext/numeric_traits.h	92;"	d
__glibcxx_floating	5/ext/numeric_traits.h	133;"	d
__glibcxx_floating	5/ext/numeric_traits.h	84;"	d
__glibcxx_function_requires	5/bits/concept_check.h	47;"	d
__glibcxx_function_requires	5/bits/concept_check.h	67;"	d
__glibcxx_function_requires	cpp_src/concept_check.h	52;"	d
__glibcxx_function_requires	cpp_src/concept_check.h	72;"	d
__glibcxx_max	5/ext/numeric_traits.h	50;"	d
__glibcxx_max	5/ext/numeric_traits.h	82;"	d
__glibcxx_max_digits10	5/ext/numeric_traits.h	134;"	d
__glibcxx_max_digits10	5/ext/numeric_traits.h	88;"	d
__glibcxx_max_exponent10	5/ext/numeric_traits.h	136;"	d
__glibcxx_max_exponent10	5/ext/numeric_traits.h	95;"	d
__glibcxx_min	5/ext/numeric_traits.h	47;"	d
__glibcxx_min	5/ext/numeric_traits.h	81;"	d
__glibcxx_requires_cond	5/debug/debug.h	64;"	d
__glibcxx_requires_heap	5/debug/debug.h	75;"	d
__glibcxx_requires_heap_pred	5/debug/debug.h	76;"	d
__glibcxx_requires_non_empty_range	5/debug/debug.h	66;"	d
__glibcxx_requires_nonempty	5/debug/debug.h	77;"	d
__glibcxx_requires_partitioned_lower	5/debug/debug.h	71;"	d
__glibcxx_requires_partitioned_lower_pred	5/debug/debug.h	73;"	d
__glibcxx_requires_partitioned_upper	5/debug/debug.h	72;"	d
__glibcxx_requires_partitioned_upper_pred	5/debug/debug.h	74;"	d
__glibcxx_requires_sorted	5/debug/debug.h	67;"	d
__glibcxx_requires_sorted_pred	5/debug/debug.h	68;"	d
__glibcxx_requires_sorted_set	5/debug/debug.h	69;"	d
__glibcxx_requires_sorted_set_pred	5/debug/debug.h	70;"	d
__glibcxx_requires_string	5/debug/debug.h	78;"	d
__glibcxx_requires_string_len	5/debug/debug.h	79;"	d
__glibcxx_requires_subscript	5/debug/debug.h	80;"	d
__glibcxx_requires_valid_range	5/debug/debug.h	65;"	d
__glibcxx_signed	5/ext/numeric_traits.h	43;"	d
__glibcxx_signed	5/ext/numeric_traits.h	79;"	d
__gnu_cxx	5/bits/predefined_ops.h	/^namespace __gnu_cxx$/;"	n
__gnu_cxx	5/cxxabi.h	/^namespace __gnu_cxx$/;"	n
__gnu_cxx	5/ext/aligned_buffer.h	/^namespace __gnu_cxx$/;"	n
__gnu_debug	5/debug/debug.h	/^namespace __gnu_debug$/;"	n
__gnu_debug	5/debug/formatter.h	/^namespace __gnu_debug$/;"	n
__gnu_debug	5/debug/functions.h	/^namespace __gnu_debug$/;"	n
__gnu_debug	5/debug/safe_base.h	/^namespace __gnu_debug$/;"	n
__gnu_debug	5/debug/safe_container.h	/^namespace __gnu_debug$/;"	n
__gnu_debug	5/debug/safe_iterator.h	/^namespace __gnu_debug$/;"	n
__gnu_debug	5/debug/safe_local_iterator.h	/^namespace __gnu_debug$/;"	n
__gnu_debug	5/debug/safe_sequence.h	/^namespace __gnu_debug$/;"	n
__gnu_debug	5/debug/safe_unordered_base.h	/^namespace __gnu_debug$/;"	n
__gnu_debug	5/debug/safe_unordered_container.h	/^namespace __gnu_debug$/;"	n
__gnu_parallel	5/parallel/balanced_quicksort.h	/^namespace __gnu_parallel$/;"	n
__gnu_parallel	5/parallel/base.h	/^namespace __gnu_parallel$/;"	n
__gnu_parallel	5/parallel/checkers.h	/^namespace __gnu_parallel$/;"	n
__gnu_parallel	5/parallel/compatibility.h	/^namespace __gnu_parallel$/;"	n
__gnu_parallel	5/parallel/equally_split.h	/^namespace __gnu_parallel$/;"	n
__gnu_parallel	5/parallel/find.h	/^namespace __gnu_parallel$/;"	n
__gnu_parallel	5/parallel/find_selectors.h	/^namespace __gnu_parallel$/;"	n
__gnu_parallel	5/parallel/for_each.h	/^namespace __gnu_parallel$/;"	n
__gnu_parallel	5/parallel/for_each_selectors.h	/^namespace __gnu_parallel$/;"	n
__gnu_parallel	5/parallel/iterator.h	/^namespace __gnu_parallel$/;"	n
__gnu_parallel	5/parallel/list_partition.h	/^namespace __gnu_parallel$/;"	n
__gnu_parallel	5/parallel/losertree.h	/^namespace __gnu_parallel$/;"	n
__gnu_parallel	5/parallel/merge.h	/^namespace __gnu_parallel$/;"	n
__gnu_parallel	5/parallel/multiseq_selection.h	/^namespace __gnu_parallel$/;"	n
__gnu_parallel	5/parallel/multiway_merge.h	/^namespace __gnu_parallel$/;"	n
__gnu_parallel	5/parallel/multiway_mergesort.h	/^namespace __gnu_parallel$/;"	n
__gnu_parallel	5/parallel/omp_loop.h	/^namespace __gnu_parallel$/;"	n
__gnu_parallel	5/parallel/omp_loop_static.h	/^namespace __gnu_parallel$/;"	n
__gnu_parallel	5/parallel/par_loop.h	/^namespace __gnu_parallel$/;"	n
__gnu_parallel	5/parallel/partial_sum.h	/^namespace __gnu_parallel$/;"	n
__gnu_parallel	5/parallel/partition.h	/^namespace __gnu_parallel$/;"	n
__gnu_parallel	5/parallel/queue.h	/^namespace __gnu_parallel$/;"	n
__gnu_parallel	5/parallel/quicksort.h	/^namespace __gnu_parallel$/;"	n
__gnu_parallel	5/parallel/random_number.h	/^namespace __gnu_parallel$/;"	n
__gnu_parallel	5/parallel/random_shuffle.h	/^namespace __gnu_parallel$/;"	n
__gnu_parallel	5/parallel/search.h	/^namespace __gnu_parallel$/;"	n
__gnu_parallel	5/parallel/set_operations.h	/^namespace __gnu_parallel$/;"	n
__gnu_parallel	5/parallel/settings.h	/^namespace __gnu_parallel$/;"	n
__gnu_parallel	5/parallel/sort.h	/^namespace __gnu_parallel$/;"	n
__gnu_parallel	5/parallel/tags.h	/^namespace __gnu_parallel$/;"	n
__gnu_parallel	5/parallel/types.h	/^namespace __gnu_parallel$/;"	n
__gnu_parallel	5/parallel/unique_copy.h	/^namespace __gnu_parallel$/;"	n
__gnu_parallel	5/parallel/workstealing.h	/^namespace __gnu_parallel$/;"	n
__gnu_pbds	5/ext/pb_ds/assoc_container.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/bin_search_tree_/traits.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/binary_heap_/const_iterator.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/binary_heap_/entry_cmp.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/binary_heap_/entry_pred.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/binary_heap_/point_const_iterator.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/binary_heap_/resize_policy.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/binomial_heap_/binomial_heap_.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/branch_policy/branch_policy.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/branch_policy/null_node_metadata.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/branch_policy/traits.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/cc_hash_table_map_/cond_key_dtor_entry_dealtor.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/cond_dealtor.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/container_base_dispatch.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/debug_map_base.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/eq_fn/eq_by_less.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/eq_fn/hash_eq_fn.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/hash_fn/mask_based_range_hashing.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/hash_fn/mod_based_range_hashing.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/hash_fn/probe_fn_base.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/hash_fn/sample_probe_fn.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/hash_fn/sample_range_hashing.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/hash_fn/sample_ranged_hash_fn.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/hash_fn/sample_ranged_probe_fn.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/left_child_next_sibling_heap_/const_iterator.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/left_child_next_sibling_heap_/node.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/left_child_next_sibling_heap_/point_const_iterator.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/list_update_map_/entry_metadata_base.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/list_update_policy/lu_counter_metadata.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/list_update_policy/sample_update_policy.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/ov_tree_map_/traits.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/pat_trie_/synth_access_traits.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/pat_trie_/traits.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/priority_queue_base_dispatch.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/rb_tree_map_/node.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/rb_tree_map_/traits.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/rc_binomial_heap_/rc.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_size_base.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/resize_policy/sample_resize_policy.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/resize_policy/sample_resize_trigger.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/resize_policy/sample_size_policy.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/splay_tree_/node.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/splay_tree_/traits.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/standard_policies.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/tree_policy/node_metadata_selector.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/tree_policy/sample_tree_node_update.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/tree_trace_base.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/trie_policy/node_metadata_selector.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/trie_policy/sample_trie_access_traits.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/trie_policy/sample_trie_node_update.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/trie_policy/trie_policy_base.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/type_utils.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/detail/types_traits.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/exception.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/hash_policy.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/list_update_policy.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/priority_queue.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/tag_and_trait.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/tree_policy.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_pbds	5/ext/pb_ds/trie_policy.hpp	/^namespace __gnu_pbds$/;"	n
__gnu_profile	5/profile/base.h	/^namespace __gnu_profile$/;"	n
__gnu_profile	5/profile/impl/profiler.h	/^namespace __gnu_profile$/;"	n
__gnu_profile	5/profile/impl/profiler_algos.h	/^namespace __gnu_profile$/;"	n
__gnu_profile	5/profile/impl/profiler_container_size.h	/^namespace __gnu_profile$/;"	n
__gnu_profile	5/profile/impl/profiler_hash_func.h	/^namespace __gnu_profile$/;"	n
__gnu_profile	5/profile/impl/profiler_hashtable_size.h	/^namespace __gnu_profile$/;"	n
__gnu_profile	5/profile/impl/profiler_list_to_slist.h	/^namespace __gnu_profile$/;"	n
__gnu_profile	5/profile/impl/profiler_list_to_vector.h	/^namespace __gnu_profile$/;"	n
__gnu_profile	5/profile/impl/profiler_map_to_unordered_map.h	/^namespace __gnu_profile$/;"	n
__gnu_profile	5/profile/impl/profiler_node.h	/^namespace __gnu_profile$/;"	n
__gnu_profile	5/profile/impl/profiler_state.h	/^namespace __gnu_profile$/;"	n
__gnu_profile	5/profile/impl/profiler_trace.h	/^namespace __gnu_profile$/;"	n
__gnu_profile	5/profile/impl/profiler_vector_size.h	/^namespace __gnu_profile$/;"	n
__gnu_profile	5/profile/impl/profiler_vector_to_list.h	/^namespace __gnu_profile$/;"	n
__gnu_sequential	5/parallel/base.h	/^namespace __gnu_sequential $/;"	n
__greater	cpp_src/valarray_before.h	/^  struct __greater$/;"	s	namespace:std
__greater_equal	cpp_src/valarray_before.h	/^  struct __greater_equal$/;"	s	namespace:std
__has_extension	opencv2/core/base.hpp	279;"	d
__has_rewind	5/profile/impl/profiler_list_to_slist.h	/^    __has_rewind()$/;"	f	class:__gnu_profile::__list2slist_info
__hashfunc_info	5/profile/impl/profiler_hash_func.h	/^    __hashfunc_info(__stack_t __stack)$/;"	f	class:__gnu_profile::__hashfunc_info
__hashfunc_info	5/profile/impl/profiler_hash_func.h	/^  class __hashfunc_info$/;"	c	namespace:__gnu_profile
__hashfunc_stack_info	5/profile/impl/profiler_hash_func.h	/^    __hashfunc_stack_info(const __hashfunc_info& __o)$/;"	f	class:__gnu_profile::__hashfunc_stack_info
__hashfunc_stack_info	5/profile/impl/profiler_hash_func.h	/^  class __hashfunc_stack_info $/;"	c	namespace:__gnu_profile
__heap_select	cpp_src/stl_algo.h	/^    __heap_select(_RandomAccessIterator __first,$/;"	f	namespace:std
__hwm_bit	5/cxxabi.h	/^	__hwm_bit = 2,$/;"	e	enum:__cxxabiv1::__base_class_type_info::__offset_flags_masks
__i	cpp_src/boost_concept_check.h	/^    _Const_iterator __i;$/;"	m	struct:_ContainerConcept
__i	cpp_src/boost_concept_check.h	/^    _Iterator __i;$/;"	m	struct:_AssociativeContainerConcept
__i	cpp_src/boost_concept_check.h	/^    _Iterator __i;$/;"	m	struct:_Mutable_ContainerConcept
__i	cpp_src/boost_concept_check.h	/^    _Size_type __i;$/;"	m	struct:_Mutable_RandomAccessContainerConcept
__i	cpp_src/boost_concept_check.h	/^    _Tp __i, __j;$/;"	m	struct:_Mutable_TrivialIteratorConcept
__i	cpp_src/boost_concept_check.h	/^    _Tp __i, __j;$/;"	m	struct:_RandomAccessIteratorConcept
__i	cpp_src/boost_concept_check.h	/^    _Tp __i;$/;"	m	struct:_BidirectionalIteratorConcept
__i	cpp_src/boost_concept_check.h	/^    _Tp __i;$/;"	m	struct:_ForwardIteratorConcept
__i	cpp_src/boost_concept_check.h	/^    _Tp __i;$/;"	m	struct:_InputIteratorConcept
__i	cpp_src/boost_concept_check.h	/^    _Tp __i;$/;"	m	struct:_Mutable_BidirectionalIteratorConcept
__i	cpp_src/boost_concept_check.h	/^    _Tp __i;$/;"	m	struct:_Mutable_ForwardIteratorConcept
__i	cpp_src/boost_concept_check.h	/^    _Tp __i;$/;"	m	struct:_Mutable_RandomAccessIteratorConcept
__i	cpp_src/boost_concept_check.h	/^    _Tp __i;$/;"	m	struct:_OutputIteratorConcept
__i	cpp_src/boost_concept_check.h	/^    _Tp __i;$/;"	m	struct:_TrivialIteratorConcept
__id	5/profile/impl/profiler_trace.h	/^      const char* __id;$/;"	m	class:__gnu_profile::__trace_base
__identity_selector	5/parallel/for_each_selectors.h	/^    struct __identity_selector : public __generic_for_each_selector<_It>$/;"	s	namespace:__gnu_parallel
__incomplete_class_mask	5/cxxabi.h	/^	__incomplete_class_mask = 0x10$/;"	e	enum:__cxxabiv1::__pbase_type_info::__masks
__incomplete_mask	5/cxxabi.h	/^	__incomplete_mask = 0x8,$/;"	e	enum:__cxxabiv1::__pbase_type_info::__masks
__init	5/parallel/losertree.h	/^      __init()$/;"	f	class:__gnu_parallel::_LoserTree
__init	5/parallel/losertree.h	/^      __init()$/;"	f	class:__gnu_parallel::_LoserTreePointerUnguarded
__init	5/parallel/losertree.h	/^      __init()$/;"	f	class:__gnu_parallel::_LoserTreeUnguarded
__init	5/parallel/losertree.h	/^      void __init()$/;"	f	class:__gnu_parallel::_LoserTree
__init	5/parallel/losertree.h	/^      void __init()$/;"	f	class:__gnu_parallel::_LoserTreePointer
__init	5/profile/impl/profiler_container_size.h	/^    __init(std::size_t __num)$/;"	f	class:__gnu_profile::__container_size_info
__init_winner	5/parallel/losertree.h	/^      __init_winner(unsigned int __root)$/;"	f	class:__gnu_parallel::_LoserTree
__init_winner	5/parallel/losertree.h	/^      __init_winner(unsigned int __root)$/;"	f	class:__gnu_parallel::_LoserTreePointer
__init_winner	5/parallel/losertree.h	/^      __init_winner(unsigned int __root)$/;"	f	class:__gnu_parallel::_LoserTreePointerUnguarded
__init_winner	5/parallel/losertree.h	/^      __init_winner(unsigned int __root)$/;"	f	class:__gnu_parallel::_LoserTreeUnguarded
__inner_product_selector	5/parallel/for_each_selectors.h	/^      __inner_product_selector(_It __b1, _It2 __b2)$/;"	f	struct:__gnu_parallel::__inner_product_selector
__inner_product_selector	5/parallel/for_each_selectors.h	/^    struct __inner_product_selector : public __generic_for_each_selector<_It>$/;"	s	namespace:__gnu_parallel
__inp	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^	typedef inode_pointer 			       	__inp;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME::branch_bag
__inplace_stable_partition	cpp_src/stl_algo.h	/^    __inplace_stable_partition(_ForwardIterator __first,$/;"	f	namespace:std
__inplace_stable_sort	cpp_src/stl_algo.h	/^    __inplace_stable_sort(_RandomAccessIterator __first,$/;"	f	namespace:std
__insert	5/profile/impl/profiler_container_size.h	/^    __insert(__stack_t __stack, std::size_t __num)$/;"	f	class:__gnu_profile::__trace_container_size
__insert_start	5/parallel/losertree.h	/^      __insert_start(const _Tp& __key, int __source, bool __sup)$/;"	f	class:__gnu_parallel::_LoserTreeBase
__insert_start	5/parallel/losertree.h	/^      __insert_start(const _Tp& __key, int __source, bool)$/;"	f	class:__gnu_parallel::_LoserTreePointerUnguardedBase
__insert_start	5/parallel/losertree.h	/^      __insert_start(const _Tp& __key, int __source, bool)$/;"	f	class:__gnu_parallel::_LoserTreeUnguardedBase
__insert_start	5/parallel/losertree.h	/^      void __insert_start(const _Tp& __key, int __source, bool __sup)$/;"	f	class:__gnu_parallel::_LoserTreePointerBase
__insert_top_n	5/profile/impl/profiler_algos.h	/^    __insert_top_n(_Container& __output,$/;"	f	namespace:__gnu_profile
__insertion_sort	cpp_src/stl_algo.h	/^    __insertion_sort(_RandomAccessIterator __first,$/;"	f	namespace:std
__inside	5/profile/impl/profiler.h	/^    __inside()$/;"	f	struct:__gnu_profile::__reentrance_guard
__instruction_address_t	5/profile/impl/profiler_node.h	/^  typedef void* __instruction_address_t;$/;"	t	namespace:__gnu_profile
__integer	5/debug/formatter.h	/^	__integer,$/;"	e	enum:__gnu_debug::_Error_formatter::_Parameter::__anon1
__intersection_func	5/parallel/set_operations.h	/^      __intersection_func(_Compare __comp) : _M_comp(__comp) {}$/;"	f	struct:__gnu_parallel::__intersection_func
__intersection_func	5/parallel/set_operations.h	/^    struct __intersection_func$/;"	s	namespace:__gnu_parallel
__introselect	cpp_src/stl_algo.h	/^    __introselect(_RandomAccessIterator __first, _RandomAccessIterator __nth,$/;"	f	namespace:std
__introsort_loop	cpp_src/stl_algo.h	/^    __introsort_loop(_RandomAccessIterator __first,$/;"	f	namespace:std
__is_heap	cpp_src/stl_heap.h	/^    __is_heap(_RandomAccessIterator __first, _Distance __n)$/;"	f	namespace:std
__is_heap	cpp_src/stl_heap.h	/^    __is_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)$/;"	f	namespace:std
__is_heap	cpp_src/stl_heap.h	/^    __is_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	namespace:std
__is_heap	cpp_src/stl_heap.h	/^    __is_heap(_RandomAccessIterator __first, _StrictWeakOrdering __comp,$/;"	f	namespace:std
__is_invalid	5/profile/impl/profiler_state.h	/^  __is_invalid()$/;"	f	namespace:__gnu_profile
__is_off	5/profile/impl/profiler_state.h	/^  __is_off()$/;"	f	namespace:__gnu_profile
__is_on	5/profile/impl/profiler_state.h	/^  __is_on()$/;"	f	namespace:__gnu_profile
__is_parallel	5/parallel/base.h	/^  __is_parallel(const _Parallelism __p) { return __p != sequential; }$/;"	f	namespace:__gnu_parallel
__is_public_p	5/cxxabi.h	/^    __is_public_p() const$/;"	f	class:__cxxabiv1::__base_class_type_info
__is_safe_random_iterator	5/debug/functions.h	/^    struct __is_safe_random_iterator$/;"	s	namespace:__gnu_debug
__is_safe_random_iterator	5/debug/functions.h	/^    struct __is_safe_random_iterator<_Safe_iterator<_Iterator, _Sequence> >$/;"	s	namespace:__gnu_debug
__is_sorted	5/parallel/checkers.h	/^    __is_sorted(_IIter __begin, _IIter __end, _Compare __comp)$/;"	f	namespace:__gnu_parallel
__is_valid	5/profile/impl/profiler_node.h	/^    __is_valid() const $/;"	f	class:__gnu_profile::__object_info_base
__is_virtual_p	5/cxxabi.h	/^    __is_virtual_p() const$/;"	f	class:__cxxabiv1::__base_class_type_info
__it_type	5/ext/pb_ds/detail/tree_policy/node_metadata_selector.hpp	/^      typedef dumnode_const_iterator<Key, Data, _Alloc>		__it_type;$/;"	t	struct:__gnu_pbds::detail::tree_node_metadata_dispatch
__it_type	5/ext/pb_ds/detail/trie_policy/node_metadata_selector.hpp	/^      typedef dumnode_const_iterator<Key, Data, _Alloc>		__it_type;$/;"	t	struct:__gnu_pbds::detail::trie_node_metadata_dispatch
__iter_comp_iter	5/bits/predefined_ops.h	/^    __iter_comp_iter(_Compare __comp)$/;"	f	namespace:__gnu_cxx::__ops
__iter_comp_iter	5/bits/predefined_ops.h	/^    __iter_comp_iter(_Iter_comp_iter<_Compare> __comp, _Iterator __it)$/;"	f	namespace:__gnu_cxx::__ops
__iter_comp_iter	5/bits/predefined_ops.h	/^    __iter_comp_iter(_Iter_equal_to_iter, _Iterator __it)$/;"	f	namespace:__gnu_cxx::__ops
__iter_comp_val	5/bits/predefined_ops.h	/^    __iter_comp_val(_Compare __comp)$/;"	f	namespace:__gnu_cxx::__ops
__iter_comp_val	5/bits/predefined_ops.h	/^    __iter_comp_val(_Compare __comp, _Value &__val)$/;"	f	namespace:__gnu_cxx::__ops
__iter_comp_val	5/bits/predefined_ops.h	/^    __iter_comp_val(_Iter_comp_iter<_Compare> __comp)$/;"	f	namespace:__gnu_cxx::__ops
__iter_comp_val	5/bits/predefined_ops.h	/^  __iter_comp_val(_Iter_equal_to_iter)$/;"	f	namespace:__gnu_cxx::__ops
__iter_comp_val	5/bits/predefined_ops.h	/^  __iter_comp_val(_Iter_less_iter)$/;"	f	namespace:__gnu_cxx::__ops
__iter_equal_to_iter	5/bits/predefined_ops.h	/^  __iter_equal_to_iter()$/;"	f	namespace:__gnu_cxx::__ops
__iter_equal_to_val	5/bits/predefined_ops.h	/^  __iter_equal_to_val()$/;"	f	namespace:__gnu_cxx::__ops
__iter_equals_val	5/bits/predefined_ops.h	/^    __iter_equals_val(_Value& __val)$/;"	f	namespace:__gnu_cxx::__ops
__iter_less_iter	5/bits/predefined_ops.h	/^  __iter_less_iter()$/;"	f	namespace:__gnu_cxx::__ops
__iter_less_val	5/bits/predefined_ops.h	/^  __iter_less_val()$/;"	f	namespace:__gnu_cxx::__ops
__iter_swap	cpp_src/stl_algobase.h	/^    struct __iter_swap$/;"	s	namespace:std
__iter_swap	cpp_src/stl_algobase.h	/^    struct __iter_swap<true>$/;"	s	namespace:std
__iterate	5/profile/impl/profiler_list_to_vector.h	/^    __iterate()$/;"	f	class:__gnu_profile::__list2vector_info
__iterate	5/profile/impl/profiler_vector_to_list.h	/^    __iterate()$/;"	f	class:__gnu_profile::__vector2list_info
__iterator	5/debug/formatter.h	/^	__iterator,$/;"	e	enum:__gnu_debug::_Error_formatter::_Parameter::__anon1
__iterator_category	cpp_src/stl_iterator_base_types.h	/^    __iterator_category(const _Iter&)$/;"	f	namespace:std
__j	cpp_src/boost_concept_check.h	/^    _Tp __i, __j;$/;"	m	struct:_Mutable_TrivialIteratorConcept
__j	cpp_src/boost_concept_check.h	/^    _Tp __i, __j;$/;"	m	struct:_RandomAccessIteratorConcept
__k	cpp_src/boost_concept_check.h	/^    typename _AssociativeContainer::key_type __k;$/;"	m	struct:_AssociativeContainerConcept
__k	cpp_src/boost_concept_check.h	/^    typename _SortedAssociativeContainer::key_type __k;$/;"	m	struct:_SortedAssociativeContainerConcept
__kc	cpp_src/boost_concept_check.h	/^    typename _SortedAssociativeContainer::key_compare __kc;$/;"	m	struct:_SortedAssociativeContainerConcept
__last	cpp_src/boost_concept_check.h	/^    typename _MultipleAssociativeContainer::value_type *__first, *__last;$/;"	m	struct:_MultipleAssociativeContainerConcept
__last	cpp_src/boost_concept_check.h	/^    typename _Sequence::value_type *__first, *__last;$/;"	m	struct:_SequenceConcept
__last	cpp_src/boost_concept_check.h	/^    typename _SortedAssociativeContainer::value_type *__first, *__last;$/;"	m	struct:_SortedAssociativeContainerConcept
__last	cpp_src/boost_concept_check.h	/^    typename _UniqueAssociativeContainer::value_type *__first, *__last;$/;"	m	struct:_UniqueAssociativeContainerConcept
__last_constness	5/debug/formatter.h	/^      __last_constness$/;"	e	enum:__gnu_debug::_Error_formatter::_Constness
__last_state	5/debug/formatter.h	/^      __last_state$/;"	e	enum:__gnu_debug::_Error_formatter::_Iterator_state
__less	cpp_src/valarray_before.h	/^  struct __less$/;"	s	namespace:std
__less_equal	cpp_src/valarray_before.h	/^  struct __less_equal$/;"	s	namespace:std
__lg	cpp_src/stl_algo.h	/^    __lg(_Size __n)$/;"	f	namespace:std
__list2slist_info	5/profile/impl/profiler_list_to_slist.h	/^    __list2slist_info(__stack_t __stack)$/;"	f	class:__gnu_profile::__list2slist_info
__list2slist_info	5/profile/impl/profiler_list_to_slist.h	/^  class __list2slist_info$/;"	c	namespace:__gnu_profile
__list2slist_stack_info	5/profile/impl/profiler_list_to_slist.h	/^    __list2slist_stack_info(const __list2slist_info& __o) $/;"	f	class:__gnu_profile::__list2slist_stack_info
__list2slist_stack_info	5/profile/impl/profiler_list_to_slist.h	/^  class __list2slist_stack_info$/;"	c	namespace:__gnu_profile
__list2vector_info	5/profile/impl/profiler_list_to_vector.h	/^    __list2vector_info(__stack_t __stack)$/;"	f	class:__gnu_profile::__list2vector_info
__list2vector_info	5/profile/impl/profiler_list_to_vector.h	/^  class __list2vector_info$/;"	c	namespace:__gnu_profile
__list2vector_stack_info	5/profile/impl/profiler_list_to_vector.h	/^    __list2vector_stack_info(const __list2vector_info& __o) $/;"	f	class:__gnu_profile::__list2vector_stack_info
__list2vector_stack_info	5/profile/impl/profiler_list_to_vector.h	/^  class __list2vector_stack_info $/;"	c	namespace:__gnu_profile
__list_cost	5/profile/impl/profiler_list_to_vector.h	/^    __list_cost()$/;"	f	class:__gnu_profile::__list2vector_info
__list_cost	5/profile/impl/profiler_list_to_vector.h	/^    __list_cost(std::size_t __shift, std::size_t __iterate)$/;"	f	class:__gnu_profile::__trace_list_to_vector
__list_cost	5/profile/impl/profiler_vector_to_list.h	/^    __list_cost()$/;"	f	class:__gnu_profile::__vector2list_info
__list_cost	5/profile/impl/profiler_vector_to_list.h	/^    __list_cost(std::size_t __shift, std::size_t __iterate,$/;"	f	class:__gnu_profile::__trace_vector_to_list
__log	cpp_src/valarray_before.h	/^  struct __log$/;"	s	namespace:std
__log10	cpp_src/valarray_before.h	/^  struct __log10$/;"	s	namespace:std
__log2	5/profile/impl/profiler_map_to_unordered_map.h	/^  __log2(std::size_t __size)$/;"	f	namespace:__gnu_profile
__log_magnitude	5/profile/impl/profiler_trace.h	/^  __log_magnitude(float __f)$/;"	f	namespace:__gnu_profile
__logical_and	cpp_src/valarray_before.h	/^  struct __logical_and$/;"	s	namespace:std
__logical_not	cpp_src/valarray_before.h	/^  struct __logical_not$/;"	s	namespace:std
__logical_or	cpp_src/valarray_before.h	/^  struct __logical_or$/;"	s	namespace:std
__magnitude	5/profile/impl/profiler_container_size.h	/^    __magnitude() const$/;"	f	class:__gnu_profile::__container_size_info
__magnitude	5/profile/impl/profiler_hash_func.h	/^    __magnitude() const$/;"	f	class:__gnu_profile::__hashfunc_info
__magnitude	5/profile/impl/profiler_list_to_slist.h	/^    __magnitude() const$/;"	f	class:__gnu_profile::__list2slist_info
__magnitude	5/profile/impl/profiler_list_to_vector.h	/^    __magnitude() const$/;"	f	class:__gnu_profile::__list2vector_info
__magnitude	5/profile/impl/profiler_map_to_unordered_map.h	/^    __magnitude() const$/;"	f	class:__gnu_profile::__map2umap_info
__magnitude	5/profile/impl/profiler_trace.h	/^    float __magnitude;$/;"	m	struct:__gnu_profile::__warning_data
__magnitude	5/profile/impl/profiler_vector_to_list.h	/^    __magnitude() const$/;"	f	class:__gnu_profile::__vector2list_info
__map2umap_info	5/profile/impl/profiler_map_to_unordered_map.h	/^    __map2umap_info(__stack_t __stack)$/;"	f	class:__gnu_profile::__map2umap_info
__map2umap_info	5/profile/impl/profiler_map_to_unordered_map.h	/^  class __map2umap_info$/;"	c	namespace:__gnu_profile
__map2umap_stack_info	5/profile/impl/profiler_map_to_unordered_map.h	/^    __map2umap_stack_info(const __map2umap_info& __o)$/;"	f	class:__gnu_profile::__map2umap_stack_info
__map2umap_stack_info	5/profile/impl/profiler_map_to_unordered_map.h	/^  class __map2umap_stack_info$/;"	c	namespace:__gnu_profile
__map_erase_cost	5/profile/impl/profiler_map_to_unordered_map.h	/^  __map_erase_cost(std::size_t __size)$/;"	f	namespace:__gnu_profile
__map_find_cost	5/profile/impl/profiler_map_to_unordered_map.h	/^  __map_find_cost(std::size_t __size)$/;"	f	namespace:__gnu_profile
__map_insert_cost	5/profile/impl/profiler_map_to_unordered_map.h	/^  __map_insert_cost(std::size_t __size)$/;"	f	namespace:__gnu_profile
__masks	5/cxxabi.h	/^    enum __masks$/;"	g	class:__cxxabiv1::__pbase_type_info
__max_element_reduct	5/parallel/for_each_selectors.h	/^      __max_element_reduct(_Compare& __c) : __comp(__c) { }$/;"	f	struct:__gnu_parallel::__max_element_reduct
__max_element_reduct	5/parallel/for_each_selectors.h	/^    struct __max_element_reduct$/;"	s	namespace:__gnu_parallel
__max_mem	5/profile/impl/profiler_trace.h	/^  __max_mem()$/;"	f	namespace:__gnu_profile
__max_parameters	5/debug/formatter.h	/^    enum { __max_parameters = 9 };$/;"	e	enum:__gnu_debug::_Error_formatter::__anon7
__median	cpp_src/stl_algo.h	/^    __median(const _Tp& __a, const _Tp& __b, const _Tp& __c)$/;"	f	namespace:std
__median	cpp_src/stl_algo.h	/^    __median(const _Tp& __a, const _Tp& __b, const _Tp& __c, _Compare __comp)$/;"	f	namespace:std
__median_of_three_iterators	5/parallel/base.h	/^    __median_of_three_iterators(_RAIter __a, _RAIter __b,$/;"	f	namespace:__gnu_parallel
__merge	5/profile/impl/profiler_container_size.h	/^    __merge(const __container_size_info& __o)$/;"	f	class:__gnu_profile::__container_size_info
__merge	5/profile/impl/profiler_hash_func.h	/^    __merge(const __hashfunc_info& __o)$/;"	f	class:__gnu_profile::__hashfunc_info
__merge	5/profile/impl/profiler_list_to_vector.h	/^    __merge(const __list2vector_info& __o)$/;"	f	class:__gnu_profile::__list2vector_info
__merge	5/profile/impl/profiler_map_to_unordered_map.h	/^    __merge(const __map2umap_info& __o)$/;"	f	class:__gnu_profile::__map2umap_info
__merge	5/profile/impl/profiler_node.h	/^    __merge(const __object_info_base& __o)$/;"	f	class:__gnu_profile::__object_info_base
__merge	5/profile/impl/profiler_vector_to_list.h	/^    __merge(const __vector2list_info& __o)$/;"	f	class:__gnu_profile::__vector2list_info
__merge_adaptive	cpp_src/stl_algo.h	/^    __merge_adaptive(_BidirectionalIterator __first,$/;"	f	namespace:std
__merge_advance	5/parallel/merge.h	/^    __merge_advance(_RAIter1& __begin1, _RAIter1 __end1,$/;"	f	namespace:__gnu_parallel
__merge_advance_movc	5/parallel/merge.h	/^    __merge_advance_movc(_RAIter1& __begin1, _RAIter1 __end1,$/;"	f	namespace:__gnu_parallel
__merge_advance_usual	5/parallel/merge.h	/^    __merge_advance_usual(_RAIter1& __begin1, _RAIter1 __end1,$/;"	f	namespace:__gnu_parallel
__merge_backward	cpp_src/stl_algo.h	/^    __merge_backward(_BidirectionalIterator1 __first1,$/;"	f	namespace:std
__merge_sort_loop	cpp_src/stl_algo.h	/^    __merge_sort_loop(_RandomAccessIterator1 __first,$/;"	f	namespace:std
__merge_sort_with_buffer	cpp_src/stl_algo.h	/^    __merge_sort_with_buffer(_RandomAccessIterator __first,$/;"	f	namespace:std
__merge_without_buffer	cpp_src/stl_algo.h	/^    __merge_without_buffer(_BidirectionalIterator __first,$/;"	f	namespace:std
__middle	5/debug/formatter.h	/^      __middle,        \/\/ dereferenceable, not at the beginning$/;"	e	enum:__gnu_debug::_Error_formatter::_Iterator_state
__min_element_reduct	5/parallel/for_each_selectors.h	/^      __min_element_reduct(_Compare &__c) : __comp(__c) { }$/;"	f	struct:__gnu_parallel::__min_element_reduct
__min_element_reduct	5/parallel/for_each_selectors.h	/^    struct __min_element_reduct$/;"	s	namespace:__gnu_parallel
__minus	cpp_src/valarray_before.h	/^  struct __minus$/;"	s	namespace:std
__mismatch_selector	5/parallel/find_selectors.h	/^  struct __mismatch_selector : public __generic_find_selector$/;"	s	namespace:__gnu_parallel
__modulus	cpp_src/valarray_before.h	/^  struct __modulus$/;"	s	namespace:std
__moneypunct_cache	cpp_src/locale_facets.h	/^      __moneypunct_cache(size_t __refs = 0) : facet(__refs),$/;"	f	struct:std::__moneypunct_cache
__moneypunct_cache	cpp_src/locale_facets.h	/^    struct __moneypunct_cache : public locale::facet$/;"	s	namespace:std
__msg_advance_oob	5/debug/formatter.h	/^    __msg_advance_oob,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_bad_bitset_flip	5/debug/formatter.h	/^    __msg_bad_bitset_flip,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_bad_bitset_read	5/debug/formatter.h	/^    __msg_bad_bitset_read,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_bad_bitset_write	5/debug/formatter.h	/^    __msg_bad_bitset_write,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_bad_dec	5/debug/formatter.h	/^    __msg_bad_dec,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_bad_deref	5/debug/formatter.h	/^    __msg_bad_deref,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_bad_inc	5/debug/formatter.h	/^    __msg_bad_inc,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_bucket_index_oob	5/debug/formatter.h	/^    __msg_bucket_index_oob,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_compare_different	5/debug/formatter.h	/^    __msg_compare_different,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_copy_singular	5/debug/formatter.h	/^    __msg_copy_singular,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_deref_istream	5/debug/formatter.h	/^    __msg_deref_istream,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_deref_istreambuf	5/debug/formatter.h	/^    __msg_deref_istreambuf,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_distance_bad	5/debug/formatter.h	/^    __msg_distance_bad,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_distance_different	5/debug/formatter.h	/^    __msg_distance_different,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_empty	5/debug/formatter.h	/^    __msg_empty,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_equal_allocs	5/debug/formatter.h	/^    __msg_equal_allocs,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_erase_after_bad	5/debug/formatter.h	/^    __msg_erase_after_bad,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_erase_bad	5/debug/formatter.h	/^    __msg_erase_bad,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_erase_different	5/debug/formatter.h	/^    __msg_erase_different,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_inc_istream	5/debug/formatter.h	/^    __msg_inc_istream,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_inc_istreambuf	5/debug/formatter.h	/^    __msg_inc_istreambuf,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_init_const_singular	5/debug/formatter.h	/^    __msg_init_const_singular,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_init_copy_singular	5/debug/formatter.h	/^    __msg_init_copy_singular,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_init_singular	5/debug/formatter.h	/^    __msg_init_singular,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_insert_after_end	5/debug/formatter.h	/^    __msg_insert_after_end,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_insert_different	5/debug/formatter.h	/^    __msg_insert_different,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_insert_range_from_self	5/debug/formatter.h	/^    __msg_insert_range_from_self$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_insert_singular	5/debug/formatter.h	/^    __msg_insert_singular,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_iter_compare_bad	5/debug/formatter.h	/^    __msg_iter_compare_bad,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_iter_order_bad	5/debug/formatter.h	/^    __msg_iter_order_bad,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_iter_subscript_oob	5/debug/formatter.h	/^    __msg_iter_subscript_oob,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_local_iter_compare_bad	5/debug/formatter.h	/^    __msg_local_iter_compare_bad,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_non_empty_range	5/debug/formatter.h	/^    __msg_non_empty_range,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_not_heap	5/debug/formatter.h	/^    __msg_not_heap,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_not_heap_pred	5/debug/formatter.h	/^    __msg_not_heap_pred,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_order_different	5/debug/formatter.h	/^    __msg_order_different,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_output_ostream	5/debug/formatter.h	/^    __msg_output_ostream,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_retreat_oob	5/debug/formatter.h	/^    __msg_retreat_oob,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_self_move_assign	5/debug/formatter.h	/^    __msg_self_move_assign,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_self_splice	5/debug/formatter.h	/^    __msg_self_splice,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_splice_alloc	5/debug/formatter.h	/^    __msg_splice_alloc,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_splice_bad	5/debug/formatter.h	/^    __msg_splice_bad,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_splice_other	5/debug/formatter.h	/^    __msg_splice_other,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_splice_overlap	5/debug/formatter.h	/^    __msg_splice_overlap,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_subscript_oob	5/debug/formatter.h	/^    __msg_subscript_oob,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_unpartitioned	5/debug/formatter.h	/^    __msg_unpartitioned,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_unpartitioned_pred	5/debug/formatter.h	/^    __msg_unpartitioned_pred,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_unsorted	5/debug/formatter.h	/^    __msg_unsorted,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_unsorted_pred	5/debug/formatter.h	/^    __msg_unsorted_pred,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_valid_load_factor	5/debug/formatter.h	/^    __msg_valid_load_factor,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_valid_range	5/debug/formatter.h	/^    __msg_valid_range,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__msg_valid_range2	5/debug/formatter.h	/^    __msg_valid_range2,$/;"	e	enum:__gnu_debug::_Debug_msg_id
__multiplies	cpp_src/valarray_before.h	/^  struct __multiplies$/;"	s	namespace:std
__multiway_merge_3_variant_sentinel_switch	5/parallel/multiway_merge.h	/^    struct __multiway_merge_3_variant_sentinel_switch$/;"	s	namespace:__gnu_parallel
__multiway_merge_3_variant_sentinel_switch	5/parallel/multiway_merge.h	/^    struct __multiway_merge_3_variant_sentinel_switch<true, _RAIterIterator,$/;"	s	namespace:__gnu_parallel
__multiway_merge_4_variant_sentinel_switch	5/parallel/multiway_merge.h	/^    struct __multiway_merge_4_variant_sentinel_switch$/;"	s	namespace:__gnu_parallel
__multiway_merge_4_variant_sentinel_switch	5/parallel/multiway_merge.h	/^    struct __multiway_merge_4_variant_sentinel_switch<true, _RAIterIterator,$/;"	s	namespace:__gnu_parallel
__multiway_merge_k_variant_sentinel_switch	5/parallel/multiway_merge.h	/^    struct __multiway_merge_k_variant_sentinel_switch$/;"	s	namespace:__gnu_parallel
__multiway_merge_k_variant_sentinel_switch	5/parallel/multiway_merge.h	/^    struct __multiway_merge_k_variant_sentinel_switch<false, __stable,$/;"	s	namespace:__gnu_parallel
__mutable_iterator	5/debug/formatter.h	/^      __mutable_iterator,$/;"	e	enum:__gnu_debug::_Error_formatter::_Constness
__n	cpp_src/boost_concept_check.h	/^    _Size_type __n;$/;"	m	struct:_ContainerConcept
__n	cpp_src/boost_concept_check.h	/^    _Size_type __n;$/;"	m	struct:_RandomAccessContainerConcept
__n	cpp_src/boost_concept_check.h	/^    typename _AssociativeContainer::size_type __n;$/;"	m	struct:_AssociativeContainerConcept
__n	cpp_src/boost_concept_check.h	/^    typename _Sequence::size_type __n;$/;"	m	struct:_SequenceConcept
__n	cpp_src/boost_concept_check.h	/^    typename std::iterator_traits<_Tp>::difference_type __n;$/;"	m	struct:_Mutable_RandomAccessIteratorConcept
__n	cpp_src/boost_concept_check.h	/^    typename std::iterator_traits<_Tp>::difference_type __n;$/;"	m	struct:_RandomAccessIteratorConcept
__negate	5/bits/predefined_ops.h	/^    __negate(_Iter_pred<_Predicate> __pred)$/;"	f	namespace:__gnu_cxx::__ops
__negate	cpp_src/valarray_before.h	/^  struct __negate$/;"	s	namespace:std
__new_val	5/parallel/for_each_selectors.h	/^      const _Tp& __new_val;$/;"	m	struct:__gnu_parallel::__replace_if_selector
__new_val	5/parallel/for_each_selectors.h	/^      const _Tp& __new_val;$/;"	m	struct:__gnu_parallel::__replace_selector
__nnode_u	5/ext/pb_ds/detail/tree_policy/node_metadata_selector.hpp	/^      typedef null_node_update<__it_type, __it_type, Cmp_Fn, _Alloc> __nnode_u;$/;"	t	struct:__gnu_pbds::detail::tree_node_metadata_dispatch
__nnode_u	5/ext/pb_ds/detail/trie_policy/node_metadata_selector.hpp	/^      typedef null_node_update<__it_type, __it_type, Cmp_Fn, _Alloc> __nnode_u;$/;"	t	struct:__gnu_pbds::detail::trie_node_metadata_dispatch
__node_u	5/ext/pb_ds/detail/tree_policy/node_metadata_selector.hpp	/^      typedef Node_Update<__it_type, __it_type, Cmp_Fn, _Alloc>	__node_u;$/;"	t	struct:__gnu_pbds::detail::tree_node_metadata_dispatch
__node_u	5/ext/pb_ds/detail/trie_policy/node_metadata_selector.hpp	/^      typedef Node_Update<__it_type, __it_type, Cmp_Fn, _Alloc>	__node_u;$/;"	t	struct:__gnu_pbds::detail::trie_node_metadata_dispatch
__non_diamond_repeat_mask	5/cxxabi.h	/^	__non_diamond_repeat_mask = 0x1, \/\/ Distinct instance of repeated base.$/;"	e	enum:__cxxabiv1::__vmi_class_type_info::__flags_masks
__normal_iterator	cpp_src/stl_iterator.h	/^        __normal_iterator(const __normal_iterator<_Iter,$/;"	f	class:__normal_iterator
__normal_iterator	cpp_src/stl_iterator.h	/^      __normal_iterator() : _M_current(_Iterator()) { }$/;"	f	class:__normal_iterator
__normal_iterator	cpp_src/stl_iterator.h	/^      __normal_iterator(const _Iterator& __i) : _M_current(__i) { }$/;"	f	class:__normal_iterator
__normal_iterator	cpp_src/stl_iterator.h	/^    class __normal_iterator$/;"	c
__not_contained	5/cxxabi.h	/^	__not_contained,$/;"	e	enum:__cxxabiv1::__class_type_info::__sub_kind
__not_equal_to	cpp_src/valarray_before.h	/^  struct __not_equal_to$/;"	s	namespace:std
__nothrowcopy	5/ext/pb_ds/detail/types_traits.hpp	/^	typedef no_throw_copies<Key, Mapped>		__nothrowcopy;$/;"	t	struct:__gnu_pbds::detail::types_traits
__num_base	cpp_src/locale_facets.h	/^  class __num_base$/;"	c	namespace:std
__num_get_type	cpp_src/basic_ios.h	/^						     __num_get_type;$/;"	t	class:std::basic_ios
__num_put_type	cpp_src/basic_ios.h	/^						     __num_put_type;$/;"	t	class:std::basic_ios
__numpunct_cache	cpp_src/locale_facets.h	/^      __numpunct_cache(size_t __refs = 0) : facet(__refs),$/;"	f	struct:std::__numpunct_cache
__numpunct_cache	cpp_src/locale_facets.h	/^    struct __numpunct_cache : public locale::facet$/;"	s	namespace:std
__object_info_base	5/profile/impl/profiler_node.h	/^    __object_info_base(__stack_t __stack)$/;"	f	class:__gnu_profile::__object_info_base
__object_info_base	5/profile/impl/profiler_node.h	/^  class __object_info_base$/;"	c	namespace:__gnu_profile
__objects_byte_size	5/profile/impl/profiler_trace.h	/^      std::size_t __objects_byte_size;$/;"	m	class:__gnu_profile::__trace_base
__offset	5/cxxabi.h	/^    __offset() const$/;"	f	class:__cxxabiv1::__base_class_type_info
__offset_flags	5/cxxabi.h	/^    long 			__offset_flags;  \/\/ Offset and info.$/;"	m	class:__cxxabiv1::__base_class_type_info
__offset_flags	5/cxxabi.h	/^    long long			__offset_flags;  \/\/ Offset and info.$/;"	m	class:__cxxabiv1::__base_class_type_info
__offset_flags_masks	5/cxxabi.h	/^    enum __offset_flags_masks$/;"	g	class:__cxxabiv1::__base_class_type_info
__offset_shift	5/cxxabi.h	/^	__offset_shift = 8          \/\/ Bits to shift offset.$/;"	e	enum:__cxxabiv1::__base_class_type_info::__offset_flags_masks
__open_output_file	5/profile/impl/profiler_trace.h	/^  __open_output_file(const char* __extension)$/;"	f	namespace:__gnu_profile
__opr_insert	5/profile/impl/profiler_list_to_vector.h	/^    __opr_insert(std::size_t __shift, std::size_t __size)$/;"	f	class:__gnu_profile::__list2vector_info
__opr_insert	5/profile/impl/profiler_vector_to_list.h	/^    __opr_insert(std::size_t __pos, std::size_t __num)$/;"	f	class:__gnu_profile::__vector2list_info
__opr_iterate	5/profile/impl/profiler_list_to_vector.h	/^    __opr_iterate(int __num)$/;"	f	class:__gnu_profile::__list2vector_info
__opr_iterate	5/profile/impl/profiler_vector_to_list.h	/^    __opr_iterate(int __num)$/;"	f	class:__gnu_profile::__vector2list_info
__opr_rewind	5/profile/impl/profiler_list_to_slist.h	/^    __opr_rewind()$/;"	f	class:__gnu_profile::__list2slist_info
__ops	5/bits/predefined_ops.h	/^namespace __ops$/;"	n	namespace:__gnu_cxx
__ostream_fill	cpp_src/ostream_insert.h	/^    __ostream_fill(basic_ostream<_CharT, _Traits>& __out, streamsize __n)$/;"	f	namespace:std
__ostream_insert	cpp_src/ostream_insert.h	/^    __ostream_insert(basic_ostream<_CharT, _Traits>& __out,$/;"	f	namespace:std
__ostream_write	cpp_src/ostream_insert.h	/^    __ostream_write(basic_ostream<_CharT, _Traits>& __out,$/;"	f	namespace:std
__p	cpp_src/boost_concept_check.h	/^    _Iterator __p;$/;"	m	struct:_SortedAssociativeContainerConcept
__p	cpp_src/boost_concept_check.h	/^    typename _Sequence::iterator __p, __q;$/;"	m	struct:_SequenceConcept
__pad	cpp_src/locale_facets.h	/^    struct __pad$/;"	s	namespace:std
__parallel_merge_advance	5/parallel/merge.h	/^    __parallel_merge_advance(_RAIter1& __begin1, _RAIter1 __end1,$/;"	f	namespace:__gnu_parallel
__parallel_nth_element	5/parallel/partition.h	/^    __parallel_nth_element(_RAIter __begin, _RAIter __nth, $/;"	f	namespace:__gnu_parallel
__parallel_partial_sort	5/parallel/partition.h	/^    __parallel_partial_sort(_RAIter __begin,$/;"	f	namespace:__gnu_parallel
__parallel_partial_sum	5/parallel/partial_sum.h	/^    __parallel_partial_sum(_IIter __begin, _IIter __end,$/;"	f	namespace:__gnu_parallel
__parallel_partial_sum_basecase	5/parallel/partial_sum.h	/^    __parallel_partial_sum_basecase(_IIter __begin, _IIter __end,$/;"	f	namespace:__gnu_parallel
__parallel_partial_sum_linear	5/parallel/partial_sum.h	/^    __parallel_partial_sum_linear(_IIter __begin, _IIter __end,$/;"	f	namespace:__gnu_parallel
__parallel_partition	5/parallel/partition.h	/^    __parallel_partition(_RAIter __begin, _RAIter __end,$/;"	f	namespace:__gnu_parallel
__parallel_random_shuffle	5/parallel/random_shuffle.h	/^    __parallel_random_shuffle(_RAIter __begin, _RAIter __end,$/;"	f	namespace:__gnu_parallel
__parallel_random_shuffle_drs	5/parallel/random_shuffle.h	/^    __parallel_random_shuffle_drs(_RAIter __begin, _RAIter __end,$/;"	f	namespace:__gnu_parallel
__parallel_random_shuffle_drs_pu	5/parallel/random_shuffle.h	/^    __parallel_random_shuffle_drs_pu(_DRSSorterPU<_RAIter,$/;"	f	namespace:__gnu_parallel
__parallel_set_difference	5/parallel/set_operations.h	/^    __parallel_set_difference(_IIter __begin1, _IIter __end1,$/;"	f	namespace:__gnu_parallel
__parallel_set_intersection	5/parallel/set_operations.h	/^    __parallel_set_intersection(_IIter __begin1, _IIter __end1,$/;"	f	namespace:__gnu_parallel
__parallel_set_operation	5/parallel/set_operations.h	/^    __parallel_set_operation(_IIter __begin1, _IIter __end1,$/;"	f	namespace:__gnu_parallel
__parallel_set_symmetric_difference	5/parallel/set_operations.h	/^    __parallel_set_symmetric_difference(_IIter __begin1, _IIter __end1,$/;"	f	namespace:__gnu_parallel
__parallel_set_union	5/parallel/set_operations.h	/^    __parallel_set_union(_IIter __begin1, _IIter __end1,$/;"	f	namespace:__gnu_parallel
__parallel_sort	5/parallel/sort.h	/^     __parallel_sort(_RAIter __begin, _RAIter __end,$/;"	f	namespace:__gnu_parallel
__parallel_sort	5/parallel/sort.h	/^    __parallel_sort(_RAIter __begin, _RAIter __end,$/;"	f	namespace:__gnu_parallel
__parallel_sort_qs	5/parallel/quicksort.h	/^    __parallel_sort_qs(_RAIter __begin, _RAIter __end,$/;"	f	namespace:__gnu_parallel
__parallel_sort_qs_conquer	5/parallel/quicksort.h	/^    __parallel_sort_qs_conquer(_RAIter __begin, _RAIter __end,$/;"	f	namespace:__gnu_parallel
__parallel_sort_qs_divide	5/parallel/quicksort.h	/^    __parallel_sort_qs_divide(_RAIter __begin, _RAIter __end,$/;"	f	namespace:__gnu_parallel
__parallel_sort_qsb	5/parallel/balanced_quicksort.h	/^    __parallel_sort_qsb(_RAIter __begin, _RAIter __end,$/;"	f	namespace:__gnu_parallel
__parallel_unique_copy	5/parallel/unique_copy.h	/^    __parallel_unique_copy(_IIter __first, _IIter __last,$/;"	f	namespace:__gnu_parallel
__partition	cpp_src/stl_algo.h	/^    __partition(_BidirectionalIterator __first, _BidirectionalIterator __last,$/;"	f	namespace:std
__partition	cpp_src/stl_algo.h	/^    __partition(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std
__pbase_type_info	5/cxxabi.h	/^    __pbase_type_info(const char* __n, int __quals,$/;"	f	class:__cxxabiv1::__pbase_type_info
__pbase_type_info	5/cxxabi.h	/^  class __pbase_type_info : public std::type_info$/;"	c	namespace:__cxxabiv1
__plus	cpp_src/valarray_before.h	/^  struct __plus$/;"	s	namespace:std
__pointee	5/cxxabi.h	/^    const std::type_info* 	__pointee; \/\/ Type of pointed to object.$/;"	m	class:__cxxabiv1::__pbase_type_info
__pointer_catch	5/cxxabi.h	/^  __pointer_catch (const __pbase_type_info *thrown_type,$/;"	f	class:__cxxabiv1::__pbase_type_info
__pointer_to_member_type_info	5/cxxabi.h	/^    __pointer_to_member_type_info(const char* __n, int __quals,$/;"	f	class:__cxxabiv1::__pointer_to_member_type_info
__pointer_to_member_type_info	5/cxxabi.h	/^  class __pointer_to_member_type_info : public __pbase_type_info$/;"	c	namespace:__cxxabiv1
__pointer_type_info	5/cxxabi.h	/^    __pointer_type_info(const char* __n, int __quals,$/;"	f	class:__cxxabiv1::__pointer_type_info
__pointer_type_info	5/cxxabi.h	/^  class __pointer_type_info : public __pbase_type_info$/;"	c	namespace:__cxxabiv1
__pop_heap	cpp_src/stl_heap.h	/^    __pop_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	namespace:std
__pos	cpp_src/boost_concept_check.h	/^    typename _MultipleAssociativeContainer::iterator __pos;$/;"	m	struct:_MultipleAssociativeContainerConcept
__pos_flag	cpp_src/boost_concept_check.h	/^    std::pair<typename _UniqueAssociativeContainer::iterator, bool> __pos_flag;$/;"	m	struct:_UniqueAssociativeContainerConcept
__possibly_stable_multiway_merge	5/parallel/multiway_mergesort.h	/^    struct __possibly_stable_multiway_merge$/;"	s	namespace:__gnu_parallel
__possibly_stable_multiway_merge	5/parallel/multiway_mergesort.h	/^    struct __possibly_stable_multiway_merge<false, Seq_RAIter,$/;"	s	namespace:__gnu_parallel
__possibly_stable_multiway_merge	5/parallel/multiway_mergesort.h	/^    struct __possibly_stable_multiway_merge<true, Seq_RAIter,$/;"	s	namespace:__gnu_parallel
__possibly_stable_sort	5/parallel/multiway_mergesort.h	/^    struct __possibly_stable_sort$/;"	s	namespace:__gnu_parallel
__possibly_stable_sort	5/parallel/multiway_mergesort.h	/^    struct __possibly_stable_sort<false, _RAIter, _Compare>$/;"	s	namespace:__gnu_parallel
__possibly_stable_sort	5/parallel/multiway_mergesort.h	/^    struct __possibly_stable_sort<true, _RAIter, _Compare>$/;"	s	namespace:__gnu_parallel
__pow	cpp_src/valarray_before.h	/^  struct __pow$/;"	s	namespace:std
__pred_iter	5/bits/predefined_ops.h	/^    __pred_iter(_Predicate __pred)$/;"	f	namespace:__gnu_cxx::__ops
__profcxx_hash_func_construct	5/profile/impl/profiler.h	237;"	d
__profcxx_hash_func_destruct	5/profile/impl/profiler.h	239;"	d
__profcxx_hashtable_size_construct	5/profile/impl/profiler.h	208;"	d
__profcxx_hashtable_size_destruct	5/profile/impl/profiler.h	212;"	d
__profcxx_hashtable_size_resize	5/profile/impl/profiler.h	210;"	d
__profcxx_init	5/profile/impl/profiler_trace.h	/^  __profcxx_init()$/;"	f	namespace:__gnu_profile
__profcxx_init_unconditional	5/profile/impl/profiler_trace.h	/^  __profcxx_init_unconditional()$/;"	f	namespace:__gnu_profile
__profcxx_is_invalid	5/profile/impl/profiler.h	193;"	d
__profcxx_is_off	5/profile/impl/profiler.h	195;"	d
__profcxx_is_on	5/profile/impl/profiler.h	194;"	d
__profcxx_list2slist_construct	5/profile/impl/profiler.h	291;"	d
__profcxx_list2slist_destruct	5/profile/impl/profiler.h	297;"	d
__profcxx_list2slist_operation	5/profile/impl/profiler.h	295;"	d
__profcxx_list2slist_rewind	5/profile/impl/profiler.h	293;"	d
__profcxx_list2vector_construct	5/profile/impl/profiler.h	271;"	d
__profcxx_list2vector_destruct	5/profile/impl/profiler.h	279;"	d
__profcxx_list2vector_insert	5/profile/impl/profiler.h	273;"	d
__profcxx_list2vector_invalid_operator	5/profile/impl/profiler.h	277;"	d
__profcxx_list2vector_iterate	5/profile/impl/profiler.h	275;"	d
__profcxx_map2umap_construct	5/profile/impl/profiler.h	308;"	d
__profcxx_map2umap_destruct	5/profile/impl/profiler.h	320;"	d
__profcxx_map2umap_erase	5/profile/impl/profiler.h	312;"	d
__profcxx_map2umap_find	5/profile/impl/profiler.h	318;"	d
__profcxx_map2umap_insert	5/profile/impl/profiler.h	310;"	d
__profcxx_map2umap_invalidate	5/profile/impl/profiler.h	316;"	d
__profcxx_map2umap_iterate	5/profile/impl/profiler.h	314;"	d
__profcxx_report	5/profile/impl/profiler.h	190;"	d
__profcxx_turn_off	5/profile/impl/profiler.h	192;"	d
__profcxx_turn_on	5/profile/impl/profiler.h	191;"	d
__profcxx_vector2list_construct	5/profile/impl/profiler.h	248;"	d
__profcxx_vector2list_destruct	5/profile/impl/profiler.h	258;"	d
__profcxx_vector2list_insert	5/profile/impl/profiler.h	250;"	d
__profcxx_vector2list_invalid_operator	5/profile/impl/profiler.h	254;"	d
__profcxx_vector2list_iterate	5/profile/impl/profiler.h	252;"	d
__profcxx_vector2list_resize	5/profile/impl/profiler.h	256;"	d
__profcxx_vector_size_construct	5/profile/impl/profiler.h	223;"	d
__profcxx_vector_size_destruct	5/profile/impl/profiler.h	227;"	d
__profcxx_vector_size_resize	5/profile/impl/profiler.h	225;"	d
__public_mask	5/cxxabi.h	/^	__public_mask = 0x2,$/;"	e	enum:__cxxabiv1::__base_class_type_info::__offset_flags_masks
__push_heap	cpp_src/stl_heap.h	/^    __push_heap(_RandomAccessIterator __first, _Distance __holeIndex,$/;"	f	namespace:std
__push_heap	cpp_src/stl_heap.h	/^    __push_heap(_RandomAccessIterator __first,$/;"	f	namespace:std
__q	cpp_src/boost_concept_check.h	/^    typename _Sequence::iterator __p, __q;$/;"	m	struct:_SequenceConcept
__qsb_conquer	5/parallel/balanced_quicksort.h	/^    __qsb_conquer(_QSBThreadLocal<_RAIter>** __tls,$/;"	f	namespace:__gnu_parallel
__qsb_divide	5/parallel/balanced_quicksort.h	/^    __qsb_divide(_RAIter __begin, _RAIter __end,$/;"	f	namespace:__gnu_parallel
__qsb_local_sort_with_helping	5/parallel/balanced_quicksort.h	/^    __qsb_local_sort_with_helping(_QSBThreadLocal<_RAIter>** __tls,$/;"	f	namespace:__gnu_parallel
__r	cpp_src/boost_concept_check.h	/^    _Return __r;$/;"	m	struct:_BinaryFunctionConcept
__r	cpp_src/boost_concept_check.h	/^    _Return __r;$/;"	m	struct:_UnaryFunctionConcept
__r	cpp_src/boost_concept_check.h	/^    std::pair<_Iterator,_Iterator> __r;$/;"	m	struct:_AssociativeContainerConcept
__r	cpp_src/boost_concept_check.h	/^    std::pair<_Iterator,_Iterator> __r;$/;"	m	struct:_SortedAssociativeContainerConcept
__random_number_pow2	5/parallel/random_shuffle.h	/^    __random_number_pow2(int __logp, _RandomNumberGenerator& __rng)$/;"	f	namespace:__gnu_parallel
__rb_verify	cpp_src/stl_tree.h	/^    _Rb_tree<_Key,_Val,_KeyOfValue,_Compare,_Alloc>::__rb_verify() const$/;"	f	class:std::_Rb_tree
__rd_log2	5/parallel/base.h	/^    __rd_log2(_Size __n)$/;"	f	namespace:__gnu_parallel
__read_cost_factors	5/profile/impl/profiler_trace.h	/^  __read_cost_factors()$/;"	f	namespace:__gnu_profile
__rebind_a	5/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp	/^      typedef typename _Alloc::template rebind<Value_Type>::other __rebind_a;$/;"	t	class:__gnu_pbds::detail::pairing_heap
__rebind_a	5/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp	/^      typedef typename _Alloc::template rebind<Value_Type>::other __rebind_a;$/;"	t	class:__gnu_pbds::detail::thin_heap
__rebind_a	5/ext/pb_ds/detail/types_traits.hpp	/^	typedef typename _Alloc::template rebind<Key>::other __rebind_a;$/;"	t	struct:__gnu_pbds::detail::types_traits
__rebind_at	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	typedef typename _Alloc::template rebind<_ATraits>    __rebind_at;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Node_base
__rebind_e	5/ext/pb_ds/detail/cond_dealtor.hpp	/^	typedef typename _Alloc::template rebind<Entry>	__rebind_e;$/;"	t	class:__gnu_pbds::detail::cond_dealtor
__rebind_h	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename _Alloc::template rebind<head>	__rebind_h;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
__rebind_h	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename _Alloc::template rebind<Head>	__rebind_h;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_CIter
__rebind_in	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename _Alloc::template rebind<inode> 	__rebind_in;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
__rebind_in	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename _Alloc::template rebind<Inode> 	__rebind_in;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_Node_citer
__rebind_in	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename _Alloc::template rebind<Inode> __rebind_in;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_CIter
__rebind_in	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename _Alloc::template rebind<_Inode>::other 	__rebind_in;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Inode
__rebind_ina	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename __rebind_in::other 		__rebind_ina;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
__rebind_inp	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^	typedef typename _Alloc::template rebind<__inp>::other 	__rebind_inp;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME::branch_bag
__rebind_k	5/ext/pb_ds/detail/trie_policy/sample_trie_access_traits.hpp	/^    typedef typename _Alloc::template rebind<key_type>	__rebind_k;$/;"	t	struct:__gnu_pbds::sample_trie_access_traits
__rebind_k	5/ext/pb_ds/trie_policy.hpp	/^    typedef typename _Alloc::template rebind<key_type>	  __rebind_k;$/;"	t	struct:__gnu_pbds::trie_string_access_traits
__rebind_l	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename _Alloc::template rebind<leaf>	__rebind_l;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
__rebind_l	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename _Alloc::template rebind<Leaf>	__rebind_l;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_CIter
__rebind_l	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename _Alloc::template rebind<Leaf>	__rebind_l;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_Node_citer
__rebind_l	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename _Alloc::template rebind<leaf>::other 	__rebind_l;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Inode
__rebind_m	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	  typedef typename _Alloc::template rebind<Metadata>	__rebind_m;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Metadata
__rebind_m	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename _Alloc::template rebind<metadata_type> __rebind_m;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_Node_citer
__rebind_m	5/ext/pb_ds/detail/types_traits.hpp	/^	typedef typename _Alloc::template rebind<Mapped>	__rebind_m;$/;"	t	struct:__gnu_pbds::detail::type_base
__rebind_m	5/ext/pb_ds/detail/types_traits.hpp	/^	typedef typename _Alloc::template rebind<null_type>  	__rebind_m;$/;"	t	struct:__gnu_pbds::detail::type_base
__rebind_m	5/ext/pb_ds/list_update_policy.hpp	/^      typedef typename _Alloc::template rebind<metadata_type> __rebind_m;$/;"	t	class:__gnu_pbds::lu_counter_policy
__rebind_m	5/ext/pb_ds/list_update_policy.hpp	/^     typedef typename _Alloc::template rebind<metadata_type> __rebind_m;$/;"	t	class:__gnu_pbds::lu_move_to_front_policy
__rebind_m	5/ext/pb_ds/tree_policy.hpp	/^    typedef typename _Alloc::template rebind<metadata_type>::other __rebind_m;$/;"	t	class:__gnu_pbds::tree_order_statistics_node_update
__rebind_m	5/ext/pb_ds/trie_policy.hpp	/^    typedef typename _Alloc::template rebind<metadata_type> __rebind_m;$/;"	t	class:__gnu_pbds::trie_order_statistics_node_update
__rebind_ma	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename __rebind_m::other 		__rebind_ma;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_Node_citer
__rebind_ma	5/ext/pb_ds/detail/types_traits.hpp	/^	typedef typename __rebind_m::other			__rebind_ma;$/;"	t	struct:__gnu_pbds::detail::type_base
__rebind_ma	5/ext/pb_ds/trie_policy.hpp	/^    typedef typename __rebind_m::other 			__rebind_ma;$/;"	t	class:__gnu_pbds::trie_order_statistics_node_update
__rebind_n	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename _Alloc::template rebind<node>	__rebind_n;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
__rebind_n	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	typedef typename _Alloc::template rebind<_Node_base>	__rebind_n;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Node_base
__rebind_n	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename _Alloc::template rebind<Node>	__rebind_n;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_CIter
__rebind_n	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename _Alloc::template rebind<Node>	__rebind_n;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_Node_citer
__rebind_n	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename _Alloc::template rebind<Node>	__rebind_n;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_Node_iter
__rebind_n	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename _Alloc::template rebind<base_type>	__rebind_n;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Inode
__rebind_n	5/ext/pb_ds/detail/rc_binomial_heap_/rc.hpp	/^      typedef typename _Alloc::template rebind<node>	 __rebind_n;$/;"	t	class:__gnu_pbds::detail::rc
__rebind_np	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename _Alloc::template rebind<node_pointer>::other __rebind_np;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Inode
__rebind_np	5/ext/pb_ds/detail/rc_binomial_heap_/rc.hpp	/^      typedef typename _Alloc::template rebind<node_pointer>  __rebind_np;$/;"	t	class:__gnu_pbds::detail::rc
__rebind_v	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	/^      typedef typename _Alloc::template rebind<value_type>	__rebind_v;$/;"	t	class:__gnu_pbds::detail::binary_heap
__rebind_v	5/ext/pb_ds/detail/binary_heap_/entry_cmp.hpp	/^	typedef typename _Alloc::template rebind<_VTp>		__rebind_v;$/;"	t	struct:__gnu_pbds::detail::entry_cmp
__rebind_v	5/ext/pb_ds/detail/binary_heap_/entry_pred.hpp	/^	typedef typename _Alloc::template rebind<_VTp>		__rebind_v;$/;"	t	struct:__gnu_pbds::detail::entry_pred
__rebind_v	5/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp	/^      typedef typename _Alloc::template rebind<Value_Type>::other __rebind_v;$/;"	t	class:__gnu_pbds::detail::binomial_heap_base
__rebind_v	5/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp	/^      typedef typename _Alloc::template rebind<Value_Type>	__rebind_v;$/;"	t	class:__gnu_pbds::detail::left_child_next_sibling_heap
__rebind_v	5/ext/pb_ds/detail/types_traits.hpp	/^	typedef typename _Alloc::template rebind<__value_type>	__rebind_v;$/;"	t	struct:__gnu_pbds::detail::type_base
__rebind_v	5/ext/pb_ds/detail/types_traits.hpp	/^	typedef typename _Alloc::template rebind<value_type>	__rebind_v;$/;"	t	struct:__gnu_pbds::detail::type_base
__rebind_v	5/ext/pb_ds/priority_queue.hpp	/^    typedef typename _Alloc::template rebind<_Tv>   	__rebind_v;$/;"	t	class:__gnu_pbds::priority_queue
__rebind_va	5/ext/pb_ds/detail/types_traits.hpp	/^       	typedef typename __rebind_v::other			__rebind_va;$/;"	t	struct:__gnu_pbds::detail::type_base
__rebind_va	5/ext/pb_ds/priority_queue.hpp	/^    typedef typename __rebind_v::other			__rebind_va;$/;"	t	class:__gnu_pbds::priority_queue
__record_erase	5/profile/impl/profiler_map_to_unordered_map.h	/^    __record_erase(std::size_t __size, std::size_t __count)$/;"	f	class:__gnu_profile::__map2umap_info
__record_find	5/profile/impl/profiler_map_to_unordered_map.h	/^    __record_find(std::size_t __size)$/;"	f	class:__gnu_profile::__map2umap_info
__record_insert	5/profile/impl/profiler_map_to_unordered_map.h	/^    __record_insert(std::size_t __size, std::size_t __count)$/;"	f	class:__gnu_profile::__map2umap_info
__record_iterate	5/profile/impl/profiler_map_to_unordered_map.h	/^    __record_iterate(int __count)$/;"	f	class:__gnu_profile::__map2umap_info
__record_operation	5/profile/impl/profiler_list_to_slist.h	/^    __record_operation()$/;"	f	class:__gnu_profile::__list2slist_info
__reentrance_guard	5/profile/impl/profiler.h	/^    __reentrance_guard() { }$/;"	f	struct:__gnu_profile::__reentrance_guard
__reentrance_guard	5/profile/impl/profiler.h	/^  struct __reentrance_guard$/;"	s	namespace:__gnu_profile
__remove	5/profile/impl/profiler_algos.h	/^    __remove(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:__gnu_profile
__replace_if_selector	5/parallel/for_each_selectors.h	/^      __replace_if_selector(const _Tp &__new_val) : __new_val(__new_val) { }$/;"	f	struct:__gnu_parallel::__replace_if_selector
__replace_if_selector	5/parallel/for_each_selectors.h	/^    struct __replace_if_selector : public __generic_for_each_selector<_It>$/;"	s	namespace:__gnu_parallel
__replace_selector	5/parallel/for_each_selectors.h	/^      __replace_selector(const _Tp &__new_val) : __new_val(__new_val) {}$/;"	f	struct:__gnu_parallel::__replace_selector
__replace_selector	5/parallel/for_each_selectors.h	/^    struct __replace_selector : public __generic_for_each_selector<_It>$/;"	s	namespace:__gnu_parallel
__report	5/profile/impl/profiler_trace.h	/^  __report()$/;"	f	namespace:__gnu_profile
__report_and_free	5/profile/impl/profiler_trace.h	/^  __report_and_free()$/;"	f	namespace:__gnu_profile
__resize	5/profile/impl/profiler_container_size.h	/^    __resize(std::size_t __from, std::size_t __to)$/;"	f	class:__gnu_profile::__container_size_info
__resize	5/profile/impl/profiler_list_to_vector.h	/^    __resize()$/;"	f	class:__gnu_profile::__list2vector_info
__resize	5/profile/impl/profiler_list_to_vector.h	/^    __resize(std::size_t __from, std::size_t)$/;"	f	class:__gnu_profile::__list2vector_info
__resize	5/profile/impl/profiler_vector_to_list.h	/^    __resize()$/;"	f	class:__gnu_profile::__vector2list_info
__resize	5/profile/impl/profiler_vector_to_list.h	/^    __resize(std::size_t __from, std::size_t)$/;"	f	class:__gnu_profile::__vector2list_info
__resize_cost	5/profile/impl/profiler_container_size.h	/^    __resize_cost(std::size_t __from, std::size_t)$/;"	f	class:__gnu_profile::__container_size_info
__restrict_mask	5/cxxabi.h	/^	__restrict_mask = 0x4,$/;"	e	enum:__cxxabiv1::__pbase_type_info::__masks
__retire_object	5/profile/impl/profiler_trace.h	/^    __retire_object(__object_info* __obj_info)$/;"	f	class:__gnu_profile::__trace_base
__reverse	cpp_src/stl_algo.h	/^    __reverse(_BidirectionalIterator __first, _BidirectionalIterator __last,$/;"	f	namespace:std
__reverse	cpp_src/stl_algo.h	/^    __reverse(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	namespace:std
__rotate	cpp_src/stl_algo.h	/^    __rotate(_BidirectionalIterator __first,$/;"	f	namespace:std
__rotate	cpp_src/stl_algo.h	/^    __rotate(_ForwardIterator __first,$/;"	f	namespace:std
__rotate	cpp_src/stl_algo.h	/^    __rotate(_RandomAccessIterator __first,$/;"	f	namespace:std
__rotate_adaptive	cpp_src/stl_algo.h	/^    __rotate_adaptive(_BidirectionalIterator1 __first,$/;"	f	namespace:std
__round_up_to_pow2	5/parallel/random_shuffle.h	/^    __round_up_to_pow2(_Tp __x)$/;"	f	namespace:__gnu_parallel
__safe_bool	5/bits/exception_ptr.h	/^      typedef void (exception_ptr::*__safe_bool)();$/;"	t	class:std::__exception_ptr::exception_ptr
__scale_down	5/parallel/random_number.h	/^    __scale_down(uint64_t __x,$/;"	f	class:__gnu_parallel::_RandomNumber
__search_n	cpp_src/stl_algo.h	/^    __search_n(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std
__search_n	cpp_src/stl_algo.h	/^    __search_n(_RandomAccessIter __first, _RandomAccessIter __last,$/;"	f	namespace:std
__search_template	5/parallel/search.h	/^    __search_template(__RAIter1 __begin1, __RAIter1 __end1,$/;"	f	namespace:__gnu_parallel
__second	cpp_src/boost_concept_check.h	/^    _Second __second;$/;"	m	struct:_BinaryFunctionConcept
__second_empty	5/parallel/set_operations.h	/^      __second_empty(_IIter __a, _IIter __b, _OutputIterator __out) const$/;"	f	struct:__gnu_parallel::__difference_func
__second_empty	5/parallel/set_operations.h	/^      __second_empty(_IIter __a, _IIter __b, _OutputIterator __out) const$/;"	f	struct:__gnu_parallel::__symmetric_difference_func
__second_empty	5/parallel/set_operations.h	/^      __second_empty(_IIter __a, _IIter __b, _OutputIterator __out) const$/;"	f	struct:__gnu_parallel::__union_func
__second_empty	5/parallel/set_operations.h	/^      __second_empty(_IIter, _IIter, _OutputIterator __out) const$/;"	f	struct:__gnu_parallel::__intersection_func
__sequence	5/debug/formatter.h	/^	__sequence,$/;"	e	enum:__gnu_debug::_Error_formatter::_Parameter::__anon1
__sequential_multiway_merge	5/parallel/multiway_merge.h	/^    __sequential_multiway_merge(_RAIterIterator __seqs_begin,$/;"	f	namespace:__gnu_parallel
__sequential_random_shuffle	5/parallel/random_shuffle.h	/^    __sequential_random_shuffle(_RAIter __begin, _RAIter __end,$/;"	f	namespace:__gnu_parallel
__set_cost_factors	5/profile/impl/profiler_trace.h	/^  __set_cost_factors()$/;"	f	namespace:__gnu_profile
__set_invalid	5/profile/impl/profiler_node.h	/^    __set_invalid()$/;"	f	class:__gnu_profile::__object_info_base
__set_iterate_costs	5/profile/impl/profiler_map_to_unordered_map.h	/^    __set_iterate_costs()$/;"	f	class:__gnu_profile::__map2umap_info
__set_list_cost	5/profile/impl/profiler_list_to_vector.h	/^    __set_list_cost(float __lc)$/;"	f	class:__gnu_profile::__list2vector_info
__set_list_cost	5/profile/impl/profiler_vector_to_list.h	/^    __set_list_cost(float __lc)$/;"	f	class:__gnu_profile::__vector2list_info
__set_max_mem	5/profile/impl/profiler_trace.h	/^  __set_max_mem()$/;"	f	namespace:__gnu_profile
__set_max_stack_trace_depth	5/profile/impl/profiler_trace.h	/^  __set_max_stack_trace_depth()$/;"	f	namespace:__gnu_profile
__set_max_warn_count	5/profile/impl/profiler_trace.h	/^  __set_max_warn_count()$/;"	f	namespace:__gnu_profile
__set_trace_path	5/profile/impl/profiler_trace.h	/^  __set_trace_path()$/;"	f	namespace:__gnu_profile
__set_vector_cost	5/profile/impl/profiler_list_to_vector.h	/^    __set_vector_cost(float __vc)$/;"	f	class:__gnu_profile::__list2vector_info
__set_vector_cost	5/profile/impl/profiler_vector_to_list.h	/^    __set_vector_cost(float __vc)$/;"	f	class:__gnu_profile::__vector2list_info
__shift_count	5/profile/impl/profiler_list_to_vector.h	/^    __shift_count()$/;"	f	class:__gnu_profile::__list2vector_info
__shift_count	5/profile/impl/profiler_vector_to_list.h	/^    __shift_count()$/;"	f	class:__gnu_profile::__vector2list_info
__shift_left	cpp_src/valarray_before.h	/^  struct __shift_left$/;"	s	namespace:std
__shift_right	cpp_src/valarray_before.h	/^  struct __shift_right$/;"	s	namespace:std
__shrink	5/parallel/list_partition.h	/^    __shrink(std::vector<_IIter>& __os_starts, size_t& __count_to_two,$/;"	f	namespace:__gnu_parallel
__shrink_and_double	5/parallel/list_partition.h	/^    __shrink_and_double(std::vector<_IIter>& __os_starts,$/;"	f	namespace:__gnu_parallel
__si_class_type_info	5/cxxabi.h	/^    __si_class_type_info(const char *__n, const __class_type_info *__base)$/;"	f	class:__cxxabiv1::__si_class_type_info
__si_class_type_info	5/cxxabi.h	/^  class __si_class_type_info : public __class_type_info$/;"	c	namespace:__cxxabiv1
__simple	5/ext/pb_ds/detail/types_traits.hpp	/^	static const bool __simple = is_simple<Key>::value$/;"	m	struct:__gnu_pbds::detail::no_throw_copies
__sin	cpp_src/valarray_before.h	/^  struct __sin$/;"	s	namespace:std
__singular	5/debug/formatter.h	/^      __singular,      \/\/ singular, may still be attached to a sequence$/;"	e	enum:__gnu_debug::_Error_formatter::_Iterator_state
__sinh	cpp_src/valarray_before.h	/^  struct __sinh$/;"	s	namespace:std
__size	5/profile/impl/profiler_node.h	/^  __size(__stack_t __stack)$/;"	f	namespace:__gnu_profile
__sqrt	cpp_src/valarray_before.h	/^  struct __sqrt$/;"	s	namespace:std
__stable_partition_adaptive	cpp_src/stl_algo.h	/^    __stable_partition_adaptive(_ForwardIterator __first,$/;"	f	namespace:std
__stable_sort_adaptive	cpp_src/stl_algo.h	/^    __stable_sort_adaptive(_RandomAccessIterator __first,$/;"	f	namespace:std
__stack	5/profile/impl/profiler_node.h	/^    __stack() const$/;"	f	class:__gnu_profile::__object_info_base
__stack_hash	5/profile/impl/profiler_node.h	/^  class __stack_hash $/;"	c	namespace:__gnu_profile
__stack_max_depth	5/profile/impl/profiler_trace.h	/^  __stack_max_depth()$/;"	f	namespace:__gnu_profile
__stack_npt	5/profile/impl/profiler_node.h	/^  typedef std::_GLIBCXX_STD_C::vector<__instruction_address_t> __stack_npt;$/;"	t	namespace:__gnu_profile
__stack_t	5/profile/impl/profiler_node.h	/^  typedef __stack_npt* __stack_t;$/;"	t	namespace:__gnu_profile
__stack_table	5/profile/impl/profiler_trace.h	/^      __stack_table_t __stack_table;$/;"	m	class:__gnu_profile::__trace_base
__stack_table_byte_size	5/profile/impl/profiler_trace.h	/^      std::size_t __stack_table_byte_size;$/;"	m	class:__gnu_profile::__trace_base
__stack_table_t	5/profile/impl/profiler_trace.h	/^					  __stack_hash> __stack_table_t;$/;"	t	class:__gnu_profile::__trace_base
__state_type	5/profile/impl/profiler_state.h	/^  enum __state_type { __ON, __OFF, __INVALID };$/;"	g	namespace:__gnu_profile
__static_assert	5/ext/pb_ds/detail/type_utils.hpp	/^    struct __static_assert<true>$/;"	s	namespace:__gnu_pbds::detail
__static_assert_dumclass	5/ext/pb_ds/detail/type_utils.hpp	/^    struct __static_assert_dumclass$/;"	s	namespace:__gnu_pbds::detail
__string	5/debug/formatter.h	/^	__string$/;"	e	enum:__gnu_debug::_Error_formatter::_Parameter::__anon1
__string_type	cpp_src/locale_facets.h	/^      typedef basic_string<_CharT>	__string_type;$/;"	t	class:std::__timepunct
__string_type	cpp_src/locale_facets.h	/^      typedef basic_string<_CharT>	__string_type;$/;"	t	class:std::time_get
__sub_kind	5/cxxabi.h	/^    enum __sub_kind$/;"	g	class:__cxxabiv1::__class_type_info
__sun_awt_CausedFocusEvent__	5/sun/awt/CausedFocusEvent.h	5;"	d
__sun_misc_ServiceConfigurationError__	5/sun/misc/ServiceConfigurationError.h	5;"	d
__sun_misc_Service__	5/sun/misc/Service.h	5;"	d
__sun_misc_Unsafe__	5/sun/misc/Unsafe.h	5;"	d
__sun_reflect_Reflection__	5/sun/reflect/Reflection.h	5;"	d
__sun_reflect_annotation_AnnotationInvocationHandler__	5/sun/reflect/annotation/AnnotationInvocationHandler.h	5;"	d
__sun_reflect_annotation_AnnotationParser__	5/sun/reflect/annotation/AnnotationParser.h	5;"	d
__sun_reflect_annotation_AnnotationType__	5/sun/reflect/annotation/AnnotationType.h	5;"	d
__sun_reflect_annotation_EnumConstantNotPresentExceptionProxy__	5/sun/reflect/annotation/EnumConstantNotPresentExceptionProxy.h	5;"	d
__sun_reflect_annotation_ExceptionProxy__	5/sun/reflect/annotation/ExceptionProxy.h	5;"	d
__sun_reflect_misc_ReflectUtil__	5/sun/reflect/misc/ReflectUtil.h	5;"	d
__symmetric_difference_func	5/parallel/set_operations.h	/^      __symmetric_difference_func(_Compare __comp) : _M_comp(__comp) {}$/;"	f	struct:__gnu_parallel::__symmetric_difference_func
__symmetric_difference_func	5/parallel/set_operations.h	/^    struct __symmetric_difference_func$/;"	s	namespace:__gnu_parallel
__t	cpp_src/boost_concept_check.h	/^    _ValueT __t;$/;"	m	struct:_OutputIteratorConcept
__t	cpp_src/boost_concept_check.h	/^    typename _BackInsertionSequence::value_type __t;$/;"	m	struct:_BackInsertionSequenceConcept
__t	cpp_src/boost_concept_check.h	/^    typename _FrontInsertionSequence::value_type __t;$/;"	m	struct:_FrontInsertionSequenceConcept
__t	cpp_src/boost_concept_check.h	/^    typename _MultipleAssociativeContainer::value_type __t;$/;"	m	struct:_MultipleAssociativeContainerConcept
__t	cpp_src/boost_concept_check.h	/^    typename _Sequence::value_type __t;$/;"	m	struct:_SequenceConcept
__t	cpp_src/boost_concept_check.h	/^    typename _SortedAssociativeContainer::value_type __t;$/;"	m	struct:_SortedAssociativeContainerConcept
__t	cpp_src/boost_concept_check.h	/^    typename _UniqueAssociativeContainer::value_type __t;$/;"	m	struct:_UniqueAssociativeContainerConcept
__tan	cpp_src/valarray_before.h	/^  struct __tan$/;"	s	namespace:std
__tanh	cpp_src/valarray_before.h	/^  struct __tanh$/;"	s	namespace:std
__thread_default	5/ext/mt_allocator.h	621;"	d
__thread_default	5/ext/mt_allocator.h	761;"	d
__throw_container_error	5/ext/pb_ds/exception.hpp	/^  __throw_container_error()$/;"	f	namespace:__gnu_pbds
__throw_exception_again	5/bits/exception_defines.h	37;"	d
__throw_exception_again	5/bits/exception_defines.h	42;"	d
__throw_exception_again	cpp_src/exception_defines.h	45;"	d
__throw_exception_again	cpp_src/exception_defines.h	48;"	d
__throw_insert_error	5/ext/pb_ds/exception.hpp	/^  __throw_insert_error()$/;"	f	namespace:__gnu_pbds
__throw_join_error	5/ext/pb_ds/exception.hpp	/^  __throw_join_error()$/;"	f	namespace:__gnu_pbds
__throw_resize_error	5/ext/pb_ds/exception.hpp	/^  __throw_resize_error()$/;"	f	namespace:__gnu_pbds
__timepunct	cpp_src/locale_facets.h	/^    class __timepunct : public locale::facet$/;"	c	namespace:std
__timepunct_cache	cpp_src/locale_facets.h	/^      __timepunct_cache(size_t __refs = 0) : facet(__refs),$/;"	f	struct:std::__timepunct_cache
__timepunct_cache	cpp_src/locale_facets.h	/^    struct __timepunct_cache : public locale::facet$/;"	s	namespace:std
__top_n	5/profile/impl/profiler_algos.h	/^    __top_n(const _Container& __input, _Container& __output,$/;"	f	namespace:__gnu_profile
__trace_base	5/profile/impl/profiler_trace.h	/^      __trace_base()$/;"	f	class:__gnu_profile::__trace_base
__trace_base	5/profile/impl/profiler_trace.h	/^    class __trace_base$/;"	c	namespace:__gnu_profile
__trace_container_size	5/profile/impl/profiler_container_size.h	/^    __trace_container_size()$/;"	f	class:__gnu_profile::__trace_container_size
__trace_container_size	5/profile/impl/profiler_container_size.h	/^  class __trace_container_size$/;"	c	namespace:__gnu_profile
__trace_hash_func	5/profile/impl/profiler_hash_func.h	/^    __trace_hash_func()$/;"	f	class:__gnu_profile::__trace_hash_func
__trace_hash_func	5/profile/impl/profiler_hash_func.h	/^  class __trace_hash_func$/;"	c	namespace:__gnu_profile
__trace_hash_func_construct	5/profile/impl/profiler_hash_func.h	/^  __trace_hash_func_construct()$/;"	f	namespace:__gnu_profile
__trace_hash_func_destruct	5/profile/impl/profiler_hash_func.h	/^  __trace_hash_func_destruct(__hashfunc_info* __obj_info,$/;"	f	namespace:__gnu_profile
__trace_hash_func_free	5/profile/impl/profiler_hash_func.h	/^  __trace_hash_func_free()$/;"	f	namespace:__gnu_profile
__trace_hash_func_init	5/profile/impl/profiler_hash_func.h	/^  __trace_hash_func_init()$/;"	f	namespace:__gnu_profile
__trace_hash_func_report	5/profile/impl/profiler_hash_func.h	/^  __trace_hash_func_report(FILE* __f, __warning_vector_t& __warnings)$/;"	f	namespace:__gnu_profile
__trace_hashtable_size	5/profile/impl/profiler_hashtable_size.h	/^    __trace_hashtable_size()$/;"	f	class:__gnu_profile::__trace_hashtable_size
__trace_hashtable_size	5/profile/impl/profiler_hashtable_size.h	/^  class __trace_hashtable_size$/;"	c	namespace:__gnu_profile
__trace_hashtable_size_construct	5/profile/impl/profiler_hashtable_size.h	/^  __trace_hashtable_size_construct(std::size_t __num)$/;"	f	namespace:__gnu_profile
__trace_hashtable_size_destruct	5/profile/impl/profiler_hashtable_size.h	/^  __trace_hashtable_size_destruct(__container_size_info* __obj_info,$/;"	f	namespace:__gnu_profile
__trace_hashtable_size_free	5/profile/impl/profiler_hashtable_size.h	/^  __trace_hashtable_size_free()$/;"	f	namespace:__gnu_profile
__trace_hashtable_size_init	5/profile/impl/profiler_hashtable_size.h	/^  __trace_hashtable_size_init()$/;"	f	namespace:__gnu_profile
__trace_hashtable_size_report	5/profile/impl/profiler_hashtable_size.h	/^  __trace_hashtable_size_report(FILE* __f, __warning_vector_t& __warnings)$/;"	f	namespace:__gnu_profile
__trace_hashtable_size_resize	5/profile/impl/profiler_hashtable_size.h	/^  __trace_hashtable_size_resize(__container_size_info* __obj_info,$/;"	f	namespace:__gnu_profile
__trace_list_to_slist	5/profile/impl/profiler_list_to_slist.h	/^    __trace_list_to_slist()$/;"	f	class:__gnu_profile::__trace_list_to_slist
__trace_list_to_slist	5/profile/impl/profiler_list_to_slist.h	/^  class __trace_list_to_slist$/;"	c	namespace:__gnu_profile
__trace_list_to_slist_construct	5/profile/impl/profiler_list_to_slist.h	/^  __trace_list_to_slist_construct()$/;"	f	namespace:__gnu_profile
__trace_list_to_slist_destruct	5/profile/impl/profiler_list_to_slist.h	/^  __trace_list_to_slist_destruct(__list2slist_info* __obj_info)$/;"	f	namespace:__gnu_profile
__trace_list_to_slist_free	5/profile/impl/profiler_list_to_slist.h	/^  __trace_list_to_slist_free()$/;"	f	namespace:__gnu_profile
__trace_list_to_slist_init	5/profile/impl/profiler_list_to_slist.h	/^  __trace_list_to_slist_init()$/;"	f	namespace:__gnu_profile
__trace_list_to_slist_operation	5/profile/impl/profiler_list_to_slist.h	/^  __trace_list_to_slist_operation(__list2slist_info* __obj_info) $/;"	f	namespace:__gnu_profile
__trace_list_to_slist_report	5/profile/impl/profiler_list_to_slist.h	/^  __trace_list_to_slist_report(FILE* __f, __warning_vector_t& __warnings)$/;"	f	namespace:__gnu_profile
__trace_list_to_slist_rewind	5/profile/impl/profiler_list_to_slist.h	/^  __trace_list_to_slist_rewind(__list2slist_info* __obj_info) $/;"	f	namespace:__gnu_profile
__trace_list_to_vector	5/profile/impl/profiler_list_to_vector.h	/^    __trace_list_to_vector()$/;"	f	class:__gnu_profile::__trace_list_to_vector
__trace_list_to_vector	5/profile/impl/profiler_list_to_vector.h	/^  class __trace_list_to_vector$/;"	c	namespace:__gnu_profile
__trace_list_to_vector_construct	5/profile/impl/profiler_list_to_vector.h	/^  __trace_list_to_vector_construct()$/;"	f	namespace:__gnu_profile
__trace_list_to_vector_destruct	5/profile/impl/profiler_list_to_vector.h	/^  __trace_list_to_vector_destruct(__list2vector_info* __obj_info)$/;"	f	namespace:__gnu_profile
__trace_list_to_vector_free	5/profile/impl/profiler_list_to_vector.h	/^  __trace_list_to_vector_free()$/;"	f	namespace:__gnu_profile
__trace_list_to_vector_init	5/profile/impl/profiler_list_to_vector.h	/^  __trace_list_to_vector_init()$/;"	f	namespace:__gnu_profile
__trace_list_to_vector_insert	5/profile/impl/profiler_list_to_vector.h	/^  __trace_list_to_vector_insert(__list2vector_info* __obj_info,$/;"	f	namespace:__gnu_profile
__trace_list_to_vector_invalid_operator	5/profile/impl/profiler_list_to_vector.h	/^  __trace_list_to_vector_invalid_operator(__list2vector_info* __obj_info)$/;"	f	namespace:__gnu_profile
__trace_list_to_vector_iterate	5/profile/impl/profiler_list_to_vector.h	/^  __trace_list_to_vector_iterate(__list2vector_info* __obj_info,$/;"	f	namespace:__gnu_profile
__trace_list_to_vector_report	5/profile/impl/profiler_list_to_vector.h	/^  __trace_list_to_vector_report(FILE* __f, __warning_vector_t& __warnings)$/;"	f	namespace:__gnu_profile
__trace_list_to_vector_resize	5/profile/impl/profiler_list_to_vector.h	/^  __trace_list_to_vector_resize(__list2vector_info* __obj_info, $/;"	f	namespace:__gnu_profile
__trace_map2umap	5/profile/impl/profiler_map_to_unordered_map.h	/^    __trace_map2umap()$/;"	f	class:__gnu_profile::__trace_map2umap
__trace_map2umap	5/profile/impl/profiler_map_to_unordered_map.h	/^  class __trace_map2umap$/;"	c	namespace:__gnu_profile
__trace_map_to_unordered_map_construct	5/profile/impl/profiler_map_to_unordered_map.h	/^  __trace_map_to_unordered_map_construct()$/;"	f	namespace:__gnu_profile
__trace_map_to_unordered_map_destruct	5/profile/impl/profiler_map_to_unordered_map.h	/^  __trace_map_to_unordered_map_destruct(__map2umap_info* __info)$/;"	f	namespace:__gnu_profile
__trace_map_to_unordered_map_erase	5/profile/impl/profiler_map_to_unordered_map.h	/^  __trace_map_to_unordered_map_erase(__map2umap_info* __info,$/;"	f	namespace:__gnu_profile
__trace_map_to_unordered_map_find	5/profile/impl/profiler_map_to_unordered_map.h	/^  __trace_map_to_unordered_map_find(__map2umap_info* __info,$/;"	f	namespace:__gnu_profile
__trace_map_to_unordered_map_free	5/profile/impl/profiler_map_to_unordered_map.h	/^  __trace_map_to_unordered_map_free()$/;"	f	namespace:__gnu_profile
__trace_map_to_unordered_map_init	5/profile/impl/profiler_map_to_unordered_map.h	/^  __trace_map_to_unordered_map_init()$/;"	f	namespace:__gnu_profile
__trace_map_to_unordered_map_insert	5/profile/impl/profiler_map_to_unordered_map.h	/^  __trace_map_to_unordered_map_insert(__map2umap_info* __info,$/;"	f	namespace:__gnu_profile
__trace_map_to_unordered_map_invalidate	5/profile/impl/profiler_map_to_unordered_map.h	/^  __trace_map_to_unordered_map_invalidate(__map2umap_info* __info)$/;"	f	namespace:__gnu_profile
__trace_map_to_unordered_map_iterate	5/profile/impl/profiler_map_to_unordered_map.h	/^  __trace_map_to_unordered_map_iterate(__map2umap_info* __info,$/;"	f	namespace:__gnu_profile
__trace_map_to_unordered_map_report	5/profile/impl/profiler_map_to_unordered_map.h	/^  __trace_map_to_unordered_map_report(FILE* __f,$/;"	f	namespace:__gnu_profile
__trace_mutex	5/profile/impl/profiler_trace.h	/^      __gnu_cxx::__mutex __trace_mutex;$/;"	m	class:__gnu_profile::__trace_base
__trace_report	5/profile/impl/profiler_trace.h	/^    __trace_report(__trace_base<__object_info, __stack_info>* __cont,$/;"	f	namespace:__gnu_profile
__trace_vector_size	5/profile/impl/profiler_vector_size.h	/^    __trace_vector_size()$/;"	f	class:__gnu_profile::__trace_vector_size
__trace_vector_size	5/profile/impl/profiler_vector_size.h	/^  class __trace_vector_size$/;"	c	namespace:__gnu_profile
__trace_vector_size_construct	5/profile/impl/profiler_vector_size.h	/^  __trace_vector_size_construct(std::size_t __num)$/;"	f	namespace:__gnu_profile
__trace_vector_size_destruct	5/profile/impl/profiler_vector_size.h	/^  __trace_vector_size_destruct(__container_size_info* __obj_info,$/;"	f	namespace:__gnu_profile
__trace_vector_size_free	5/profile/impl/profiler_vector_size.h	/^  __trace_vector_size_free()$/;"	f	namespace:__gnu_profile
__trace_vector_size_init	5/profile/impl/profiler_vector_size.h	/^  __trace_vector_size_init()$/;"	f	namespace:__gnu_profile
__trace_vector_size_report	5/profile/impl/profiler_vector_size.h	/^  __trace_vector_size_report(FILE* __f, __warning_vector_t& __warnings)$/;"	f	namespace:__gnu_profile
__trace_vector_size_resize	5/profile/impl/profiler_vector_size.h	/^  __trace_vector_size_resize(__container_size_info* __obj_info,$/;"	f	namespace:__gnu_profile
__trace_vector_to_list	5/profile/impl/profiler_vector_to_list.h	/^    __trace_vector_to_list()$/;"	f	class:__gnu_profile::__trace_vector_to_list
__trace_vector_to_list	5/profile/impl/profiler_vector_to_list.h	/^  class __trace_vector_to_list$/;"	c	namespace:__gnu_profile
__trace_vector_to_list_construct	5/profile/impl/profiler_vector_to_list.h	/^  __trace_vector_to_list_construct()$/;"	f	namespace:__gnu_profile
__trace_vector_to_list_destruct	5/profile/impl/profiler_vector_to_list.h	/^  __trace_vector_to_list_destruct(__vector2list_info* __obj_info)$/;"	f	namespace:__gnu_profile
__trace_vector_to_list_free	5/profile/impl/profiler_vector_to_list.h	/^  __trace_vector_to_list_free()$/;"	f	namespace:__gnu_profile
__trace_vector_to_list_init	5/profile/impl/profiler_vector_to_list.h	/^  __trace_vector_to_list_init()$/;"	f	namespace:__gnu_profile
__trace_vector_to_list_insert	5/profile/impl/profiler_vector_to_list.h	/^  __trace_vector_to_list_insert(__vector2list_info* __obj_info,$/;"	f	namespace:__gnu_profile
__trace_vector_to_list_invalid_operator	5/profile/impl/profiler_vector_to_list.h	/^  __trace_vector_to_list_invalid_operator(__vector2list_info* __obj_info)$/;"	f	namespace:__gnu_profile
__trace_vector_to_list_iterate	5/profile/impl/profiler_vector_to_list.h	/^  __trace_vector_to_list_iterate(__vector2list_info* __obj_info, int)$/;"	f	namespace:__gnu_profile
__trace_vector_to_list_report	5/profile/impl/profiler_vector_to_list.h	/^  __trace_vector_to_list_report(FILE* __f, __warning_vector_t& __warnings)$/;"	f	namespace:__gnu_profile
__trace_vector_to_list_resize	5/profile/impl/profiler_vector_to_list.h	/^  __trace_vector_to_list_resize(__vector2list_info* __obj_info,$/;"	f	namespace:__gnu_profile
__traits_type	5/ext/pb_ds/detail/branch_policy/null_node_metadata.hpp	/^	typedef types_traits<Key, Data, _Alloc, false>	__traits_type;$/;"	t	struct:__gnu_pbds::detail::dumnode_const_iterator
__transform1_selector	5/parallel/for_each_selectors.h	/^    struct __transform1_selector : public __generic_for_each_selector<_It>$/;"	s	namespace:__gnu_parallel
__transform2_selector	5/parallel/for_each_selectors.h	/^    struct __transform2_selector : public __generic_for_each_selector<_It>$/;"	s	namespace:__gnu_parallel
__try	5/bits/exception_defines.h	35;"	d
__try	5/bits/exception_defines.h	40;"	d
__turn	5/profile/impl/profiler_state.h	/^  __turn(__state_type __s)$/;"	f	namespace:__gnu_profile
__turn_off	5/profile/impl/profiler_state.h	/^  __turn_off()$/;"	f	namespace:__gnu_profile
__turn_on	5/profile/impl/profiler_state.h	/^  __turn_on()$/;"	f	namespace:__gnu_profile
__type	5/debug/functions.h	/^      typedef std::__false_type __type;$/;"	t	struct:__gnu_debug::__is_safe_random_iterator
__unary_negate	5/parallel/base.h	/^      __unary_negate(const _Predicate& __x) : _M_pred(__x) { }$/;"	f	class:__gnu_parallel::__unary_negate
__unary_negate	5/parallel/base.h	/^    class __unary_negate$/;"	c	namespace:__gnu_parallel
__unary_plus	cpp_src/valarray_before.h	/^  struct __unary_plus$/;"	s	namespace:std
__unguarded_insertion_sort	cpp_src/stl_algo.h	/^    __unguarded_insertion_sort(_RandomAccessIterator __first,$/;"	f	namespace:std
__unguarded_linear_insert	cpp_src/stl_algo.h	/^    __unguarded_linear_insert(_RandomAccessIterator __last, _Tp __val)$/;"	f	namespace:std
__unguarded_linear_insert	cpp_src/stl_algo.h	/^    __unguarded_linear_insert(_RandomAccessIterator __last, _Tp __val,$/;"	f	namespace:std
__unguarded_partition	cpp_src/stl_algo.h	/^    __unguarded_partition(_RandomAccessIterator __first,$/;"	f	namespace:std
__uninitialized_copy_a	cpp_src/stl_uninitialized.h	/^    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std
__uninitialized_copy_aux	cpp_src/stl_uninitialized.h	/^    __uninitialized_copy_aux(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std
__uninitialized_copy_copy	cpp_src/stl_uninitialized.h	/^    __uninitialized_copy_copy(_InputIterator1 __first1,$/;"	f	namespace:std
__uninitialized_copy_fill	cpp_src/stl_uninitialized.h	/^    __uninitialized_copy_fill(_InputIterator __first1, _InputIterator __last1,$/;"	f	namespace:std
__uninitialized_fill_a	cpp_src/stl_uninitialized.h	/^    __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std
__uninitialized_fill_aux	cpp_src/stl_uninitialized.h	/^    __uninitialized_fill_aux(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std
__uninitialized_fill_aux	cpp_src/stl_uninitialized.h	/^    __uninitialized_fill_aux(_ForwardIterator __first,$/;"	f	namespace:std
__uninitialized_fill_copy	cpp_src/stl_uninitialized.h	/^    __uninitialized_fill_copy(_ForwardIterator __result, _ForwardIterator __mid,$/;"	f	namespace:std
__uninitialized_fill_n_a	cpp_src/stl_uninitialized.h	/^    __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, $/;"	f	namespace:std
__uninitialized_fill_n_aux	cpp_src/stl_uninitialized.h	/^    __uninitialized_fill_n_aux(_ForwardIterator __first, _Size __n,$/;"	f	namespace:std
__union_func	5/parallel/set_operations.h	/^      __union_func(_Compare __comp) : _M_comp(__comp) {}$/;"	f	struct:__gnu_parallel::__union_func
__union_func	5/parallel/set_operations.h	/^    struct __union_func$/;"	s	namespace:__gnu_parallel
__unique_copy	cpp_src/stl_algo.h	/^    __unique_copy(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std
__unique_copy	cpp_src/stl_algo.h	/^    __unique_copy(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std
__unknown	5/cxxabi.h	/^	__unknown = 0,$/;"	e	enum:__cxxabiv1::__class_type_info::__sub_kind
__unknown_constness	5/debug/formatter.h	/^      __unknown_constness,$/;"	e	enum:__gnu_debug::_Error_formatter::_Constness
__unknown_state	5/debug/formatter.h	/^      __unknown_state,$/;"	e	enum:__gnu_debug::_Error_formatter::_Iterator_state
__unused_param	5/debug/formatter.h	/^	__unused_param,$/;"	e	enum:__gnu_debug::_Error_formatter::_Parameter::__anon1
__val_comp_iter	5/bits/predefined_ops.h	/^    __val_comp_iter(_Compare __comp)$/;"	f	namespace:__gnu_cxx::__ops
__val_comp_iter	5/bits/predefined_ops.h	/^    __val_comp_iter(_Iter_comp_iter<_Compare> __comp)$/;"	f	namespace:__gnu_cxx::__ops
__val_comp_iter	5/bits/predefined_ops.h	/^  __val_comp_iter(_Iter_less_iter)$/;"	f	namespace:__gnu_cxx::__ops
__val_less_iter	5/bits/predefined_ops.h	/^  __val_less_iter()$/;"	f	namespace:__gnu_cxx::__ops
__valarray_copy	cpp_src/valarray_array.h	/^    __valarray_copy(_Array<_Tp> __a, _Array<_Tp> __b, size_t __n, size_t __s)$/;"	f	namespace:std
__valarray_copy	cpp_src/valarray_array.h	/^    __valarray_copy(_Array<_Tp> __a, _Array<size_t> __i,$/;"	f	namespace:std
__valarray_copy	cpp_src/valarray_array.h	/^    __valarray_copy(_Array<_Tp> __a, size_t __n, _Array<_Tp> __b)$/;"	f	namespace:std
__valarray_copy	cpp_src/valarray_array.h	/^    __valarray_copy(_Array<_Tp> __a, size_t __n, _Array<_Tp> __b,$/;"	f	namespace:std
__valarray_copy	cpp_src/valarray_array.h	/^    __valarray_copy(_Array<_Tp> __a, size_t __n, size_t __s, _Array<_Tp> __b)$/;"	f	namespace:std
__valarray_copy	cpp_src/valarray_array.h	/^    __valarray_copy(_Array<_Tp> __a, size_t __n, size_t __s1,$/;"	f	namespace:std
__valarray_copy	cpp_src/valarray_array.h	/^    __valarray_copy(_Array<_Tp> __src, size_t __n, _Array<size_t> __i,$/;"	f	namespace:std
__valarray_copy	cpp_src/valarray_array.h	/^    __valarray_copy(const _Tp* __restrict__ __a, _Tp* __restrict__ __b,$/;"	f	namespace:std
__valarray_copy	cpp_src/valarray_array.h	/^    __valarray_copy(const _Tp* __restrict__ __a, size_t __n, size_t __s,$/;"	f	namespace:std
__valarray_copy	cpp_src/valarray_array.h	/^    __valarray_copy(const _Tp* __restrict__ __a, size_t __n,$/;"	f	namespace:std
__valarray_copy	cpp_src/valarray_array.h	/^    __valarray_copy(const _Tp* __restrict__ __a,$/;"	f	namespace:std
__valarray_copy	cpp_src/valarray_array.h	/^    __valarray_copy(const _Tp* __restrict__ __src, size_t __n, size_t __s1,$/;"	f	namespace:std
__valarray_copy	cpp_src/valarray_array.h	/^    __valarray_copy(const _Tp* __restrict__ __src, size_t __n,$/;"	f	namespace:std
__valarray_copy_construct	cpp_src/valarray_array.h	/^    __valarray_copy_construct (const _Tp* __restrict__ __a, size_t __n,$/;"	f	namespace:std
__valarray_copy_construct	cpp_src/valarray_array.h	/^    __valarray_copy_construct (const _Tp* __restrict__ __a,$/;"	f	namespace:std
__valarray_copy_construct	cpp_src/valarray_array.h	/^    __valarray_copy_construct(_Array<_Tp> __a, _Array<size_t> __i,$/;"	f	namespace:std
__valarray_copy_construct	cpp_src/valarray_array.h	/^    __valarray_copy_construct(_Array<_Tp> __a, size_t __n, size_t __s,$/;"	f	namespace:std
__valarray_copy_construct	cpp_src/valarray_array.h	/^    __valarray_copy_construct(const _Tp* __restrict__ __b,$/;"	f	namespace:std
__valarray_default_construct	cpp_src/valarray_array.h	/^    __valarray_default_construct(_Tp* __restrict__ __b, _Tp* __restrict__ __e)$/;"	f	namespace:std
__valarray_destroy_elements	cpp_src/valarray_array.h	/^    __valarray_destroy_elements(_Tp* __restrict__ __b, _Tp* __restrict__ __e)$/;"	f	namespace:std
__valarray_fill	cpp_src/valarray_array.h	/^    __valarray_fill (_Array<_Tp> __a, size_t __n, const _Tp& __t)$/;"	f	namespace:std
__valarray_fill	cpp_src/valarray_array.h	/^    __valarray_fill(_Array<_Tp> __a, _Array<size_t> __i,$/;"	f	namespace:std
__valarray_fill	cpp_src/valarray_array.h	/^    __valarray_fill(_Array<_Tp> __a, size_t __n, size_t __s, const _Tp& __t)$/;"	f	namespace:std
__valarray_fill	cpp_src/valarray_array.h	/^    __valarray_fill(_Tp* __restrict__ __a, const size_t* __restrict__ __i,$/;"	f	namespace:std
__valarray_fill	cpp_src/valarray_array.h	/^    __valarray_fill(_Tp* __restrict__ __a, size_t __n, const _Tp& __t)$/;"	f	namespace:std
__valarray_fill	cpp_src/valarray_array.h	/^    __valarray_fill(_Tp* __restrict__ __a, size_t __n,$/;"	f	namespace:std
__valarray_fill_construct	cpp_src/valarray_array.h	/^    __valarray_fill_construct(_Tp* __restrict__ __b, _Tp* __restrict__ __e,$/;"	f	namespace:std
__valarray_get_memory	cpp_src/valarray_array.h	/^  __valarray_get_memory(size_t __n)$/;"	f	namespace:std
__valarray_get_storage	cpp_src/valarray_array.h	/^    __valarray_get_storage(size_t __n)$/;"	f	namespace:std
__valarray_max	cpp_src/valarray_array.h	/^    __valarray_max(const _Ta& __a)$/;"	f	namespace:std
__valarray_min	cpp_src/valarray_array.h	/^    __valarray_min(const _Ta& __a)$/;"	f	namespace:std
__valarray_product	cpp_src/valarray_array.h	/^    __valarray_product(const _Tp* __restrict__ __f,$/;"	f	namespace:std
__valarray_release_memory	cpp_src/valarray_array.h	/^  __valarray_release_memory(void* __p)$/;"	f	namespace:std
__valarray_sum	cpp_src/valarray_array.h	/^    __valarray_sum(const _Tp* __restrict__ __f, const _Tp* __restrict__ __l)$/;"	f	namespace:std
__valid_range	5/debug/functions.h	/^    __valid_range(const _InputIterator& __first, const _InputIterator& __last)$/;"	f	namespace:__gnu_debug
__valid_range	5/debug/functions.h	/^    __valid_range(const _Safe_iterator<_Iterator, _Sequence>& __first,$/;"	f	namespace:__gnu_debug
__valid_range	5/debug/functions.h	/^    __valid_range(const _Safe_local_iterator<_Iterator, _Sequence>& __first,$/;"	f	namespace:__gnu_debug
__valid_range_aux	5/debug/functions.h	/^    __valid_range_aux(const _InputIterator& __first,$/;"	f	namespace:__gnu_debug
__valid_range_aux	5/debug/functions.h	/^    __valid_range_aux(const _Integral&, const _Integral&, std::__true_type)$/;"	f	namespace:__gnu_debug
__valid_range_aux2	5/debug/functions.h	/^    __valid_range_aux2(const _InputIterator&, const _InputIterator&,$/;"	f	namespace:__gnu_debug
__valid_range_aux2	5/debug/functions.h	/^    __valid_range_aux2(const _RandomAccessIterator& __first,$/;"	f	namespace:__gnu_debug
__value	5/debug/functions.h	/^      enum { __value = 0 };$/;"	e	enum:__gnu_debug::__is_safe_random_iterator::__anon10
__value	5/debug/functions.h	/^    { enum { __value = 0 }; };$/;"	e	enum:__gnu_debug::_Insert_range_from_self_is_safe::__anon9
__value	5/debug/safe_sequence.h	/^      _Type __value;$/;"	m	class:__gnu_debug::_Equal_to
__value	5/debug/safe_sequence.h	/^      _Type __value;$/;"	m	class:__gnu_debug::_Not_equal_to
__value	5/profile/impl/profiler_trace.h	/^    float __value;$/;"	m	struct:__gnu_profile::__cost_factor
__value_type	5/ext/pb_ds/detail/types_traits.hpp	/^	typedef std::pair<const Key, Mapped>			__value_type;$/;"	t	struct:__gnu_pbds::detail::type_base
__vc	cpp_src/boost_concept_check.h	/^    typename _SortedAssociativeContainer::value_compare __vc;$/;"	m	struct:_SortedAssociativeContainerConcept
__vector2list_info	5/profile/impl/profiler_vector_to_list.h	/^    __vector2list_info(__stack_t __stack)$/;"	f	class:__gnu_profile::__vector2list_info
__vector2list_info	5/profile/impl/profiler_vector_to_list.h	/^  class __vector2list_info$/;"	c	namespace:__gnu_profile
__vector2list_stack_info	5/profile/impl/profiler_vector_to_list.h	/^    __vector2list_stack_info(const __vector2list_info& __o) $/;"	f	class:__gnu_profile::__vector2list_stack_info
__vector2list_stack_info	5/profile/impl/profiler_vector_to_list.h	/^  class __vector2list_stack_info$/;"	c	namespace:__gnu_profile
__vector_cost	5/profile/impl/profiler_list_to_vector.h	/^    __vector_cost(std::size_t __shift, std::size_t __iterate)$/;"	f	class:__gnu_profile::__trace_list_to_vector
__vector_cost	5/profile/impl/profiler_vector_to_list.h	/^    __vector_cost(std::size_t __shift, std::size_t __iterate,$/;"	f	class:__gnu_profile::__trace_vector_to_list
__virtual_mask	5/cxxabi.h	/^	__virtual_mask = 0x1,$/;"	e	enum:__cxxabiv1::__base_class_type_info::__offset_flags_masks
__vmi_class_type_info	5/cxxabi.h	/^    __vmi_class_type_info(const char* __n, int ___flags)$/;"	f	class:__cxxabiv1::__vmi_class_type_info
__vmi_class_type_info	5/cxxabi.h	/^  class __vmi_class_type_info : public __class_type_info$/;"	c	namespace:__cxxabiv1
__volatile_mask	5/cxxabi.h	/^	__volatile_mask = 0x2,$/;"	e	enum:__cxxabiv1::__pbase_type_info::__masks
__warn	5/profile/impl/profiler_trace.h	/^    __warn(FILE* __f)$/;"	f	struct:__gnu_profile::__warn
__warn	5/profile/impl/profiler_trace.h	/^  struct __warn$/;"	s	namespace:__gnu_profile
__warning_data	5/profile/impl/profiler_trace.h	/^    __warning_data()$/;"	f	struct:__gnu_profile::__warning_data
__warning_data	5/profile/impl/profiler_trace.h	/^    __warning_data(float __m, __stack_t __c, const char* __id, $/;"	f	struct:__gnu_profile::__warning_data
__warning_data	5/profile/impl/profiler_trace.h	/^  struct __warning_data$/;"	s	namespace:__gnu_profile
__warning_id	5/profile/impl/profiler_trace.h	/^    const char* __warning_id;$/;"	m	struct:__gnu_profile::__warning_data
__warning_message	5/profile/impl/profiler_trace.h	/^    std::string __warning_message;$/;"	m	struct:__gnu_profile::__warning_data
__warning_vector_t	5/profile/impl/profiler_trace.h	/^  typedef std::_GLIBCXX_STD_C::vector<__warning_data> __warning_vector_t;$/;"	t	namespace:__gnu_profile
__wmask_type	cpp_src/locale_facets.h	/^      typedef wctype_t		__wmask_type;$/;"	t	class:std::ctype
__write	5/profile/impl/profiler_container_size.h	/^    __write(FILE* __f) const$/;"	f	class:__gnu_profile::__container_size_info
__write	5/profile/impl/profiler_hash_func.h	/^    __write(FILE* __f) const$/;"	f	class:__gnu_profile::__hashfunc_info
__write	5/profile/impl/profiler_list_to_slist.h	/^    __write(FILE* __f) const$/;"	f	class:__gnu_profile::__list2slist_info
__write	5/profile/impl/profiler_list_to_vector.h	/^    __write(FILE* __f) const$/;"	f	class:__gnu_profile::__list2vector_info
__write	5/profile/impl/profiler_map_to_unordered_map.h	/^    __write(FILE* __f) const$/;"	f	class:__gnu_profile::__map2umap_info
__write	5/profile/impl/profiler_node.h	/^  __write(FILE* __f, __stack_t __stack)$/;"	f	namespace:__gnu_profile
__write	5/profile/impl/profiler_trace.h	/^    __write(FILE* __f)$/;"	f	class:__gnu_profile::__trace_base
__write	5/profile/impl/profiler_vector_to_list.h	/^    __write(FILE* __f) const$/;"	f	class:__gnu_profile::__vector2list_info
__write	cpp_src/locale_facets.h	/^    __write(_OutIter __s, const _CharT* __ws, int __len)$/;"	f	namespace:std
__write	cpp_src/locale_facets.h	/^    __write(ostreambuf_iterator<_CharT> __s, const _CharT* __ws, int __len)$/;"	f	namespace:std
__write_cost_factors	5/profile/impl/profiler_trace.h	/^  __write_cost_factors()$/;"	f	namespace:__gnu_profile
__x	cpp_src/boost_concept_check.h	/^    _From __x;$/;"	m	struct:_ConvertibleConcept
__xgetbv	opencv2/core/cvdef.h	202;"	d
__xgetbv	opencv2/core/cvdef.h	204;"	d
__yield	5/parallel/compatibility.h	/^  __yield()$/;"	f	namespace:__gnu_parallel
_absdiff	opencv2/core/hal/intrin_cpp.hpp	/^template<typename T> inline T _absdiff(T a, T b)$/;"	f	namespace:cv
_alignment	opencv2/cudalegacy/NCV.hpp	/^    Ncv32u _alignment;$/;"	m	class:NCVMemNativeAllocator
_alignment	opencv2/cudalegacy/NCV.hpp	/^    Ncv32u _alignment;$/;"	m	class:NCVMemStackAllocator
_dataAsRow	opencv2/core.hpp	/^    bool _dataAsRow; \/\/ unused, but needed for 3.0 ABI compatibility.$/;"	m	class:cv::LDA
_eigenvalues	opencv2/core.hpp	/^    Mat _eigenvalues;$/;"	m	class:cv::LDA
_eigenvectors	opencv2/core.hpp	/^    Mat _eigenvectors;$/;"	m	class:cv::LDA
_fp16Format	opencv2/core/cvdef.h	/^    struct _fp16Format$/;"	s	union:Cv16suf
_fp32Format	opencv2/core/cvdef.h	/^    struct _fp32Format$/;"	s	union:Cv32suf
_height	opencv2/cudalegacy/NCV.hpp	/^    Ncv32u _height;$/;"	m	class:NCVMatrix
_length	opencv2/cudalegacy/NCV.hpp	/^    size_t _length;$/;"	m	class:NCVVector
_log	opencv2/flann/logger.h	/^    int _log(int level, const char* fmt, va_list arglist)$/;"	f	class:cvflann::Logger
_maxSize	opencv2/cudalegacy/NCV.hpp	/^    size_t _maxSize;$/;"	m	class:NCVMemNativeAllocator
_maxSize	opencv2/cudalegacy/NCV.hpp	/^    size_t _maxSize;$/;"	m	class:NCVMemStackAllocator
_memType	opencv2/cudalegacy/NCV.hpp	/^    NCVMemoryType _memType;$/;"	m	class:NCVMemNativeAllocator
_memType	opencv2/cudalegacy/NCV.hpp	/^    NCVMemoryType _memType;$/;"	m	class:NCVMemStackAllocator
_memtype	opencv2/cudalegacy/NCV.hpp	/^    NCVMemoryType _memtype;$/;"	m	class:NCVMatrix
_memtype	opencv2/cudalegacy/NCV.hpp	/^    NCVMemoryType _memtype;$/;"	m	class:NCVVector
_mm_deinterleave_epi16	opencv2/core/sse_utils.hpp	/^inline void _mm_deinterleave_epi16(__m128i & v_r0, __m128i & v_r1, __m128i & v_g0, __m128i & v_g1)$/;"	f
_mm_deinterleave_epi16	opencv2/core/sse_utils.hpp	/^inline void _mm_deinterleave_epi16(__m128i & v_r0, __m128i & v_r1, __m128i & v_g0, __m128i & v_g1,$/;"	f
_mm_deinterleave_epi16	opencv2/core/sse_utils.hpp	/^inline void _mm_deinterleave_epi16(__m128i & v_r0, __m128i & v_r1, __m128i & v_g0,$/;"	f
_mm_deinterleave_epi8	opencv2/core/sse_utils.hpp	/^inline void _mm_deinterleave_epi8(__m128i & v_r0, __m128i & v_r1, __m128i & v_g0, __m128i & v_g1)$/;"	f
_mm_deinterleave_epi8	opencv2/core/sse_utils.hpp	/^inline void _mm_deinterleave_epi8(__m128i & v_r0, __m128i & v_r1, __m128i & v_g0, __m128i & v_g1,$/;"	f
_mm_deinterleave_epi8	opencv2/core/sse_utils.hpp	/^inline void _mm_deinterleave_epi8(__m128i & v_r0, __m128i & v_r1, __m128i & v_g0,$/;"	f
_mm_deinterleave_ps	opencv2/core/sse_utils.hpp	/^inline void _mm_deinterleave_ps(__m128 & v_r0, __m128 & v_r1, __m128 & v_g0, __m128 & v_g1)$/;"	f
_mm_deinterleave_ps	opencv2/core/sse_utils.hpp	/^inline void _mm_deinterleave_ps(__m128 & v_r0, __m128 & v_r1, __m128 & v_g0, __m128 & v_g1,$/;"	f
_mm_deinterleave_ps	opencv2/core/sse_utils.hpp	/^inline void _mm_deinterleave_ps(__m128 & v_r0, __m128 & v_r1, __m128 & v_g0,$/;"	f
_mm_interleave_epi16	opencv2/core/sse_utils.hpp	/^inline void _mm_interleave_epi16(__m128i & v_r0, __m128i & v_r1, __m128i & v_g0, __m128i & v_g1)$/;"	f
_mm_interleave_epi16	opencv2/core/sse_utils.hpp	/^inline void _mm_interleave_epi16(__m128i & v_r0, __m128i & v_r1, __m128i & v_g0, __m128i & v_g1,$/;"	f
_mm_interleave_epi16	opencv2/core/sse_utils.hpp	/^inline void _mm_interleave_epi16(__m128i & v_r0, __m128i & v_r1, __m128i & v_g0,$/;"	f
_mm_interleave_epi8	opencv2/core/sse_utils.hpp	/^inline void _mm_interleave_epi8(__m128i & v_r0, __m128i & v_r1, __m128i & v_g0, __m128i & v_g1)$/;"	f
_mm_interleave_epi8	opencv2/core/sse_utils.hpp	/^inline void _mm_interleave_epi8(__m128i & v_r0, __m128i & v_r1, __m128i & v_g0, __m128i & v_g1,$/;"	f
_mm_interleave_epi8	opencv2/core/sse_utils.hpp	/^inline void _mm_interleave_epi8(__m128i & v_r0, __m128i & v_r1, __m128i & v_g0,$/;"	f
_mm_interleave_ps	opencv2/core/sse_utils.hpp	/^inline void _mm_interleave_ps(__m128 & v_r0, __m128 & v_r1, __m128 & v_g0, __m128 & v_g1)$/;"	f
_mm_interleave_ps	opencv2/core/sse_utils.hpp	/^inline void _mm_interleave_ps(__m128 & v_r0, __m128 & v_r1, __m128 & v_g0, __m128 & v_g1,$/;"	f
_mm_interleave_ps	opencv2/core/sse_utils.hpp	/^inline void _mm_interleave_ps(__m128 & v_r0, __m128 & v_r1, __m128 & v_g0,$/;"	f
_ncv_hpp_	opencv2/cudalegacy/NCV.hpp	44;"	d
_ncv_optical_flow_h_	opencv2/cudalegacy/NCVBroxOpticalFlow.hpp	61;"	d
_ncvhaarobjectdetection_hpp_	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	60;"	d
_ncvpyramid_hpp_	opencv2/cudalegacy/NCVPyramid.hpp	44;"	d
_npp_staging_hpp_	opencv2/cudalegacy/NPP_staging.hpp	44;"	d
_num_components	opencv2/core.hpp	/^    int _num_components;$/;"	m	class:cv::LDA
_pitch	opencv2/cudalegacy/NCV.hpp	/^    Ncv32u _pitch;$/;"	m	class:NCVMatrix
_ptr	opencv2/cudalegacy/NCV.hpp	/^    T *_ptr;$/;"	m	class:NCVMatrix
_ptr	opencv2/cudalegacy/NCV.hpp	/^    T *_ptr;$/;"	m	class:NCVVector
_setDestination	opencv2/flann/logger.h	/^    void _setDestination(const char* name)$/;"	f	class:cvflann::Logger
_ui1	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^    uint1 _ui1;$/;"	m	struct:HaarClassifierNodeDescriptor32
_ui2	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^    uint2 _ui2;$/;"	m	struct:HaarFeature64
_ui2	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^    uint2 _ui2;$/;"	m	struct:HaarStage64
_ui4	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^    uint4 _ui4;$/;"	m	struct:HaarClassifierNode128
_width	opencv2/cudalegacy/NCV.hpp	/^    Ncv32u _width;$/;"	m	class:NCVMatrix
a	opencv2/core/cuda/functional.hpp	/^        struct No {Yes a[2];};$/;"	m	struct:cv::cuda::device::IsBinaryFunction::No
a	opencv2/core/cuda/functional.hpp	/^        struct No {Yes a[2];};$/;"	m	struct:cv::cuda::device::IsUnaryFunction::No
a	opencv2/core/mat.hpp	/^    Mat a, b, c;$/;"	m	class:cv::MatExpr
a	opencv2/cudev/functional/functional.hpp	/^    struct No {Yes a[2];};$/;"	m	struct:cv::cudev::IsBinaryFunction::No
a	opencv2/cudev/functional/functional.hpp	/^    struct No {Yes a[2];};$/;"	m	struct:cv::cudev::IsUnaryFunction::No
a	opencv2/stitching/detail/warpers.hpp	/^    float a, b;$/;"	m	struct:cv::detail::CompressedRectilinearPortraitProjector
a	opencv2/stitching/detail/warpers.hpp	/^    float a, b;$/;"	m	struct:cv::detail::CompressedRectilinearProjector
a	opencv2/stitching/detail/warpers.hpp	/^    float a, b;$/;"	m	struct:cv::detail::PaniniPortraitProjector
a	opencv2/stitching/detail/warpers.hpp	/^    float a, b;$/;"	m	struct:cv::detail::PaniniProjector
a	opencv2/stitching/warpers.hpp	/^    float a, b;$/;"	m	class:cv::CompressedRectilinearPortraitWarper
a	opencv2/stitching/warpers.hpp	/^    float a, b;$/;"	m	class:cv::CompressedRectilinearWarper
a	opencv2/stitching/warpers.hpp	/^    float a, b;$/;"	m	class:cv::PaniniPortraitWarper
a	opencv2/stitching/warpers.hpp	/^    float a, b;$/;"	m	class:cv::PaniniWarper
a0	opencv2/core/cuda/vec_traits.hpp	/^        double a0, a1, a2, a3, a4, a5, a6, a7;$/;"	m	struct:cv::cuda::device::double8
a1	opencv2/core/cuda/vec_traits.hpp	/^        double a0, a1, a2, a3, a4, a5, a6, a7;$/;"	m	struct:cv::cuda::device::double8
a2	opencv2/core/cuda/vec_traits.hpp	/^        double a0, a1, a2, a3, a4, a5, a6, a7;$/;"	m	struct:cv::cuda::device::double8
a3	opencv2/core/cuda/vec_traits.hpp	/^        double a0, a1, a2, a3, a4, a5, a6, a7;$/;"	m	struct:cv::cuda::device::double8
a4	opencv2/core/cuda/vec_traits.hpp	/^        double a0, a1, a2, a3, a4, a5, a6, a7;$/;"	m	struct:cv::cuda::device::double8
a5	opencv2/core/cuda/vec_traits.hpp	/^        double a0, a1, a2, a3, a4, a5, a6, a7;$/;"	m	struct:cv::cuda::device::double8
a6	opencv2/core/cuda/vec_traits.hpp	/^        double a0, a1, a2, a3, a4, a5, a6, a7;$/;"	m	struct:cv::cuda::device::double8
a7	opencv2/core/cuda/vec_traits.hpp	/^        double a0, a1, a2, a3, a4, a5, a6, a7;$/;"	m	struct:cv::cuda::device::double8
a_const_iterator	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename synth_access_traits::const_iterator a_const_iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
a_const_iterator	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	typedef typename _ATraits::const_iterator	      a_const_iterator;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Node_base
a_const_iterator	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename Node::a_const_iterator		a_const_iterator;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_Node_citer
a_const_iterator	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename base_type::a_const_iterator     	      a_const_iterator;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Inode
a_const_iterator	5/ext/pb_ds/trie_policy.hpp	/^    typedef typename access_traits::const_iterator 	a_const_iterator;$/;"	t	class:__gnu_pbds::trie_order_statistics_node_update
a_const_iterator	5/ext/pb_ds/trie_policy.hpp	/^    typedef typename access_traits::const_iterator 	a_const_iterator;$/;"	t	class:__gnu_pbds::trie_prefix_search_node_update
a_const_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	typedef typename __rebind_at::other::const_pointer    a_const_pointer;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Node_base
a_const_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename Node::a_const_pointer		a_const_pointer;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_Node_citer
a_const_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename base_type::a_const_pointer 	       a_const_pointer;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Head
a_const_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename base_type::a_const_pointer 	a_const_pointer;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_Node_iter
a_const_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename base_type::a_const_pointer      		a_const_pointer;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Leaf
a_const_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename base_type::a_const_pointer      	       a_const_pointer;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Inode
abs	opencv2/core/cvdef.h	59;"	d
abs	opencv2/core/cvstd.hpp	/^    static inline uchar abs(uchar a) { return a; }$/;"	f	namespace:cv
abs	opencv2/core/cvstd.hpp	/^    static inline uint64 abs(uint64 a) { return a; }$/;"	f	namespace:cv
abs	opencv2/core/cvstd.hpp	/^    static inline unsigned abs(unsigned a) { return a; }$/;"	f	namespace:cv
abs	opencv2/core/cvstd.hpp	/^    static inline ushort abs(ushort a) { return a; }$/;"	f	namespace:cv
abs	opencv2/core/mat.inl.hpp	/^MatExpr abs(const Mat_<_Tp>& m)$/;"	f	namespace:cv
abs	opencv2/core/types.hpp	/^double abs(const Complex<_Tp>& a)$/;"	f	namespace:cv
abs	opencv2/flann/dist.h	/^inline T abs(T x) { return (x<0) ? -x : x; }$/;"	f	namespace:cvflann
abs	opencv2/flann/dist.h	/^inline double abs<double>(double x) { return fabs(x); }$/;"	f	namespace:cvflann
abs	opencv2/flann/dist.h	/^inline float abs<float>(float x) { return fabsf(x); }$/;"	f	namespace:cvflann
abs	opencv2/flann/dist.h	/^inline int abs<int>(int x) { return ::abs(x); }$/;"	f	namespace:cvflann
abs_	opencv2/cudev/util/vec_math.hpp	/^    __device__ __forceinline__ schar abs_(schar val)$/;"	f	namespace:cv::cudev::vec_math_detail
abs_	opencv2/cudev/util/vec_math.hpp	/^    __device__ __forceinline__ short abs_(short val)$/;"	f	namespace:cv::cudev::vec_math_detail
abs_func	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ abs_func() {}$/;"	f	struct:cv::cuda::device::abs_func
abs_func	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ abs_func(const abs_func&) {}$/;"	f	struct:cv::cuda::device::abs_func
abs_func	opencv2/core/cuda/functional.hpp	/^    template <> struct abs_func<char> : unary_function<char, char>$/;"	s	namespace:cv::cuda::device
abs_func	opencv2/core/cuda/functional.hpp	/^    template <> struct abs_func<double> : unary_function<double, double>$/;"	s	namespace:cv::cuda::device
abs_func	opencv2/core/cuda/functional.hpp	/^    template <> struct abs_func<float> : unary_function<float, float>$/;"	s	namespace:cv::cuda::device
abs_func	opencv2/core/cuda/functional.hpp	/^    template <> struct abs_func<int> : unary_function<int, int>$/;"	s	namespace:cv::cuda::device
abs_func	opencv2/core/cuda/functional.hpp	/^    template <> struct abs_func<short> : unary_function<short, short>$/;"	s	namespace:cv::cuda::device
abs_func	opencv2/core/cuda/functional.hpp	/^    template <> struct abs_func<signed char> : unary_function<signed char, signed char>$/;"	s	namespace:cv::cuda::device
abs_func	opencv2/core/cuda/functional.hpp	/^    template <> struct abs_func<unsigned char> : unary_function<unsigned char, unsigned char>$/;"	s	namespace:cv::cuda::device
abs_func	opencv2/core/cuda/functional.hpp	/^    template <> struct abs_func<unsigned int> : unary_function<unsigned int, unsigned int>$/;"	s	namespace:cv::cuda::device
abs_func	opencv2/core/cuda/functional.hpp	/^    template <> struct abs_func<unsigned short> : unary_function<unsigned short, unsigned short>$/;"	s	namespace:cv::cuda::device
abs_func	opencv2/core/cuda/functional.hpp	/^    template <typename T> struct abs_func : unary_function<T, T>$/;"	s	namespace:cv::cuda::device
abs_func	opencv2/cudev/functional/functional.hpp	/^template <> struct abs_func<double> : unary_function<double, double>$/;"	s	namespace:cv::cudev
abs_func	opencv2/cudev/functional/functional.hpp	/^template <> struct abs_func<float> : unary_function<float, float>$/;"	s	namespace:cv::cudev
abs_func	opencv2/cudev/functional/functional.hpp	/^template <> struct abs_func<int> : unary_function<int, int>$/;"	s	namespace:cv::cudev
abs_func	opencv2/cudev/functional/functional.hpp	/^template <> struct abs_func<schar> : unary_function<schar, schar>$/;"	s	namespace:cv::cudev
abs_func	opencv2/cudev/functional/functional.hpp	/^template <> struct abs_func<short> : unary_function<short, short>$/;"	s	namespace:cv::cudev
abs_func	opencv2/cudev/functional/functional.hpp	/^template <> struct abs_func<uchar> : unary_function<uchar, uchar>$/;"	s	namespace:cv::cudev
abs_func	opencv2/cudev/functional/functional.hpp	/^template <> struct abs_func<uint> : unary_function<uint, uint>$/;"	s	namespace:cv::cudev
abs_func	opencv2/cudev/functional/functional.hpp	/^template <> struct abs_func<ushort> : unary_function<ushort, ushort>$/;"	s	namespace:cv::cudev
abs_func	opencv2/cudev/functional/functional.hpp	/^template <typename T> struct abs_func : unary_function<T, T>$/;"	s	namespace:cv::cudev
abs_type	opencv2/core/hal/intrin.hpp	/^    typedef _Tp abs_type;$/;"	t	struct:cv::V_TypeTraits
abs_type	opencv2/core/hal/intrin.hpp	/^    typedef double abs_type;$/;"	t	struct:cv::V_TypeTraits
abs_type	opencv2/core/hal/intrin.hpp	/^    typedef float abs_type;$/;"	t	struct:cv::V_TypeTraits
abs_type	opencv2/core/hal/intrin.hpp	/^    typedef uchar abs_type;$/;"	t	struct:cv::V_TypeTraits
abs_type	opencv2/core/hal/intrin.hpp	/^    typedef uint64 abs_type;$/;"	t	struct:cv::V_TypeTraits
abs_type	opencv2/core/hal/intrin.hpp	/^    typedef unsigned abs_type;$/;"	t	struct:cv::V_TypeTraits
abs_type	opencv2/core/hal/intrin.hpp	/^    typedef ushort abs_type;$/;"	t	struct:cv::V_TypeTraits
abs_vec	opencv2/core/hal/intrin_cpp.hpp	/^    typedef v_reg<typename V_TypeTraits<_Tp>::abs_type, n> abs_vec;$/;"	t	struct:cv::v_reg
absdiff_func	opencv2/cudev/functional/functional.hpp	/^template <typename T> struct absdiff_func : binary_function<T, T, T>$/;"	s	namespace:cv::cudev
access_traits	5/ext/pb_ds/assoc_container.hpp	/^    typedef _ATraits 				access_traits;$/;"	t	class:__gnu_pbds::trie
access_traits	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename traits_type::access_traits 	access_traits;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
access_traits	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	typedef _ATraits					access_traits;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Node_base
access_traits	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename base_type::access_traits	       		access_traits;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Inode
access_traits	5/ext/pb_ds/detail/pat_trie_/traits.hpp	/^      typedef _ATraits 				     					access_traits;$/;"	t	struct:__gnu_pbds::detail::trie_traits
access_traits	5/ext/pb_ds/detail/pat_trie_/traits.hpp	/^      typedef _ATraits 		       			       	access_traits;$/;"	t	struct:__gnu_pbds::detail::trie_traits
access_traits	5/ext/pb_ds/detail/trie_policy/trie_policy_base.hpp	/^      typedef _ATraits 				access_traits;$/;"	t	class:__gnu_pbds::detail::trie_policy_base
access_traits	5/ext/pb_ds/trie_policy.hpp	/^    typedef _ATraits 				access_traits;$/;"	t	class:__gnu_pbds::trie_order_statistics_node_update
access_traits	5/ext/pb_ds/trie_policy.hpp	/^    typedef _ATraits 				access_traits;$/;"	t	class:__gnu_pbds::trie_prefix_search_node_update
accum_dist	opencv2/flann/dist.h	/^    inline ResultType accum_dist(const U& a, const V& b, int) const$/;"	f	struct:cvflann::ChiSquareDistance
accum_dist	opencv2/flann/dist.h	/^    inline ResultType accum_dist(const U& a, const V& b, int) const$/;"	f	struct:cvflann::HellingerDistance
accum_dist	opencv2/flann/dist.h	/^    inline ResultType accum_dist(const U& a, const V& b, int) const$/;"	f	struct:cvflann::HistIntersectionDistance
accum_dist	opencv2/flann/dist.h	/^    inline ResultType accum_dist(const U& a, const V& b, int) const$/;"	f	struct:cvflann::KL_Divergence
accum_dist	opencv2/flann/dist.h	/^    inline ResultType accum_dist(const U& a, const V& b, int) const$/;"	f	struct:cvflann::L1
accum_dist	opencv2/flann/dist.h	/^    inline ResultType accum_dist(const U& a, const V& b, int) const$/;"	f	struct:cvflann::L2
accum_dist	opencv2/flann/dist.h	/^    inline ResultType accum_dist(const U& a, const V& b, int) const$/;"	f	struct:cvflann::L2_Simple
accum_dist	opencv2/flann/dist.h	/^    inline ResultType accum_dist(const U& a, const V& b, int) const$/;"	f	struct:cvflann::MinkowskiDistance
accumulate	cpp_src/stl_numeric.h	/^    accumulate(_InputIterator __first, _InputIterator __last, _Tp __init)$/;"	f	namespace:std
accumulate	cpp_src/stl_numeric.h	/^    accumulate(_InputIterator __first, _InputIterator __last, _Tp __init,$/;"	f	namespace:std
accumulate_minimal_n	5/parallel/settings.h	/^    _SequenceIndex              accumulate_minimal_n;$/;"	m	struct:__gnu_parallel::_Settings
actual_erase_entry	5/ext/pb_ds/detail/list_update_map_/erase_fn_imps.hpp	/^actual_erase_entry(entry_pointer p_l)$/;"	f	class:PB_DS_CLASS_C_DEC
actual_erase_leaf	5/ext/pb_ds/detail/pat_trie_/erase_fn_imps.hpp	/^actual_erase_leaf(leaf_pointer p_l)$/;"	f	class:PB_DS_CLASS_C_DEC
actual_erase_node	5/ext/pb_ds/detail/bin_search_tree_/erase_fn_imps.hpp	/^actual_erase_node(node_pointer p_z)$/;"	f	class:PB_DS_CLASS_C_DEC
actual_erase_node	5/ext/pb_ds/detail/bin_search_tree_/r_erase_fn_imps.hpp	/^actual_erase_node(node_pointer p_z)$/;"	f	class:PB_DS_CLASS_C_DEC
actual_erase_node	5/ext/pb_ds/detail/left_child_next_sibling_heap_/erase_fn_imps.hpp	/^actual_erase_node(node_pointer p_nd)$/;"	f	class:PB_DS_CLASS_C_DEC
actual_erase_node	5/ext/pb_ds/detail/pat_trie_/r_erase_fn_imps.hpp	/^actual_erase_node(node_pointer p_z)$/;"	f	class:PB_DS_CLASS_C_DEC
actual_num_bands_	opencv2/stitching/detail/blenders.hpp	/^    int actual_num_bands_, num_bands_;$/;"	m	class:cv::detail::MultiBandBlender
add	opencv2/cudev/grid/detail/reduce.hpp	/^        __device__ __forceinline__ static void add(R* ptr, R val)$/;"	f	struct:cv::cudev::grid_reduce_detail::AtomicUnroll
add	opencv2/cudev/grid/detail/reduce.hpp	/^        __device__ __forceinline__ static void add(R* ptr, val_type val)$/;"	f	struct:cv::cudev::grid_reduce_detail::AtomicUnroll
add	opencv2/flann/lsh_table.h	/^    void add(Matrix<ElementType> dataset)$/;"	f	class:cvflann::lsh::LshTable
add	opencv2/flann/lsh_table.h	/^    void add(unsigned int value, const ElementType* feature)$/;"	f	class:cvflann::lsh::LshTable
addChild	opencv2/core/utility.hpp	/^    void addChild(Node<OBJECT> *pNode)$/;"	f	class:cv::Node
addPoint	opencv2/flann/result_set.h	/^    inline void addPoint(DistanceType dist, int index)$/;"	f	class:cvflann::KNNUniqueResultSet
addPoint	opencv2/flann/result_set.h	/^    void addPoint(DistanceType dist, int index)$/;"	f	class:cvflann::KNNResultSet
addPoint	opencv2/flann/result_set.h	/^    void addPoint(DistanceType dist, int index)$/;"	f	class:cvflann::KNNSimpleResultSet
addPoint	opencv2/flann/result_set.h	/^    void addPoint(DistanceType dist, int index)$/;"	f	class:cvflann::RadiusResultSet
addPoint	opencv2/flann/result_set.h	/^    void addPoint(DistanceType dist, int index)$/;"	f	class:cvflann::RadiusUniqueResultSet
addValue	opencv2/flann/simplex_downhill.h	/^void addValue(int pos, float val, float* vals, T* point, T* points, int n)$/;"	f	namespace:cvflann
add_branch	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^	add_branch()$/;"	f	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME::branch_bag
add_child	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^    add_child(node_pointer p_nd, a_const_iterator b_it, a_const_iterator e_it,$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
add_to_aux	5/ext/pb_ds/detail/thin_heap_/erase_fn_imps.hpp	/^add_to_aux(node_pointer p_nd)$/;"	f	class:PB_DS_CLASS_C_DEC
addedDescCount	opencv2/features2d.hpp	/^    int addedDescCount;$/;"	m	class:cv::FlannBasedMatcher
addref	opencv2/core/mat.inl.hpp	/^void Mat::addref()$/;"	f	class:cv::Mat
addref	opencv2/core/mat.inl.hpp	/^void SparseMat::addref()$/;"	f	class:cv::SparseMat
addref	opencv2/core/mat.inl.hpp	/^void UMat::addref()$/;"	f	class:cv::UMat
address	opencv2/core/cvstd.hpp	/^    const_pointer address(const_reference r) { return &r; }$/;"	f	class:cv::Allocator
address	opencv2/core/cvstd.hpp	/^    pointer address(reference r) { return &r; }$/;"	f	class:cv::Allocator
adjacent_difference	cpp_src/stl_numeric.h	/^    adjacent_difference(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std
adjacent_difference	cpp_src/stl_numeric.h	/^    adjacent_difference(_InputIterator __first,$/;"	f	namespace:std
adjacent_difference_minimal_n	5/parallel/settings.h	/^    unsigned int                adjacent_difference_minimal_n;$/;"	m	struct:__gnu_parallel::_Settings
adjacent_find	cpp_src/stl_algo.h	/^    adjacent_find(_ForwardIterator __first, _ForwardIterator __last)$/;"	f	namespace:std
adjacent_find	cpp_src/stl_algo.h	/^    adjacent_find(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std
adjustROI	opencv2/core/mat.inl.hpp	/^Mat_<_Tp>& Mat_<_Tp>::adjustROI( int dtop, int dbottom, int dleft, int dright )$/;"	f	class:cv::Mat_
adjustROI	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^__host__ GpuMat_<T>& GpuMat_<T>::adjustROI(int dtop, int dbottom, int dleft, int dright)$/;"	f	class:cv::cudev::GpuMat_
adjustfield	cpp_src/ios_base.h	/^    static const fmtflags adjustfield = _S_adjustfield;$/;"	m	class:std::ios_base
advance	cpp_src/stl_iterator_base_funcs.h	/^    advance(_InputIterator& __i, _Distance __n)$/;"	f	namespace:std
affineMap	opencv2/cudev/ptr2d/warping.hpp	/^__host__ static AffineMapPtrSz affineMap(Size dstSize, const GpuMat_<float>& warpMat)$/;"	f	namespace:cv::cudev
akaze	opencv2/stitching/detail/matchers.hpp	/^    Ptr<AKAZE> akaze;$/;"	m	class:cv::detail::AKAZEFeaturesFinder
algo	opencv2/flann/miniflann.hpp	/^    cvflann::flann_algorithm_t algo;$/;"	m	class:cv::flann::Index
algorithm_strategy	5/parallel/settings.h	/^    _AlgorithmStrategy          algorithm_strategy;$/;"	m	struct:__gnu_parallel::_Settings
align	opencv2/core/types_c.h	/^    int  align;             \/**< Alignment of image rows (4 or 8).$/;"	m	struct:_IplImage
alignPtr	opencv2/core/utility.hpp	/^template<typename _Tp> static inline _Tp* alignPtr(_Tp* ptr, int n=(int)sizeof(_Tp))$/;"	f	namespace:cv
alignSize	opencv2/core/utility.hpp	/^static inline size_t alignSize(size_t sz, int n)$/;"	f	namespace:cv
all	cpp_src/locale_classes.h	/^    static const category all		= (ctype | numeric | collate |$/;"	m	class:std::locale
all	opencv2/core/cuda/vec_traits.hpp	/^        static __device__ __host__ __forceinline__ char all(char v) {return v;}$/;"	f	struct:cv::cuda::device::VecTraits
all	opencv2/core/cuda/vec_traits.hpp	/^        static __device__ __host__ __forceinline__ char1 all(schar v) {return make_char1(v);}$/;"	f	struct:cv::cuda::device::VecTraits
all	opencv2/core/cuda/vec_traits.hpp	/^        static __device__ __host__ __forceinline__ char2 all(schar v) {return make_char2(v, v);}$/;"	f	struct:cv::cuda::device::VecTraits
all	opencv2/core/cuda/vec_traits.hpp	/^        static __device__ __host__ __forceinline__ char3 all(schar v) {return make_char3(v, v, v);}$/;"	f	struct:cv::cuda::device::VecTraits
all	opencv2/core/cuda/vec_traits.hpp	/^        static __device__ __host__ __forceinline__ char4 all(schar v) {return make_char4(v, v, v, v);}$/;"	f	struct:cv::cuda::device::VecTraits
all	opencv2/core/cuda/vec_traits.hpp	/^        static __device__ __host__ __forceinline__ char8 all(schar v) {return make_char8(v, v, v, v, v, v, v, v);}$/;"	f	struct:cv::cuda::device::VecTraits
all	opencv2/core/cuda/vec_traits.hpp	/^        static __device__ __host__ __forceinline__ schar all(schar v) {return v;}$/;"	f	struct:cv::cuda::device::VecTraits
all	opencv2/core/hal/intrin.hpp	/^    static v_float32x4 all(float val) { return v_setall_f32(val); }$/;"	f	struct:cv::V_RegTrait128
all	opencv2/core/hal/intrin.hpp	/^    static v_float64x2 all(double val) { return v_setall_f64(val); }$/;"	f	struct:cv::V_RegTrait128
all	opencv2/core/hal/intrin.hpp	/^    static v_int16x8 all(short val) { return v_setall_s16(val); }$/;"	f	struct:cv::V_RegTrait128
all	opencv2/core/hal/intrin.hpp	/^    static v_int32x4 all(int val) { return v_setall_s32(val); }$/;"	f	struct:cv::V_RegTrait128
all	opencv2/core/hal/intrin.hpp	/^    static v_int64x2 all(int64 val) { return v_setall_s64(val); }$/;"	f	struct:cv::V_RegTrait128
all	opencv2/core/hal/intrin.hpp	/^    static v_int8x16 all(schar val) { return v_setall_s8(val); }$/;"	f	struct:cv::V_RegTrait128
all	opencv2/core/hal/intrin.hpp	/^    static v_uint16x8 all(ushort val) { return v_setall_u16(val); }$/;"	f	struct:cv::V_RegTrait128
all	opencv2/core/hal/intrin.hpp	/^    static v_uint32x4 all(unsigned val) { return v_setall_u32(val); }$/;"	f	struct:cv::V_RegTrait128
all	opencv2/core/hal/intrin.hpp	/^    static v_uint64x2 all(uint64 val) { return v_setall_u64(val); }$/;"	f	struct:cv::V_RegTrait128
all	opencv2/core/hal/intrin.hpp	/^    static v_uint8x16 all(uchar val) { return v_setall_u8(val); }$/;"	f	struct:cv::V_RegTrait128
all	opencv2/core/hal/intrin_cpp.hpp	/^    static v_reg<_Tp, n> all(_Tp s)$/;"	f	struct:cv::v_reg
all	opencv2/core/matx.hpp	/^Matx<_Tp, m, n> Matx<_Tp, m, n>::all(_Tp alpha)$/;"	f	class:cv::Matx
all	opencv2/core/matx.hpp	/^Vec<_Tp, cn> Vec<_Tp, cn>::all(_Tp alpha)$/;"	f	class:cv::Vec
all	opencv2/core/types.hpp	/^Range Range::all()$/;"	f	class:cv::Range
all	opencv2/core/types.hpp	/^Scalar_<_Tp> Scalar_<_Tp>::all(_Tp v0)$/;"	f	class:cv::Scalar_
all	opencv2/cudev/util/vec_traits.hpp	/^    __host__ __device__ __forceinline__ static char1 all(schar v) {return make_char1(v);}$/;"	f	struct:cv::cudev::VecTraits
all	opencv2/cudev/util/vec_traits.hpp	/^    __host__ __device__ __forceinline__ static char2 all(schar v) {return make_char2(v, v);}$/;"	f	struct:cv::cudev::VecTraits
all	opencv2/cudev/util/vec_traits.hpp	/^    __host__ __device__ __forceinline__ static char3 all(schar v) {return make_char3(v, v, v);}$/;"	f	struct:cv::cudev::VecTraits
all	opencv2/cudev/util/vec_traits.hpp	/^    __host__ __device__ __forceinline__ static char4 all(schar v) {return make_char4(v, v, v, v);}$/;"	f	struct:cv::cudev::VecTraits
all	opencv2/cudev/util/vec_traits.hpp	/^    __host__ __device__ __forceinline__ static schar all(schar v) {return v;}$/;"	f	struct:cv::cudev::VecTraits
allocBegin	opencv2/cudalegacy/NCV.hpp	/^    Ncv8u *allocBegin;$/;"	m	class:NCVMemStackAllocator
alloc_type	opencv2/core/cuda.hpp	/^    AllocType alloc_type;$/;"	m	class:cv::cuda::HostMem
allocate	opencv2/core/cvstd.hpp	/^    pointer allocate(size_type count, const void* =0) { return reinterpret_cast<pointer>(fastMalloc(count * sizeof (_Tp))); }$/;"	f	class:cv::Allocator
allocate	opencv2/core/utility.hpp	/^AutoBuffer<_Tp, fixed_size>::allocate(size_t _size)$/;"	f	class:cv::AutoBuffer
allocate	opencv2/flann/allocator.h	/^    T* allocate(size_t count = 1)$/;"	f	class:cvflann::PooledAllocator
allocate	opencv2/flann/allocator.h	/^T* allocate(size_t count = 1)$/;"	f	namespace:cvflann
allocateMemory	opencv2/flann/allocator.h	/^    void* allocateMemory(int size)$/;"	f	class:cvflann::PooledAllocator
allocate_new_entry	5/ext/pb_ds/detail/list_update_map_/insert_fn_imps.hpp	/^allocate_new_entry(const_reference    r_val, true_type)$/;"	f	class:PB_DS_CLASS_C_DEC
allocate_new_entry	5/ext/pb_ds/detail/list_update_map_/insert_fn_imps.hpp	/^allocate_new_entry(const_reference r_val, false_type)$/;"	f	class:PB_DS_CLASS_C_DEC
allocatedMem	opencv2/cudalegacy/NCV.hpp	/^    NCVMemSegment allocatedMem;$/;"	m	class:NCVMatrixAlloc
allocatedMem	opencv2/cudalegacy/NCV.hpp	/^    NCVMemSegment allocatedMem;$/;"	m	class:NCVVectorAlloc
allocator	cpp_src/allocator.h	/^        allocator(const allocator<_Tp1>&) throw() { }$/;"	f	class:std::allocator
allocator	cpp_src/allocator.h	/^      allocator() throw() { }$/;"	f	class:std::allocator
allocator	cpp_src/allocator.h	/^      allocator(const allocator& __a) throw()$/;"	f	class:std::allocator
allocator	cpp_src/allocator.h	/^    class allocator: public __glibcxx_base_allocator<_Tp>$/;"	c	namespace:std
allocator	cpp_src/allocator.h	/^    class allocator<void>$/;"	c	namespace:std
allocator	opencv2/core/cuda.hpp	/^    Allocator* allocator;$/;"	m	class:cv::cuda::GpuMat
allocator	opencv2/core/mat.hpp	/^    MatAllocator* allocator;$/;"	m	class:cv::Mat
allocator	opencv2/core/mat.hpp	/^    MatAllocator* allocator;$/;"	m	class:cv::UMat
allocator	opencv2/cudalegacy/NCV.hpp	/^    INCVMemAllocator &allocator;$/;"	m	class:NCVMatrixAlloc
allocator	opencv2/cudalegacy/NCV.hpp	/^    INCVMemAllocator &allocator;$/;"	m	class:NCVVectorAlloc
allocatorFlags_	opencv2/core/mat.hpp	/^    int allocatorFlags_;$/;"	m	struct:cv::UMatData
allocator_type	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	/^      typedef _Alloc 					allocator_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_BIN_TREE_NAME
allocator_type	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	/^      typedef _Alloc 					allocator_type;$/;"	t	class:__gnu_pbds::detail::binary_heap
allocator_type	5/ext/pb_ds/detail/binomial_heap_/binomial_heap_.hpp	/^      typedef typename base_type::allocator_type 	allocator_type;$/;"	t	class:__gnu_pbds::detail::binomial_heap
allocator_type	5/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp	/^      typedef _Alloc 					allocator_type;$/;"	t	class:__gnu_pbds::detail::binomial_heap_base
allocator_type	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef _Alloc 				allocator_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
allocator_type	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef _Alloc 				allocator_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
allocator_type	5/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp	/^      typedef _Alloc 					allocator_type;$/;"	t	class:__gnu_pbds::detail::left_child_next_sibling_heap
allocator_type	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      typedef _Alloc allocator_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_LU_NAME
allocator_type	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      typedef _Alloc 					allocator_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
allocator_type	5/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp	/^      typedef _Alloc 					allocator_type;$/;"	t	class:__gnu_pbds::detail::pairing_heap
allocator_type	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef _Alloc 					allocator_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
allocator_type	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	  typedef _Alloc     					allocator_type;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Metadata
allocator_type	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	typedef _Alloc						allocator_type;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Node_base
allocator_type	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef _Alloc						allocator_type;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Inode
allocator_type	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename Node::allocator_type		allocator_type;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_CIter
allocator_type	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename base_type::allocator_type	allocator_type;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_Iter
allocator_type	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	/^      typedef _Alloc 					 allocator_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_RB_TREE_NAME
allocator_type	5/ext/pb_ds/detail/rc_binomial_heap_/rc.hpp	/^      typedef _Alloc 					 allocator_type;$/;"	t	class:__gnu_pbds::detail::rc
allocator_type	5/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp	/^      typedef typename base_type::allocator_type 	allocator_type;$/;"	t	class:__gnu_pbds::detail::rc_binomial_heap
allocator_type	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	/^      typedef _Alloc 					 allocator_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_S_TREE_NAME
allocator_type	5/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp	/^      typedef _Alloc 					allocator_type;$/;"	t	class:__gnu_pbds::detail::thin_heap
allocator_type	5/ext/pb_ds/detail/trie_policy/trie_policy_base.hpp	/^      typedef _Alloc 					allocator_type;$/;"	t	class:__gnu_pbds::detail::trie_policy_base
allocator_type	5/ext/pb_ds/list_update_policy.hpp	/^      typedef _Alloc 					allocator_type;$/;"	t	class:__gnu_pbds::lu_counter_policy
allocator_type	5/ext/pb_ds/list_update_policy.hpp	/^     typedef _Alloc 					allocator_type;$/;"	t	class:__gnu_pbds::lu_move_to_front_policy
allocator_type	5/ext/pb_ds/priority_queue.hpp	/^    typedef _Alloc 					allocator_type;$/;"	t	class:__gnu_pbds::priority_queue
allocator_type	5/ext/pb_ds/tree_policy.hpp	/^    typedef _Alloc 					allocator_type;$/;"	t	class:__gnu_pbds::tree_order_statistics_node_update
allocator_type	5/ext/pb_ds/trie_policy.hpp	/^    typedef _Alloc 					allocator_type;$/;"	t	class:__gnu_pbds::trie_order_statistics_node_update
allocator_type	5/ext/pb_ds/trie_policy.hpp	/^    typedef _Alloc 	       				allocator_type;$/;"	t	class:__gnu_pbds::trie_prefix_search_node_update
allocator_type	cpp_src/basic_string.h	/^      typedef _Alloc					    allocator_type;$/;"	t	class:std::basic_string
allocator_type	cpp_src/stl_bvector.h	/^      typedef _Alloc allocator_type;$/;"	t	struct:std::_Bvector_base
allocator_type	cpp_src/stl_bvector.h	/^    typedef _Alloc                        		 allocator_type;$/;"	t	class:std::vector
allocator_type	cpp_src/stl_deque.h	/^      typedef _Alloc                             allocator_type;$/;"	t	class:std::deque
allocator_type	cpp_src/stl_deque.h	/^      typedef _Alloc                  allocator_type;$/;"	t	class:std::_Deque_base
allocator_type	cpp_src/stl_list.h	/^      typedef _Alloc                                     allocator_type;$/;"	t	class:std::list
allocator_type	cpp_src/stl_list.h	/^      typedef _Alloc allocator_type;$/;"	t	class:std::_List_base
allocator_type	cpp_src/stl_map.h	/^      typedef _Alloc                                        allocator_type;$/;"	t	class:std::map
allocator_type	cpp_src/stl_multimap.h	/^      typedef _Alloc                                        allocator_type;$/;"	t	class:std::multimap
allocator_type	cpp_src/stl_multiset.h	/^      typedef _Alloc   allocator_type;$/;"	t	class:std::multiset
allocator_type	cpp_src/stl_set.h	/^      typedef _Alloc   allocator_type;$/;"	t	class:std::set
allocator_type	cpp_src/stl_tree.h	/^      typedef _Alloc allocator_type;$/;"	t	class:std::_Rb_tree
allocator_type	cpp_src/stl_vector.h	/^      typedef _Alloc                        		 allocator_type;$/;"	t	class:std::vector
allocator_type	cpp_src/stl_vector.h	/^      typedef _Alloc allocator_type;$/;"	t	struct:std::_Vector_base
alpha	opencv2/core/mat.hpp	/^    double alpha, beta;$/;"	m	class:cv::MatExpr
alpha	opencv2/cudalegacy/NCVBroxOpticalFlow.hpp	/^    Ncv32f alpha;$/;"	m	struct:NCVBroxOpticalFlowDescriptor
alpha	opencv2/objdetect/objdetect_c.h	/^    float* alpha;$/;"	m	struct:CvHaarClassifier
alpha1	opencv2/cudalegacy.hpp	/^    float alpha1; \/\/!< How quickly we forget old background pixel values seen. Typically set to 0.1.$/;"	m	struct:cv::cuda::FGDParams
alpha2	opencv2/cudalegacy.hpp	/^    float alpha2; \/\/!< "Controls speed of feature learning". Depends on T. Typical value circa 0.005.$/;"	m	struct:cv::cuda::FGDParams
alpha3	opencv2/cudalegacy.hpp	/^    float alpha3; \/\/!< Alternate to alpha2, used (e.g.) for quicker initial convergence. Typical value 0.1.$/;"	m	struct:cv::cuda::FGDParams
alphaChannel	opencv2/core/types_c.h	/^    int  alphaChannel;      \/**< Ignored by OpenCV *\/$/;"	m	struct:_IplImage
always_noconv	cpp_src/codecvt.h	/^      always_noconv() const throw()$/;"	f	class:std::__codecvt_abstract_base
anchorX	opencv2/core/types_c.h	/^    int  anchorX;$/;"	m	struct:_IplConvKernel
anchorX	opencv2/core/types_c.h	/^    int  anchorX;$/;"	m	struct:_IplConvKernelFP
anchorY	opencv2/core/types_c.h	/^    int  anchorY;$/;"	m	struct:_IplConvKernel
anchorY	opencv2/core/types_c.h	/^    int  anchorY;$/;"	m	struct:_IplConvKernelFP
angle	opencv2/core/types.hpp	/^    CV_PROP_RW float angle; \/\/!< computed orientation of the keypoint (-1 if not applicable);$/;"	m	class:cv::KeyPoint
angle	opencv2/core/types.hpp	/^    float angle;    \/\/< the rotation angle. When the angle is 0, 90, 180, 270 etc., the rectangle becomes an up-right rectangle.$/;"	m	class:cv::RotatedRect
angle	opencv2/core/types_c.h	/^    float angle;          \/**< Angle between the horizontal axis           *\/$/;"	m	struct:CvBox2D
annotation	5/sun/reflect/annotation/AnnotationInvocationHandler.h	/^      namespace annotation$/;"	n	namespace:sun::reflect
annotation	5/sun/reflect/annotation/AnnotationParser.h	/^      namespace annotation$/;"	n	namespace:sun::reflect
annotation	5/sun/reflect/annotation/AnnotationType.h	/^      namespace annotation$/;"	n	namespace:sun::reflect
annotation	5/sun/reflect/annotation/EnumConstantNotPresentExceptionProxy.h	/^      namespace annotation$/;"	n	namespace:sun::reflect
annotation	5/sun/reflect/annotation/ExceptionProxy.h	/^      namespace annotation$/;"	n	namespace:sun::reflect
any	opencv2/flann/any.h	/^    any()$/;"	f	struct:cvflann::any
any	opencv2/flann/any.h	/^    any(const T& x)$/;"	f	struct:cvflann::any
any	opencv2/flann/any.h	/^    any(const any& x)$/;"	f	struct:cvflann::any
any	opencv2/flann/any.h	/^    any(const char* x)$/;"	f	struct:cvflann::any
any	opencv2/flann/any.h	/^struct any$/;"	s	namespace:cvflann
anyimpl	opencv2/flann/any.h	/^namespace anyimpl$/;"	n	namespace:cvflann
app	cpp_src/ios_base.h	/^    static const openmode app =		_S_app;$/;"	m	class:std::ios_base
append	cpp_src/basic_string.h	/^        append(_InputIterator __first, _InputIterator __last)$/;"	f	class:std::basic_string
append	cpp_src/basic_string.h	/^      append(const _CharT* __s)$/;"	f	class:std::basic_string
apply	opencv2/stitching/detail/exposure_compensate.hpp	/^    void apply(int \/*index*\/, Point \/*corner*\/, InputOutputArray \/*image*\/, InputArray \/*mask*\/) { }$/;"	f	class:cv::detail::NoExposureCompensator
apply_update	5/ext/pb_ds/detail/bin_search_tree_/rotate_fn_imps.hpp	/^apply_update(node_pointer \/*p_nd*\/, null_node_update_pointer \/*p_update*\/)$/;"	f	class:PB_DS_CLASS_C_DEC
apply_update	5/ext/pb_ds/detail/bin_search_tree_/rotate_fn_imps.hpp	/^apply_update(node_pointer p_nd, Node_Update_*  \/*p_update*\/)$/;"	f	class:PB_DS_CLASS_C_DEC
apply_update	5/ext/pb_ds/detail/list_update_map_/find_fn_imps.hpp	/^apply_update(entry_pointer p_l, type_to_type<Metadata>)$/;"	f	class:PB_DS_CLASS_C_DEC
apply_update	5/ext/pb_ds/detail/list_update_map_/find_fn_imps.hpp	/^apply_update(entry_pointer, type_to_type<null_type>)$/;"	f	class:PB_DS_CLASS_C_DEC
apply_update	5/ext/pb_ds/detail/pat_trie_/rotate_fn_imps.hpp	/^apply_update(node_pointer \/*p_nd*\/, __gnu_pbds::null_node_update*  \/*p_update*\/)$/;"	f	class:PB_DS_CLASS_C_DEC
apply_update	5/ext/pb_ds/detail/pat_trie_/rotate_fn_imps.hpp	/^apply_update(node_pointer p_nd, Node_Update_* p_update)$/;"	f	class:PB_DS_CLASS_C_DEC
apply_update	5/ext/pb_ds/detail/pat_trie_/update_fn_imps.hpp	/^apply_update(node_pointer p_nd, Node_Update_*)$/;"	f	class:PB_DS_CLASS_C_DEC
apply_update	5/ext/pb_ds/detail/pat_trie_/update_fn_imps.hpp	/^apply_update(node_pointer, null_node_update_pointer)$/;"	f	class:PB_DS_CLASS_C_DEC
area	opencv2/core/types.hpp	/^_Tp Rect_<_Tp>::area() const$/;"	f	class:cv::Rect_
area	opencv2/core/types.hpp	/^_Tp Size_<_Tp>::area() const$/;"	f	class:cv::Size_
area	opencv2/imgproc/types_c.h	/^    double area;    \/**<area of the connected component  *\/$/;"	m	struct:CvConnectedComp
area_height	opencv2/cudev/ptr2d/interpolation.hpp	/^    float area_width, area_height;$/;"	m	struct:cv::cudev::CommonAreaInterPtr
area_height	opencv2/cudev/ptr2d/interpolation.hpp	/^    int area_width, area_height;$/;"	m	struct:cv::cudev::IntegerAreaInterPtr
area_width	opencv2/cudev/ptr2d/interpolation.hpp	/^    float area_width, area_height;$/;"	m	struct:cv::cudev::CommonAreaInterPtr
area_width	opencv2/cudev/ptr2d/interpolation.hpp	/^    int area_width, area_height;$/;"	m	struct:cv::cudev::IntegerAreaInterPtr
arg1	opencv2/core/cuda/functional.hpp	/^        typename Op::first_argument_type arg1;$/;"	m	struct:cv::cuda::device::binder1st
arg1	opencv2/cudev/functional/functional.hpp	/^    typename Op::first_argument_type arg1;$/;"	m	struct:cv::cudev::Binder1st
arg2	opencv2/core/cuda/functional.hpp	/^        typename Op::second_argument_type arg2;$/;"	m	struct:cv::cuda::device::binder2nd
arg2	opencv2/cudev/functional/functional.hpp	/^    typename Op::second_argument_type arg2;$/;"	m	struct:cv::cudev::Binder2nd
args	opencv2/core/ocl.hpp	/^    Kernel& args(const _Tp0& a0)$/;"	f	class:cv::ocl::Kernel
args	opencv2/core/ocl.hpp	/^    Kernel& args(const _Tp0& a0, const _Tp1& a1)$/;"	f	class:cv::ocl::Kernel
args	opencv2/core/ocl.hpp	/^    Kernel& args(const _Tp0& a0, const _Tp1& a1, const _Tp2& a2)$/;"	f	class:cv::ocl::Kernel
args	opencv2/core/ocl.hpp	/^    Kernel& args(const _Tp0& a0, const _Tp1& a1, const _Tp2& a2, const _Tp3& a3)$/;"	f	class:cv::ocl::Kernel
args	opencv2/core/ocl.hpp	/^    Kernel& args(const _Tp0& a0, const _Tp1& a1, const _Tp2& a2, const _Tp3& a3,$/;"	f	class:cv::ocl::Kernel
args	opencv2/core/ocl.hpp	/^    Kernel& args(const _Tp0& a0, const _Tp1& a1, const _Tp2& a2,$/;"	f	class:cv::ocl::Kernel
argument_type	cpp_src/stl_function.h	/^      typedef _Arg argument_type;   \/\/\/< @c argument_type is the type of the$/;"	t	struct:std::unary_function
argument_type	opencv2/cudev/functional/functional.hpp	/^    typedef _Arg    argument_type;$/;"	t	struct:cv::cudev::unary_function
arr	opencv2/core/core_c.h	/^CVAPI(CvScalar)  cvSum( const CvArr* arr );$/;"	v
arr	opencv2/core/core_c.h	/^CVAPI(CvSize) cvGetSize( const CvArr* arr );$/;"	v
arr	opencv2/core/core_c.h	/^CVAPI(int)  cvCountNonZero( const CvArr* arr );$/;"	v
arr	opencv2/core/core_c.h	/^CVAPI(int) cvGetElemType( const CvArr* arr );$/;"	v
arr	opencv2/core/core_c.h	/^CVAPI(void)  cvCreateData( CvArr* arr );$/;"	v
arr	opencv2/core/core_c.h	/^CVAPI(void)  cvReleaseData( CvArr* arr );$/;"	v
arr	opencv2/core/core_c.h	/^CVAPI(void)  cvSetZero( CvArr* arr );$/;"	v
arr_size	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	  arr_size = _ATraits::max_size + 1$/;"	e	enum:__gnu_pbds::detail::pat_trie_base::_Inode::__anon31
array	opencv2/cudev/util/type_traits.hpp	/^    T array[COUNT];$/;"	m	struct:cv::cudev::ArrayWrapper
array_iterator	opencv2/core/core_c.h	/^CVAPI(int) cvNextNArraySlice( CvNArrayIterator* array_iterator );$/;"	v
arrays	opencv2/core/mat.hpp	/^    const Mat** arrays;$/;"	m	class:cv::NAryMatIterator
as	opencv2/flann/matrix.h	/^    Matrix<T> as()$/;"	f	class:cvflann::UntypedMatrix
ascii	opencv2/highgui.hpp	/^    const int*  ascii;     \/\/!< font data and metrics$/;"	m	struct:cv::QtFont
ascii	opencv2/imgproc/imgproc_c.h	/^    const int*  ascii;      \/\/!< font data and metrics$/;"	m	struct:CvFont
aspect	opencv2/stitching/detail/camera.hpp	/^    double aspect; \/\/ Aspect ratio$/;"	m	struct:cv::detail::CameraParams
assertTest	opencv2/cudalegacy/NCV.hpp	/^    struct assertTest{};$/;"	s	namespace:NcvCTprep
assert_aux_null	5/ext/pb_ds/detail/thin_heap_/debug_fn_imps.hpp	/^assert_aux_null(const char* __file, int __line) const$/;"	f	class:PB_DS_CLASS_C_DEC
assert_consistent_with_debug_base	5/ext/pb_ds/detail/bin_search_tree_/debug_fn_imps.hpp	/^assert_consistent_with_debug_base(const char* __file, int __line) const$/;"	f	class:PB_DS_CLASS_C_DEC
assert_consistent_with_debug_base	5/ext/pb_ds/detail/bin_search_tree_/debug_fn_imps.hpp	/^assert_consistent_with_debug_base(const node_pointer p_nd,$/;"	f	class:PB_DS_CLASS_C_DEC
assert_entry_array_valid	5/ext/pb_ds/detail/gp_hash_table_map_/debug_no_store_hash_fn_imps.hpp	/^assert_entry_array_valid(const entry_array a_entries, false_type,$/;"	f	class:PB_DS_CLASS_C_DEC
assert_entry_array_valid	5/ext/pb_ds/detail/gp_hash_table_map_/debug_store_hash_fn_imps.hpp	/^assert_entry_array_valid(const entry_array a_entries, true_type,$/;"	f	class:PB_DS_CLASS_C_DEC
assert_entry_pointer_array_valid	5/ext/pb_ds/detail/cc_hash_table_map_/debug_fn_imps.hpp	/^assert_entry_pointer_array_valid(const entry_pointer_array a_p_entries,$/;"	f	class:PB_DS_CLASS_C_DEC
assert_entry_pointer_valid	5/ext/pb_ds/detail/cc_hash_table_map_/debug_no_store_hash_fn_imps.hpp	/^assert_entry_pointer_valid(const entry_pointer p, false_type,$/;"	f	class:PB_DS_CLASS_C_DEC
assert_entry_pointer_valid	5/ext/pb_ds/detail/cc_hash_table_map_/debug_store_hash_fn_imps.hpp	/^assert_entry_pointer_valid(const entry_pointer p_e, true_type,$/;"	f	class:PB_DS_CLASS_C_DEC
assert_iterators	5/ext/pb_ds/detail/bin_search_tree_/debug_fn_imps.hpp	/^assert_iterators(const char* __file, int __line) const$/;"	f	class:PB_DS_CLASS_C_DEC
assert_iterators	5/ext/pb_ds/detail/left_child_next_sibling_heap_/debug_fn_imps.hpp	/^assert_iterators(const char* __file, int __line) const$/;"	f	class:PB_DS_CLASS_C_DEC
assert_iterators	5/ext/pb_ds/detail/ov_tree_map_/debug_fn_imps.hpp	/^assert_iterators(const char* __file, int __line) const$/;"	f	class:PB_DS_CLASS_C_DEC
assert_iterators	5/ext/pb_ds/detail/pat_trie_/debug_fn_imps.hpp	/^assert_iterators(const char* __file, int __line) const$/;"	f	class:PB_DS_CLASS_C_DEC
assert_max	5/ext/pb_ds/detail/bin_search_tree_/debug_fn_imps.hpp	/^assert_max(const char* __file, int __line) const$/;"	f	class:PB_DS_CLASS_C_DEC
assert_max	5/ext/pb_ds/detail/binomial_heap_base_/debug_fn_imps.hpp	/^assert_max(const char* __file, int __line) const$/;"	f	class:PB_DS_CLASS_C_DEC
assert_max	5/ext/pb_ds/detail/thin_heap_/debug_fn_imps.hpp	/^assert_max(const char* __file, int __line) const$/;"	f	class:PB_DS_CLASS_C_DEC
assert_max_imp	5/ext/pb_ds/detail/bin_search_tree_/debug_fn_imps.hpp	/^assert_max_imp(const node_pointer p_nd,$/;"	f	class:PB_DS_CLASS_C_DEC
assert_min	5/ext/pb_ds/detail/bin_search_tree_/debug_fn_imps.hpp	/^assert_min(const char* __file, int __line) const$/;"	f	class:PB_DS_CLASS_C_DEC
assert_min_imp	5/ext/pb_ds/detail/bin_search_tree_/debug_fn_imps.hpp	/^assert_min_imp(const node_pointer p_nd, const char* __file, int __line) const$/;"	f	class:PB_DS_CLASS_C_DEC
assert_node_consistent	5/ext/pb_ds/detail/bin_search_tree_/debug_fn_imps.hpp	/^assert_node_consistent(const node_pointer p_nd,$/;"	f	class:PB_DS_CLASS_C_DEC
assert_node_consistent	5/ext/pb_ds/detail/binomial_heap_base_/debug_fn_imps.hpp	/^assert_node_consistent(node_const_pointer p_nd, bool strictly_binomial,$/;"	f	class:PB_DS_CLASS_C_DEC
assert_node_consistent	5/ext/pb_ds/detail/left_child_next_sibling_heap_/debug_fn_imps.hpp	/^assert_node_consistent(node_const_pointer p_nd, bool single_link,$/;"	f	class:PB_DS_CLASS_C_DEC
assert_node_consistent	5/ext/pb_ds/detail/rb_tree_map_/debug_fn_imps.hpp	/^assert_node_consistent(const node_pointer p_nd, const char* __file,$/;"	f	class:PB_DS_CLASS_C_DEC
assert_node_consistent	5/ext/pb_ds/detail/thin_heap_/debug_fn_imps.hpp	/^assert_node_consistent(node_const_pointer p_nd, bool root,$/;"	f	class:PB_DS_CLASS_C_DEC
assert_node_consistent_	5/ext/pb_ds/detail/bin_search_tree_/debug_fn_imps.hpp	/^assert_node_consistent_(const node_pointer p_nd,$/;"	f	class:PB_DS_CLASS_C_DEC
assert_node_consistent_with_left	5/ext/pb_ds/detail/bin_search_tree_/debug_fn_imps.hpp	/^assert_node_consistent_with_left(const node_pointer p_nd,$/;"	f	class:PB_DS_CLASS_C_DEC
assert_node_consistent_with_right	5/ext/pb_ds/detail/bin_search_tree_/debug_fn_imps.hpp	/^assert_node_consistent_with_right(const node_pointer p_nd,$/;"	f	class:PB_DS_CLASS_C_DEC
assert_referencible	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	assert_referencible() const$/;"	f	struct:__gnu_pbds::detail::pat_trie_base::_Inode::const_iterator
assert_reverse_iterators	5/ext/pb_ds/detail/pat_trie_/debug_fn_imps.hpp	/^assert_reverse_iterators(const char* __file, int __line) const$/;"	f	class:PB_DS_CLASS_C_DEC
assert_size	5/ext/pb_ds/detail/bin_search_tree_/debug_fn_imps.hpp	/^assert_size(const char* __file, int __line) const$/;"	f	class:PB_DS_CLASS_C_DEC
assert_size	5/ext/pb_ds/detail/left_child_next_sibling_heap_/debug_fn_imps.hpp	/^assert_size(const char* __file, int __line) const$/;"	f	class:PB_DS_CLASS_C_DEC
assert_special_imp	5/ext/pb_ds/detail/splay_tree_/debug_fn_imps.hpp	/^assert_special_imp(const node_pointer p_nd,$/;"	f	class:PB_DS_CLASS_C_DEC
assert_valid	5/ext/pb_ds/detail/bin_search_tree_/debug_fn_imps.hpp	/^assert_valid(const char* __file, int __line) const$/;"	f	class:PB_DS_CLASS_C_DEC
assert_valid	5/ext/pb_ds/detail/binary_heap_/debug_fn_imps.hpp	/^assert_valid(const char* __file, int __line) const$/;"	f	class:PB_DS_CLASS_C_DEC
assert_valid	5/ext/pb_ds/detail/binary_heap_/resize_policy.hpp	/^    assert_valid(const char* __file, int __line) const$/;"	f	class:__gnu_pbds::detail::resize_policy
assert_valid	5/ext/pb_ds/detail/binomial_heap_/debug_fn_imps.hpp	/^assert_valid(const char* __file, int __line) const$/;"	f	class:PB_DS_CLASS_C_DEC
assert_valid	5/ext/pb_ds/detail/binomial_heap_base_/debug_fn_imps.hpp	/^assert_valid(bool strictly_binomial, const char* __file, int __line) const$/;"	f	class:PB_DS_CLASS_C_DEC
assert_valid	5/ext/pb_ds/detail/cc_hash_table_map_/debug_fn_imps.hpp	/^assert_valid(const char* __file, int __line) const$/;"	f	class:PB_DS_CLASS_C_DEC
assert_valid	5/ext/pb_ds/detail/debug_map_base.hpp	/^    assert_valid(const char* __file, int __line) const$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
assert_valid	5/ext/pb_ds/detail/gp_hash_table_map_/debug_fn_imps.hpp	/^assert_valid(const char* __file, int __line) const$/;"	f	class:PB_DS_CLASS_C_DEC
assert_valid	5/ext/pb_ds/detail/left_child_next_sibling_heap_/debug_fn_imps.hpp	/^assert_valid(const char* __file, int __line) const$/;"	f	class:PB_DS_CLASS_C_DEC
assert_valid	5/ext/pb_ds/detail/list_update_map_/debug_fn_imps.hpp	/^assert_valid(const char* __file, int __line) const$/;"	f	class:PB_DS_CLASS_C_DEC
assert_valid	5/ext/pb_ds/detail/ov_tree_map_/debug_fn_imps.hpp	/^assert_valid(const char* __file, int __line) const$/;"	f	class:PB_DS_CLASS_C_DEC
assert_valid	5/ext/pb_ds/detail/pairing_heap_/debug_fn_imps.hpp	/^assert_valid(const char* __file, int __line) const$/;"	f	class:PB_DS_CLASS_C_DEC
assert_valid	5/ext/pb_ds/detail/pat_trie_/debug_fn_imps.hpp	/^assert_valid(const char* __file, int __line) const$/;"	f	class:PB_DS_CLASS_C_DEC
assert_valid	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	assert_valid(a_const_pointer p_traits,$/;"	f	struct:__gnu_pbds::detail::pat_trie_base::_Node_base
assert_valid	5/ext/pb_ds/detail/rb_tree_map_/debug_fn_imps.hpp	/^assert_valid(const char* __file, int __line) const$/;"	f	class:PB_DS_CLASS_C_DEC
assert_valid	5/ext/pb_ds/detail/rc_binomial_heap_/debug_fn_imps.hpp	/^assert_valid(const char* __file, int __line) const$/;"	f	class:PB_DS_CLASS_C_DEC
assert_valid	5/ext/pb_ds/detail/rc_binomial_heap_/rc.hpp	/^    assert_valid(const char* __file, int __line) const$/;"	f	class:__gnu_pbds::detail::rc
assert_valid	5/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_imp.hpp	/^assert_valid(const char* __file, int __line) const$/;"	f	class:PB_DS_CLASS_C_DEC
assert_valid	5/ext/pb_ds/detail/splay_tree_/debug_fn_imps.hpp	/^assert_valid(const char* __file, int __line) const$/;"	f	class:PB_DS_CLASS_C_DEC
assert_valid	5/ext/pb_ds/detail/thin_heap_/debug_fn_imps.hpp	/^assert_valid(const char* __file, int __line) const$/;"	f	class:PB_DS_CLASS_C_DEC
assert_valid_imp	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      assert_valid_imp(a_const_pointer p_traits,$/;"	f	struct:__gnu_pbds::detail::pat_trie_base::_Leaf
assert_valid_imp	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      assert_valid_imp(a_const_pointer, const char* __file, int __line) const$/;"	f	struct:__gnu_pbds::detail::pat_trie_base::_Head
assert_valid_imp	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^    assert_valid_imp(a_const_pointer p_traits,$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
assign	cpp_src/basic_string.h	/^        assign(_InputIterator __first, _InputIterator __last)$/;"	f	class:std::basic_string
assign	cpp_src/basic_string.h	/^      assign(const _CharT* __s)$/;"	f	class:std::basic_string
assign	cpp_src/basic_string.h	/^      assign(const basic_string& __str, size_type __pos, size_type __n)$/;"	f	class:std::basic_string
assign	cpp_src/basic_string.h	/^      assign(size_type __n, _CharT __c)$/;"	f	class:std::basic_string
assign	cpp_src/char_traits.h	/^      assign(char_type& __c1, const char_type& __c2)$/;"	f	struct:char_traits
assign	cpp_src/char_traits.h	/^    assign(char_type* __s, std::size_t __n, char_type __a)$/;"	f	class:char_traits
assign	cpp_src/stl_bvector.h	/^      assign(_InputIterator __first, _InputIterator __last)$/;"	f	class:std::vector
assign	cpp_src/stl_bvector.h	/^    assign(size_type __n, const bool& __x)$/;"	f	class:std::vector
assign	cpp_src/stl_deque.h	/^        assign(_InputIterator __first, _InputIterator __last)$/;"	f	class:std::deque
assign	cpp_src/stl_deque.h	/^      assign(size_type __n, const value_type& __val)$/;"	f	class:std::deque
assign	cpp_src/stl_list.h	/^        assign(_InputIterator __first, _InputIterator __last)$/;"	f	class:std::list
assign	cpp_src/stl_list.h	/^      assign(size_type __n, const value_type& __val)$/;"	f	class:std::list
assign	cpp_src/stl_vector.h	/^        assign(_InputIterator __first, _InputIterator __last)$/;"	f	class:std::vector
assign	cpp_src/stl_vector.h	/^      assign(size_type __n, const value_type& __val)$/;"	f	class:std::vector
assign	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^__host__ GpuMat_<T>& GpuMat_<T>::assign(const Expr<Body>& expr, Stream& stream)$/;"	f	class:cv::cudev::GpuMat_
assign	opencv2/flann/any.h	/^    any& assign(const T& x)$/;"	f	struct:cvflann::any
assign	opencv2/flann/any.h	/^    any& assign(const any& x)$/;"	f	struct:cvflann::any
assignTo	opencv2/core/cuda.inl.hpp	/^void GpuMat::assignTo(GpuMat& m, int _type) const$/;"	f	class:cv::cuda::GpuMat
assignTo	opencv2/core/mat.inl.hpp	/^void Mat::assignTo( Mat& m, int _type ) const$/;"	f	class:cv::Mat
assignTo	opencv2/core/mat.inl.hpp	/^void SparseMat::assignTo( SparseMat& m, int _type ) const$/;"	f	class:cv::SparseMat
assignTo	opencv2/core/mat.inl.hpp	/^void UMat::assignTo( UMat& m, int _type ) const$/;"	f	class:cv::UMat
assignTo	opencv2/cudev/expr/reduction.hpp	/^    __host__ void assignTo(GpuMat_<T>& dst, Stream& stream = Stream::Null()) const$/;"	f	struct:cv::cudev::CountNonZeroExprBody
assignTo	opencv2/cudev/expr/reduction.hpp	/^    __host__ void assignTo(GpuMat_<T>& dst, Stream& stream = Stream::Null()) const$/;"	f	struct:cv::cudev::FindMaxValExprBody
assignTo	opencv2/cudev/expr/reduction.hpp	/^    __host__ void assignTo(GpuMat_<T>& dst, Stream& stream = Stream::Null()) const$/;"	f	struct:cv::cudev::FindMinMaxValExprBody
assignTo	opencv2/cudev/expr/reduction.hpp	/^    __host__ void assignTo(GpuMat_<T>& dst, Stream& stream = Stream::Null()) const$/;"	f	struct:cv::cudev::FindMinValExprBody
assignTo	opencv2/cudev/expr/reduction.hpp	/^    __host__ void assignTo(GpuMat_<T>& dst, Stream& stream = Stream::Null()) const$/;"	f	struct:cv::cudev::HistogramBody
assignTo	opencv2/cudev/expr/reduction.hpp	/^    __host__ void assignTo(GpuMat_<T>& dst, Stream& stream = Stream::Null()) const$/;"	f	struct:cv::cudev::IntegralBody
assignTo	opencv2/cudev/expr/reduction.hpp	/^    __host__ void assignTo(GpuMat_<T>& dst, Stream& stream = Stream::Null()) const$/;"	f	struct:cv::cudev::ReduceToColumnBody
assignTo	opencv2/cudev/expr/reduction.hpp	/^    __host__ void assignTo(GpuMat_<T>& dst, Stream& stream = Stream::Null()) const$/;"	f	struct:cv::cudev::ReduceToRowBody
assignTo	opencv2/cudev/expr/reduction.hpp	/^    __host__ void assignTo(GpuMat_<T>& dst, Stream& stream = Stream::Null()) const$/;"	f	struct:cv::cudev::SumExprBody
assignTo	opencv2/cudev/expr/warping.hpp	/^    __host__ void assignTo(GpuMat_<T>& dst, Stream& stream = Stream::Null()) const$/;"	f	struct:cv::cudev::PyrDownBody
assignTo	opencv2/cudev/expr/warping.hpp	/^    __host__ void assignTo(GpuMat_<T>& dst, Stream& stream = Stream::Null()) const$/;"	f	struct:cv::cudev::PyrUpBody
assignTo	opencv2/cudev/expr/warping.hpp	/^    __host__ void assignTo(GpuMat_<T>& dst, Stream& stream = Stream::Null()) const$/;"	f	struct:cv::cudev::TransposeBody
assignTo	opencv2/cudev/ptr2d/deriv.hpp	/^    __host__ void assignTo(GpuMat_<T>& dst, Stream& stream = Stream::Null()) const$/;"	f	struct:cv::cudev::DerivXPtrSz
assignTo	opencv2/cudev/ptr2d/deriv.hpp	/^    __host__ void assignTo(GpuMat_<T>& dst, Stream& stream = Stream::Null()) const$/;"	f	struct:cv::cudev::DerivYPtrSz
assignTo	opencv2/cudev/ptr2d/deriv.hpp	/^    __host__ void assignTo(GpuMat_<T>& dst, Stream& stream = Stream::Null()) const$/;"	f	struct:cv::cudev::LaplacianPtrSz
assignTo	opencv2/cudev/ptr2d/deriv.hpp	/^    __host__ void assignTo(GpuMat_<T>& dst, Stream& stream = Stream::Null()) const$/;"	f	struct:cv::cudev::ScharrXPtrSz
assignTo	opencv2/cudev/ptr2d/deriv.hpp	/^    __host__ void assignTo(GpuMat_<T>& dst, Stream& stream = Stream::Null()) const$/;"	f	struct:cv::cudev::ScharrYPtrSz
assignTo	opencv2/cudev/ptr2d/deriv.hpp	/^    __host__ void assignTo(GpuMat_<T>& dst, Stream& stream = Stream::Null()) const$/;"	f	struct:cv::cudev::SobelXPtrSz
assignTo	opencv2/cudev/ptr2d/deriv.hpp	/^    __host__ void assignTo(GpuMat_<T>& dst, Stream& stream = Stream::Null()) const$/;"	f	struct:cv::cudev::SobelYPtrSz
assignTo	opencv2/cudev/ptr2d/lut.hpp	/^    __host__ void assignTo(GpuMat_<T>& dst, Stream& stream = Stream::Null()) const$/;"	f	struct:cv::cudev::LutPtrSz
assignTo	opencv2/cudev/ptr2d/remap.hpp	/^    __host__ void assignTo(GpuMat_<T>& dst, Stream& stream = Stream::Null()) const$/;"	f	struct:cv::cudev::RemapPtr1Sz
assignTo	opencv2/cudev/ptr2d/remap.hpp	/^    __host__ void assignTo(GpuMat_<T>& dst, Stream& stream = Stream::Null()) const$/;"	f	struct:cv::cudev::RemapPtr2Sz
assignTo	opencv2/cudev/ptr2d/resize.hpp	/^    __host__ void assignTo(GpuMat_<T>& dst, Stream& stream = Stream::Null()) const$/;"	f	struct:cv::cudev::ResizePtrSz
assignTo	opencv2/cudev/ptr2d/transform.hpp	/^    __host__ void assignTo(GpuMat_<T>& dst, Stream& stream = Stream::Null()) const$/;"	f	struct:cv::cudev::BinaryTransformPtrSz
assignTo	opencv2/cudev/ptr2d/transform.hpp	/^    __host__ void assignTo(GpuMat_<T>& dst, Stream& stream = Stream::Null()) const$/;"	f	struct:cv::cudev::UnaryTransformPtrSz
associative_tag	5/ext/pb_ds/tag_and_trait.hpp	/^  struct associative_tag : public container_tag { };$/;"	s	namespace:__gnu_pbds
at	cpp_src/basic_string.h	/^      at(size_type __n) const$/;"	f	class:std::basic_string
at	cpp_src/basic_string.h	/^      at(size_type __n)$/;"	f	class:std::basic_string
at	cpp_src/stl_bvector.h	/^    at(size_type __n) const$/;"	f	class:std::vector
at	cpp_src/stl_bvector.h	/^    at(size_type __n)$/;"	f	class:std::vector
at	cpp_src/stl_deque.h	/^      at(size_type __n) const$/;"	f	class:std::deque
at	cpp_src/stl_deque.h	/^      at(size_type __n)$/;"	f	class:std::deque
at	cpp_src/stl_map.h	/^      at(const key_type& __k) const$/;"	f	class:std::map
at	cpp_src/stl_map.h	/^      at(const key_type& __k)$/;"	f	class:std::map
at	cpp_src/stl_vector.h	/^      at(size_type __n) const$/;"	f	class:std::vector
at	cpp_src/stl_vector.h	/^      at(size_type __n)$/;"	f	class:std::vector
at	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename Ptr2D> __device__ __forceinline__ D at(typename Ptr2D::index_type y, typename Ptr2D::index_type x, const Ptr2D& src) const$/;"	f	struct:cv::cuda::device::BrdConstant
at	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename Ptr2D> __device__ __forceinline__ D at(typename Ptr2D::index_type y, typename Ptr2D::index_type x, const Ptr2D& src) const$/;"	f	struct:cv::cuda::device::BrdReflect
at	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename Ptr2D> __device__ __forceinline__ D at(typename Ptr2D::index_type y, typename Ptr2D::index_type x, const Ptr2D& src) const$/;"	f	struct:cv::cuda::device::BrdReflect101
at	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename Ptr2D> __device__ __forceinline__ D at(typename Ptr2D::index_type y, typename Ptr2D::index_type x, const Ptr2D& src) const$/;"	f	struct:cv::cuda::device::BrdReplicate
at	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename Ptr2D> __device__ __forceinline__ D at(typename Ptr2D::index_type y, typename Ptr2D::index_type x, const Ptr2D& src) const$/;"	f	struct:cv::cuda::device::BrdWrap
at	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename T> __device__ __forceinline__ D at(int x, const T* data) const$/;"	f	struct:cv::cuda::device::BrdRowConstant
at	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename T> __device__ __forceinline__ D at(int x, const T* data) const$/;"	f	struct:cv::cuda::device::BrdRowReflect
at	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename T> __device__ __forceinline__ D at(int x, const T* data) const$/;"	f	struct:cv::cuda::device::BrdRowReflect101
at	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename T> __device__ __forceinline__ D at(int x, const T* data) const$/;"	f	struct:cv::cuda::device::BrdRowReplicate
at	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename T> __device__ __forceinline__ D at(int x, const T* data) const$/;"	f	struct:cv::cuda::device::BrdRowWrap
at	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename T> __device__ __forceinline__ D at(int y, const T* data, size_t step) const$/;"	f	struct:cv::cuda::device::BrdColConstant
at	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename T> __device__ __forceinline__ D at(int y, const T* data, size_t step) const$/;"	f	struct:cv::cuda::device::BrdColReflect
at	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename T> __device__ __forceinline__ D at(int y, const T* data, size_t step) const$/;"	f	struct:cv::cuda::device::BrdColReflect101
at	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename T> __device__ __forceinline__ D at(int y, const T* data, size_t step) const$/;"	f	struct:cv::cuda::device::BrdColReplicate
at	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename T> __device__ __forceinline__ D at(int y, const T* data, size_t step) const$/;"	f	struct:cv::cuda::device::BrdColWrap
at	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename T> __device__ __forceinline__ D at(int y, int x, const T* data, size_t step) const$/;"	f	struct:cv::cuda::device::BrdConstant
at	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename T> __device__ __forceinline__ D at(int y, int x, const T* data, size_t step) const$/;"	f	struct:cv::cuda::device::BrdReflect
at	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename T> __device__ __forceinline__ D at(int y, int x, const T* data, size_t step) const$/;"	f	struct:cv::cuda::device::BrdReflect101
at	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename T> __device__ __forceinline__ D at(int y, int x, const T* data, size_t step) const$/;"	f	struct:cv::cuda::device::BrdReplicate
at	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename T> __device__ __forceinline__ D at(int y, int x, const T* data, size_t step) const$/;"	f	struct:cv::cuda::device::BrdWrap
at	opencv2/core/mat.inl.hpp	/^_Tp& Mat::at(Point pt)$/;"	f	class:cv::Mat
at	opencv2/core/mat.inl.hpp	/^_Tp& Mat::at(const Vec<int, n>& idx)$/;"	f	class:cv::Mat
at	opencv2/core/mat.inl.hpp	/^_Tp& Mat::at(const int* idx)$/;"	f	class:cv::Mat
at	opencv2/core/mat.inl.hpp	/^_Tp& Mat::at(int i0)$/;"	f	class:cv::Mat
at	opencv2/core/mat.inl.hpp	/^_Tp& Mat::at(int i0, int i1)$/;"	f	class:cv::Mat
at	opencv2/core/mat.inl.hpp	/^_Tp& Mat::at(int i0, int i1, int i2)$/;"	f	class:cv::Mat
at	opencv2/core/mat.inl.hpp	/^const _Tp& Mat::at(Point pt) const$/;"	f	class:cv::Mat
at	opencv2/core/mat.inl.hpp	/^const _Tp& Mat::at(const Vec<int, n>& idx) const$/;"	f	class:cv::Mat
at	opencv2/core/mat.inl.hpp	/^const _Tp& Mat::at(const int* idx) const$/;"	f	class:cv::Mat
at	opencv2/core/mat.inl.hpp	/^const _Tp& Mat::at(int i0) const$/;"	f	class:cv::Mat
at	opencv2/core/mat.inl.hpp	/^const _Tp& Mat::at(int i0, int i1) const$/;"	f	class:cv::Mat
at	opencv2/core/mat.inl.hpp	/^const _Tp& Mat::at(int i0, int i1, int i2) const$/;"	f	class:cv::Mat
at	opencv2/cudalegacy/NCV.hpp	/^    T& at(Ncv32u x, Ncv32u y) const$/;"	f	class:NCVMatrix
at	opencv2/videostab/ring_buffer.hpp	/^template <typename T> inline T& at(int idx, std::vector<T> &items)$/;"	f	namespace:cv::videostab
at	opencv2/videostab/ring_buffer.hpp	/^template <typename T> inline const T& at(int idx, const std::vector<T> &items)$/;"	f	namespace:cv::videostab
at0	5/ext/pb_ds/detail/container_base_dispatch.hpp	/^      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 0>	at0;$/;"	t	struct:__gnu_pbds::detail::container_base_dispatch
at0t	5/ext/pb_ds/detail/container_base_dispatch.hpp	/^      typedef typename at0::type			    	at0t;$/;"	t	struct:__gnu_pbds::detail::container_base_dispatch
at1	5/ext/pb_ds/detail/container_base_dispatch.hpp	/^      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 1> 	at1;$/;"	t	struct:__gnu_pbds::detail::container_base_dispatch
at1t	5/ext/pb_ds/detail/container_base_dispatch.hpp	/^      typedef typename at1::type			    	at1t;$/;"	t	struct:__gnu_pbds::detail::container_base_dispatch
at2	5/ext/pb_ds/detail/container_base_dispatch.hpp	/^      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 2>	at2;$/;"	t	struct:__gnu_pbds::detail::container_base_dispatch
at2t	5/ext/pb_ds/detail/container_base_dispatch.hpp	/^      typedef typename at2::type			    	at2t;$/;"	t	struct:__gnu_pbds::detail::container_base_dispatch
at3	5/ext/pb_ds/detail/container_base_dispatch.hpp	/^      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 3>	at3;$/;"	t	struct:__gnu_pbds::detail::container_base_dispatch
at3t	5/ext/pb_ds/detail/container_base_dispatch.hpp	/^      typedef typename at3::type				at3t;$/;"	t	struct:__gnu_pbds::detail::container_base_dispatch
at4	5/ext/pb_ds/detail/container_base_dispatch.hpp	/^      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 4> 	at4;$/;"	t	struct:__gnu_pbds::detail::container_base_dispatch
at4t	5/ext/pb_ds/detail/container_base_dispatch.hpp	/^      typedef typename at4::type			    	at4t;$/;"	t	struct:__gnu_pbds::detail::container_base_dispatch
at5	5/ext/pb_ds/detail/container_base_dispatch.hpp	/^      typedef __gnu_cxx::typelist::at_index<Policy_Tl, 5> 	at5;$/;"	t	struct:__gnu_pbds::detail::container_base_dispatch
at5t	5/ext/pb_ds/detail/container_base_dispatch.hpp	/^      typedef typename at5::type			    	at5t;$/;"	t	struct:__gnu_pbds::detail::container_base_dispatch
at_high	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename T> __device__ __forceinline__ D at_high(int x, const T* data) const$/;"	f	struct:cv::cuda::device::BrdRowConstant
at_high	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename T> __device__ __forceinline__ D at_high(int x, const T* data) const$/;"	f	struct:cv::cuda::device::BrdRowReflect
at_high	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename T> __device__ __forceinline__ D at_high(int x, const T* data) const$/;"	f	struct:cv::cuda::device::BrdRowReflect101
at_high	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename T> __device__ __forceinline__ D at_high(int x, const T* data) const$/;"	f	struct:cv::cuda::device::BrdRowReplicate
at_high	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename T> __device__ __forceinline__ D at_high(int x, const T* data) const$/;"	f	struct:cv::cuda::device::BrdRowWrap
at_high	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename T> __device__ __forceinline__ D at_high(int y, const T* data, size_t step) const$/;"	f	struct:cv::cuda::device::BrdColConstant
at_high	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename T> __device__ __forceinline__ D at_high(int y, const T* data, size_t step) const$/;"	f	struct:cv::cuda::device::BrdColReflect
at_high	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename T> __device__ __forceinline__ D at_high(int y, const T* data, size_t step) const$/;"	f	struct:cv::cuda::device::BrdColReflect101
at_high	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename T> __device__ __forceinline__ D at_high(int y, const T* data, size_t step) const$/;"	f	struct:cv::cuda::device::BrdColReplicate
at_high	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename T> __device__ __forceinline__ D at_high(int y, const T* data, size_t step) const$/;"	f	struct:cv::cuda::device::BrdColWrap
at_low	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename T> __device__ __forceinline__ D at_low(int x, const T* data) const$/;"	f	struct:cv::cuda::device::BrdRowConstant
at_low	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename T> __device__ __forceinline__ D at_low(int x, const T* data) const$/;"	f	struct:cv::cuda::device::BrdRowReflect
at_low	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename T> __device__ __forceinline__ D at_low(int x, const T* data) const$/;"	f	struct:cv::cuda::device::BrdRowReflect101
at_low	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename T> __device__ __forceinline__ D at_low(int x, const T* data) const$/;"	f	struct:cv::cuda::device::BrdRowReplicate
at_low	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename T> __device__ __forceinline__ D at_low(int x, const T* data) const$/;"	f	struct:cv::cuda::device::BrdRowWrap
at_low	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename T> __device__ __forceinline__ D at_low(int y, const T* data, size_t step) const$/;"	f	struct:cv::cuda::device::BrdColConstant
at_low	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename T> __device__ __forceinline__ D at_low(int y, const T* data, size_t step) const$/;"	f	struct:cv::cuda::device::BrdColReflect
at_low	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename T> __device__ __forceinline__ D at_low(int y, const T* data, size_t step) const$/;"	f	struct:cv::cuda::device::BrdColReflect101
at_low	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename T> __device__ __forceinline__ D at_low(int y, const T* data, size_t step) const$/;"	f	struct:cv::cuda::device::BrdColReplicate
at_low	opencv2/core/cuda/border_interpolate.hpp	/^        template <typename T> __device__ __forceinline__ D at_low(int y, const T* data, size_t step) const$/;"	f	struct:cv::cuda::device::BrdColWrap
ate	cpp_src/ios_base.h	/^    static const openmode ate =		_S_ate;$/;"	m	class:std::ios_base
atomic	opencv2/cudev/grid/detail/reduce.hpp	/^        __device__ __forceinline__ static void atomic(T* result, T myval)$/;"	f	struct:cv::cudev::grid_reduce_detail::maxop
atomic	opencv2/cudev/grid/detail/reduce.hpp	/^        __device__ __forceinline__ static void atomic(T* result, T myval)$/;"	f	struct:cv::cudev::grid_reduce_detail::minop
atomicAdd	opencv2/core/cuda/emulation.hpp	/^            static __device__ __forceinline__ T atomicAdd(T* address, T val)$/;"	f	struct:cv::cuda::device::Emulation::smem
atomicAdd	opencv2/core/cuda/emulation.hpp	/^            static __device__ __forceinline__ double atomicAdd(double* address, double val)$/;"	f	struct:cv::cuda::device::Emulation::glob
atomicAdd	opencv2/core/cuda/emulation.hpp	/^            static __device__ __forceinline__ float atomicAdd(float* address, float val)$/;"	f	struct:cv::cuda::device::Emulation::glob
atomicAdd	opencv2/core/cuda/emulation.hpp	/^            static __device__ __forceinline__ int atomicAdd(int* address, int val)$/;"	f	struct:cv::cuda::device::Emulation::glob
atomicAdd	opencv2/core/cuda/emulation.hpp	/^            static __device__ __forceinline__ unsigned int atomicAdd(unsigned int* address, unsigned int val)$/;"	f	struct:cv::cuda::device::Emulation::glob
atomicAdd	opencv2/cudev/util/atomic.hpp	/^__device__ __forceinline__ float atomicAdd(float* address, float val)$/;"	f	namespace:cv::cudev
atomicAdd	opencv2/cudev/util/atomic.hpp	/^__device__ __forceinline__ int atomicAdd(int* address, int val)$/;"	f	namespace:cv::cudev
atomicAdd	opencv2/cudev/util/atomic.hpp	/^__device__ __forceinline__ uint atomicAdd(uint* address, uint val)$/;"	f	namespace:cv::cudev
atomicAdd	opencv2/cudev/util/atomic.hpp	/^__device__ static double atomicAdd(double* address, double val)$/;"	f	namespace:cv::cudev
atomicInc	opencv2/core/cuda/emulation.hpp	/^            static __device__ __forceinline__ T atomicInc(T* address, T val)$/;"	f	struct:cv::cuda::device::Emulation::smem
atomicMax	opencv2/core/cuda/emulation.hpp	/^            static __device__ __forceinline__ double atomicMax(double* address, double val)$/;"	f	struct:cv::cuda::device::Emulation::glob
atomicMax	opencv2/core/cuda/emulation.hpp	/^            static __device__ __forceinline__ float atomicMax(float* address, float val)$/;"	f	struct:cv::cuda::device::Emulation::glob
atomicMax	opencv2/core/cuda/emulation.hpp	/^            static __device__ __forceinline__ int atomicMax(int* address, int val)$/;"	f	struct:cv::cuda::device::Emulation::glob
atomicMax	opencv2/cudev/util/atomic.hpp	/^__device__ __forceinline__ int atomicMax(int* address, int val)$/;"	f	namespace:cv::cudev
atomicMax	opencv2/cudev/util/atomic.hpp	/^__device__ __forceinline__ uint atomicMax(uint* address, uint val)$/;"	f	namespace:cv::cudev
atomicMax	opencv2/cudev/util/atomic.hpp	/^__device__ static double atomicMax(double* address, double val)$/;"	f	namespace:cv::cudev
atomicMax	opencv2/cudev/util/atomic.hpp	/^__device__ static float atomicMax(float* address, float val)$/;"	f	namespace:cv::cudev
atomicMin	opencv2/core/cuda/emulation.hpp	/^            static __device__ __forceinline__ T atomicMin(T* address, T val)$/;"	f	struct:cv::cuda::device::Emulation::smem
atomicMin	opencv2/core/cuda/emulation.hpp	/^            static __device__ __forceinline__ double atomicMin(double* address, double val)$/;"	f	struct:cv::cuda::device::Emulation::glob
atomicMin	opencv2/core/cuda/emulation.hpp	/^            static __device__ __forceinline__ float atomicMin(float* address, float val)$/;"	f	struct:cv::cuda::device::Emulation::glob
atomicMin	opencv2/core/cuda/emulation.hpp	/^            static __device__ __forceinline__ int atomicMin(int* address, int val)$/;"	f	struct:cv::cuda::device::Emulation::glob
atomicMin	opencv2/cudev/util/atomic.hpp	/^__device__ __forceinline__ int atomicMin(int* address, int val)$/;"	f	namespace:cv::cudev
atomicMin	opencv2/cudev/util/atomic.hpp	/^__device__ __forceinline__ uint atomicMin(uint* address, uint val)$/;"	f	namespace:cv::cudev
atomicMin	opencv2/cudev/util/atomic.hpp	/^__device__ static double atomicMin(double* address, double val)$/;"	f	namespace:cv::cudev
atomicMin	opencv2/cudev/util/atomic.hpp	/^__device__ static float atomicMin(float* address, float val)$/;"	f	namespace:cv::cudev
attempts	opencv2/features2d.hpp	/^    int attempts;$/;"	m	class:cv::BOWKMeansTrainer
attr	opencv2/core/types_c.h	/^    const char** attr;         \/**< NULL-terminated array of (attribute_name,attribute_value) pairs. *\/$/;"	m	struct:CvAttrList
awt	5/sun/awt/CausedFocusEvent.h	/^    namespace awt$/;"	n	namespace:java
awt	5/sun/awt/CausedFocusEvent.h	/^    namespace awt$/;"	n	namespace:sun
b	opencv2/core/cuda/border_interpolate.hpp	/^        B b;$/;"	m	struct:cv::cuda::device::BorderReader
b	opencv2/core/mat.hpp	/^    Mat a, b, c;$/;"	m	class:cv::MatExpr
b	opencv2/stitching/detail/warpers.hpp	/^    float a, b;$/;"	m	struct:cv::detail::CompressedRectilinearPortraitProjector
b	opencv2/stitching/detail/warpers.hpp	/^    float a, b;$/;"	m	struct:cv::detail::CompressedRectilinearProjector
b	opencv2/stitching/detail/warpers.hpp	/^    float a, b;$/;"	m	struct:cv::detail::PaniniPortraitProjector
b	opencv2/stitching/detail/warpers.hpp	/^    float a, b;$/;"	m	struct:cv::detail::PaniniProjector
b	opencv2/stitching/warpers.hpp	/^    float a, b;$/;"	m	class:cv::CompressedRectilinearPortraitWarper
b	opencv2/stitching/warpers.hpp	/^    float a, b;$/;"	m	class:cv::CompressedRectilinearWarper
b	opencv2/stitching/warpers.hpp	/^    float a, b;$/;"	m	class:cv::PaniniPortraitWarper
b	opencv2/stitching/warpers.hpp	/^    float a, b;$/;"	m	class:cv::PaniniWarper
bHasStumpsOnly	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^    NcvBool bHasStumpsOnly;$/;"	m	struct:HaarClassifierCascadeDescriptor
bNeedsTiltedII	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^    NcvBool bNeedsTiltedII;$/;"	m	struct:HaarClassifierCascadeDescriptor
bReused	opencv2/cudalegacy/NCV.hpp	/^    NcvBool bReused;$/;"	m	class:NCVMatrixReuse
bReused	opencv2/cudalegacy/NCV.hpp	/^    NcvBool bReused;$/;"	m	class:NCVVectorReuse
bReusesMemory	opencv2/cudalegacy/NCV.hpp	/^    NcvBool bReusesMemory;$/;"	m	class:NCVMemStackAllocator
bSum_	opencv2/videostab/deblurring.hpp	/^    Mat_<float> bSum_, gSum_, rSum_, wSum_;$/;"	m	class:cv::videostab::WeightingDeblurer
back	cpp_src/stl_bvector.h	/^    back() const$/;"	f	class:std::vector
back	cpp_src/stl_bvector.h	/^    back()$/;"	f	class:std::vector
back	cpp_src/stl_deque.h	/^      back() const$/;"	f	class:std::deque
back	cpp_src/stl_deque.h	/^      back()$/;"	f	class:std::deque
back	cpp_src/stl_list.h	/^      back() const$/;"	f	class:std::list
back	cpp_src/stl_list.h	/^      back()$/;"	f	class:std::list
back	cpp_src/stl_queue.h	/^      back() const$/;"	f	class:std::queue
back	cpp_src/stl_queue.h	/^      back()$/;"	f	class:std::queue
back	cpp_src/stl_vector.h	/^      back() const$/;"	f	class:std::vector
back	cpp_src/stl_vector.h	/^      back()$/;"	f	class:std::vector
back	opencv2/core/core_c.h	/^template<typename _Tp> inline _Tp& Seq<_Tp>::back()$/;"	f	class:cv::Seq
back	opencv2/core/core_c.h	/^template<typename _Tp> inline const _Tp& Seq<_Tp>::back() const$/;"	f	class:cv::Seq
backSubst	opencv2/core/operations.hpp	/^SVD::backSubst( const Matx<_Tp, nm, 1>& w, const Matx<_Tp, m, nm>& u,$/;"	f	class:cv::SVD
back_insert_iterator	cpp_src/stl_iterator.h	/^      back_insert_iterator(_Container& __x) : container(&__x) { }$/;"	f	class:std::back_insert_iterator
back_insert_iterator	cpp_src/stl_iterator.h	/^    class back_insert_iterator$/;"	c	namespace:std
back_inserter	cpp_src/stl_iterator.h	/^    back_inserter(_Container& __x)$/;"	f	namespace:std
back_join	5/ext/pb_ds/detail/pairing_heap_/erase_fn_imps.hpp	/^back_join(node_pointer p_nd, node_pointer p_next)$/;"	f	class:PB_DS_CLASS_C_DEC
bad	cpp_src/basic_ios.h	/^      bad() const$/;"	f	class:std::basic_ios
bad_any_cast	opencv2/flann/any.h	/^struct bad_any_cast$/;"	s	namespace:cvflann::anyimpl
bad_region_penalty_	opencv2/stitching/detail/seam_finders.hpp	/^    float bad_region_penalty_;$/;"	m	class:cv::detail::GraphCutSeamFinderGpu
badbit	cpp_src/ios_base.h	/^    static const iostate badbit =	_S_badbit;$/;"	m	class:std::ios_base
bag_type	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^	typedef std::_GLIBCXX_STD_C::list<__inp, __rebind_inp> 	bag_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME::branch_bag
bag_type	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^	typedef std::list<__inp, __rebind_inp> 			bag_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME::branch_bag
balanced_quicksort_tag	5/parallel/tags.h	/^    balanced_quicksort_tag() { }$/;"	f	struct:__gnu_parallel::balanced_quicksort_tag
balanced_quicksort_tag	5/parallel/tags.h	/^    balanced_quicksort_tag(_ThreadIndex __num_threads)$/;"	f	struct:__gnu_parallel::balanced_quicksort_tag
balanced_quicksort_tag	5/parallel/tags.h	/^  struct balanced_quicksort_tag : public parallel_tag$/;"	s	namespace:__gnu_parallel
balanced_tag	5/parallel/tags.h	/^  struct balanced_tag : public parallel_tag { };$/;"	s	namespace:__gnu_parallel
base	cpp_src/stl_iterator.h	/^      base() const$/;"	f	class:__normal_iterator
base	cpp_src/stl_iterator.h	/^      base() const$/;"	f	class:std::reverse_iterator
base	opencv2/flann/allocator.h	/^    void*   base;     \/* Pointer to base of current block of storage. *\/$/;"	m	class:cvflann::PooledAllocator
base_any_policy	opencv2/flann/any.h	/^struct base_any_policy$/;"	s	namespace:cvflann::anyimpl
base_it_type	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	/^      typedef PB_DS_TREE_CONST_IT_C_DEC base_it_type;$/;"	t	class:__gnu_pbds::detail::bin_search_tree_it_
base_type	5/ext/pb_ds/assoc_container.hpp	/^    typedef PB_DS_CC_HASH_BASE 			base_type;$/;"	t	class:__gnu_pbds::cc_hash_table
base_type	5/ext/pb_ds/assoc_container.hpp	/^    typedef PB_DS_GP_HASH_BASE 			base_type;$/;"	t	class:__gnu_pbds::gp_hash_table
base_type	5/ext/pb_ds/assoc_container.hpp	/^    typedef PB_DS_TREE_BASE 			base_type;$/;"	t	class:__gnu_pbds::tree
base_type	5/ext/pb_ds/assoc_container.hpp	/^    typedef PB_DS_TRIE_BASE			base_type;$/;"	t	class:__gnu_pbds::trie
base_type	5/ext/pb_ds/assoc_container.hpp	/^    typedef typename PB_DS_BRANCH_BASE 	       	base_type;$/;"	t	class:__gnu_pbds::basic_branch
base_type	5/ext/pb_ds/assoc_container.hpp	/^    typedef typename PB_DS_HASH_BASE 		base_type;$/;"	t	class:__gnu_pbds::basic_hash_table
base_type	5/ext/pb_ds/assoc_container.hpp	/^    typedef typename PB_DS_LU_BASE 		base_type;$/;"	t	class:__gnu_pbds::list_update
base_type	5/ext/pb_ds/detail/binary_heap_/const_iterator.hpp	/^      typedef PB_DS_BIN_HEAP_CIT_BASE 		       	base_type;$/;"	t	class:__gnu_pbds::detail::binary_heap_const_iterator_
base_type	5/ext/pb_ds/detail/binomial_heap_/binomial_heap_.hpp	/^      typedef binomial_heap_base<Value_Type, Cmp_Fn, _Alloc> 	base_type;$/;"	t	class:__gnu_pbds::detail::binomial_heap
base_type	5/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp	/^      typedef PB_DS_B_HEAP_BASE	  			base_type;$/;"	t	class:__gnu_pbds::detail::binomial_heap_base
base_type	5/ext/pb_ds/detail/left_child_next_sibling_heap_/const_iterator.hpp	/^      typedef PB_DS_BASIC_HEAP_CIT_BASE 	      	base_type;$/;"	t	class:__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_
base_type	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	/^      typedef PB_DS_OV_TREE_CONST_NODE_ITERATOR_C_DEC base_type;$/;"	t	class:__gnu_pbds::detail::ov_tree_node_it_
base_type	5/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp	/^      typedef PB_DS_P_HEAP_BASE				base_type;$/;"	t	class:__gnu_pbds::detail::pairing_heap
base_type	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef pat_trie_base				base_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
base_type	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^			  _CIterator, Iterator, _Alloc>	base_type;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_Node_iter
base_type	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      							base_type;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_Iter
base_type	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef _Node_base<_ATraits, Metadata> 			base_type;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Head
base_type	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef _Node_base<_ATraits, Metadata> 			base_type;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Inode
base_type	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef _Node_base<_ATraits, Metadata> 	   	    	base_type;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Leaf
base_type	5/ext/pb_ds/detail/pat_trie_/synth_access_traits.hpp	/^      typedef _ATraits 					base_type;$/;"	t	struct:__gnu_pbds::detail::synth_access_traits
base_type	5/ext/pb_ds/detail/pat_trie_/traits.hpp	/^      typedef pat_trie_base					base_type;$/;"	t	struct:__gnu_pbds::detail::trie_traits
base_type	5/ext/pb_ds/detail/pat_trie_/traits.hpp	/^      typedef pat_trie_base				    	base_type;$/;"	t	struct:__gnu_pbds::detail::trie_traits
base_type	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	/^      typedef PB_DS_RB_TREE_BASE 		       	 base_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_RB_TREE_NAME
base_type	5/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp	/^      							base_type;$/;"	t	class:__gnu_pbds::detail::rc_binomial_heap
base_type	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	/^      typedef PB_DS_S_TREE_BASE 		       	 base_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_S_TREE_NAME
base_type	5/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp	/^      typedef left_child_next_sibling_heap PB_DS_BASE_T_P base_type;$/;"	t	class:__gnu_pbds::detail::thin_heap
base_type	5/ext/pb_ds/detail/tree_trace_base.hpp	/^      typedef PB_DS_TRACE_BASE 			base_type;$/;"	t	class:__gnu_pbds::detail::tree_trace_base
base_type	5/ext/pb_ds/detail/trie_policy/trie_policy_base.hpp	/^      typedef branch_policy<Node_CItr, Node_Itr, _Alloc> base_type;$/;"	t	class:__gnu_pbds::detail::trie_policy_base
base_type	5/ext/pb_ds/detail/unordered_iterator/const_iterator.hpp	/^  typedef point_const_iterator_ base_type;$/;"	t	class:const_iterator_
base_type	5/ext/pb_ds/detail/unordered_iterator/iterator.hpp	/^  typedef const_iterator_ base_type;$/;"	t	class:iterator_
base_type	5/ext/pb_ds/list_update_policy.hpp	/^      typedef detail::lu_counter_policy_base<size_type> 	base_type;$/;"	t	class:__gnu_pbds::lu_counter_policy
base_type	5/ext/pb_ds/priority_queue.hpp	/^ 							base_type;$/;"	t	class:__gnu_pbds::priority_queue
base_type	5/ext/pb_ds/tag_and_trait.hpp	/^    typedef container_traits_base<container_category>  base_type;$/;"	t	struct:__gnu_pbds::container_traits
base_type	5/ext/pb_ds/tree_policy.hpp	/^    typedef PB_DS_BRANCH_POLICY_BASE 		       	base_type;$/;"	t	class:__gnu_pbds::tree_order_statistics_node_update
base_type	5/ext/pb_ds/trie_policy.hpp	/^    typedef PB_DS_TRIE_POLICY_BASE 		       	base_type;$/;"	t	class:__gnu_pbds::trie_order_statistics_node_update
base_type	5/ext/pb_ds/trie_policy.hpp	/^    typedef PB_DS_TRIE_POLICY_BASE 		       	base_type;$/;"	t	class:__gnu_pbds::trie_prefix_search_node_update
basefield	cpp_src/ios_base.h	/^    static const fmtflags basefield =   _S_basefield;$/;"	m	class:std::ios_base
basic_branch	5/ext/pb_ds/assoc_container.hpp	/^      basic_branch(T0 t0) : base_type(t0) { }$/;"	f	class:__gnu_pbds::basic_branch
basic_branch	5/ext/pb_ds/assoc_container.hpp	/^      basic_branch(T0 t0, T1 t1) : base_type(t0, t1) { }$/;"	f	class:__gnu_pbds::basic_branch
basic_branch	5/ext/pb_ds/assoc_container.hpp	/^      basic_branch(T0 t0, T1 t1, T2 t2) : base_type(t0, t1, t2) { }$/;"	f	class:__gnu_pbds::basic_branch
basic_branch	5/ext/pb_ds/assoc_container.hpp	/^      basic_branch(T0 t0, T1 t1, T2 t2, T3 t3)$/;"	f	class:__gnu_pbds::basic_branch
basic_branch	5/ext/pb_ds/assoc_container.hpp	/^      basic_branch(T0 t0, T1 t1, T2 t2, T3 t3, T4 t4)$/;"	f	class:__gnu_pbds::basic_branch
basic_branch	5/ext/pb_ds/assoc_container.hpp	/^      basic_branch(T0 t0, T1 t1, T2 t2, T3 t3, T4 t4, T5 t5)$/;"	f	class:__gnu_pbds::basic_branch
basic_branch	5/ext/pb_ds/assoc_container.hpp	/^      basic_branch(T0 t0, T1 t1, T2 t2, T3 t3, T4 t4, T5 t5, T6 t6)$/;"	f	class:__gnu_pbds::basic_branch
basic_branch	5/ext/pb_ds/assoc_container.hpp	/^    basic_branch() { }$/;"	f	class:__gnu_pbds::basic_branch
basic_branch	5/ext/pb_ds/assoc_container.hpp	/^    basic_branch(const basic_branch& other)$/;"	f	class:__gnu_pbds::basic_branch
basic_branch	5/ext/pb_ds/assoc_container.hpp	/^  class basic_branch : public PB_DS_BRANCH_BASE$/;"	c	namespace:__gnu_pbds
basic_branch_tag	5/ext/pb_ds/tag_and_trait.hpp	/^  struct basic_branch_tag : public associative_tag { };$/;"	s	namespace:__gnu_pbds
basic_hash_table	5/ext/pb_ds/assoc_container.hpp	/^      basic_hash_table(T0 t0) : base_type(t0) { }$/;"	f	class:__gnu_pbds::basic_hash_table
basic_hash_table	5/ext/pb_ds/assoc_container.hpp	/^      basic_hash_table(T0 t0, T1 t1) : base_type(t0, t1) { }$/;"	f	class:__gnu_pbds::basic_hash_table
basic_hash_table	5/ext/pb_ds/assoc_container.hpp	/^      basic_hash_table(T0 t0, T1 t1, T2 t2) : base_type(t0, t1, t2) { }$/;"	f	class:__gnu_pbds::basic_hash_table
basic_hash_table	5/ext/pb_ds/assoc_container.hpp	/^      basic_hash_table(T0 t0, T1 t1, T2 t2, T3 t3)$/;"	f	class:__gnu_pbds::basic_hash_table
basic_hash_table	5/ext/pb_ds/assoc_container.hpp	/^      basic_hash_table(T0 t0, T1 t1, T2 t2, T3 t3, T4 t4)$/;"	f	class:__gnu_pbds::basic_hash_table
basic_hash_table	5/ext/pb_ds/assoc_container.hpp	/^      basic_hash_table(T0 t0, T1 t1, T2 t2, T3 t3, T4 t4, T5 t5)$/;"	f	class:__gnu_pbds::basic_hash_table
basic_hash_table	5/ext/pb_ds/assoc_container.hpp	/^      basic_hash_table(T0 t0, T1 t1, T2 t2, T3 t3, T4 t4, T5 t5, T6 t6)$/;"	f	class:__gnu_pbds::basic_hash_table
basic_hash_table	5/ext/pb_ds/assoc_container.hpp	/^      basic_hash_table(T0 t0, T1 t1, T2 t2, T3 t3, T4 t4, T5 t5, T6 t6, T7 t7)$/;"	f	class:__gnu_pbds::basic_hash_table
basic_hash_table	5/ext/pb_ds/assoc_container.hpp	/^      basic_hash_table(T0 t0, T1 t1, T2 t2, T3 t3, T4 t4, T5 t5, T6 t6,$/;"	f	class:__gnu_pbds::basic_hash_table
basic_hash_table	5/ext/pb_ds/assoc_container.hpp	/^    basic_hash_table() { }$/;"	f	class:__gnu_pbds::basic_hash_table
basic_hash_table	5/ext/pb_ds/assoc_container.hpp	/^    basic_hash_table(const basic_hash_table& other)$/;"	f	class:__gnu_pbds::basic_hash_table
basic_hash_table	5/ext/pb_ds/assoc_container.hpp	/^  class basic_hash_table : public PB_DS_HASH_BASE$/;"	c	namespace:__gnu_pbds
basic_hash_tag	5/ext/pb_ds/tag_and_trait.hpp	/^  struct basic_hash_tag : public associative_tag { };$/;"	s	namespace:__gnu_pbds
basic_invalidation_guarantee	5/ext/pb_ds/tag_and_trait.hpp	/^  struct basic_invalidation_guarantee$/;"	s	namespace:__gnu_pbds
basic_ios	cpp_src/basic_ios.h	/^      basic_ios()$/;"	f	class:std::basic_ios
basic_ios	cpp_src/basic_ios.h	/^      basic_ios(basic_streambuf<_CharT, _Traits>* __sb)$/;"	f	class:std::basic_ios
basic_ios	cpp_src/basic_ios.h	/^    class basic_ios : public ios_base$/;"	c	namespace:std
basic_string	cpp_src/basic_string.h	/^    basic_string()$/;"	f	class:std::basic_string
basic_string	cpp_src/basic_string.h	/^    class basic_string$/;"	c	namespace:std
beg	cpp_src/ios_base.h	/^    static const seekdir beg =		_S_beg;$/;"	m	class:std::ios_base
begin	5/ext/pb_ds/detail/bin_search_tree_/iterators_fn_imps.hpp	/^begin() const$/;"	f	class:PB_DS_CLASS_C_DEC
begin	5/ext/pb_ds/detail/bin_search_tree_/iterators_fn_imps.hpp	/^begin()$/;"	f	class:PB_DS_CLASS_C_DEC
begin	5/ext/pb_ds/detail/binary_heap_/iterators_fn_imps.hpp	/^begin() const$/;"	f	class:PB_DS_CLASS_C_DEC
begin	5/ext/pb_ds/detail/binary_heap_/iterators_fn_imps.hpp	/^begin()$/;"	f	class:PB_DS_CLASS_C_DEC
begin	5/ext/pb_ds/detail/cc_hash_table_map_/iterators_fn_imps.hpp	/^begin() const$/;"	f	class:PB_DS_CLASS_C_DEC
begin	5/ext/pb_ds/detail/cc_hash_table_map_/iterators_fn_imps.hpp	/^begin()$/;"	f	class:PB_DS_CLASS_C_DEC
begin	5/ext/pb_ds/detail/gp_hash_table_map_/iterator_fn_imps.hpp	/^begin() const$/;"	f	class:PB_DS_CLASS_C_DEC
begin	5/ext/pb_ds/detail/gp_hash_table_map_/iterator_fn_imps.hpp	/^begin()$/;"	f	class:PB_DS_CLASS_C_DEC
begin	5/ext/pb_ds/detail/left_child_next_sibling_heap_/iterators_fn_imps.hpp	/^begin() const$/;"	f	class:PB_DS_CLASS_C_DEC
begin	5/ext/pb_ds/detail/left_child_next_sibling_heap_/iterators_fn_imps.hpp	/^begin()$/;"	f	class:PB_DS_CLASS_C_DEC
begin	5/ext/pb_ds/detail/list_update_map_/iterators_fn_imps.hpp	/^begin() const$/;"	f	class:PB_DS_CLASS_C_DEC
begin	5/ext/pb_ds/detail/list_update_map_/iterators_fn_imps.hpp	/^begin()$/;"	f	class:PB_DS_CLASS_C_DEC
begin	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      begin() const$/;"	f	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
begin	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      begin()$/;"	f	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
begin	5/ext/pb_ds/detail/pat_trie_/iterators_fn_imps.hpp	/^begin() const$/;"	f	class:PB_DS_CLASS_C_DEC
begin	5/ext/pb_ds/detail/pat_trie_/iterators_fn_imps.hpp	/^begin()$/;"	f	class:PB_DS_CLASS_C_DEC
begin	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^    begin() const$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
begin	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^    begin()$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
begin	5/ext/pb_ds/detail/rc_binomial_heap_/rc.hpp	/^    begin() const$/;"	f	class:__gnu_pbds::detail::rc
begin	5/ext/pb_ds/detail/trie_policy/trie_string_access_traits_imp.hpp	/^begin(key_const_reference r_key)$/;"	f	class:PB_DS_CLASS_C_DEC
begin	5/parallel/base.h	/^      begin() const$/;"	f	class:__gnu_parallel::_PseudoSequence
begin	cpp_src/basic_string.h	/^      begin() const$/;"	f	class:std::basic_string
begin	cpp_src/basic_string.h	/^      begin()$/;"	f	class:std::basic_string
begin	cpp_src/stl_bvector.h	/^    begin() const$/;"	f	class:std::vector
begin	cpp_src/stl_bvector.h	/^    begin()$/;"	f	class:std::vector
begin	cpp_src/stl_deque.h	/^      begin() const$/;"	f	class:std::deque
begin	cpp_src/stl_deque.h	/^      begin()$/;"	f	class:std::deque
begin	cpp_src/stl_list.h	/^      begin() const$/;"	f	class:std::list
begin	cpp_src/stl_list.h	/^      begin()$/;"	f	class:std::list
begin	cpp_src/stl_map.h	/^      begin() const$/;"	f	class:std::map
begin	cpp_src/stl_map.h	/^      begin()$/;"	f	class:std::map
begin	cpp_src/stl_multimap.h	/^      begin() const$/;"	f	class:std::multimap
begin	cpp_src/stl_multimap.h	/^      begin()$/;"	f	class:std::multimap
begin	cpp_src/stl_multiset.h	/^      begin() const$/;"	f	class:std::multiset
begin	cpp_src/stl_set.h	/^      begin() const$/;"	f	class:std::set
begin	cpp_src/stl_tempbuf.h	/^      begin()$/;"	f	class:std::_Temporary_buffer
begin	cpp_src/stl_tree.h	/^      begin() const$/;"	f	class:std::_Rb_tree
begin	cpp_src/stl_tree.h	/^      begin()$/;"	f	class:std::_Rb_tree
begin	cpp_src/stl_vector.h	/^      begin() const$/;"	f	class:std::vector
begin	cpp_src/stl_vector.h	/^      begin()$/;"	f	class:std::vector
begin	cpp_src/valarray_array.h	/^    _Array<_Tp>::begin () const$/;"	f	class:std::_Array
begin	opencv2/core/core_c.h	/^template<typename _Tp> inline SeqIterator<_Tp> Seq<_Tp>::begin() const$/;"	f	class:cv::Seq
begin	opencv2/core/cvstd.hpp	/^const char* String::begin() const$/;"	f	class:cv::String
begin	opencv2/core/mat.inl.hpp	/^MatConstIterator_<_Tp> Mat::begin() const$/;"	f	class:cv::Mat
begin	opencv2/core/mat.inl.hpp	/^MatConstIterator_<_Tp> Mat_<_Tp>::begin() const$/;"	f	class:cv::Mat_
begin	opencv2/core/mat.inl.hpp	/^MatIterator_<_Tp> Mat::begin()$/;"	f	class:cv::Mat
begin	opencv2/core/mat.inl.hpp	/^MatIterator_<_Tp> Mat_<_Tp>::begin()$/;"	f	class:cv::Mat_
begin	opencv2/core/mat.inl.hpp	/^SparseMatConstIterator SparseMat::begin() const$/;"	f	class:cv::SparseMat
begin	opencv2/core/mat.inl.hpp	/^SparseMatConstIterator_<_Tp> SparseMat::begin() const$/;"	f	class:cv::SparseMat
begin	opencv2/core/mat.inl.hpp	/^SparseMatConstIterator_<_Tp> SparseMat_<_Tp>::begin() const$/;"	f	class:cv::SparseMat_
begin	opencv2/core/mat.inl.hpp	/^SparseMatIterator SparseMat::begin()$/;"	f	class:cv::SparseMat
begin	opencv2/core/mat.inl.hpp	/^SparseMatIterator_<_Tp> SparseMat::begin()$/;"	f	class:cv::SparseMat
begin	opencv2/core/mat.inl.hpp	/^SparseMatIterator_<_Tp> SparseMat_<_Tp>::begin()$/;"	f	class:cv::SparseMat_
begin	opencv2/core/persistence.hpp	/^inline FileNodeIterator FileNode::begin() const { return FileNodeIterator(fs, node); }$/;"	f	class:cv::FileNode
begin	opencv2/cudalegacy/NCV.hpp	/^    NCVMemPtr begin;$/;"	m	struct:NCVMemSegment
begin	opencv2/cudalegacy/NCV.hpp	/^    Ncv8u *begin;$/;"	m	class:NCVMemStackAllocator
begin_imp	5/ext/pb_ds/detail/trie_policy/trie_string_access_traits_imp.hpp	/^begin_imp(key_const_reference r_key, detail::false_type)$/;"	f	class:PB_DS_CLASS_C_DEC
begin_imp	5/ext/pb_ds/detail/trie_policy/trie_string_access_traits_imp.hpp	/^begin_imp(key_const_reference r_key, detail::true_type)$/;"	f	class:PB_DS_CLASS_C_DEC
belongs_to	opencv2/flann/kmeans_index.h	/^        int* belongs_to;$/;"	m	class:cvflann::KMeansIndex::KMeansDistanceComputer
bestIndex_	opencv2/flann/autotuned_index.h	/^    NNIndex<Distance>* bestIndex_;$/;"	m	class:cvflann::AutotunedIndex
bestParams_	opencv2/flann/autotuned_index.h	/^    IndexParams bestParams_;$/;"	m	class:cvflann::AutotunedIndex
bestSearchParams_	opencv2/flann/autotuned_index.h	/^    SearchParams bestSearchParams_;$/;"	m	class:cvflann::AutotunedIndex
beta	opencv2/core/mat.hpp	/^    double alpha, beta;$/;"	m	class:cv::MatExpr
bicubicCoeff	opencv2/core/cuda/filters.hpp	/^        static __device__ __forceinline__ float bicubicCoeff(float x_)$/;"	f	struct:cv::cuda::device::CubicFilter
bicubicCoeff	opencv2/cudev/ptr2d/interpolation.hpp	/^    __device__ static float bicubicCoeff(float x_)$/;"	f	struct:cv::cudev::CubicInterPtr
bidirectional_iterator_tag	cpp_src/stl_iterator_base_types.h	/^  struct bidirectional_iterator_tag : public forward_iterator_tag {};$/;"	s	namespace:std
big_any_policy	opencv2/flann/any.h	/^struct big_any_policy : typed_base_any_policy<T>$/;"	s	namespace:cvflann::anyimpl
bin_search_tree_const_it_	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	/^      bin_search_tree_const_it_(const Node_Pointer p_nd = 0) $/;"	f	class:__gnu_pbds::detail::bin_search_tree_const_it_
bin_search_tree_const_it_	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	/^      bin_search_tree_const_it_(const PB_DS_TREE_CONST_ODIR_IT_C_DEC& other) $/;"	f	class:__gnu_pbds::detail::bin_search_tree_const_it_
bin_search_tree_const_it_	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	/^    class bin_search_tree_const_it_$/;"	c	namespace:__gnu_pbds::detail
bin_search_tree_const_node_it_	5/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp	/^      bin_search_tree_const_node_it_(const node_pointer p_nd = 0)$/;"	f	class:__gnu_pbds::detail::bin_search_tree_const_node_it_
bin_search_tree_const_node_it_	5/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp	/^    class bin_search_tree_const_node_it_$/;"	c	namespace:__gnu_pbds::detail
bin_search_tree_it_	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	/^      bin_search_tree_it_(const Node_Pointer p_nd = 0) $/;"	f	class:__gnu_pbds::detail::bin_search_tree_it_
bin_search_tree_it_	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	/^      bin_search_tree_it_(const PB_DS_TREE_ODIR_IT_C_DEC& other) $/;"	f	class:__gnu_pbds::detail::bin_search_tree_it_
bin_search_tree_it_	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	/^    class bin_search_tree_it_ : public PB_DS_TREE_CONST_IT_C_DEC$/;"	c	namespace:__gnu_pbds::detail
bin_search_tree_node_it_	5/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp	/^      bin_search_tree_node_it_(const node_pointer p_nd = 0)$/;"	f	class:__gnu_pbds::detail::bin_search_tree_node_it_
bin_search_tree_node_it_	5/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp	/^    class bin_search_tree_node_it_$/;"	c	namespace:__gnu_pbds::detail
bin_search_tree_traits	5/ext/pb_ds/detail/bin_search_tree_/traits.hpp	/^    bin_search_tree_traits<Key, null_type, Cmp_Fn, Node_Update, Node, _Alloc>$/;"	s	namespace:__gnu_pbds::detail
bin_search_tree_traits	5/ext/pb_ds/detail/bin_search_tree_/traits.hpp	/^    struct bin_search_tree_traits$/;"	s	namespace:__gnu_pbds::detail
binary	cpp_src/ios_base.h	/^    static const openmode binary =	_S_bin;$/;"	m	class:std::ios_base
binaryTupleAdapter	opencv2/cudev/functional/tuple_adapter.hpp	/^__host__ __device__ BinaryTupleAdapter<Op, n0, n1> binaryTupleAdapter(const Op& op)$/;"	f	namespace:cv::cudev
binary_function	cpp_src/stl_function.h	/^    struct binary_function$/;"	s	namespace:std
binary_function	opencv2/core/cuda/functional.hpp	/^    template<typename Argument1, typename Argument2, typename Result> struct binary_function : public std::binary_function<Argument1, Argument2, Result> {};$/;"	s	namespace:cv::cuda::device
binary_function	opencv2/cudev/functional/functional.hpp	/^template <typename _Arg1, typename _Arg2, typename _Result> struct binary_function$/;"	s	namespace:cv::cudev
binary_heap	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	/^    class binary_heap$/;"	c	namespace:__gnu_pbds::detail
binary_heap	5/ext/pb_ds/detail/binary_heap_/constructors_destructor_fn_imps.hpp	/^binary_heap()$/;"	f	class:PB_DS_CLASS_C_DEC
binary_heap	5/ext/pb_ds/detail/binary_heap_/constructors_destructor_fn_imps.hpp	/^binary_heap(const Cmp_Fn& r_cmp_fn)$/;"	f	class:PB_DS_CLASS_C_DEC
binary_heap	5/ext/pb_ds/detail/binary_heap_/constructors_destructor_fn_imps.hpp	/^binary_heap(const PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
binary_heap_const_iterator_	5/ext/pb_ds/detail/binary_heap_/const_iterator.hpp	/^      binary_heap_const_iterator_()$/;"	f	class:__gnu_pbds::detail::binary_heap_const_iterator_
binary_heap_const_iterator_	5/ext/pb_ds/detail/binary_heap_/const_iterator.hpp	/^      binary_heap_const_iterator_(const binary_heap_const_iterator_& other) $/;"	f	class:__gnu_pbds::detail::binary_heap_const_iterator_
binary_heap_const_iterator_	5/ext/pb_ds/detail/binary_heap_/const_iterator.hpp	/^      binary_heap_const_iterator_(entry_pointer p_e) : base_type(p_e)$/;"	f	class:__gnu_pbds::detail::binary_heap_const_iterator_
binary_heap_const_iterator_	5/ext/pb_ds/detail/binary_heap_/const_iterator.hpp	/^    class binary_heap_const_iterator_ : public PB_DS_BIN_HEAP_CIT_BASE$/;"	c	namespace:__gnu_pbds::detail
binary_heap_point_const_iterator_	5/ext/pb_ds/detail/binary_heap_/point_const_iterator.hpp	/^      binary_heap_point_const_iterator_() : m_p_e(0) { }$/;"	f	class:__gnu_pbds::detail::binary_heap_point_const_iterator_
binary_heap_point_const_iterator_	5/ext/pb_ds/detail/binary_heap_/point_const_iterator.hpp	/^      binary_heap_point_const_iterator_(const binary_heap_point_const_iterator_& other)$/;"	f	class:__gnu_pbds::detail::binary_heap_point_const_iterator_
binary_heap_point_const_iterator_	5/ext/pb_ds/detail/binary_heap_/point_const_iterator.hpp	/^      binary_heap_point_const_iterator_(entry_pointer p_e) : m_p_e(p_e)$/;"	f	class:__gnu_pbds::detail::binary_heap_point_const_iterator_
binary_heap_point_const_iterator_	5/ext/pb_ds/detail/binary_heap_/point_const_iterator.hpp	/^    class binary_heap_point_const_iterator_$/;"	c	namespace:__gnu_pbds::detail
binary_heap_tag	5/ext/pb_ds/tag_and_trait.hpp	/^  struct binary_heap_tag : public priority_queue_tag { };$/;"	s	namespace:__gnu_pbds
binary_negate	cpp_src/stl_function.h	/^      binary_negate(const _Predicate& __x)$/;"	f	class:std::binary_negate
binary_negate	cpp_src/stl_function.h	/^    class binary_negate$/;"	c	namespace:std
binary_negate	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ binary_negate() {}$/;"	f	struct:cv::cuda::device::binary_negate
binary_negate	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ binary_negate(const binary_negate& other) : pred(other.pred) {}$/;"	f	struct:cv::cuda::device::binary_negate
binary_negate	opencv2/core/cuda/functional.hpp	/^        explicit __host__ __device__ __forceinline__ binary_negate(const Predicate& p) : pred(p) {}$/;"	f	struct:cv::cuda::device::binary_negate
binary_negate	opencv2/core/cuda/functional.hpp	/^    template <typename Predicate> struct binary_negate : binary_function<typename Predicate::first_argument_type, typename Predicate::second_argument_type, bool>$/;"	s	namespace:cv::cuda::device
binary_search	cpp_src/stl_algo.h	/^    binary_search(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std
bind	opencv2/cudev/ptr2d/texture.hpp	/^        __host__ static void bind(const cv::cudev::GlobPtrSz<T>& mat,$/;"	f	struct:__anon406::CvCudevTextureRef
bind1st	cpp_src/stl_function.h	/^    bind1st(const _Operation& __fn, const _Tp& __x)$/;"	f	namespace:std
bind1st	opencv2/core/cuda/functional.hpp	/^    template <typename Op, typename T> __host__ __device__ __forceinline__ binder1st<Op> bind1st(const Op& op, const T& x)$/;"	f	namespace:cv::cuda::device
bind1st	opencv2/cudev/functional/functional.hpp	/^__host__ __device__ Binder1st<Op> bind1st(const Op& op, const typename Op::first_argument_type& arg1)$/;"	f	namespace:cv::cudev
bind2nd	cpp_src/stl_function.h	/^    bind2nd(const _Operation& __fn, const _Tp& __x)$/;"	f	namespace:std
bind2nd	opencv2/core/cuda/functional.hpp	/^    template <typename Op, typename T> __host__ __device__ __forceinline__ binder2nd<Op> bind2nd(const Op& op, const T& x)$/;"	f	namespace:cv::cuda::device
bind2nd	opencv2/cudev/functional/functional.hpp	/^__host__ __device__ Binder2nd<Op> bind2nd(const Op& op, const typename Op::second_argument_type& arg2)$/;"	f	namespace:cv::cudev
bindTexture	opencv2/core/cuda/common.hpp	/^        template<class T> inline void bindTexture(const textureReference* tex, const PtrStepSz<T>& img)$/;"	f	namespace:cv::cuda::device
binder1st	cpp_src/stl_function.h	/^      binder1st(const _Operation& __x,$/;"	f	class:std::binder1st
binder1st	cpp_src/stl_function.h	/^    class binder1st$/;"	c	namespace:std
binder1st	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ binder1st() {}$/;"	f	struct:cv::cuda::device::binder1st
binder1st	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ binder1st(const Op& op_, const typename Op::first_argument_type& arg1_) : op(op_), arg1(arg1_) {}$/;"	f	struct:cv::cuda::device::binder1st
binder1st	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ binder1st(const binder1st& other) : op(other.op), arg1(other.arg1) {}$/;"	f	struct:cv::cuda::device::binder1st
binder1st	opencv2/core/cuda/functional.hpp	/^    template <typename Op> struct binder1st : unary_function<typename Op::second_argument_type, typename Op::result_type>$/;"	s	namespace:cv::cuda::device
binder2nd	cpp_src/stl_function.h	/^      binder2nd(const _Operation& __x,$/;"	f	class:std::binder2nd
binder2nd	cpp_src/stl_function.h	/^    class binder2nd$/;"	c	namespace:std
binder2nd	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ binder2nd() {}$/;"	f	struct:cv::cuda::device::binder2nd
binder2nd	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ binder2nd(const Op& op_, const typename Op::second_argument_type& arg2_) : op(op_), arg2(arg2_) {}$/;"	f	struct:cv::cuda::device::binder2nd
binder2nd	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ binder2nd(const binder2nd& other) : op(other.op), arg2(other.arg2) {}$/;"	f	struct:cv::cuda::device::binder2nd
binder2nd	opencv2/core/cuda/functional.hpp	/^    template <typename Op> struct binder2nd : unary_function<typename Op::first_argument_type, typename Op::result_type>$/;"	s	namespace:cv::cuda::device
binomial_heap	5/ext/pb_ds/detail/binomial_heap_/binomial_heap_.hpp	/^    class binomial_heap$/;"	c	namespace:__gnu_pbds::detail
binomial_heap	5/ext/pb_ds/detail/binomial_heap_/constructors_destructor_fn_imps.hpp	/^binomial_heap()$/;"	f	class:PB_DS_CLASS_C_DEC
binomial_heap	5/ext/pb_ds/detail/binomial_heap_/constructors_destructor_fn_imps.hpp	/^binomial_heap(const Cmp_Fn& r_cmp_fn)$/;"	f	class:PB_DS_CLASS_C_DEC
binomial_heap	5/ext/pb_ds/detail/binomial_heap_/constructors_destructor_fn_imps.hpp	/^binomial_heap(const PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
binomial_heap_base	5/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp	/^    class binomial_heap_base$/;"	c	namespace:__gnu_pbds::detail
binomial_heap_base	5/ext/pb_ds/detail/binomial_heap_base_/constructors_destructor_fn_imps.hpp	/^binomial_heap_base() : m_p_max(0)$/;"	f	class:PB_DS_CLASS_C_DEC
binomial_heap_base	5/ext/pb_ds/detail/binomial_heap_base_/constructors_destructor_fn_imps.hpp	/^binomial_heap_base(const Cmp_Fn& r_cmp_fn)$/;"	f	class:PB_DS_CLASS_C_DEC
binomial_heap_base	5/ext/pb_ds/detail/binomial_heap_base_/constructors_destructor_fn_imps.hpp	/^binomial_heap_base(const PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
binomial_heap_tag	5/ext/pb_ds/tag_and_trait.hpp	/^  struct binomial_heap_tag : public priority_queue_tag { };$/;"	s	namespace:__gnu_pbds
bins	opencv2/core/types_c.h	/^    CvArr*  bins;$/;"	m	struct:CvHistogram
bit_and	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ bit_and() {}$/;"	f	struct:cv::cuda::device::bit_and
bit_and	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ bit_and(const bit_and&) {}$/;"	f	struct:cv::cuda::device::bit_and
bit_and	opencv2/core/cuda/functional.hpp	/^    template <typename T> struct bit_and : binary_function<T, T, T>$/;"	s	namespace:cv::cuda::device
bit_and	opencv2/cudev/functional/functional.hpp	/^template <typename T> struct bit_and : binary_function<T, T, T>$/;"	s	namespace:cv::cudev
bit_lshift	opencv2/cudev/functional/functional.hpp	/^template <typename T> struct bit_lshift : binary_function<T, T, T>$/;"	s	namespace:cv::cudev
bit_not	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ bit_not() {}$/;"	f	struct:cv::cuda::device::bit_not
bit_not	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ bit_not(const bit_not&) {}$/;"	f	struct:cv::cuda::device::bit_not
bit_not	opencv2/core/cuda/functional.hpp	/^    template <typename T> struct bit_not : unary_function<T, T>$/;"	s	namespace:cv::cuda::device
bit_not	opencv2/cudev/functional/functional.hpp	/^template <typename T> struct bit_not : unary_function<T, T>$/;"	s	namespace:cv::cudev
bit_or	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ bit_or() {}$/;"	f	struct:cv::cuda::device::bit_or
bit_or	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ bit_or(const bit_or&) {}$/;"	f	struct:cv::cuda::device::bit_or
bit_or	opencv2/core/cuda/functional.hpp	/^    template <typename T> struct bit_or : binary_function<T, T, T>$/;"	s	namespace:cv::cuda::device
bit_or	opencv2/cudev/functional/functional.hpp	/^template <typename T> struct bit_or : binary_function<T, T, T>$/;"	s	namespace:cv::cudev
bit_rshift	opencv2/cudev/functional/functional.hpp	/^template <typename T> struct bit_rshift : binary_function<T, T, T>$/;"	s	namespace:cv::cudev
bit_xor	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ bit_xor() {}$/;"	f	struct:cv::cuda::device::bit_xor
bit_xor	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ bit_xor(const bit_xor&) {}$/;"	f	struct:cv::cuda::device::bit_xor
bit_xor	opencv2/core/cuda/functional.hpp	/^    template <typename T> struct bit_xor : binary_function<T, T, T>$/;"	s	namespace:cv::cuda::device
bit_xor	opencv2/cudev/functional/functional.hpp	/^template <typename T> struct bit_xor : binary_function<T, T, T>$/;"	s	namespace:cv::cudev
bitset_	opencv2/flann/dynamic_bitset.h	/^    std::vector<size_t> bitset_;$/;"	m	class:cvflann::DynamicBitset
bl_height_	opencv2/stitching/detail/exposure_compensate.hpp	/^    int bl_width_, bl_height_;$/;"	m	class:cv::detail::BlocksGainCompensator
bl_width_	opencv2/stitching/detail/exposure_compensate.hpp	/^    int bl_width_, bl_height_;$/;"	m	class:cv::detail::BlocksGainCompensator
black_height	5/ext/pb_ds/detail/rb_tree_map_/split_join_fn_imps.hpp	/^black_height(node_pointer p_nd)$/;"	f	class:PB_DS_CLASS_C_DEC
blender	opencv2/stitching.hpp	/^    Ptr<detail::Blender> blender() { return blender_; }$/;"	f	class:cv::Stitcher
blender	opencv2/stitching.hpp	/^    const Ptr<detail::Blender> blender() const { return blender_; }$/;"	f	class:cv::Stitcher
blender_	opencv2/stitching.hpp	/^    Ptr<detail::Blender> blender_;$/;"	m	class:cv::Stitcher
blobColor	opencv2/features2d.hpp	/^      CV_PROP_RW uchar blobColor;$/;"	m	struct:cv::SimpleBlobDetector::Params
block	opencv2/core/persistence.hpp	/^      void*        block;      \/* current block;        CvSeqBlock *\/$/;"	m	struct:cv::FileNodeIterator::SeqReader
blockCopy	opencv2/cudev/block/block.hpp	/^__device__ __forceinline__ static void blockCopy(InIt beg, InIt end, OutIt out)$/;"	f	namespace:cv::cudev
blockFill	opencv2/cudev/block/block.hpp	/^__device__ __forceinline__ static void blockFill(It beg, It end, const T& value)$/;"	f	namespace:cv::cudev
blockId	opencv2/cudev/block/block.hpp	/^    __device__ __forceinline__ static uint blockId()$/;"	f	struct:cv::cudev::Block
blockReduce	opencv2/cudev/block/reduce.hpp	/^__device__ __forceinline__ void blockReduce(const tuple<P0, P1, P2, P3, P4, P5, P6, P7, P8, P9>& smem,$/;"	f	namespace:cv::cudev
blockReduce	opencv2/cudev/block/reduce.hpp	/^__device__ __forceinline__ void blockReduce(volatile T* smem, T& val, uint tid, const Op& op)$/;"	f	namespace:cv::cudev
blockReduceKeyVal	opencv2/cudev/block/reduce.hpp	/^__device__ __forceinline__ void blockReduceKeyVal(const tuple<KP0, KP1, KP2, KP3, KP4, KP5, KP6, KP7, KP8, KP9>& skeys,$/;"	f	namespace:cv::cudev
blockReduceKeyVal	opencv2/cudev/block/reduce.hpp	/^__device__ __forceinline__ void blockReduceKeyVal(volatile K* skeys, K& key, volatile V* svals, V& val, uint tid, const Cmp& cmp)$/;"	f	namespace:cv::cudev
blockReduceKeyVal	opencv2/cudev/block/reduce.hpp	/^__device__ __forceinline__ void blockReduceKeyVal(volatile K* skeys, K& key,$/;"	f	namespace:cv::cudev
blockScanExclusive	opencv2/cudev/block/scan.hpp	/^__device__ __forceinline__ T blockScanExclusive(T data, volatile T* smem, uint tid)$/;"	f	namespace:cv::cudev
blockScanInclusive	opencv2/core/cuda/scan.hpp	/^    __device__ T blockScanInclusive(T idata, volatile T* s_Data, unsigned int tid)$/;"	f	namespace:cv::cuda::device
blockScanInclusive	opencv2/cudev/block/scan.hpp	/^__device__ T blockScanInclusive(T data, volatile T* smem, uint tid)$/;"	f	namespace:cv::cudev
blockSize	opencv2/cudev/block/block.hpp	/^    __device__ __forceinline__ static uint blockSize()$/;"	f	struct:cv::cudev::Block
blockSize	opencv2/objdetect.hpp	/^    CV_PROP Size blockSize;$/;"	m	struct:cv::HOGDescriptor
blockStride	opencv2/objdetect.hpp	/^    CV_PROP Size blockStride;$/;"	m	struct:cv::HOGDescriptor
blockTransfrom	opencv2/cudev/block/block.hpp	/^__device__ __forceinline__ static void blockTransfrom(InIt beg, InIt end, OutIt out, const UnOp& op)$/;"	f	namespace:cv::cudev
blockTransfrom	opencv2/cudev/block/block.hpp	/^__device__ __forceinline__ static void blockTransfrom(InIt1 beg1, InIt1 end1, InIt2 beg2, OutIt out, const BinOp& op)$/;"	f	namespace:cv::cudev
blockYota	opencv2/cudev/block/block.hpp	/^__device__ __forceinline__ static void blockYota(OutIt beg, OutIt end, T value)$/;"	f	namespace:cv::cudev
block_dim_y	opencv2/cudev/grid/transpose.hpp	/^        block_dim_y = 16$/;"	e	enum:cv::cudev::DefaultTransposePolicy::__anon405
block_max	opencv2/core/persistence.hpp	/^      schar*       block_max;  \/* pointer to the end of block *\/$/;"	m	struct:cv::FileNodeIterator::SeqReader
block_min	opencv2/core/persistence.hpp	/^      schar*       block_min;  \/* pointer to the beginning of block *\/$/;"	m	struct:cv::FileNodeIterator::SeqReader
block_reduce_detail	opencv2/cudev/block/detail/reduce.hpp	/^namespace block_reduce_detail$/;"	n	namespace:cv::cudev
block_reduce_key_val_detail	opencv2/cudev/block/detail/reduce_key_val.hpp	/^namespace block_reduce_key_val_detail$/;"	n	namespace:cv::cudev
block_size	opencv2/core/types_c.h	/^    int block_size;               \/**< Block size.                              *\/$/;"	m	struct:CvMemStorage
block_size_x	opencv2/cudev/grid/copy.hpp	/^        block_size_x = 32,$/;"	e	enum:cv::cudev::DefaultCopyPolicy::__anon398
block_size_x	opencv2/cudev/grid/histogram.hpp	/^        block_size_x = 32,$/;"	e	enum:cv::cudev::DefaultHistogramPolicy::__anon401
block_size_x	opencv2/cudev/grid/reduce.hpp	/^        block_size_x = 32,$/;"	e	enum:cv::cudev::DefaultGlobReducePolicy::__anon402
block_size_x	opencv2/cudev/grid/reduce_to_vec.hpp	/^        block_size_x = 32,$/;"	e	enum:cv::cudev::DefaultReduceToVecPolicy::__anon403
block_size_x	opencv2/cudev/grid/split_merge.hpp	/^        block_size_x = 32,$/;"	e	enum:cv::cudev::DefaultSplitMergePolicy::__anon404
block_size_x	opencv2/cudev/grid/transform.hpp	/^        block_size_x = 32,$/;"	e	enum:cv::cudev::DefaultTransformPolicy::__anon399
block_size_y	opencv2/cudev/grid/copy.hpp	/^        block_size_y = 8$/;"	e	enum:cv::cudev::DefaultCopyPolicy::__anon398
block_size_y	opencv2/cudev/grid/histogram.hpp	/^        block_size_y = 8$/;"	e	enum:cv::cudev::DefaultHistogramPolicy::__anon401
block_size_y	opencv2/cudev/grid/reduce.hpp	/^        block_size_y = 8,$/;"	e	enum:cv::cudev::DefaultGlobReducePolicy::__anon402
block_size_y	opencv2/cudev/grid/reduce_to_vec.hpp	/^        block_size_y = 8$/;"	e	enum:cv::cudev::DefaultReduceToVecPolicy::__anon403
block_size_y	opencv2/cudev/grid/split_merge.hpp	/^        block_size_y = 8$/;"	e	enum:cv::cudev::DefaultSplitMergePolicy::__anon404
block_size_y	opencv2/cudev/grid/transform.hpp	/^        block_size_y = 8,$/;"	e	enum:cv::cudev::DefaultTransformPolicy::__anon399
blocksize	opencv2/flann/allocator.h	/^    int     blocksize;$/;"	m	class:cvflann::PooledAllocator
blurrinessRates	opencv2/videostab/deblurring.hpp	/^    virtual const std::vector<float>& blurrinessRates() const { return *blurrinessRates_; }$/;"	f	class:cv::videostab::DeblurerBase
blurrinessRates_	opencv2/videostab/deblurring.hpp	/^    const std::vector<float> *blurrinessRates_;$/;"	m	class:cv::videostab::DeblurerBase
blurrinessRates_	opencv2/videostab/stabilizer.hpp	/^    std::vector<float> blurrinessRates_;$/;"	m	class:cv::videostab::StabilizerBase
body	opencv2/cudev/expr/expr.hpp	/^    Body body;$/;"	m	struct:cv::cudev::Expr
boolalpha	cpp_src/ios_base.h	/^    static const fmtflags boolalpha =   _S_boolalpha;$/;"	m	class:std::ios_base
boolalpha	cpp_src/ios_base.h	/^  boolalpha(ios_base& __base)$/;"	f	namespace:std
borderMode	opencv2/videostab/inpainting.hpp	/^    int borderMode() const { return borderMode_; }$/;"	f	class:cv::videostab::MotionInpainter
borderMode	opencv2/videostab/stabilizer.hpp	/^    int borderMode() const { return borderMode_; }$/;"	f	class:cv::videostab::StabilizerBase
borderMode_	opencv2/videostab/inpainting.hpp	/^    int borderMode_;$/;"	m	class:cv::videostab::MotionInpainter
borderMode_	opencv2/videostab/stabilizer.hpp	/^    int borderMode_;$/;"	m	class:cv::videostab::StabilizerBase
both	opencv2/cudev/grid/detail/reduce.hpp	/^    struct both$/;"	s	namespace:cv::cudev::grid_reduce_detail
bottom	opencv2/core/types_c.h	/^    CvMemBlock* bottom;           \/**< First allocated block.                   *\/$/;"	m	struct:CvMemStorage
bottomRight	opencv2/imgproc.hpp	/^    Point2f bottomRight;$/;"	m	class:cv::Subdiv2D
br	opencv2/core/types.hpp	/^Point_<_Tp> Rect_<_Tp>::br() const$/;"	f	class:cv::Rect_
branch_bag	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      class branch_bag$/;"	c	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
branch_policy	5/ext/pb_ds/detail/branch_policy/branch_policy.hpp	/^      struct branch_policy$/;"	s	namespace:__gnu_pbds::detail
branch_policy	5/ext/pb_ds/detail/branch_policy/branch_policy.hpp	/^      struct branch_policy<Node_CItr, Node_CItr, _Alloc>$/;"	s	namespace:__gnu_pbds::detail
branching	opencv2/flann/kmeans_index.h	/^        const int branching;$/;"	m	class:cvflann::KMeansIndex::KMeansDistanceComputer
branching_	opencv2/flann/hierarchical_clustering_index.h	/^    int branching_;$/;"	m	class:cvflann::HierarchicalClusteringIndex
branching_	opencv2/flann/kmeans_index.h	/^    int branching_;$/;"	m	class:cvflann::KMeansIndex
brdConstant	opencv2/cudev/ptr2d/extrapolation.hpp	/^__host__ BrdConstant<typename PtrTraits<SrcPtr>::ptr_type> brdConstant(const SrcPtr& src)$/;"	f	namespace:cv::cudev
brdConstant	opencv2/cudev/ptr2d/extrapolation.hpp	/^__host__ BrdConstant<typename PtrTraits<SrcPtr>::ptr_type> brdConstant(const SrcPtr& src, typename PtrTraits<SrcPtr>::value_type val)$/;"	f	namespace:cv::cudev
brdReflect	opencv2/cudev/ptr2d/extrapolation.hpp	/^__host__ BrdBase<BrdReflect, typename PtrTraits<SrcPtr>::ptr_type> brdReflect(const SrcPtr& src)$/;"	f	namespace:cv::cudev
brdReflect101	opencv2/cudev/ptr2d/extrapolation.hpp	/^__host__ BrdBase<BrdReflect101, typename PtrTraits<SrcPtr>::ptr_type> brdReflect101(const SrcPtr& src)$/;"	f	namespace:cv::cudev
brdReplicate	opencv2/cudev/ptr2d/extrapolation.hpp	/^__host__ BrdBase<BrdReplicate, typename PtrTraits<SrcPtr>::ptr_type> brdReplicate(const SrcPtr& src)$/;"	f	namespace:cv::cudev
brdWrap	opencv2/cudev/ptr2d/extrapolation.hpp	/^__host__ BrdBase<BrdWrap, typename PtrTraits<SrcPtr>::ptr_type> brdWrap(const SrcPtr& src)$/;"	f	namespace:cv::cudev
brs_	opencv2/stitching/detail/seam_finders.hpp	/^    std::vector<Point> tls_, brs_;$/;"	m	class:cv::detail::DpSeamFinder
bubble_to_top	5/ext/pb_ds/detail/left_child_next_sibling_heap_/erase_fn_imps.hpp	/^bubble_to_top(node_pointer p_nd)$/;"	f	class:PB_DS_CLASS_C_DEC
bucket	5/debug/safe_local_iterator.h	/^      bucket() const { return base()._M_get_bucket(); }$/;"	f	class:__gnu_debug::_Safe_local_iterator
bucket_size_max_	opencv2/flann/lsh_table.h	/^    size_t bucket_size_max_;$/;"	m	struct:cvflann::lsh::LshStats
bucket_size_mean_	opencv2/flann/lsh_table.h	/^    size_t bucket_size_mean_;$/;"	m	struct:cvflann::lsh::LshStats
bucket_size_median_	opencv2/flann/lsh_table.h	/^    size_t bucket_size_median_;$/;"	m	struct:cvflann::lsh::LshStats
bucket_size_min_	opencv2/flann/lsh_table.h	/^    size_t bucket_size_min_;$/;"	m	struct:cvflann::lsh::LshStats
bucket_size_std_dev	opencv2/flann/lsh_table.h	/^    size_t bucket_size_std_dev;$/;"	m	struct:cvflann::lsh::LshStats
bucket_sizes_	opencv2/flann/lsh_table.h	/^    std::vector<unsigned int> bucket_sizes_;$/;"	m	struct:cvflann::lsh::LshStats
buckets_space_	opencv2/flann/lsh_table.h	/^    BucketsSpace buckets_space_;$/;"	m	class:cvflann::lsh::LshTable
buckets_speed_	opencv2/flann/lsh_table.h	/^    BucketsSpeed buckets_speed_;$/;"	m	class:cvflann::lsh::LshTable
buf	opencv2/core/mat.hpp	/^    size_t buf[2];$/;"	m	struct:cv::MatStep
buf	opencv2/core/utility.hpp	/^    _Tp buf[(fixed_size > 0) ? fixed_size : 1];$/;"	m	class:cv::AutoBuffer
buffer	opencv2/cudalegacy.hpp	/^    GpuMat buffer;$/;"	m	class:cv::cuda::FastOpticalFlowBM
buildIndex	opencv2/flann/autotuned_index.h	/^    virtual void buildIndex()$/;"	f	class:cvflann::AutotunedIndex
buildIndex	opencv2/flann/composite_index.h	/^    void buildIndex()$/;"	f	class:cvflann::CompositeIndex
buildIndex	opencv2/flann/flann_base.hpp	/^    void buildIndex()$/;"	f	class:cvflann::Index
buildIndex	opencv2/flann/hierarchical_clustering_index.h	/^    void buildIndex()$/;"	f	class:cvflann::HierarchicalClusteringIndex
buildIndex	opencv2/flann/kdtree_index.h	/^    void buildIndex()$/;"	f	class:cvflann::KDTreeIndex
buildIndex	opencv2/flann/kdtree_single_index.h	/^    void buildIndex()$/;"	f	class:cvflann::KDTreeSingleIndex
buildIndex	opencv2/flann/kmeans_index.h	/^    void buildIndex()$/;"	f	class:cvflann::KMeansIndex
buildIndex	opencv2/flann/linear_index.h	/^    void buildIndex()$/;"	f	class:cvflann::LinearIndex
buildIndex	opencv2/flann/lsh_index.h	/^    void buildIndex()$/;"	f	class:cvflann::LshIndex
buildMaps	opencv2/stitching/detail/warpers.hpp	/^    Rect buildMaps(Size src_size, InputArray K, InputArray R, InputArray T, OutputArray xmap, OutputArray ymap)$/;"	f	class:cv::detail::PlaneWarperGpu
buildMaps	opencv2/stitching/detail/warpers.hpp	/^    Rect buildMaps(Size src_size, InputArray K, InputArray R, OutputArray xmap, OutputArray ymap)$/;"	f	class:cv::detail::CylindricalWarperGpu
buildMaps	opencv2/stitching/detail/warpers.hpp	/^    Rect buildMaps(Size src_size, InputArray K, InputArray R, OutputArray xmap, OutputArray ymap)$/;"	f	class:cv::detail::PlaneWarperGpu
buildMaps	opencv2/stitching/detail/warpers.hpp	/^    Rect buildMaps(Size src_size, InputArray K, InputArray R, OutputArray xmap, OutputArray ymap)$/;"	f	class:cv::detail::SphericalWarperGpu
buildMaps	opencv2/stitching/detail/warpers_inl.hpp	/^Rect RotationWarperBase<P>::buildMaps(Size src_size, InputArray K, InputArray R, OutputArray _xmap, OutputArray _ymap)$/;"	f	class:cv::detail::RotationWarperBase
buildTimeCost	opencv2/flann/autotuned_index.h	/^        float buildTimeCost;$/;"	m	struct:cvflann::AutotunedIndex::CostData
build_weight_	opencv2/flann/autotuned_index.h	/^    float build_weight_;$/;"	m	class:cvflann::AutotunedIndex
bundleAdjuster	opencv2/stitching.hpp	/^    Ptr<detail::BundleAdjusterBase> bundleAdjuster() { return bundle_adjuster_; }$/;"	f	class:cv::Stitcher
bundleAdjuster	opencv2/stitching.hpp	/^    const Ptr<detail::BundleAdjusterBase> bundleAdjuster() const { return bundle_adjuster_; }$/;"	f	class:cv::Stitcher
bundle_adjuster_	opencv2/stitching.hpp	/^    Ptr<detail::BundleAdjusterBase> bundle_adjuster_;$/;"	m	class:cv::Stitcher
c	cpp_src/stl_queue.h	/^      _Sequence  c;$/;"	m	class:std::priority_queue
c	cpp_src/stl_queue.h	/^      _Sequence c;$/;"	m	class:std::queue
c	cpp_src/stl_stack.h	/^      _Sequence c;$/;"	m	class:std::stack
c	opencv2/core/mat.hpp	/^    Mat a, b, c;$/;"	m	class:cv::MatExpr
c	opencv2/ml.hpp	/^        float c; \/**< The threshold value in case of split on an ordered variable.$/;"	m	class:cv::ml::DTrees::Split
c_HlsSectorData	opencv2/core/cuda/detail/color_detail.hpp	/^        __constant__ int c_HlsSectorData[6][3] = { {1,3,0}, {1,0,2}, {3,0,1}, {0,2,1}, {0,1,3}, {2,1,0} };$/;"	m	namespace:cv::cuda::device::color_detail
c_HlsSectorData	opencv2/cudev/functional/detail/color_cvt.hpp	/^    __constant__ int c_HlsSectorData[6][3] = { {1,3,0}, {1,0,2}, {3,0,1}, {0,2,1}, {0,1,3}, {2,1,0} };$/;"	m	namespace:cv::cudev::color_cvt_detail
c_HsvDivTable	opencv2/core/cuda/detail/color_detail.hpp	/^        __constant__ int c_HsvDivTable   [256] = {0, 1044480, 522240, 348160, 261120, 208896, 174080, 149211, 130560, 116053, 104448, 94953, 87040, 80345, 74606, 69632, 65280, 61440, 58027, 54973, 52224, 49737, 47476, 45412, 43520, 41779, 40172, 38684, 37303, 36017, 34816, 33693, 32640, 31651, 30720, 29842, 29013, 28229, 27486, 26782, 26112, 25475, 24869, 24290, 23738, 23211, 22706, 22223, 21760, 21316, 20890, 20480, 20086, 19707, 19342, 18991, 18651, 18324, 18008, 17703, 17408, 17123, 16846, 16579, 16320, 16069, 15825, 15589, 15360, 15137, 14921, 14711, 14507, 14308, 14115, 13926, 13743, 13565, 13391, 13221, 13056, 12895, 12738, 12584, 12434, 12288, 12145, 12006, 11869, 11736, 11605, 11478, 11353, 11231, 11111, 10995, 10880, 10768, 10658, 10550, 10445, 10341, 10240, 10141, 10043, 9947, 9854, 9761, 9671, 9582, 9495, 9410, 9326, 9243, 9162, 9082, 9004, 8927, 8852, 8777, 8704, 8632, 8561, 8492, 8423, 8356, 8290, 8224, 8160, 8097, 8034, 7973, 7913, 7853, 7795, 7737, 7680, 7624, 7569, 7514, 7461, 7408, 7355, 7304, 7253, 7203, 7154, 7105, 7057, 7010, 6963, 6917, 6872, 6827, 6782, 6739, 6695, 6653, 6611, 6569, 6528, 6487, 6447, 6408, 6369, 6330, 6292, 6254, 6217, 6180, 6144, 6108, 6073, 6037, 6003, 5968, 5935, 5901, 5868, 5835, 5803, 5771, 5739, 5708, 5677, 5646, 5615, 5585, 5556, 5526, 5497, 5468, 5440, 5412, 5384, 5356, 5329, 5302, 5275, 5249, 5222, 5196, 5171, 5145, 5120, 5095, 5070, 5046, 5022, 4998, 4974, 4950, 4927, 4904, 4881, 4858, 4836, 4813, 4791, 4769, 4748, 4726, 4705, 4684, 4663, 4642, 4622, 4601, 4581, 4561, 4541, 4522, 4502, 4483, 4464, 4445, 4426, 4407, 4389, 4370, 4352, 4334, 4316, 4298, 4281, 4263, 4246, 4229, 4212, 4195, 4178, 4161, 4145, 4128, 4112, 4096};$/;"	m	namespace:cv::cuda::device::color_detail
c_HsvDivTable	opencv2/cudev/functional/detail/color_cvt.hpp	/^    __constant__ int c_HsvDivTable   [256] = {0, 1044480, 522240, 348160, 261120, 208896, 174080, 149211, 130560, 116053, 104448, 94953, 87040, 80345, 74606, 69632, 65280, 61440, 58027, 54973, 52224, 49737, 47476, 45412, 43520, 41779, 40172, 38684, 37303, 36017, 34816, 33693, 32640, 31651, 30720, 29842, 29013, 28229, 27486, 26782, 26112, 25475, 24869, 24290, 23738, 23211, 22706, 22223, 21760, 21316, 20890, 20480, 20086, 19707, 19342, 18991, 18651, 18324, 18008, 17703, 17408, 17123, 16846, 16579, 16320, 16069, 15825, 15589, 15360, 15137, 14921, 14711, 14507, 14308, 14115, 13926, 13743, 13565, 13391, 13221, 13056, 12895, 12738, 12584, 12434, 12288, 12145, 12006, 11869, 11736, 11605, 11478, 11353, 11231, 11111, 10995, 10880, 10768, 10658, 10550, 10445, 10341, 10240, 10141, 10043, 9947, 9854, 9761, 9671, 9582, 9495, 9410, 9326, 9243, 9162, 9082, 9004, 8927, 8852, 8777, 8704, 8632, 8561, 8492, 8423, 8356, 8290, 8224, 8160, 8097, 8034, 7973, 7913, 7853, 7795, 7737, 7680, 7624, 7569, 7514, 7461, 7408, 7355, 7304, 7253, 7203, 7154, 7105, 7057, 7010, 6963, 6917, 6872, 6827, 6782, 6739, 6695, 6653, 6611, 6569, 6528, 6487, 6447, 6408, 6369, 6330, 6292, 6254, 6217, 6180, 6144, 6108, 6073, 6037, 6003, 5968, 5935, 5901, 5868, 5835, 5803, 5771, 5739, 5708, 5677, 5646, 5615, 5585, 5556, 5526, 5497, 5468, 5440, 5412, 5384, 5356, 5329, 5302, 5275, 5249, 5222, 5196, 5171, 5145, 5120, 5095, 5070, 5046, 5022, 4998, 4974, 4950, 4927, 4904, 4881, 4858, 4836, 4813, 4791, 4769, 4748, 4726, 4705, 4684, 4663, 4642, 4622, 4601, 4581, 4561, 4541, 4522, 4502, 4483, 4464, 4445, 4426, 4407, 4389, 4370, 4352, 4334, 4316, 4298, 4281, 4263, 4246, 4229, 4212, 4195, 4178, 4161, 4145, 4128, 4112, 4096};$/;"	m	namespace:cv::cudev::color_cvt_detail
c_HsvDivTable180	opencv2/core/cuda/detail/color_detail.hpp	/^        __constant__ int c_HsvDivTable180[256] = {0, 122880, 61440, 40960, 30720, 24576, 20480, 17554, 15360, 13653, 12288, 11171, 10240, 9452, 8777, 8192, 7680, 7228, 6827, 6467, 6144, 5851, 5585, 5343, 5120, 4915, 4726, 4551, 4389, 4237, 4096, 3964, 3840, 3724, 3614, 3511, 3413, 3321, 3234, 3151, 3072, 2997, 2926, 2858, 2793, 2731, 2671, 2614, 2560, 2508, 2458, 2409, 2363, 2318, 2276, 2234, 2194, 2156, 2119, 2083, 2048, 2014, 1982, 1950, 1920, 1890, 1862, 1834, 1807, 1781, 1755, 1731, 1707, 1683, 1661, 1638, 1617, 1596, 1575, 1555, 1536, 1517, 1499, 1480, 1463, 1446, 1429, 1412, 1396, 1381, 1365, 1350, 1336, 1321, 1307, 1293, 1280, 1267, 1254, 1241, 1229, 1217, 1205, 1193, 1182, 1170, 1159, 1148, 1138, 1127, 1117, 1107, 1097, 1087, 1078, 1069, 1059, 1050, 1041, 1033, 1024, 1016, 1007, 999, 991, 983, 975, 968, 960, 953, 945, 938, 931, 924, 917, 910, 904, 897, 890, 884, 878, 871, 865, 859, 853, 847, 842, 836, 830, 825, 819, 814, 808, 803, 798, 793, 788, 783, 778, 773, 768, 763, 759, 754, 749, 745, 740, 736, 731, 727, 723, 719, 714, 710, 706, 702, 698, 694, 690, 686, 683, 679, 675, 671, 668, 664, 661, 657, 654, 650, 647, 643, 640, 637, 633, 630, 627, 624, 621, 617, 614, 611, 608, 605, 602, 599, 597, 594, 591, 588, 585, 582, 580, 577, 574, 572, 569, 566, 564, 561, 559, 556, 554, 551, 549, 546, 544, 541, 539, 537, 534, 532, 530, 527, 525, 523, 521, 518, 516, 514, 512, 510, 508, 506, 504, 502, 500, 497, 495, 493, 492, 490, 488, 486, 484, 482};$/;"	m	namespace:cv::cuda::device::color_detail
c_HsvDivTable180	opencv2/cudev/functional/detail/color_cvt.hpp	/^    __constant__ int c_HsvDivTable180[256] = {0, 122880, 61440, 40960, 30720, 24576, 20480, 17554, 15360, 13653, 12288, 11171, 10240, 9452, 8777, 8192, 7680, 7228, 6827, 6467, 6144, 5851, 5585, 5343, 5120, 4915, 4726, 4551, 4389, 4237, 4096, 3964, 3840, 3724, 3614, 3511, 3413, 3321, 3234, 3151, 3072, 2997, 2926, 2858, 2793, 2731, 2671, 2614, 2560, 2508, 2458, 2409, 2363, 2318, 2276, 2234, 2194, 2156, 2119, 2083, 2048, 2014, 1982, 1950, 1920, 1890, 1862, 1834, 1807, 1781, 1755, 1731, 1707, 1683, 1661, 1638, 1617, 1596, 1575, 1555, 1536, 1517, 1499, 1480, 1463, 1446, 1429, 1412, 1396, 1381, 1365, 1350, 1336, 1321, 1307, 1293, 1280, 1267, 1254, 1241, 1229, 1217, 1205, 1193, 1182, 1170, 1159, 1148, 1138, 1127, 1117, 1107, 1097, 1087, 1078, 1069, 1059, 1050, 1041, 1033, 1024, 1016, 1007, 999, 991, 983, 975, 968, 960, 953, 945, 938, 931, 924, 917, 910, 904, 897, 890, 884, 878, 871, 865, 859, 853, 847, 842, 836, 830, 825, 819, 814, 808, 803, 798, 793, 788, 783, 778, 773, 768, 763, 759, 754, 749, 745, 740, 736, 731, 727, 723, 719, 714, 710, 706, 702, 698, 694, 690, 686, 683, 679, 675, 671, 668, 664, 661, 657, 654, 650, 647, 643, 640, 637, 633, 630, 627, 624, 621, 617, 614, 611, 608, 605, 602, 599, 597, 594, 591, 588, 585, 582, 580, 577, 574, 572, 569, 566, 564, 561, 559, 556, 554, 551, 549, 546, 544, 541, 539, 537, 534, 532, 530, 527, 525, 523, 521, 518, 516, 514, 512, 510, 508, 506, 504, 502, 500, 497, 495, 493, 492, 490, 488, 486, 484, 482};$/;"	m	namespace:cv::cudev::color_cvt_detail
c_HsvDivTable256	opencv2/core/cuda/detail/color_detail.hpp	/^        __constant__ int c_HsvDivTable256[256] = {0, 174763, 87381, 58254, 43691, 34953, 29127, 24966, 21845, 19418, 17476, 15888, 14564, 13443, 12483, 11651, 10923, 10280, 9709, 9198, 8738, 8322, 7944, 7598, 7282, 6991, 6722, 6473, 6242, 6026, 5825, 5638, 5461, 5296, 5140, 4993, 4855, 4723, 4599, 4481, 4369, 4263, 4161, 4064, 3972, 3884, 3799, 3718, 3641, 3567, 3495, 3427, 3361, 3297, 3236, 3178, 3121, 3066, 3013, 2962, 2913, 2865, 2819, 2774, 2731, 2689, 2648, 2608, 2570, 2533, 2497, 2461, 2427, 2394, 2362, 2330, 2300, 2270, 2241, 2212, 2185, 2158, 2131, 2106, 2081, 2056, 2032, 2009, 1986, 1964, 1942, 1920, 1900, 1879, 1859, 1840, 1820, 1802, 1783, 1765, 1748, 1730, 1713, 1697, 1680, 1664, 1649, 1633, 1618, 1603, 1589, 1574, 1560, 1547, 1533, 1520, 1507, 1494, 1481, 1469, 1456, 1444, 1432, 1421, 1409, 1398, 1387, 1376, 1365, 1355, 1344, 1334, 1324, 1314, 1304, 1295, 1285, 1276, 1266, 1257, 1248, 1239, 1231, 1222, 1214, 1205, 1197, 1189, 1181, 1173, 1165, 1157, 1150, 1142, 1135, 1128, 1120, 1113, 1106, 1099, 1092, 1085, 1079, 1072, 1066, 1059, 1053, 1046, 1040, 1034, 1028, 1022, 1016, 1010, 1004, 999, 993, 987, 982, 976, 971, 966, 960, 955, 950, 945, 940, 935, 930, 925, 920, 915, 910, 906, 901, 896, 892, 887, 883, 878, 874, 869, 865, 861, 857, 853, 848, 844, 840, 836, 832, 828, 824, 820, 817, 813, 809, 805, 802, 798, 794, 791, 787, 784, 780, 777, 773, 770, 767, 763, 760, 757, 753, 750, 747, 744, 741, 737, 734, 731, 728, 725, 722, 719, 716, 713, 710, 708, 705, 702, 699, 696, 694, 691, 688, 685};$/;"	m	namespace:cv::cuda::device::color_detail
c_HsvDivTable256	opencv2/cudev/functional/detail/color_cvt.hpp	/^    __constant__ int c_HsvDivTable256[256] = {0, 174763, 87381, 58254, 43691, 34953, 29127, 24966, 21845, 19418, 17476, 15888, 14564, 13443, 12483, 11651, 10923, 10280, 9709, 9198, 8738, 8322, 7944, 7598, 7282, 6991, 6722, 6473, 6242, 6026, 5825, 5638, 5461, 5296, 5140, 4993, 4855, 4723, 4599, 4481, 4369, 4263, 4161, 4064, 3972, 3884, 3799, 3718, 3641, 3567, 3495, 3427, 3361, 3297, 3236, 3178, 3121, 3066, 3013, 2962, 2913, 2865, 2819, 2774, 2731, 2689, 2648, 2608, 2570, 2533, 2497, 2461, 2427, 2394, 2362, 2330, 2300, 2270, 2241, 2212, 2185, 2158, 2131, 2106, 2081, 2056, 2032, 2009, 1986, 1964, 1942, 1920, 1900, 1879, 1859, 1840, 1820, 1802, 1783, 1765, 1748, 1730, 1713, 1697, 1680, 1664, 1649, 1633, 1618, 1603, 1589, 1574, 1560, 1547, 1533, 1520, 1507, 1494, 1481, 1469, 1456, 1444, 1432, 1421, 1409, 1398, 1387, 1376, 1365, 1355, 1344, 1334, 1324, 1314, 1304, 1295, 1285, 1276, 1266, 1257, 1248, 1239, 1231, 1222, 1214, 1205, 1197, 1189, 1181, 1173, 1165, 1157, 1150, 1142, 1135, 1128, 1120, 1113, 1106, 1099, 1092, 1085, 1079, 1072, 1066, 1059, 1053, 1046, 1040, 1034, 1028, 1022, 1016, 1010, 1004, 999, 993, 987, 982, 976, 971, 966, 960, 955, 950, 945, 940, 935, 930, 925, 920, 915, 910, 906, 901, 896, 892, 887, 883, 878, 874, 869, 865, 861, 857, 853, 848, 844, 840, 836, 832, 828, 824, 820, 817, 813, 809, 805, 802, 798, 794, 791, 787, 784, 780, 777, 773, 770, 767, 763, 760, 757, 753, 750, 747, 744, 741, 737, 734, 731, 728, 725, 722, 719, 716, 713, 710, 708, 705, 702, 699, 696, 694, 691, 688, 685};$/;"	m	namespace:cv::cudev::color_cvt_detail
c_HsvSectorData	opencv2/core/cuda/detail/color_detail.hpp	/^        __constant__ int c_HsvSectorData[6][3] = { {1,3,0}, {1,0,2}, {3,0,1}, {0,2,1}, {0,1,3}, {2,1,0} };$/;"	m	namespace:cv::cuda::device::color_detail
c_HsvSectorData	opencv2/cudev/functional/detail/color_cvt.hpp	/^    __constant__ int c_HsvSectorData[6][3] = { {1,3,0}, {1,0,2}, {3,0,1}, {0,2,1}, {0,1,3}, {2,1,0} };$/;"	m	namespace:cv::cudev::color_cvt_detail
c_LabCbrtTab	opencv2/core/cuda/detail/color_detail.hpp	/^        __constant__ float c_LabCbrtTab[] = {0.137931,0.0114066,0.,1.18859e-07,0.149338,0.011407,3.56578e-07,-5.79396e-07,0.160745,0.0114059,-1.38161e-06,2.16892e-06,0.172151,0.0114097,5.12516e-06,-8.0814e-06,0.183558,0.0113957,-1.9119e-05,3.01567e-05,0.194965,0.0114479,7.13509e-05,-0.000112545,0.206371,0.011253,-0.000266285,-0.000106493,0.217252,0.0104009,-0.000585765,7.32149e-05,0.22714,0.00944906,-0.00036612,1.21917e-05,0.236235,0.0087534,-0.000329545,2.01753e-05,0.244679,0.00815483,-0.000269019,1.24435e-05,0.252577,0.00765412,-0.000231689,1.05618e-05,0.26001,0.00722243,-0.000200003,8.26662e-06,0.267041,0.00684723,-0.000175203,6.76746e-06,0.27372,0.00651712,-0.000154901,5.61192e-06,0.280088,0.00622416,-0.000138065,4.67009e-06,0.286179,0.00596204,-0.000124055,3.99012e-06,0.292021,0.0057259,-0.000112085,3.36032e-06,0.297638,0.00551181,-0.000102004,2.95338e-06,0.30305,0.00531666,-9.31435e-05,2.52875e-06,0.308277,0.00513796,-8.55572e-05,2.22022e-06,0.313331,0.00497351,-7.88966e-05,1.97163e-06,0.318228,0.00482163,-7.29817e-05,1.7248e-06,0.322978,0.00468084,-6.78073e-05,1.55998e-06,0.327593,0.0045499,-6.31274e-05,1.36343e-06,0.332081,0.00442774,-5.90371e-05,1.27136e-06,0.336451,0.00431348,-5.5223e-05,1.09111e-06,0.34071,0.00420631,-5.19496e-05,1.0399e-06,0.344866,0.00410553,-4.88299e-05,9.18347e-07,0.348923,0.00401062,-4.60749e-05,8.29942e-07,0.352889,0.00392096,-4.35851e-05,7.98478e-07,0.356767,0.00383619,-4.11896e-05,6.84917e-07,0.360562,0.00375586,-3.91349e-05,6.63976e-07,0.36428,0.00367959,-3.7143e-05,5.93086e-07,0.367923,0.00360708,-3.53637e-05,5.6976e-07,0.371495,0.00353806,-3.36544e-05,4.95533e-07,0.375,0.00347224,-3.21678e-05,4.87951e-07,0.378441,0.00340937,-3.0704e-05,4.4349e-07,0.38182,0.00334929,-2.93735e-05,4.20297e-07,0.38514,0.0032918,-2.81126e-05,3.7872e-07,0.388404,0.00323671,-2.69764e-05,3.596e-07,0.391614,0.00318384,-2.58976e-05,3.5845e-07,0.394772,0.00313312,-2.48223e-05,2.92765e-07,0.397881,0.00308435,-2.3944e-05,3.18232e-07,0.400942,0.00303742,-2.29893e-05,2.82046e-07,0.403957,0.00299229,-2.21432e-05,2.52315e-07,0.406927,0.00294876,-2.13862e-05,2.58416e-07,0.409855,0.00290676,-2.0611e-05,2.33939e-07,0.412741,0.00286624,-1.99092e-05,2.36342e-07,0.415587,0.00282713,-1.92001e-05,1.916e-07,0.418396,0.00278931,-1.86253e-05,2.1915e-07,0.421167,0.00275271,-1.79679e-05,1.83498e-07,0.423901,0.00271733,-1.74174e-05,1.79343e-07,0.426602,0.00268303,-1.68794e-05,1.72013e-07,0.429268,0.00264979,-1.63633e-05,1.75686e-07,0.431901,0.00261759,-1.58363e-05,1.3852e-07,0.434503,0.00258633,-1.54207e-05,1.64304e-07,0.437074,0.00255598,-1.49278e-05,1.28136e-07,0.439616,0.00252651,-1.45434e-05,1.57618e-07,0.442128,0.0024979,-1.40705e-05,1.0566e-07,0.444612,0.00247007,-1.37535e-05,1.34998e-07,0.447068,0.00244297,-1.33485e-05,1.29207e-07,0.449498,0.00241666,-1.29609e-05,9.32347e-08,0.451902,0.00239102,-1.26812e-05,1.23703e-07,0.45428,0.00236603,-1.23101e-05,9.74072e-08,0.456634,0.0023417,-1.20179e-05,1.12518e-07,0.458964,0.002318,-1.16803e-05,7.83681e-08,0.46127,0.00229488,-1.14452e-05,1.10452e-07,0.463554,0.00227232,-1.11139e-05,7.58719e-08,0.465815,0.00225032,-1.08863e-05,9.2699e-08,0.468055,0.00222882,-1.06082e-05,8.97738e-08,0.470273,0.00220788,-1.03388e-05,5.4845e-08,0.47247,0.00218736,-1.01743e-05,1.0808e-07,0.474648,0.00216734,-9.85007e-06,4.9277e-08,0.476805,0.00214779,-9.70224e-06,8.22408e-08,0.478943,0.00212863,-9.45551e-06,6.87942e-08,0.481063,0.00210993,-9.24913e-06,5.98144e-08,0.483163,0.00209161,-9.06969e-06,7.93789e-08,0.485246,0.00207371,-8.83155e-06,3.99032e-08,0.487311,0.00205616,-8.71184e-06,8.88325e-08,0.489358,0.002039,-8.44534e-06,2.20004e-08,0.491389,0.00202218,-8.37934e-06,9.13872e-08,0.493403,0.0020057,-8.10518e-06,2.96829e-08,0.495401,0.00198957,-8.01613e-06,5.81028e-08,0.497382,0.00197372,-7.84183e-06,6.5731e-08,0.499348,0.00195823,-7.64463e-06,3.66019e-08,0.501299,0.00194305,-7.53483e-06,2.62811e-08,0.503234,0.00192806,-7.45598e-06,9.66907e-08,0.505155,0.00191344,-7.16591e-06,4.18928e-09,0.507061,0.00189912,-7.15334e-06,6.53665e-08,0.508953,0.00188501,-6.95724e-06,3.23686e-08,0.510831,0.00187119,-6.86014e-06,4.35774e-08,0.512696,0.0018576,-6.72941e-06,3.17406e-08,0.514547,0.00184424,-6.63418e-06,6.78785e-08,0.516384,0.00183117,-6.43055e-06,-5.23126e-09,0.518209,0.0018183,-6.44624e-06,7.22562e-08,0.520021,0.00180562,-6.22947e-06,1.42292e-08,0.52182,0.0017932,-6.18679e-06,4.9641e-08,0.523607,0.00178098,-6.03786e-06,2.56259e-08,0.525382,0.00176898,-5.96099e-06,2.66696e-08,0.527145,0.00175714,-5.88098e-06,4.65094e-08,0.528897,0.00174552,-5.74145e-06,2.57114e-08,0.530637,0.00173411,-5.66431e-06,2.94588e-08,0.532365,0.00172287,-5.57594e-06,3.52667e-08,0.534082,0.00171182,-5.47014e-06,8.28868e-09,0.535789,0.00170091,-5.44527e-06,5.07871e-08,0.537484,0.00169017,-5.29291e-06,2.69817e-08,0.539169,0.00167967,-5.21197e-06,2.01009e-08,0.540844,0.0016693,-5.15166e-06,1.18237e-08,0.542508,0.00165903,-5.11619e-06,5.18135e-08,0.544162,0.00164896,-4.96075e-06,1.9341e-08,0.545806,0.00163909,-4.90273e-06,-9.96867e-09,0.54744,0.00162926,-4.93263e-06,8.01382e-08,0.549064,0.00161963,-4.69222e-06,-1.25601e-08,0.550679,0.00161021,-4.7299e-06,2.97067e-08,0.552285,0.00160084,-4.64078e-06,1.29426e-08,0.553881,0.0015916,-4.60195e-06,3.77327e-08,0.555468,0.00158251,-4.48875e-06,1.49412e-08,0.557046,0.00157357,-4.44393e-06,2.17118e-08,0.558615,0.00156475,-4.3788e-06,1.74206e-08,0.560176,0.00155605,-4.32653e-06,2.78152e-08,0.561727,0.00154748,-4.24309e-06,-9.47239e-09,0.563271,0.00153896,-4.27151e-06,6.9679e-08,0.564805,0.00153063,-4.06247e-06,-3.08246e-08,0.566332,0.00152241,-4.15494e-06,5.36188e-08,0.56785,0.00151426,-3.99409e-06,-4.83594e-09,0.56936,0.00150626,-4.00859e-06,2.53293e-08,0.570863,0.00149832,-3.93261e-06,2.27286e-08,0.572357,0.00149052,-3.86442e-06,2.96541e-09,0.573844,0.0014828,-3.85552e-06,2.50147e-08,0.575323,0.00147516,-3.78048e-06,1.61842e-08,0.576794,0.00146765,-3.73193e-06,2.94582e-08,0.578258,0.00146028,-3.64355e-06,-1.48076e-08,0.579715,0.00145295,-3.68798e-06,2.97724e-08,0.581164,0.00144566,-3.59866e-06,1.49272e-08,0.582606,0.00143851,-3.55388e-06,2.97285e-08,0.584041,0.00143149,-3.46469e-06,-1.46323e-08,0.585469,0.00142451,-3.50859e-06,2.88004e-08,0.58689,0.00141758,-3.42219e-06,1.864e-08,0.588304,0.00141079,-3.36627e-06,1.58482e-08,0.589712,0.00140411,-3.31872e-06,-2.24279e-08,0.591112,0.00139741,-3.38601e-06,7.38639e-08,0.592507,0.00139085,-3.16441e-06,-3.46088e-08,0.593894,0.00138442,-3.26824e-06,4.96675e-09,0.595275,0.0013779,-3.25334e-06,7.4346e-08,0.59665,0.00137162,-3.0303e-06,-6.39319e-08,0.598019,0.00136536,-3.2221e-06,6.21725e-08,0.599381,0.00135911,-3.03558e-06,-5.94423e-09,0.600737,0.00135302,-3.05341e-06,2.12091e-08,0.602087,0.00134697,-2.98979e-06,-1.92876e-08,0.603431,0.00134094,-3.04765e-06,5.5941e-08,0.604769,0.00133501,-2.87983e-06,-2.56622e-08,0.606101,0.00132917,-2.95681e-06,4.67078e-08,0.607427,0.0013234,-2.81669e-06,-4.19592e-08,0.608748,0.00131764,-2.94257e-06,6.15243e-08,0.610062,0.00131194,-2.75799e-06,-2.53244e-08,0.611372,0.00130635,-2.83397e-06,3.97739e-08,0.612675,0.0013008,-2.71465e-06,-1.45618e-08,0.613973,0.00129533,-2.75833e-06,1.84733e-08,0.615266,0.00128986,-2.70291e-06,2.73606e-10,0.616553,0.00128446,-2.70209e-06,4.00367e-08,0.617835,0.00127918,-2.58198e-06,-4.12113e-08,0.619111,0.00127389,-2.70561e-06,6.52039e-08,0.620383,0.00126867,-2.51e-06,-4.07901e-08,0.621649,0.00126353,-2.63237e-06,3.83516e-08,0.62291,0.00125838,-2.51732e-06,6.59315e-09,0.624166,0.00125337,-2.49754e-06,-5.11939e-09,0.625416,0.00124836,-2.5129e-06,1.38846e-08,0.626662,0.00124337,-2.47124e-06,9.18514e-09,0.627903,0.00123846,-2.44369e-06,8.97952e-09,0.629139,0.0012336,-2.41675e-06,1.45012e-08,0.63037,0.00122881,-2.37325e-06,-7.37949e-09,0.631597,0.00122404,-2.39538e-06,1.50169e-08,0.632818,0.00121929,-2.35033e-06,6.91648e-09,0.634035,0.00121461,-2.32958e-06,1.69219e-08,0.635248,0.00121,-2.27882e-06,-1.49997e-08,0.636455,0.0012054,-2.32382e-06,4.30769e-08,0.637659,0.00120088,-2.19459e-06,-3.80986e-08,0.638857,0.00119638,-2.30888e-06,4.97134e-08,0.640051,0.00119191,-2.15974e-06,-4.15463e-08,0.641241,0.00118747,-2.28438e-06,5.68667e-08,0.642426,0.00118307,-2.11378e-06,-7.10641e-09,0.643607,0.00117882,-2.1351e-06,-2.8441e-08,0.644784,0.00117446,-2.22042e-06,6.12658e-08,0.645956,0.00117021,-2.03663e-06,-3.78083e-08,0.647124,0.00116602,-2.15005e-06,3.03627e-08,0.648288,0.00116181,-2.05896e-06,-2.40379e-08,0.649448,0.00115762,-2.13108e-06,6.57887e-08,0.650603,0.00115356,-1.93371e-06,-6.03028e-08,0.651755,0.00114951,-2.11462e-06,5.62134e-08,0.652902,0.00114545,-1.94598e-06,-4.53417e-08,0.654046,0.00114142,-2.082e-06,6.55489e-08,0.655185,0.00113745,-1.88536e-06,-3.80396e-08,0.656321,0.00113357,-1.99948e-06,2.70049e-08,0.657452,0.00112965,-1.91846e-06,-1.03755e-08,0.65858,0.00112578,-1.94959e-06,1.44973e-08,0.659704,0.00112192,-1.9061e-06,1.1991e-08,0.660824,0.00111815,-1.87012e-06,-2.85634e-09,0.66194,0.0011144,-1.87869e-06,-5.65782e-10,0.663053,0.00111064,-1.88039e-06,5.11947e-09,0.664162,0.0011069,-1.86503e-06,3.96924e-08,0.665267,0.00110328,-1.74595e-06,-4.46795e-08,0.666368,0.00109966,-1.87999e-06,1.98161e-08,0.667466,0.00109596,-1.82054e-06,2.502e-08,0.66856,0.00109239,-1.74548e-06,-6.86593e-10,0.669651,0.0010889,-1.74754e-06,-2.22739e-08,0.670738,0.00108534,-1.81437e-06,3.01776e-08,0.671821,0.0010818,-1.72383e-06,2.07732e-08,0.672902,0.00107841,-1.66151e-06,-5.36658e-08,0.673978,0.00107493,-1.82251e-06,7.46802e-08,0.675051,0.00107151,-1.59847e-06,-6.62411e-08,0.676121,0.00106811,-1.79719e-06,7.10748e-08,0.677188,0.00106473,-1.58397e-06,-3.92441e-08,0.678251,0.00106145,-1.7017e-06,2.62973e-08,0.679311,0.00105812,-1.62281e-06,-6.34035e-09,0.680367,0.00105486,-1.64183e-06,-9.36249e-10,0.68142,0.00105157,-1.64464e-06,1.00854e-08,0.68247,0.00104831,-1.61438e-06,2.01995e-08,0.683517,0.00104514,-1.55378e-06,-3.1279e-08,0.68456,0.00104194,-1.64762e-06,4.53114e-08,0.685601,0.00103878,-1.51169e-06,-3.07573e-08,0.686638,0.00103567,-1.60396e-06,1.81133e-08,0.687672,0.00103251,-1.54962e-06,1.79085e-08,0.688703,0.00102947,-1.49589e-06,-3.01428e-08,0.689731,0.00102639,-1.58632e-06,4.30583e-08,0.690756,0.00102334,-1.45715e-06,-2.28814e-08,0.691778,0.00102036,-1.52579e-06,-1.11373e-08,0.692797,0.00101727,-1.5592e-06,6.74305e-08,0.693812,0.00101436,-1.35691e-06,-7.97709e-08,0.694825,0.0010114,-1.59622e-06,7.28391e-08,0.695835,0.00100843,-1.37771e-06,-3.27715e-08,0.696842,0.00100558,-1.47602e-06,-1.35807e-09,0.697846,0.00100262,-1.48009e-06,3.82037e-08,0.698847,0.000999775,-1.36548e-06,-3.22474e-08,0.699846,0.000996948,-1.46223e-06,3.11809e-08,0.700841,0.000994117,-1.36868e-06,-3.28714e-08,0.701834,0.000991281,-1.4673e-06,4.07001e-08,0.702824,0.000988468,-1.3452e-06,-1.07197e-08,0.703811,0.000985746,-1.37736e-06,2.17866e-09,0.704795,0.000982998,-1.37082e-06,2.00521e-09,0.705777,0.000980262,-1.3648e-06,-1.01996e-08,0.706756,0.000977502,-1.3954e-06,3.87931e-08,0.707732,0.000974827,-1.27902e-06,-2.57632e-08,0.708706,0.000972192,-1.35631e-06,4.65513e-09,0.709676,0.000969493,-1.34235e-06,7.14257e-09,0.710645,0.00096683,-1.32092e-06,2.63791e-08,0.71161,0.000964267,-1.24178e-06,-5.30543e-08,0.712573,0.000961625,-1.40095e-06,6.66289e-08,0.713533,0.000959023,-1.20106e-06,-3.46474e-08,0.714491,0.000956517,-1.305e-06,1.23559e-08,0.715446,0.000953944,-1.26793e-06,-1.47763e-08,0.716399,0.000951364,-1.31226e-06,4.67494e-08,0.717349,0.000948879,-1.17201e-06,-5.3012e-08,0.718297,0.000946376,-1.33105e-06,4.60894e-08,0.719242,0.000943852,-1.19278e-06,-1.21366e-08,0.720185,0.00094143,-1.22919e-06,2.45673e-09,0.721125,0.000938979,-1.22182e-06,2.30966e-09,0.722063,0.000936543,-1.21489e-06,-1.16954e-08,0.722998,0.000934078,-1.24998e-06,4.44718e-08,0.723931,0.000931711,-1.11656e-06,-4.69823e-08,0.724861,0.000929337,-1.25751e-06,2.4248e-08,0.725789,0.000926895,-1.18477e-06,9.5949e-09,0.726715,0.000924554,-1.15598e-06,-3.02286e-09,0.727638,0.000922233,-1.16505e-06,2.49649e-09,0.72856,0.00091991,-1.15756e-06,-6.96321e-09,0.729478,0.000917575,-1.17845e-06,2.53564e-08,0.730395,0.000915294,-1.10238e-06,-3.48578e-08,0.731309,0.000912984,-1.20695e-06,5.44704e-08,0.732221,0.000910734,-1.04354e-06,-6.38144e-08,0.73313,0.000908455,-1.23499e-06,8.15781e-08,0.734038,0.00090623,-9.90253e-07,-8.3684e-08,0.734943,0.000903999,-1.2413e-06,7.43441e-08,0.735846,0.000901739,-1.01827e-06,-3.48787e-08,0.736746,0.000899598,-1.12291e-06,5.56596e-09,0.737645,0.000897369,-1.10621e-06,1.26148e-08,0.738541,0.000895194,-1.06837e-06,3.57935e-09,0.739435,0.000893068,-1.05763e-06,-2.69322e-08,0.740327,0.000890872,-1.13842e-06,4.45448e-08,0.741217,0.000888729,-1.00479e-06,-3.20376e-08,0.742105,0.000886623,-1.1009e-06,2.40011e-08,0.74299,0.000884493,-1.0289e-06,-4.36209e-09,0.743874,0.000882422,-1.04199e-06,-6.55268e-09,0.744755,0.000880319,-1.06164e-06,3.05728e-08,0.745634,0.000878287,-9.69926e-07,-5.61338e-08,0.746512,0.000876179,-1.13833e-06,7.4753e-08,0.747387,0.000874127,-9.14068e-07,-6.40644e-08,0.74826,0.000872106,-1.10626e-06,6.22955e-08,0.749131,0.000870081,-9.19375e-07,-6.59083e-08,0.75,0.000868044,-1.1171e-06,8.21284e-08,0.750867,0.000866056,-8.70714e-07,-8.37915e-08,0.751732,0.000864064,-1.12209e-06,7.42237e-08,0.752595,0.000862042,-8.99418e-07,-3.42894e-08,0.753456,0.00086014,-1.00229e-06,3.32955e-09,0.754315,0.000858146,-9.92297e-07,2.09712e-08,0.755173,0.000856224,-9.29384e-07,-2.76096e-08,0.756028,0.000854282,-1.01221e-06,2.98627e-08,0.756881,0.000852348,-9.22625e-07,-3.22365e-08,0.757733,0.000850406,-1.01933e-06,3.94786e-08,0.758582,0.000848485,-9.00898e-07,-6.46833e-09,0.75943,0.000846664,-9.20303e-07,-1.36052e-08,0.760275,0.000844783,-9.61119e-07,1.28447e-09,0.761119,0.000842864,-9.57266e-07,8.4674e-09,0.761961,0.000840975,-9.31864e-07,2.44506e-08,0.762801,0.000839185,-8.58512e-07,-4.6665e-08,0.763639,0.000837328,-9.98507e-07,4.30001e-08,0.764476,0.00083546,-8.69507e-07,-6.12609e-09,0.76531,0.000833703,-8.87885e-07,-1.84959e-08,0.766143,0.000831871,-9.43372e-07,2.05052e-08,0.766974,0.000830046,-8.81857e-07,-3.92026e-09,0.767803,0.000828271,-8.93618e-07,-4.82426e-09,0.768631,0.000826469,-9.0809e-07,2.32172e-08,0.769456,0.000824722,-8.38439e-07,-2.84401e-08,0.77028,0.00082296,-9.23759e-07,3.09386e-08,0.771102,0.000821205,-8.30943e-07,-3.57099e-08,0.771922,0.000819436,-9.38073e-07,5.22963e-08,0.772741,0.000817717,-7.81184e-07,-5.42658e-08,0.773558,0.000815992,-9.43981e-07,4.55579e-08,0.774373,0.000814241,-8.07308e-07,-8.75656e-09,0.775186,0.0008126,-8.33578e-07,-1.05315e-08,0.775998,0.000810901,-8.65172e-07,-8.72188e-09,0.776808,0.000809145,-8.91338e-07,4.54191e-08,0.777616,0.000807498,-7.5508e-07,-5.37454e-08,0.778423,0.000805827,-9.16317e-07,5.03532e-08,0.779228,0.000804145,-7.65257e-07,-2.84584e-08,0.780031,0.000802529,-8.50632e-07,3.87579e-09,0.780833,0.00080084,-8.39005e-07,1.29552e-08,0.781633,0.0007992,-8.00139e-07,3.90804e-09,0.782432,0.000797612,-7.88415e-07,-2.85874e-08,0.783228,0.000795949,-8.74177e-07,5.0837e-08,0.784023,0.000794353,-7.21666e-07,-5.55513e-08,0.784817,0.000792743,-8.8832e-07,5.21587e-08,0.785609,0.000791123,-7.31844e-07,-3.38744e-08,0.786399,0.000789558,-8.33467e-07,2.37342e-08,0.787188,0.000787962,-7.62264e-07,-1.45775e-09,0.787975,0.000786433,-7.66638e-07,-1.79034e-08,0.788761,0.000784846,-8.20348e-07,1.34665e-08,0.789545,0.000783246,-7.79948e-07,2.3642e-08,0.790327,0.000781757,-7.09022e-07,-4.84297e-08,0.791108,0.000780194,-8.54311e-07,5.08674e-08,0.791888,0.000778638,-7.01709e-07,-3.58303e-08,0.792666,0.000777127,-8.092e-07,3.28493e-08,0.793442,0.000775607,-7.10652e-07,-3.59624e-08,0.794217,0.000774078,-8.1854e-07,5.13959e-08,0.79499,0.000772595,-6.64352e-07,-5.04121e-08,0.795762,0.000771115,-8.15588e-07,3.10431e-08,0.796532,0.000769577,-7.22459e-07,-1.41557e-08,0.797301,0.00076809,-7.64926e-07,2.55795e-08,0.798069,0.000766636,-6.88187e-07,-2.85578e-08,0.798835,0.000765174,-7.73861e-07,2.90472e-08,0.799599,0.000763714,-6.86719e-07,-2.80262e-08,0.800362,0.000762256,-7.70798e-07,2.34531e-08,0.801123,0.000760785,-7.00438e-07,-6.18144e-09,0.801884,0.000759366,-7.18983e-07,1.27263e-09,0.802642,0.000757931,-7.15165e-07,1.09101e-09,0.803399,0.000756504,-7.11892e-07,-5.63675e-09,0.804155,0.000755064,-7.28802e-07,2.14559e-08,0.80491,0.00075367,-6.64434e-07,-2.05821e-08,0.805663,0.00075228,-7.26181e-07,1.26812e-09,0.806414,0.000750831,-7.22377e-07,1.55097e-08,0.807164,0.000749433,-6.75848e-07,-3.70216e-09,0.807913,0.00074807,-6.86954e-07,-7.0105e-10,0.80866,0.000746694,-6.89057e-07,6.5063e-09,0.809406,0.000745336,-6.69538e-07,-2.53242e-08,0.810151,0.000743921,-7.45511e-07,3.51858e-08,0.810894,0.000742535,-6.39953e-07,3.79034e-09,0.811636,0.000741267,-6.28582e-07,-5.03471e-08,0.812377,0.000739858,-7.79624e-07,7.83886e-08,0.813116,0.000738534,-5.44458e-07,-8.43935e-08,0.813854,0.000737192,-7.97638e-07,8.03714e-08,0.81459,0.000735838,-5.56524e-07,-5.82784e-08,0.815325,0.00073455,-7.31359e-07,3.35329e-08,0.816059,0.000733188,-6.3076e-07,-1.62486e-08,0.816792,0.000731878,-6.79506e-07,3.14614e-08,0.817523,0.000730613,-5.85122e-07,-4.99925e-08,0.818253,0.000729293,-7.35099e-07,4.92994e-08,0.818982,0.000727971,-5.87201e-07,-2.79959e-08,0.819709,0.000726712,-6.71189e-07,3.07959e-09,0.820435,0.000725379,-6.6195e-07,1.56777e-08,0.82116,0.000724102,-6.14917e-07,-6.18564e-09,0.821883,0.000722854,-6.33474e-07,9.06488e-09,0.822606,0.000721614,-6.06279e-07,-3.00739e-08,0.823327,0.000720311,-6.96501e-07,5.16262e-08,0.824046,0.000719073,-5.41623e-07,-5.72214e-08,0.824765,0.000717818,-7.13287e-07,5.80503e-08,0.825482,0.000716566,-5.39136e-07,-5.57703e-08,0.826198,0.00071532,-7.06447e-07,4.58215e-08,0.826912,0.000714045,-5.68983e-07,-8.30636e-09,0.827626,0.000712882,-5.93902e-07,-1.25961e-08,0.828338,0.000711656,-6.3169e-07,-9.13985e-10,0.829049,0.00071039,-6.34432e-07,1.62519e-08,0.829759,0.00070917,-5.85676e-07,-4.48904e-09,0.830468,0.000707985,-5.99143e-07,1.70418e-09,0.831175,0.000706792,-5.9403e-07,-2.32768e-09,0.831881,0.000705597,-6.01014e-07,7.60648e-09,0.832586,0.000704418,-5.78194e-07,-2.80982e-08,0.83329,0.000703177,-6.62489e-07,4.51817e-08,0.833993,0.000701988,-5.26944e-07,-3.34192e-08,0.834694,0.000700834,-6.27201e-07,2.88904e-08,0.835394,0.000699666,-5.4053e-07,-2.25378e-08,0.836093,0.000698517,-6.08143e-07,1.65589e-09,0.836791,0.000697306,-6.03176e-07,1.59142e-08,0.837488,0.000696147,-5.55433e-07,-5.70801e-09,0.838184,0.000695019,-5.72557e-07,6.91792e-09,0.838878,0.000693895,-5.51803e-07,-2.19637e-08,0.839571,0.000692725,-6.17694e-07,2.13321e-08,0.840263,0.000691554,-5.53698e-07,-3.75996e-09,0.840954,0.000690435,-5.64978e-07,-6.29219e-09,0.841644,0.000689287,-5.83855e-07,2.89287e-08,0.842333,0.000688206,-4.97068e-07,-4.98181e-08,0.843021,0.000687062,-6.46523e-07,5.11344e-08,0.843707,0.000685922,-4.9312e-07,-3.55102e-08,0.844393,0.00068483,-5.9965e-07,3.13019e-08,0.845077,0.000683724,-5.05745e-07,-3.00925e-08,0.84576,0.000682622,-5.96022e-07,2.94636e-08,0.846442,0.000681519,-5.07631e-07,-2.81572e-08,0.847123,0.000680419,-5.92103e-07,2.35606e-08,0.847803,0.000679306,-5.21421e-07,-6.48045e-09,0.848482,0.000678243,-5.40863e-07,2.36124e-09,0.849159,0.000677169,-5.33779e-07,-2.96461e-09,0.849836,0.000676092,-5.42673e-07,9.49728e-09,0.850512,0.000675035,-5.14181e-07,-3.50245e-08,0.851186,0.000673902,-6.19254e-07,7.09959e-08,0.851859,0.000672876,-4.06267e-07,-7.01453e-08,0.852532,0.000671853,-6.16703e-07,3.07714e-08,0.853203,0.000670712,-5.24388e-07,6.66423e-09,0.853873,0.000669684,-5.04396e-07,2.17629e-09,0.854542,0.000668681,-4.97867e-07,-1.53693e-08,0.855211,0.000667639,-5.43975e-07,-3.03752e-10,0.855878,0.000666551,-5.44886e-07,1.65844e-08,0.856544,0.000665511,-4.95133e-07,-6.42907e-09,0.857209,0.000664501,-5.1442e-07,9.13195e-09,0.857873,0.0006635,-4.87024e-07,-3.00987e-08,0.858536,0.000662435,-5.7732e-07,5.16584e-08,0.859198,0.000661436,-4.22345e-07,-5.73255e-08,0.859859,0.000660419,-5.94322e-07,5.84343e-08,0.860518,0.000659406,-4.19019e-07,-5.72022e-08,0.861177,0.000658396,-5.90626e-07,5.11653e-08,0.861835,0.000657368,-4.3713e-07,-2.82495e-08,0.862492,0.000656409,-5.21878e-07,2.22788e-09,0.863148,0.000655372,-5.15195e-07,1.9338e-08,0.863803,0.0006544,-4.5718e-07,-1.99754e-08,0.864457,0.000653425,-5.17107e-07,9.59024e-10,0.86511,0.000652394,-5.1423e-07,1.61393e-08,0.865762,0.000651414,-4.65812e-07,-5.91149e-09,0.866413,0.000650465,-4.83546e-07,7.50665e-09,0.867063,0.00064952,-4.61026e-07,-2.4115e-08,0.867712,0.000648526,-5.33371e-07,2.93486e-08,0.86836,0.000647547,-4.45325e-07,-3.36748e-08,0.869007,0.000646555,-5.4635e-07,4.57461e-08,0.869653,0.0006456,-4.09112e-07,-3.01002e-08,0.870298,0.000644691,-4.99412e-07,1.50501e-08,0.870942,0.000643738,-4.54262e-07,-3.01002e-08,0.871585,0.000642739,-5.44563e-07,4.57461e-08,0.872228,0.000641787,-4.07324e-07,-3.36748e-08,0.872869,0.000640871,-5.08349e-07,2.93486e-08,0.873509,0.000639943,-4.20303e-07,-2.4115e-08,0.874149,0.00063903,-4.92648e-07,7.50655e-09,0.874787,0.000638067,-4.70128e-07,-5.91126e-09,0.875425,0.000637109,-4.87862e-07,1.61385e-08,0.876062,0.000636182,-4.39447e-07,9.61961e-10,0.876697,0.000635306,-4.36561e-07,-1.99863e-08,0.877332,0.000634373,-4.9652e-07,1.93785e-08,0.877966,0.000633438,-4.38384e-07,2.07697e-09,0.878599,0.000632567,-4.32153e-07,-2.76864e-08,0.879231,0.00063162,-5.15212e-07,4.90641e-08,0.879862,0.000630737,-3.6802e-07,-4.93606e-08,0.880493,0.000629852,-5.16102e-07,2.9169e-08,0.881122,0.000628908,-4.28595e-07,-7.71083e-09,0.881751,0.000628027,-4.51727e-07,1.6744e-09,0.882378,0.000627129,-4.46704e-07,1.01317e-09,0.883005,0.000626239,-4.43665e-07,-5.72703e-09,0.883631,0.000625334,-4.60846e-07,2.1895e-08,0.884255,0.000624478,-3.95161e-07,-2.22481e-08,0.88488,0.000623621,-4.61905e-07,7.4928e-09,0.885503,0.00062272,-4.39427e-07,-7.72306e-09,0.886125,0.000621818,-4.62596e-07,2.33995e-08,0.886746,0.000620963,-3.92398e-07,-2.62704e-08,0.887367,0.000620099,-4.71209e-07,2.20775e-08,0.887987,0.000619223,-4.04976e-07,-2.43496e-09,0.888605,0.000618406,-4.12281e-07,-1.23377e-08,0.889223,0.000617544,-4.49294e-07,-7.81876e-09,0.88984,0.000616622,-4.72751e-07,4.36128e-08,0.890457,0.000615807,-3.41912e-07,-4.7423e-08,0.891072,0.000614981,-4.84181e-07,2.68698e-08,0.891687,0.000614093,-4.03572e-07,-4.51384e-10,0.8923,0.000613285,-4.04926e-07,-2.50643e-08,0.892913,0.0006124,-4.80119e-07,4.11038e-08,0.893525,0.000611563,-3.56808e-07,-2.01414e-08,0.894136,0.000610789,-4.17232e-07,-2.01426e-08,0.894747,0.000609894,-4.7766e-07,4.11073e-08,0.895356,0.000609062,-3.54338e-07,-2.50773e-08,0.895965,0.000608278,-4.2957e-07,-4.02954e-10,0.896573,0.000607418,-4.30779e-07,2.66891e-08,0.89718,0.000606636,-3.50711e-07,-4.67489e-08,0.897786,0.000605795,-4.90958e-07,4.10972e-08,0.898391,0.000604936,-3.67666e-07,1.56948e-09,0.898996,0.000604205,-3.62958e-07,-4.73751e-08,0.8996,0.000603337,-5.05083e-07,6.87214e-08,0.900202,0.000602533,-2.98919e-07,-4.86966e-08,0.900805,0.000601789,-4.45009e-07,6.85589e-09,0.901406,0.00060092,-4.24441e-07,2.1273e-08,0.902007,0.000600135,-3.60622e-07,-3.23434e-08,0.902606,0.000599317,-4.57652e-07,4.84959e-08,0.903205,0.000598547,-3.12164e-07,-4.24309e-08,0.903803,0.000597795,-4.39457e-07,2.01844e-09,0.904401,0.000596922,-4.33402e-07,3.43571e-08,0.904997,0.000596159,-3.30331e-07,-2.02374e-08,0.905593,0.000595437,-3.91043e-07,-1.30123e-08,0.906188,0.000594616,-4.3008e-07,1.26819e-08,0.906782,0.000593794,-3.92034e-07,2.18894e-08,0.907376,0.000593076,-3.26366e-07,-4.06349e-08,0.907968,0.000592301,-4.4827e-07,2.1441e-08,0.90856,0.000591469,-3.83947e-07,1.44754e-08,0.909151,0.000590744,-3.40521e-07,-1.97379e-08,0.909742,0.000590004,-3.99735e-07,4.87161e-09,0.910331,0.000589219,-3.8512e-07,2.51532e-10,0.91092,0.00058845,-3.84366e-07,-5.87776e-09,0.911508,0.000587663,-4.01999e-07,2.32595e-08,0.912096,0.000586929,-3.3222e-07,-2.75554e-08,0.912682,0.000586182,-4.14887e-07,2.73573e-08,0.913268,0.000585434,-3.32815e-07,-2.22692e-08,0.913853,0.000584702,-3.99622e-07,2.11486e-09,0.914437,0.000583909,-3.93278e-07,1.38098e-08,0.915021,0.000583164,-3.51848e-07,2.25042e-09,0.915604,0.000582467,-3.45097e-07,-2.28115e-08,0.916186,0.000581708,-4.13531e-07,2.93911e-08,0.916767,0.000580969,-3.25358e-07,-3.51481e-08,0.917348,0.000580213,-4.30803e-07,5.15967e-08,0.917928,0.000579506,-2.76012e-07,-5.20296e-08,0.918507,0.000578798,-4.32101e-07,3.73124e-08,0.919085,0.000578046,-3.20164e-07,-3.76154e-08,0.919663,0.000577293,-4.3301e-07,5.35447e-08,0.92024,0.000576587,-2.72376e-07,-5.7354e-08,0.920816,0.000575871,-4.44438e-07,5.66621e-08,0.921391,0.000575152,-2.74452e-07,-5.00851e-08,0.921966,0.000574453,-4.24707e-07,2.4469e-08,0.92254,0.000573677,-3.513e-07,1.18138e-08,0.923114,0.000573009,-3.15859e-07,-1.21195e-08,0.923686,0.000572341,-3.52217e-07,-2.29403e-08,0.924258,0.000571568,-4.21038e-07,4.4276e-08,0.924829,0.000570859,-2.8821e-07,-3.49546e-08,0.9254,0.000570178,-3.93074e-07,3.59377e-08,0.92597,0.000569499,-2.85261e-07,-4.91915e-08,0.926539,0.000568781,-4.32835e-07,4.16189e-08,0.927107,0.00056804,-3.07979e-07,1.92523e-09,0.927675,0.00056743,-3.02203e-07,-4.93198e-08,0.928242,0.000566678,-4.50162e-07,7.61447e-08,0.928809,0.000566006,-2.21728e-07,-7.6445e-08,0.929374,0.000565333,-4.51063e-07,5.08216e-08,0.929939,0.000564583,-2.98599e-07,-7.63212e-09,0.930503,0.000563963,-3.21495e-07,-2.02931e-08,0.931067,0.000563259,-3.82374e-07,2.92001e-08,0.93163,0.000562582,-2.94774e-07,-3.69025e-08,0.932192,0.000561882,-4.05482e-07,5.88053e-08,0.932754,0.000561247,-2.29066e-07,-7.91094e-08,0.933315,0.000560552,-4.66394e-07,7.88184e-08,0.933875,0.000559856,-2.29939e-07,-5.73501e-08,0.934434,0.000559224,-4.01989e-07,3.13727e-08,0.934993,0.000558514,-3.07871e-07,-8.53611e-09,0.935551,0.000557873,-3.33479e-07,2.77175e-09,0.936109,0.000557214,-3.25164e-07,-2.55091e-09,0.936666,0.000556556,-3.32817e-07,7.43188e-09,0.937222,0.000555913,-3.10521e-07,-2.71766e-08,0.937778,0.00055521,-3.92051e-07,4.167e-08,0.938333,0.000554551,-2.67041e-07,-2.02941e-08,0.938887,0.000553956,-3.27923e-07,-2.00984e-08,0.93944,0.00055324,-3.88218e-07,4.10828e-08,0.939993,0.000552587,-2.6497e-07,-2.50237e-08,0.940546,0.000551982,-3.40041e-07,-5.92583e-10,0.941097,0.0005513,-3.41819e-07,2.7394e-08,0.941648,0.000550698,-2.59637e-07,-4.93788e-08,0.942199,0.000550031,-4.07773e-07,5.09119e-08,0.942748,0.000549368,-2.55038e-07,-3.50595e-08,0.943297,0.000548753,-3.60216e-07,2.97214e-08,0.943846,0.000548122,-2.71052e-07,-2.42215e-08,0.944394,0.000547507,-3.43716e-07,7.55985e-09,0.944941,0.000546842,-3.21037e-07,-6.01796e-09,0.945487,0.000546182,-3.3909e-07,1.65119e-08,0.946033,0.000545553,-2.89555e-07,-4.2498e-10,0.946578,0.000544973,-2.9083e-07,-1.4812e-08,0.947123,0.000544347,-3.35266e-07,6.83068e-11,0.947667,0.000543676,-3.35061e-07,1.45388e-08,0.94821,0.00054305,-2.91444e-07,1.38123e-09,0.948753,0.000542471,-2.87301e-07,-2.00637e-08,0.949295,0.000541836,-3.47492e-07,1.92688e-08,0.949837,0.000541199,-2.89685e-07,2.59298e-09,0.950378,0.000540628,-2.81906e-07,-2.96407e-08,0.950918,0.000539975,-3.70829e-07,5.63652e-08,0.951458,0.000539402,-2.01733e-07,-7.66107e-08,0.951997,0.000538769,-4.31565e-07,7.12638e-08,0.952535,0.00053812,-2.17774e-07,-2.96305e-08,0.953073,0.000537595,-3.06665e-07,-1.23464e-08,0.95361,0.000536945,-3.43704e-07,1.94114e-08,0.954147,0.000536316,-2.8547e-07,-5.69451e-09,0.954683,0.000535728,-3.02554e-07,3.36666e-09,0.955219,0.000535133,-2.92454e-07,-7.77208e-09,0.955753,0.000534525,-3.1577e-07,2.77216e-08,0.956288,0.000533976,-2.32605e-07,-4.35097e-08,0.956821,0.00053338,-3.63134e-07,2.7108e-08,0.957354,0.000532735,-2.8181e-07,-5.31772e-09,0.957887,0.000532156,-2.97764e-07,-5.83718e-09,0.958419,0.000531543,-3.15275e-07,2.86664e-08,0.95895,0.000530998,-2.29276e-07,-4.9224e-08,0.959481,0.000530392,-3.76948e-07,4.90201e-08,0.960011,0.000529785,-2.29887e-07,-2.76471e-08,0.96054,0.000529243,-3.12829e-07,1.96385e-09,0.961069,0.000528623,-3.06937e-07,1.97917e-08,0.961598,0.000528068,-2.47562e-07,-2.15261e-08,0.962125,0.000527508,-3.1214e-07,6.70795e-09,0.962653,0.000526904,-2.92016e-07,-5.30573e-09,0.963179,0.000526304,-3.07934e-07,1.4515e-08,0.963705,0.000525732,-2.64389e-07,6.85048e-09,0.964231,0.000525224,-2.43837e-07,-4.19169e-08,0.964756,0.00052461,-3.69588e-07,4.1608e-08,0.96528,0.000523996,-2.44764e-07,-5.30598e-09,0.965804,0.000523491,-2.60682e-07,-2.03841e-08,0.966327,0.000522908,-3.21834e-07,2.72378e-08,0.966849,0.000522346,-2.40121e-07,-2.89625e-08,0.967371,0.000521779,-3.27008e-07,2.90075e-08,0.967893,0.000521212,-2.39986e-07,-2.74629e-08,0.968414,0.00052065,-3.22374e-07,2.12396e-08,0.968934,0.000520069,-2.58656e-07,2.10922e-09,0.969454,0.000519558,-2.52328e-07,-2.96765e-08,0.969973,0.000518964,-3.41357e-07,5.6992e-08,0.970492,0.000518452,-1.70382e-07,-7.90821e-08,0.97101,0.000517874,-4.07628e-07,8.05224e-08,0.971528,0.000517301,-1.66061e-07,-6.41937e-08,0.972045,0.000516776,-3.58642e-07,5.70429e-08,0.972561,0.00051623,-1.87513e-07,-4.47686e-08,0.973077,0.00051572,-3.21819e-07,2.82237e-09,0.973593,0.000515085,-3.13352e-07,3.34792e-08,0.974108,0.000514559,-2.12914e-07,-1.75298e-08,0.974622,0.000514081,-2.65503e-07,-2.29648e-08,0.975136,0.000513481,-3.34398e-07,4.97843e-08,0.975649,0.000512961,-1.85045e-07,-5.6963e-08,0.976162,0.00051242,-3.55934e-07,5.88585e-08,0.976674,0.000511885,-1.79359e-07,-5.92616e-08,0.977185,0.000511348,-3.57143e-07,5.89785e-08,0.977696,0.000510811,-1.80208e-07,-5.74433e-08,0.978207,0.000510278,-3.52538e-07,5.15854e-08,0.978717,0.000509728,-1.97781e-07,-2.9689e-08,0.979226,0.000509243,-2.86848e-07,7.56591e-09,0.979735,0.000508692,-2.64151e-07,-5.74649e-10,0.980244,0.000508162,-2.65875e-07,-5.26732e-09,0.980752,0.000507615,-2.81677e-07,2.16439e-08,0.981259,0.000507116,-2.16745e-07,-2.17037e-08,0.981766,0.000506618,-2.81856e-07,5.56636e-09,0.982272,0.000506071,-2.65157e-07,-5.61689e-10,0.982778,0.000505539,-2.66842e-07,-3.31963e-09,0.983283,0.000504995,-2.76801e-07,1.38402e-08,0.983788,0.000504483,-2.3528e-07,7.56339e-09,0.984292,0.000504035,-2.1259e-07,-4.40938e-08,0.984796,0.000503478,-3.44871e-07,4.96026e-08,0.985299,0.000502937,-1.96064e-07,-3.51071e-08,0.985802,0.000502439,-3.01385e-07,3.12212e-08,0.986304,0.00050193,-2.07721e-07,-3.0173e-08,0.986806,0.000501424,-2.9824e-07,2.9866e-08,0.987307,0.000500917,-2.08642e-07,-2.96865e-08,0.987808,0.000500411,-2.97702e-07,2.92753e-08,0.988308,0.000499903,-2.09876e-07,-2.78101e-08,0.988807,0.0004994,-2.93306e-07,2.23604e-08,0.989307,0.000498881,-2.26225e-07,-2.02681e-09,0.989805,0.000498422,-2.32305e-07,-1.42531e-08,0.990303,0.000497915,-2.75065e-07,-5.65232e-10,0.990801,0.000497363,-2.76761e-07,1.65141e-08,0.991298,0.000496859,-2.27218e-07,-5.88639e-09,0.991795,0.000496387,-2.44878e-07,7.0315e-09,0.992291,0.000495918,-2.23783e-07,-2.22396e-08,0.992787,0.000495404,-2.90502e-07,2.23224e-08,0.993282,0.00049489,-2.23535e-07,-7.44543e-09,0.993776,0.000494421,-2.45871e-07,7.45924e-09,0.994271,0.000493951,-2.23493e-07,-2.23915e-08,0.994764,0.000493437,-2.90668e-07,2.25021e-08,0.995257,0.000492923,-2.23161e-07,-8.01218e-09,0.99575,0.000492453,-2.47198e-07,9.54669e-09,0.996242,0.000491987,-2.18558e-07,-3.01746e-08,0.996734,0.000491459,-3.09082e-07,5.1547e-08,0.997225,0.000490996,-1.54441e-07,-5.68039e-08,0.997716,0.000490517,-3.24853e-07,5.64594e-08,0.998206,0.000490036,-1.55474e-07,-4.98245e-08,0.998696,0.000489576,-3.04948e-07,2.36292e-08,0.999186,0.000489037,-2.3406e-07,1.49121e-08,0.999674,0.000488613,-1.89324e-07,-2.3673e-08,1.00016,0.000488164,-2.60343e-07,2.01754e-08,1.00065,0.000487704,-1.99816e-07,-5.70288e-08,1.00114,0.000487133,-3.70903e-07,8.87303e-08,1.00162,0.000486657,-1.04712e-07,-5.94737e-08,1.00211,0.000486269,-2.83133e-07,2.99553e-08,1.0026,0.000485793,-1.93267e-07,-6.03474e-08,1.00308,0.000485225,-3.74309e-07,9.2225e-08,1.00357,0.000484754,-9.76345e-08,-7.0134e-08,1.00405,0.000484348,-3.08036e-07,6.91016e-08,1.00454,0.000483939,-1.00731e-07,-8.70633e-08,1.00502,0.000483476,-3.61921e-07,4.07328e-08,1.0055,0.000482875,-2.39723e-07,4.33413e-08,1.00599,0.000482525,-1.09699e-07,-9.48886e-08,1.00647,0.000482021,-3.94365e-07,9.77947e-08,1.00695,0.000481526,-1.00981e-07,-5.78713e-08,1.00743,0.00048115,-2.74595e-07,1.44814e-08,1.00791,0.000480645,-2.31151e-07,-5.42665e-11,1.00839,0.000480182,-2.31314e-07,-1.42643e-08,1.00887,0.000479677,-2.74106e-07,5.71115e-08,1.00935,0.0004793,-1.02772e-07,-9.49724e-08,1.00983,0.000478809,-3.87689e-07,8.43596e-08,1.01031,0.000478287,-1.3461e-07,-4.04755e-09,1.01079,0.000478006,-1.46753e-07,-6.81694e-08,1.01127,0.000477508,-3.51261e-07,3.83067e-08,1.01174,0.00047692,-2.36341e-07,3.41521e-08,1.01222,0.00047655,-1.33885e-07,-5.57058e-08,1.0127,0.000476115,-3.01002e-07,6.94616e-08,1.01317,0.000475721,-9.26174e-08,-1.02931e-07,1.01365,0.000475227,-4.01412e-07,1.03846e-07,1.01412,0.000474736,-8.98751e-08,-7.40321e-08,1.0146,0.000474334,-3.11971e-07,7.30735e-08,1.01507,0.00047393,-9.27508e-08,-9.90527e-08,1.01554,0.000473447,-3.89909e-07,8.47188e-08,1.01602,0.000472921,-1.35753e-07,-1.40381e-09,1.01649,0.000472645,-1.39964e-07,-7.91035e-08,1.01696,0.000472128,-3.77275e-07,7.93993e-08,1.01744,0.000471612,-1.39077e-07,-7.52607e-11,1.01791,0.000471334,-1.39302e-07,-7.90983e-08,1.01838,0.000470818,-3.76597e-07,7.80499e-08,1.01885,0.000470299,-1.42448e-07,5.31733e-09,1.01932,0.00047003,-1.26496e-07,-9.93193e-08,1.01979,0.000469479,-4.24453e-07,1.53541e-07,1.02026,0.00046909,3.617e-08,-1.57217e-07,1.02073,0.000468691,-4.35482e-07,1.177e-07,1.02119,0.000468173,-8.23808e-08,-7.51659e-08,1.02166,0.000467783,-3.07878e-07,6.37538e-08,1.02213,0.000467358,-1.16617e-07,-6.064e-08,1.0226,0.000466943,-2.98537e-07,5.9597e-08,1.02306,0.000466525,-1.19746e-07,-5.85386e-08,1.02353,0.00046611,-2.95362e-07,5.53482e-08,1.024,0.000465685,-1.29317e-07,-4.36449e-08,1.02446,0.000465296,-2.60252e-07,2.20268e-11,1.02493,0.000464775,-2.60186e-07,4.35568e-08,1.02539,0.000464386,-1.29516e-07,-5.50398e-08,1.02586,0.000463961,-2.94635e-07,5.73932e-08,1.02632,0.000463544,-1.22456e-07,-5.53236e-08,1.02678,0.000463133,-2.88426e-07,4.46921e-08,1.02725,0.000462691,-1.5435e-07,-4.23534e-09,1.02771,0.000462369,-1.67056e-07,-2.77507e-08,1.02817,0.000461952,-2.50308e-07,-3.97101e-09,1.02863,0.000461439,-2.62221e-07,4.36348e-08,1.02909,0.000461046,-1.31317e-07,-5.13589e-08,1.02955,0.000460629,-2.85394e-07,4.25913e-08,1.03001,0.000460186,-1.5762e-07,2.0285e-10,1.03047,0.000459871,-1.57011e-07,-4.34027e-08,1.03093,0.000459427,-2.87219e-07,5.41987e-08,1.03139,0.000459015,-1.24623e-07,-5.4183e-08,1.03185,0.000458604,-2.87172e-07,4.33239e-08,1.03231,0.000458159,-1.572e-07,9.65817e-11,1.03277,0.000457845,-1.56911e-07,-4.37103e-08,1.03323,0.0004574,-2.88041e-07,5.55351e-08,1.03368,0.000456991,-1.21436e-07,-5.9221e-08,1.03414,0.00045657,-2.99099e-07,6.21394e-08,1.0346,0.000456158,-1.1268e-07,-7.01275e-08,1.03505,0.000455723,-3.23063e-07,9.91614e-08,1.03551,0.000455374,-2.55788e-08,-8.80996e-08,1.03596,0.000455058,-2.89878e-07,1.48184e-08,1.03642,0.000454523,-2.45422e-07,2.88258e-08,1.03687,0.000454119,-1.58945e-07,-1.09125e-08,1.03733,0.000453768,-1.91682e-07,1.48241e-08,1.03778,0.000453429,-1.4721e-07,-4.83838e-08,1.03823,0.00045299,-2.92361e-07,5.95019e-08,1.03869,0.000452584,-1.13856e-07,-7.04146e-08,1.03914,0.000452145,-3.25099e-07,1.02947e-07,1.03959,0.000451803,-1.62583e-08,-1.02955e-07,1.04004,0.000451462,-3.25123e-07,7.04544e-08,1.04049,0.000451023,-1.1376e-07,-5.96534e-08,1.04094,0.000450616,-2.9272e-07,4.89499e-08,1.04139,0.000450178,-1.45871e-07,-1.69369e-08,1.04184,0.000449835,-1.96681e-07,1.87977e-08,1.04229,0.000449498,-1.40288e-07,-5.82539e-08,1.04274,0.000449043,-3.1505e-07,9.50087e-08,1.04319,0.000448698,-3.00238e-08,-8.33623e-08,1.04364,0.000448388,-2.80111e-07,2.20363e-11,1.04409,0.000447828,-2.80045e-07,8.32742e-08,1.04454,0.000447517,-3.02221e-08,-9.47002e-08,1.04498,0.000447173,-3.14323e-07,5.7108e-08,1.04543,0.000446716,-1.42999e-07,-1.45225e-08,1.04588,0.000446386,-1.86566e-07,9.82022e-10,1.04632,0.000446016,-1.8362e-07,1.05944e-08,1.04677,0.00044568,-1.51837e-07,-4.33597e-08,1.04721,0.000445247,-2.81916e-07,4.36352e-08,1.04766,0.000444814,-1.51011e-07,-1.19717e-08,1.0481,0.000444476,-1.86926e-07,4.25158e-09,1.04855,0.000444115,-1.74171e-07,-5.03461e-09,1.04899,0.000443751,-1.89275e-07,1.58868e-08,1.04944,0.00044342,-1.41614e-07,-5.85127e-08,1.04988,0.000442961,-3.17152e-07,9.89548e-08,1.05032,0.000442624,-2.0288e-08,-9.88878e-08,1.05076,0.000442287,-3.16951e-07,5.81779e-08,1.05121,0.000441827,-1.42418e-07,-1.46144e-08,1.05165,0.000441499,-1.86261e-07,2.79892e-10,1.05209,0.000441127,-1.85421e-07,1.34949e-08,1.05253,0.000440797,-1.44937e-07,-5.42594e-08,1.05297,0.000440344,-3.07715e-07,8.43335e-08,1.05341,0.000439982,-5.47146e-08,-4.46558e-08,1.05385,0.000439738,-1.88682e-07,-2.49193e-08,1.05429,0.000439286,-2.6344e-07,2.5124e-08,1.05473,0.000438835,-1.88068e-07,4.36328e-08,1.05517,0.000438589,-5.71699e-08,-8.04459e-08,1.05561,0.000438234,-2.98508e-07,3.97324e-08,1.05605,0.000437756,-1.79311e-07,4.07258e-08,1.05648,0.000437519,-5.71332e-08,-8.34263e-08,1.05692,0.000437155,-3.07412e-07,5.45608e-08,1.05736,0.000436704,-1.4373e-07,-1.56078e-08,1.05779,0.000436369,-1.90553e-07,7.87043e-09,1.05823,0.000436012,-1.66942e-07,-1.58739e-08,1.05867,0.00043563,-2.14563e-07,5.56251e-08,1.0591,0.000435368,-4.76881e-08,-8.74172e-08,1.05954,0.000435011,-3.0994e-07,5.56251e-08,1.05997,0.000434558,-1.43064e-07,-1.58739e-08,1.06041,0.000434224,-1.90686e-07,7.87042e-09,1.06084,0.000433866,-1.67075e-07,-1.56078e-08,1.06127,0.000433485,-2.13898e-07,5.45609e-08,1.06171,0.000433221,-5.02157e-08,-8.34263e-08,1.06214,0.00043287,-3.00495e-07,4.07258e-08,1.06257,0.000432391,-1.78317e-07,3.97325e-08,1.063,0.000432154,-5.91198e-08,-8.04464e-08,1.06344,0.000431794,-3.00459e-07,4.36347e-08,1.06387,0.000431324,-1.69555e-07,2.5117e-08,1.0643,0.000431061,-9.42041e-08,-2.48934e-08,1.06473,0.000430798,-1.68884e-07,-4.47527e-08,1.06516,0.000430326,-3.03142e-07,8.46951e-08,1.06559,0.000429973,-4.90573e-08,-5.56089e-08,1.06602,0.000429708,-2.15884e-07,1.85314e-08,1.06645,0.000429332,-1.6029e-07,-1.85166e-08,1.06688,0.000428956,-2.1584e-07,5.5535e-08,1.06731,0.000428691,-4.92347e-08,-8.44142e-08,1.06774,0.000428339,-3.02477e-07,4.37032e-08,1.06816,0.000427865,-1.71368e-07,2.88107e-08,1.06859,0.000427609,-8.49356e-08,-3.97367e-08,1.06902,0.00042732,-2.04146e-07,1.09267e-08,1.06945,0.000426945,-1.71365e-07,-3.97023e-09,1.06987,0.00042659,-1.83276e-07,4.9542e-09,1.0703,0.000426238,-1.68414e-07,-1.58466e-08,1.07073,0.000425854,-2.15953e-07,5.84321e-08,1.07115,0.000425597,-4.0657e-08,-9.86725e-08,1.07158,0.00042522,-3.36674e-07,9.78392e-08,1.072,0.00042484,-4.31568e-08,-5.42658e-08,1.07243,0.000424591,-2.05954e-07,1.45377e-11,1.07285,0.000424179,-2.0591e-07,5.42076e-08,1.07328,0.00042393,-4.32877e-08,-9.76357e-08,1.0737,0.00042355,-3.36195e-07,9.79165e-08,1.07412,0.000423172,-4.24451e-08,-5.56118e-08,1.07455,0.00042292,-2.09281e-07,5.32143e-09,1.07497,0.000422518,-1.93316e-07,3.43261e-08,1.07539,0.000422234,-9.0338e-08,-2.34165e-08,1.07581,0.000421983,-1.60588e-07,-5.98692e-08,1.07623,0.000421482,-3.40195e-07,1.43684e-07,1.07666,0.000421233,9.08574e-08,-1.5724e-07,1.07708,0.000420943,-3.80862e-07,1.27647e-07,1.0775,0.000420564,2.0791e-09,-1.1493e-07,1.07792,0.000420223,-3.4271e-07,9.36534e-08,1.07834,0.000419819,-6.17499e-08,-2.12653e-08,1.07876,0.000419632,-1.25546e-07,-8.59219e-09,1.07918,0.000419355,-1.51322e-07,-6.35752e-08,1.0796,0.000418861,-3.42048e-07,1.43684e-07,1.08002,0.000418608,8.90034e-08,-1.53532e-07,1.08043,0.000418326,-3.71593e-07,1.12817e-07,1.08085,0.000417921,-3.31414e-08,-5.93184e-08,1.08127,0.000417677,-2.11097e-07,5.24697e-09,1.08169,0.00041727,-1.95356e-07,3.83305e-08,1.0821,0.000416995,-8.03642e-08,-3.93597e-08,1.08252,0.000416716,-1.98443e-07,-1.0094e-10,1.08294,0.000416319,-1.98746e-07,3.97635e-08,1.08335,0.00041604,-7.94557e-08,-3.97437e-08,1.08377,0.000415762,-1.98687e-07,1.94215e-12,1.08419,0.000415365,-1.98681e-07,3.97359e-08,1.0846,0.000415087,-7.94732e-08,-3.97362e-08,1.08502,0.000414809,-1.98682e-07,-4.31063e-13,1.08543,0.000414411,-1.98683e-07,3.97379e-08,1.08584,0.000414133,-7.94694e-08,-3.97418e-08,1.08626,0.000413855,-1.98695e-07,2.00563e-11,1.08667,0.000413458,-1.98635e-07,3.96616e-08,1.08709,0.000413179,-7.965e-08,-3.9457e-08,1.0875,0.000412902,-1.98021e-07,-1.04281e-09,1.08791,0.000412502,-2.01149e-07,4.36282e-08,1.08832,0.000412231,-7.02648e-08,-5.42608e-08,1.08874,0.000411928,-2.33047e-07,5.42057e-08,1.08915,0.000411624,-7.04301e-08,-4.33527e-08,1.08956,0.000411353,-2.00488e-07,-4.07378e-12,1.08997,0.000410952,-2.005e-07,4.3369e-08,1.09038,0.000410681,-7.03934e-08,-5.42627e-08,1.09079,0.000410378,-2.33182e-07,5.44726e-08,1.0912,0.000410075,-6.97637e-08,-4.44186e-08,1.09161,0.000409802,-2.03019e-07,3.99235e-09,1.09202,0.000409408,-1.91042e-07,2.84491e-08,1.09243,0.000409111,-1.05695e-07,1.42043e-09,1.09284,0.000408904,-1.01434e-07,-3.41308e-08,1.09325,0.000408599,-2.03826e-07,1.58937e-08,1.09366,0.000408239,-1.56145e-07,-2.94438e-08,1.09406,0.000407838,-2.44476e-07,1.01881e-07,1.09447,0.000407655,6.11676e-08,-1.39663e-07,1.09488,0.000407358,-3.57822e-07,9.91432e-08,1.09529,0.00040694,-6.03921e-08,-1.84912e-08,1.09569,0.000406764,-1.15866e-07,-2.51785e-08,1.0961,0.000406457,-1.91401e-07,-4.03115e-12,1.09651,0.000406074,-1.91413e-07,2.51947e-08,1.09691,0.000405767,-1.15829e-07,1.84346e-08,1.09732,0.00040559,-6.05254e-08,-9.89332e-08,1.09772,0.000405172,-3.57325e-07,1.3888e-07,1.09813,0.000404874,5.93136e-08,-9.8957e-08,1.09853,0.000404696,-2.37557e-07,1.853e-08,1.09894,0.000404277,-1.81968e-07,2.48372e-08,1.09934,0.000403987,-1.07456e-07,1.33047e-09,1.09975,0.000403776,-1.03465e-07,-3.01591e-08,1.10015,0.000403479,-1.93942e-07,9.66054e-11,1.10055,0.000403091,-1.93652e-07,2.97727e-08,1.10096,0.000402793,-1.04334e-07,2.19273e-11,1.10136,0.000402585,-1.04268e-07,-2.98604e-08,1.10176,0.000402287,-1.93849e-07,2.10325e-10,1.10216,0.0004019,-1.93218e-07,2.90191e-08,1.10256,0.0004016,-1.06161e-07,2.92264e-09,1.10297,0.000401397,-9.73931e-08,-4.07096e-08,1.10337,0.00040108,-2.19522e-07,4.07067e-08,1.10377,0.000400763,-9.7402e-08,-2.90783e-09,1.10417,0.000400559,-1.06126e-07,-2.90754e-08,1.10457,0.00040026,-1.93352e-07,9.00021e-14,1.10497,0.000399873,-1.93351e-07,2.9075e-08,1.10537,0.000399574,-1.06126e-07,2.90902e-09,1.10577,0.00039937,-9.73992e-08,-4.07111e-08,1.10617,0.000399053,-2.19533e-07,4.07262e-08,1.10657,0.000398736,-9.73541e-08,-2.98424e-09,1.10697,0.000398533,-1.06307e-07,-2.87892e-08,1.10736,0.000398234,-1.92674e-07,-1.06824e-09,1.10776,0.000397845,-1.95879e-07,3.30622e-08,1.10816,0.000397552,-9.66926e-08,-1.19712e-08,1.10856,0.000397323,-1.32606e-07,1.48225e-08,1.10895,0.000397102,-8.81387e-08,-4.73187e-08,1.10935,0.000396784,-2.30095e-07,5.52429e-08,1.10975,0.00039649,-6.4366e-08,-5.44437e-08,1.11014,0.000396198,-2.27697e-07,4.33226e-08,1.11054,0.000395872,-9.77293e-08,3.62656e-10,1.11094,0.000395678,-9.66414e-08,-4.47732e-08,1.11133,0.00039535,-2.30961e-07,5.95208e-08,1.11173,0.000395067,-5.23985e-08,-7.41008e-08,1.11212,0.00039474,-2.74701e-07,1.17673e-07,1.11252,0.000394543,7.83181e-08,-1.58172e-07,1.11291,0.000394225,-3.96199e-07,1.57389e-07,1.1133,0.000393905,7.59679e-08,-1.13756e-07,1.1137,0.000393716,-2.653e-07,5.92165e-08,1.11409,0.000393363,-8.76507e-08,-3.90074e-09,1.11449,0.000393176,-9.93529e-08,-4.36136e-08,1.11488,0.000392846,-2.30194e-07,5.91457e-08,1.11527,0.000392563,-5.27564e-08,-7.376e-08,1.11566,0.000392237,-2.74037e-07,1.16685e-07,1.11606,0.000392039,7.60189e-08,-1.54562e-07,1.11645,0.000391727,-3.87667e-07,1.43935e-07,1.11684,0.000391384,4.4137e-08,-6.35487e-08,1.11723,0.000391281,-1.46509e-07,-8.94896e-09,1.11762,0.000390961,-1.73356e-07,-1.98647e-08,1.11801,0.000390555,-2.3295e-07,8.8408e-08,1.1184,0.000390354,3.22736e-08,-9.53486e-08,1.11879,0.000390133,-2.53772e-07,5.45677e-08,1.11918,0.000389789,-9.0069e-08,-3.71296e-09,1.11957,0.000389598,-1.01208e-07,-3.97159e-08,1.11996,0.000389276,-2.20355e-07,4.33671e-08,1.12035,0.000388966,-9.02542e-08,-1.45431e-08,1.12074,0.000388741,-1.33883e-07,1.48052e-08,1.12113,0.000388518,-8.94678e-08,-4.46778e-08,1.12152,0.000388205,-2.23501e-07,4.46966e-08,1.12191,0.000387892,-8.94114e-08,-1.48992e-08,1.12229,0.000387669,-1.34109e-07,1.49003e-08,1.12268,0.000387445,-8.94082e-08,-4.47019e-08,1.12307,0.000387132,-2.23514e-07,4.4698e-08,1.12345,0.000386819,-8.942e-08,-1.48806e-08,1.12384,0.000386596,-1.34062e-07,1.48245e-08,1.12423,0.000386372,-8.95885e-08,-4.44172e-08,1.12461,0.00038606,-2.2284e-07,4.36351e-08,1.125,0.000385745,-9.19348e-08,-1.09139e-08,1.12539,0.000385528,-1.24677e-07,2.05584e-11,1.12577,0.000385279,-1.24615e-07,1.08317e-08,1.12616,0.000385062,-9.21198e-08,-4.33473e-08,1.12654,0.000384748,-2.22162e-07,4.33481e-08,1.12693,0.000384434,-9.21174e-08,-1.08356e-08,1.12731,0.000384217,-1.24624e-07,-5.50907e-12,1.12769,0.000383968,-1.24641e-07,1.08577e-08,1.12808,0.000383751,-9.20679e-08,-4.34252e-08,1.12846,0.000383437,-2.22343e-07,4.36337e-08,1.12884,0.000383123,-9.14422e-08,-1.19005e-08,1.12923,0.000382904,-1.27144e-07,3.96813e-09,1.12961,0.000382662,-1.15239e-07,-3.97207e-09,1.12999,0.000382419,-1.27155e-07,1.19201e-08,1.13038,0.000382201,-9.1395e-08,-4.37085e-08,1.13076,0.000381887,-2.2252e-07,4.37046e-08,1.13114,0.000381573,-9.14068e-08,-1.19005e-08,1.13152,0.000381355,-1.27108e-07,3.89734e-09,1.1319,0.000381112,-1.15416e-07,-3.68887e-09,1.13228,0.00038087,-1.26483e-07,1.08582e-08,1.13266,0.00038065,-9.39083e-08,-3.97438e-08,1.13304,0.000380343,-2.1314e-07,2.89076e-08,1.13342,0.000380003,-1.26417e-07,4.33225e-08,1.1338,0.00037988,3.55072e-09,-8.29883e-08,1.13418,0.000379638,-2.45414e-07,5.0212e-08,1.13456,0.000379298,-9.47781e-08,1.34964e-09,1.13494,0.000379113,-9.07292e-08,-5.56105e-08,1.13532,0.000378764,-2.57561e-07,1.01883e-07,1.1357,0.000378555,4.80889e-08,-1.13504e-07,1.13608,0.000378311,-2.92423e-07,1.13713e-07,1.13646,0.000378067,4.87176e-08,-1.02931e-07,1.13683,0.000377856,-2.60076e-07,5.95923e-08,1.13721,0.000377514,-8.12988e-08,-1.62288e-08,1.13759,0.000377303,-1.29985e-07,5.32278e-09,1.13797,0.000377059,-1.14017e-07,-5.06237e-09,1.13834,0.000376816,-1.29204e-07,1.49267e-08,1.13872,0.000376602,-8.44237e-08,-5.46444e-08,1.1391,0.000376269,-2.48357e-07,8.44417e-08,1.13947,0.000376026,4.96815e-09,-4.47039e-08,1.13985,0.000375902,-1.29143e-07,-2.48355e-08,1.14023,0.000375569,-2.0365e-07,2.48368e-08,1.1406,0.000375236,-1.2914e-07,4.46977e-08,1.14098,0.000375112,4.95341e-09,-8.44184e-08,1.14135,0.000374869,-2.48302e-07,5.45572e-08,1.14173,0.000374536,-8.463e-08,-1.46013e-08,1.1421,0.000374323,-1.28434e-07,3.8478e-09,1.14247,0.000374077,-1.1689e-07,-7.89941e-10,1.14285,0.000373841,-1.1926e-07,-6.88042e-10,1.14322,0.0003736,-1.21324e-07,3.54213e-09,1.1436,0.000373368,-1.10698e-07,-1.34805e-08,1.14397,0.000373107,-1.51139e-07,5.03798e-08,1.14434,0.000372767,0.,0.};$/;"	m	namespace:cv::cuda::device::color_detail
c_LabCbrtTab	opencv2/cudev/functional/detail/color_cvt.hpp	/^    __constant__ float c_LabCbrtTab[] = {0.137931,0.0114066,0.,1.18859e-07,0.149338,0.011407,3.56578e-07,-5.79396e-07,0.160745,0.0114059,-1.38161e-06,2.16892e-06,0.172151,0.0114097,5.12516e-06,-8.0814e-06,0.183558,0.0113957,-1.9119e-05,3.01567e-05,0.194965,0.0114479,7.13509e-05,-0.000112545,0.206371,0.011253,-0.000266285,-0.000106493,0.217252,0.0104009,-0.000585765,7.32149e-05,0.22714,0.00944906,-0.00036612,1.21917e-05,0.236235,0.0087534,-0.000329545,2.01753e-05,0.244679,0.00815483,-0.000269019,1.24435e-05,0.252577,0.00765412,-0.000231689,1.05618e-05,0.26001,0.00722243,-0.000200003,8.26662e-06,0.267041,0.00684723,-0.000175203,6.76746e-06,0.27372,0.00651712,-0.000154901,5.61192e-06,0.280088,0.00622416,-0.000138065,4.67009e-06,0.286179,0.00596204,-0.000124055,3.99012e-06,0.292021,0.0057259,-0.000112085,3.36032e-06,0.297638,0.00551181,-0.000102004,2.95338e-06,0.30305,0.00531666,-9.31435e-05,2.52875e-06,0.308277,0.00513796,-8.55572e-05,2.22022e-06,0.313331,0.00497351,-7.88966e-05,1.97163e-06,0.318228,0.00482163,-7.29817e-05,1.7248e-06,0.322978,0.00468084,-6.78073e-05,1.55998e-06,0.327593,0.0045499,-6.31274e-05,1.36343e-06,0.332081,0.00442774,-5.90371e-05,1.27136e-06,0.336451,0.00431348,-5.5223e-05,1.09111e-06,0.34071,0.00420631,-5.19496e-05,1.0399e-06,0.344866,0.00410553,-4.88299e-05,9.18347e-07,0.348923,0.00401062,-4.60749e-05,8.29942e-07,0.352889,0.00392096,-4.35851e-05,7.98478e-07,0.356767,0.00383619,-4.11896e-05,6.84917e-07,0.360562,0.00375586,-3.91349e-05,6.63976e-07,0.36428,0.00367959,-3.7143e-05,5.93086e-07,0.367923,0.00360708,-3.53637e-05,5.6976e-07,0.371495,0.00353806,-3.36544e-05,4.95533e-07,0.375,0.00347224,-3.21678e-05,4.87951e-07,0.378441,0.00340937,-3.0704e-05,4.4349e-07,0.38182,0.00334929,-2.93735e-05,4.20297e-07,0.38514,0.0032918,-2.81126e-05,3.7872e-07,0.388404,0.00323671,-2.69764e-05,3.596e-07,0.391614,0.00318384,-2.58976e-05,3.5845e-07,0.394772,0.00313312,-2.48223e-05,2.92765e-07,0.397881,0.00308435,-2.3944e-05,3.18232e-07,0.400942,0.00303742,-2.29893e-05,2.82046e-07,0.403957,0.00299229,-2.21432e-05,2.52315e-07,0.406927,0.00294876,-2.13862e-05,2.58416e-07,0.409855,0.00290676,-2.0611e-05,2.33939e-07,0.412741,0.00286624,-1.99092e-05,2.36342e-07,0.415587,0.00282713,-1.92001e-05,1.916e-07,0.418396,0.00278931,-1.86253e-05,2.1915e-07,0.421167,0.00275271,-1.79679e-05,1.83498e-07,0.423901,0.00271733,-1.74174e-05,1.79343e-07,0.426602,0.00268303,-1.68794e-05,1.72013e-07,0.429268,0.00264979,-1.63633e-05,1.75686e-07,0.431901,0.00261759,-1.58363e-05,1.3852e-07,0.434503,0.00258633,-1.54207e-05,1.64304e-07,0.437074,0.00255598,-1.49278e-05,1.28136e-07,0.439616,0.00252651,-1.45434e-05,1.57618e-07,0.442128,0.0024979,-1.40705e-05,1.0566e-07,0.444612,0.00247007,-1.37535e-05,1.34998e-07,0.447068,0.00244297,-1.33485e-05,1.29207e-07,0.449498,0.00241666,-1.29609e-05,9.32347e-08,0.451902,0.00239102,-1.26812e-05,1.23703e-07,0.45428,0.00236603,-1.23101e-05,9.74072e-08,0.456634,0.0023417,-1.20179e-05,1.12518e-07,0.458964,0.002318,-1.16803e-05,7.83681e-08,0.46127,0.00229488,-1.14452e-05,1.10452e-07,0.463554,0.00227232,-1.11139e-05,7.58719e-08,0.465815,0.00225032,-1.08863e-05,9.2699e-08,0.468055,0.00222882,-1.06082e-05,8.97738e-08,0.470273,0.00220788,-1.03388e-05,5.4845e-08,0.47247,0.00218736,-1.01743e-05,1.0808e-07,0.474648,0.00216734,-9.85007e-06,4.9277e-08,0.476805,0.00214779,-9.70224e-06,8.22408e-08,0.478943,0.00212863,-9.45551e-06,6.87942e-08,0.481063,0.00210993,-9.24913e-06,5.98144e-08,0.483163,0.00209161,-9.06969e-06,7.93789e-08,0.485246,0.00207371,-8.83155e-06,3.99032e-08,0.487311,0.00205616,-8.71184e-06,8.88325e-08,0.489358,0.002039,-8.44534e-06,2.20004e-08,0.491389,0.00202218,-8.37934e-06,9.13872e-08,0.493403,0.0020057,-8.10518e-06,2.96829e-08,0.495401,0.00198957,-8.01613e-06,5.81028e-08,0.497382,0.00197372,-7.84183e-06,6.5731e-08,0.499348,0.00195823,-7.64463e-06,3.66019e-08,0.501299,0.00194305,-7.53483e-06,2.62811e-08,0.503234,0.00192806,-7.45598e-06,9.66907e-08,0.505155,0.00191344,-7.16591e-06,4.18928e-09,0.507061,0.00189912,-7.15334e-06,6.53665e-08,0.508953,0.00188501,-6.95724e-06,3.23686e-08,0.510831,0.00187119,-6.86014e-06,4.35774e-08,0.512696,0.0018576,-6.72941e-06,3.17406e-08,0.514547,0.00184424,-6.63418e-06,6.78785e-08,0.516384,0.00183117,-6.43055e-06,-5.23126e-09,0.518209,0.0018183,-6.44624e-06,7.22562e-08,0.520021,0.00180562,-6.22947e-06,1.42292e-08,0.52182,0.0017932,-6.18679e-06,4.9641e-08,0.523607,0.00178098,-6.03786e-06,2.56259e-08,0.525382,0.00176898,-5.96099e-06,2.66696e-08,0.527145,0.00175714,-5.88098e-06,4.65094e-08,0.528897,0.00174552,-5.74145e-06,2.57114e-08,0.530637,0.00173411,-5.66431e-06,2.94588e-08,0.532365,0.00172287,-5.57594e-06,3.52667e-08,0.534082,0.00171182,-5.47014e-06,8.28868e-09,0.535789,0.00170091,-5.44527e-06,5.07871e-08,0.537484,0.00169017,-5.29291e-06,2.69817e-08,0.539169,0.00167967,-5.21197e-06,2.01009e-08,0.540844,0.0016693,-5.15166e-06,1.18237e-08,0.542508,0.00165903,-5.11619e-06,5.18135e-08,0.544162,0.00164896,-4.96075e-06,1.9341e-08,0.545806,0.00163909,-4.90273e-06,-9.96867e-09,0.54744,0.00162926,-4.93263e-06,8.01382e-08,0.549064,0.00161963,-4.69222e-06,-1.25601e-08,0.550679,0.00161021,-4.7299e-06,2.97067e-08,0.552285,0.00160084,-4.64078e-06,1.29426e-08,0.553881,0.0015916,-4.60195e-06,3.77327e-08,0.555468,0.00158251,-4.48875e-06,1.49412e-08,0.557046,0.00157357,-4.44393e-06,2.17118e-08,0.558615,0.00156475,-4.3788e-06,1.74206e-08,0.560176,0.00155605,-4.32653e-06,2.78152e-08,0.561727,0.00154748,-4.24309e-06,-9.47239e-09,0.563271,0.00153896,-4.27151e-06,6.9679e-08,0.564805,0.00153063,-4.06247e-06,-3.08246e-08,0.566332,0.00152241,-4.15494e-06,5.36188e-08,0.56785,0.00151426,-3.99409e-06,-4.83594e-09,0.56936,0.00150626,-4.00859e-06,2.53293e-08,0.570863,0.00149832,-3.93261e-06,2.27286e-08,0.572357,0.00149052,-3.86442e-06,2.96541e-09,0.573844,0.0014828,-3.85552e-06,2.50147e-08,0.575323,0.00147516,-3.78048e-06,1.61842e-08,0.576794,0.00146765,-3.73193e-06,2.94582e-08,0.578258,0.00146028,-3.64355e-06,-1.48076e-08,0.579715,0.00145295,-3.68798e-06,2.97724e-08,0.581164,0.00144566,-3.59866e-06,1.49272e-08,0.582606,0.00143851,-3.55388e-06,2.97285e-08,0.584041,0.00143149,-3.46469e-06,-1.46323e-08,0.585469,0.00142451,-3.50859e-06,2.88004e-08,0.58689,0.00141758,-3.42219e-06,1.864e-08,0.588304,0.00141079,-3.36627e-06,1.58482e-08,0.589712,0.00140411,-3.31872e-06,-2.24279e-08,0.591112,0.00139741,-3.38601e-06,7.38639e-08,0.592507,0.00139085,-3.16441e-06,-3.46088e-08,0.593894,0.00138442,-3.26824e-06,4.96675e-09,0.595275,0.0013779,-3.25334e-06,7.4346e-08,0.59665,0.00137162,-3.0303e-06,-6.39319e-08,0.598019,0.00136536,-3.2221e-06,6.21725e-08,0.599381,0.00135911,-3.03558e-06,-5.94423e-09,0.600737,0.00135302,-3.05341e-06,2.12091e-08,0.602087,0.00134697,-2.98979e-06,-1.92876e-08,0.603431,0.00134094,-3.04765e-06,5.5941e-08,0.604769,0.00133501,-2.87983e-06,-2.56622e-08,0.606101,0.00132917,-2.95681e-06,4.67078e-08,0.607427,0.0013234,-2.81669e-06,-4.19592e-08,0.608748,0.00131764,-2.94257e-06,6.15243e-08,0.610062,0.00131194,-2.75799e-06,-2.53244e-08,0.611372,0.00130635,-2.83397e-06,3.97739e-08,0.612675,0.0013008,-2.71465e-06,-1.45618e-08,0.613973,0.00129533,-2.75833e-06,1.84733e-08,0.615266,0.00128986,-2.70291e-06,2.73606e-10,0.616553,0.00128446,-2.70209e-06,4.00367e-08,0.617835,0.00127918,-2.58198e-06,-4.12113e-08,0.619111,0.00127389,-2.70561e-06,6.52039e-08,0.620383,0.00126867,-2.51e-06,-4.07901e-08,0.621649,0.00126353,-2.63237e-06,3.83516e-08,0.62291,0.00125838,-2.51732e-06,6.59315e-09,0.624166,0.00125337,-2.49754e-06,-5.11939e-09,0.625416,0.00124836,-2.5129e-06,1.38846e-08,0.626662,0.00124337,-2.47124e-06,9.18514e-09,0.627903,0.00123846,-2.44369e-06,8.97952e-09,0.629139,0.0012336,-2.41675e-06,1.45012e-08,0.63037,0.00122881,-2.37325e-06,-7.37949e-09,0.631597,0.00122404,-2.39538e-06,1.50169e-08,0.632818,0.00121929,-2.35033e-06,6.91648e-09,0.634035,0.00121461,-2.32958e-06,1.69219e-08,0.635248,0.00121,-2.27882e-06,-1.49997e-08,0.636455,0.0012054,-2.32382e-06,4.30769e-08,0.637659,0.00120088,-2.19459e-06,-3.80986e-08,0.638857,0.00119638,-2.30888e-06,4.97134e-08,0.640051,0.00119191,-2.15974e-06,-4.15463e-08,0.641241,0.00118747,-2.28438e-06,5.68667e-08,0.642426,0.00118307,-2.11378e-06,-7.10641e-09,0.643607,0.00117882,-2.1351e-06,-2.8441e-08,0.644784,0.00117446,-2.22042e-06,6.12658e-08,0.645956,0.00117021,-2.03663e-06,-3.78083e-08,0.647124,0.00116602,-2.15005e-06,3.03627e-08,0.648288,0.00116181,-2.05896e-06,-2.40379e-08,0.649448,0.00115762,-2.13108e-06,6.57887e-08,0.650603,0.00115356,-1.93371e-06,-6.03028e-08,0.651755,0.00114951,-2.11462e-06,5.62134e-08,0.652902,0.00114545,-1.94598e-06,-4.53417e-08,0.654046,0.00114142,-2.082e-06,6.55489e-08,0.655185,0.00113745,-1.88536e-06,-3.80396e-08,0.656321,0.00113357,-1.99948e-06,2.70049e-08,0.657452,0.00112965,-1.91846e-06,-1.03755e-08,0.65858,0.00112578,-1.94959e-06,1.44973e-08,0.659704,0.00112192,-1.9061e-06,1.1991e-08,0.660824,0.00111815,-1.87012e-06,-2.85634e-09,0.66194,0.0011144,-1.87869e-06,-5.65782e-10,0.663053,0.00111064,-1.88039e-06,5.11947e-09,0.664162,0.0011069,-1.86503e-06,3.96924e-08,0.665267,0.00110328,-1.74595e-06,-4.46795e-08,0.666368,0.00109966,-1.87999e-06,1.98161e-08,0.667466,0.00109596,-1.82054e-06,2.502e-08,0.66856,0.00109239,-1.74548e-06,-6.86593e-10,0.669651,0.0010889,-1.74754e-06,-2.22739e-08,0.670738,0.00108534,-1.81437e-06,3.01776e-08,0.671821,0.0010818,-1.72383e-06,2.07732e-08,0.672902,0.00107841,-1.66151e-06,-5.36658e-08,0.673978,0.00107493,-1.82251e-06,7.46802e-08,0.675051,0.00107151,-1.59847e-06,-6.62411e-08,0.676121,0.00106811,-1.79719e-06,7.10748e-08,0.677188,0.00106473,-1.58397e-06,-3.92441e-08,0.678251,0.00106145,-1.7017e-06,2.62973e-08,0.679311,0.00105812,-1.62281e-06,-6.34035e-09,0.680367,0.00105486,-1.64183e-06,-9.36249e-10,0.68142,0.00105157,-1.64464e-06,1.00854e-08,0.68247,0.00104831,-1.61438e-06,2.01995e-08,0.683517,0.00104514,-1.55378e-06,-3.1279e-08,0.68456,0.00104194,-1.64762e-06,4.53114e-08,0.685601,0.00103878,-1.51169e-06,-3.07573e-08,0.686638,0.00103567,-1.60396e-06,1.81133e-08,0.687672,0.00103251,-1.54962e-06,1.79085e-08,0.688703,0.00102947,-1.49589e-06,-3.01428e-08,0.689731,0.00102639,-1.58632e-06,4.30583e-08,0.690756,0.00102334,-1.45715e-06,-2.28814e-08,0.691778,0.00102036,-1.52579e-06,-1.11373e-08,0.692797,0.00101727,-1.5592e-06,6.74305e-08,0.693812,0.00101436,-1.35691e-06,-7.97709e-08,0.694825,0.0010114,-1.59622e-06,7.28391e-08,0.695835,0.00100843,-1.37771e-06,-3.27715e-08,0.696842,0.00100558,-1.47602e-06,-1.35807e-09,0.697846,0.00100262,-1.48009e-06,3.82037e-08,0.698847,0.000999775,-1.36548e-06,-3.22474e-08,0.699846,0.000996948,-1.46223e-06,3.11809e-08,0.700841,0.000994117,-1.36868e-06,-3.28714e-08,0.701834,0.000991281,-1.4673e-06,4.07001e-08,0.702824,0.000988468,-1.3452e-06,-1.07197e-08,0.703811,0.000985746,-1.37736e-06,2.17866e-09,0.704795,0.000982998,-1.37082e-06,2.00521e-09,0.705777,0.000980262,-1.3648e-06,-1.01996e-08,0.706756,0.000977502,-1.3954e-06,3.87931e-08,0.707732,0.000974827,-1.27902e-06,-2.57632e-08,0.708706,0.000972192,-1.35631e-06,4.65513e-09,0.709676,0.000969493,-1.34235e-06,7.14257e-09,0.710645,0.00096683,-1.32092e-06,2.63791e-08,0.71161,0.000964267,-1.24178e-06,-5.30543e-08,0.712573,0.000961625,-1.40095e-06,6.66289e-08,0.713533,0.000959023,-1.20106e-06,-3.46474e-08,0.714491,0.000956517,-1.305e-06,1.23559e-08,0.715446,0.000953944,-1.26793e-06,-1.47763e-08,0.716399,0.000951364,-1.31226e-06,4.67494e-08,0.717349,0.000948879,-1.17201e-06,-5.3012e-08,0.718297,0.000946376,-1.33105e-06,4.60894e-08,0.719242,0.000943852,-1.19278e-06,-1.21366e-08,0.720185,0.00094143,-1.22919e-06,2.45673e-09,0.721125,0.000938979,-1.22182e-06,2.30966e-09,0.722063,0.000936543,-1.21489e-06,-1.16954e-08,0.722998,0.000934078,-1.24998e-06,4.44718e-08,0.723931,0.000931711,-1.11656e-06,-4.69823e-08,0.724861,0.000929337,-1.25751e-06,2.4248e-08,0.725789,0.000926895,-1.18477e-06,9.5949e-09,0.726715,0.000924554,-1.15598e-06,-3.02286e-09,0.727638,0.000922233,-1.16505e-06,2.49649e-09,0.72856,0.00091991,-1.15756e-06,-6.96321e-09,0.729478,0.000917575,-1.17845e-06,2.53564e-08,0.730395,0.000915294,-1.10238e-06,-3.48578e-08,0.731309,0.000912984,-1.20695e-06,5.44704e-08,0.732221,0.000910734,-1.04354e-06,-6.38144e-08,0.73313,0.000908455,-1.23499e-06,8.15781e-08,0.734038,0.00090623,-9.90253e-07,-8.3684e-08,0.734943,0.000903999,-1.2413e-06,7.43441e-08,0.735846,0.000901739,-1.01827e-06,-3.48787e-08,0.736746,0.000899598,-1.12291e-06,5.56596e-09,0.737645,0.000897369,-1.10621e-06,1.26148e-08,0.738541,0.000895194,-1.06837e-06,3.57935e-09,0.739435,0.000893068,-1.05763e-06,-2.69322e-08,0.740327,0.000890872,-1.13842e-06,4.45448e-08,0.741217,0.000888729,-1.00479e-06,-3.20376e-08,0.742105,0.000886623,-1.1009e-06,2.40011e-08,0.74299,0.000884493,-1.0289e-06,-4.36209e-09,0.743874,0.000882422,-1.04199e-06,-6.55268e-09,0.744755,0.000880319,-1.06164e-06,3.05728e-08,0.745634,0.000878287,-9.69926e-07,-5.61338e-08,0.746512,0.000876179,-1.13833e-06,7.4753e-08,0.747387,0.000874127,-9.14068e-07,-6.40644e-08,0.74826,0.000872106,-1.10626e-06,6.22955e-08,0.749131,0.000870081,-9.19375e-07,-6.59083e-08,0.75,0.000868044,-1.1171e-06,8.21284e-08,0.750867,0.000866056,-8.70714e-07,-8.37915e-08,0.751732,0.000864064,-1.12209e-06,7.42237e-08,0.752595,0.000862042,-8.99418e-07,-3.42894e-08,0.753456,0.00086014,-1.00229e-06,3.32955e-09,0.754315,0.000858146,-9.92297e-07,2.09712e-08,0.755173,0.000856224,-9.29384e-07,-2.76096e-08,0.756028,0.000854282,-1.01221e-06,2.98627e-08,0.756881,0.000852348,-9.22625e-07,-3.22365e-08,0.757733,0.000850406,-1.01933e-06,3.94786e-08,0.758582,0.000848485,-9.00898e-07,-6.46833e-09,0.75943,0.000846664,-9.20303e-07,-1.36052e-08,0.760275,0.000844783,-9.61119e-07,1.28447e-09,0.761119,0.000842864,-9.57266e-07,8.4674e-09,0.761961,0.000840975,-9.31864e-07,2.44506e-08,0.762801,0.000839185,-8.58512e-07,-4.6665e-08,0.763639,0.000837328,-9.98507e-07,4.30001e-08,0.764476,0.00083546,-8.69507e-07,-6.12609e-09,0.76531,0.000833703,-8.87885e-07,-1.84959e-08,0.766143,0.000831871,-9.43372e-07,2.05052e-08,0.766974,0.000830046,-8.81857e-07,-3.92026e-09,0.767803,0.000828271,-8.93618e-07,-4.82426e-09,0.768631,0.000826469,-9.0809e-07,2.32172e-08,0.769456,0.000824722,-8.38439e-07,-2.84401e-08,0.77028,0.00082296,-9.23759e-07,3.09386e-08,0.771102,0.000821205,-8.30943e-07,-3.57099e-08,0.771922,0.000819436,-9.38073e-07,5.22963e-08,0.772741,0.000817717,-7.81184e-07,-5.42658e-08,0.773558,0.000815992,-9.43981e-07,4.55579e-08,0.774373,0.000814241,-8.07308e-07,-8.75656e-09,0.775186,0.0008126,-8.33578e-07,-1.05315e-08,0.775998,0.000810901,-8.65172e-07,-8.72188e-09,0.776808,0.000809145,-8.91338e-07,4.54191e-08,0.777616,0.000807498,-7.5508e-07,-5.37454e-08,0.778423,0.000805827,-9.16317e-07,5.03532e-08,0.779228,0.000804145,-7.65257e-07,-2.84584e-08,0.780031,0.000802529,-8.50632e-07,3.87579e-09,0.780833,0.00080084,-8.39005e-07,1.29552e-08,0.781633,0.0007992,-8.00139e-07,3.90804e-09,0.782432,0.000797612,-7.88415e-07,-2.85874e-08,0.783228,0.000795949,-8.74177e-07,5.0837e-08,0.784023,0.000794353,-7.21666e-07,-5.55513e-08,0.784817,0.000792743,-8.8832e-07,5.21587e-08,0.785609,0.000791123,-7.31844e-07,-3.38744e-08,0.786399,0.000789558,-8.33467e-07,2.37342e-08,0.787188,0.000787962,-7.62264e-07,-1.45775e-09,0.787975,0.000786433,-7.66638e-07,-1.79034e-08,0.788761,0.000784846,-8.20348e-07,1.34665e-08,0.789545,0.000783246,-7.79948e-07,2.3642e-08,0.790327,0.000781757,-7.09022e-07,-4.84297e-08,0.791108,0.000780194,-8.54311e-07,5.08674e-08,0.791888,0.000778638,-7.01709e-07,-3.58303e-08,0.792666,0.000777127,-8.092e-07,3.28493e-08,0.793442,0.000775607,-7.10652e-07,-3.59624e-08,0.794217,0.000774078,-8.1854e-07,5.13959e-08,0.79499,0.000772595,-6.64352e-07,-5.04121e-08,0.795762,0.000771115,-8.15588e-07,3.10431e-08,0.796532,0.000769577,-7.22459e-07,-1.41557e-08,0.797301,0.00076809,-7.64926e-07,2.55795e-08,0.798069,0.000766636,-6.88187e-07,-2.85578e-08,0.798835,0.000765174,-7.73861e-07,2.90472e-08,0.799599,0.000763714,-6.86719e-07,-2.80262e-08,0.800362,0.000762256,-7.70798e-07,2.34531e-08,0.801123,0.000760785,-7.00438e-07,-6.18144e-09,0.801884,0.000759366,-7.18983e-07,1.27263e-09,0.802642,0.000757931,-7.15165e-07,1.09101e-09,0.803399,0.000756504,-7.11892e-07,-5.63675e-09,0.804155,0.000755064,-7.28802e-07,2.14559e-08,0.80491,0.00075367,-6.64434e-07,-2.05821e-08,0.805663,0.00075228,-7.26181e-07,1.26812e-09,0.806414,0.000750831,-7.22377e-07,1.55097e-08,0.807164,0.000749433,-6.75848e-07,-3.70216e-09,0.807913,0.00074807,-6.86954e-07,-7.0105e-10,0.80866,0.000746694,-6.89057e-07,6.5063e-09,0.809406,0.000745336,-6.69538e-07,-2.53242e-08,0.810151,0.000743921,-7.45511e-07,3.51858e-08,0.810894,0.000742535,-6.39953e-07,3.79034e-09,0.811636,0.000741267,-6.28582e-07,-5.03471e-08,0.812377,0.000739858,-7.79624e-07,7.83886e-08,0.813116,0.000738534,-5.44458e-07,-8.43935e-08,0.813854,0.000737192,-7.97638e-07,8.03714e-08,0.81459,0.000735838,-5.56524e-07,-5.82784e-08,0.815325,0.00073455,-7.31359e-07,3.35329e-08,0.816059,0.000733188,-6.3076e-07,-1.62486e-08,0.816792,0.000731878,-6.79506e-07,3.14614e-08,0.817523,0.000730613,-5.85122e-07,-4.99925e-08,0.818253,0.000729293,-7.35099e-07,4.92994e-08,0.818982,0.000727971,-5.87201e-07,-2.79959e-08,0.819709,0.000726712,-6.71189e-07,3.07959e-09,0.820435,0.000725379,-6.6195e-07,1.56777e-08,0.82116,0.000724102,-6.14917e-07,-6.18564e-09,0.821883,0.000722854,-6.33474e-07,9.06488e-09,0.822606,0.000721614,-6.06279e-07,-3.00739e-08,0.823327,0.000720311,-6.96501e-07,5.16262e-08,0.824046,0.000719073,-5.41623e-07,-5.72214e-08,0.824765,0.000717818,-7.13287e-07,5.80503e-08,0.825482,0.000716566,-5.39136e-07,-5.57703e-08,0.826198,0.00071532,-7.06447e-07,4.58215e-08,0.826912,0.000714045,-5.68983e-07,-8.30636e-09,0.827626,0.000712882,-5.93902e-07,-1.25961e-08,0.828338,0.000711656,-6.3169e-07,-9.13985e-10,0.829049,0.00071039,-6.34432e-07,1.62519e-08,0.829759,0.00070917,-5.85676e-07,-4.48904e-09,0.830468,0.000707985,-5.99143e-07,1.70418e-09,0.831175,0.000706792,-5.9403e-07,-2.32768e-09,0.831881,0.000705597,-6.01014e-07,7.60648e-09,0.832586,0.000704418,-5.78194e-07,-2.80982e-08,0.83329,0.000703177,-6.62489e-07,4.51817e-08,0.833993,0.000701988,-5.26944e-07,-3.34192e-08,0.834694,0.000700834,-6.27201e-07,2.88904e-08,0.835394,0.000699666,-5.4053e-07,-2.25378e-08,0.836093,0.000698517,-6.08143e-07,1.65589e-09,0.836791,0.000697306,-6.03176e-07,1.59142e-08,0.837488,0.000696147,-5.55433e-07,-5.70801e-09,0.838184,0.000695019,-5.72557e-07,6.91792e-09,0.838878,0.000693895,-5.51803e-07,-2.19637e-08,0.839571,0.000692725,-6.17694e-07,2.13321e-08,0.840263,0.000691554,-5.53698e-07,-3.75996e-09,0.840954,0.000690435,-5.64978e-07,-6.29219e-09,0.841644,0.000689287,-5.83855e-07,2.89287e-08,0.842333,0.000688206,-4.97068e-07,-4.98181e-08,0.843021,0.000687062,-6.46523e-07,5.11344e-08,0.843707,0.000685922,-4.9312e-07,-3.55102e-08,0.844393,0.00068483,-5.9965e-07,3.13019e-08,0.845077,0.000683724,-5.05745e-07,-3.00925e-08,0.84576,0.000682622,-5.96022e-07,2.94636e-08,0.846442,0.000681519,-5.07631e-07,-2.81572e-08,0.847123,0.000680419,-5.92103e-07,2.35606e-08,0.847803,0.000679306,-5.21421e-07,-6.48045e-09,0.848482,0.000678243,-5.40863e-07,2.36124e-09,0.849159,0.000677169,-5.33779e-07,-2.96461e-09,0.849836,0.000676092,-5.42673e-07,9.49728e-09,0.850512,0.000675035,-5.14181e-07,-3.50245e-08,0.851186,0.000673902,-6.19254e-07,7.09959e-08,0.851859,0.000672876,-4.06267e-07,-7.01453e-08,0.852532,0.000671853,-6.16703e-07,3.07714e-08,0.853203,0.000670712,-5.24388e-07,6.66423e-09,0.853873,0.000669684,-5.04396e-07,2.17629e-09,0.854542,0.000668681,-4.97867e-07,-1.53693e-08,0.855211,0.000667639,-5.43975e-07,-3.03752e-10,0.855878,0.000666551,-5.44886e-07,1.65844e-08,0.856544,0.000665511,-4.95133e-07,-6.42907e-09,0.857209,0.000664501,-5.1442e-07,9.13195e-09,0.857873,0.0006635,-4.87024e-07,-3.00987e-08,0.858536,0.000662435,-5.7732e-07,5.16584e-08,0.859198,0.000661436,-4.22345e-07,-5.73255e-08,0.859859,0.000660419,-5.94322e-07,5.84343e-08,0.860518,0.000659406,-4.19019e-07,-5.72022e-08,0.861177,0.000658396,-5.90626e-07,5.11653e-08,0.861835,0.000657368,-4.3713e-07,-2.82495e-08,0.862492,0.000656409,-5.21878e-07,2.22788e-09,0.863148,0.000655372,-5.15195e-07,1.9338e-08,0.863803,0.0006544,-4.5718e-07,-1.99754e-08,0.864457,0.000653425,-5.17107e-07,9.59024e-10,0.86511,0.000652394,-5.1423e-07,1.61393e-08,0.865762,0.000651414,-4.65812e-07,-5.91149e-09,0.866413,0.000650465,-4.83546e-07,7.50665e-09,0.867063,0.00064952,-4.61026e-07,-2.4115e-08,0.867712,0.000648526,-5.33371e-07,2.93486e-08,0.86836,0.000647547,-4.45325e-07,-3.36748e-08,0.869007,0.000646555,-5.4635e-07,4.57461e-08,0.869653,0.0006456,-4.09112e-07,-3.01002e-08,0.870298,0.000644691,-4.99412e-07,1.50501e-08,0.870942,0.000643738,-4.54262e-07,-3.01002e-08,0.871585,0.000642739,-5.44563e-07,4.57461e-08,0.872228,0.000641787,-4.07324e-07,-3.36748e-08,0.872869,0.000640871,-5.08349e-07,2.93486e-08,0.873509,0.000639943,-4.20303e-07,-2.4115e-08,0.874149,0.00063903,-4.92648e-07,7.50655e-09,0.874787,0.000638067,-4.70128e-07,-5.91126e-09,0.875425,0.000637109,-4.87862e-07,1.61385e-08,0.876062,0.000636182,-4.39447e-07,9.61961e-10,0.876697,0.000635306,-4.36561e-07,-1.99863e-08,0.877332,0.000634373,-4.9652e-07,1.93785e-08,0.877966,0.000633438,-4.38384e-07,2.07697e-09,0.878599,0.000632567,-4.32153e-07,-2.76864e-08,0.879231,0.00063162,-5.15212e-07,4.90641e-08,0.879862,0.000630737,-3.6802e-07,-4.93606e-08,0.880493,0.000629852,-5.16102e-07,2.9169e-08,0.881122,0.000628908,-4.28595e-07,-7.71083e-09,0.881751,0.000628027,-4.51727e-07,1.6744e-09,0.882378,0.000627129,-4.46704e-07,1.01317e-09,0.883005,0.000626239,-4.43665e-07,-5.72703e-09,0.883631,0.000625334,-4.60846e-07,2.1895e-08,0.884255,0.000624478,-3.95161e-07,-2.22481e-08,0.88488,0.000623621,-4.61905e-07,7.4928e-09,0.885503,0.00062272,-4.39427e-07,-7.72306e-09,0.886125,0.000621818,-4.62596e-07,2.33995e-08,0.886746,0.000620963,-3.92398e-07,-2.62704e-08,0.887367,0.000620099,-4.71209e-07,2.20775e-08,0.887987,0.000619223,-4.04976e-07,-2.43496e-09,0.888605,0.000618406,-4.12281e-07,-1.23377e-08,0.889223,0.000617544,-4.49294e-07,-7.81876e-09,0.88984,0.000616622,-4.72751e-07,4.36128e-08,0.890457,0.000615807,-3.41912e-07,-4.7423e-08,0.891072,0.000614981,-4.84181e-07,2.68698e-08,0.891687,0.000614093,-4.03572e-07,-4.51384e-10,0.8923,0.000613285,-4.04926e-07,-2.50643e-08,0.892913,0.0006124,-4.80119e-07,4.11038e-08,0.893525,0.000611563,-3.56808e-07,-2.01414e-08,0.894136,0.000610789,-4.17232e-07,-2.01426e-08,0.894747,0.000609894,-4.7766e-07,4.11073e-08,0.895356,0.000609062,-3.54338e-07,-2.50773e-08,0.895965,0.000608278,-4.2957e-07,-4.02954e-10,0.896573,0.000607418,-4.30779e-07,2.66891e-08,0.89718,0.000606636,-3.50711e-07,-4.67489e-08,0.897786,0.000605795,-4.90958e-07,4.10972e-08,0.898391,0.000604936,-3.67666e-07,1.56948e-09,0.898996,0.000604205,-3.62958e-07,-4.73751e-08,0.8996,0.000603337,-5.05083e-07,6.87214e-08,0.900202,0.000602533,-2.98919e-07,-4.86966e-08,0.900805,0.000601789,-4.45009e-07,6.85589e-09,0.901406,0.00060092,-4.24441e-07,2.1273e-08,0.902007,0.000600135,-3.60622e-07,-3.23434e-08,0.902606,0.000599317,-4.57652e-07,4.84959e-08,0.903205,0.000598547,-3.12164e-07,-4.24309e-08,0.903803,0.000597795,-4.39457e-07,2.01844e-09,0.904401,0.000596922,-4.33402e-07,3.43571e-08,0.904997,0.000596159,-3.30331e-07,-2.02374e-08,0.905593,0.000595437,-3.91043e-07,-1.30123e-08,0.906188,0.000594616,-4.3008e-07,1.26819e-08,0.906782,0.000593794,-3.92034e-07,2.18894e-08,0.907376,0.000593076,-3.26366e-07,-4.06349e-08,0.907968,0.000592301,-4.4827e-07,2.1441e-08,0.90856,0.000591469,-3.83947e-07,1.44754e-08,0.909151,0.000590744,-3.40521e-07,-1.97379e-08,0.909742,0.000590004,-3.99735e-07,4.87161e-09,0.910331,0.000589219,-3.8512e-07,2.51532e-10,0.91092,0.00058845,-3.84366e-07,-5.87776e-09,0.911508,0.000587663,-4.01999e-07,2.32595e-08,0.912096,0.000586929,-3.3222e-07,-2.75554e-08,0.912682,0.000586182,-4.14887e-07,2.73573e-08,0.913268,0.000585434,-3.32815e-07,-2.22692e-08,0.913853,0.000584702,-3.99622e-07,2.11486e-09,0.914437,0.000583909,-3.93278e-07,1.38098e-08,0.915021,0.000583164,-3.51848e-07,2.25042e-09,0.915604,0.000582467,-3.45097e-07,-2.28115e-08,0.916186,0.000581708,-4.13531e-07,2.93911e-08,0.916767,0.000580969,-3.25358e-07,-3.51481e-08,0.917348,0.000580213,-4.30803e-07,5.15967e-08,0.917928,0.000579506,-2.76012e-07,-5.20296e-08,0.918507,0.000578798,-4.32101e-07,3.73124e-08,0.919085,0.000578046,-3.20164e-07,-3.76154e-08,0.919663,0.000577293,-4.3301e-07,5.35447e-08,0.92024,0.000576587,-2.72376e-07,-5.7354e-08,0.920816,0.000575871,-4.44438e-07,5.66621e-08,0.921391,0.000575152,-2.74452e-07,-5.00851e-08,0.921966,0.000574453,-4.24707e-07,2.4469e-08,0.92254,0.000573677,-3.513e-07,1.18138e-08,0.923114,0.000573009,-3.15859e-07,-1.21195e-08,0.923686,0.000572341,-3.52217e-07,-2.29403e-08,0.924258,0.000571568,-4.21038e-07,4.4276e-08,0.924829,0.000570859,-2.8821e-07,-3.49546e-08,0.9254,0.000570178,-3.93074e-07,3.59377e-08,0.92597,0.000569499,-2.85261e-07,-4.91915e-08,0.926539,0.000568781,-4.32835e-07,4.16189e-08,0.927107,0.00056804,-3.07979e-07,1.92523e-09,0.927675,0.00056743,-3.02203e-07,-4.93198e-08,0.928242,0.000566678,-4.50162e-07,7.61447e-08,0.928809,0.000566006,-2.21728e-07,-7.6445e-08,0.929374,0.000565333,-4.51063e-07,5.08216e-08,0.929939,0.000564583,-2.98599e-07,-7.63212e-09,0.930503,0.000563963,-3.21495e-07,-2.02931e-08,0.931067,0.000563259,-3.82374e-07,2.92001e-08,0.93163,0.000562582,-2.94774e-07,-3.69025e-08,0.932192,0.000561882,-4.05482e-07,5.88053e-08,0.932754,0.000561247,-2.29066e-07,-7.91094e-08,0.933315,0.000560552,-4.66394e-07,7.88184e-08,0.933875,0.000559856,-2.29939e-07,-5.73501e-08,0.934434,0.000559224,-4.01989e-07,3.13727e-08,0.934993,0.000558514,-3.07871e-07,-8.53611e-09,0.935551,0.000557873,-3.33479e-07,2.77175e-09,0.936109,0.000557214,-3.25164e-07,-2.55091e-09,0.936666,0.000556556,-3.32817e-07,7.43188e-09,0.937222,0.000555913,-3.10521e-07,-2.71766e-08,0.937778,0.00055521,-3.92051e-07,4.167e-08,0.938333,0.000554551,-2.67041e-07,-2.02941e-08,0.938887,0.000553956,-3.27923e-07,-2.00984e-08,0.93944,0.00055324,-3.88218e-07,4.10828e-08,0.939993,0.000552587,-2.6497e-07,-2.50237e-08,0.940546,0.000551982,-3.40041e-07,-5.92583e-10,0.941097,0.0005513,-3.41819e-07,2.7394e-08,0.941648,0.000550698,-2.59637e-07,-4.93788e-08,0.942199,0.000550031,-4.07773e-07,5.09119e-08,0.942748,0.000549368,-2.55038e-07,-3.50595e-08,0.943297,0.000548753,-3.60216e-07,2.97214e-08,0.943846,0.000548122,-2.71052e-07,-2.42215e-08,0.944394,0.000547507,-3.43716e-07,7.55985e-09,0.944941,0.000546842,-3.21037e-07,-6.01796e-09,0.945487,0.000546182,-3.3909e-07,1.65119e-08,0.946033,0.000545553,-2.89555e-07,-4.2498e-10,0.946578,0.000544973,-2.9083e-07,-1.4812e-08,0.947123,0.000544347,-3.35266e-07,6.83068e-11,0.947667,0.000543676,-3.35061e-07,1.45388e-08,0.94821,0.00054305,-2.91444e-07,1.38123e-09,0.948753,0.000542471,-2.87301e-07,-2.00637e-08,0.949295,0.000541836,-3.47492e-07,1.92688e-08,0.949837,0.000541199,-2.89685e-07,2.59298e-09,0.950378,0.000540628,-2.81906e-07,-2.96407e-08,0.950918,0.000539975,-3.70829e-07,5.63652e-08,0.951458,0.000539402,-2.01733e-07,-7.66107e-08,0.951997,0.000538769,-4.31565e-07,7.12638e-08,0.952535,0.00053812,-2.17774e-07,-2.96305e-08,0.953073,0.000537595,-3.06665e-07,-1.23464e-08,0.95361,0.000536945,-3.43704e-07,1.94114e-08,0.954147,0.000536316,-2.8547e-07,-5.69451e-09,0.954683,0.000535728,-3.02554e-07,3.36666e-09,0.955219,0.000535133,-2.92454e-07,-7.77208e-09,0.955753,0.000534525,-3.1577e-07,2.77216e-08,0.956288,0.000533976,-2.32605e-07,-4.35097e-08,0.956821,0.00053338,-3.63134e-07,2.7108e-08,0.957354,0.000532735,-2.8181e-07,-5.31772e-09,0.957887,0.000532156,-2.97764e-07,-5.83718e-09,0.958419,0.000531543,-3.15275e-07,2.86664e-08,0.95895,0.000530998,-2.29276e-07,-4.9224e-08,0.959481,0.000530392,-3.76948e-07,4.90201e-08,0.960011,0.000529785,-2.29887e-07,-2.76471e-08,0.96054,0.000529243,-3.12829e-07,1.96385e-09,0.961069,0.000528623,-3.06937e-07,1.97917e-08,0.961598,0.000528068,-2.47562e-07,-2.15261e-08,0.962125,0.000527508,-3.1214e-07,6.70795e-09,0.962653,0.000526904,-2.92016e-07,-5.30573e-09,0.963179,0.000526304,-3.07934e-07,1.4515e-08,0.963705,0.000525732,-2.64389e-07,6.85048e-09,0.964231,0.000525224,-2.43837e-07,-4.19169e-08,0.964756,0.00052461,-3.69588e-07,4.1608e-08,0.96528,0.000523996,-2.44764e-07,-5.30598e-09,0.965804,0.000523491,-2.60682e-07,-2.03841e-08,0.966327,0.000522908,-3.21834e-07,2.72378e-08,0.966849,0.000522346,-2.40121e-07,-2.89625e-08,0.967371,0.000521779,-3.27008e-07,2.90075e-08,0.967893,0.000521212,-2.39986e-07,-2.74629e-08,0.968414,0.00052065,-3.22374e-07,2.12396e-08,0.968934,0.000520069,-2.58656e-07,2.10922e-09,0.969454,0.000519558,-2.52328e-07,-2.96765e-08,0.969973,0.000518964,-3.41357e-07,5.6992e-08,0.970492,0.000518452,-1.70382e-07,-7.90821e-08,0.97101,0.000517874,-4.07628e-07,8.05224e-08,0.971528,0.000517301,-1.66061e-07,-6.41937e-08,0.972045,0.000516776,-3.58642e-07,5.70429e-08,0.972561,0.00051623,-1.87513e-07,-4.47686e-08,0.973077,0.00051572,-3.21819e-07,2.82237e-09,0.973593,0.000515085,-3.13352e-07,3.34792e-08,0.974108,0.000514559,-2.12914e-07,-1.75298e-08,0.974622,0.000514081,-2.65503e-07,-2.29648e-08,0.975136,0.000513481,-3.34398e-07,4.97843e-08,0.975649,0.000512961,-1.85045e-07,-5.6963e-08,0.976162,0.00051242,-3.55934e-07,5.88585e-08,0.976674,0.000511885,-1.79359e-07,-5.92616e-08,0.977185,0.000511348,-3.57143e-07,5.89785e-08,0.977696,0.000510811,-1.80208e-07,-5.74433e-08,0.978207,0.000510278,-3.52538e-07,5.15854e-08,0.978717,0.000509728,-1.97781e-07,-2.9689e-08,0.979226,0.000509243,-2.86848e-07,7.56591e-09,0.979735,0.000508692,-2.64151e-07,-5.74649e-10,0.980244,0.000508162,-2.65875e-07,-5.26732e-09,0.980752,0.000507615,-2.81677e-07,2.16439e-08,0.981259,0.000507116,-2.16745e-07,-2.17037e-08,0.981766,0.000506618,-2.81856e-07,5.56636e-09,0.982272,0.000506071,-2.65157e-07,-5.61689e-10,0.982778,0.000505539,-2.66842e-07,-3.31963e-09,0.983283,0.000504995,-2.76801e-07,1.38402e-08,0.983788,0.000504483,-2.3528e-07,7.56339e-09,0.984292,0.000504035,-2.1259e-07,-4.40938e-08,0.984796,0.000503478,-3.44871e-07,4.96026e-08,0.985299,0.000502937,-1.96064e-07,-3.51071e-08,0.985802,0.000502439,-3.01385e-07,3.12212e-08,0.986304,0.00050193,-2.07721e-07,-3.0173e-08,0.986806,0.000501424,-2.9824e-07,2.9866e-08,0.987307,0.000500917,-2.08642e-07,-2.96865e-08,0.987808,0.000500411,-2.97702e-07,2.92753e-08,0.988308,0.000499903,-2.09876e-07,-2.78101e-08,0.988807,0.0004994,-2.93306e-07,2.23604e-08,0.989307,0.000498881,-2.26225e-07,-2.02681e-09,0.989805,0.000498422,-2.32305e-07,-1.42531e-08,0.990303,0.000497915,-2.75065e-07,-5.65232e-10,0.990801,0.000497363,-2.76761e-07,1.65141e-08,0.991298,0.000496859,-2.27218e-07,-5.88639e-09,0.991795,0.000496387,-2.44878e-07,7.0315e-09,0.992291,0.000495918,-2.23783e-07,-2.22396e-08,0.992787,0.000495404,-2.90502e-07,2.23224e-08,0.993282,0.00049489,-2.23535e-07,-7.44543e-09,0.993776,0.000494421,-2.45871e-07,7.45924e-09,0.994271,0.000493951,-2.23493e-07,-2.23915e-08,0.994764,0.000493437,-2.90668e-07,2.25021e-08,0.995257,0.000492923,-2.23161e-07,-8.01218e-09,0.99575,0.000492453,-2.47198e-07,9.54669e-09,0.996242,0.000491987,-2.18558e-07,-3.01746e-08,0.996734,0.000491459,-3.09082e-07,5.1547e-08,0.997225,0.000490996,-1.54441e-07,-5.68039e-08,0.997716,0.000490517,-3.24853e-07,5.64594e-08,0.998206,0.000490036,-1.55474e-07,-4.98245e-08,0.998696,0.000489576,-3.04948e-07,2.36292e-08,0.999186,0.000489037,-2.3406e-07,1.49121e-08,0.999674,0.000488613,-1.89324e-07,-2.3673e-08,1.00016,0.000488164,-2.60343e-07,2.01754e-08,1.00065,0.000487704,-1.99816e-07,-5.70288e-08,1.00114,0.000487133,-3.70903e-07,8.87303e-08,1.00162,0.000486657,-1.04712e-07,-5.94737e-08,1.00211,0.000486269,-2.83133e-07,2.99553e-08,1.0026,0.000485793,-1.93267e-07,-6.03474e-08,1.00308,0.000485225,-3.74309e-07,9.2225e-08,1.00357,0.000484754,-9.76345e-08,-7.0134e-08,1.00405,0.000484348,-3.08036e-07,6.91016e-08,1.00454,0.000483939,-1.00731e-07,-8.70633e-08,1.00502,0.000483476,-3.61921e-07,4.07328e-08,1.0055,0.000482875,-2.39723e-07,4.33413e-08,1.00599,0.000482525,-1.09699e-07,-9.48886e-08,1.00647,0.000482021,-3.94365e-07,9.77947e-08,1.00695,0.000481526,-1.00981e-07,-5.78713e-08,1.00743,0.00048115,-2.74595e-07,1.44814e-08,1.00791,0.000480645,-2.31151e-07,-5.42665e-11,1.00839,0.000480182,-2.31314e-07,-1.42643e-08,1.00887,0.000479677,-2.74106e-07,5.71115e-08,1.00935,0.0004793,-1.02772e-07,-9.49724e-08,1.00983,0.000478809,-3.87689e-07,8.43596e-08,1.01031,0.000478287,-1.3461e-07,-4.04755e-09,1.01079,0.000478006,-1.46753e-07,-6.81694e-08,1.01127,0.000477508,-3.51261e-07,3.83067e-08,1.01174,0.00047692,-2.36341e-07,3.41521e-08,1.01222,0.00047655,-1.33885e-07,-5.57058e-08,1.0127,0.000476115,-3.01002e-07,6.94616e-08,1.01317,0.000475721,-9.26174e-08,-1.02931e-07,1.01365,0.000475227,-4.01412e-07,1.03846e-07,1.01412,0.000474736,-8.98751e-08,-7.40321e-08,1.0146,0.000474334,-3.11971e-07,7.30735e-08,1.01507,0.00047393,-9.27508e-08,-9.90527e-08,1.01554,0.000473447,-3.89909e-07,8.47188e-08,1.01602,0.000472921,-1.35753e-07,-1.40381e-09,1.01649,0.000472645,-1.39964e-07,-7.91035e-08,1.01696,0.000472128,-3.77275e-07,7.93993e-08,1.01744,0.000471612,-1.39077e-07,-7.52607e-11,1.01791,0.000471334,-1.39302e-07,-7.90983e-08,1.01838,0.000470818,-3.76597e-07,7.80499e-08,1.01885,0.000470299,-1.42448e-07,5.31733e-09,1.01932,0.00047003,-1.26496e-07,-9.93193e-08,1.01979,0.000469479,-4.24453e-07,1.53541e-07,1.02026,0.00046909,3.617e-08,-1.57217e-07,1.02073,0.000468691,-4.35482e-07,1.177e-07,1.02119,0.000468173,-8.23808e-08,-7.51659e-08,1.02166,0.000467783,-3.07878e-07,6.37538e-08,1.02213,0.000467358,-1.16617e-07,-6.064e-08,1.0226,0.000466943,-2.98537e-07,5.9597e-08,1.02306,0.000466525,-1.19746e-07,-5.85386e-08,1.02353,0.00046611,-2.95362e-07,5.53482e-08,1.024,0.000465685,-1.29317e-07,-4.36449e-08,1.02446,0.000465296,-2.60252e-07,2.20268e-11,1.02493,0.000464775,-2.60186e-07,4.35568e-08,1.02539,0.000464386,-1.29516e-07,-5.50398e-08,1.02586,0.000463961,-2.94635e-07,5.73932e-08,1.02632,0.000463544,-1.22456e-07,-5.53236e-08,1.02678,0.000463133,-2.88426e-07,4.46921e-08,1.02725,0.000462691,-1.5435e-07,-4.23534e-09,1.02771,0.000462369,-1.67056e-07,-2.77507e-08,1.02817,0.000461952,-2.50308e-07,-3.97101e-09,1.02863,0.000461439,-2.62221e-07,4.36348e-08,1.02909,0.000461046,-1.31317e-07,-5.13589e-08,1.02955,0.000460629,-2.85394e-07,4.25913e-08,1.03001,0.000460186,-1.5762e-07,2.0285e-10,1.03047,0.000459871,-1.57011e-07,-4.34027e-08,1.03093,0.000459427,-2.87219e-07,5.41987e-08,1.03139,0.000459015,-1.24623e-07,-5.4183e-08,1.03185,0.000458604,-2.87172e-07,4.33239e-08,1.03231,0.000458159,-1.572e-07,9.65817e-11,1.03277,0.000457845,-1.56911e-07,-4.37103e-08,1.03323,0.0004574,-2.88041e-07,5.55351e-08,1.03368,0.000456991,-1.21436e-07,-5.9221e-08,1.03414,0.00045657,-2.99099e-07,6.21394e-08,1.0346,0.000456158,-1.1268e-07,-7.01275e-08,1.03505,0.000455723,-3.23063e-07,9.91614e-08,1.03551,0.000455374,-2.55788e-08,-8.80996e-08,1.03596,0.000455058,-2.89878e-07,1.48184e-08,1.03642,0.000454523,-2.45422e-07,2.88258e-08,1.03687,0.000454119,-1.58945e-07,-1.09125e-08,1.03733,0.000453768,-1.91682e-07,1.48241e-08,1.03778,0.000453429,-1.4721e-07,-4.83838e-08,1.03823,0.00045299,-2.92361e-07,5.95019e-08,1.03869,0.000452584,-1.13856e-07,-7.04146e-08,1.03914,0.000452145,-3.25099e-07,1.02947e-07,1.03959,0.000451803,-1.62583e-08,-1.02955e-07,1.04004,0.000451462,-3.25123e-07,7.04544e-08,1.04049,0.000451023,-1.1376e-07,-5.96534e-08,1.04094,0.000450616,-2.9272e-07,4.89499e-08,1.04139,0.000450178,-1.45871e-07,-1.69369e-08,1.04184,0.000449835,-1.96681e-07,1.87977e-08,1.04229,0.000449498,-1.40288e-07,-5.82539e-08,1.04274,0.000449043,-3.1505e-07,9.50087e-08,1.04319,0.000448698,-3.00238e-08,-8.33623e-08,1.04364,0.000448388,-2.80111e-07,2.20363e-11,1.04409,0.000447828,-2.80045e-07,8.32742e-08,1.04454,0.000447517,-3.02221e-08,-9.47002e-08,1.04498,0.000447173,-3.14323e-07,5.7108e-08,1.04543,0.000446716,-1.42999e-07,-1.45225e-08,1.04588,0.000446386,-1.86566e-07,9.82022e-10,1.04632,0.000446016,-1.8362e-07,1.05944e-08,1.04677,0.00044568,-1.51837e-07,-4.33597e-08,1.04721,0.000445247,-2.81916e-07,4.36352e-08,1.04766,0.000444814,-1.51011e-07,-1.19717e-08,1.0481,0.000444476,-1.86926e-07,4.25158e-09,1.04855,0.000444115,-1.74171e-07,-5.03461e-09,1.04899,0.000443751,-1.89275e-07,1.58868e-08,1.04944,0.00044342,-1.41614e-07,-5.85127e-08,1.04988,0.000442961,-3.17152e-07,9.89548e-08,1.05032,0.000442624,-2.0288e-08,-9.88878e-08,1.05076,0.000442287,-3.16951e-07,5.81779e-08,1.05121,0.000441827,-1.42418e-07,-1.46144e-08,1.05165,0.000441499,-1.86261e-07,2.79892e-10,1.05209,0.000441127,-1.85421e-07,1.34949e-08,1.05253,0.000440797,-1.44937e-07,-5.42594e-08,1.05297,0.000440344,-3.07715e-07,8.43335e-08,1.05341,0.000439982,-5.47146e-08,-4.46558e-08,1.05385,0.000439738,-1.88682e-07,-2.49193e-08,1.05429,0.000439286,-2.6344e-07,2.5124e-08,1.05473,0.000438835,-1.88068e-07,4.36328e-08,1.05517,0.000438589,-5.71699e-08,-8.04459e-08,1.05561,0.000438234,-2.98508e-07,3.97324e-08,1.05605,0.000437756,-1.79311e-07,4.07258e-08,1.05648,0.000437519,-5.71332e-08,-8.34263e-08,1.05692,0.000437155,-3.07412e-07,5.45608e-08,1.05736,0.000436704,-1.4373e-07,-1.56078e-08,1.05779,0.000436369,-1.90553e-07,7.87043e-09,1.05823,0.000436012,-1.66942e-07,-1.58739e-08,1.05867,0.00043563,-2.14563e-07,5.56251e-08,1.0591,0.000435368,-4.76881e-08,-8.74172e-08,1.05954,0.000435011,-3.0994e-07,5.56251e-08,1.05997,0.000434558,-1.43064e-07,-1.58739e-08,1.06041,0.000434224,-1.90686e-07,7.87042e-09,1.06084,0.000433866,-1.67075e-07,-1.56078e-08,1.06127,0.000433485,-2.13898e-07,5.45609e-08,1.06171,0.000433221,-5.02157e-08,-8.34263e-08,1.06214,0.00043287,-3.00495e-07,4.07258e-08,1.06257,0.000432391,-1.78317e-07,3.97325e-08,1.063,0.000432154,-5.91198e-08,-8.04464e-08,1.06344,0.000431794,-3.00459e-07,4.36347e-08,1.06387,0.000431324,-1.69555e-07,2.5117e-08,1.0643,0.000431061,-9.42041e-08,-2.48934e-08,1.06473,0.000430798,-1.68884e-07,-4.47527e-08,1.06516,0.000430326,-3.03142e-07,8.46951e-08,1.06559,0.000429973,-4.90573e-08,-5.56089e-08,1.06602,0.000429708,-2.15884e-07,1.85314e-08,1.06645,0.000429332,-1.6029e-07,-1.85166e-08,1.06688,0.000428956,-2.1584e-07,5.5535e-08,1.06731,0.000428691,-4.92347e-08,-8.44142e-08,1.06774,0.000428339,-3.02477e-07,4.37032e-08,1.06816,0.000427865,-1.71368e-07,2.88107e-08,1.06859,0.000427609,-8.49356e-08,-3.97367e-08,1.06902,0.00042732,-2.04146e-07,1.09267e-08,1.06945,0.000426945,-1.71365e-07,-3.97023e-09,1.06987,0.00042659,-1.83276e-07,4.9542e-09,1.0703,0.000426238,-1.68414e-07,-1.58466e-08,1.07073,0.000425854,-2.15953e-07,5.84321e-08,1.07115,0.000425597,-4.0657e-08,-9.86725e-08,1.07158,0.00042522,-3.36674e-07,9.78392e-08,1.072,0.00042484,-4.31568e-08,-5.42658e-08,1.07243,0.000424591,-2.05954e-07,1.45377e-11,1.07285,0.000424179,-2.0591e-07,5.42076e-08,1.07328,0.00042393,-4.32877e-08,-9.76357e-08,1.0737,0.00042355,-3.36195e-07,9.79165e-08,1.07412,0.000423172,-4.24451e-08,-5.56118e-08,1.07455,0.00042292,-2.09281e-07,5.32143e-09,1.07497,0.000422518,-1.93316e-07,3.43261e-08,1.07539,0.000422234,-9.0338e-08,-2.34165e-08,1.07581,0.000421983,-1.60588e-07,-5.98692e-08,1.07623,0.000421482,-3.40195e-07,1.43684e-07,1.07666,0.000421233,9.08574e-08,-1.5724e-07,1.07708,0.000420943,-3.80862e-07,1.27647e-07,1.0775,0.000420564,2.0791e-09,-1.1493e-07,1.07792,0.000420223,-3.4271e-07,9.36534e-08,1.07834,0.000419819,-6.17499e-08,-2.12653e-08,1.07876,0.000419632,-1.25546e-07,-8.59219e-09,1.07918,0.000419355,-1.51322e-07,-6.35752e-08,1.0796,0.000418861,-3.42048e-07,1.43684e-07,1.08002,0.000418608,8.90034e-08,-1.53532e-07,1.08043,0.000418326,-3.71593e-07,1.12817e-07,1.08085,0.000417921,-3.31414e-08,-5.93184e-08,1.08127,0.000417677,-2.11097e-07,5.24697e-09,1.08169,0.00041727,-1.95356e-07,3.83305e-08,1.0821,0.000416995,-8.03642e-08,-3.93597e-08,1.08252,0.000416716,-1.98443e-07,-1.0094e-10,1.08294,0.000416319,-1.98746e-07,3.97635e-08,1.08335,0.00041604,-7.94557e-08,-3.97437e-08,1.08377,0.000415762,-1.98687e-07,1.94215e-12,1.08419,0.000415365,-1.98681e-07,3.97359e-08,1.0846,0.000415087,-7.94732e-08,-3.97362e-08,1.08502,0.000414809,-1.98682e-07,-4.31063e-13,1.08543,0.000414411,-1.98683e-07,3.97379e-08,1.08584,0.000414133,-7.94694e-08,-3.97418e-08,1.08626,0.000413855,-1.98695e-07,2.00563e-11,1.08667,0.000413458,-1.98635e-07,3.96616e-08,1.08709,0.000413179,-7.965e-08,-3.9457e-08,1.0875,0.000412902,-1.98021e-07,-1.04281e-09,1.08791,0.000412502,-2.01149e-07,4.36282e-08,1.08832,0.000412231,-7.02648e-08,-5.42608e-08,1.08874,0.000411928,-2.33047e-07,5.42057e-08,1.08915,0.000411624,-7.04301e-08,-4.33527e-08,1.08956,0.000411353,-2.00488e-07,-4.07378e-12,1.08997,0.000410952,-2.005e-07,4.3369e-08,1.09038,0.000410681,-7.03934e-08,-5.42627e-08,1.09079,0.000410378,-2.33182e-07,5.44726e-08,1.0912,0.000410075,-6.97637e-08,-4.44186e-08,1.09161,0.000409802,-2.03019e-07,3.99235e-09,1.09202,0.000409408,-1.91042e-07,2.84491e-08,1.09243,0.000409111,-1.05695e-07,1.42043e-09,1.09284,0.000408904,-1.01434e-07,-3.41308e-08,1.09325,0.000408599,-2.03826e-07,1.58937e-08,1.09366,0.000408239,-1.56145e-07,-2.94438e-08,1.09406,0.000407838,-2.44476e-07,1.01881e-07,1.09447,0.000407655,6.11676e-08,-1.39663e-07,1.09488,0.000407358,-3.57822e-07,9.91432e-08,1.09529,0.00040694,-6.03921e-08,-1.84912e-08,1.09569,0.000406764,-1.15866e-07,-2.51785e-08,1.0961,0.000406457,-1.91401e-07,-4.03115e-12,1.09651,0.000406074,-1.91413e-07,2.51947e-08,1.09691,0.000405767,-1.15829e-07,1.84346e-08,1.09732,0.00040559,-6.05254e-08,-9.89332e-08,1.09772,0.000405172,-3.57325e-07,1.3888e-07,1.09813,0.000404874,5.93136e-08,-9.8957e-08,1.09853,0.000404696,-2.37557e-07,1.853e-08,1.09894,0.000404277,-1.81968e-07,2.48372e-08,1.09934,0.000403987,-1.07456e-07,1.33047e-09,1.09975,0.000403776,-1.03465e-07,-3.01591e-08,1.10015,0.000403479,-1.93942e-07,9.66054e-11,1.10055,0.000403091,-1.93652e-07,2.97727e-08,1.10096,0.000402793,-1.04334e-07,2.19273e-11,1.10136,0.000402585,-1.04268e-07,-2.98604e-08,1.10176,0.000402287,-1.93849e-07,2.10325e-10,1.10216,0.0004019,-1.93218e-07,2.90191e-08,1.10256,0.0004016,-1.06161e-07,2.92264e-09,1.10297,0.000401397,-9.73931e-08,-4.07096e-08,1.10337,0.00040108,-2.19522e-07,4.07067e-08,1.10377,0.000400763,-9.7402e-08,-2.90783e-09,1.10417,0.000400559,-1.06126e-07,-2.90754e-08,1.10457,0.00040026,-1.93352e-07,9.00021e-14,1.10497,0.000399873,-1.93351e-07,2.9075e-08,1.10537,0.000399574,-1.06126e-07,2.90902e-09,1.10577,0.00039937,-9.73992e-08,-4.07111e-08,1.10617,0.000399053,-2.19533e-07,4.07262e-08,1.10657,0.000398736,-9.73541e-08,-2.98424e-09,1.10697,0.000398533,-1.06307e-07,-2.87892e-08,1.10736,0.000398234,-1.92674e-07,-1.06824e-09,1.10776,0.000397845,-1.95879e-07,3.30622e-08,1.10816,0.000397552,-9.66926e-08,-1.19712e-08,1.10856,0.000397323,-1.32606e-07,1.48225e-08,1.10895,0.000397102,-8.81387e-08,-4.73187e-08,1.10935,0.000396784,-2.30095e-07,5.52429e-08,1.10975,0.00039649,-6.4366e-08,-5.44437e-08,1.11014,0.000396198,-2.27697e-07,4.33226e-08,1.11054,0.000395872,-9.77293e-08,3.62656e-10,1.11094,0.000395678,-9.66414e-08,-4.47732e-08,1.11133,0.00039535,-2.30961e-07,5.95208e-08,1.11173,0.000395067,-5.23985e-08,-7.41008e-08,1.11212,0.00039474,-2.74701e-07,1.17673e-07,1.11252,0.000394543,7.83181e-08,-1.58172e-07,1.11291,0.000394225,-3.96199e-07,1.57389e-07,1.1133,0.000393905,7.59679e-08,-1.13756e-07,1.1137,0.000393716,-2.653e-07,5.92165e-08,1.11409,0.000393363,-8.76507e-08,-3.90074e-09,1.11449,0.000393176,-9.93529e-08,-4.36136e-08,1.11488,0.000392846,-2.30194e-07,5.91457e-08,1.11527,0.000392563,-5.27564e-08,-7.376e-08,1.11566,0.000392237,-2.74037e-07,1.16685e-07,1.11606,0.000392039,7.60189e-08,-1.54562e-07,1.11645,0.000391727,-3.87667e-07,1.43935e-07,1.11684,0.000391384,4.4137e-08,-6.35487e-08,1.11723,0.000391281,-1.46509e-07,-8.94896e-09,1.11762,0.000390961,-1.73356e-07,-1.98647e-08,1.11801,0.000390555,-2.3295e-07,8.8408e-08,1.1184,0.000390354,3.22736e-08,-9.53486e-08,1.11879,0.000390133,-2.53772e-07,5.45677e-08,1.11918,0.000389789,-9.0069e-08,-3.71296e-09,1.11957,0.000389598,-1.01208e-07,-3.97159e-08,1.11996,0.000389276,-2.20355e-07,4.33671e-08,1.12035,0.000388966,-9.02542e-08,-1.45431e-08,1.12074,0.000388741,-1.33883e-07,1.48052e-08,1.12113,0.000388518,-8.94678e-08,-4.46778e-08,1.12152,0.000388205,-2.23501e-07,4.46966e-08,1.12191,0.000387892,-8.94114e-08,-1.48992e-08,1.12229,0.000387669,-1.34109e-07,1.49003e-08,1.12268,0.000387445,-8.94082e-08,-4.47019e-08,1.12307,0.000387132,-2.23514e-07,4.4698e-08,1.12345,0.000386819,-8.942e-08,-1.48806e-08,1.12384,0.000386596,-1.34062e-07,1.48245e-08,1.12423,0.000386372,-8.95885e-08,-4.44172e-08,1.12461,0.00038606,-2.2284e-07,4.36351e-08,1.125,0.000385745,-9.19348e-08,-1.09139e-08,1.12539,0.000385528,-1.24677e-07,2.05584e-11,1.12577,0.000385279,-1.24615e-07,1.08317e-08,1.12616,0.000385062,-9.21198e-08,-4.33473e-08,1.12654,0.000384748,-2.22162e-07,4.33481e-08,1.12693,0.000384434,-9.21174e-08,-1.08356e-08,1.12731,0.000384217,-1.24624e-07,-5.50907e-12,1.12769,0.000383968,-1.24641e-07,1.08577e-08,1.12808,0.000383751,-9.20679e-08,-4.34252e-08,1.12846,0.000383437,-2.22343e-07,4.36337e-08,1.12884,0.000383123,-9.14422e-08,-1.19005e-08,1.12923,0.000382904,-1.27144e-07,3.96813e-09,1.12961,0.000382662,-1.15239e-07,-3.97207e-09,1.12999,0.000382419,-1.27155e-07,1.19201e-08,1.13038,0.000382201,-9.1395e-08,-4.37085e-08,1.13076,0.000381887,-2.2252e-07,4.37046e-08,1.13114,0.000381573,-9.14068e-08,-1.19005e-08,1.13152,0.000381355,-1.27108e-07,3.89734e-09,1.1319,0.000381112,-1.15416e-07,-3.68887e-09,1.13228,0.00038087,-1.26483e-07,1.08582e-08,1.13266,0.00038065,-9.39083e-08,-3.97438e-08,1.13304,0.000380343,-2.1314e-07,2.89076e-08,1.13342,0.000380003,-1.26417e-07,4.33225e-08,1.1338,0.00037988,3.55072e-09,-8.29883e-08,1.13418,0.000379638,-2.45414e-07,5.0212e-08,1.13456,0.000379298,-9.47781e-08,1.34964e-09,1.13494,0.000379113,-9.07292e-08,-5.56105e-08,1.13532,0.000378764,-2.57561e-07,1.01883e-07,1.1357,0.000378555,4.80889e-08,-1.13504e-07,1.13608,0.000378311,-2.92423e-07,1.13713e-07,1.13646,0.000378067,4.87176e-08,-1.02931e-07,1.13683,0.000377856,-2.60076e-07,5.95923e-08,1.13721,0.000377514,-8.12988e-08,-1.62288e-08,1.13759,0.000377303,-1.29985e-07,5.32278e-09,1.13797,0.000377059,-1.14017e-07,-5.06237e-09,1.13834,0.000376816,-1.29204e-07,1.49267e-08,1.13872,0.000376602,-8.44237e-08,-5.46444e-08,1.1391,0.000376269,-2.48357e-07,8.44417e-08,1.13947,0.000376026,4.96815e-09,-4.47039e-08,1.13985,0.000375902,-1.29143e-07,-2.48355e-08,1.14023,0.000375569,-2.0365e-07,2.48368e-08,1.1406,0.000375236,-1.2914e-07,4.46977e-08,1.14098,0.000375112,4.95341e-09,-8.44184e-08,1.14135,0.000374869,-2.48302e-07,5.45572e-08,1.14173,0.000374536,-8.463e-08,-1.46013e-08,1.1421,0.000374323,-1.28434e-07,3.8478e-09,1.14247,0.000374077,-1.1689e-07,-7.89941e-10,1.14285,0.000373841,-1.1926e-07,-6.88042e-10,1.14322,0.0003736,-1.21324e-07,3.54213e-09,1.1436,0.000373368,-1.10698e-07,-1.34805e-08,1.14397,0.000373107,-1.51139e-07,5.03798e-08,1.14434,0.000372767,0.,0.};$/;"	m	namespace:cv::cudev::color_cvt_detail
c_RGB2XYZ_D65f	opencv2/core/cuda/detail/color_detail.hpp	/^        __constant__ float c_RGB2XYZ_D65f[9] = { 0.412453f, 0.357580f, 0.180423f, 0.212671f, 0.715160f, 0.072169f, 0.019334f, 0.119193f, 0.950227f };$/;"	m	namespace:cv::cuda::device::color_detail
c_RGB2XYZ_D65f	opencv2/cudev/functional/detail/color_cvt.hpp	/^    __constant__ float c_RGB2XYZ_D65f[9] = { 0.412453f, 0.357580f, 0.180423f, 0.212671f, 0.715160f, 0.072169f, 0.019334f, 0.119193f, 0.950227f };$/;"	m	namespace:cv::cudev::color_cvt_detail
c_RGB2XYZ_D65i	opencv2/core/cuda/detail/color_detail.hpp	/^        __constant__ int   c_RGB2XYZ_D65i[9] = { 1689, 1465, 739, 871, 2929, 296, 79, 488, 3892 };$/;"	m	namespace:cv::cuda::device::color_detail
c_RGB2XYZ_D65i	opencv2/cudev/functional/detail/color_cvt.hpp	/^    __constant__ int   c_RGB2XYZ_D65i[9] = { 1689, 1465, 739, 871, 2929, 296, 79, 488, 3892 };$/;"	m	namespace:cv::cudev::color_cvt_detail
c_RGB2YCrCbCoeffs_f	opencv2/core/cuda/detail/color_detail.hpp	/^        __constant__ float c_RGB2YCrCbCoeffs_f[5] = {0.299f, 0.587f, 0.114f, 0.713f, 0.564f};$/;"	m	namespace:cv::cuda::device::color_detail
c_RGB2YCrCbCoeffs_f	opencv2/cudev/functional/detail/color_cvt.hpp	/^    __constant__ float c_RGB2YCrCbCoeffs_f[5] = { 0.299f, 0.587f, 0.114f, 0.713f, 0.564f };$/;"	m	namespace:cv::cudev::color_cvt_detail
c_RGB2YCrCbCoeffs_i	opencv2/core/cuda/detail/color_detail.hpp	/^        __constant__ int   c_RGB2YCrCbCoeffs_i[5] = {R2Y, G2Y, B2Y, 11682, 9241};$/;"	m	namespace:cv::cuda::device::color_detail
c_RGB2YCrCbCoeffs_i	opencv2/cudev/functional/detail/color_cvt.hpp	/^    __constant__ int   c_RGB2YCrCbCoeffs_i[5] = { R2Y, G2Y, B2Y, 11682, 9241 };$/;"	m	namespace:cv::cudev::color_cvt_detail
c_RGB2YUVCoeffs_f	opencv2/core/cuda/detail/color_detail.hpp	/^        __constant__ float c_RGB2YUVCoeffs_f[5] = { 0.114f, 0.587f, 0.299f, 0.492f, 0.877f };$/;"	m	namespace:cv::cuda::device::color_detail
c_RGB2YUVCoeffs_f	opencv2/cudev/functional/detail/color_cvt.hpp	/^    __constant__ float c_RGB2YUVCoeffs_f[5] = { 0.114f, 0.587f, 0.299f, 0.492f, 0.877f };$/;"	m	namespace:cv::cudev::color_cvt_detail
c_RGB2YUVCoeffs_i	opencv2/core/cuda/detail/color_detail.hpp	/^        __constant__ int   c_RGB2YUVCoeffs_i[5] = { B2Y, G2Y, R2Y, 8061, 14369 };$/;"	m	namespace:cv::cuda::device::color_detail
c_RGB2YUVCoeffs_i	opencv2/cudev/functional/detail/color_cvt.hpp	/^    __constant__ int   c_RGB2YUVCoeffs_i[5] = { B2Y, G2Y, R2Y, 8061, 14369 };$/;"	m	namespace:cv::cudev::color_cvt_detail
c_XYZ2sRGB_D65f	opencv2/core/cuda/detail/color_detail.hpp	/^        __constant__ float c_XYZ2sRGB_D65f[9] = { 3.240479f, -1.53715f, -0.498535f, -0.969256f, 1.875991f, 0.041556f, 0.055648f, -0.204043f, 1.057311f };$/;"	m	namespace:cv::cuda::device::color_detail
c_XYZ2sRGB_D65f	opencv2/cudev/functional/detail/color_cvt.hpp	/^    __constant__ float c_XYZ2sRGB_D65f[9] = { 3.240479f, -1.53715f, -0.498535f, -0.969256f, 1.875991f, 0.041556f, 0.055648f, -0.204043f, 1.057311f };$/;"	m	namespace:cv::cudev::color_cvt_detail
c_XYZ2sRGB_D65i	opencv2/core/cuda/detail/color_detail.hpp	/^        __constant__ int   c_XYZ2sRGB_D65i[9] = { 13273, -6296, -2042, -3970, 7684, 170, 228, -836, 4331 };$/;"	m	namespace:cv::cuda::device::color_detail
c_XYZ2sRGB_D65i	opencv2/cudev/functional/detail/color_cvt.hpp	/^    __constant__ int   c_XYZ2sRGB_D65i[9] = { 13273, -6296, -2042, -3970, 7684, 170, 228, -836, 4331 };$/;"	m	namespace:cv::cudev::color_cvt_detail
c_YCrCb2RGBCoeffs_f	opencv2/core/cuda/detail/color_detail.hpp	/^        __constant__ float c_YCrCb2RGBCoeffs_f[5] = {1.403f, -0.714f, -0.344f, 1.773f};$/;"	m	namespace:cv::cuda::device::color_detail
c_YCrCb2RGBCoeffs_f	opencv2/cudev/functional/detail/color_cvt.hpp	/^    __constant__ float c_YCrCb2RGBCoeffs_f[5] = {1.403f, -0.714f, -0.344f, 1.773f};$/;"	m	namespace:cv::cudev::color_cvt_detail
c_YCrCb2RGBCoeffs_i	opencv2/core/cuda/detail/color_detail.hpp	/^        __constant__ int   c_YCrCb2RGBCoeffs_i[5] = {22987, -11698, -5636, 29049};$/;"	m	namespace:cv::cuda::device::color_detail
c_YCrCb2RGBCoeffs_i	opencv2/cudev/functional/detail/color_cvt.hpp	/^    __constant__ int   c_YCrCb2RGBCoeffs_i[5] = {22987, -11698, -5636, 29049};$/;"	m	namespace:cv::cudev::color_cvt_detail
c_YUV2RGBCoeffs_f	opencv2/core/cuda/detail/color_detail.hpp	/^        __constant__ float c_YUV2RGBCoeffs_f[5] = { 2.032f, -0.395f, -0.581f, 1.140f };$/;"	m	namespace:cv::cuda::device::color_detail
c_YUV2RGBCoeffs_f	opencv2/cudev/functional/detail/color_cvt.hpp	/^    __constant__ float c_YUV2RGBCoeffs_f[5] = { 2.032f, -0.395f, -0.581f, 1.140f };$/;"	m	namespace:cv::cudev::color_cvt_detail
c_YUV2RGBCoeffs_i	opencv2/core/cuda/detail/color_detail.hpp	/^        __constant__ int   c_YUV2RGBCoeffs_i[5] = { 33292, -6472, -9519, 18678 };$/;"	m	namespace:cv::cuda::device::color_detail
c_YUV2RGBCoeffs_i	opencv2/cudev/functional/detail/color_cvt.hpp	/^    __constant__ int   c_YUV2RGBCoeffs_i[5] = { 33292, -6472, -9519, 18678 };$/;"	m	namespace:cv::cudev::color_cvt_detail
c_sRGBGammaTab	opencv2/core/cuda/detail/color_detail.hpp	/^        __constant__ float c_sRGBGammaTab[] = {0,7.55853e-05,0.,-7.51331e-13,7.55853e-05,7.55853e-05,-2.25399e-12,3.75665e-12,0.000151171,7.55853e-05,9.01597e-12,-6.99932e-12,0.000226756,7.55853e-05,-1.1982e-11,2.41277e-12,0.000302341,7.55853e-05,-4.74369e-12,1.19001e-11,0.000377927,7.55853e-05,3.09568e-11,-2.09095e-11,0.000453512,7.55853e-05,-3.17718e-11,1.35303e-11,0.000529097,7.55853e-05,8.81905e-12,-4.10782e-12,0.000604683,7.55853e-05,-3.50439e-12,2.90097e-12,0.000680268,7.55853e-05,5.19852e-12,-7.49607e-12,0.000755853,7.55853e-05,-1.72897e-11,2.70833e-11,0.000831439,7.55854e-05,6.39602e-11,-4.26295e-11,0.000907024,7.55854e-05,-6.39282e-11,2.70193e-11,0.000982609,7.55853e-05,1.71298e-11,-7.24017e-12,0.00105819,7.55853e-05,-4.59077e-12,1.94137e-12,0.00113378,7.55853e-05,1.23333e-12,-5.25291e-13,0.00120937,7.55853e-05,-3.42545e-13,1.59799e-13,0.00128495,7.55853e-05,1.36852e-13,-1.13904e-13,0.00136054,7.55853e-05,-2.04861e-13,2.95818e-13,0.00143612,7.55853e-05,6.82594e-13,-1.06937e-12,0.00151171,7.55853e-05,-2.52551e-12,3.98166e-12,0.00158729,7.55853e-05,9.41946e-12,-1.48573e-11,0.00166288,7.55853e-05,-3.51523e-11,5.54474e-11,0.00173846,7.55854e-05,1.3119e-10,-9.0517e-11,0.00181405,7.55854e-05,-1.40361e-10,7.37899e-11,0.00188963,7.55853e-05,8.10085e-11,-8.82272e-11,0.00196522,7.55852e-05,-1.83673e-10,1.62704e-10,0.0020408,7.55853e-05,3.04438e-10,-2.13341e-10,0.00211639,7.55853e-05,-3.35586e-10,2.25e-10,0.00219197,7.55853e-05,3.39414e-10,-2.20997e-10,0.00226756,7.55853e-05,-3.23576e-10,1.93326e-10,0.00234315,7.55853e-05,2.564e-10,-8.66446e-11,0.00241873,7.55855e-05,-3.53328e-12,-7.9578e-11,0.00249432,7.55853e-05,-2.42267e-10,1.72126e-10,0.0025699,7.55853e-05,2.74111e-10,-1.43265e-10,0.00264549,7.55854e-05,-1.55683e-10,-6.47292e-11,0.00272107,7.55849e-05,-3.4987e-10,8.67842e-10,0.00279666,7.55868e-05,2.25366e-09,-3.8723e-09,0.00287224,7.55797e-05,-9.36325e-09,1.5087e-08,0.00294783,7.56063e-05,3.58978e-08,-5.69415e-08,0.00302341,7.55072e-05,-1.34927e-07,2.13144e-07,0.003099,7.58768e-05,5.04507e-07,1.38713e-07,0.00317552,7.7302e-05,9.20646e-07,-1.55186e-07,0.00325359,7.86777e-05,4.55087e-07,4.26813e-08,0.00333276,7.97159e-05,5.83131e-07,-1.06495e-08,0.00341305,8.08502e-05,5.51182e-07,3.87467e-09,0.00349446,8.19642e-05,5.62806e-07,-1.92586e-10,0.00357698,8.30892e-05,5.62228e-07,1.0866e-09,0.00366063,8.4217e-05,5.65488e-07,5.02818e-10,0.00374542,8.53494e-05,5.66997e-07,8.60211e-10,0.00383133,8.6486e-05,5.69577e-07,7.13044e-10,0.00391839,8.76273e-05,5.71716e-07,4.78527e-10,0.00400659,8.87722e-05,5.73152e-07,1.09818e-09,0.00409594,8.99218e-05,5.76447e-07,2.50964e-10,0.00418644,9.10754e-05,5.772e-07,1.15762e-09,0.00427809,9.22333e-05,5.80672e-07,2.40865e-10,0.0043709,9.33954e-05,5.81395e-07,1.13854e-09,0.00446488,9.45616e-05,5.84811e-07,3.27267e-10,0.00456003,9.57322e-05,5.85792e-07,8.1197e-10,0.00465635,9.69062e-05,5.88228e-07,6.15823e-10,0.00475384,9.80845e-05,5.90076e-07,9.15747e-10,0.00485252,9.92674e-05,5.92823e-07,3.778e-10,0.00495238,0.000100454,5.93956e-07,8.32623e-10,0.00505343,0.000101645,5.96454e-07,4.82695e-10,0.00515567,0.000102839,5.97902e-07,9.61904e-10,0.00525911,0.000104038,6.00788e-07,3.26281e-10,0.00536375,0.00010524,6.01767e-07,9.926e-10,0.00546959,0.000106447,6.04745e-07,3.59933e-10,0.00557664,0.000107657,6.05824e-07,8.2728e-10,0.0056849,0.000108871,6.08306e-07,5.21898e-10,0.00579438,0.00011009,6.09872e-07,8.10492e-10,0.00590508,0.000111312,6.12303e-07,4.27046e-10,0.00601701,0.000112538,6.13585e-07,7.40878e-10,0.00613016,0.000113767,6.15807e-07,8.00469e-10,0.00624454,0.000115001,6.18209e-07,2.48178e-10,0.00636016,0.000116238,6.18953e-07,1.00073e-09,0.00647702,0.000117479,6.21955e-07,4.05654e-10,0.00659512,0.000118724,6.23172e-07,6.36192e-10,0.00671447,0.000119973,6.25081e-07,7.74927e-10,0.00683507,0.000121225,6.27406e-07,4.54975e-10,0.00695692,0.000122481,6.28771e-07,6.64841e-10,0.00708003,0.000123741,6.30765e-07,6.10972e-10,0.00720441,0.000125004,6.32598e-07,6.16543e-10,0.00733004,0.000126271,6.34448e-07,6.48204e-10,0.00745695,0.000127542,6.36392e-07,5.15835e-10,0.00758513,0.000128816,6.3794e-07,5.48103e-10,0.00771458,0.000130094,6.39584e-07,1.01706e-09,0.00784532,0.000131376,6.42635e-07,4.0283e-11,0.00797734,0.000132661,6.42756e-07,6.84471e-10,0.00811064,0.000133949,6.4481e-07,9.47144e-10,0.00824524,0.000135241,6.47651e-07,1.83472e-10,0.00838112,0.000136537,6.48201e-07,1.11296e-09,0.00851831,0.000137837,6.5154e-07,2.13163e-11,0.0086568,0.00013914,6.51604e-07,6.64462e-10,0.00879659,0.000140445,6.53598e-07,1.04613e-09,0.00893769,0.000141756,6.56736e-07,-1.92377e-10,0.0090801,0.000143069,6.56159e-07,1.58601e-09,0.00922383,0.000144386,6.60917e-07,-5.63754e-10,0.00936888,0.000145706,6.59226e-07,1.60033e-09,0.00951524,0.000147029,6.64027e-07,-2.49543e-10,0.00966294,0.000148356,6.63278e-07,1.26043e-09,0.00981196,0.000149687,6.67059e-07,-1.35572e-10,0.00996231,0.00015102,6.66653e-07,1.14458e-09,0.010114,0.000152357,6.70086e-07,2.13864e-10,0.010267,0.000153698,6.70728e-07,7.93856e-10,0.0104214,0.000155042,6.73109e-07,3.36077e-10,0.0105771,0.000156389,6.74118e-07,6.55765e-10,0.0107342,0.000157739,6.76085e-07,7.66211e-10,0.0108926,0.000159094,6.78384e-07,4.66116e-12,0.0110524,0.000160451,6.78398e-07,1.07775e-09,0.0112135,0.000161811,6.81631e-07,3.41023e-10,0.011376,0.000163175,6.82654e-07,3.5205e-10,0.0115398,0.000164541,6.8371e-07,1.04473e-09,0.0117051,0.000165912,6.86844e-07,1.25757e-10,0.0118717,0.000167286,6.87222e-07,3.14818e-10,0.0120396,0.000168661,6.88166e-07,1.40886e-09,0.012209,0.000170042,6.92393e-07,-3.62244e-10,0.0123797,0.000171425,6.91306e-07,9.71397e-10,0.0125518,0.000172811,6.9422e-07,2.02003e-10,0.0127253,0.0001742,6.94826e-07,1.01448e-09,0.0129002,0.000175593,6.97869e-07,3.96653e-10,0.0130765,0.00017699,6.99059e-07,1.92927e-10,0.0132542,0.000178388,6.99638e-07,6.94305e-10,0.0134333,0.00017979,7.01721e-07,7.55108e-10,0.0136138,0.000181195,7.03986e-07,1.05918e-11,0.0137957,0.000182603,7.04018e-07,1.06513e-09,0.013979,0.000184015,7.07214e-07,3.85512e-10,0.0141637,0.00018543,7.0837e-07,1.86769e-10,0.0143499,0.000186848,7.0893e-07,7.30116e-10,0.0145374,0.000188268,7.11121e-07,6.17983e-10,0.0147264,0.000189692,7.12975e-07,5.23282e-10,0.0149168,0.000191119,7.14545e-07,8.28398e-11,0.0151087,0.000192549,7.14793e-07,1.0081e-09,0.0153019,0.000193981,7.17817e-07,5.41244e-10,0.0154966,0.000195418,7.19441e-07,-3.7907e-10,0.0156928,0.000196856,7.18304e-07,1.90641e-09,0.0158903,0.000198298,7.24023e-07,-7.27387e-10,0.0160893,0.000199744,7.21841e-07,1.00317e-09,0.0162898,0.000201191,7.24851e-07,4.39949e-10,0.0164917,0.000202642,7.2617e-07,9.6234e-10,0.0166951,0.000204097,7.29057e-07,-5.64019e-10,0.0168999,0.000205554,7.27365e-07,1.29374e-09,0.0171062,0.000207012,7.31247e-07,9.77025e-10,0.017314,0.000208478,7.34178e-07,-1.47651e-09,0.0175232,0.000209942,7.29748e-07,3.06636e-09,0.0177338,0.00021141,7.38947e-07,-1.47573e-09,0.017946,0.000212884,7.3452e-07,9.7386e-10,0.0181596,0.000214356,7.37442e-07,1.30562e-09,0.0183747,0.000215835,7.41358e-07,-6.08376e-10,0.0185913,0.000217315,7.39533e-07,1.12785e-09,0.0188093,0.000218798,7.42917e-07,-1.77711e-10,0.0190289,0.000220283,7.42384e-07,1.44562e-09,0.0192499,0.000221772,7.46721e-07,-1.68825e-11,0.0194724,0.000223266,7.4667e-07,4.84533e-10,0.0196964,0.000224761,7.48124e-07,-5.85298e-11,0.0199219,0.000226257,7.47948e-07,1.61217e-09,0.0201489,0.000227757,7.52785e-07,-8.02136e-10,0.0203775,0.00022926,7.50378e-07,1.59637e-09,0.0206075,0.000230766,7.55167e-07,4.47168e-12,0.020839,0.000232276,7.55181e-07,2.48387e-10,0.021072,0.000233787,7.55926e-07,8.6474e-10,0.0213066,0.000235302,7.5852e-07,1.78299e-11,0.0215426,0.000236819,7.58573e-07,9.26567e-10,0.0217802,0.000238339,7.61353e-07,1.34529e-12,0.0220193,0.000239862,7.61357e-07,9.30659e-10,0.0222599,0.000241387,7.64149e-07,1.34529e-12,0.0225021,0.000242915,7.64153e-07,9.26567e-10,0.0227458,0.000244447,7.66933e-07,1.76215e-11,0.022991,0.00024598,7.66986e-07,8.65536e-10,0.0232377,0.000247517,7.69582e-07,2.45677e-10,0.023486,0.000249057,7.70319e-07,1.44193e-11,0.0237358,0.000250598,7.70363e-07,1.55918e-09,0.0239872,0.000252143,7.7504e-07,-6.63173e-10,0.0242401,0.000253691,7.73051e-07,1.09357e-09,0.0244946,0.000255241,7.76331e-07,1.41919e-11,0.0247506,0.000256793,7.76374e-07,7.12248e-10,0.0250082,0.000258348,7.78511e-07,8.62049e-10,0.0252673,0.000259908,7.81097e-07,-4.35061e-10,0.025528,0.000261469,7.79792e-07,8.7825e-10,0.0257902,0.000263031,7.82426e-07,6.47181e-10,0.0260541,0.000264598,7.84368e-07,2.58448e-10,0.0263194,0.000266167,7.85143e-07,1.81558e-10,0.0265864,0.000267738,7.85688e-07,8.78041e-10,0.0268549,0.000269312,7.88322e-07,3.15102e-11,0.027125,0.000270889,7.88417e-07,8.58525e-10,0.0273967,0.000272468,7.90992e-07,2.59812e-10,0.02767,0.000274051,7.91772e-07,-3.5224e-11,0.0279448,0.000275634,7.91666e-07,1.74377e-09,0.0282212,0.000277223,7.96897e-07,-1.35196e-09,0.0284992,0.000278813,7.92841e-07,1.80141e-09,0.0287788,0.000280404,7.98246e-07,-2.65629e-10,0.0290601,0.000281999,7.97449e-07,1.12374e-09,0.0293428,0.000283598,8.0082e-07,-5.04106e-10,0.0296272,0.000285198,7.99308e-07,8.92764e-10,0.0299132,0.000286799,8.01986e-07,6.58379e-10,0.0302008,0.000288405,8.03961e-07,1.98971e-10,0.0304901,0.000290014,8.04558e-07,4.08382e-10,0.0307809,0.000291624,8.05783e-07,3.01839e-11,0.0310733,0.000293236,8.05874e-07,1.33343e-09,0.0313673,0.000294851,8.09874e-07,2.2419e-10,0.031663,0.000296472,8.10547e-07,-3.67606e-10,0.0319603,0.000298092,8.09444e-07,1.24624e-09,0.0322592,0.000299714,8.13182e-07,-8.92025e-10,0.0325597,0.000301338,8.10506e-07,2.32183e-09,0.0328619,0.000302966,8.17472e-07,-9.44719e-10,0.0331657,0.000304598,8.14638e-07,1.45703e-09,0.0334711,0.000306232,8.19009e-07,-1.15805e-09,0.0337781,0.000307866,8.15535e-07,3.17507e-09,0.0340868,0.000309507,8.2506e-07,-4.09161e-09,0.0343971,0.000311145,8.12785e-07,5.74079e-09,0.0347091,0.000312788,8.30007e-07,-3.97034e-09,0.0350227,0.000314436,8.18096e-07,2.68985e-09,0.035338,0.00031608,8.26166e-07,6.61676e-10,0.0356549,0.000317734,8.28151e-07,-1.61123e-09,0.0359734,0.000319386,8.23317e-07,2.05786e-09,0.0362936,0.000321038,8.29491e-07,8.30388e-10,0.0366155,0.0003227,8.31982e-07,-1.65424e-09,0.036939,0.000324359,8.27019e-07,2.06129e-09,0.0372642,0.000326019,8.33203e-07,8.59719e-10,0.0375911,0.000327688,8.35782e-07,-1.77488e-09,0.0379196,0.000329354,8.30458e-07,2.51464e-09,0.0382498,0.000331023,8.38002e-07,-8.33135e-10,0.0385817,0.000332696,8.35502e-07,8.17825e-10,0.0389152,0.00033437,8.37956e-07,1.28718e-09,0.0392504,0.00033605,8.41817e-07,-2.2413e-09,0.0395873,0.000337727,8.35093e-07,3.95265e-09,0.0399258,0.000339409,8.46951e-07,-2.39332e-09,0.0402661,0.000341095,8.39771e-07,1.89533e-09,0.040608,0.000342781,8.45457e-07,-1.46271e-09,0.0409517,0.000344467,8.41069e-07,3.95554e-09,0.041297,0.000346161,8.52936e-07,-3.18369e-09,0.041644,0.000347857,8.43385e-07,1.32873e-09,0.0419927,0.000349548,8.47371e-07,1.59402e-09,0.0423431,0.000351248,8.52153e-07,-2.54336e-10,0.0426952,0.000352951,8.5139e-07,-5.76676e-10,0.043049,0.000354652,8.4966e-07,2.56114e-09,0.0434045,0.000356359,8.57343e-07,-2.21744e-09,0.0437617,0.000358067,8.50691e-07,2.58344e-09,0.0441206,0.000359776,8.58441e-07,-6.65826e-10,0.0444813,0.000361491,8.56444e-07,7.99218e-11,0.0448436,0.000363204,8.56684e-07,3.46063e-10,0.0452077,0.000364919,8.57722e-07,2.26116e-09,0.0455734,0.000366641,8.64505e-07,-1.94005e-09,0.045941,0.000368364,8.58685e-07,1.77384e-09,0.0463102,0.000370087,8.64007e-07,-1.43005e-09,0.0466811,0.000371811,8.59717e-07,3.94634e-09,0.0470538,0.000373542,8.71556e-07,-3.17946e-09,0.0474282,0.000375276,8.62017e-07,1.32104e-09,0.0478043,0.000377003,8.6598e-07,1.62045e-09,0.0481822,0.00037874,8.70842e-07,-3.52297e-10,0.0485618,0.000380481,8.69785e-07,-2.11211e-10,0.0489432,0.00038222,8.69151e-07,1.19716e-09,0.0493263,0.000383962,8.72743e-07,-8.52026e-10,0.0497111,0.000385705,8.70187e-07,2.21092e-09,0.0500977,0.000387452,8.76819e-07,-5.41339e-10,0.050486,0.000389204,8.75195e-07,-4.5361e-11,0.0508761,0.000390954,8.75059e-07,7.22669e-10,0.0512679,0.000392706,8.77227e-07,8.79936e-10,0.0516615,0.000394463,8.79867e-07,-5.17048e-10,0.0520568,0.000396222,8.78316e-07,1.18833e-09,0.0524539,0.000397982,8.81881e-07,-5.11022e-10,0.0528528,0.000399744,8.80348e-07,8.55683e-10,0.0532534,0.000401507,8.82915e-07,8.13562e-10,0.0536558,0.000403276,8.85356e-07,-3.84603e-10,0.05406,0.000405045,8.84202e-07,7.24962e-10,0.0544659,0.000406816,8.86377e-07,1.20986e-09,0.0548736,0.000408592,8.90006e-07,-1.83896e-09,0.0552831,0.000410367,8.84489e-07,2.42071e-09,0.0556944,0.000412143,8.91751e-07,-3.93413e-10,0.0561074,0.000413925,8.90571e-07,-8.46967e-10,0.0565222,0.000415704,8.8803e-07,3.78122e-09,0.0569388,0.000417491,8.99374e-07,-3.1021e-09,0.0573572,0.000419281,8.90068e-07,1.17658e-09,0.0577774,0.000421064,8.93597e-07,2.12117e-09,0.0581993,0.000422858,8.99961e-07,-2.21068e-09,0.0586231,0.000424651,8.93329e-07,2.9961e-09,0.0590486,0.000426447,9.02317e-07,-2.32311e-09,0.059476,0.000428244,8.95348e-07,2.57122e-09,0.0599051,0.000430043,9.03062e-07,-5.11098e-10,0.0603361,0.000431847,9.01528e-07,-5.27166e-10,0.0607688,0.000433649,8.99947e-07,2.61984e-09,0.0612034,0.000435457,9.07806e-07,-2.50141e-09,0.0616397,0.000437265,9.00302e-07,3.66045e-09,0.0620779,0.000439076,9.11283e-07,-4.68977e-09,0.0625179,0.000440885,8.97214e-07,7.64783e-09,0.0629597,0.000442702,9.20158e-07,-7.27499e-09,0.0634033,0.000444521,8.98333e-07,6.55113e-09,0.0638487,0.000446337,9.17986e-07,-4.02844e-09,0.0642959,0.000448161,9.05901e-07,2.11196e-09,0.064745,0.000449979,9.12236e-07,3.03125e-09,0.0651959,0.000451813,9.2133e-07,-6.78648e-09,0.0656486,0.000453635,9.00971e-07,9.21375e-09,0.0661032,0.000455464,9.28612e-07,-7.71684e-09,0.0665596,0.000457299,9.05462e-07,6.7522e-09,0.0670178,0.00045913,9.25718e-07,-4.3907e-09,0.0674778,0.000460968,9.12546e-07,3.36e-09,0.0679397,0.000462803,9.22626e-07,-1.59876e-09,0.0684034,0.000464644,9.1783e-07,3.0351e-09,0.068869,0.000466488,9.26935e-07,-3.09101e-09,0.0693364,0.000468333,9.17662e-07,1.8785e-09,0.0698057,0.000470174,9.23298e-07,3.02733e-09,0.0702768,0.00047203,9.3238e-07,-6.53722e-09,0.0707497,0.000473875,9.12768e-07,8.22054e-09,0.0712245,0.000475725,9.37429e-07,-3.99325e-09,0.0717012,0.000477588,9.2545e-07,3.01839e-10,0.0721797,0.00047944,9.26355e-07,2.78597e-09,0.0726601,0.000481301,9.34713e-07,-3.99507e-09,0.0731423,0.000483158,9.22728e-07,5.7435e-09,0.0736264,0.000485021,9.39958e-07,-4.07776e-09,0.0741123,0.000486888,9.27725e-07,3.11695e-09,0.0746002,0.000488753,9.37076e-07,-9.39394e-10,0.0750898,0.000490625,9.34258e-07,6.4055e-10,0.0755814,0.000492495,9.3618e-07,-1.62265e-09,0.0760748,0.000494363,9.31312e-07,5.84995e-09,0.0765701,0.000496243,9.48861e-07,-6.87601e-09,0.0770673,0.00049812,9.28233e-07,6.75296e-09,0.0775664,0.000499997,9.48492e-07,-5.23467e-09,0.0780673,0.000501878,9.32788e-07,6.73523e-09,0.0785701,0.000503764,9.52994e-07,-6.80514e-09,0.0790748,0.000505649,9.32578e-07,5.5842e-09,0.0795814,0.000507531,9.49331e-07,-6.30583e-10,0.0800899,0.000509428,9.47439e-07,-3.0618e-09,0.0806003,0.000511314,9.38254e-07,5.4273e-09,0.0811125,0.000513206,9.54536e-07,-3.74627e-09,0.0816267,0.000515104,9.43297e-07,2.10713e-09,0.0821427,0.000516997,9.49618e-07,2.76839e-09,0.0826607,0.000518905,9.57924e-07,-5.73006e-09,0.0831805,0.000520803,9.40733e-07,5.25072e-09,0.0837023,0.0005227,9.56486e-07,-3.71718e-10,0.084226,0.000524612,9.5537e-07,-3.76404e-09,0.0847515,0.000526512,9.44078e-07,7.97735e-09,0.085279,0.000528424,9.6801e-07,-5.79367e-09,0.0858084,0.000530343,9.50629e-07,2.96268e-10,0.0863397,0.000532245,9.51518e-07,4.6086e-09,0.0868729,0.000534162,9.65344e-07,-3.82947e-09,0.087408,0.000536081,9.53856e-07,3.25861e-09,0.087945,0.000537998,9.63631e-07,-1.7543e-09,0.088484,0.00053992,9.58368e-07,3.75849e-09,0.0890249,0.000541848,9.69644e-07,-5.82891e-09,0.0895677,0.00054377,9.52157e-07,4.65593e-09,0.0901124,0.000545688,9.66125e-07,2.10643e-09,0.0906591,0.000547627,9.72444e-07,-5.63099e-09,0.0912077,0.000549555,9.55551e-07,5.51627e-09,0.0917582,0.000551483,9.721e-07,-1.53292e-09,0.0923106,0.000553422,9.67501e-07,6.15311e-10,0.092865,0.000555359,9.69347e-07,-9.28291e-10,0.0934213,0.000557295,9.66562e-07,3.09774e-09,0.0939796,0.000559237,9.75856e-07,-4.01186e-09,0.0945398,0.000561177,9.6382e-07,5.49892e-09,0.095102,0.000563121,9.80317e-07,-3.08258e-09,0.0956661,0.000565073,9.71069e-07,-6.19176e-10,0.0962321,0.000567013,9.69212e-07,5.55932e-09,0.0968001,0.000568968,9.8589e-07,-6.71704e-09,0.09737,0.00057092,9.65738e-07,6.40762e-09,0.0979419,0.00057287,9.84961e-07,-4.0122e-09,0.0985158,0.000574828,9.72925e-07,2.19059e-09,0.0990916,0.000576781,9.79496e-07,2.70048e-09,0.0996693,0.000578748,9.87598e-07,-5.54193e-09,0.100249,0.000580706,9.70972e-07,4.56597e-09,0.100831,0.000582662,9.8467e-07,2.17923e-09,0.101414,0.000584638,9.91208e-07,-5.83232e-09,0.102,0.000586603,9.73711e-07,6.24884e-09,0.102588,0.000588569,9.92457e-07,-4.26178e-09,0.103177,0.000590541,9.79672e-07,3.34781e-09,0.103769,0.00059251,9.89715e-07,-1.67904e-09,0.104362,0.000594485,9.84678e-07,3.36839e-09,0.104958,0.000596464,9.94783e-07,-4.34397e-09,0.105555,0.000598441,9.81751e-07,6.55696e-09,0.106155,0.000600424,1.00142e-06,-6.98272e-09,0.106756,0.000602406,9.80474e-07,6.4728e-09,0.107359,0.000604386,9.99893e-07,-4.00742e-09,0.107965,0.000606374,9.8787e-07,2.10654e-09,0.108572,0.000608356,9.9419e-07,3.0318e-09,0.109181,0.000610353,1.00329e-06,-6.7832e-09,0.109793,0.00061234,9.82936e-07,9.1998e-09,0.110406,0.000614333,1.01054e-06,-7.6642e-09,0.111021,0.000616331,9.87543e-07,6.55579e-09,0.111639,0.000618326,1.00721e-06,-3.65791e-09,0.112258,0.000620329,9.96236e-07,6.25467e-10,0.112879,0.000622324,9.98113e-07,1.15593e-09,0.113503,0.000624323,1.00158e-06,2.20158e-09,0.114128,0.000626333,1.00819e-06,-2.51191e-09,0.114755,0.000628342,1.00065e-06,3.95517e-10,0.115385,0.000630345,1.00184e-06,9.29807e-10,0.116016,0.000632351,1.00463e-06,3.33599e-09,0.116649,0.00063437,1.01463e-06,-6.82329e-09,0.117285,0.000636379,9.94163e-07,9.05595e-09,0.117922,0.000638395,1.02133e-06,-7.04862e-09,0.118562,0.000640416,1.00019e-06,4.23737e-09,0.119203,0.000642429,1.0129e-06,-2.45033e-09,0.119847,0.000644448,1.00555e-06,5.56395e-09,0.120492,0.000646475,1.02224e-06,-4.9043e-09,0.121139,0.000648505,1.00753e-06,-8.47952e-10,0.121789,0.000650518,1.00498e-06,8.29622e-09,0.122441,0.000652553,1.02987e-06,-9.98538e-09,0.123094,0.000654582,9.99914e-07,9.2936e-09,0.12375,0.00065661,1.02779e-06,-4.83707e-09,0.124407,0.000658651,1.01328e-06,2.60411e-09,0.125067,0.000660685,1.0211e-06,-5.57945e-09,0.125729,0.000662711,1.00436e-06,1.22631e-08,0.126392,0.000664756,1.04115e-06,-1.36704e-08,0.127058,0.000666798,1.00014e-06,1.26161e-08,0.127726,0.000668836,1.03798e-06,-6.99155e-09,0.128396,0.000670891,1.01701e-06,4.48836e-10,0.129068,0.000672926,1.01836e-06,5.19606e-09,0.129742,0.000674978,1.03394e-06,-6.3319e-09,0.130418,0.000677027,1.01495e-06,5.2305e-09,0.131096,0.000679073,1.03064e-06,3.11123e-10,0.131776,0.000681135,1.03157e-06,-6.47511e-09,0.132458,0.000683179,1.01215e-06,1.06882e-08,0.133142,0.000685235,1.04421e-06,-6.47519e-09,0.133829,0.000687304,1.02479e-06,3.11237e-10,0.134517,0.000689355,1.02572e-06,5.23035e-09,0.135207,0.000691422,1.04141e-06,-6.3316e-09,0.1359,0.000693486,1.02242e-06,5.19484e-09,0.136594,0.000695546,1.038e-06,4.53497e-10,0.137291,0.000697623,1.03936e-06,-7.00891e-09,0.137989,0.000699681,1.01834e-06,1.2681e-08,0.13869,0.000701756,1.05638e-06,-1.39128e-08,0.139393,0.000703827,1.01464e-06,1.31679e-08,0.140098,0.000705896,1.05414e-06,-8.95659e-09,0.140805,0.000707977,1.02727e-06,7.75742e-09,0.141514,0.000710055,1.05055e-06,-7.17182e-09,0.142225,0.000712135,1.02903e-06,6.02862e-09,0.142938,0.000714211,1.04712e-06,-2.04163e-09,0.143653,0.000716299,1.04099e-06,2.13792e-09,0.144371,0.000718387,1.04741e-06,-6.51009e-09,0.14509,0.000720462,1.02787e-06,9.00123e-09,0.145812,0.000722545,1.05488e-06,3.07523e-10,0.146535,0.000724656,1.0558e-06,-1.02312e-08,0.147261,0.000726737,1.02511e-06,1.0815e-08,0.147989,0.000728819,1.05755e-06,-3.22681e-09,0.148719,0.000730925,1.04787e-06,2.09244e-09,0.14945,0.000733027,1.05415e-06,-5.143e-09,0.150185,0.00073512,1.03872e-06,3.57844e-09,0.150921,0.000737208,1.04946e-06,5.73027e-09,0.151659,0.000739324,1.06665e-06,-1.15983e-08,0.152399,0.000741423,1.03185e-06,1.08605e-08,0.153142,0.000743519,1.06443e-06,-2.04106e-09,0.153886,0.000745642,1.05831e-06,-2.69642e-09,0.154633,0.00074775,1.05022e-06,-2.07425e-09,0.155382,0.000749844,1.044e-06,1.09934e-08,0.156133,0.000751965,1.07698e-06,-1.20972e-08,0.156886,0.000754083,1.04069e-06,7.59288e-09,0.157641,0.000756187,1.06347e-06,-3.37305e-09,0.158398,0.000758304,1.05335e-06,5.89921e-09,0.159158,0.000760428,1.07104e-06,-5.32248e-09,0.159919,0.000762554,1.05508e-06,4.8927e-10,0.160683,0.000764666,1.05654e-06,3.36547e-09,0.161448,0.000766789,1.06664e-06,9.50081e-10,0.162216,0.000768925,1.06949e-06,-7.16568e-09,0.162986,0.000771043,1.04799e-06,1.28114e-08,0.163758,0.000773177,1.08643e-06,-1.42774e-08,0.164533,0.000775307,1.0436e-06,1.44956e-08,0.165309,0.000777438,1.08708e-06,-1.39025e-08,0.166087,0.00077957,1.04538e-06,1.13118e-08,0.166868,0.000781695,1.07931e-06,-1.54224e-09,0.167651,0.000783849,1.07468e-06,-5.14312e-09,0.168436,0.000785983,1.05925e-06,7.21381e-09,0.169223,0.000788123,1.0809e-06,-8.81096e-09,0.170012,0.000790259,1.05446e-06,1.31289e-08,0.170803,0.000792407,1.09385e-06,-1.39022e-08,0.171597,0.000794553,1.05214e-06,1.26775e-08,0.172392,0.000796695,1.09018e-06,-7.00557e-09,0.17319,0.000798855,1.06916e-06,4.43796e-10,0.17399,0.000800994,1.07049e-06,5.23031e-09,0.174792,0.000803151,1.08618e-06,-6.46397e-09,0.175596,0.000805304,1.06679e-06,5.72444e-09,0.176403,0.000807455,1.08396e-06,-1.53254e-09,0.177211,0.000809618,1.07937e-06,4.05673e-10,0.178022,0.000811778,1.08058e-06,-9.01916e-11,0.178835,0.000813939,1.08031e-06,-4.49821e-11,0.17965,0.000816099,1.08018e-06,2.70234e-10,0.180467,0.00081826,1.08099e-06,-1.03603e-09,0.181286,0.000820419,1.07788e-06,3.87392e-09,0.182108,0.000822587,1.0895e-06,4.41522e-10,0.182932,0.000824767,1.09083e-06,-5.63997e-09,0.183758,0.000826932,1.07391e-06,7.21707e-09,0.184586,0.000829101,1.09556e-06,-8.32718e-09,0.185416,0.000831267,1.07058e-06,1.11907e-08,0.186248,0.000833442,1.10415e-06,-6.63336e-09,0.187083,0.00083563,1.08425e-06,4.41484e-10,0.187919,0.0008378,1.08557e-06,4.86754e-09,0.188758,0.000839986,1.10017e-06,-5.01041e-09,0.189599,0.000842171,1.08514e-06,2.72811e-10,0.190443,0.000844342,1.08596e-06,3.91916e-09,0.191288,0.000846526,1.09772e-06,-1.04819e-09,0.192136,0.000848718,1.09457e-06,2.73531e-10,0.192985,0.000850908,1.0954e-06,-4.58916e-11,0.193837,0.000853099,1.09526e-06,-9.01158e-11,0.194692,0.000855289,1.09499e-06,4.06506e-10,0.195548,0.00085748,1.09621e-06,-1.53595e-09,0.196407,0.000859668,1.0916e-06,5.73717e-09,0.197267,0.000861869,1.10881e-06,-6.51164e-09,0.19813,0.000864067,1.08928e-06,5.40831e-09,0.198995,0.000866261,1.1055e-06,-2.20401e-10,0.199863,0.000868472,1.10484e-06,-4.52652e-09,0.200732,0.000870668,1.09126e-06,3.42508e-09,0.201604,0.000872861,1.10153e-06,5.72762e-09,0.202478,0.000875081,1.11872e-06,-1.14344e-08,0.203354,0.000877284,1.08441e-06,1.02076e-08,0.204233,0.000879484,1.11504e-06,4.06355e-10,0.205113,0.000881715,1.11626e-06,-1.18329e-08,0.205996,0.000883912,1.08076e-06,1.71227e-08,0.206881,0.000886125,1.13213e-06,-1.19546e-08,0.207768,0.000888353,1.09626e-06,8.93465e-10,0.208658,0.000890548,1.09894e-06,8.38062e-09,0.209549,0.000892771,1.12408e-06,-4.61353e-09,0.210443,0.000895006,1.11024e-06,-4.82756e-09,0.211339,0.000897212,1.09576e-06,9.02245e-09,0.212238,0.00089943,1.12283e-06,-1.45997e-09,0.213138,0.000901672,1.11845e-06,-3.18255e-09,0.214041,0.000903899,1.1089e-06,-7.11073e-10,0.214946,0.000906115,1.10677e-06,6.02692e-09,0.215853,0.000908346,1.12485e-06,-8.49548e-09,0.216763,0.00091057,1.09936e-06,1.30537e-08,0.217675,0.000912808,1.13852e-06,-1.3917e-08,0.218588,0.000915044,1.09677e-06,1.28121e-08,0.219505,0.000917276,1.13521e-06,-7.5288e-09,0.220423,0.000919523,1.11262e-06,2.40205e-09,0.221344,0.000921756,1.11983e-06,-2.07941e-09,0.222267,0.000923989,1.11359e-06,5.91551e-09,0.223192,0.000926234,1.13134e-06,-6.68149e-09,0.224119,0.000928477,1.11129e-06,5.90929e-09,0.225049,0.000930717,1.12902e-06,-2.05436e-09,0.22598,0.000932969,1.12286e-06,2.30807e-09,0.226915,0.000935222,1.12978e-06,-7.17796e-09,0.227851,0.00093746,1.10825e-06,1.15028e-08,0.228789,0.000939711,1.14276e-06,-9.03083e-09,0.22973,0.000941969,1.11566e-06,9.71932e-09,0.230673,0.00094423,1.14482e-06,-1.49452e-08,0.231619,0.000946474,1.09998e-06,2.02591e-08,0.232566,0.000948735,1.16076e-06,-2.13879e-08,0.233516,0.000950993,1.0966e-06,2.05888e-08,0.234468,0.000953247,1.15837e-06,-1.62642e-08,0.235423,0.000955515,1.10957e-06,1.46658e-08,0.236379,0.000957779,1.15357e-06,-1.25966e-08,0.237338,0.000960048,1.11578e-06,5.91793e-09,0.238299,0.000962297,1.13353e-06,3.82602e-09,0.239263,0.000964576,1.14501e-06,-6.3208e-09,0.240229,0.000966847,1.12605e-06,6.55613e-09,0.241197,0.000969119,1.14572e-06,-5.00268e-09,0.242167,0.000971395,1.13071e-06,-1.44659e-09,0.243139,0.000973652,1.12637e-06,1.07891e-08,0.244114,0.000975937,1.15874e-06,-1.19073e-08,0.245091,0.000978219,1.12302e-06,7.03782e-09,0.246071,0.000980486,1.14413e-06,-1.34276e-09,0.247052,0.00098277,1.1401e-06,-1.66669e-09,0.248036,0.000985046,1.1351e-06,8.00935e-09,0.249022,0.00098734,1.15913e-06,-1.54694e-08,0.250011,0.000989612,1.11272e-06,2.4066e-08,0.251002,0.000991909,1.18492e-06,-2.11901e-08,0.251995,0.000994215,1.12135e-06,1.08973e-09,0.25299,0.000996461,1.12462e-06,1.68311e-08,0.253988,0.000998761,1.17511e-06,-8.8094e-09,0.254987,0.00100109,1.14868e-06,-1.13958e-08,0.25599,0.00100335,1.1145e-06,2.45902e-08,0.256994,0.00100565,1.18827e-06,-2.73603e-08,0.258001,0.00100795,1.10618e-06,2.52464e-08,0.25901,0.00101023,1.18192e-06,-1.40207e-08,0.260021,0.00101256,1.13986e-06,1.03387e-09,0.261035,0.00101484,1.14296e-06,9.8853e-09,0.262051,0.00101715,1.17262e-06,-1.07726e-08,0.263069,0.00101947,1.1403e-06,3.40272e-09,0.26409,0.00102176,1.15051e-06,-2.83827e-09,0.265113,0.00102405,1.142e-06,7.95039e-09,0.266138,0.00102636,1.16585e-06,8.39047e-10,0.267166,0.00102869,1.16836e-06,-1.13066e-08,0.268196,0.00103099,1.13444e-06,1.4585e-08,0.269228,0.00103331,1.1782e-06,-1.72314e-08,0.270262,0.00103561,1.1265e-06,2.45382e-08,0.271299,0.00103794,1.20012e-06,-2.13166e-08,0.272338,0.00104028,1.13617e-06,1.12364e-09,0.273379,0.00104255,1.13954e-06,1.68221e-08,0.274423,0.00104488,1.19001e-06,-8.80736e-09,0.275469,0.00104723,1.16358e-06,-1.13948e-08,0.276518,0.00104953,1.1294e-06,2.45839e-08,0.277568,0.00105186,1.20315e-06,-2.73361e-08,0.278621,0.00105418,1.12114e-06,2.51559e-08,0.279677,0.0010565,1.19661e-06,-1.36832e-08,0.280734,0.00105885,1.15556e-06,-2.25706e-10,0.281794,0.00106116,1.15488e-06,1.45862e-08,0.282857,0.00106352,1.19864e-06,-2.83167e-08,0.283921,0.00106583,1.11369e-06,3.90759e-08,0.284988,0.00106817,1.23092e-06,-3.85801e-08,0.286058,0.00107052,1.11518e-06,2.58375e-08,0.287129,0.00107283,1.19269e-06,-5.16498e-09,0.288203,0.0010752,1.1772e-06,-5.17768e-09,0.28928,0.00107754,1.16167e-06,-3.92671e-09,0.290358,0.00107985,1.14988e-06,2.08846e-08,0.29144,0.00108221,1.21254e-06,-2.00072e-08,0.292523,0.00108458,1.15252e-06,-4.60659e-10,0.293609,0.00108688,1.15114e-06,2.18499e-08,0.294697,0.00108925,1.21669e-06,-2.73343e-08,0.295787,0.0010916,1.13468e-06,2.78826e-08,0.29688,0.00109395,1.21833e-06,-2.45915e-08,0.297975,0.00109632,1.14456e-06,1.08787e-08,0.299073,0.00109864,1.17719e-06,1.08788e-08,0.300172,0.00110102,1.20983e-06,-2.45915e-08,0.301275,0.00110337,1.13605e-06,2.78828e-08,0.302379,0.00110573,1.2197e-06,-2.73348e-08,0.303486,0.00110808,1.1377e-06,2.18518e-08,0.304595,0.00111042,1.20325e-06,-4.67556e-10,0.305707,0.00111283,1.20185e-06,-1.99816e-08,0.306821,0.00111517,1.14191e-06,2.07891e-08,0.307937,0.00111752,1.20427e-06,-3.57026e-09,0.309056,0.00111992,1.19356e-06,-6.50797e-09,0.310177,0.00112228,1.17404e-06,-2.00165e-10,0.3113,0.00112463,1.17344e-06,7.30874e-09,0.312426,0.001127,1.19536e-06,7.67424e-10,0.313554,0.00112939,1.19767e-06,-1.03784e-08,0.314685,0.00113176,1.16653e-06,1.09437e-08,0.315818,0.00113412,1.19936e-06,-3.59406e-09,0.316953,0.00113651,1.18858e-06,3.43251e-09,0.318091,0.0011389,1.19888e-06,-1.0136e-08,0.319231,0.00114127,1.16847e-06,7.30915e-09,0.320374,0.00114363,1.1904e-06,1.07018e-08,0.321518,0.00114604,1.2225e-06,-2.03137e-08,0.322666,0.00114842,1.16156e-06,1.09484e-08,0.323815,0.00115078,1.19441e-06,6.32224e-09,0.324967,0.00115319,1.21337e-06,-6.43509e-09,0.326122,0.00115559,1.19407e-06,-1.03842e-08,0.327278,0.00115795,1.16291e-06,1.81697e-08,0.328438,0.00116033,1.21742e-06,-2.6901e-09,0.329599,0.00116276,1.20935e-06,-7.40939e-09,0.330763,0.00116515,1.18713e-06,2.52533e-09,0.331929,0.00116754,1.1947e-06,-2.69191e-09,0.333098,0.00116992,1.18663e-06,8.24218e-09,0.334269,0.00117232,1.21135e-06,-4.74377e-10,0.335443,0.00117474,1.20993e-06,-6.34471e-09,0.336619,0.00117714,1.1909e-06,-3.94922e-09,0.337797,0.00117951,1.17905e-06,2.21417e-08,0.338978,0.00118193,1.24547e-06,-2.50128e-08,0.340161,0.00118435,1.17043e-06,1.8305e-08,0.341346,0.00118674,1.22535e-06,-1.84048e-08,0.342534,0.00118914,1.17013e-06,2.55121e-08,0.343725,0.00119156,1.24667e-06,-2.40389e-08,0.344917,0.00119398,1.17455e-06,1.10389e-08,0.346113,0.00119636,1.20767e-06,9.68574e-09,0.34731,0.0011988,1.23673e-06,-1.99797e-08,0.34851,0.00120122,1.17679e-06,1.06284e-08,0.349713,0.0012036,1.20867e-06,7.26868e-09,0.350917,0.00120604,1.23048e-06,-9.90072e-09,0.352125,0.00120847,1.20078e-06,2.53177e-09,0.353334,0.00121088,1.20837e-06,-2.26199e-10,0.354546,0.0012133,1.20769e-06,-1.62705e-09,0.355761,0.00121571,1.20281e-06,6.73435e-09,0.356978,0.00121813,1.22302e-06,4.49207e-09,0.358197,0.00122059,1.23649e-06,-2.47027e-08,0.359419,0.00122299,1.16238e-06,3.47142e-08,0.360643,0.00122542,1.26653e-06,-2.47472e-08,0.36187,0.00122788,1.19229e-06,4.66965e-09,0.363099,0.00123028,1.20629e-06,6.06872e-09,0.36433,0.00123271,1.2245e-06,8.57729e-10,0.365564,0.00123516,1.22707e-06,-9.49952e-09,0.366801,0.00123759,1.19858e-06,7.33792e-09,0.36804,0.00124001,1.22059e-06,9.95025e-09,0.369281,0.00124248,1.25044e-06,-1.73366e-08,0.370525,0.00124493,1.19843e-06,-2.08464e-10,0.371771,0.00124732,1.1978e-06,1.81704e-08,0.373019,0.00124977,1.25232e-06,-1.28683e-08,0.37427,0.00125224,1.21371e-06,3.50042e-09,0.375524,0.00125468,1.22421e-06,-1.1335e-09,0.37678,0.00125712,1.22081e-06,1.03345e-09,0.378038,0.00125957,1.22391e-06,-3.00023e-09,0.379299,0.00126201,1.21491e-06,1.09676e-08,0.380562,0.00126447,1.24781e-06,-1.10676e-08,0.381828,0.00126693,1.21461e-06,3.50042e-09,0.383096,0.00126937,1.22511e-06,-2.93403e-09,0.384366,0.00127181,1.21631e-06,8.23574e-09,0.385639,0.00127427,1.24102e-06,-2.06607e-10,0.386915,0.00127675,1.2404e-06,-7.40935e-09,0.388193,0.00127921,1.21817e-06,4.1761e-11,0.389473,0.00128165,1.21829e-06,7.24223e-09,0.390756,0.0012841,1.24002e-06,7.91564e-10,0.392042,0.00128659,1.2424e-06,-1.04086e-08,0.393329,0.00128904,1.21117e-06,1.10405e-08,0.39462,0.0012915,1.24429e-06,-3.951e-09,0.395912,0.00129397,1.23244e-06,4.7634e-09,0.397208,0.00129645,1.24673e-06,-1.51025e-08,0.398505,0.0012989,1.20142e-06,2.58443e-08,0.399805,0.00130138,1.27895e-06,-2.86702e-08,0.401108,0.00130385,1.19294e-06,2.92318e-08,0.402413,0.00130632,1.28064e-06,-2.86524e-08,0.403721,0.0013088,1.19468e-06,2.57731e-08,0.405031,0.00131127,1.272e-06,-1.48355e-08,0.406343,0.00131377,1.2275e-06,3.76652e-09,0.407658,0.00131623,1.23879e-06,-2.30784e-10,0.408976,0.00131871,1.2381e-06,-2.84331e-09,0.410296,0.00132118,1.22957e-06,1.16041e-08,0.411618,0.00132367,1.26438e-06,-1.37708e-08,0.412943,0.00132616,1.22307e-06,1.36768e-08,0.41427,0.00132865,1.2641e-06,-1.1134e-08,0.4156,0.00133114,1.2307e-06,1.05714e-09,0.416933,0.00133361,1.23387e-06,6.90538e-09,0.418267,0.00133609,1.25459e-06,1.12372e-09,0.419605,0.00133861,1.25796e-06,-1.14002e-08,0.420945,0.00134109,1.22376e-06,1.46747e-08,0.422287,0.00134358,1.26778e-06,-1.7496e-08,0.423632,0.00134606,1.21529e-06,2.5507e-08,0.424979,0.00134857,1.29182e-06,-2.49272e-08,0.426329,0.00135108,1.21703e-06,1.45972e-08,0.427681,0.00135356,1.26083e-06,-3.65935e-09,0.429036,0.00135607,1.24985e-06,4.00178e-11,0.430393,0.00135857,1.24997e-06,3.49917e-09,0.431753,0.00136108,1.26047e-06,-1.40366e-08,0.433116,0.00136356,1.21836e-06,2.28448e-08,0.43448,0.00136606,1.28689e-06,-1.77378e-08,0.435848,0.00136858,1.23368e-06,1.83043e-08,0.437218,0.0013711,1.28859e-06,-2.56769e-08,0.43859,0.0013736,1.21156e-06,2.47987e-08,0.439965,0.0013761,1.28595e-06,-1.39133e-08,0.441342,0.00137863,1.24421e-06,1.05202e-09,0.442722,0.00138112,1.24737e-06,9.70507e-09,0.444104,0.00138365,1.27649e-06,-1.00698e-08,0.445489,0.00138617,1.24628e-06,7.72123e-10,0.446877,0.00138867,1.24859e-06,6.98132e-09,0.448267,0.00139118,1.26954e-06,1.10477e-09,0.449659,0.00139373,1.27285e-06,-1.14003e-08,0.451054,0.00139624,1.23865e-06,1.4694e-08,0.452452,0.00139876,1.28273e-06,-1.75734e-08,0.453852,0.00140127,1.23001e-06,2.5797e-08,0.455254,0.00140381,1.3074e-06,-2.60097e-08,0.456659,0.00140635,1.22937e-06,1.86371e-08,0.458067,0.00140886,1.28529e-06,-1.8736e-08,0.459477,0.00141137,1.22908e-06,2.65048e-08,0.46089,0.00141391,1.30859e-06,-2.76784e-08,0.462305,0.00141645,1.22556e-06,2.46043e-08,0.463722,0.00141897,1.29937e-06,-1.11341e-08,0.465143,0.00142154,1.26597e-06,-9.87033e-09,0.466565,0.00142404,1.23636e-06,2.08131e-08,0.467991,0.00142657,1.2988e-06,-1.37773e-08,0.469419,0.00142913,1.25746e-06,4.49378e-09,0.470849,0.00143166,1.27094e-06,-4.19781e-09,0.472282,0.00143419,1.25835e-06,1.22975e-08,0.473717,0.00143674,1.29524e-06,-1.51902e-08,0.475155,0.00143929,1.24967e-06,1.86608e-08,0.476596,0.00144184,1.30566e-06,-2.96506e-08,0.478039,0.00144436,1.2167e-06,4.03368e-08,0.479485,0.00144692,1.33771e-06,-4.22896e-08,0.480933,0.00144947,1.21085e-06,3.94148e-08,0.482384,0.00145201,1.32909e-06,-2.59626e-08,0.483837,0.00145459,1.2512e-06,4.83124e-09,0.485293,0.0014571,1.2657e-06,6.63757e-09,0.486751,0.00145966,1.28561e-06,-1.57911e-09,0.488212,0.00146222,1.28087e-06,-3.21468e-10,0.489676,0.00146478,1.27991e-06,2.86517e-09,0.491142,0.00146735,1.2885e-06,-1.11392e-08,0.49261,0.00146989,1.25508e-06,1.18893e-08,0.494081,0.00147244,1.29075e-06,-6.61574e-09,0.495555,0.001475,1.27091e-06,1.45736e-08,0.497031,0.00147759,1.31463e-06,-2.18759e-08,0.49851,0.00148015,1.249e-06,1.33252e-08,0.499992,0.00148269,1.28897e-06,-1.62277e-09,0.501476,0.00148526,1.28411e-06,-6.83421e-09,0.502962,0.00148781,1.2636e-06,2.89596e-08,0.504451,0.00149042,1.35048e-06,-4.93997e-08,0.505943,0.00149298,1.20228e-06,4.94299e-08,0.507437,0.00149553,1.35057e-06,-2.91107e-08,0.508934,0.00149814,1.26324e-06,7.40848e-09,0.510434,0.00150069,1.28547e-06,-5.23187e-10,0.511936,0.00150326,1.2839e-06,-5.31585e-09,0.51344,0.00150581,1.26795e-06,2.17866e-08,0.514947,0.00150841,1.33331e-06,-2.22257e-08,0.516457,0.00151101,1.26663e-06,7.51178e-09,0.517969,0.00151357,1.28917e-06,-7.82128e-09,0.519484,0.00151613,1.2657e-06,2.37733e-08,0.521002,0.00151873,1.33702e-06,-2.76674e-08,0.522522,0.00152132,1.25402e-06,2.72917e-08,0.524044,0.00152391,1.3359e-06,-2.18949e-08,0.525569,0.00152652,1.27021e-06,6.83372e-10,0.527097,0.00152906,1.27226e-06,1.91613e-08,0.528628,0.00153166,1.32974e-06,-1.77241e-08,0.53016,0.00153427,1.27657e-06,-7.86963e-09,0.531696,0.0015368,1.25296e-06,4.92027e-08,0.533234,0.00153945,1.40057e-06,-6.9732e-08,0.534775,0.00154204,1.19138e-06,5.09114e-08,0.536318,0.00154458,1.34411e-06,-1.4704e-08,0.537864,0.00154722,1.3e-06,7.9048e-09,0.539413,0.00154984,1.32371e-06,-1.69152e-08,0.540964,0.00155244,1.27297e-06,1.51355e-10,0.542517,0.00155499,1.27342e-06,1.63099e-08,0.544074,0.00155758,1.32235e-06,-5.78647e-09,0.545633,0.00156021,1.30499e-06,6.83599e-09,0.547194,0.00156284,1.3255e-06,-2.15575e-08,0.548758,0.00156543,1.26083e-06,1.97892e-08,0.550325,0.00156801,1.32019e-06,2.00525e-09,0.551894,0.00157065,1.32621e-06,-2.78103e-08,0.553466,0.00157322,1.24278e-06,4.96314e-08,0.555041,0.00157586,1.39167e-06,-5.1506e-08,0.556618,0.00157849,1.23716e-06,3.71835e-08,0.558198,0.00158107,1.34871e-06,-3.76233e-08,0.55978,0.00158366,1.23584e-06,5.37052e-08,0.561365,0.00158629,1.39695e-06,-5.79884e-08,0.562953,0.00158891,1.22299e-06,5.90392e-08,0.564543,0.00159153,1.4001e-06,-5.89592e-08,0.566136,0.00159416,1.22323e-06,5.7588e-08,0.567731,0.00159678,1.39599e-06,-5.21835e-08,0.569329,0.00159941,1.23944e-06,3.19369e-08,0.57093,0.00160199,1.33525e-06,-1.59594e-08,0.572533,0.00160461,1.28737e-06,3.19006e-08,0.574139,0.00160728,1.38307e-06,-5.20383e-08,0.575748,0.00160989,1.22696e-06,5.70431e-08,0.577359,0.00161251,1.39809e-06,-5.69247e-08,0.578973,0.00161514,1.22731e-06,5.14463e-08,0.580589,0.00161775,1.38165e-06,-2.9651e-08,0.582208,0.00162042,1.2927e-06,7.55339e-09,0.58383,0.00162303,1.31536e-06,-5.62636e-10,0.585455,0.00162566,1.31367e-06,-5.30281e-09,0.587081,0.00162827,1.29776e-06,2.17738e-08,0.588711,0.00163093,1.36309e-06,-2.21875e-08,0.590343,0.00163359,1.29652e-06,7.37164e-09,0.591978,0.00163621,1.31864e-06,-7.29907e-09,0.593616,0.00163882,1.29674e-06,2.18247e-08,0.595256,0.00164148,1.36221e-06,-2.03952e-08,0.596899,0.00164414,1.30103e-06,1.51241e-10,0.598544,0.00164675,1.30148e-06,1.97902e-08,0.600192,0.00164941,1.36085e-06,-1.97074e-08,0.601843,0.00165207,1.30173e-06,-5.65175e-10,0.603496,0.00165467,1.30004e-06,2.1968e-08,0.605152,0.00165734,1.36594e-06,-2.77024e-08,0.606811,0.00165999,1.28283e-06,2.92369e-08,0.608472,0.00166264,1.37054e-06,-2.96407e-08,0.610136,0.00166529,1.28162e-06,2.97215e-08,0.611803,0.00166795,1.37079e-06,-2.96408e-08,0.613472,0.0016706,1.28186e-06,2.92371e-08,0.615144,0.00167325,1.36957e-06,-2.77031e-08,0.616819,0.00167591,1.28647e-06,2.19708e-08,0.618496,0.00167855,1.35238e-06,-5.75407e-10,0.620176,0.00168125,1.35065e-06,-1.9669e-08,0.621858,0.00168389,1.29164e-06,1.96468e-08,0.623544,0.00168653,1.35058e-06,6.86403e-10,0.625232,0.00168924,1.35264e-06,-2.23924e-08,0.626922,0.00169187,1.28547e-06,2.92788e-08,0.628615,0.00169453,1.3733e-06,-3.51181e-08,0.630311,0.00169717,1.26795e-06,5.15889e-08,0.63201,0.00169987,1.42272e-06,-5.2028e-08,0.633711,0.00170255,1.26663e-06,3.73139e-08,0.635415,0.0017052,1.37857e-06,-3.76227e-08,0.637121,0.00170784,1.2657e-06,5.35722e-08,0.63883,0.00171054,1.42642e-06,-5.74567e-08,0.640542,0.00171322,1.25405e-06,5.70456e-08,0.642257,0.0017159,1.42519e-06,-5.15163e-08,0.643974,0.00171859,1.27064e-06,2.98103e-08,0.645694,0.00172122,1.36007e-06,-8.12016e-09,0.647417,0.00172392,1.33571e-06,2.67039e-09,0.649142,0.0017266,1.34372e-06,-2.56152e-09,0.65087,0.00172928,1.33604e-06,7.57571e-09,0.6526,0.00173197,1.35876e-06,-2.77413e-08,0.654334,0.00173461,1.27554e-06,4.3785e-08,0.65607,0.00173729,1.40689e-06,-2.81896e-08,0.657808,0.00174002,1.32233e-06,9.36893e-09,0.65955,0.00174269,1.35043e-06,-9.28617e-09,0.661294,0.00174536,1.32257e-06,2.77757e-08,0.66304,0.00174809,1.4059e-06,-4.2212e-08,0.66479,0.00175078,1.27926e-06,2.1863e-08,0.666542,0.0017534,1.34485e-06,1.43648e-08,0.668297,0.00175613,1.38795e-06,-1.97177e-08,0.670054,0.00175885,1.3288e-06,4.90115e-09,0.671814,0.00176152,1.3435e-06,1.13232e-10,0.673577,0.00176421,1.34384e-06,-5.3542e-09,0.675343,0.00176688,1.32778e-06,2.13035e-08,0.677111,0.0017696,1.39169e-06,-2.02553e-08,0.678882,0.00177232,1.33092e-06,1.13005e-10,0.680656,0.00177499,1.33126e-06,1.98031e-08,0.682432,0.00177771,1.39067e-06,-1.97211e-08,0.684211,0.00178043,1.33151e-06,-5.2349e-10,0.685993,0.00178309,1.32994e-06,2.18151e-08,0.687777,0.00178582,1.39538e-06,-2.71325e-08,0.689564,0.00178853,1.31398e-06,2.71101e-08,0.691354,0.00179124,1.39531e-06,-2.17035e-08,0.693147,0.00179396,1.3302e-06,9.92865e-11,0.694942,0.00179662,1.3305e-06,2.13063e-08,0.69674,0.00179935,1.39442e-06,-2.57198e-08,0.698541,0.00180206,1.31726e-06,2.19682e-08,0.700344,0.00180476,1.38317e-06,-2.54852e-09,0.70215,0.00180752,1.37552e-06,-1.17741e-08,0.703959,0.00181023,1.3402e-06,-9.95999e-09,0.705771,0.00181288,1.31032e-06,5.16141e-08,0.707585,0.00181566,1.46516e-06,-7.72869e-08,0.709402,0.00181836,1.2333e-06,7.87197e-08,0.711222,0.00182106,1.46946e-06,-5.87781e-08,0.713044,0.00182382,1.29312e-06,3.71834e-08,0.714869,0.00182652,1.40467e-06,-3.03511e-08,0.716697,0.00182924,1.31362e-06,2.46161e-08,0.718528,0.00183194,1.38747e-06,-8.5087e-09,0.720361,0.00183469,1.36194e-06,9.41892e-09,0.722197,0.00183744,1.3902e-06,-2.91671e-08,0.724036,0.00184014,1.3027e-06,4.76448e-08,0.725878,0.00184288,1.44563e-06,-4.22028e-08,0.727722,0.00184565,1.31902e-06,1.95682e-09,0.729569,0.00184829,1.3249e-06,3.43754e-08,0.731419,0.00185104,1.42802e-06,-2.0249e-08,0.733271,0.00185384,1.36727e-06,-1.29838e-08,0.735126,0.00185654,1.32832e-06,1.25794e-08,0.736984,0.00185923,1.36606e-06,2.22711e-08,0.738845,0.00186203,1.43287e-06,-4.20594e-08,0.740708,0.00186477,1.3067e-06,2.67571e-08,0.742574,0.00186746,1.38697e-06,-5.36424e-09,0.744443,0.00187022,1.37087e-06,-5.30023e-09,0.746315,0.00187295,1.35497e-06,2.65653e-08,0.748189,0.00187574,1.43467e-06,-4.13564e-08,0.750066,0.00187848,1.3106e-06,1.9651e-08,0.751946,0.00188116,1.36955e-06,2.23572e-08,0.753828,0.00188397,1.43663e-06,-4.9475e-08,0.755714,0.00188669,1.2882e-06,5.63335e-08,0.757602,0.00188944,1.4572e-06,-5.66499e-08,0.759493,0.00189218,1.28725e-06,5.10567e-08,0.761386,0.00189491,1.44042e-06,-2.83677e-08,0.763283,0.00189771,1.35532e-06,2.80962e-09,0.765182,0.00190042,1.36375e-06,1.71293e-08,0.767083,0.0019032,1.41513e-06,-1.17221e-08,0.768988,0.001906,1.37997e-06,-2.98453e-08,0.770895,0.00190867,1.29043e-06,7.14987e-08,0.772805,0.00191146,1.50493e-06,-7.73354e-08,0.774718,0.00191424,1.27292e-06,5.90292e-08,0.776634,0.00191697,1.45001e-06,-3.9572e-08,0.778552,0.00191975,1.33129e-06,3.9654e-08,0.780473,0.00192253,1.45026e-06,-5.94395e-08,0.782397,0.00192525,1.27194e-06,7.88945e-08,0.784324,0.00192803,1.50862e-06,-7.73249e-08,0.786253,0.00193082,1.27665e-06,5.15913e-08,0.788185,0.00193352,1.43142e-06,-9.83099e-09,0.79012,0.00193636,1.40193e-06,-1.22672e-08,0.792058,0.00193912,1.36513e-06,-7.05275e-10,0.793999,0.00194185,1.36301e-06,1.50883e-08,0.795942,0.00194462,1.40828e-06,-4.33147e-11,0.797888,0.00194744,1.40815e-06,-1.49151e-08,0.799837,0.00195021,1.3634e-06,9.93244e-11,0.801788,0.00195294,1.3637e-06,1.45179e-08,0.803743,0.00195571,1.40725e-06,1.43363e-09,0.8057,0.00195853,1.41155e-06,-2.02525e-08,0.80766,0.00196129,1.35079e-06,1.99718e-08,0.809622,0.00196405,1.41071e-06,-3.01649e-11,0.811588,0.00196687,1.41062e-06,-1.9851e-08,0.813556,0.00196964,1.35107e-06,1.98296e-08,0.815527,0.0019724,1.41056e-06,1.37485e-10,0.817501,0.00197522,1.41097e-06,-2.03796e-08,0.819477,0.00197798,1.34983e-06,2.17763e-08,0.821457,0.00198074,1.41516e-06,-7.12085e-09,0.823439,0.00198355,1.3938e-06,6.70707e-09,0.825424,0.00198636,1.41392e-06,-1.97074e-08,0.827412,0.00198913,1.35479e-06,1.25179e-08,0.829402,0.00199188,1.39235e-06,2.92405e-08,0.831396,0.00199475,1.48007e-06,-6.98755e-08,0.833392,0.0019975,1.27044e-06,7.14477e-08,0.835391,0.00200026,1.48479e-06,-3.71014e-08,0.837392,0.00200311,1.37348e-06,1.73533e-08,0.839397,0.00200591,1.42554e-06,-3.23118e-08,0.841404,0.00200867,1.32861e-06,5.2289e-08,0.843414,0.00201148,1.48547e-06,-5.76348e-08,0.845427,0.00201428,1.31257e-06,5.9041e-08,0.847443,0.00201708,1.48969e-06,-5.93197e-08,0.849461,0.00201988,1.31173e-06,5.90289e-08,0.851482,0.00202268,1.48882e-06,-5.75864e-08,0.853507,0.00202549,1.31606e-06,5.21075e-08,0.855533,0.00202828,1.47238e-06,-3.16344e-08,0.857563,0.00203113,1.37748e-06,1.48257e-08,0.859596,0.00203393,1.42196e-06,-2.76684e-08,0.861631,0.00203669,1.33895e-06,3.62433e-08,0.863669,0.00203947,1.44768e-06,1.90463e-09,0.86571,0.00204237,1.45339e-06,-4.38617e-08,0.867754,0.00204515,1.32181e-06,5.43328e-08,0.8698,0.00204796,1.48481e-06,-5.42603e-08,0.87185,0.00205076,1.32203e-06,4.34989e-08,0.873902,0.00205354,1.45252e-06,-5.26029e-10,0.875957,0.00205644,1.45095e-06,-4.13949e-08,0.878015,0.00205922,1.32676e-06,4.68962e-08,0.880075,0.00206201,1.46745e-06,-2.69807e-08,0.882139,0.00206487,1.38651e-06,1.42181e-09,0.884205,0.00206764,1.39077e-06,2.12935e-08,0.886274,0.00207049,1.45465e-06,-2.69912e-08,0.888346,0.00207332,1.37368e-06,2.70664e-08,0.890421,0.00207615,1.45488e-06,-2.16698e-08,0.892498,0.00207899,1.38987e-06,8.14756e-12,0.894579,0.00208177,1.38989e-06,2.16371e-08,0.896662,0.00208462,1.45481e-06,-2.6952e-08,0.898748,0.00208744,1.37395e-06,2.65663e-08,0.900837,0.00209027,1.45365e-06,-1.97084e-08,0.902928,0.00209312,1.39452e-06,-7.33731e-09,0.905023,0.00209589,1.37251e-06,4.90578e-08,0.90712,0.00209878,1.51968e-06,-6.96845e-08,0.90922,0.00210161,1.31063e-06,5.08664e-08,0.911323,0.00210438,1.46323e-06,-1.45717e-08,0.913429,0.00210727,1.41952e-06,7.42038e-09,0.915538,0.00211013,1.44178e-06,-1.51097e-08,0.917649,0.00211297,1.39645e-06,-6.58618e-09,0.919764,0.00211574,1.37669e-06,4.14545e-08,0.921881,0.00211862,1.50105e-06,-4.00222e-08,0.924001,0.0021215,1.38099e-06,-5.7518e-10,0.926124,0.00212426,1.37926e-06,4.23229e-08,0.92825,0.00212714,1.50623e-06,-4.9507e-08,0.930378,0.00213001,1.35771e-06,3.64958e-08,0.93251,0.00213283,1.4672e-06,-3.68713e-08,0.934644,0.00213566,1.35658e-06,5.13848e-08,0.936781,0.00213852,1.51074e-06,-4.94585e-08,0.938921,0.0021414,1.36236e-06,2.72399e-08,0.941064,0.0021442,1.44408e-06,1.0372e-10,0.943209,0.00214709,1.44439e-06,-2.76547e-08,0.945358,0.0021499,1.36143e-06,5.09106e-08,0.947509,0.00215277,1.51416e-06,-5.67784e-08,0.949663,0.00215563,1.34382e-06,5.69935e-08,0.95182,0.00215849,1.5148e-06,-5.19861e-08,0.95398,0.00216136,1.35885e-06,3.17417e-08,0.956143,0.00216418,1.45407e-06,-1.53758e-08,0.958309,0.00216704,1.40794e-06,2.97615e-08,0.960477,0.00216994,1.49723e-06,-4.40657e-08,0.962649,0.00217281,1.36503e-06,2.72919e-08,0.964823,0.00217562,1.44691e-06,-5.49729e-09,0.967,0.0021785,1.43041e-06,-5.30273e-09,0.96918,0.00218134,1.41451e-06,2.67084e-08,0.971363,0.00218425,1.49463e-06,-4.19265e-08,0.973548,0.00218711,1.36885e-06,2.17881e-08,0.975737,0.00218992,1.43422e-06,1.43789e-08,0.977928,0.00219283,1.47735e-06,-1.96989e-08,0.980122,0.00219572,1.41826e-06,4.81221e-09,0.98232,0.00219857,1.43269e-06,4.50048e-10,0.98452,0.00220144,1.43404e-06,-6.61237e-09,0.986722,0.00220429,1.41421e-06,2.59993e-08,0.988928,0.0022072,1.4922e-06,-3.77803e-08,0.991137,0.00221007,1.37886e-06,5.9127e-09,0.993348,0.00221284,1.3966e-06,1.33339e-07,0.995563,0.00221604,1.79662e-06,-5.98872e-07,0.99778,0.00222015,0.,0.};$/;"	m	namespace:cv::cuda::device::color_detail
c_sRGBGammaTab	opencv2/cudev/functional/detail/color_cvt.hpp	/^    __constant__ float c_sRGBGammaTab[] = {0,7.55853e-05,0.,-7.51331e-13,7.55853e-05,7.55853e-05,-2.25399e-12,3.75665e-12,0.000151171,7.55853e-05,9.01597e-12,-6.99932e-12,0.000226756,7.55853e-05,-1.1982e-11,2.41277e-12,0.000302341,7.55853e-05,-4.74369e-12,1.19001e-11,0.000377927,7.55853e-05,3.09568e-11,-2.09095e-11,0.000453512,7.55853e-05,-3.17718e-11,1.35303e-11,0.000529097,7.55853e-05,8.81905e-12,-4.10782e-12,0.000604683,7.55853e-05,-3.50439e-12,2.90097e-12,0.000680268,7.55853e-05,5.19852e-12,-7.49607e-12,0.000755853,7.55853e-05,-1.72897e-11,2.70833e-11,0.000831439,7.55854e-05,6.39602e-11,-4.26295e-11,0.000907024,7.55854e-05,-6.39282e-11,2.70193e-11,0.000982609,7.55853e-05,1.71298e-11,-7.24017e-12,0.00105819,7.55853e-05,-4.59077e-12,1.94137e-12,0.00113378,7.55853e-05,1.23333e-12,-5.25291e-13,0.00120937,7.55853e-05,-3.42545e-13,1.59799e-13,0.00128495,7.55853e-05,1.36852e-13,-1.13904e-13,0.00136054,7.55853e-05,-2.04861e-13,2.95818e-13,0.00143612,7.55853e-05,6.82594e-13,-1.06937e-12,0.00151171,7.55853e-05,-2.52551e-12,3.98166e-12,0.00158729,7.55853e-05,9.41946e-12,-1.48573e-11,0.00166288,7.55853e-05,-3.51523e-11,5.54474e-11,0.00173846,7.55854e-05,1.3119e-10,-9.0517e-11,0.00181405,7.55854e-05,-1.40361e-10,7.37899e-11,0.00188963,7.55853e-05,8.10085e-11,-8.82272e-11,0.00196522,7.55852e-05,-1.83673e-10,1.62704e-10,0.0020408,7.55853e-05,3.04438e-10,-2.13341e-10,0.00211639,7.55853e-05,-3.35586e-10,2.25e-10,0.00219197,7.55853e-05,3.39414e-10,-2.20997e-10,0.00226756,7.55853e-05,-3.23576e-10,1.93326e-10,0.00234315,7.55853e-05,2.564e-10,-8.66446e-11,0.00241873,7.55855e-05,-3.53328e-12,-7.9578e-11,0.00249432,7.55853e-05,-2.42267e-10,1.72126e-10,0.0025699,7.55853e-05,2.74111e-10,-1.43265e-10,0.00264549,7.55854e-05,-1.55683e-10,-6.47292e-11,0.00272107,7.55849e-05,-3.4987e-10,8.67842e-10,0.00279666,7.55868e-05,2.25366e-09,-3.8723e-09,0.00287224,7.55797e-05,-9.36325e-09,1.5087e-08,0.00294783,7.56063e-05,3.58978e-08,-5.69415e-08,0.00302341,7.55072e-05,-1.34927e-07,2.13144e-07,0.003099,7.58768e-05,5.04507e-07,1.38713e-07,0.00317552,7.7302e-05,9.20646e-07,-1.55186e-07,0.00325359,7.86777e-05,4.55087e-07,4.26813e-08,0.00333276,7.97159e-05,5.83131e-07,-1.06495e-08,0.00341305,8.08502e-05,5.51182e-07,3.87467e-09,0.00349446,8.19642e-05,5.62806e-07,-1.92586e-10,0.00357698,8.30892e-05,5.62228e-07,1.0866e-09,0.00366063,8.4217e-05,5.65488e-07,5.02818e-10,0.00374542,8.53494e-05,5.66997e-07,8.60211e-10,0.00383133,8.6486e-05,5.69577e-07,7.13044e-10,0.00391839,8.76273e-05,5.71716e-07,4.78527e-10,0.00400659,8.87722e-05,5.73152e-07,1.09818e-09,0.00409594,8.99218e-05,5.76447e-07,2.50964e-10,0.00418644,9.10754e-05,5.772e-07,1.15762e-09,0.00427809,9.22333e-05,5.80672e-07,2.40865e-10,0.0043709,9.33954e-05,5.81395e-07,1.13854e-09,0.00446488,9.45616e-05,5.84811e-07,3.27267e-10,0.00456003,9.57322e-05,5.85792e-07,8.1197e-10,0.00465635,9.69062e-05,5.88228e-07,6.15823e-10,0.00475384,9.80845e-05,5.90076e-07,9.15747e-10,0.00485252,9.92674e-05,5.92823e-07,3.778e-10,0.00495238,0.000100454,5.93956e-07,8.32623e-10,0.00505343,0.000101645,5.96454e-07,4.82695e-10,0.00515567,0.000102839,5.97902e-07,9.61904e-10,0.00525911,0.000104038,6.00788e-07,3.26281e-10,0.00536375,0.00010524,6.01767e-07,9.926e-10,0.00546959,0.000106447,6.04745e-07,3.59933e-10,0.00557664,0.000107657,6.05824e-07,8.2728e-10,0.0056849,0.000108871,6.08306e-07,5.21898e-10,0.00579438,0.00011009,6.09872e-07,8.10492e-10,0.00590508,0.000111312,6.12303e-07,4.27046e-10,0.00601701,0.000112538,6.13585e-07,7.40878e-10,0.00613016,0.000113767,6.15807e-07,8.00469e-10,0.00624454,0.000115001,6.18209e-07,2.48178e-10,0.00636016,0.000116238,6.18953e-07,1.00073e-09,0.00647702,0.000117479,6.21955e-07,4.05654e-10,0.00659512,0.000118724,6.23172e-07,6.36192e-10,0.00671447,0.000119973,6.25081e-07,7.74927e-10,0.00683507,0.000121225,6.27406e-07,4.54975e-10,0.00695692,0.000122481,6.28771e-07,6.64841e-10,0.00708003,0.000123741,6.30765e-07,6.10972e-10,0.00720441,0.000125004,6.32598e-07,6.16543e-10,0.00733004,0.000126271,6.34448e-07,6.48204e-10,0.00745695,0.000127542,6.36392e-07,5.15835e-10,0.00758513,0.000128816,6.3794e-07,5.48103e-10,0.00771458,0.000130094,6.39584e-07,1.01706e-09,0.00784532,0.000131376,6.42635e-07,4.0283e-11,0.00797734,0.000132661,6.42756e-07,6.84471e-10,0.00811064,0.000133949,6.4481e-07,9.47144e-10,0.00824524,0.000135241,6.47651e-07,1.83472e-10,0.00838112,0.000136537,6.48201e-07,1.11296e-09,0.00851831,0.000137837,6.5154e-07,2.13163e-11,0.0086568,0.00013914,6.51604e-07,6.64462e-10,0.00879659,0.000140445,6.53598e-07,1.04613e-09,0.00893769,0.000141756,6.56736e-07,-1.92377e-10,0.0090801,0.000143069,6.56159e-07,1.58601e-09,0.00922383,0.000144386,6.60917e-07,-5.63754e-10,0.00936888,0.000145706,6.59226e-07,1.60033e-09,0.00951524,0.000147029,6.64027e-07,-2.49543e-10,0.00966294,0.000148356,6.63278e-07,1.26043e-09,0.00981196,0.000149687,6.67059e-07,-1.35572e-10,0.00996231,0.00015102,6.66653e-07,1.14458e-09,0.010114,0.000152357,6.70086e-07,2.13864e-10,0.010267,0.000153698,6.70728e-07,7.93856e-10,0.0104214,0.000155042,6.73109e-07,3.36077e-10,0.0105771,0.000156389,6.74118e-07,6.55765e-10,0.0107342,0.000157739,6.76085e-07,7.66211e-10,0.0108926,0.000159094,6.78384e-07,4.66116e-12,0.0110524,0.000160451,6.78398e-07,1.07775e-09,0.0112135,0.000161811,6.81631e-07,3.41023e-10,0.011376,0.000163175,6.82654e-07,3.5205e-10,0.0115398,0.000164541,6.8371e-07,1.04473e-09,0.0117051,0.000165912,6.86844e-07,1.25757e-10,0.0118717,0.000167286,6.87222e-07,3.14818e-10,0.0120396,0.000168661,6.88166e-07,1.40886e-09,0.012209,0.000170042,6.92393e-07,-3.62244e-10,0.0123797,0.000171425,6.91306e-07,9.71397e-10,0.0125518,0.000172811,6.9422e-07,2.02003e-10,0.0127253,0.0001742,6.94826e-07,1.01448e-09,0.0129002,0.000175593,6.97869e-07,3.96653e-10,0.0130765,0.00017699,6.99059e-07,1.92927e-10,0.0132542,0.000178388,6.99638e-07,6.94305e-10,0.0134333,0.00017979,7.01721e-07,7.55108e-10,0.0136138,0.000181195,7.03986e-07,1.05918e-11,0.0137957,0.000182603,7.04018e-07,1.06513e-09,0.013979,0.000184015,7.07214e-07,3.85512e-10,0.0141637,0.00018543,7.0837e-07,1.86769e-10,0.0143499,0.000186848,7.0893e-07,7.30116e-10,0.0145374,0.000188268,7.11121e-07,6.17983e-10,0.0147264,0.000189692,7.12975e-07,5.23282e-10,0.0149168,0.000191119,7.14545e-07,8.28398e-11,0.0151087,0.000192549,7.14793e-07,1.0081e-09,0.0153019,0.000193981,7.17817e-07,5.41244e-10,0.0154966,0.000195418,7.19441e-07,-3.7907e-10,0.0156928,0.000196856,7.18304e-07,1.90641e-09,0.0158903,0.000198298,7.24023e-07,-7.27387e-10,0.0160893,0.000199744,7.21841e-07,1.00317e-09,0.0162898,0.000201191,7.24851e-07,4.39949e-10,0.0164917,0.000202642,7.2617e-07,9.6234e-10,0.0166951,0.000204097,7.29057e-07,-5.64019e-10,0.0168999,0.000205554,7.27365e-07,1.29374e-09,0.0171062,0.000207012,7.31247e-07,9.77025e-10,0.017314,0.000208478,7.34178e-07,-1.47651e-09,0.0175232,0.000209942,7.29748e-07,3.06636e-09,0.0177338,0.00021141,7.38947e-07,-1.47573e-09,0.017946,0.000212884,7.3452e-07,9.7386e-10,0.0181596,0.000214356,7.37442e-07,1.30562e-09,0.0183747,0.000215835,7.41358e-07,-6.08376e-10,0.0185913,0.000217315,7.39533e-07,1.12785e-09,0.0188093,0.000218798,7.42917e-07,-1.77711e-10,0.0190289,0.000220283,7.42384e-07,1.44562e-09,0.0192499,0.000221772,7.46721e-07,-1.68825e-11,0.0194724,0.000223266,7.4667e-07,4.84533e-10,0.0196964,0.000224761,7.48124e-07,-5.85298e-11,0.0199219,0.000226257,7.47948e-07,1.61217e-09,0.0201489,0.000227757,7.52785e-07,-8.02136e-10,0.0203775,0.00022926,7.50378e-07,1.59637e-09,0.0206075,0.000230766,7.55167e-07,4.47168e-12,0.020839,0.000232276,7.55181e-07,2.48387e-10,0.021072,0.000233787,7.55926e-07,8.6474e-10,0.0213066,0.000235302,7.5852e-07,1.78299e-11,0.0215426,0.000236819,7.58573e-07,9.26567e-10,0.0217802,0.000238339,7.61353e-07,1.34529e-12,0.0220193,0.000239862,7.61357e-07,9.30659e-10,0.0222599,0.000241387,7.64149e-07,1.34529e-12,0.0225021,0.000242915,7.64153e-07,9.26567e-10,0.0227458,0.000244447,7.66933e-07,1.76215e-11,0.022991,0.00024598,7.66986e-07,8.65536e-10,0.0232377,0.000247517,7.69582e-07,2.45677e-10,0.023486,0.000249057,7.70319e-07,1.44193e-11,0.0237358,0.000250598,7.70363e-07,1.55918e-09,0.0239872,0.000252143,7.7504e-07,-6.63173e-10,0.0242401,0.000253691,7.73051e-07,1.09357e-09,0.0244946,0.000255241,7.76331e-07,1.41919e-11,0.0247506,0.000256793,7.76374e-07,7.12248e-10,0.0250082,0.000258348,7.78511e-07,8.62049e-10,0.0252673,0.000259908,7.81097e-07,-4.35061e-10,0.025528,0.000261469,7.79792e-07,8.7825e-10,0.0257902,0.000263031,7.82426e-07,6.47181e-10,0.0260541,0.000264598,7.84368e-07,2.58448e-10,0.0263194,0.000266167,7.85143e-07,1.81558e-10,0.0265864,0.000267738,7.85688e-07,8.78041e-10,0.0268549,0.000269312,7.88322e-07,3.15102e-11,0.027125,0.000270889,7.88417e-07,8.58525e-10,0.0273967,0.000272468,7.90992e-07,2.59812e-10,0.02767,0.000274051,7.91772e-07,-3.5224e-11,0.0279448,0.000275634,7.91666e-07,1.74377e-09,0.0282212,0.000277223,7.96897e-07,-1.35196e-09,0.0284992,0.000278813,7.92841e-07,1.80141e-09,0.0287788,0.000280404,7.98246e-07,-2.65629e-10,0.0290601,0.000281999,7.97449e-07,1.12374e-09,0.0293428,0.000283598,8.0082e-07,-5.04106e-10,0.0296272,0.000285198,7.99308e-07,8.92764e-10,0.0299132,0.000286799,8.01986e-07,6.58379e-10,0.0302008,0.000288405,8.03961e-07,1.98971e-10,0.0304901,0.000290014,8.04558e-07,4.08382e-10,0.0307809,0.000291624,8.05783e-07,3.01839e-11,0.0310733,0.000293236,8.05874e-07,1.33343e-09,0.0313673,0.000294851,8.09874e-07,2.2419e-10,0.031663,0.000296472,8.10547e-07,-3.67606e-10,0.0319603,0.000298092,8.09444e-07,1.24624e-09,0.0322592,0.000299714,8.13182e-07,-8.92025e-10,0.0325597,0.000301338,8.10506e-07,2.32183e-09,0.0328619,0.000302966,8.17472e-07,-9.44719e-10,0.0331657,0.000304598,8.14638e-07,1.45703e-09,0.0334711,0.000306232,8.19009e-07,-1.15805e-09,0.0337781,0.000307866,8.15535e-07,3.17507e-09,0.0340868,0.000309507,8.2506e-07,-4.09161e-09,0.0343971,0.000311145,8.12785e-07,5.74079e-09,0.0347091,0.000312788,8.30007e-07,-3.97034e-09,0.0350227,0.000314436,8.18096e-07,2.68985e-09,0.035338,0.00031608,8.26166e-07,6.61676e-10,0.0356549,0.000317734,8.28151e-07,-1.61123e-09,0.0359734,0.000319386,8.23317e-07,2.05786e-09,0.0362936,0.000321038,8.29491e-07,8.30388e-10,0.0366155,0.0003227,8.31982e-07,-1.65424e-09,0.036939,0.000324359,8.27019e-07,2.06129e-09,0.0372642,0.000326019,8.33203e-07,8.59719e-10,0.0375911,0.000327688,8.35782e-07,-1.77488e-09,0.0379196,0.000329354,8.30458e-07,2.51464e-09,0.0382498,0.000331023,8.38002e-07,-8.33135e-10,0.0385817,0.000332696,8.35502e-07,8.17825e-10,0.0389152,0.00033437,8.37956e-07,1.28718e-09,0.0392504,0.00033605,8.41817e-07,-2.2413e-09,0.0395873,0.000337727,8.35093e-07,3.95265e-09,0.0399258,0.000339409,8.46951e-07,-2.39332e-09,0.0402661,0.000341095,8.39771e-07,1.89533e-09,0.040608,0.000342781,8.45457e-07,-1.46271e-09,0.0409517,0.000344467,8.41069e-07,3.95554e-09,0.041297,0.000346161,8.52936e-07,-3.18369e-09,0.041644,0.000347857,8.43385e-07,1.32873e-09,0.0419927,0.000349548,8.47371e-07,1.59402e-09,0.0423431,0.000351248,8.52153e-07,-2.54336e-10,0.0426952,0.000352951,8.5139e-07,-5.76676e-10,0.043049,0.000354652,8.4966e-07,2.56114e-09,0.0434045,0.000356359,8.57343e-07,-2.21744e-09,0.0437617,0.000358067,8.50691e-07,2.58344e-09,0.0441206,0.000359776,8.58441e-07,-6.65826e-10,0.0444813,0.000361491,8.56444e-07,7.99218e-11,0.0448436,0.000363204,8.56684e-07,3.46063e-10,0.0452077,0.000364919,8.57722e-07,2.26116e-09,0.0455734,0.000366641,8.64505e-07,-1.94005e-09,0.045941,0.000368364,8.58685e-07,1.77384e-09,0.0463102,0.000370087,8.64007e-07,-1.43005e-09,0.0466811,0.000371811,8.59717e-07,3.94634e-09,0.0470538,0.000373542,8.71556e-07,-3.17946e-09,0.0474282,0.000375276,8.62017e-07,1.32104e-09,0.0478043,0.000377003,8.6598e-07,1.62045e-09,0.0481822,0.00037874,8.70842e-07,-3.52297e-10,0.0485618,0.000380481,8.69785e-07,-2.11211e-10,0.0489432,0.00038222,8.69151e-07,1.19716e-09,0.0493263,0.000383962,8.72743e-07,-8.52026e-10,0.0497111,0.000385705,8.70187e-07,2.21092e-09,0.0500977,0.000387452,8.76819e-07,-5.41339e-10,0.050486,0.000389204,8.75195e-07,-4.5361e-11,0.0508761,0.000390954,8.75059e-07,7.22669e-10,0.0512679,0.000392706,8.77227e-07,8.79936e-10,0.0516615,0.000394463,8.79867e-07,-5.17048e-10,0.0520568,0.000396222,8.78316e-07,1.18833e-09,0.0524539,0.000397982,8.81881e-07,-5.11022e-10,0.0528528,0.000399744,8.80348e-07,8.55683e-10,0.0532534,0.000401507,8.82915e-07,8.13562e-10,0.0536558,0.000403276,8.85356e-07,-3.84603e-10,0.05406,0.000405045,8.84202e-07,7.24962e-10,0.0544659,0.000406816,8.86377e-07,1.20986e-09,0.0548736,0.000408592,8.90006e-07,-1.83896e-09,0.0552831,0.000410367,8.84489e-07,2.42071e-09,0.0556944,0.000412143,8.91751e-07,-3.93413e-10,0.0561074,0.000413925,8.90571e-07,-8.46967e-10,0.0565222,0.000415704,8.8803e-07,3.78122e-09,0.0569388,0.000417491,8.99374e-07,-3.1021e-09,0.0573572,0.000419281,8.90068e-07,1.17658e-09,0.0577774,0.000421064,8.93597e-07,2.12117e-09,0.0581993,0.000422858,8.99961e-07,-2.21068e-09,0.0586231,0.000424651,8.93329e-07,2.9961e-09,0.0590486,0.000426447,9.02317e-07,-2.32311e-09,0.059476,0.000428244,8.95348e-07,2.57122e-09,0.0599051,0.000430043,9.03062e-07,-5.11098e-10,0.0603361,0.000431847,9.01528e-07,-5.27166e-10,0.0607688,0.000433649,8.99947e-07,2.61984e-09,0.0612034,0.000435457,9.07806e-07,-2.50141e-09,0.0616397,0.000437265,9.00302e-07,3.66045e-09,0.0620779,0.000439076,9.11283e-07,-4.68977e-09,0.0625179,0.000440885,8.97214e-07,7.64783e-09,0.0629597,0.000442702,9.20158e-07,-7.27499e-09,0.0634033,0.000444521,8.98333e-07,6.55113e-09,0.0638487,0.000446337,9.17986e-07,-4.02844e-09,0.0642959,0.000448161,9.05901e-07,2.11196e-09,0.064745,0.000449979,9.12236e-07,3.03125e-09,0.0651959,0.000451813,9.2133e-07,-6.78648e-09,0.0656486,0.000453635,9.00971e-07,9.21375e-09,0.0661032,0.000455464,9.28612e-07,-7.71684e-09,0.0665596,0.000457299,9.05462e-07,6.7522e-09,0.0670178,0.00045913,9.25718e-07,-4.3907e-09,0.0674778,0.000460968,9.12546e-07,3.36e-09,0.0679397,0.000462803,9.22626e-07,-1.59876e-09,0.0684034,0.000464644,9.1783e-07,3.0351e-09,0.068869,0.000466488,9.26935e-07,-3.09101e-09,0.0693364,0.000468333,9.17662e-07,1.8785e-09,0.0698057,0.000470174,9.23298e-07,3.02733e-09,0.0702768,0.00047203,9.3238e-07,-6.53722e-09,0.0707497,0.000473875,9.12768e-07,8.22054e-09,0.0712245,0.000475725,9.37429e-07,-3.99325e-09,0.0717012,0.000477588,9.2545e-07,3.01839e-10,0.0721797,0.00047944,9.26355e-07,2.78597e-09,0.0726601,0.000481301,9.34713e-07,-3.99507e-09,0.0731423,0.000483158,9.22728e-07,5.7435e-09,0.0736264,0.000485021,9.39958e-07,-4.07776e-09,0.0741123,0.000486888,9.27725e-07,3.11695e-09,0.0746002,0.000488753,9.37076e-07,-9.39394e-10,0.0750898,0.000490625,9.34258e-07,6.4055e-10,0.0755814,0.000492495,9.3618e-07,-1.62265e-09,0.0760748,0.000494363,9.31312e-07,5.84995e-09,0.0765701,0.000496243,9.48861e-07,-6.87601e-09,0.0770673,0.00049812,9.28233e-07,6.75296e-09,0.0775664,0.000499997,9.48492e-07,-5.23467e-09,0.0780673,0.000501878,9.32788e-07,6.73523e-09,0.0785701,0.000503764,9.52994e-07,-6.80514e-09,0.0790748,0.000505649,9.32578e-07,5.5842e-09,0.0795814,0.000507531,9.49331e-07,-6.30583e-10,0.0800899,0.000509428,9.47439e-07,-3.0618e-09,0.0806003,0.000511314,9.38254e-07,5.4273e-09,0.0811125,0.000513206,9.54536e-07,-3.74627e-09,0.0816267,0.000515104,9.43297e-07,2.10713e-09,0.0821427,0.000516997,9.49618e-07,2.76839e-09,0.0826607,0.000518905,9.57924e-07,-5.73006e-09,0.0831805,0.000520803,9.40733e-07,5.25072e-09,0.0837023,0.0005227,9.56486e-07,-3.71718e-10,0.084226,0.000524612,9.5537e-07,-3.76404e-09,0.0847515,0.000526512,9.44078e-07,7.97735e-09,0.085279,0.000528424,9.6801e-07,-5.79367e-09,0.0858084,0.000530343,9.50629e-07,2.96268e-10,0.0863397,0.000532245,9.51518e-07,4.6086e-09,0.0868729,0.000534162,9.65344e-07,-3.82947e-09,0.087408,0.000536081,9.53856e-07,3.25861e-09,0.087945,0.000537998,9.63631e-07,-1.7543e-09,0.088484,0.00053992,9.58368e-07,3.75849e-09,0.0890249,0.000541848,9.69644e-07,-5.82891e-09,0.0895677,0.00054377,9.52157e-07,4.65593e-09,0.0901124,0.000545688,9.66125e-07,2.10643e-09,0.0906591,0.000547627,9.72444e-07,-5.63099e-09,0.0912077,0.000549555,9.55551e-07,5.51627e-09,0.0917582,0.000551483,9.721e-07,-1.53292e-09,0.0923106,0.000553422,9.67501e-07,6.15311e-10,0.092865,0.000555359,9.69347e-07,-9.28291e-10,0.0934213,0.000557295,9.66562e-07,3.09774e-09,0.0939796,0.000559237,9.75856e-07,-4.01186e-09,0.0945398,0.000561177,9.6382e-07,5.49892e-09,0.095102,0.000563121,9.80317e-07,-3.08258e-09,0.0956661,0.000565073,9.71069e-07,-6.19176e-10,0.0962321,0.000567013,9.69212e-07,5.55932e-09,0.0968001,0.000568968,9.8589e-07,-6.71704e-09,0.09737,0.00057092,9.65738e-07,6.40762e-09,0.0979419,0.00057287,9.84961e-07,-4.0122e-09,0.0985158,0.000574828,9.72925e-07,2.19059e-09,0.0990916,0.000576781,9.79496e-07,2.70048e-09,0.0996693,0.000578748,9.87598e-07,-5.54193e-09,0.100249,0.000580706,9.70972e-07,4.56597e-09,0.100831,0.000582662,9.8467e-07,2.17923e-09,0.101414,0.000584638,9.91208e-07,-5.83232e-09,0.102,0.000586603,9.73711e-07,6.24884e-09,0.102588,0.000588569,9.92457e-07,-4.26178e-09,0.103177,0.000590541,9.79672e-07,3.34781e-09,0.103769,0.00059251,9.89715e-07,-1.67904e-09,0.104362,0.000594485,9.84678e-07,3.36839e-09,0.104958,0.000596464,9.94783e-07,-4.34397e-09,0.105555,0.000598441,9.81751e-07,6.55696e-09,0.106155,0.000600424,1.00142e-06,-6.98272e-09,0.106756,0.000602406,9.80474e-07,6.4728e-09,0.107359,0.000604386,9.99893e-07,-4.00742e-09,0.107965,0.000606374,9.8787e-07,2.10654e-09,0.108572,0.000608356,9.9419e-07,3.0318e-09,0.109181,0.000610353,1.00329e-06,-6.7832e-09,0.109793,0.00061234,9.82936e-07,9.1998e-09,0.110406,0.000614333,1.01054e-06,-7.6642e-09,0.111021,0.000616331,9.87543e-07,6.55579e-09,0.111639,0.000618326,1.00721e-06,-3.65791e-09,0.112258,0.000620329,9.96236e-07,6.25467e-10,0.112879,0.000622324,9.98113e-07,1.15593e-09,0.113503,0.000624323,1.00158e-06,2.20158e-09,0.114128,0.000626333,1.00819e-06,-2.51191e-09,0.114755,0.000628342,1.00065e-06,3.95517e-10,0.115385,0.000630345,1.00184e-06,9.29807e-10,0.116016,0.000632351,1.00463e-06,3.33599e-09,0.116649,0.00063437,1.01463e-06,-6.82329e-09,0.117285,0.000636379,9.94163e-07,9.05595e-09,0.117922,0.000638395,1.02133e-06,-7.04862e-09,0.118562,0.000640416,1.00019e-06,4.23737e-09,0.119203,0.000642429,1.0129e-06,-2.45033e-09,0.119847,0.000644448,1.00555e-06,5.56395e-09,0.120492,0.000646475,1.02224e-06,-4.9043e-09,0.121139,0.000648505,1.00753e-06,-8.47952e-10,0.121789,0.000650518,1.00498e-06,8.29622e-09,0.122441,0.000652553,1.02987e-06,-9.98538e-09,0.123094,0.000654582,9.99914e-07,9.2936e-09,0.12375,0.00065661,1.02779e-06,-4.83707e-09,0.124407,0.000658651,1.01328e-06,2.60411e-09,0.125067,0.000660685,1.0211e-06,-5.57945e-09,0.125729,0.000662711,1.00436e-06,1.22631e-08,0.126392,0.000664756,1.04115e-06,-1.36704e-08,0.127058,0.000666798,1.00014e-06,1.26161e-08,0.127726,0.000668836,1.03798e-06,-6.99155e-09,0.128396,0.000670891,1.01701e-06,4.48836e-10,0.129068,0.000672926,1.01836e-06,5.19606e-09,0.129742,0.000674978,1.03394e-06,-6.3319e-09,0.130418,0.000677027,1.01495e-06,5.2305e-09,0.131096,0.000679073,1.03064e-06,3.11123e-10,0.131776,0.000681135,1.03157e-06,-6.47511e-09,0.132458,0.000683179,1.01215e-06,1.06882e-08,0.133142,0.000685235,1.04421e-06,-6.47519e-09,0.133829,0.000687304,1.02479e-06,3.11237e-10,0.134517,0.000689355,1.02572e-06,5.23035e-09,0.135207,0.000691422,1.04141e-06,-6.3316e-09,0.1359,0.000693486,1.02242e-06,5.19484e-09,0.136594,0.000695546,1.038e-06,4.53497e-10,0.137291,0.000697623,1.03936e-06,-7.00891e-09,0.137989,0.000699681,1.01834e-06,1.2681e-08,0.13869,0.000701756,1.05638e-06,-1.39128e-08,0.139393,0.000703827,1.01464e-06,1.31679e-08,0.140098,0.000705896,1.05414e-06,-8.95659e-09,0.140805,0.000707977,1.02727e-06,7.75742e-09,0.141514,0.000710055,1.05055e-06,-7.17182e-09,0.142225,0.000712135,1.02903e-06,6.02862e-09,0.142938,0.000714211,1.04712e-06,-2.04163e-09,0.143653,0.000716299,1.04099e-06,2.13792e-09,0.144371,0.000718387,1.04741e-06,-6.51009e-09,0.14509,0.000720462,1.02787e-06,9.00123e-09,0.145812,0.000722545,1.05488e-06,3.07523e-10,0.146535,0.000724656,1.0558e-06,-1.02312e-08,0.147261,0.000726737,1.02511e-06,1.0815e-08,0.147989,0.000728819,1.05755e-06,-3.22681e-09,0.148719,0.000730925,1.04787e-06,2.09244e-09,0.14945,0.000733027,1.05415e-06,-5.143e-09,0.150185,0.00073512,1.03872e-06,3.57844e-09,0.150921,0.000737208,1.04946e-06,5.73027e-09,0.151659,0.000739324,1.06665e-06,-1.15983e-08,0.152399,0.000741423,1.03185e-06,1.08605e-08,0.153142,0.000743519,1.06443e-06,-2.04106e-09,0.153886,0.000745642,1.05831e-06,-2.69642e-09,0.154633,0.00074775,1.05022e-06,-2.07425e-09,0.155382,0.000749844,1.044e-06,1.09934e-08,0.156133,0.000751965,1.07698e-06,-1.20972e-08,0.156886,0.000754083,1.04069e-06,7.59288e-09,0.157641,0.000756187,1.06347e-06,-3.37305e-09,0.158398,0.000758304,1.05335e-06,5.89921e-09,0.159158,0.000760428,1.07104e-06,-5.32248e-09,0.159919,0.000762554,1.05508e-06,4.8927e-10,0.160683,0.000764666,1.05654e-06,3.36547e-09,0.161448,0.000766789,1.06664e-06,9.50081e-10,0.162216,0.000768925,1.06949e-06,-7.16568e-09,0.162986,0.000771043,1.04799e-06,1.28114e-08,0.163758,0.000773177,1.08643e-06,-1.42774e-08,0.164533,0.000775307,1.0436e-06,1.44956e-08,0.165309,0.000777438,1.08708e-06,-1.39025e-08,0.166087,0.00077957,1.04538e-06,1.13118e-08,0.166868,0.000781695,1.07931e-06,-1.54224e-09,0.167651,0.000783849,1.07468e-06,-5.14312e-09,0.168436,0.000785983,1.05925e-06,7.21381e-09,0.169223,0.000788123,1.0809e-06,-8.81096e-09,0.170012,0.000790259,1.05446e-06,1.31289e-08,0.170803,0.000792407,1.09385e-06,-1.39022e-08,0.171597,0.000794553,1.05214e-06,1.26775e-08,0.172392,0.000796695,1.09018e-06,-7.00557e-09,0.17319,0.000798855,1.06916e-06,4.43796e-10,0.17399,0.000800994,1.07049e-06,5.23031e-09,0.174792,0.000803151,1.08618e-06,-6.46397e-09,0.175596,0.000805304,1.06679e-06,5.72444e-09,0.176403,0.000807455,1.08396e-06,-1.53254e-09,0.177211,0.000809618,1.07937e-06,4.05673e-10,0.178022,0.000811778,1.08058e-06,-9.01916e-11,0.178835,0.000813939,1.08031e-06,-4.49821e-11,0.17965,0.000816099,1.08018e-06,2.70234e-10,0.180467,0.00081826,1.08099e-06,-1.03603e-09,0.181286,0.000820419,1.07788e-06,3.87392e-09,0.182108,0.000822587,1.0895e-06,4.41522e-10,0.182932,0.000824767,1.09083e-06,-5.63997e-09,0.183758,0.000826932,1.07391e-06,7.21707e-09,0.184586,0.000829101,1.09556e-06,-8.32718e-09,0.185416,0.000831267,1.07058e-06,1.11907e-08,0.186248,0.000833442,1.10415e-06,-6.63336e-09,0.187083,0.00083563,1.08425e-06,4.41484e-10,0.187919,0.0008378,1.08557e-06,4.86754e-09,0.188758,0.000839986,1.10017e-06,-5.01041e-09,0.189599,0.000842171,1.08514e-06,2.72811e-10,0.190443,0.000844342,1.08596e-06,3.91916e-09,0.191288,0.000846526,1.09772e-06,-1.04819e-09,0.192136,0.000848718,1.09457e-06,2.73531e-10,0.192985,0.000850908,1.0954e-06,-4.58916e-11,0.193837,0.000853099,1.09526e-06,-9.01158e-11,0.194692,0.000855289,1.09499e-06,4.06506e-10,0.195548,0.00085748,1.09621e-06,-1.53595e-09,0.196407,0.000859668,1.0916e-06,5.73717e-09,0.197267,0.000861869,1.10881e-06,-6.51164e-09,0.19813,0.000864067,1.08928e-06,5.40831e-09,0.198995,0.000866261,1.1055e-06,-2.20401e-10,0.199863,0.000868472,1.10484e-06,-4.52652e-09,0.200732,0.000870668,1.09126e-06,3.42508e-09,0.201604,0.000872861,1.10153e-06,5.72762e-09,0.202478,0.000875081,1.11872e-06,-1.14344e-08,0.203354,0.000877284,1.08441e-06,1.02076e-08,0.204233,0.000879484,1.11504e-06,4.06355e-10,0.205113,0.000881715,1.11626e-06,-1.18329e-08,0.205996,0.000883912,1.08076e-06,1.71227e-08,0.206881,0.000886125,1.13213e-06,-1.19546e-08,0.207768,0.000888353,1.09626e-06,8.93465e-10,0.208658,0.000890548,1.09894e-06,8.38062e-09,0.209549,0.000892771,1.12408e-06,-4.61353e-09,0.210443,0.000895006,1.11024e-06,-4.82756e-09,0.211339,0.000897212,1.09576e-06,9.02245e-09,0.212238,0.00089943,1.12283e-06,-1.45997e-09,0.213138,0.000901672,1.11845e-06,-3.18255e-09,0.214041,0.000903899,1.1089e-06,-7.11073e-10,0.214946,0.000906115,1.10677e-06,6.02692e-09,0.215853,0.000908346,1.12485e-06,-8.49548e-09,0.216763,0.00091057,1.09936e-06,1.30537e-08,0.217675,0.000912808,1.13852e-06,-1.3917e-08,0.218588,0.000915044,1.09677e-06,1.28121e-08,0.219505,0.000917276,1.13521e-06,-7.5288e-09,0.220423,0.000919523,1.11262e-06,2.40205e-09,0.221344,0.000921756,1.11983e-06,-2.07941e-09,0.222267,0.000923989,1.11359e-06,5.91551e-09,0.223192,0.000926234,1.13134e-06,-6.68149e-09,0.224119,0.000928477,1.11129e-06,5.90929e-09,0.225049,0.000930717,1.12902e-06,-2.05436e-09,0.22598,0.000932969,1.12286e-06,2.30807e-09,0.226915,0.000935222,1.12978e-06,-7.17796e-09,0.227851,0.00093746,1.10825e-06,1.15028e-08,0.228789,0.000939711,1.14276e-06,-9.03083e-09,0.22973,0.000941969,1.11566e-06,9.71932e-09,0.230673,0.00094423,1.14482e-06,-1.49452e-08,0.231619,0.000946474,1.09998e-06,2.02591e-08,0.232566,0.000948735,1.16076e-06,-2.13879e-08,0.233516,0.000950993,1.0966e-06,2.05888e-08,0.234468,0.000953247,1.15837e-06,-1.62642e-08,0.235423,0.000955515,1.10957e-06,1.46658e-08,0.236379,0.000957779,1.15357e-06,-1.25966e-08,0.237338,0.000960048,1.11578e-06,5.91793e-09,0.238299,0.000962297,1.13353e-06,3.82602e-09,0.239263,0.000964576,1.14501e-06,-6.3208e-09,0.240229,0.000966847,1.12605e-06,6.55613e-09,0.241197,0.000969119,1.14572e-06,-5.00268e-09,0.242167,0.000971395,1.13071e-06,-1.44659e-09,0.243139,0.000973652,1.12637e-06,1.07891e-08,0.244114,0.000975937,1.15874e-06,-1.19073e-08,0.245091,0.000978219,1.12302e-06,7.03782e-09,0.246071,0.000980486,1.14413e-06,-1.34276e-09,0.247052,0.00098277,1.1401e-06,-1.66669e-09,0.248036,0.000985046,1.1351e-06,8.00935e-09,0.249022,0.00098734,1.15913e-06,-1.54694e-08,0.250011,0.000989612,1.11272e-06,2.4066e-08,0.251002,0.000991909,1.18492e-06,-2.11901e-08,0.251995,0.000994215,1.12135e-06,1.08973e-09,0.25299,0.000996461,1.12462e-06,1.68311e-08,0.253988,0.000998761,1.17511e-06,-8.8094e-09,0.254987,0.00100109,1.14868e-06,-1.13958e-08,0.25599,0.00100335,1.1145e-06,2.45902e-08,0.256994,0.00100565,1.18827e-06,-2.73603e-08,0.258001,0.00100795,1.10618e-06,2.52464e-08,0.25901,0.00101023,1.18192e-06,-1.40207e-08,0.260021,0.00101256,1.13986e-06,1.03387e-09,0.261035,0.00101484,1.14296e-06,9.8853e-09,0.262051,0.00101715,1.17262e-06,-1.07726e-08,0.263069,0.00101947,1.1403e-06,3.40272e-09,0.26409,0.00102176,1.15051e-06,-2.83827e-09,0.265113,0.00102405,1.142e-06,7.95039e-09,0.266138,0.00102636,1.16585e-06,8.39047e-10,0.267166,0.00102869,1.16836e-06,-1.13066e-08,0.268196,0.00103099,1.13444e-06,1.4585e-08,0.269228,0.00103331,1.1782e-06,-1.72314e-08,0.270262,0.00103561,1.1265e-06,2.45382e-08,0.271299,0.00103794,1.20012e-06,-2.13166e-08,0.272338,0.00104028,1.13617e-06,1.12364e-09,0.273379,0.00104255,1.13954e-06,1.68221e-08,0.274423,0.00104488,1.19001e-06,-8.80736e-09,0.275469,0.00104723,1.16358e-06,-1.13948e-08,0.276518,0.00104953,1.1294e-06,2.45839e-08,0.277568,0.00105186,1.20315e-06,-2.73361e-08,0.278621,0.00105418,1.12114e-06,2.51559e-08,0.279677,0.0010565,1.19661e-06,-1.36832e-08,0.280734,0.00105885,1.15556e-06,-2.25706e-10,0.281794,0.00106116,1.15488e-06,1.45862e-08,0.282857,0.00106352,1.19864e-06,-2.83167e-08,0.283921,0.00106583,1.11369e-06,3.90759e-08,0.284988,0.00106817,1.23092e-06,-3.85801e-08,0.286058,0.00107052,1.11518e-06,2.58375e-08,0.287129,0.00107283,1.19269e-06,-5.16498e-09,0.288203,0.0010752,1.1772e-06,-5.17768e-09,0.28928,0.00107754,1.16167e-06,-3.92671e-09,0.290358,0.00107985,1.14988e-06,2.08846e-08,0.29144,0.00108221,1.21254e-06,-2.00072e-08,0.292523,0.00108458,1.15252e-06,-4.60659e-10,0.293609,0.00108688,1.15114e-06,2.18499e-08,0.294697,0.00108925,1.21669e-06,-2.73343e-08,0.295787,0.0010916,1.13468e-06,2.78826e-08,0.29688,0.00109395,1.21833e-06,-2.45915e-08,0.297975,0.00109632,1.14456e-06,1.08787e-08,0.299073,0.00109864,1.17719e-06,1.08788e-08,0.300172,0.00110102,1.20983e-06,-2.45915e-08,0.301275,0.00110337,1.13605e-06,2.78828e-08,0.302379,0.00110573,1.2197e-06,-2.73348e-08,0.303486,0.00110808,1.1377e-06,2.18518e-08,0.304595,0.00111042,1.20325e-06,-4.67556e-10,0.305707,0.00111283,1.20185e-06,-1.99816e-08,0.306821,0.00111517,1.14191e-06,2.07891e-08,0.307937,0.00111752,1.20427e-06,-3.57026e-09,0.309056,0.00111992,1.19356e-06,-6.50797e-09,0.310177,0.00112228,1.17404e-06,-2.00165e-10,0.3113,0.00112463,1.17344e-06,7.30874e-09,0.312426,0.001127,1.19536e-06,7.67424e-10,0.313554,0.00112939,1.19767e-06,-1.03784e-08,0.314685,0.00113176,1.16653e-06,1.09437e-08,0.315818,0.00113412,1.19936e-06,-3.59406e-09,0.316953,0.00113651,1.18858e-06,3.43251e-09,0.318091,0.0011389,1.19888e-06,-1.0136e-08,0.319231,0.00114127,1.16847e-06,7.30915e-09,0.320374,0.00114363,1.1904e-06,1.07018e-08,0.321518,0.00114604,1.2225e-06,-2.03137e-08,0.322666,0.00114842,1.16156e-06,1.09484e-08,0.323815,0.00115078,1.19441e-06,6.32224e-09,0.324967,0.00115319,1.21337e-06,-6.43509e-09,0.326122,0.00115559,1.19407e-06,-1.03842e-08,0.327278,0.00115795,1.16291e-06,1.81697e-08,0.328438,0.00116033,1.21742e-06,-2.6901e-09,0.329599,0.00116276,1.20935e-06,-7.40939e-09,0.330763,0.00116515,1.18713e-06,2.52533e-09,0.331929,0.00116754,1.1947e-06,-2.69191e-09,0.333098,0.00116992,1.18663e-06,8.24218e-09,0.334269,0.00117232,1.21135e-06,-4.74377e-10,0.335443,0.00117474,1.20993e-06,-6.34471e-09,0.336619,0.00117714,1.1909e-06,-3.94922e-09,0.337797,0.00117951,1.17905e-06,2.21417e-08,0.338978,0.00118193,1.24547e-06,-2.50128e-08,0.340161,0.00118435,1.17043e-06,1.8305e-08,0.341346,0.00118674,1.22535e-06,-1.84048e-08,0.342534,0.00118914,1.17013e-06,2.55121e-08,0.343725,0.00119156,1.24667e-06,-2.40389e-08,0.344917,0.00119398,1.17455e-06,1.10389e-08,0.346113,0.00119636,1.20767e-06,9.68574e-09,0.34731,0.0011988,1.23673e-06,-1.99797e-08,0.34851,0.00120122,1.17679e-06,1.06284e-08,0.349713,0.0012036,1.20867e-06,7.26868e-09,0.350917,0.00120604,1.23048e-06,-9.90072e-09,0.352125,0.00120847,1.20078e-06,2.53177e-09,0.353334,0.00121088,1.20837e-06,-2.26199e-10,0.354546,0.0012133,1.20769e-06,-1.62705e-09,0.355761,0.00121571,1.20281e-06,6.73435e-09,0.356978,0.00121813,1.22302e-06,4.49207e-09,0.358197,0.00122059,1.23649e-06,-2.47027e-08,0.359419,0.00122299,1.16238e-06,3.47142e-08,0.360643,0.00122542,1.26653e-06,-2.47472e-08,0.36187,0.00122788,1.19229e-06,4.66965e-09,0.363099,0.00123028,1.20629e-06,6.06872e-09,0.36433,0.00123271,1.2245e-06,8.57729e-10,0.365564,0.00123516,1.22707e-06,-9.49952e-09,0.366801,0.00123759,1.19858e-06,7.33792e-09,0.36804,0.00124001,1.22059e-06,9.95025e-09,0.369281,0.00124248,1.25044e-06,-1.73366e-08,0.370525,0.00124493,1.19843e-06,-2.08464e-10,0.371771,0.00124732,1.1978e-06,1.81704e-08,0.373019,0.00124977,1.25232e-06,-1.28683e-08,0.37427,0.00125224,1.21371e-06,3.50042e-09,0.375524,0.00125468,1.22421e-06,-1.1335e-09,0.37678,0.00125712,1.22081e-06,1.03345e-09,0.378038,0.00125957,1.22391e-06,-3.00023e-09,0.379299,0.00126201,1.21491e-06,1.09676e-08,0.380562,0.00126447,1.24781e-06,-1.10676e-08,0.381828,0.00126693,1.21461e-06,3.50042e-09,0.383096,0.00126937,1.22511e-06,-2.93403e-09,0.384366,0.00127181,1.21631e-06,8.23574e-09,0.385639,0.00127427,1.24102e-06,-2.06607e-10,0.386915,0.00127675,1.2404e-06,-7.40935e-09,0.388193,0.00127921,1.21817e-06,4.1761e-11,0.389473,0.00128165,1.21829e-06,7.24223e-09,0.390756,0.0012841,1.24002e-06,7.91564e-10,0.392042,0.00128659,1.2424e-06,-1.04086e-08,0.393329,0.00128904,1.21117e-06,1.10405e-08,0.39462,0.0012915,1.24429e-06,-3.951e-09,0.395912,0.00129397,1.23244e-06,4.7634e-09,0.397208,0.00129645,1.24673e-06,-1.51025e-08,0.398505,0.0012989,1.20142e-06,2.58443e-08,0.399805,0.00130138,1.27895e-06,-2.86702e-08,0.401108,0.00130385,1.19294e-06,2.92318e-08,0.402413,0.00130632,1.28064e-06,-2.86524e-08,0.403721,0.0013088,1.19468e-06,2.57731e-08,0.405031,0.00131127,1.272e-06,-1.48355e-08,0.406343,0.00131377,1.2275e-06,3.76652e-09,0.407658,0.00131623,1.23879e-06,-2.30784e-10,0.408976,0.00131871,1.2381e-06,-2.84331e-09,0.410296,0.00132118,1.22957e-06,1.16041e-08,0.411618,0.00132367,1.26438e-06,-1.37708e-08,0.412943,0.00132616,1.22307e-06,1.36768e-08,0.41427,0.00132865,1.2641e-06,-1.1134e-08,0.4156,0.00133114,1.2307e-06,1.05714e-09,0.416933,0.00133361,1.23387e-06,6.90538e-09,0.418267,0.00133609,1.25459e-06,1.12372e-09,0.419605,0.00133861,1.25796e-06,-1.14002e-08,0.420945,0.00134109,1.22376e-06,1.46747e-08,0.422287,0.00134358,1.26778e-06,-1.7496e-08,0.423632,0.00134606,1.21529e-06,2.5507e-08,0.424979,0.00134857,1.29182e-06,-2.49272e-08,0.426329,0.00135108,1.21703e-06,1.45972e-08,0.427681,0.00135356,1.26083e-06,-3.65935e-09,0.429036,0.00135607,1.24985e-06,4.00178e-11,0.430393,0.00135857,1.24997e-06,3.49917e-09,0.431753,0.00136108,1.26047e-06,-1.40366e-08,0.433116,0.00136356,1.21836e-06,2.28448e-08,0.43448,0.00136606,1.28689e-06,-1.77378e-08,0.435848,0.00136858,1.23368e-06,1.83043e-08,0.437218,0.0013711,1.28859e-06,-2.56769e-08,0.43859,0.0013736,1.21156e-06,2.47987e-08,0.439965,0.0013761,1.28595e-06,-1.39133e-08,0.441342,0.00137863,1.24421e-06,1.05202e-09,0.442722,0.00138112,1.24737e-06,9.70507e-09,0.444104,0.00138365,1.27649e-06,-1.00698e-08,0.445489,0.00138617,1.24628e-06,7.72123e-10,0.446877,0.00138867,1.24859e-06,6.98132e-09,0.448267,0.00139118,1.26954e-06,1.10477e-09,0.449659,0.00139373,1.27285e-06,-1.14003e-08,0.451054,0.00139624,1.23865e-06,1.4694e-08,0.452452,0.00139876,1.28273e-06,-1.75734e-08,0.453852,0.00140127,1.23001e-06,2.5797e-08,0.455254,0.00140381,1.3074e-06,-2.60097e-08,0.456659,0.00140635,1.22937e-06,1.86371e-08,0.458067,0.00140886,1.28529e-06,-1.8736e-08,0.459477,0.00141137,1.22908e-06,2.65048e-08,0.46089,0.00141391,1.30859e-06,-2.76784e-08,0.462305,0.00141645,1.22556e-06,2.46043e-08,0.463722,0.00141897,1.29937e-06,-1.11341e-08,0.465143,0.00142154,1.26597e-06,-9.87033e-09,0.466565,0.00142404,1.23636e-06,2.08131e-08,0.467991,0.00142657,1.2988e-06,-1.37773e-08,0.469419,0.00142913,1.25746e-06,4.49378e-09,0.470849,0.00143166,1.27094e-06,-4.19781e-09,0.472282,0.00143419,1.25835e-06,1.22975e-08,0.473717,0.00143674,1.29524e-06,-1.51902e-08,0.475155,0.00143929,1.24967e-06,1.86608e-08,0.476596,0.00144184,1.30566e-06,-2.96506e-08,0.478039,0.00144436,1.2167e-06,4.03368e-08,0.479485,0.00144692,1.33771e-06,-4.22896e-08,0.480933,0.00144947,1.21085e-06,3.94148e-08,0.482384,0.00145201,1.32909e-06,-2.59626e-08,0.483837,0.00145459,1.2512e-06,4.83124e-09,0.485293,0.0014571,1.2657e-06,6.63757e-09,0.486751,0.00145966,1.28561e-06,-1.57911e-09,0.488212,0.00146222,1.28087e-06,-3.21468e-10,0.489676,0.00146478,1.27991e-06,2.86517e-09,0.491142,0.00146735,1.2885e-06,-1.11392e-08,0.49261,0.00146989,1.25508e-06,1.18893e-08,0.494081,0.00147244,1.29075e-06,-6.61574e-09,0.495555,0.001475,1.27091e-06,1.45736e-08,0.497031,0.00147759,1.31463e-06,-2.18759e-08,0.49851,0.00148015,1.249e-06,1.33252e-08,0.499992,0.00148269,1.28897e-06,-1.62277e-09,0.501476,0.00148526,1.28411e-06,-6.83421e-09,0.502962,0.00148781,1.2636e-06,2.89596e-08,0.504451,0.00149042,1.35048e-06,-4.93997e-08,0.505943,0.00149298,1.20228e-06,4.94299e-08,0.507437,0.00149553,1.35057e-06,-2.91107e-08,0.508934,0.00149814,1.26324e-06,7.40848e-09,0.510434,0.00150069,1.28547e-06,-5.23187e-10,0.511936,0.00150326,1.2839e-06,-5.31585e-09,0.51344,0.00150581,1.26795e-06,2.17866e-08,0.514947,0.00150841,1.33331e-06,-2.22257e-08,0.516457,0.00151101,1.26663e-06,7.51178e-09,0.517969,0.00151357,1.28917e-06,-7.82128e-09,0.519484,0.00151613,1.2657e-06,2.37733e-08,0.521002,0.00151873,1.33702e-06,-2.76674e-08,0.522522,0.00152132,1.25402e-06,2.72917e-08,0.524044,0.00152391,1.3359e-06,-2.18949e-08,0.525569,0.00152652,1.27021e-06,6.83372e-10,0.527097,0.00152906,1.27226e-06,1.91613e-08,0.528628,0.00153166,1.32974e-06,-1.77241e-08,0.53016,0.00153427,1.27657e-06,-7.86963e-09,0.531696,0.0015368,1.25296e-06,4.92027e-08,0.533234,0.00153945,1.40057e-06,-6.9732e-08,0.534775,0.00154204,1.19138e-06,5.09114e-08,0.536318,0.00154458,1.34411e-06,-1.4704e-08,0.537864,0.00154722,1.3e-06,7.9048e-09,0.539413,0.00154984,1.32371e-06,-1.69152e-08,0.540964,0.00155244,1.27297e-06,1.51355e-10,0.542517,0.00155499,1.27342e-06,1.63099e-08,0.544074,0.00155758,1.32235e-06,-5.78647e-09,0.545633,0.00156021,1.30499e-06,6.83599e-09,0.547194,0.00156284,1.3255e-06,-2.15575e-08,0.548758,0.00156543,1.26083e-06,1.97892e-08,0.550325,0.00156801,1.32019e-06,2.00525e-09,0.551894,0.00157065,1.32621e-06,-2.78103e-08,0.553466,0.00157322,1.24278e-06,4.96314e-08,0.555041,0.00157586,1.39167e-06,-5.1506e-08,0.556618,0.00157849,1.23716e-06,3.71835e-08,0.558198,0.00158107,1.34871e-06,-3.76233e-08,0.55978,0.00158366,1.23584e-06,5.37052e-08,0.561365,0.00158629,1.39695e-06,-5.79884e-08,0.562953,0.00158891,1.22299e-06,5.90392e-08,0.564543,0.00159153,1.4001e-06,-5.89592e-08,0.566136,0.00159416,1.22323e-06,5.7588e-08,0.567731,0.00159678,1.39599e-06,-5.21835e-08,0.569329,0.00159941,1.23944e-06,3.19369e-08,0.57093,0.00160199,1.33525e-06,-1.59594e-08,0.572533,0.00160461,1.28737e-06,3.19006e-08,0.574139,0.00160728,1.38307e-06,-5.20383e-08,0.575748,0.00160989,1.22696e-06,5.70431e-08,0.577359,0.00161251,1.39809e-06,-5.69247e-08,0.578973,0.00161514,1.22731e-06,5.14463e-08,0.580589,0.00161775,1.38165e-06,-2.9651e-08,0.582208,0.00162042,1.2927e-06,7.55339e-09,0.58383,0.00162303,1.31536e-06,-5.62636e-10,0.585455,0.00162566,1.31367e-06,-5.30281e-09,0.587081,0.00162827,1.29776e-06,2.17738e-08,0.588711,0.00163093,1.36309e-06,-2.21875e-08,0.590343,0.00163359,1.29652e-06,7.37164e-09,0.591978,0.00163621,1.31864e-06,-7.29907e-09,0.593616,0.00163882,1.29674e-06,2.18247e-08,0.595256,0.00164148,1.36221e-06,-2.03952e-08,0.596899,0.00164414,1.30103e-06,1.51241e-10,0.598544,0.00164675,1.30148e-06,1.97902e-08,0.600192,0.00164941,1.36085e-06,-1.97074e-08,0.601843,0.00165207,1.30173e-06,-5.65175e-10,0.603496,0.00165467,1.30004e-06,2.1968e-08,0.605152,0.00165734,1.36594e-06,-2.77024e-08,0.606811,0.00165999,1.28283e-06,2.92369e-08,0.608472,0.00166264,1.37054e-06,-2.96407e-08,0.610136,0.00166529,1.28162e-06,2.97215e-08,0.611803,0.00166795,1.37079e-06,-2.96408e-08,0.613472,0.0016706,1.28186e-06,2.92371e-08,0.615144,0.00167325,1.36957e-06,-2.77031e-08,0.616819,0.00167591,1.28647e-06,2.19708e-08,0.618496,0.00167855,1.35238e-06,-5.75407e-10,0.620176,0.00168125,1.35065e-06,-1.9669e-08,0.621858,0.00168389,1.29164e-06,1.96468e-08,0.623544,0.00168653,1.35058e-06,6.86403e-10,0.625232,0.00168924,1.35264e-06,-2.23924e-08,0.626922,0.00169187,1.28547e-06,2.92788e-08,0.628615,0.00169453,1.3733e-06,-3.51181e-08,0.630311,0.00169717,1.26795e-06,5.15889e-08,0.63201,0.00169987,1.42272e-06,-5.2028e-08,0.633711,0.00170255,1.26663e-06,3.73139e-08,0.635415,0.0017052,1.37857e-06,-3.76227e-08,0.637121,0.00170784,1.2657e-06,5.35722e-08,0.63883,0.00171054,1.42642e-06,-5.74567e-08,0.640542,0.00171322,1.25405e-06,5.70456e-08,0.642257,0.0017159,1.42519e-06,-5.15163e-08,0.643974,0.00171859,1.27064e-06,2.98103e-08,0.645694,0.00172122,1.36007e-06,-8.12016e-09,0.647417,0.00172392,1.33571e-06,2.67039e-09,0.649142,0.0017266,1.34372e-06,-2.56152e-09,0.65087,0.00172928,1.33604e-06,7.57571e-09,0.6526,0.00173197,1.35876e-06,-2.77413e-08,0.654334,0.00173461,1.27554e-06,4.3785e-08,0.65607,0.00173729,1.40689e-06,-2.81896e-08,0.657808,0.00174002,1.32233e-06,9.36893e-09,0.65955,0.00174269,1.35043e-06,-9.28617e-09,0.661294,0.00174536,1.32257e-06,2.77757e-08,0.66304,0.00174809,1.4059e-06,-4.2212e-08,0.66479,0.00175078,1.27926e-06,2.1863e-08,0.666542,0.0017534,1.34485e-06,1.43648e-08,0.668297,0.00175613,1.38795e-06,-1.97177e-08,0.670054,0.00175885,1.3288e-06,4.90115e-09,0.671814,0.00176152,1.3435e-06,1.13232e-10,0.673577,0.00176421,1.34384e-06,-5.3542e-09,0.675343,0.00176688,1.32778e-06,2.13035e-08,0.677111,0.0017696,1.39169e-06,-2.02553e-08,0.678882,0.00177232,1.33092e-06,1.13005e-10,0.680656,0.00177499,1.33126e-06,1.98031e-08,0.682432,0.00177771,1.39067e-06,-1.97211e-08,0.684211,0.00178043,1.33151e-06,-5.2349e-10,0.685993,0.00178309,1.32994e-06,2.18151e-08,0.687777,0.00178582,1.39538e-06,-2.71325e-08,0.689564,0.00178853,1.31398e-06,2.71101e-08,0.691354,0.00179124,1.39531e-06,-2.17035e-08,0.693147,0.00179396,1.3302e-06,9.92865e-11,0.694942,0.00179662,1.3305e-06,2.13063e-08,0.69674,0.00179935,1.39442e-06,-2.57198e-08,0.698541,0.00180206,1.31726e-06,2.19682e-08,0.700344,0.00180476,1.38317e-06,-2.54852e-09,0.70215,0.00180752,1.37552e-06,-1.17741e-08,0.703959,0.00181023,1.3402e-06,-9.95999e-09,0.705771,0.00181288,1.31032e-06,5.16141e-08,0.707585,0.00181566,1.46516e-06,-7.72869e-08,0.709402,0.00181836,1.2333e-06,7.87197e-08,0.711222,0.00182106,1.46946e-06,-5.87781e-08,0.713044,0.00182382,1.29312e-06,3.71834e-08,0.714869,0.00182652,1.40467e-06,-3.03511e-08,0.716697,0.00182924,1.31362e-06,2.46161e-08,0.718528,0.00183194,1.38747e-06,-8.5087e-09,0.720361,0.00183469,1.36194e-06,9.41892e-09,0.722197,0.00183744,1.3902e-06,-2.91671e-08,0.724036,0.00184014,1.3027e-06,4.76448e-08,0.725878,0.00184288,1.44563e-06,-4.22028e-08,0.727722,0.00184565,1.31902e-06,1.95682e-09,0.729569,0.00184829,1.3249e-06,3.43754e-08,0.731419,0.00185104,1.42802e-06,-2.0249e-08,0.733271,0.00185384,1.36727e-06,-1.29838e-08,0.735126,0.00185654,1.32832e-06,1.25794e-08,0.736984,0.00185923,1.36606e-06,2.22711e-08,0.738845,0.00186203,1.43287e-06,-4.20594e-08,0.740708,0.00186477,1.3067e-06,2.67571e-08,0.742574,0.00186746,1.38697e-06,-5.36424e-09,0.744443,0.00187022,1.37087e-06,-5.30023e-09,0.746315,0.00187295,1.35497e-06,2.65653e-08,0.748189,0.00187574,1.43467e-06,-4.13564e-08,0.750066,0.00187848,1.3106e-06,1.9651e-08,0.751946,0.00188116,1.36955e-06,2.23572e-08,0.753828,0.00188397,1.43663e-06,-4.9475e-08,0.755714,0.00188669,1.2882e-06,5.63335e-08,0.757602,0.00188944,1.4572e-06,-5.66499e-08,0.759493,0.00189218,1.28725e-06,5.10567e-08,0.761386,0.00189491,1.44042e-06,-2.83677e-08,0.763283,0.00189771,1.35532e-06,2.80962e-09,0.765182,0.00190042,1.36375e-06,1.71293e-08,0.767083,0.0019032,1.41513e-06,-1.17221e-08,0.768988,0.001906,1.37997e-06,-2.98453e-08,0.770895,0.00190867,1.29043e-06,7.14987e-08,0.772805,0.00191146,1.50493e-06,-7.73354e-08,0.774718,0.00191424,1.27292e-06,5.90292e-08,0.776634,0.00191697,1.45001e-06,-3.9572e-08,0.778552,0.00191975,1.33129e-06,3.9654e-08,0.780473,0.00192253,1.45026e-06,-5.94395e-08,0.782397,0.00192525,1.27194e-06,7.88945e-08,0.784324,0.00192803,1.50862e-06,-7.73249e-08,0.786253,0.00193082,1.27665e-06,5.15913e-08,0.788185,0.00193352,1.43142e-06,-9.83099e-09,0.79012,0.00193636,1.40193e-06,-1.22672e-08,0.792058,0.00193912,1.36513e-06,-7.05275e-10,0.793999,0.00194185,1.36301e-06,1.50883e-08,0.795942,0.00194462,1.40828e-06,-4.33147e-11,0.797888,0.00194744,1.40815e-06,-1.49151e-08,0.799837,0.00195021,1.3634e-06,9.93244e-11,0.801788,0.00195294,1.3637e-06,1.45179e-08,0.803743,0.00195571,1.40725e-06,1.43363e-09,0.8057,0.00195853,1.41155e-06,-2.02525e-08,0.80766,0.00196129,1.35079e-06,1.99718e-08,0.809622,0.00196405,1.41071e-06,-3.01649e-11,0.811588,0.00196687,1.41062e-06,-1.9851e-08,0.813556,0.00196964,1.35107e-06,1.98296e-08,0.815527,0.0019724,1.41056e-06,1.37485e-10,0.817501,0.00197522,1.41097e-06,-2.03796e-08,0.819477,0.00197798,1.34983e-06,2.17763e-08,0.821457,0.00198074,1.41516e-06,-7.12085e-09,0.823439,0.00198355,1.3938e-06,6.70707e-09,0.825424,0.00198636,1.41392e-06,-1.97074e-08,0.827412,0.00198913,1.35479e-06,1.25179e-08,0.829402,0.00199188,1.39235e-06,2.92405e-08,0.831396,0.00199475,1.48007e-06,-6.98755e-08,0.833392,0.0019975,1.27044e-06,7.14477e-08,0.835391,0.00200026,1.48479e-06,-3.71014e-08,0.837392,0.00200311,1.37348e-06,1.73533e-08,0.839397,0.00200591,1.42554e-06,-3.23118e-08,0.841404,0.00200867,1.32861e-06,5.2289e-08,0.843414,0.00201148,1.48547e-06,-5.76348e-08,0.845427,0.00201428,1.31257e-06,5.9041e-08,0.847443,0.00201708,1.48969e-06,-5.93197e-08,0.849461,0.00201988,1.31173e-06,5.90289e-08,0.851482,0.00202268,1.48882e-06,-5.75864e-08,0.853507,0.00202549,1.31606e-06,5.21075e-08,0.855533,0.00202828,1.47238e-06,-3.16344e-08,0.857563,0.00203113,1.37748e-06,1.48257e-08,0.859596,0.00203393,1.42196e-06,-2.76684e-08,0.861631,0.00203669,1.33895e-06,3.62433e-08,0.863669,0.00203947,1.44768e-06,1.90463e-09,0.86571,0.00204237,1.45339e-06,-4.38617e-08,0.867754,0.00204515,1.32181e-06,5.43328e-08,0.8698,0.00204796,1.48481e-06,-5.42603e-08,0.87185,0.00205076,1.32203e-06,4.34989e-08,0.873902,0.00205354,1.45252e-06,-5.26029e-10,0.875957,0.00205644,1.45095e-06,-4.13949e-08,0.878015,0.00205922,1.32676e-06,4.68962e-08,0.880075,0.00206201,1.46745e-06,-2.69807e-08,0.882139,0.00206487,1.38651e-06,1.42181e-09,0.884205,0.00206764,1.39077e-06,2.12935e-08,0.886274,0.00207049,1.45465e-06,-2.69912e-08,0.888346,0.00207332,1.37368e-06,2.70664e-08,0.890421,0.00207615,1.45488e-06,-2.16698e-08,0.892498,0.00207899,1.38987e-06,8.14756e-12,0.894579,0.00208177,1.38989e-06,2.16371e-08,0.896662,0.00208462,1.45481e-06,-2.6952e-08,0.898748,0.00208744,1.37395e-06,2.65663e-08,0.900837,0.00209027,1.45365e-06,-1.97084e-08,0.902928,0.00209312,1.39452e-06,-7.33731e-09,0.905023,0.00209589,1.37251e-06,4.90578e-08,0.90712,0.00209878,1.51968e-06,-6.96845e-08,0.90922,0.00210161,1.31063e-06,5.08664e-08,0.911323,0.00210438,1.46323e-06,-1.45717e-08,0.913429,0.00210727,1.41952e-06,7.42038e-09,0.915538,0.00211013,1.44178e-06,-1.51097e-08,0.917649,0.00211297,1.39645e-06,-6.58618e-09,0.919764,0.00211574,1.37669e-06,4.14545e-08,0.921881,0.00211862,1.50105e-06,-4.00222e-08,0.924001,0.0021215,1.38099e-06,-5.7518e-10,0.926124,0.00212426,1.37926e-06,4.23229e-08,0.92825,0.00212714,1.50623e-06,-4.9507e-08,0.930378,0.00213001,1.35771e-06,3.64958e-08,0.93251,0.00213283,1.4672e-06,-3.68713e-08,0.934644,0.00213566,1.35658e-06,5.13848e-08,0.936781,0.00213852,1.51074e-06,-4.94585e-08,0.938921,0.0021414,1.36236e-06,2.72399e-08,0.941064,0.0021442,1.44408e-06,1.0372e-10,0.943209,0.00214709,1.44439e-06,-2.76547e-08,0.945358,0.0021499,1.36143e-06,5.09106e-08,0.947509,0.00215277,1.51416e-06,-5.67784e-08,0.949663,0.00215563,1.34382e-06,5.69935e-08,0.95182,0.00215849,1.5148e-06,-5.19861e-08,0.95398,0.00216136,1.35885e-06,3.17417e-08,0.956143,0.00216418,1.45407e-06,-1.53758e-08,0.958309,0.00216704,1.40794e-06,2.97615e-08,0.960477,0.00216994,1.49723e-06,-4.40657e-08,0.962649,0.00217281,1.36503e-06,2.72919e-08,0.964823,0.00217562,1.44691e-06,-5.49729e-09,0.967,0.0021785,1.43041e-06,-5.30273e-09,0.96918,0.00218134,1.41451e-06,2.67084e-08,0.971363,0.00218425,1.49463e-06,-4.19265e-08,0.973548,0.00218711,1.36885e-06,2.17881e-08,0.975737,0.00218992,1.43422e-06,1.43789e-08,0.977928,0.00219283,1.47735e-06,-1.96989e-08,0.980122,0.00219572,1.41826e-06,4.81221e-09,0.98232,0.00219857,1.43269e-06,4.50048e-10,0.98452,0.00220144,1.43404e-06,-6.61237e-09,0.986722,0.00220429,1.41421e-06,2.59993e-08,0.988928,0.0022072,1.4922e-06,-3.77803e-08,0.991137,0.00221007,1.37886e-06,5.9127e-09,0.993348,0.00221284,1.3966e-06,1.33339e-07,0.995563,0.00221604,1.79662e-06,-5.98872e-07,0.99778,0.00222015,0.,0.};$/;"	m	namespace:cv::cudev::color_cvt_detail
c_sRGBGammaTab_b	opencv2/core/cuda/detail/color_detail.hpp	/^        __constant__ ushort c_sRGBGammaTab_b[] = {0,1,1,2,2,3,4,4,5,6,6,7,8,8,9,10,11,11,12,13,14,15,16,17,19,20,21,22,24,25,26,28,29,31,33,34,36,38,40,41,43,45,47,49,51,54,56,58,60,63,65,68,70,73,75,78,81,83,86,89,92,95,98,101,105,108,111,115,118,121,125,129,132,136,140,144,147,151,155,160,164,168,172,176,181,185,190,194,199,204,209,213,218,223,228,233,239,244,249,255,260,265,271,277,282,288,294,300,306,312,318,324,331,337,343,350,356,363,370,376,383,390,397,404,411,418,426,433,440,448,455,463,471,478,486,494,502,510,518,527,535,543,552,560,569,578,586,595,604,613,622,631,641,650,659,669,678,688,698,707,717,727,737,747,757,768,778,788,799,809,820,831,842,852,863,875,886,897,908,920,931,943,954,966,978,990,1002,1014,1026,1038,1050,1063,1075,1088,1101,1113,1126,1139,1152,1165,1178,1192,1205,1218,1232,1245,1259,1273,1287,1301,1315,1329,1343,1357,1372,1386,1401,1415,1430,1445,1460,1475,1490,1505,1521,1536,1551,1567,1583,1598,1614,1630,1646,1662,1678,1695,1711,1728,1744,1761,1778,1794,1811,1828,1846,1863,1880,1897,1915,1933,1950,1968,1986,2004,2022,2040};$/;"	m	namespace:cv::cuda::device::color_detail
c_sRGBGammaTab_b	opencv2/cudev/functional/detail/color_cvt.hpp	/^    __constant__ ushort c_sRGBGammaTab_b[] = {0,1,1,2,2,3,4,4,5,6,6,7,8,8,9,10,11,11,12,13,14,15,16,17,19,20,21,22,24,25,26,28,29,31,33,34,36,38,40,41,43,45,47,49,51,54,56,58,60,63,65,68,70,73,75,78,81,83,86,89,92,95,98,101,105,108,111,115,118,121,125,129,132,136,140,144,147,151,155,160,164,168,172,176,181,185,190,194,199,204,209,213,218,223,228,233,239,244,249,255,260,265,271,277,282,288,294,300,306,312,318,324,331,337,343,350,356,363,370,376,383,390,397,404,411,418,426,433,440,448,455,463,471,478,486,494,502,510,518,527,535,543,552,560,569,578,586,595,604,613,622,631,641,650,659,669,678,688,698,707,717,727,737,747,757,768,778,788,799,809,820,831,842,852,863,875,886,897,908,920,931,943,954,966,978,990,1002,1014,1026,1038,1050,1063,1075,1088,1101,1113,1126,1139,1152,1165,1178,1192,1205,1218,1232,1245,1259,1273,1287,1301,1315,1329,1343,1357,1372,1386,1401,1415,1430,1445,1460,1475,1490,1505,1521,1536,1551,1567,1583,1598,1614,1630,1646,1662,1678,1695,1711,1728,1744,1761,1778,1794,1811,1828,1846,1863,1880,1897,1915,1933,1950,1968,1986,2004,2022,2040};$/;"	m	namespace:cv::cudev::color_cvt_detail
c_sRGBInvGammaTab	opencv2/core/cuda/detail/color_detail.hpp	/^        __constant__ float c_sRGBInvGammaTab[] = {0,0.0126255,0.,-8.33961e-06,0.0126172,0.0126005,-2.50188e-05,4.1698e-05,0.0252344,0.0126756,0.000100075,-0.000158451,0.0378516,0.0124004,-0.000375277,-0.000207393,0.0496693,0.0110276,-0.000997456,0.00016837,0.0598678,0.00953783,-0.000492346,2.07235e-05,0.068934,0.00861531,-0.000430176,3.62876e-05,0.0771554,0.00786382,-0.000321313,1.87625e-05,0.0847167,0.00727748,-0.000265025,1.53594e-05,0.0917445,0.00679351,-0.000218947,1.10545e-05,0.0983301,0.00638877,-0.000185784,8.66984e-06,0.104542,0.00604322,-0.000159774,6.82996e-06,0.110432,0.00574416,-0.000139284,5.51008e-06,0.116042,0.00548212,-0.000122754,4.52322e-06,0.121406,0.00525018,-0.000109184,3.75557e-06,0.126551,0.00504308,-9.79177e-05,3.17134e-06,0.131499,0.00485676,-8.84037e-05,2.68469e-06,0.13627,0.004688,-8.03496e-05,2.31725e-06,0.14088,0.00453426,-7.33978e-05,2.00868e-06,0.145343,0.00439349,-6.73718e-05,1.74775e-06,0.149671,0.00426399,-6.21286e-05,1.53547e-06,0.153875,0.00414434,-5.75222e-05,1.364e-06,0.157963,0.00403338,-5.34301e-05,1.20416e-06,0.161944,0.00393014,-4.98177e-05,1.09114e-06,0.165825,0.00383377,-4.65443e-05,9.57987e-07,0.169613,0.00374356,-4.36703e-05,8.88359e-07,0.173314,0.00365888,-4.10052e-05,7.7849e-07,0.176933,0.00357921,-3.86697e-05,7.36254e-07,0.180474,0.00350408,-3.6461e-05,6.42534e-07,0.183942,0.00343308,-3.45334e-05,6.12614e-07,0.187342,0.00336586,-3.26955e-05,5.42894e-07,0.190675,0.00330209,-3.10669e-05,5.08967e-07,0.193947,0.00324149,-2.954e-05,4.75977e-07,0.197159,0.00318383,-2.8112e-05,4.18343e-07,0.200315,0.00312887,-2.6857e-05,4.13651e-07,0.203418,0.00307639,-2.5616e-05,3.70847e-07,0.206469,0.00302627,-2.45035e-05,3.3813e-07,0.209471,0.00297828,-2.34891e-05,3.32999e-07,0.212426,0.0029323,-2.24901e-05,2.96826e-07,0.215336,0.00288821,-2.15996e-05,2.82736e-07,0.218203,0.00284586,-2.07514e-05,2.70961e-07,0.221029,0.00280517,-1.99385e-05,2.42744e-07,0.223814,0.00276602,-1.92103e-05,2.33277e-07,0.226561,0.0027283,-1.85105e-05,2.2486e-07,0.229271,0.00269195,-1.78359e-05,2.08383e-07,0.231945,0.00265691,-1.72108e-05,1.93305e-07,0.234585,0.00262307,-1.66308e-05,1.80687e-07,0.237192,0.00259035,-1.60888e-05,1.86632e-07,0.239766,0.00255873,-1.55289e-05,1.60569e-07,0.24231,0.00252815,-1.50472e-05,1.54566e-07,0.244823,0.00249852,-1.45835e-05,1.59939e-07,0.247307,0.00246983,-1.41037e-05,1.29549e-07,0.249763,0.00244202,-1.3715e-05,1.41429e-07,0.252191,0.00241501,-1.32907e-05,1.39198e-07,0.254593,0.00238885,-1.28731e-05,1.06444e-07,0.256969,0.00236342,-1.25538e-05,1.2048e-07,0.25932,0.00233867,-1.21924e-05,1.26892e-07,0.261647,0.00231467,-1.18117e-05,8.72084e-08,0.26395,0.00229131,-1.15501e-05,1.20323e-07,0.26623,0.00226857,-1.11891e-05,8.71514e-08,0.268487,0.00224645,-1.09276e-05,9.73165e-08,0.270723,0.00222489,-1.06357e-05,8.98259e-08,0.272937,0.00220389,-1.03662e-05,7.98218e-08,0.275131,0.00218339,-1.01267e-05,9.75254e-08,0.277304,0.00216343,-9.83416e-06,6.65195e-08,0.279458,0.00214396,-9.63461e-06,8.34313e-08,0.281592,0.00212494,-9.38431e-06,7.65919e-08,0.283708,0.00210641,-9.15454e-06,5.7236e-08,0.285805,0.00208827,-8.98283e-06,8.18939e-08,0.287885,0.00207055,-8.73715e-06,6.2224e-08,0.289946,0.00205326,-8.55047e-06,5.66388e-08,0.291991,0.00203633,-8.38056e-06,6.88491e-08,0.294019,0.00201978,-8.17401e-06,5.53955e-08,0.296031,0.00200359,-8.00782e-06,6.71971e-08,0.298027,0.00198778,-7.80623e-06,3.34439e-08,0.300007,0.00197227,-7.7059e-06,6.7248e-08,0.301971,0.00195706,-7.50416e-06,5.51915e-08,0.303921,0.00194221,-7.33858e-06,3.98124e-08,0.305856,0.00192766,-7.21915e-06,5.37795e-08,0.307776,0.00191338,-7.05781e-06,4.30919e-08,0.309683,0.00189939,-6.92853e-06,4.20744e-08,0.311575,0.00188566,-6.80231e-06,5.68321e-08,0.313454,0.00187223,-6.63181e-06,2.86195e-08,0.31532,0.00185905,-6.54595e-06,3.73075e-08,0.317172,0.00184607,-6.43403e-06,6.05684e-08,0.319012,0.00183338,-6.25233e-06,1.84426e-08,0.320839,0.00182094,-6.197e-06,4.44757e-08,0.322654,0.00180867,-6.06357e-06,4.20729e-08,0.324456,0.00179667,-5.93735e-06,2.56511e-08,0.326247,0.00178488,-5.8604e-06,3.41368e-08,0.328026,0.00177326,-5.75799e-06,4.64177e-08,0.329794,0.00176188,-5.61874e-06,1.86107e-08,0.33155,0.0017507,-5.5629e-06,2.81511e-08,0.333295,0.00173966,-5.47845e-06,4.75987e-08,0.335029,0.00172884,-5.33565e-06,1.98726e-08,0.336753,0.00171823,-5.27604e-06,2.19226e-08,0.338466,0.00170775,-5.21027e-06,4.14483e-08,0.340169,0.00169745,-5.08592e-06,2.09017e-08,0.341861,0.00168734,-5.02322e-06,2.39561e-08,0.343543,0.00167737,-4.95135e-06,3.22852e-08,0.345216,0.00166756,-4.85449e-06,2.57173e-08,0.346878,0.00165793,-4.77734e-06,1.38569e-08,0.348532,0.00164841,-4.73577e-06,3.80634e-08,0.350175,0.00163906,-4.62158e-06,1.27043e-08,0.35181,0.00162985,-4.58347e-06,3.03279e-08,0.353435,0.00162078,-4.49249e-06,1.49961e-08,0.355051,0.00161184,-4.4475e-06,2.88977e-08,0.356659,0.00160303,-4.3608e-06,1.84241e-08,0.358257,0.00159436,-4.30553e-06,1.6616e-08,0.359848,0.0015858,-4.25568e-06,3.43218e-08,0.361429,0.00157739,-4.15272e-06,-4.89172e-09,0.363002,0.00156907,-4.16739e-06,4.48498e-08,0.364567,0.00156087,-4.03284e-06,4.30676e-09,0.366124,0.00155282,-4.01992e-06,2.73303e-08,0.367673,0.00154486,-3.93793e-06,5.58036e-09,0.369214,0.001537,-3.92119e-06,3.97554e-08,0.370747,0.00152928,-3.80193e-06,-1.55904e-08,0.372272,0.00152163,-3.8487e-06,5.24081e-08,0.37379,0.00151409,-3.69147e-06,-1.52272e-08,0.375301,0.00150666,-3.73715e-06,3.83028e-08,0.376804,0.0014993,-3.62225e-06,1.10278e-08,0.378299,0.00149209,-3.58916e-06,6.99326e-09,0.379788,0.00148493,-3.56818e-06,2.06038e-08,0.381269,0.00147786,-3.50637e-06,2.98009e-08,0.382744,0.00147093,-3.41697e-06,-2.05978e-08,0.384211,0.00146404,-3.47876e-06,5.25899e-08,0.385672,0.00145724,-3.32099e-06,-1.09471e-08,0.387126,0.00145056,-3.35383e-06,2.10009e-08,0.388573,0.00144392,-3.29083e-06,1.63501e-08,0.390014,0.00143739,-3.24178e-06,3.00641e-09,0.391448,0.00143091,-3.23276e-06,3.12282e-08,0.392875,0.00142454,-3.13908e-06,-8.70932e-09,0.394297,0.00141824,-3.16521e-06,3.34114e-08,0.395712,0.00141201,-3.06497e-06,-5.72754e-09,0.397121,0.00140586,-3.08215e-06,1.9301e-08,0.398524,0.00139975,-3.02425e-06,1.7931e-08,0.39992,0.00139376,-2.97046e-06,-1.61822e-09,0.401311,0.00138781,-2.97531e-06,1.83442e-08,0.402696,0.00138192,-2.92028e-06,1.76485e-08,0.404075,0.00137613,-2.86733e-06,4.68617e-10,0.405448,0.00137039,-2.86593e-06,1.02794e-08,0.406816,0.00136469,-2.83509e-06,1.80179e-08,0.408178,0.00135908,-2.78104e-06,7.05594e-09,0.409534,0.00135354,-2.75987e-06,1.33633e-08,0.410885,0.00134806,-2.71978e-06,-9.04568e-10,0.41223,0.00134261,-2.72249e-06,2.0057e-08,0.41357,0.00133723,-2.66232e-06,1.00841e-08,0.414905,0.00133194,-2.63207e-06,-7.88835e-10,0.416234,0.00132667,-2.63444e-06,2.28734e-08,0.417558,0.00132147,-2.56582e-06,-1.29785e-09,0.418877,0.00131633,-2.56971e-06,1.21205e-08,0.420191,0.00131123,-2.53335e-06,1.24202e-08,0.421499,0.0013062,-2.49609e-06,-2.19681e-09,0.422803,0.0013012,-2.50268e-06,2.61696e-08,0.424102,0.00129628,-2.42417e-06,-1.30747e-08,0.425396,0.00129139,-2.46339e-06,2.6129e-08,0.426685,0.00128654,-2.38501e-06,-2.03454e-09,0.427969,0.00128176,-2.39111e-06,1.18115e-08,0.429248,0.00127702,-2.35567e-06,1.43932e-08,0.430523,0.00127235,-2.31249e-06,-9.77965e-09,0.431793,0.00126769,-2.34183e-06,2.47253e-08,0.433058,0.00126308,-2.26766e-06,2.85278e-10,0.434319,0.00125855,-2.2668e-06,3.93614e-09,0.435575,0.00125403,-2.25499e-06,1.37722e-08,0.436827,0.00124956,-2.21368e-06,5.79803e-10,0.438074,0.00124513,-2.21194e-06,1.37112e-08,0.439317,0.00124075,-2.1708e-06,4.17973e-09,0.440556,0.00123642,-2.15826e-06,-6.27703e-10,0.44179,0.0012321,-2.16015e-06,2.81332e-08,0.44302,0.00122787,-2.07575e-06,-2.24985e-08,0.444246,0.00122365,-2.14324e-06,3.20586e-08,0.445467,0.00121946,-2.04707e-06,-1.6329e-08,0.446685,0.00121532,-2.09605e-06,3.32573e-08,0.447898,0.00121122,-1.99628e-06,-2.72927e-08,0.449107,0.00120715,-2.07816e-06,4.6111e-08,0.450312,0.00120313,-1.93983e-06,-3.79416e-08,0.451514,0.00119914,-2.05365e-06,4.60507e-08,0.452711,0.00119517,-1.9155e-06,-2.7052e-08,0.453904,0.00119126,-1.99666e-06,3.23551e-08,0.455093,0.00118736,-1.89959e-06,-1.29613e-08,0.456279,0.00118352,-1.93848e-06,1.94905e-08,0.45746,0.0011797,-1.88e-06,-5.39588e-09,0.458638,0.00117593,-1.89619e-06,2.09282e-09,0.459812,0.00117214,-1.88991e-06,2.68267e-08,0.460982,0.00116844,-1.80943e-06,-1.99925e-08,0.462149,0.00116476,-1.86941e-06,2.3341e-08,0.463312,0.00116109,-1.79939e-06,-1.37674e-08,0.464471,0.00115745,-1.84069e-06,3.17287e-08,0.465627,0.00115387,-1.7455e-06,-2.37407e-08,0.466779,0.00115031,-1.81673e-06,3.34315e-08,0.467927,0.00114677,-1.71643e-06,-2.05786e-08,0.469073,0.00114328,-1.77817e-06,1.90802e-08,0.470214,0.00113978,-1.72093e-06,3.86247e-09,0.471352,0.00113635,-1.70934e-06,-4.72759e-09,0.472487,0.00113292,-1.72352e-06,1.50478e-08,0.473618,0.00112951,-1.67838e-06,4.14108e-09,0.474746,0.00112617,-1.66595e-06,-1.80986e-09,0.47587,0.00112283,-1.67138e-06,3.09816e-09,0.476991,0.0011195,-1.66209e-06,1.92198e-08,0.478109,0.00111623,-1.60443e-06,-2.03726e-08,0.479224,0.00111296,-1.66555e-06,3.2468e-08,0.480335,0.00110973,-1.56814e-06,-2.00922e-08,0.481443,0.00110653,-1.62842e-06,1.80983e-08,0.482548,0.00110333,-1.57413e-06,7.30362e-09,0.48365,0.0011002,-1.55221e-06,-1.75107e-08,0.484749,0.00109705,-1.60475e-06,3.29373e-08,0.485844,0.00109393,-1.50594e-06,-2.48315e-08,0.486937,0.00109085,-1.58043e-06,3.65865e-08,0.488026,0.0010878,-1.47067e-06,-3.21078e-08,0.489112,0.00108476,-1.56699e-06,3.22397e-08,0.490195,0.00108172,-1.47027e-06,-7.44391e-09,0.491276,0.00107876,-1.49261e-06,-2.46428e-09,0.492353,0.00107577,-1.5e-06,1.73011e-08,0.493427,0.00107282,-1.4481e-06,-7.13552e-09,0.494499,0.0010699,-1.4695e-06,1.1241e-08,0.495567,0.001067,-1.43578e-06,-8.02637e-09,0.496633,0.0010641,-1.45986e-06,2.08645e-08,0.497695,0.00106124,-1.39726e-06,-1.58271e-08,0.498755,0.0010584,-1.44475e-06,1.26415e-08,0.499812,0.00105555,-1.40682e-06,2.48655e-08,0.500866,0.00105281,-1.33222e-06,-5.24988e-08,0.501918,0.00104999,-1.48972e-06,6.59206e-08,0.502966,0.00104721,-1.29196e-06,-3.237e-08,0.504012,0.00104453,-1.38907e-06,3.95479e-09,0.505055,0.00104176,-1.3772e-06,1.65509e-08,0.506096,0.00103905,-1.32755e-06,-1.05539e-08,0.507133,0.00103637,-1.35921e-06,2.56648e-08,0.508168,0.00103373,-1.28222e-06,-3.25007e-08,0.509201,0.00103106,-1.37972e-06,4.47336e-08,0.51023,0.00102844,-1.24552e-06,-2.72245e-08,0.511258,0.00102587,-1.32719e-06,4.55952e-09,0.512282,0.00102323,-1.31352e-06,8.98645e-09,0.513304,0.00102063,-1.28656e-06,1.90992e-08,0.514323,0.00101811,-1.22926e-06,-2.57786e-08,0.51534,0.00101557,-1.30659e-06,2.44104e-08,0.516355,0.00101303,-1.23336e-06,-1.22581e-08,0.517366,0.00101053,-1.27014e-06,2.4622e-08,0.518376,0.00100806,-1.19627e-06,-2.66253e-08,0.519383,0.00100559,-1.27615e-06,2.22744e-08,0.520387,0.00100311,-1.20932e-06,-2.8679e-09,0.521389,0.00100068,-1.21793e-06,-1.08029e-08,0.522388,0.000998211,-1.25034e-06,4.60795e-08,0.523385,0.000995849,-1.1121e-06,-5.4306e-08,0.52438,0.000993462,-1.27502e-06,5.19354e-08,0.525372,0.000991067,-1.11921e-06,-3.42262e-08,0.526362,0.000988726,-1.22189e-06,2.53646e-08,0.52735,0.000986359,-1.14579e-06,-7.62782e-09,0.528335,0.000984044,-1.16868e-06,5.14668e-09,0.529318,0.000981722,-1.15324e-06,-1.29589e-08,0.530298,0.000979377,-1.19211e-06,4.66888e-08,0.531276,0.000977133,-1.05205e-06,-5.45868e-08,0.532252,0.000974865,-1.21581e-06,5.24495e-08,0.533226,0.000972591,-1.05846e-06,-3.60019e-08,0.534198,0.000970366,-1.16647e-06,3.19537e-08,0.535167,0.000968129,-1.07061e-06,-3.2208e-08,0.536134,0.000965891,-1.16723e-06,3.72738e-08,0.537099,0.000963668,-1.05541e-06,2.32205e-09,0.538061,0.000961564,-1.04844e-06,-4.65618e-08,0.539022,0.000959328,-1.18813e-06,6.47159e-08,0.53998,0.000957146,-9.93979e-07,-3.3488e-08,0.540936,0.000955057,-1.09444e-06,9.63166e-09,0.54189,0.000952897,-1.06555e-06,-5.03871e-09,0.542842,0.000950751,-1.08066e-06,1.05232e-08,0.543792,0.000948621,-1.04909e-06,2.25503e-08,0.544739,0.000946591,-9.81444e-07,-4.11195e-08,0.545685,0.000944504,-1.1048e-06,2.27182e-08,0.546628,0.000942363,-1.03665e-06,9.85146e-09,0.54757,0.000940319,-1.00709e-06,-2.51938e-09,0.548509,0.000938297,-1.01465e-06,2.25858e-10,0.549446,0.000936269,-1.01397e-06,1.61598e-09,0.550381,0.000934246,-1.00913e-06,-6.68983e-09,0.551315,0.000932207,-1.0292e-06,2.51434e-08,0.552246,0.000930224,-9.53765e-07,-3.42793e-08,0.553175,0.000928214,-1.0566e-06,5.23688e-08,0.554102,0.000926258,-8.99497e-07,-5.59865e-08,0.555028,0.000924291,-1.06746e-06,5.23679e-08,0.555951,0.000922313,-9.10352e-07,-3.42763e-08,0.556872,0.00092039,-1.01318e-06,2.51326e-08,0.557792,0.000918439,-9.37783e-07,-6.64954e-09,0.558709,0.000916543,-9.57732e-07,1.46554e-09,0.559625,0.000914632,-9.53335e-07,7.87281e-10,0.560538,0.000912728,-9.50973e-07,-4.61466e-09,0.56145,0.000910812,-9.64817e-07,1.76713e-08,0.56236,0.000908935,-9.11804e-07,-6.46564e-09,0.563268,0.000907092,-9.312e-07,8.19121e-09,0.564174,0.000905255,-9.06627e-07,-2.62992e-08,0.565078,0.000903362,-9.85524e-07,3.74007e-08,0.565981,0.000901504,-8.73322e-07,-4.0942e-09,0.566882,0.000899745,-8.85605e-07,-2.1024e-08,0.56778,0.00089791,-9.48677e-07,2.85854e-08,0.568677,0.000896099,-8.62921e-07,-3.3713e-08,0.569573,0.000894272,-9.64059e-07,4.6662e-08,0.570466,0.000892484,-8.24073e-07,-3.37258e-08,0.571358,0.000890734,-9.25251e-07,2.86365e-08,0.572247,0.00088897,-8.39341e-07,-2.12155e-08,0.573135,0.000887227,-9.02988e-07,-3.37913e-09,0.574022,0.000885411,-9.13125e-07,3.47319e-08,0.574906,0.000883689,-8.08929e-07,-1.63394e-08,0.575789,0.000882022,-8.57947e-07,-2.8979e-08,0.57667,0.00088022,-9.44885e-07,7.26509e-08,0.57755,0.000878548,-7.26932e-07,-8.28106e-08,0.578427,0.000876845,-9.75364e-07,7.97774e-08,0.579303,0.000875134,-7.36032e-07,-5.74849e-08,0.580178,0.00087349,-9.08486e-07,3.09529e-08,0.58105,0.000871765,-8.15628e-07,-6.72206e-09,0.581921,0.000870114,-8.35794e-07,-4.06451e-09,0.582791,0.00086843,-8.47987e-07,2.29799e-08,0.583658,0.000866803,-7.79048e-07,-2.82503e-08,0.584524,0.00086516,-8.63799e-07,3.04167e-08,0.585388,0.000863524,-7.72548e-07,-3.38119e-08,0.586251,0.000861877,-8.73984e-07,4.52264e-08,0.587112,0.000860265,-7.38305e-07,-2.78842e-08,0.587972,0.000858705,-8.21958e-07,6.70567e-09,0.58883,0.000857081,-8.01841e-07,1.06161e-09,0.589686,0.000855481,-7.98656e-07,-1.09521e-08,0.590541,0.00085385,-8.31512e-07,4.27468e-08,0.591394,0.000852316,-7.03272e-07,-4.08257e-08,0.592245,0.000850787,-8.25749e-07,1.34677e-09,0.593095,0.000849139,-8.21709e-07,3.54387e-08,0.593944,0.000847602,-7.15393e-07,-2.38924e-08,0.59479,0.0008461,-7.8707e-07,5.26143e-10,0.595636,0.000844527,-7.85491e-07,2.17879e-08,0.596479,0.000843021,-7.20127e-07,-2.80733e-08,0.597322,0.000841497,-8.04347e-07,3.09005e-08,0.598162,0.000839981,-7.11646e-07,-3.5924e-08,0.599002,0.00083845,-8.19418e-07,5.3191e-08,0.599839,0.000836971,-6.59845e-07,-5.76307e-08,0.600676,0.000835478,-8.32737e-07,5.81227e-08,0.60151,0.000833987,-6.58369e-07,-5.56507e-08,0.602344,0.000832503,-8.25321e-07,4.52706e-08,0.603175,0.000830988,-6.89509e-07,-6.22236e-09,0.604006,0.000829591,-7.08176e-07,-2.03811e-08,0.604834,0.000828113,-7.6932e-07,2.8142e-08,0.605662,0.000826659,-6.84894e-07,-3.25822e-08,0.606488,0.000825191,-7.8264e-07,4.25823e-08,0.607312,0.000823754,-6.54893e-07,-1.85376e-08,0.608135,0.000822389,-7.10506e-07,-2.80365e-08,0.608957,0.000820883,-7.94616e-07,7.1079e-08,0.609777,0.000819507,-5.81379e-07,-7.74655e-08,0.610596,0.000818112,-8.13775e-07,5.9969e-08,0.611413,0.000816665,-6.33868e-07,-4.32013e-08,0.612229,0.000815267,-7.63472e-07,5.32313e-08,0.613044,0.0008139,-6.03778e-07,-5.05148e-08,0.613857,0.000812541,-7.55323e-07,2.96187e-08,0.614669,0.000811119,-6.66466e-07,-8.35545e-09,0.615479,0.000809761,-6.91533e-07,3.80301e-09,0.616288,0.00080839,-6.80124e-07,-6.85666e-09,0.617096,0.000807009,-7.00694e-07,2.36237e-08,0.617903,0.000805678,-6.29822e-07,-2.80336e-08,0.618708,0.000804334,-7.13923e-07,2.8906e-08,0.619511,0.000802993,-6.27205e-07,-2.79859e-08,0.620314,0.000801655,-7.11163e-07,2.34329e-08,0.621114,0.000800303,-6.40864e-07,-6.14108e-09,0.621914,0.000799003,-6.59287e-07,1.13151e-09,0.622712,0.000797688,-6.55893e-07,1.61507e-09,0.62351,0.000796381,-6.51048e-07,-7.59186e-09,0.624305,0.000795056,-6.73823e-07,2.87524e-08,0.6251,0.000793794,-5.87566e-07,-4.7813e-08,0.625893,0.000792476,-7.31005e-07,4.32901e-08,0.626685,0.000791144,-6.01135e-07,-6.13814e-09,0.627475,0.000789923,-6.19549e-07,-1.87376e-08,0.628264,0.000788628,-6.75762e-07,2.14837e-08,0.629052,0.000787341,-6.11311e-07,-7.59265e-09,0.629839,0.000786095,-6.34089e-07,8.88692e-09,0.630625,0.000784854,-6.07428e-07,-2.7955e-08,0.631409,0.000783555,-6.91293e-07,4.33285e-08,0.632192,0.000782302,-5.61307e-07,-2.61497e-08,0.632973,0.000781101,-6.39757e-07,1.6658e-09,0.633754,0.000779827,-6.34759e-07,1.94866e-08,0.634533,0.000778616,-5.76299e-07,-2.00076e-08,0.635311,0.000777403,-6.36322e-07,9.39091e-10,0.636088,0.000776133,-6.33505e-07,1.62512e-08,0.636863,0.000774915,-5.84751e-07,-6.33937e-09,0.637638,0.000773726,-6.03769e-07,9.10609e-09,0.638411,0.000772546,-5.76451e-07,-3.00849e-08,0.639183,0.000771303,-6.66706e-07,5.1629e-08,0.639953,0.000770125,-5.11819e-07,-5.7222e-08,0.640723,0.000768929,-6.83485e-07,5.80497e-08,0.641491,0.000767736,-5.09336e-07,-5.57674e-08,0.642259,0.000766551,-6.76638e-07,4.58105e-08,0.643024,0.000765335,-5.39206e-07,-8.26541e-09,0.643789,0.000764231,-5.64002e-07,-1.27488e-08,0.644553,0.000763065,-6.02249e-07,-3.44168e-10,0.645315,0.00076186,-6.03281e-07,1.41254e-08,0.646077,0.000760695,-5.60905e-07,3.44727e-09,0.646837,0.000759584,-5.50563e-07,-2.79144e-08,0.647596,0.000758399,-6.34307e-07,4.86057e-08,0.648354,0.000757276,-4.88489e-07,-4.72989e-08,0.64911,0.000756158,-6.30386e-07,2.13807e-08,0.649866,0.000754961,-5.66244e-07,2.13808e-08,0.65062,0.000753893,-5.02102e-07,-4.7299e-08,0.651374,0.000752746,-6.43999e-07,4.86059e-08,0.652126,0.000751604,-4.98181e-07,-2.79154e-08,0.652877,0.000750524,-5.81927e-07,3.45089e-09,0.653627,0.000749371,-5.71575e-07,1.41119e-08,0.654376,0.00074827,-5.29239e-07,-2.93748e-10,0.655123,0.00074721,-5.3012e-07,-1.29368e-08,0.65587,0.000746111,-5.68931e-07,-7.56355e-09,0.656616,0.000744951,-5.91621e-07,4.3191e-08,0.65736,0.000743897,-4.62048e-07,-4.59911e-08,0.658103,0.000742835,-6.00022e-07,2.15642e-08,0.658846,0.0007417,-5.35329e-07,1.93389e-08,0.659587,0.000740687,-4.77312e-07,-3.93152e-08,0.660327,0.000739615,-5.95258e-07,1.87126e-08,0.661066,0.00073848,-5.3912e-07,2.40695e-08,0.661804,0.000737474,-4.66912e-07,-5.53859e-08,0.662541,0.000736374,-6.33069e-07,7.82648e-08,0.663277,0.000735343,-3.98275e-07,-7.88593e-08,0.664012,0.00073431,-6.34853e-07,5.83585e-08,0.664745,0.000733215,-4.59777e-07,-3.53656e-08,0.665478,0.000732189,-5.65874e-07,2.34994e-08,0.66621,0.000731128,-4.95376e-07,9.72743e-10,0.66694,0.00073014,-4.92458e-07,-2.73903e-08,0.66767,0.000729073,-5.74629e-07,4.89839e-08,0.668398,0.000728071,-4.27677e-07,-4.93359e-08,0.669126,0.000727068,-5.75685e-07,2.91504e-08,0.669853,0.000726004,-4.88234e-07,-7.66109e-09,0.670578,0.000725004,-5.11217e-07,1.49392e-09,0.671303,0.000723986,-5.06735e-07,1.68533e-09,0.672026,0.000722978,-5.01679e-07,-8.23525e-09,0.672749,0.00072195,-5.26385e-07,3.12556e-08,0.67347,0.000720991,-4.32618e-07,-5.71825e-08,0.674191,0.000719954,-6.04166e-07,7.8265e-08,0.67491,0.00071898,-3.69371e-07,-7.70634e-08,0.675628,0.00071801,-6.00561e-07,5.11747e-08,0.676346,0.000716963,-4.47037e-07,-8.42615e-09,0.677062,0.000716044,-4.72315e-07,-1.747e-08,0.677778,0.000715046,-5.24725e-07,1.87015e-08,0.678493,0.000714053,-4.68621e-07,2.26856e-09,0.679206,0.000713123,-4.61815e-07,-2.77758e-08,0.679919,0.000712116,-5.45142e-07,4.92298e-08,0.68063,0.000711173,-3.97453e-07,-4.99339e-08,0.681341,0.000710228,-5.47255e-07,3.12967e-08,0.682051,0.000709228,-4.53365e-07,-1.56481e-08,0.68276,0.000708274,-5.00309e-07,3.12958e-08,0.683467,0.000707367,-4.06422e-07,-4.99303e-08,0.684174,0.000706405,-5.56213e-07,4.9216e-08,0.68488,0.00070544,-4.08565e-07,-2.77245e-08,0.685585,0.00070454,-4.91738e-07,2.07748e-09,0.686289,0.000703562,-4.85506e-07,1.94146e-08,0.686992,0.00070265,-4.27262e-07,-2.01314e-08,0.687695,0.000701735,-4.87656e-07,1.50616e-09,0.688396,0.000700764,-4.83137e-07,1.41067e-08,0.689096,0.00069984,-4.40817e-07,1.67168e-09,0.689795,0.000698963,-4.35802e-07,-2.07934e-08,0.690494,0.000698029,-4.98182e-07,2.18972e-08,0.691192,0.000697099,-4.32491e-07,-7.19092e-09,0.691888,0.000696212,-4.54064e-07,6.86642e-09,0.692584,0.000695325,-4.33464e-07,-2.02747e-08,0.693279,0.000694397,-4.94288e-07,1.46279e-08,0.693973,0.000693452,-4.50405e-07,2.13678e-08,0.694666,0.000692616,-3.86301e-07,-4.04945e-08,0.695358,0.000691721,-5.07785e-07,2.14009e-08,0.696049,0.00069077,-4.43582e-07,1.44955e-08,0.69674,0.000689926,-4.00096e-07,-1.97783e-08,0.697429,0.000689067,-4.5943e-07,5.01296e-09,0.698118,0.000688163,-4.44392e-07,-2.73521e-10,0.698805,0.000687273,-4.45212e-07,-3.91893e-09,0.699492,0.000686371,-4.56969e-07,1.59493e-08,0.700178,0.000685505,-4.09121e-07,-2.73351e-10,0.700863,0.000684686,-4.09941e-07,-1.4856e-08,0.701548,0.000683822,-4.54509e-07,9.25979e-11,0.702231,0.000682913,-4.54231e-07,1.44855e-08,0.702913,0.000682048,-4.10775e-07,1.56992e-09,0.703595,0.000681231,-4.06065e-07,-2.07652e-08,0.704276,0.000680357,-4.68361e-07,2.18864e-08,0.704956,0.000679486,-4.02701e-07,-7.17595e-09,0.705635,0.000678659,-4.24229e-07,6.81748e-09,0.706313,0.000677831,-4.03777e-07,-2.0094e-08,0.70699,0.000676963,-4.64059e-07,1.39538e-08,0.707667,0.000676077,-4.22197e-07,2.38835e-08,0.708343,0.000675304,-3.50547e-07,-4.98831e-08,0.709018,0.000674453,-5.00196e-07,5.64395e-08,0.709692,0.000673622,-3.30878e-07,-5.66657e-08,0.710365,0.00067279,-5.00875e-07,5.1014e-08,0.711037,0.000671942,-3.47833e-07,-2.81809e-08,0.711709,0.000671161,-4.32376e-07,2.10513e-09,0.712379,0.000670303,-4.2606e-07,1.97604e-08,0.713049,0.00066951,-3.66779e-07,-2.15422e-08,0.713718,0.000668712,-4.31406e-07,6.8038e-09,0.714387,0.000667869,-4.10994e-07,-5.67295e-09,0.715054,0.00066703,-4.28013e-07,1.5888e-08,0.715721,0.000666222,-3.80349e-07,1.72576e-09,0.716387,0.000665467,-3.75172e-07,-2.27911e-08,0.717052,0.000664648,-4.43545e-07,2.9834e-08,0.717716,0.00066385,-3.54043e-07,-3.69401e-08,0.718379,0.000663031,-4.64864e-07,5.83219e-08,0.719042,0.000662277,-2.89898e-07,-7.71382e-08,0.719704,0.000661465,-5.21313e-07,7.14171e-08,0.720365,0.000660637,-3.07061e-07,-2.97161e-08,0.721025,0.000659934,-3.96209e-07,-1.21575e-08,0.721685,0.000659105,-4.32682e-07,1.87412e-08,0.722343,0.000658296,-3.76458e-07,-3.2029e-09,0.723001,0.000657533,-3.86067e-07,-5.9296e-09,0.723659,0.000656743,-4.03856e-07,2.69213e-08,0.724315,0.000656016,-3.23092e-07,-4.21511e-08,0.724971,0.000655244,-4.49545e-07,2.24737e-08,0.725625,0.000654412,-3.82124e-07,1.18611e-08,0.726279,0.000653683,-3.46541e-07,-1.03132e-08,0.726933,0.000652959,-3.7748e-07,-3.02128e-08,0.727585,0.000652114,-4.68119e-07,7.15597e-08,0.728237,0.000651392,-2.5344e-07,-7.72119e-08,0.728888,0.000650654,-4.85075e-07,5.8474e-08,0.729538,0.000649859,-3.09654e-07,-3.74746e-08,0.730188,0.000649127,-4.22077e-07,3.18197e-08,0.730837,0.000648379,-3.26618e-07,-3.01997e-08,0.731485,0.000647635,-4.17217e-07,2.93747e-08,0.732132,0.000646888,-3.29093e-07,-2.76943e-08,0.732778,0.000646147,-4.12176e-07,2.17979e-08,0.733424,0.000645388,-3.46783e-07,1.07292e-10,0.734069,0.000644695,-3.46461e-07,-2.22271e-08,0.734713,0.000643935,-4.13142e-07,2.91963e-08,0.735357,0.000643197,-3.25553e-07,-3.49536e-08,0.736,0.000642441,-4.30414e-07,5.10133e-08,0.736642,0.000641733,-2.77374e-07,-4.98904e-08,0.737283,0.000641028,-4.27045e-07,2.93392e-08,0.737924,0.000640262,-3.39028e-07,-7.86156e-09,0.738564,0.000639561,-3.62612e-07,2.10703e-09,0.739203,0.000638842,-3.56291e-07,-5.6653e-10,0.739842,0.000638128,-3.57991e-07,1.59086e-10,0.740479,0.000637412,-3.57513e-07,-6.98321e-11,0.741116,0.000636697,-3.57723e-07,1.20214e-10,0.741753,0.000635982,-3.57362e-07,-4.10987e-10,0.742388,0.000635266,-3.58595e-07,1.5237e-09,0.743023,0.000634553,-3.54024e-07,-5.68376e-09,0.743657,0.000633828,-3.71075e-07,2.12113e-08,0.744291,0.00063315,-3.07441e-07,-1.95569e-08,0.744924,0.000632476,-3.66112e-07,-2.58816e-09,0.745556,0.000631736,-3.73877e-07,2.99096e-08,0.746187,0.000631078,-2.84148e-07,-5.74454e-08,0.746818,0.000630337,-4.56484e-07,8.06629e-08,0.747448,0.000629666,-2.14496e-07,-8.63922e-08,0.748077,0.000628978,-4.73672e-07,8.60918e-08,0.748706,0.000628289,-2.15397e-07,-7.91613e-08,0.749334,0.000627621,-4.5288e-07,5.17393e-08,0.749961,0.00062687,-2.97663e-07,-8.58662e-09,0.750588,0.000626249,-3.23422e-07,-1.73928e-08,0.751214,0.00062555,-3.75601e-07,1.85532e-08,0.751839,0.000624855,-3.19941e-07,2.78479e-09,0.752463,0.000624223,-3.11587e-07,-2.96923e-08,0.753087,0.000623511,-4.00664e-07,5.63799e-08,0.75371,0.000622879,-2.31524e-07,-7.66179e-08,0.754333,0.000622186,-4.61378e-07,7.12778e-08,0.754955,0.000621477,-2.47545e-07,-2.96794e-08,0.755576,0.000620893,-3.36583e-07,-1.21648e-08,0.756196,0.000620183,-3.73077e-07,1.87339e-08,0.756816,0.000619493,-3.16875e-07,-3.16622e-09,0.757435,0.00061885,-3.26374e-07,-6.0691e-09,0.758054,0.000618179,-3.44581e-07,2.74426e-08,0.758672,0.000617572,-2.62254e-07,-4.40968e-08,0.759289,0.000616915,-3.94544e-07,2.97352e-08,0.759906,0.000616215,-3.05338e-07,-1.52393e-08,0.760522,0.000615559,-3.51056e-07,3.12221e-08,0.761137,0.000614951,-2.5739e-07,-5.00443e-08,0.761751,0.000614286,-4.07523e-07,4.9746e-08,0.762365,0.00061362,-2.58285e-07,-2.97303e-08,0.762979,0.000613014,-3.47476e-07,9.57079e-09,0.763591,0.000612348,-3.18764e-07,-8.55287e-09,0.764203,0.000611685,-3.44422e-07,2.46407e-08,0.764815,0.00061107,-2.705e-07,-3.04053e-08,0.765426,0.000610437,-3.61716e-07,3.73759e-08,0.766036,0.000609826,-2.49589e-07,-5.94935e-08,0.766645,0.000609149,-4.28069e-07,8.13889e-08,0.767254,0.000608537,-1.83902e-07,-8.72483e-08,0.767862,0.000607907,-4.45647e-07,8.87901e-08,0.76847,0.000607282,-1.79277e-07,-8.90983e-08,0.769077,0.000606656,-4.46572e-07,8.87892e-08,0.769683,0.000606029,-1.80204e-07,-8.72446e-08,0.770289,0.000605407,-4.41938e-07,8.13752e-08,0.770894,0.000604768,-1.97812e-07,-5.94423e-08,0.771498,0.000604194,-3.76139e-07,3.71848e-08,0.772102,0.000603553,-2.64585e-07,-2.96922e-08,0.772705,0.000602935,-3.53661e-07,2.19793e-08,0.773308,0.000602293,-2.87723e-07,1.37955e-09,0.77391,0.000601722,-2.83585e-07,-2.74976e-08,0.774512,0.000601072,-3.66077e-07,4.9006e-08,0.775112,0.000600487,-2.19059e-07,-4.93171e-08,0.775712,0.000599901,-3.67011e-07,2.90531e-08,0.776312,0.000599254,-2.79851e-07,-7.29081e-09,0.776911,0.000598673,-3.01724e-07,1.10077e-10,0.777509,0.00059807,-3.01393e-07,6.85053e-09,0.778107,0.000597487,-2.80842e-07,-2.75123e-08,0.778704,0.000596843,-3.63379e-07,4.35939e-08,0.779301,0.000596247,-2.32597e-07,-2.7654e-08,0.779897,0.000595699,-3.15559e-07,7.41741e-09,0.780492,0.00059509,-2.93307e-07,-2.01562e-09,0.781087,0.000594497,-2.99354e-07,6.45059e-10,0.781681,0.000593901,-2.97418e-07,-5.64635e-10,0.782275,0.000593304,-2.99112e-07,1.61347e-09,0.782868,0.000592711,-2.94272e-07,-5.88926e-09,0.78346,0.000592105,-3.1194e-07,2.19436e-08,0.784052,0.000591546,-2.46109e-07,-2.22805e-08,0.784643,0.000590987,-3.1295e-07,7.57368e-09,0.785234,0.000590384,-2.90229e-07,-8.01428e-09,0.785824,0.00058978,-3.14272e-07,2.44834e-08,0.786414,0.000589225,-2.40822e-07,-3.03148e-08,0.787003,0.000588652,-3.31766e-07,3.7171e-08,0.787591,0.0005881,-2.20253e-07,-5.87646e-08,0.788179,0.000587483,-3.96547e-07,7.86782e-08,0.788766,0.000586926,-1.60512e-07,-7.71342e-08,0.789353,0.000586374,-3.91915e-07,5.10444e-08,0.789939,0.000585743,-2.38782e-07,-7.83422e-09,0.790524,0.000585242,-2.62284e-07,-1.97076e-08,0.791109,0.000584658,-3.21407e-07,2.70598e-08,0.791693,0.000584097,-2.40228e-07,-2.89269e-08,0.792277,0.000583529,-3.27008e-07,2.90431e-08,0.792861,0.000582963,-2.39879e-07,-2.76409e-08,0.793443,0.0005824,-3.22802e-07,2.1916e-08,0.794025,0.00058182,-2.57054e-07,-4.18368e-10,0.794607,0.000581305,-2.58309e-07,-2.02425e-08,0.795188,0.000580727,-3.19036e-07,2.17838e-08,0.795768,0.000580155,-2.53685e-07,-7.28814e-09,0.796348,0.000579625,-2.75549e-07,7.36871e-09,0.796928,0.000579096,-2.53443e-07,-2.21867e-08,0.797506,0.000578523,-3.20003e-07,2.17736e-08,0.798085,0.000577948,-2.54683e-07,-5.30296e-09,0.798662,0.000577423,-2.70592e-07,-5.61698e-10,0.799239,0.00057688,-2.72277e-07,7.54977e-09,0.799816,0.000576358,-2.49627e-07,-2.96374e-08,0.800392,0.00057577,-3.38539e-07,5.1395e-08,0.800968,0.000575247,-1.84354e-07,-5.67335e-08,0.801543,0.000574708,-3.54555e-07,5.63297e-08,0.802117,0.000574168,-1.85566e-07,-4.93759e-08,0.802691,0.000573649,-3.33693e-07,2.19646e-08,0.803264,0.000573047,-2.678e-07,2.1122e-08,0.803837,0.000572575,-2.04433e-07,-4.68482e-08,0.804409,0.000572026,-3.44978e-07,4.70613e-08,0.804981,0.000571477,-2.03794e-07,-2.21877e-08,0.805552,0.000571003,-2.70357e-07,-1.79153e-08,0.806123,0.000570408,-3.24103e-07,3.42443e-08,0.806693,0.000569863,-2.2137e-07,1.47556e-10,0.807263,0.000569421,-2.20928e-07,-3.48345e-08,0.807832,0.000568874,-3.25431e-07,1.99812e-08,0.808401,0.000568283,-2.65487e-07,1.45143e-08,0.808969,0.000567796,-2.21945e-07,-1.84338e-08,0.809536,0.000567297,-2.77246e-07,-3.83608e-10,0.810103,0.000566741,-2.78397e-07,1.99683e-08,0.81067,0.000566244,-2.18492e-07,-1.98848e-08,0.811236,0.000565747,-2.78146e-07,-3.38976e-11,0.811801,0.000565191,-2.78248e-07,2.00204e-08,0.812366,0.000564695,-2.18187e-07,-2.04429e-08,0.812931,0.000564197,-2.79516e-07,2.1467e-09,0.813495,0.000563644,-2.73076e-07,1.18561e-08,0.814058,0.000563134,-2.37507e-07,1.00334e-08,0.814621,0.000562689,-2.07407e-07,-5.19898e-08,0.815183,0.000562118,-3.63376e-07,7.87163e-08,0.815745,0.000561627,-1.27227e-07,-8.40616e-08,0.816306,0.000561121,-3.79412e-07,7.87163e-08,0.816867,0.000560598,-1.43263e-07,-5.19898e-08,0.817428,0.000560156,-2.99233e-07,1.00335e-08,0.817988,0.000559587,-2.69132e-07,1.18559e-08,0.818547,0.000559085,-2.33564e-07,2.14764e-09,0.819106,0.000558624,-2.27122e-07,-2.04464e-08,0.819664,0.000558108,-2.88461e-07,2.00334e-08,0.820222,0.000557591,-2.28361e-07,-8.24277e-11,0.820779,0.000557135,-2.28608e-07,-1.97037e-08,0.821336,0.000556618,-2.87719e-07,1.92925e-08,0.821893,0.000556101,-2.29841e-07,2.13831e-09,0.822448,0.000555647,-2.23427e-07,-2.78458e-08,0.823004,0.000555117,-3.06964e-07,4.96402e-08,0.823559,0.000554652,-1.58043e-07,-5.15058e-08,0.824113,0.000554181,-3.12561e-07,3.71737e-08,0.824667,0.000553668,-2.0104e-07,-3.75844e-08,0.82522,0.000553153,-3.13793e-07,5.35592e-08,0.825773,0.000552686,-1.53115e-07,-5.74431e-08,0.826326,0.000552207,-3.25444e-07,5.7004e-08,0.826878,0.000551728,-1.54433e-07,-5.13635e-08,0.827429,0.000551265,-3.08523e-07,2.92406e-08,0.82798,0.000550735,-2.20801e-07,-5.99424e-09,0.828531,0.000550276,-2.38784e-07,-5.26363e-09,0.829081,0.000549782,-2.54575e-07,2.70488e-08,0.82963,0.000549354,-1.73429e-07,-4.33268e-08,0.83018,0.000548878,-3.03409e-07,2.7049e-08,0.830728,0.000548352,-2.22262e-07,-5.26461e-09,0.831276,0.000547892,-2.38056e-07,-5.99057e-09,0.831824,0.000547397,-2.56027e-07,2.92269e-08,0.832371,0.000546973,-1.68347e-07,-5.13125e-08,0.832918,0.000546482,-3.22284e-07,5.68139e-08,0.833464,0.000546008,-1.51843e-07,-5.67336e-08,0.83401,0.000545534,-3.22043e-07,5.09113e-08,0.834555,0.000545043,-1.6931e-07,-2.77022e-08,0.8351,0.000544621,-2.52416e-07,2.92924e-10,0.835644,0.000544117,-2.51537e-07,2.65305e-08,0.836188,0.000543694,-1.71946e-07,-4.68105e-08,0.836732,0.00054321,-3.12377e-07,4.15021e-08,0.837275,0.000542709,-1.87871e-07,1.13355e-11,0.837817,0.000542334,-1.87837e-07,-4.15474e-08,0.838359,0.000541833,-3.12479e-07,4.69691e-08,0.838901,0.000541349,-1.71572e-07,-2.71196e-08,0.839442,0.000540925,-2.52931e-07,1.90462e-09,0.839983,0.000540425,-2.47217e-07,1.95011e-08,0.840523,0.000539989,-1.88713e-07,-2.03045e-08,0.841063,0.00053955,-2.49627e-07,2.11216e-09,0.841602,0.000539057,-2.4329e-07,1.18558e-08,0.842141,0.000538606,-2.07723e-07,1.00691e-08,0.842679,0.000538221,-1.77516e-07,-5.21324e-08,0.843217,0.00053771,-3.33913e-07,7.92513e-08,0.843755,0.00053728,-9.6159e-08,-8.60587e-08,0.844292,0.000536829,-3.54335e-07,8.61696e-08,0.844828,0.000536379,-9.58263e-08,-7.98057e-08,0.845364,0.000535948,-3.35243e-07,5.42394e-08,0.8459,0.00053544,-1.72525e-07,-1.79426e-08,0.846435,0.000535041,-2.26353e-07,1.75308e-08,0.84697,0.000534641,-1.73761e-07,-5.21806e-08,0.847505,0.000534137,-3.30302e-07,7.19824e-08,0.848038,0.000533692,-1.14355e-07,-5.69349e-08,0.848572,0.000533293,-2.8516e-07,3.65479e-08,0.849105,0.000532832,-1.75516e-07,-2.96519e-08,0.849638,0.000532392,-2.64472e-07,2.2455e-08,0.85017,0.000531931,-1.97107e-07,-5.63451e-10,0.850702,0.000531535,-1.98797e-07,-2.02011e-08,0.851233,0.000531077,-2.59401e-07,2.17634e-08,0.851764,0.000530623,-1.94111e-07,-7.24794e-09,0.852294,0.000530213,-2.15854e-07,7.22832e-09,0.852824,0.000529803,-1.94169e-07,-2.16653e-08,0.853354,0.00052935,-2.59165e-07,1.98283e-08,0.853883,0.000528891,-1.9968e-07,1.95678e-09,0.854412,0.000528497,-1.9381e-07,-2.76554e-08,0.85494,0.000528027,-2.76776e-07,4.90603e-08,0.855468,0.00052762,-1.29596e-07,-4.93764e-08,0.855995,0.000527213,-2.77725e-07,2.92361e-08,0.856522,0.000526745,-1.90016e-07,-7.96341e-09,0.857049,0.000526341,-2.13907e-07,2.61752e-09,0.857575,0.000525922,-2.06054e-07,-2.50665e-09,0.8581,0.000525502,-2.13574e-07,7.40906e-09,0.858626,0.000525097,-1.91347e-07,-2.71296e-08,0.859151,0.000524633,-2.72736e-07,4.15048e-08,0.859675,0.000524212,-1.48221e-07,-1.96802e-08,0.860199,0.000523856,-2.07262e-07,-2.23886e-08,0.860723,0.000523375,-2.74428e-07,4.96299e-08,0.861246,0.000522975,-1.25538e-07,-5.69216e-08,0.861769,0.000522553,-2.96303e-07,5.88473e-08,0.862291,0.000522137,-1.19761e-07,-5.92584e-08,0.862813,0.00052172,-2.97536e-07,5.8977e-08,0.863334,0.000521301,-1.20605e-07,-5.74403e-08,0.863855,0.000520888,-2.92926e-07,5.15751e-08,0.864376,0.000520457,-1.38201e-07,-2.96506e-08,0.864896,0.000520091,-2.27153e-07,7.42277e-09,0.865416,0.000519659,-2.04885e-07,-4.05057e-11,0.865936,0.00051925,-2.05006e-07,-7.26074e-09,0.866455,0.000518818,-2.26788e-07,2.90835e-08,0.866973,0.000518451,-1.39538e-07,-4.94686e-08,0.867492,0.000518024,-2.87944e-07,4.95814e-08,0.868009,0.000517597,-1.39199e-07,-2.96479e-08,0.868527,0.000517229,-2.28143e-07,9.40539e-09,0.869044,0.000516801,-1.99927e-07,-7.9737e-09,0.86956,0.000516378,-2.23848e-07,2.24894e-08,0.870077,0.000515997,-1.5638e-07,-2.23793e-08,0.870592,0.000515617,-2.23517e-07,7.42302e-09,0.871108,0.000515193,-2.01248e-07,-7.31283e-09,0.871623,0.000514768,-2.23187e-07,2.18283e-08,0.872137,0.000514387,-1.57702e-07,-2.03959e-08,0.872652,0.000514011,-2.1889e-07,1.50711e-10,0.873165,0.000513573,-2.18437e-07,1.97931e-08,0.873679,0.000513196,-1.59058e-07,-1.97183e-08,0.874192,0.000512819,-2.18213e-07,-5.24324e-10,0.874704,0.000512381,-2.19786e-07,2.18156e-08,0.875217,0.000512007,-1.54339e-07,-2.71336e-08,0.875728,0.000511616,-2.3574e-07,2.71141e-08,0.87624,0.000511226,-1.54398e-07,-2.17182e-08,0.876751,0.000510852,-2.19552e-07,1.54131e-10,0.877262,0.000510414,-2.1909e-07,2.11017e-08,0.877772,0.000510039,-1.55785e-07,-2.49562e-08,0.878282,0.000509652,-2.30654e-07,1.91183e-08,0.878791,0.000509248,-1.73299e-07,8.08751e-09,0.8793,0.000508926,-1.49036e-07,-5.14684e-08,0.879809,0.000508474,-3.03441e-07,7.85766e-08,0.880317,0.000508103,-6.77112e-08,-8.40242e-08,0.880825,0.000507715,-3.19784e-07,7.87063e-08,0.881333,0.000507312,-8.36649e-08,-5.19871e-08,0.88184,0.000506988,-2.39626e-07,1.00327e-08,0.882346,0.000506539,-2.09528e-07,1.18562e-08,0.882853,0.000506156,-1.73959e-07,2.14703e-09,0.883359,0.000505814,-1.67518e-07,-2.04444e-08,0.883864,0.000505418,-2.28851e-07,2.00258e-08,0.88437,0.00050502,-1.68774e-07,-5.42855e-11,0.884874,0.000504682,-1.68937e-07,-1.98087e-08,0.885379,0.000504285,-2.28363e-07,1.96842e-08,0.885883,0.000503887,-1.6931e-07,6.76342e-10,0.886387,0.000503551,-1.67281e-07,-2.23896e-08,0.88689,0.000503149,-2.3445e-07,2.92774e-08,0.887393,0.000502768,-1.46618e-07,-3.51152e-08,0.887896,0.00050237,-2.51963e-07,5.15787e-08,0.888398,0.00050202,-9.72271e-08,-5.19903e-08,0.8889,0.00050167,-2.53198e-07,3.71732e-08,0.889401,0.000501275,-1.41678e-07,-3.70978e-08,0.889902,0.00050088,-2.52972e-07,5.16132e-08,0.890403,0.000500529,-9.81321e-08,-5.01459e-08,0.890903,0.000500183,-2.4857e-07,2.9761e-08,0.891403,0.000499775,-1.59287e-07,-9.29351e-09,0.891903,0.000499428,-1.87167e-07,7.41301e-09,0.892402,0.000499076,-1.64928e-07,-2.03585e-08,0.892901,0.000498685,-2.26004e-07,1.44165e-08,0.893399,0.000498276,-1.82754e-07,2.22974e-08,0.893898,0.000497978,-1.15862e-07,-4.40013e-08,0.894395,0.000497614,-2.47866e-07,3.44985e-08,0.894893,0.000497222,-1.44371e-07,-3.43882e-08,0.89539,0.00049683,-2.47535e-07,4.34497e-08,0.895886,0.000496465,-1.17186e-07,-2.02012e-08,0.896383,0.00049617,-1.7779e-07,-2.22497e-08,0.896879,0.000495748,-2.44539e-07,4.95952e-08,0.897374,0.000495408,-9.57532e-08,-5.69217e-08,0.89787,0.000495045,-2.66518e-07,5.88823e-08,0.898364,0.000494689,-8.98713e-08,-5.93983e-08,0.898859,0.000494331,-2.68066e-07,5.95017e-08,0.899353,0.000493973,-8.95613e-08,-5.9399e-08,0.899847,0.000493616,-2.67758e-07,5.8885e-08,0.90034,0.000493257,-9.11033e-08,-5.69317e-08,0.900833,0.000492904,-2.61898e-07,4.96326e-08,0.901326,0.000492529,-1.13001e-07,-2.23893e-08,0.901819,0.000492236,-1.80169e-07,-1.968e-08,0.902311,0.000491817,-2.39209e-07,4.15047e-08,0.902802,0.000491463,-1.14694e-07,-2.71296e-08,0.903293,0.000491152,-1.96083e-07,7.409e-09,0.903784,0.000490782,-1.73856e-07,-2.50645e-09,0.904275,0.000490427,-1.81376e-07,2.61679e-09,0.904765,0.000490072,-1.73525e-07,-7.96072e-09,0.905255,0.000489701,-1.97407e-07,2.92261e-08,0.905745,0.000489394,-1.09729e-07,-4.93389e-08,0.906234,0.000489027,-2.57746e-07,4.89204e-08,0.906723,0.000488658,-1.10985e-07,-2.71333e-08,0.907211,0.000488354,-1.92385e-07,8.30861e-12,0.907699,0.00048797,-1.9236e-07,2.71001e-08,0.908187,0.000487666,-1.1106e-07,-4.88041e-08,0.908675,0.000487298,-2.57472e-07,4.89069e-08,0.909162,0.000486929,-1.10751e-07,-2.76143e-08,0.909649,0.000486625,-1.93594e-07,1.9457e-09,0.910135,0.000486244,-1.87757e-07,1.98315e-08,0.910621,0.000485928,-1.28262e-07,-2.16671e-08,0.911107,0.000485606,-1.93264e-07,7.23216e-09,0.911592,0.000485241,-1.71567e-07,-7.26152e-09,0.912077,0.000484877,-1.93352e-07,2.18139e-08,0.912562,0.000484555,-1.2791e-07,-2.03895e-08,0.913047,0.000484238,-1.89078e-07,1.39494e-10,0.913531,0.000483861,-1.8866e-07,1.98315e-08,0.914014,0.000483543,-1.29165e-07,-1.98609e-08,0.914498,0.000483225,-1.88748e-07,7.39912e-12,0.914981,0.000482847,-1.88726e-07,1.98313e-08,0.915463,0.000482529,-1.29232e-07,-1.9728e-08,0.915946,0.000482212,-1.88416e-07,-5.24035e-10,0.916428,0.000481833,-1.89988e-07,2.18241e-08,0.916909,0.000481519,-1.24516e-07,-2.71679e-08,0.917391,0.000481188,-2.06019e-07,2.72427e-08,0.917872,0.000480858,-1.24291e-07,-2.21985e-08,0.918353,0.000480543,-1.90886e-07,1.94644e-09,0.918833,0.000480167,-1.85047e-07,1.44127e-08,0.919313,0.00047984,-1.41809e-07,7.39438e-12,0.919793,0.000479556,-1.41787e-07,-1.44423e-08,0.920272,0.000479229,-1.85114e-07,-1.84291e-09,0.920751,0.000478854,-1.90642e-07,2.18139e-08,0.92123,0.000478538,-1.25201e-07,-2.58081e-08,0.921708,0.00047821,-2.02625e-07,2.18139e-08,0.922186,0.00047787,-1.37183e-07,-1.84291e-09,0.922664,0.00047759,-1.42712e-07,-1.44423e-08,0.923141,0.000477262,-1.86039e-07,7.34701e-12,0.923618,0.00047689,-1.86017e-07,1.44129e-08,0.924095,0.000476561,-1.42778e-07,1.94572e-09,0.924572,0.000476281,-1.36941e-07,-2.21958e-08,0.925048,0.000475941,-2.03528e-07,2.72327e-08,0.925523,0.000475615,-1.2183e-07,-2.71304e-08,0.925999,0.00047529,-2.03221e-07,2.16843e-08,0.926474,0.000474949,-1.38168e-07,-2.16005e-12,0.926949,0.000474672,-1.38175e-07,-2.16756e-08,0.927423,0.000474331,-2.03202e-07,2.71001e-08,0.927897,0.000474006,-1.21902e-07,-2.71201e-08,0.928371,0.000473681,-2.03262e-07,2.17757e-08,0.928845,0.00047334,-1.37935e-07,-3.78028e-10,0.929318,0.000473063,-1.39069e-07,-2.02636e-08,0.929791,0.000472724,-1.9986e-07,2.18276e-08,0.930263,0.000472389,-1.34377e-07,-7.44231e-09,0.930736,0.000472098,-1.56704e-07,7.94165e-09,0.931208,0.000471809,-1.32879e-07,-2.43243e-08,0.931679,0.00047147,-2.05851e-07,2.97508e-08,0.932151,0.000471148,-1.16599e-07,-3.50742e-08,0.932622,0.000470809,-2.21822e-07,5.09414e-08,0.933092,0.000470518,-6.89976e-08,-4.94821e-08,0.933563,0.000470232,-2.17444e-07,2.77775e-08,0.934033,0.00046988,-1.34111e-07,-2.02351e-09,0.934502,0.000469606,-1.40182e-07,-1.96835e-08,0.934972,0.000469267,-1.99232e-07,2.11529e-08,0.935441,0.000468932,-1.35774e-07,-5.32332e-09,0.93591,0.000468644,-1.51743e-07,1.40413e-10,0.936378,0.000468341,-1.51322e-07,4.76166e-09,0.936846,0.000468053,-1.37037e-07,-1.9187e-08,0.937314,0.000467721,-1.94598e-07,1.23819e-08,0.937782,0.000467369,-1.57453e-07,2.92642e-08,0.938249,0.000467142,-6.96601e-08,-6.98342e-08,0.938716,0.000466793,-2.79163e-07,7.12586e-08,0.939183,0.000466449,-6.53869e-08,-3.63863e-08,0.939649,0.000466209,-1.74546e-07,1.46818e-08,0.940115,0.000465904,-1.305e-07,-2.2341e-08,0.940581,0.000465576,-1.97523e-07,1.50774e-08,0.941046,0.000465226,-1.52291e-07,2.16359e-08,0.941511,0.000464986,-8.73832e-08,-4.20162e-08,0.941976,0.000464685,-2.13432e-07,2.72198e-08,0.942441,0.00046434,-1.31773e-07,-7.2581e-09,0.942905,0.000464055,-1.53547e-07,1.81263e-09,0.943369,0.000463753,-1.48109e-07,7.58386e-12,0.943832,0.000463457,-1.48086e-07,-1.84298e-09,0.944296,0.000463155,-1.53615e-07,7.36433e-09,0.944759,0.00046287,-1.31522e-07,-2.76143e-08,0.945221,0.000462524,-2.14365e-07,4.34883e-08,0.945684,0.000462226,-8.39003e-08,-2.71297e-08,0.946146,0.000461977,-1.65289e-07,5.42595e-09,0.946608,0.000461662,-1.49012e-07,5.42593e-09,0.947069,0.000461381,-1.32734e-07,-2.71297e-08,0.94753,0.000461034,-2.14123e-07,4.34881e-08,0.947991,0.000460736,-8.36585e-08,-2.76134e-08,0.948452,0.000460486,-1.66499e-07,7.36083e-09,0.948912,0.000460175,-1.44416e-07,-1.82993e-09,0.949372,0.000459881,-1.49906e-07,-4.11073e-11,0.949832,0.000459581,-1.50029e-07,1.99434e-09,0.950291,0.000459287,-1.44046e-07,-7.93627e-09,0.950751,0.000458975,-1.67855e-07,2.97507e-08,0.951209,0.000458728,-7.86029e-08,-5.1462e-08,0.951668,0.000458417,-2.32989e-07,5.6888e-08,0.952126,0.000458121,-6.2325e-08,-5.68806e-08,0.952584,0.000457826,-2.32967e-07,5.14251e-08,0.953042,0.000457514,-7.86914e-08,-2.96107e-08,0.953499,0.000457268,-1.67523e-07,7.41296e-09,0.953956,0.000456955,-1.45285e-07,-4.11262e-11,0.954413,0.000456665,-1.45408e-07,-7.24847e-09,0.95487,0.000456352,-1.67153e-07,2.9035e-08,0.955326,0.000456105,-8.00484e-08,-4.92869e-08,0.955782,0.000455797,-2.27909e-07,4.89032e-08,0.956238,0.000455488,-8.11994e-08,-2.71166e-08,0.956693,0.000455244,-1.62549e-07,-4.13678e-11,0.957148,0.000454919,-1.62673e-07,2.72821e-08,0.957603,0.000454675,-8.0827e-08,-4.94824e-08,0.958057,0.000454365,-2.29274e-07,5.14382e-08,0.958512,0.000454061,-7.49597e-08,-3.7061e-08,0.958965,0.0004538,-1.86143e-07,3.72013e-08,0.959419,0.000453539,-7.45389e-08,-5.21396e-08,0.959873,0.000453234,-2.30958e-07,5.21476e-08,0.960326,0.000452928,-7.45146e-08,-3.72416e-08,0.960778,0.000452667,-1.8624e-07,3.72143e-08,0.961231,0.000452407,-7.45967e-08,-5.20109e-08,0.961683,0.000452101,-2.30629e-07,5.16199e-08,0.962135,0.000451795,-7.57696e-08,-3.52595e-08,0.962587,0.000451538,-1.81548e-07,2.98133e-08,0.963038,0.000451264,-9.2108e-08,-2.43892e-08,0.963489,0.000451007,-1.65276e-07,8.13892e-09,0.96394,0.000450701,-1.40859e-07,-8.16647e-09,0.964391,0.000450394,-1.65358e-07,2.45269e-08,0.964841,0.000450137,-9.17775e-08,-3.03367e-08,0.965291,0.000449863,-1.82787e-07,3.7215e-08,0.965741,0.000449609,-7.11424e-08,-5.89188e-08,0.96619,0.00044929,-2.47899e-07,7.92509e-08,0.966639,0.000449032,-1.01462e-08,-7.92707e-08,0.967088,0.000448773,-2.47958e-07,5.90181e-08,0.967537,0.000448455,-7.0904e-08,-3.75925e-08,0.967985,0.0004482,-1.83681e-07,3.17471e-08,0.968433,0.000447928,-8.84401e-08,-2.97913e-08,0.968881,0.000447662,-1.77814e-07,2.78133e-08,0.969329,0.000447389,-9.4374e-08,-2.18572e-08,0.969776,0.000447135,-1.59946e-07,1.10134e-11,0.970223,0.000446815,-1.59913e-07,2.18132e-08,0.97067,0.000446561,-9.44732e-08,-2.76591e-08,0.971116,0.000446289,-1.7745e-07,2.92185e-08,0.971562,0.000446022,-8.97948e-08,-2.96104e-08,0.972008,0.000445753,-1.78626e-07,2.96185e-08,0.972454,0.000445485,-8.97706e-08,-2.92588e-08,0.972899,0.000445218,-1.77547e-07,2.78123e-08,0.973344,0.000444946,-9.41103e-08,-2.23856e-08,0.973789,0.000444691,-1.61267e-07,2.12559e-09,0.974233,0.000444374,-1.5489e-07,1.38833e-08,0.974678,0.000444106,-1.13241e-07,1.94591e-09,0.975122,0.000443886,-1.07403e-07,-2.16669e-08,0.975565,0.000443606,-1.72404e-07,2.5117e-08,0.976009,0.000443336,-9.70526e-08,-1.91963e-08,0.976452,0.000443085,-1.54642e-07,-7.93627e-09,0.976895,0.000442752,-1.7845e-07,5.09414e-08,0.977338,0.000442548,-2.56262e-08,-7.66201e-08,0.97778,0.000442266,-2.55486e-07,7.67249e-08,0.978222,0.000441986,-2.53118e-08,-5.14655e-08,0.978664,0.000441781,-1.79708e-07,9.92773e-09,0.979106,0.000441451,-1.49925e-07,1.17546e-08,0.979547,0.000441186,-1.14661e-07,2.65868e-09,0.979988,0.000440965,-1.06685e-07,-2.23893e-08,0.980429,0.000440684,-1.73853e-07,2.72939e-08,0.980869,0.000440419,-9.19716e-08,-2.71816e-08,0.98131,0.000440153,-1.73516e-07,2.18278e-08,0.98175,0.000439872,-1.08033e-07,-5.24833e-10,0.982189,0.000439654,-1.09607e-07,-1.97284e-08,0.982629,0.000439376,-1.68793e-07,1.98339e-08,0.983068,0.000439097,-1.09291e-07,-2.62901e-12,0.983507,0.000438879,-1.09299e-07,-1.98234e-08,0.983946,0.000438601,-1.68769e-07,1.96916e-08,0.984384,0.000438322,-1.09694e-07,6.6157e-10,0.984823,0.000438105,-1.0771e-07,-2.23379e-08,0.985261,0.000437823,-1.74723e-07,2.90855e-08,0.985698,0.00043756,-8.74669e-08,-3.43992e-08,0.986136,0.000437282,-1.90665e-07,4.89068e-08,0.986573,0.000437048,-4.39442e-08,-4.20188e-08,0.98701,0.000436834,-1.7e-07,-4.11073e-11,0.987446,0.000436494,-1.70124e-07,4.21832e-08,0.987883,0.00043628,-4.35742e-08,-4.94824e-08,0.988319,0.000436044,-1.92021e-07,3.6537e-08,0.988755,0.00043577,-8.24102e-08,-3.70611e-08,0.989191,0.000435494,-1.93593e-07,5.21026e-08,0.989626,0.000435263,-3.72855e-08,-5.21402e-08,0.990061,0.000435032,-1.93706e-07,3.7249e-08,0.990496,0.000434756,-8.19592e-08,-3.72512e-08,0.990931,0.000434481,-1.93713e-07,5.21511e-08,0.991365,0.00043425,-3.72595e-08,-5.21439e-08,0.991799,0.000434019,-1.93691e-07,3.72152e-08,0.992233,0.000433743,-8.20456e-08,-3.71123e-08,0.992667,0.000433468,-1.93382e-07,5.16292e-08,0.9931,0.000433236,-3.84947e-08,-5.01953e-08,0.993533,0.000433008,-1.89081e-07,2.99427e-08,0.993966,0.00043272,-9.92525e-08,-9.9708e-09,0.994399,0.000432491,-1.29165e-07,9.94051e-09,0.994831,0.000432263,-9.93434e-08,-2.97912e-08,0.995263,0.000431975,-1.88717e-07,4.96198e-08,0.995695,0.000431746,-3.98578e-08,-4.94785e-08,0.996127,0.000431518,-1.88293e-07,2.9085e-08,0.996558,0.000431229,-1.01038e-07,-7.25675e-09,0.996989,0.000431005,-1.22809e-07,-5.79945e-11,0.99742,0.000430759,-1.22983e-07,7.48873e-09,0.997851,0.000430536,-1.00516e-07,-2.98969e-08,0.998281,0.000430245,-1.90207e-07,5.24942e-08,0.998711,0.000430022,-3.27246e-08,-6.08706e-08,0.999141,0.000429774,-2.15336e-07,7.17788e-08,0.999571,0.000429392,0.,0.};$/;"	m	namespace:cv::cuda::device::color_detail
c_sRGBInvGammaTab	opencv2/cudev/functional/detail/color_cvt.hpp	/^    __constant__ float c_sRGBInvGammaTab[] = {0,0.0126255,0.,-8.33961e-06,0.0126172,0.0126005,-2.50188e-05,4.1698e-05,0.0252344,0.0126756,0.000100075,-0.000158451,0.0378516,0.0124004,-0.000375277,-0.000207393,0.0496693,0.0110276,-0.000997456,0.00016837,0.0598678,0.00953783,-0.000492346,2.07235e-05,0.068934,0.00861531,-0.000430176,3.62876e-05,0.0771554,0.00786382,-0.000321313,1.87625e-05,0.0847167,0.00727748,-0.000265025,1.53594e-05,0.0917445,0.00679351,-0.000218947,1.10545e-05,0.0983301,0.00638877,-0.000185784,8.66984e-06,0.104542,0.00604322,-0.000159774,6.82996e-06,0.110432,0.00574416,-0.000139284,5.51008e-06,0.116042,0.00548212,-0.000122754,4.52322e-06,0.121406,0.00525018,-0.000109184,3.75557e-06,0.126551,0.00504308,-9.79177e-05,3.17134e-06,0.131499,0.00485676,-8.84037e-05,2.68469e-06,0.13627,0.004688,-8.03496e-05,2.31725e-06,0.14088,0.00453426,-7.33978e-05,2.00868e-06,0.145343,0.00439349,-6.73718e-05,1.74775e-06,0.149671,0.00426399,-6.21286e-05,1.53547e-06,0.153875,0.00414434,-5.75222e-05,1.364e-06,0.157963,0.00403338,-5.34301e-05,1.20416e-06,0.161944,0.00393014,-4.98177e-05,1.09114e-06,0.165825,0.00383377,-4.65443e-05,9.57987e-07,0.169613,0.00374356,-4.36703e-05,8.88359e-07,0.173314,0.00365888,-4.10052e-05,7.7849e-07,0.176933,0.00357921,-3.86697e-05,7.36254e-07,0.180474,0.00350408,-3.6461e-05,6.42534e-07,0.183942,0.00343308,-3.45334e-05,6.12614e-07,0.187342,0.00336586,-3.26955e-05,5.42894e-07,0.190675,0.00330209,-3.10669e-05,5.08967e-07,0.193947,0.00324149,-2.954e-05,4.75977e-07,0.197159,0.00318383,-2.8112e-05,4.18343e-07,0.200315,0.00312887,-2.6857e-05,4.13651e-07,0.203418,0.00307639,-2.5616e-05,3.70847e-07,0.206469,0.00302627,-2.45035e-05,3.3813e-07,0.209471,0.00297828,-2.34891e-05,3.32999e-07,0.212426,0.0029323,-2.24901e-05,2.96826e-07,0.215336,0.00288821,-2.15996e-05,2.82736e-07,0.218203,0.00284586,-2.07514e-05,2.70961e-07,0.221029,0.00280517,-1.99385e-05,2.42744e-07,0.223814,0.00276602,-1.92103e-05,2.33277e-07,0.226561,0.0027283,-1.85105e-05,2.2486e-07,0.229271,0.00269195,-1.78359e-05,2.08383e-07,0.231945,0.00265691,-1.72108e-05,1.93305e-07,0.234585,0.00262307,-1.66308e-05,1.80687e-07,0.237192,0.00259035,-1.60888e-05,1.86632e-07,0.239766,0.00255873,-1.55289e-05,1.60569e-07,0.24231,0.00252815,-1.50472e-05,1.54566e-07,0.244823,0.00249852,-1.45835e-05,1.59939e-07,0.247307,0.00246983,-1.41037e-05,1.29549e-07,0.249763,0.00244202,-1.3715e-05,1.41429e-07,0.252191,0.00241501,-1.32907e-05,1.39198e-07,0.254593,0.00238885,-1.28731e-05,1.06444e-07,0.256969,0.00236342,-1.25538e-05,1.2048e-07,0.25932,0.00233867,-1.21924e-05,1.26892e-07,0.261647,0.00231467,-1.18117e-05,8.72084e-08,0.26395,0.00229131,-1.15501e-05,1.20323e-07,0.26623,0.00226857,-1.11891e-05,8.71514e-08,0.268487,0.00224645,-1.09276e-05,9.73165e-08,0.270723,0.00222489,-1.06357e-05,8.98259e-08,0.272937,0.00220389,-1.03662e-05,7.98218e-08,0.275131,0.00218339,-1.01267e-05,9.75254e-08,0.277304,0.00216343,-9.83416e-06,6.65195e-08,0.279458,0.00214396,-9.63461e-06,8.34313e-08,0.281592,0.00212494,-9.38431e-06,7.65919e-08,0.283708,0.00210641,-9.15454e-06,5.7236e-08,0.285805,0.00208827,-8.98283e-06,8.18939e-08,0.287885,0.00207055,-8.73715e-06,6.2224e-08,0.289946,0.00205326,-8.55047e-06,5.66388e-08,0.291991,0.00203633,-8.38056e-06,6.88491e-08,0.294019,0.00201978,-8.17401e-06,5.53955e-08,0.296031,0.00200359,-8.00782e-06,6.71971e-08,0.298027,0.00198778,-7.80623e-06,3.34439e-08,0.300007,0.00197227,-7.7059e-06,6.7248e-08,0.301971,0.00195706,-7.50416e-06,5.51915e-08,0.303921,0.00194221,-7.33858e-06,3.98124e-08,0.305856,0.00192766,-7.21915e-06,5.37795e-08,0.307776,0.00191338,-7.05781e-06,4.30919e-08,0.309683,0.00189939,-6.92853e-06,4.20744e-08,0.311575,0.00188566,-6.80231e-06,5.68321e-08,0.313454,0.00187223,-6.63181e-06,2.86195e-08,0.31532,0.00185905,-6.54595e-06,3.73075e-08,0.317172,0.00184607,-6.43403e-06,6.05684e-08,0.319012,0.00183338,-6.25233e-06,1.84426e-08,0.320839,0.00182094,-6.197e-06,4.44757e-08,0.322654,0.00180867,-6.06357e-06,4.20729e-08,0.324456,0.00179667,-5.93735e-06,2.56511e-08,0.326247,0.00178488,-5.8604e-06,3.41368e-08,0.328026,0.00177326,-5.75799e-06,4.64177e-08,0.329794,0.00176188,-5.61874e-06,1.86107e-08,0.33155,0.0017507,-5.5629e-06,2.81511e-08,0.333295,0.00173966,-5.47845e-06,4.75987e-08,0.335029,0.00172884,-5.33565e-06,1.98726e-08,0.336753,0.00171823,-5.27604e-06,2.19226e-08,0.338466,0.00170775,-5.21027e-06,4.14483e-08,0.340169,0.00169745,-5.08592e-06,2.09017e-08,0.341861,0.00168734,-5.02322e-06,2.39561e-08,0.343543,0.00167737,-4.95135e-06,3.22852e-08,0.345216,0.00166756,-4.85449e-06,2.57173e-08,0.346878,0.00165793,-4.77734e-06,1.38569e-08,0.348532,0.00164841,-4.73577e-06,3.80634e-08,0.350175,0.00163906,-4.62158e-06,1.27043e-08,0.35181,0.00162985,-4.58347e-06,3.03279e-08,0.353435,0.00162078,-4.49249e-06,1.49961e-08,0.355051,0.00161184,-4.4475e-06,2.88977e-08,0.356659,0.00160303,-4.3608e-06,1.84241e-08,0.358257,0.00159436,-4.30553e-06,1.6616e-08,0.359848,0.0015858,-4.25568e-06,3.43218e-08,0.361429,0.00157739,-4.15272e-06,-4.89172e-09,0.363002,0.00156907,-4.16739e-06,4.48498e-08,0.364567,0.00156087,-4.03284e-06,4.30676e-09,0.366124,0.00155282,-4.01992e-06,2.73303e-08,0.367673,0.00154486,-3.93793e-06,5.58036e-09,0.369214,0.001537,-3.92119e-06,3.97554e-08,0.370747,0.00152928,-3.80193e-06,-1.55904e-08,0.372272,0.00152163,-3.8487e-06,5.24081e-08,0.37379,0.00151409,-3.69147e-06,-1.52272e-08,0.375301,0.00150666,-3.73715e-06,3.83028e-08,0.376804,0.0014993,-3.62225e-06,1.10278e-08,0.378299,0.00149209,-3.58916e-06,6.99326e-09,0.379788,0.00148493,-3.56818e-06,2.06038e-08,0.381269,0.00147786,-3.50637e-06,2.98009e-08,0.382744,0.00147093,-3.41697e-06,-2.05978e-08,0.384211,0.00146404,-3.47876e-06,5.25899e-08,0.385672,0.00145724,-3.32099e-06,-1.09471e-08,0.387126,0.00145056,-3.35383e-06,2.10009e-08,0.388573,0.00144392,-3.29083e-06,1.63501e-08,0.390014,0.00143739,-3.24178e-06,3.00641e-09,0.391448,0.00143091,-3.23276e-06,3.12282e-08,0.392875,0.00142454,-3.13908e-06,-8.70932e-09,0.394297,0.00141824,-3.16521e-06,3.34114e-08,0.395712,0.00141201,-3.06497e-06,-5.72754e-09,0.397121,0.00140586,-3.08215e-06,1.9301e-08,0.398524,0.00139975,-3.02425e-06,1.7931e-08,0.39992,0.00139376,-2.97046e-06,-1.61822e-09,0.401311,0.00138781,-2.97531e-06,1.83442e-08,0.402696,0.00138192,-2.92028e-06,1.76485e-08,0.404075,0.00137613,-2.86733e-06,4.68617e-10,0.405448,0.00137039,-2.86593e-06,1.02794e-08,0.406816,0.00136469,-2.83509e-06,1.80179e-08,0.408178,0.00135908,-2.78104e-06,7.05594e-09,0.409534,0.00135354,-2.75987e-06,1.33633e-08,0.410885,0.00134806,-2.71978e-06,-9.04568e-10,0.41223,0.00134261,-2.72249e-06,2.0057e-08,0.41357,0.00133723,-2.66232e-06,1.00841e-08,0.414905,0.00133194,-2.63207e-06,-7.88835e-10,0.416234,0.00132667,-2.63444e-06,2.28734e-08,0.417558,0.00132147,-2.56582e-06,-1.29785e-09,0.418877,0.00131633,-2.56971e-06,1.21205e-08,0.420191,0.00131123,-2.53335e-06,1.24202e-08,0.421499,0.0013062,-2.49609e-06,-2.19681e-09,0.422803,0.0013012,-2.50268e-06,2.61696e-08,0.424102,0.00129628,-2.42417e-06,-1.30747e-08,0.425396,0.00129139,-2.46339e-06,2.6129e-08,0.426685,0.00128654,-2.38501e-06,-2.03454e-09,0.427969,0.00128176,-2.39111e-06,1.18115e-08,0.429248,0.00127702,-2.35567e-06,1.43932e-08,0.430523,0.00127235,-2.31249e-06,-9.77965e-09,0.431793,0.00126769,-2.34183e-06,2.47253e-08,0.433058,0.00126308,-2.26766e-06,2.85278e-10,0.434319,0.00125855,-2.2668e-06,3.93614e-09,0.435575,0.00125403,-2.25499e-06,1.37722e-08,0.436827,0.00124956,-2.21368e-06,5.79803e-10,0.438074,0.00124513,-2.21194e-06,1.37112e-08,0.439317,0.00124075,-2.1708e-06,4.17973e-09,0.440556,0.00123642,-2.15826e-06,-6.27703e-10,0.44179,0.0012321,-2.16015e-06,2.81332e-08,0.44302,0.00122787,-2.07575e-06,-2.24985e-08,0.444246,0.00122365,-2.14324e-06,3.20586e-08,0.445467,0.00121946,-2.04707e-06,-1.6329e-08,0.446685,0.00121532,-2.09605e-06,3.32573e-08,0.447898,0.00121122,-1.99628e-06,-2.72927e-08,0.449107,0.00120715,-2.07816e-06,4.6111e-08,0.450312,0.00120313,-1.93983e-06,-3.79416e-08,0.451514,0.00119914,-2.05365e-06,4.60507e-08,0.452711,0.00119517,-1.9155e-06,-2.7052e-08,0.453904,0.00119126,-1.99666e-06,3.23551e-08,0.455093,0.00118736,-1.89959e-06,-1.29613e-08,0.456279,0.00118352,-1.93848e-06,1.94905e-08,0.45746,0.0011797,-1.88e-06,-5.39588e-09,0.458638,0.00117593,-1.89619e-06,2.09282e-09,0.459812,0.00117214,-1.88991e-06,2.68267e-08,0.460982,0.00116844,-1.80943e-06,-1.99925e-08,0.462149,0.00116476,-1.86941e-06,2.3341e-08,0.463312,0.00116109,-1.79939e-06,-1.37674e-08,0.464471,0.00115745,-1.84069e-06,3.17287e-08,0.465627,0.00115387,-1.7455e-06,-2.37407e-08,0.466779,0.00115031,-1.81673e-06,3.34315e-08,0.467927,0.00114677,-1.71643e-06,-2.05786e-08,0.469073,0.00114328,-1.77817e-06,1.90802e-08,0.470214,0.00113978,-1.72093e-06,3.86247e-09,0.471352,0.00113635,-1.70934e-06,-4.72759e-09,0.472487,0.00113292,-1.72352e-06,1.50478e-08,0.473618,0.00112951,-1.67838e-06,4.14108e-09,0.474746,0.00112617,-1.66595e-06,-1.80986e-09,0.47587,0.00112283,-1.67138e-06,3.09816e-09,0.476991,0.0011195,-1.66209e-06,1.92198e-08,0.478109,0.00111623,-1.60443e-06,-2.03726e-08,0.479224,0.00111296,-1.66555e-06,3.2468e-08,0.480335,0.00110973,-1.56814e-06,-2.00922e-08,0.481443,0.00110653,-1.62842e-06,1.80983e-08,0.482548,0.00110333,-1.57413e-06,7.30362e-09,0.48365,0.0011002,-1.55221e-06,-1.75107e-08,0.484749,0.00109705,-1.60475e-06,3.29373e-08,0.485844,0.00109393,-1.50594e-06,-2.48315e-08,0.486937,0.00109085,-1.58043e-06,3.65865e-08,0.488026,0.0010878,-1.47067e-06,-3.21078e-08,0.489112,0.00108476,-1.56699e-06,3.22397e-08,0.490195,0.00108172,-1.47027e-06,-7.44391e-09,0.491276,0.00107876,-1.49261e-06,-2.46428e-09,0.492353,0.00107577,-1.5e-06,1.73011e-08,0.493427,0.00107282,-1.4481e-06,-7.13552e-09,0.494499,0.0010699,-1.4695e-06,1.1241e-08,0.495567,0.001067,-1.43578e-06,-8.02637e-09,0.496633,0.0010641,-1.45986e-06,2.08645e-08,0.497695,0.00106124,-1.39726e-06,-1.58271e-08,0.498755,0.0010584,-1.44475e-06,1.26415e-08,0.499812,0.00105555,-1.40682e-06,2.48655e-08,0.500866,0.00105281,-1.33222e-06,-5.24988e-08,0.501918,0.00104999,-1.48972e-06,6.59206e-08,0.502966,0.00104721,-1.29196e-06,-3.237e-08,0.504012,0.00104453,-1.38907e-06,3.95479e-09,0.505055,0.00104176,-1.3772e-06,1.65509e-08,0.506096,0.00103905,-1.32755e-06,-1.05539e-08,0.507133,0.00103637,-1.35921e-06,2.56648e-08,0.508168,0.00103373,-1.28222e-06,-3.25007e-08,0.509201,0.00103106,-1.37972e-06,4.47336e-08,0.51023,0.00102844,-1.24552e-06,-2.72245e-08,0.511258,0.00102587,-1.32719e-06,4.55952e-09,0.512282,0.00102323,-1.31352e-06,8.98645e-09,0.513304,0.00102063,-1.28656e-06,1.90992e-08,0.514323,0.00101811,-1.22926e-06,-2.57786e-08,0.51534,0.00101557,-1.30659e-06,2.44104e-08,0.516355,0.00101303,-1.23336e-06,-1.22581e-08,0.517366,0.00101053,-1.27014e-06,2.4622e-08,0.518376,0.00100806,-1.19627e-06,-2.66253e-08,0.519383,0.00100559,-1.27615e-06,2.22744e-08,0.520387,0.00100311,-1.20932e-06,-2.8679e-09,0.521389,0.00100068,-1.21793e-06,-1.08029e-08,0.522388,0.000998211,-1.25034e-06,4.60795e-08,0.523385,0.000995849,-1.1121e-06,-5.4306e-08,0.52438,0.000993462,-1.27502e-06,5.19354e-08,0.525372,0.000991067,-1.11921e-06,-3.42262e-08,0.526362,0.000988726,-1.22189e-06,2.53646e-08,0.52735,0.000986359,-1.14579e-06,-7.62782e-09,0.528335,0.000984044,-1.16868e-06,5.14668e-09,0.529318,0.000981722,-1.15324e-06,-1.29589e-08,0.530298,0.000979377,-1.19211e-06,4.66888e-08,0.531276,0.000977133,-1.05205e-06,-5.45868e-08,0.532252,0.000974865,-1.21581e-06,5.24495e-08,0.533226,0.000972591,-1.05846e-06,-3.60019e-08,0.534198,0.000970366,-1.16647e-06,3.19537e-08,0.535167,0.000968129,-1.07061e-06,-3.2208e-08,0.536134,0.000965891,-1.16723e-06,3.72738e-08,0.537099,0.000963668,-1.05541e-06,2.32205e-09,0.538061,0.000961564,-1.04844e-06,-4.65618e-08,0.539022,0.000959328,-1.18813e-06,6.47159e-08,0.53998,0.000957146,-9.93979e-07,-3.3488e-08,0.540936,0.000955057,-1.09444e-06,9.63166e-09,0.54189,0.000952897,-1.06555e-06,-5.03871e-09,0.542842,0.000950751,-1.08066e-06,1.05232e-08,0.543792,0.000948621,-1.04909e-06,2.25503e-08,0.544739,0.000946591,-9.81444e-07,-4.11195e-08,0.545685,0.000944504,-1.1048e-06,2.27182e-08,0.546628,0.000942363,-1.03665e-06,9.85146e-09,0.54757,0.000940319,-1.00709e-06,-2.51938e-09,0.548509,0.000938297,-1.01465e-06,2.25858e-10,0.549446,0.000936269,-1.01397e-06,1.61598e-09,0.550381,0.000934246,-1.00913e-06,-6.68983e-09,0.551315,0.000932207,-1.0292e-06,2.51434e-08,0.552246,0.000930224,-9.53765e-07,-3.42793e-08,0.553175,0.000928214,-1.0566e-06,5.23688e-08,0.554102,0.000926258,-8.99497e-07,-5.59865e-08,0.555028,0.000924291,-1.06746e-06,5.23679e-08,0.555951,0.000922313,-9.10352e-07,-3.42763e-08,0.556872,0.00092039,-1.01318e-06,2.51326e-08,0.557792,0.000918439,-9.37783e-07,-6.64954e-09,0.558709,0.000916543,-9.57732e-07,1.46554e-09,0.559625,0.000914632,-9.53335e-07,7.87281e-10,0.560538,0.000912728,-9.50973e-07,-4.61466e-09,0.56145,0.000910812,-9.64817e-07,1.76713e-08,0.56236,0.000908935,-9.11804e-07,-6.46564e-09,0.563268,0.000907092,-9.312e-07,8.19121e-09,0.564174,0.000905255,-9.06627e-07,-2.62992e-08,0.565078,0.000903362,-9.85524e-07,3.74007e-08,0.565981,0.000901504,-8.73322e-07,-4.0942e-09,0.566882,0.000899745,-8.85605e-07,-2.1024e-08,0.56778,0.00089791,-9.48677e-07,2.85854e-08,0.568677,0.000896099,-8.62921e-07,-3.3713e-08,0.569573,0.000894272,-9.64059e-07,4.6662e-08,0.570466,0.000892484,-8.24073e-07,-3.37258e-08,0.571358,0.000890734,-9.25251e-07,2.86365e-08,0.572247,0.00088897,-8.39341e-07,-2.12155e-08,0.573135,0.000887227,-9.02988e-07,-3.37913e-09,0.574022,0.000885411,-9.13125e-07,3.47319e-08,0.574906,0.000883689,-8.08929e-07,-1.63394e-08,0.575789,0.000882022,-8.57947e-07,-2.8979e-08,0.57667,0.00088022,-9.44885e-07,7.26509e-08,0.57755,0.000878548,-7.26932e-07,-8.28106e-08,0.578427,0.000876845,-9.75364e-07,7.97774e-08,0.579303,0.000875134,-7.36032e-07,-5.74849e-08,0.580178,0.00087349,-9.08486e-07,3.09529e-08,0.58105,0.000871765,-8.15628e-07,-6.72206e-09,0.581921,0.000870114,-8.35794e-07,-4.06451e-09,0.582791,0.00086843,-8.47987e-07,2.29799e-08,0.583658,0.000866803,-7.79048e-07,-2.82503e-08,0.584524,0.00086516,-8.63799e-07,3.04167e-08,0.585388,0.000863524,-7.72548e-07,-3.38119e-08,0.586251,0.000861877,-8.73984e-07,4.52264e-08,0.587112,0.000860265,-7.38305e-07,-2.78842e-08,0.587972,0.000858705,-8.21958e-07,6.70567e-09,0.58883,0.000857081,-8.01841e-07,1.06161e-09,0.589686,0.000855481,-7.98656e-07,-1.09521e-08,0.590541,0.00085385,-8.31512e-07,4.27468e-08,0.591394,0.000852316,-7.03272e-07,-4.08257e-08,0.592245,0.000850787,-8.25749e-07,1.34677e-09,0.593095,0.000849139,-8.21709e-07,3.54387e-08,0.593944,0.000847602,-7.15393e-07,-2.38924e-08,0.59479,0.0008461,-7.8707e-07,5.26143e-10,0.595636,0.000844527,-7.85491e-07,2.17879e-08,0.596479,0.000843021,-7.20127e-07,-2.80733e-08,0.597322,0.000841497,-8.04347e-07,3.09005e-08,0.598162,0.000839981,-7.11646e-07,-3.5924e-08,0.599002,0.00083845,-8.19418e-07,5.3191e-08,0.599839,0.000836971,-6.59845e-07,-5.76307e-08,0.600676,0.000835478,-8.32737e-07,5.81227e-08,0.60151,0.000833987,-6.58369e-07,-5.56507e-08,0.602344,0.000832503,-8.25321e-07,4.52706e-08,0.603175,0.000830988,-6.89509e-07,-6.22236e-09,0.604006,0.000829591,-7.08176e-07,-2.03811e-08,0.604834,0.000828113,-7.6932e-07,2.8142e-08,0.605662,0.000826659,-6.84894e-07,-3.25822e-08,0.606488,0.000825191,-7.8264e-07,4.25823e-08,0.607312,0.000823754,-6.54893e-07,-1.85376e-08,0.608135,0.000822389,-7.10506e-07,-2.80365e-08,0.608957,0.000820883,-7.94616e-07,7.1079e-08,0.609777,0.000819507,-5.81379e-07,-7.74655e-08,0.610596,0.000818112,-8.13775e-07,5.9969e-08,0.611413,0.000816665,-6.33868e-07,-4.32013e-08,0.612229,0.000815267,-7.63472e-07,5.32313e-08,0.613044,0.0008139,-6.03778e-07,-5.05148e-08,0.613857,0.000812541,-7.55323e-07,2.96187e-08,0.614669,0.000811119,-6.66466e-07,-8.35545e-09,0.615479,0.000809761,-6.91533e-07,3.80301e-09,0.616288,0.00080839,-6.80124e-07,-6.85666e-09,0.617096,0.000807009,-7.00694e-07,2.36237e-08,0.617903,0.000805678,-6.29822e-07,-2.80336e-08,0.618708,0.000804334,-7.13923e-07,2.8906e-08,0.619511,0.000802993,-6.27205e-07,-2.79859e-08,0.620314,0.000801655,-7.11163e-07,2.34329e-08,0.621114,0.000800303,-6.40864e-07,-6.14108e-09,0.621914,0.000799003,-6.59287e-07,1.13151e-09,0.622712,0.000797688,-6.55893e-07,1.61507e-09,0.62351,0.000796381,-6.51048e-07,-7.59186e-09,0.624305,0.000795056,-6.73823e-07,2.87524e-08,0.6251,0.000793794,-5.87566e-07,-4.7813e-08,0.625893,0.000792476,-7.31005e-07,4.32901e-08,0.626685,0.000791144,-6.01135e-07,-6.13814e-09,0.627475,0.000789923,-6.19549e-07,-1.87376e-08,0.628264,0.000788628,-6.75762e-07,2.14837e-08,0.629052,0.000787341,-6.11311e-07,-7.59265e-09,0.629839,0.000786095,-6.34089e-07,8.88692e-09,0.630625,0.000784854,-6.07428e-07,-2.7955e-08,0.631409,0.000783555,-6.91293e-07,4.33285e-08,0.632192,0.000782302,-5.61307e-07,-2.61497e-08,0.632973,0.000781101,-6.39757e-07,1.6658e-09,0.633754,0.000779827,-6.34759e-07,1.94866e-08,0.634533,0.000778616,-5.76299e-07,-2.00076e-08,0.635311,0.000777403,-6.36322e-07,9.39091e-10,0.636088,0.000776133,-6.33505e-07,1.62512e-08,0.636863,0.000774915,-5.84751e-07,-6.33937e-09,0.637638,0.000773726,-6.03769e-07,9.10609e-09,0.638411,0.000772546,-5.76451e-07,-3.00849e-08,0.639183,0.000771303,-6.66706e-07,5.1629e-08,0.639953,0.000770125,-5.11819e-07,-5.7222e-08,0.640723,0.000768929,-6.83485e-07,5.80497e-08,0.641491,0.000767736,-5.09336e-07,-5.57674e-08,0.642259,0.000766551,-6.76638e-07,4.58105e-08,0.643024,0.000765335,-5.39206e-07,-8.26541e-09,0.643789,0.000764231,-5.64002e-07,-1.27488e-08,0.644553,0.000763065,-6.02249e-07,-3.44168e-10,0.645315,0.00076186,-6.03281e-07,1.41254e-08,0.646077,0.000760695,-5.60905e-07,3.44727e-09,0.646837,0.000759584,-5.50563e-07,-2.79144e-08,0.647596,0.000758399,-6.34307e-07,4.86057e-08,0.648354,0.000757276,-4.88489e-07,-4.72989e-08,0.64911,0.000756158,-6.30386e-07,2.13807e-08,0.649866,0.000754961,-5.66244e-07,2.13808e-08,0.65062,0.000753893,-5.02102e-07,-4.7299e-08,0.651374,0.000752746,-6.43999e-07,4.86059e-08,0.652126,0.000751604,-4.98181e-07,-2.79154e-08,0.652877,0.000750524,-5.81927e-07,3.45089e-09,0.653627,0.000749371,-5.71575e-07,1.41119e-08,0.654376,0.00074827,-5.29239e-07,-2.93748e-10,0.655123,0.00074721,-5.3012e-07,-1.29368e-08,0.65587,0.000746111,-5.68931e-07,-7.56355e-09,0.656616,0.000744951,-5.91621e-07,4.3191e-08,0.65736,0.000743897,-4.62048e-07,-4.59911e-08,0.658103,0.000742835,-6.00022e-07,2.15642e-08,0.658846,0.0007417,-5.35329e-07,1.93389e-08,0.659587,0.000740687,-4.77312e-07,-3.93152e-08,0.660327,0.000739615,-5.95258e-07,1.87126e-08,0.661066,0.00073848,-5.3912e-07,2.40695e-08,0.661804,0.000737474,-4.66912e-07,-5.53859e-08,0.662541,0.000736374,-6.33069e-07,7.82648e-08,0.663277,0.000735343,-3.98275e-07,-7.88593e-08,0.664012,0.00073431,-6.34853e-07,5.83585e-08,0.664745,0.000733215,-4.59777e-07,-3.53656e-08,0.665478,0.000732189,-5.65874e-07,2.34994e-08,0.66621,0.000731128,-4.95376e-07,9.72743e-10,0.66694,0.00073014,-4.92458e-07,-2.73903e-08,0.66767,0.000729073,-5.74629e-07,4.89839e-08,0.668398,0.000728071,-4.27677e-07,-4.93359e-08,0.669126,0.000727068,-5.75685e-07,2.91504e-08,0.669853,0.000726004,-4.88234e-07,-7.66109e-09,0.670578,0.000725004,-5.11217e-07,1.49392e-09,0.671303,0.000723986,-5.06735e-07,1.68533e-09,0.672026,0.000722978,-5.01679e-07,-8.23525e-09,0.672749,0.00072195,-5.26385e-07,3.12556e-08,0.67347,0.000720991,-4.32618e-07,-5.71825e-08,0.674191,0.000719954,-6.04166e-07,7.8265e-08,0.67491,0.00071898,-3.69371e-07,-7.70634e-08,0.675628,0.00071801,-6.00561e-07,5.11747e-08,0.676346,0.000716963,-4.47037e-07,-8.42615e-09,0.677062,0.000716044,-4.72315e-07,-1.747e-08,0.677778,0.000715046,-5.24725e-07,1.87015e-08,0.678493,0.000714053,-4.68621e-07,2.26856e-09,0.679206,0.000713123,-4.61815e-07,-2.77758e-08,0.679919,0.000712116,-5.45142e-07,4.92298e-08,0.68063,0.000711173,-3.97453e-07,-4.99339e-08,0.681341,0.000710228,-5.47255e-07,3.12967e-08,0.682051,0.000709228,-4.53365e-07,-1.56481e-08,0.68276,0.000708274,-5.00309e-07,3.12958e-08,0.683467,0.000707367,-4.06422e-07,-4.99303e-08,0.684174,0.000706405,-5.56213e-07,4.9216e-08,0.68488,0.00070544,-4.08565e-07,-2.77245e-08,0.685585,0.00070454,-4.91738e-07,2.07748e-09,0.686289,0.000703562,-4.85506e-07,1.94146e-08,0.686992,0.00070265,-4.27262e-07,-2.01314e-08,0.687695,0.000701735,-4.87656e-07,1.50616e-09,0.688396,0.000700764,-4.83137e-07,1.41067e-08,0.689096,0.00069984,-4.40817e-07,1.67168e-09,0.689795,0.000698963,-4.35802e-07,-2.07934e-08,0.690494,0.000698029,-4.98182e-07,2.18972e-08,0.691192,0.000697099,-4.32491e-07,-7.19092e-09,0.691888,0.000696212,-4.54064e-07,6.86642e-09,0.692584,0.000695325,-4.33464e-07,-2.02747e-08,0.693279,0.000694397,-4.94288e-07,1.46279e-08,0.693973,0.000693452,-4.50405e-07,2.13678e-08,0.694666,0.000692616,-3.86301e-07,-4.04945e-08,0.695358,0.000691721,-5.07785e-07,2.14009e-08,0.696049,0.00069077,-4.43582e-07,1.44955e-08,0.69674,0.000689926,-4.00096e-07,-1.97783e-08,0.697429,0.000689067,-4.5943e-07,5.01296e-09,0.698118,0.000688163,-4.44392e-07,-2.73521e-10,0.698805,0.000687273,-4.45212e-07,-3.91893e-09,0.699492,0.000686371,-4.56969e-07,1.59493e-08,0.700178,0.000685505,-4.09121e-07,-2.73351e-10,0.700863,0.000684686,-4.09941e-07,-1.4856e-08,0.701548,0.000683822,-4.54509e-07,9.25979e-11,0.702231,0.000682913,-4.54231e-07,1.44855e-08,0.702913,0.000682048,-4.10775e-07,1.56992e-09,0.703595,0.000681231,-4.06065e-07,-2.07652e-08,0.704276,0.000680357,-4.68361e-07,2.18864e-08,0.704956,0.000679486,-4.02701e-07,-7.17595e-09,0.705635,0.000678659,-4.24229e-07,6.81748e-09,0.706313,0.000677831,-4.03777e-07,-2.0094e-08,0.70699,0.000676963,-4.64059e-07,1.39538e-08,0.707667,0.000676077,-4.22197e-07,2.38835e-08,0.708343,0.000675304,-3.50547e-07,-4.98831e-08,0.709018,0.000674453,-5.00196e-07,5.64395e-08,0.709692,0.000673622,-3.30878e-07,-5.66657e-08,0.710365,0.00067279,-5.00875e-07,5.1014e-08,0.711037,0.000671942,-3.47833e-07,-2.81809e-08,0.711709,0.000671161,-4.32376e-07,2.10513e-09,0.712379,0.000670303,-4.2606e-07,1.97604e-08,0.713049,0.00066951,-3.66779e-07,-2.15422e-08,0.713718,0.000668712,-4.31406e-07,6.8038e-09,0.714387,0.000667869,-4.10994e-07,-5.67295e-09,0.715054,0.00066703,-4.28013e-07,1.5888e-08,0.715721,0.000666222,-3.80349e-07,1.72576e-09,0.716387,0.000665467,-3.75172e-07,-2.27911e-08,0.717052,0.000664648,-4.43545e-07,2.9834e-08,0.717716,0.00066385,-3.54043e-07,-3.69401e-08,0.718379,0.000663031,-4.64864e-07,5.83219e-08,0.719042,0.000662277,-2.89898e-07,-7.71382e-08,0.719704,0.000661465,-5.21313e-07,7.14171e-08,0.720365,0.000660637,-3.07061e-07,-2.97161e-08,0.721025,0.000659934,-3.96209e-07,-1.21575e-08,0.721685,0.000659105,-4.32682e-07,1.87412e-08,0.722343,0.000658296,-3.76458e-07,-3.2029e-09,0.723001,0.000657533,-3.86067e-07,-5.9296e-09,0.723659,0.000656743,-4.03856e-07,2.69213e-08,0.724315,0.000656016,-3.23092e-07,-4.21511e-08,0.724971,0.000655244,-4.49545e-07,2.24737e-08,0.725625,0.000654412,-3.82124e-07,1.18611e-08,0.726279,0.000653683,-3.46541e-07,-1.03132e-08,0.726933,0.000652959,-3.7748e-07,-3.02128e-08,0.727585,0.000652114,-4.68119e-07,7.15597e-08,0.728237,0.000651392,-2.5344e-07,-7.72119e-08,0.728888,0.000650654,-4.85075e-07,5.8474e-08,0.729538,0.000649859,-3.09654e-07,-3.74746e-08,0.730188,0.000649127,-4.22077e-07,3.18197e-08,0.730837,0.000648379,-3.26618e-07,-3.01997e-08,0.731485,0.000647635,-4.17217e-07,2.93747e-08,0.732132,0.000646888,-3.29093e-07,-2.76943e-08,0.732778,0.000646147,-4.12176e-07,2.17979e-08,0.733424,0.000645388,-3.46783e-07,1.07292e-10,0.734069,0.000644695,-3.46461e-07,-2.22271e-08,0.734713,0.000643935,-4.13142e-07,2.91963e-08,0.735357,0.000643197,-3.25553e-07,-3.49536e-08,0.736,0.000642441,-4.30414e-07,5.10133e-08,0.736642,0.000641733,-2.77374e-07,-4.98904e-08,0.737283,0.000641028,-4.27045e-07,2.93392e-08,0.737924,0.000640262,-3.39028e-07,-7.86156e-09,0.738564,0.000639561,-3.62612e-07,2.10703e-09,0.739203,0.000638842,-3.56291e-07,-5.6653e-10,0.739842,0.000638128,-3.57991e-07,1.59086e-10,0.740479,0.000637412,-3.57513e-07,-6.98321e-11,0.741116,0.000636697,-3.57723e-07,1.20214e-10,0.741753,0.000635982,-3.57362e-07,-4.10987e-10,0.742388,0.000635266,-3.58595e-07,1.5237e-09,0.743023,0.000634553,-3.54024e-07,-5.68376e-09,0.743657,0.000633828,-3.71075e-07,2.12113e-08,0.744291,0.00063315,-3.07441e-07,-1.95569e-08,0.744924,0.000632476,-3.66112e-07,-2.58816e-09,0.745556,0.000631736,-3.73877e-07,2.99096e-08,0.746187,0.000631078,-2.84148e-07,-5.74454e-08,0.746818,0.000630337,-4.56484e-07,8.06629e-08,0.747448,0.000629666,-2.14496e-07,-8.63922e-08,0.748077,0.000628978,-4.73672e-07,8.60918e-08,0.748706,0.000628289,-2.15397e-07,-7.91613e-08,0.749334,0.000627621,-4.5288e-07,5.17393e-08,0.749961,0.00062687,-2.97663e-07,-8.58662e-09,0.750588,0.000626249,-3.23422e-07,-1.73928e-08,0.751214,0.00062555,-3.75601e-07,1.85532e-08,0.751839,0.000624855,-3.19941e-07,2.78479e-09,0.752463,0.000624223,-3.11587e-07,-2.96923e-08,0.753087,0.000623511,-4.00664e-07,5.63799e-08,0.75371,0.000622879,-2.31524e-07,-7.66179e-08,0.754333,0.000622186,-4.61378e-07,7.12778e-08,0.754955,0.000621477,-2.47545e-07,-2.96794e-08,0.755576,0.000620893,-3.36583e-07,-1.21648e-08,0.756196,0.000620183,-3.73077e-07,1.87339e-08,0.756816,0.000619493,-3.16875e-07,-3.16622e-09,0.757435,0.00061885,-3.26374e-07,-6.0691e-09,0.758054,0.000618179,-3.44581e-07,2.74426e-08,0.758672,0.000617572,-2.62254e-07,-4.40968e-08,0.759289,0.000616915,-3.94544e-07,2.97352e-08,0.759906,0.000616215,-3.05338e-07,-1.52393e-08,0.760522,0.000615559,-3.51056e-07,3.12221e-08,0.761137,0.000614951,-2.5739e-07,-5.00443e-08,0.761751,0.000614286,-4.07523e-07,4.9746e-08,0.762365,0.00061362,-2.58285e-07,-2.97303e-08,0.762979,0.000613014,-3.47476e-07,9.57079e-09,0.763591,0.000612348,-3.18764e-07,-8.55287e-09,0.764203,0.000611685,-3.44422e-07,2.46407e-08,0.764815,0.00061107,-2.705e-07,-3.04053e-08,0.765426,0.000610437,-3.61716e-07,3.73759e-08,0.766036,0.000609826,-2.49589e-07,-5.94935e-08,0.766645,0.000609149,-4.28069e-07,8.13889e-08,0.767254,0.000608537,-1.83902e-07,-8.72483e-08,0.767862,0.000607907,-4.45647e-07,8.87901e-08,0.76847,0.000607282,-1.79277e-07,-8.90983e-08,0.769077,0.000606656,-4.46572e-07,8.87892e-08,0.769683,0.000606029,-1.80204e-07,-8.72446e-08,0.770289,0.000605407,-4.41938e-07,8.13752e-08,0.770894,0.000604768,-1.97812e-07,-5.94423e-08,0.771498,0.000604194,-3.76139e-07,3.71848e-08,0.772102,0.000603553,-2.64585e-07,-2.96922e-08,0.772705,0.000602935,-3.53661e-07,2.19793e-08,0.773308,0.000602293,-2.87723e-07,1.37955e-09,0.77391,0.000601722,-2.83585e-07,-2.74976e-08,0.774512,0.000601072,-3.66077e-07,4.9006e-08,0.775112,0.000600487,-2.19059e-07,-4.93171e-08,0.775712,0.000599901,-3.67011e-07,2.90531e-08,0.776312,0.000599254,-2.79851e-07,-7.29081e-09,0.776911,0.000598673,-3.01724e-07,1.10077e-10,0.777509,0.00059807,-3.01393e-07,6.85053e-09,0.778107,0.000597487,-2.80842e-07,-2.75123e-08,0.778704,0.000596843,-3.63379e-07,4.35939e-08,0.779301,0.000596247,-2.32597e-07,-2.7654e-08,0.779897,0.000595699,-3.15559e-07,7.41741e-09,0.780492,0.00059509,-2.93307e-07,-2.01562e-09,0.781087,0.000594497,-2.99354e-07,6.45059e-10,0.781681,0.000593901,-2.97418e-07,-5.64635e-10,0.782275,0.000593304,-2.99112e-07,1.61347e-09,0.782868,0.000592711,-2.94272e-07,-5.88926e-09,0.78346,0.000592105,-3.1194e-07,2.19436e-08,0.784052,0.000591546,-2.46109e-07,-2.22805e-08,0.784643,0.000590987,-3.1295e-07,7.57368e-09,0.785234,0.000590384,-2.90229e-07,-8.01428e-09,0.785824,0.00058978,-3.14272e-07,2.44834e-08,0.786414,0.000589225,-2.40822e-07,-3.03148e-08,0.787003,0.000588652,-3.31766e-07,3.7171e-08,0.787591,0.0005881,-2.20253e-07,-5.87646e-08,0.788179,0.000587483,-3.96547e-07,7.86782e-08,0.788766,0.000586926,-1.60512e-07,-7.71342e-08,0.789353,0.000586374,-3.91915e-07,5.10444e-08,0.789939,0.000585743,-2.38782e-07,-7.83422e-09,0.790524,0.000585242,-2.62284e-07,-1.97076e-08,0.791109,0.000584658,-3.21407e-07,2.70598e-08,0.791693,0.000584097,-2.40228e-07,-2.89269e-08,0.792277,0.000583529,-3.27008e-07,2.90431e-08,0.792861,0.000582963,-2.39879e-07,-2.76409e-08,0.793443,0.0005824,-3.22802e-07,2.1916e-08,0.794025,0.00058182,-2.57054e-07,-4.18368e-10,0.794607,0.000581305,-2.58309e-07,-2.02425e-08,0.795188,0.000580727,-3.19036e-07,2.17838e-08,0.795768,0.000580155,-2.53685e-07,-7.28814e-09,0.796348,0.000579625,-2.75549e-07,7.36871e-09,0.796928,0.000579096,-2.53443e-07,-2.21867e-08,0.797506,0.000578523,-3.20003e-07,2.17736e-08,0.798085,0.000577948,-2.54683e-07,-5.30296e-09,0.798662,0.000577423,-2.70592e-07,-5.61698e-10,0.799239,0.00057688,-2.72277e-07,7.54977e-09,0.799816,0.000576358,-2.49627e-07,-2.96374e-08,0.800392,0.00057577,-3.38539e-07,5.1395e-08,0.800968,0.000575247,-1.84354e-07,-5.67335e-08,0.801543,0.000574708,-3.54555e-07,5.63297e-08,0.802117,0.000574168,-1.85566e-07,-4.93759e-08,0.802691,0.000573649,-3.33693e-07,2.19646e-08,0.803264,0.000573047,-2.678e-07,2.1122e-08,0.803837,0.000572575,-2.04433e-07,-4.68482e-08,0.804409,0.000572026,-3.44978e-07,4.70613e-08,0.804981,0.000571477,-2.03794e-07,-2.21877e-08,0.805552,0.000571003,-2.70357e-07,-1.79153e-08,0.806123,0.000570408,-3.24103e-07,3.42443e-08,0.806693,0.000569863,-2.2137e-07,1.47556e-10,0.807263,0.000569421,-2.20928e-07,-3.48345e-08,0.807832,0.000568874,-3.25431e-07,1.99812e-08,0.808401,0.000568283,-2.65487e-07,1.45143e-08,0.808969,0.000567796,-2.21945e-07,-1.84338e-08,0.809536,0.000567297,-2.77246e-07,-3.83608e-10,0.810103,0.000566741,-2.78397e-07,1.99683e-08,0.81067,0.000566244,-2.18492e-07,-1.98848e-08,0.811236,0.000565747,-2.78146e-07,-3.38976e-11,0.811801,0.000565191,-2.78248e-07,2.00204e-08,0.812366,0.000564695,-2.18187e-07,-2.04429e-08,0.812931,0.000564197,-2.79516e-07,2.1467e-09,0.813495,0.000563644,-2.73076e-07,1.18561e-08,0.814058,0.000563134,-2.37507e-07,1.00334e-08,0.814621,0.000562689,-2.07407e-07,-5.19898e-08,0.815183,0.000562118,-3.63376e-07,7.87163e-08,0.815745,0.000561627,-1.27227e-07,-8.40616e-08,0.816306,0.000561121,-3.79412e-07,7.87163e-08,0.816867,0.000560598,-1.43263e-07,-5.19898e-08,0.817428,0.000560156,-2.99233e-07,1.00335e-08,0.817988,0.000559587,-2.69132e-07,1.18559e-08,0.818547,0.000559085,-2.33564e-07,2.14764e-09,0.819106,0.000558624,-2.27122e-07,-2.04464e-08,0.819664,0.000558108,-2.88461e-07,2.00334e-08,0.820222,0.000557591,-2.28361e-07,-8.24277e-11,0.820779,0.000557135,-2.28608e-07,-1.97037e-08,0.821336,0.000556618,-2.87719e-07,1.92925e-08,0.821893,0.000556101,-2.29841e-07,2.13831e-09,0.822448,0.000555647,-2.23427e-07,-2.78458e-08,0.823004,0.000555117,-3.06964e-07,4.96402e-08,0.823559,0.000554652,-1.58043e-07,-5.15058e-08,0.824113,0.000554181,-3.12561e-07,3.71737e-08,0.824667,0.000553668,-2.0104e-07,-3.75844e-08,0.82522,0.000553153,-3.13793e-07,5.35592e-08,0.825773,0.000552686,-1.53115e-07,-5.74431e-08,0.826326,0.000552207,-3.25444e-07,5.7004e-08,0.826878,0.000551728,-1.54433e-07,-5.13635e-08,0.827429,0.000551265,-3.08523e-07,2.92406e-08,0.82798,0.000550735,-2.20801e-07,-5.99424e-09,0.828531,0.000550276,-2.38784e-07,-5.26363e-09,0.829081,0.000549782,-2.54575e-07,2.70488e-08,0.82963,0.000549354,-1.73429e-07,-4.33268e-08,0.83018,0.000548878,-3.03409e-07,2.7049e-08,0.830728,0.000548352,-2.22262e-07,-5.26461e-09,0.831276,0.000547892,-2.38056e-07,-5.99057e-09,0.831824,0.000547397,-2.56027e-07,2.92269e-08,0.832371,0.000546973,-1.68347e-07,-5.13125e-08,0.832918,0.000546482,-3.22284e-07,5.68139e-08,0.833464,0.000546008,-1.51843e-07,-5.67336e-08,0.83401,0.000545534,-3.22043e-07,5.09113e-08,0.834555,0.000545043,-1.6931e-07,-2.77022e-08,0.8351,0.000544621,-2.52416e-07,2.92924e-10,0.835644,0.000544117,-2.51537e-07,2.65305e-08,0.836188,0.000543694,-1.71946e-07,-4.68105e-08,0.836732,0.00054321,-3.12377e-07,4.15021e-08,0.837275,0.000542709,-1.87871e-07,1.13355e-11,0.837817,0.000542334,-1.87837e-07,-4.15474e-08,0.838359,0.000541833,-3.12479e-07,4.69691e-08,0.838901,0.000541349,-1.71572e-07,-2.71196e-08,0.839442,0.000540925,-2.52931e-07,1.90462e-09,0.839983,0.000540425,-2.47217e-07,1.95011e-08,0.840523,0.000539989,-1.88713e-07,-2.03045e-08,0.841063,0.00053955,-2.49627e-07,2.11216e-09,0.841602,0.000539057,-2.4329e-07,1.18558e-08,0.842141,0.000538606,-2.07723e-07,1.00691e-08,0.842679,0.000538221,-1.77516e-07,-5.21324e-08,0.843217,0.00053771,-3.33913e-07,7.92513e-08,0.843755,0.00053728,-9.6159e-08,-8.60587e-08,0.844292,0.000536829,-3.54335e-07,8.61696e-08,0.844828,0.000536379,-9.58263e-08,-7.98057e-08,0.845364,0.000535948,-3.35243e-07,5.42394e-08,0.8459,0.00053544,-1.72525e-07,-1.79426e-08,0.846435,0.000535041,-2.26353e-07,1.75308e-08,0.84697,0.000534641,-1.73761e-07,-5.21806e-08,0.847505,0.000534137,-3.30302e-07,7.19824e-08,0.848038,0.000533692,-1.14355e-07,-5.69349e-08,0.848572,0.000533293,-2.8516e-07,3.65479e-08,0.849105,0.000532832,-1.75516e-07,-2.96519e-08,0.849638,0.000532392,-2.64472e-07,2.2455e-08,0.85017,0.000531931,-1.97107e-07,-5.63451e-10,0.850702,0.000531535,-1.98797e-07,-2.02011e-08,0.851233,0.000531077,-2.59401e-07,2.17634e-08,0.851764,0.000530623,-1.94111e-07,-7.24794e-09,0.852294,0.000530213,-2.15854e-07,7.22832e-09,0.852824,0.000529803,-1.94169e-07,-2.16653e-08,0.853354,0.00052935,-2.59165e-07,1.98283e-08,0.853883,0.000528891,-1.9968e-07,1.95678e-09,0.854412,0.000528497,-1.9381e-07,-2.76554e-08,0.85494,0.000528027,-2.76776e-07,4.90603e-08,0.855468,0.00052762,-1.29596e-07,-4.93764e-08,0.855995,0.000527213,-2.77725e-07,2.92361e-08,0.856522,0.000526745,-1.90016e-07,-7.96341e-09,0.857049,0.000526341,-2.13907e-07,2.61752e-09,0.857575,0.000525922,-2.06054e-07,-2.50665e-09,0.8581,0.000525502,-2.13574e-07,7.40906e-09,0.858626,0.000525097,-1.91347e-07,-2.71296e-08,0.859151,0.000524633,-2.72736e-07,4.15048e-08,0.859675,0.000524212,-1.48221e-07,-1.96802e-08,0.860199,0.000523856,-2.07262e-07,-2.23886e-08,0.860723,0.000523375,-2.74428e-07,4.96299e-08,0.861246,0.000522975,-1.25538e-07,-5.69216e-08,0.861769,0.000522553,-2.96303e-07,5.88473e-08,0.862291,0.000522137,-1.19761e-07,-5.92584e-08,0.862813,0.00052172,-2.97536e-07,5.8977e-08,0.863334,0.000521301,-1.20605e-07,-5.74403e-08,0.863855,0.000520888,-2.92926e-07,5.15751e-08,0.864376,0.000520457,-1.38201e-07,-2.96506e-08,0.864896,0.000520091,-2.27153e-07,7.42277e-09,0.865416,0.000519659,-2.04885e-07,-4.05057e-11,0.865936,0.00051925,-2.05006e-07,-7.26074e-09,0.866455,0.000518818,-2.26788e-07,2.90835e-08,0.866973,0.000518451,-1.39538e-07,-4.94686e-08,0.867492,0.000518024,-2.87944e-07,4.95814e-08,0.868009,0.000517597,-1.39199e-07,-2.96479e-08,0.868527,0.000517229,-2.28143e-07,9.40539e-09,0.869044,0.000516801,-1.99927e-07,-7.9737e-09,0.86956,0.000516378,-2.23848e-07,2.24894e-08,0.870077,0.000515997,-1.5638e-07,-2.23793e-08,0.870592,0.000515617,-2.23517e-07,7.42302e-09,0.871108,0.000515193,-2.01248e-07,-7.31283e-09,0.871623,0.000514768,-2.23187e-07,2.18283e-08,0.872137,0.000514387,-1.57702e-07,-2.03959e-08,0.872652,0.000514011,-2.1889e-07,1.50711e-10,0.873165,0.000513573,-2.18437e-07,1.97931e-08,0.873679,0.000513196,-1.59058e-07,-1.97183e-08,0.874192,0.000512819,-2.18213e-07,-5.24324e-10,0.874704,0.000512381,-2.19786e-07,2.18156e-08,0.875217,0.000512007,-1.54339e-07,-2.71336e-08,0.875728,0.000511616,-2.3574e-07,2.71141e-08,0.87624,0.000511226,-1.54398e-07,-2.17182e-08,0.876751,0.000510852,-2.19552e-07,1.54131e-10,0.877262,0.000510414,-2.1909e-07,2.11017e-08,0.877772,0.000510039,-1.55785e-07,-2.49562e-08,0.878282,0.000509652,-2.30654e-07,1.91183e-08,0.878791,0.000509248,-1.73299e-07,8.08751e-09,0.8793,0.000508926,-1.49036e-07,-5.14684e-08,0.879809,0.000508474,-3.03441e-07,7.85766e-08,0.880317,0.000508103,-6.77112e-08,-8.40242e-08,0.880825,0.000507715,-3.19784e-07,7.87063e-08,0.881333,0.000507312,-8.36649e-08,-5.19871e-08,0.88184,0.000506988,-2.39626e-07,1.00327e-08,0.882346,0.000506539,-2.09528e-07,1.18562e-08,0.882853,0.000506156,-1.73959e-07,2.14703e-09,0.883359,0.000505814,-1.67518e-07,-2.04444e-08,0.883864,0.000505418,-2.28851e-07,2.00258e-08,0.88437,0.00050502,-1.68774e-07,-5.42855e-11,0.884874,0.000504682,-1.68937e-07,-1.98087e-08,0.885379,0.000504285,-2.28363e-07,1.96842e-08,0.885883,0.000503887,-1.6931e-07,6.76342e-10,0.886387,0.000503551,-1.67281e-07,-2.23896e-08,0.88689,0.000503149,-2.3445e-07,2.92774e-08,0.887393,0.000502768,-1.46618e-07,-3.51152e-08,0.887896,0.00050237,-2.51963e-07,5.15787e-08,0.888398,0.00050202,-9.72271e-08,-5.19903e-08,0.8889,0.00050167,-2.53198e-07,3.71732e-08,0.889401,0.000501275,-1.41678e-07,-3.70978e-08,0.889902,0.00050088,-2.52972e-07,5.16132e-08,0.890403,0.000500529,-9.81321e-08,-5.01459e-08,0.890903,0.000500183,-2.4857e-07,2.9761e-08,0.891403,0.000499775,-1.59287e-07,-9.29351e-09,0.891903,0.000499428,-1.87167e-07,7.41301e-09,0.892402,0.000499076,-1.64928e-07,-2.03585e-08,0.892901,0.000498685,-2.26004e-07,1.44165e-08,0.893399,0.000498276,-1.82754e-07,2.22974e-08,0.893898,0.000497978,-1.15862e-07,-4.40013e-08,0.894395,0.000497614,-2.47866e-07,3.44985e-08,0.894893,0.000497222,-1.44371e-07,-3.43882e-08,0.89539,0.00049683,-2.47535e-07,4.34497e-08,0.895886,0.000496465,-1.17186e-07,-2.02012e-08,0.896383,0.00049617,-1.7779e-07,-2.22497e-08,0.896879,0.000495748,-2.44539e-07,4.95952e-08,0.897374,0.000495408,-9.57532e-08,-5.69217e-08,0.89787,0.000495045,-2.66518e-07,5.88823e-08,0.898364,0.000494689,-8.98713e-08,-5.93983e-08,0.898859,0.000494331,-2.68066e-07,5.95017e-08,0.899353,0.000493973,-8.95613e-08,-5.9399e-08,0.899847,0.000493616,-2.67758e-07,5.8885e-08,0.90034,0.000493257,-9.11033e-08,-5.69317e-08,0.900833,0.000492904,-2.61898e-07,4.96326e-08,0.901326,0.000492529,-1.13001e-07,-2.23893e-08,0.901819,0.000492236,-1.80169e-07,-1.968e-08,0.902311,0.000491817,-2.39209e-07,4.15047e-08,0.902802,0.000491463,-1.14694e-07,-2.71296e-08,0.903293,0.000491152,-1.96083e-07,7.409e-09,0.903784,0.000490782,-1.73856e-07,-2.50645e-09,0.904275,0.000490427,-1.81376e-07,2.61679e-09,0.904765,0.000490072,-1.73525e-07,-7.96072e-09,0.905255,0.000489701,-1.97407e-07,2.92261e-08,0.905745,0.000489394,-1.09729e-07,-4.93389e-08,0.906234,0.000489027,-2.57746e-07,4.89204e-08,0.906723,0.000488658,-1.10985e-07,-2.71333e-08,0.907211,0.000488354,-1.92385e-07,8.30861e-12,0.907699,0.00048797,-1.9236e-07,2.71001e-08,0.908187,0.000487666,-1.1106e-07,-4.88041e-08,0.908675,0.000487298,-2.57472e-07,4.89069e-08,0.909162,0.000486929,-1.10751e-07,-2.76143e-08,0.909649,0.000486625,-1.93594e-07,1.9457e-09,0.910135,0.000486244,-1.87757e-07,1.98315e-08,0.910621,0.000485928,-1.28262e-07,-2.16671e-08,0.911107,0.000485606,-1.93264e-07,7.23216e-09,0.911592,0.000485241,-1.71567e-07,-7.26152e-09,0.912077,0.000484877,-1.93352e-07,2.18139e-08,0.912562,0.000484555,-1.2791e-07,-2.03895e-08,0.913047,0.000484238,-1.89078e-07,1.39494e-10,0.913531,0.000483861,-1.8866e-07,1.98315e-08,0.914014,0.000483543,-1.29165e-07,-1.98609e-08,0.914498,0.000483225,-1.88748e-07,7.39912e-12,0.914981,0.000482847,-1.88726e-07,1.98313e-08,0.915463,0.000482529,-1.29232e-07,-1.9728e-08,0.915946,0.000482212,-1.88416e-07,-5.24035e-10,0.916428,0.000481833,-1.89988e-07,2.18241e-08,0.916909,0.000481519,-1.24516e-07,-2.71679e-08,0.917391,0.000481188,-2.06019e-07,2.72427e-08,0.917872,0.000480858,-1.24291e-07,-2.21985e-08,0.918353,0.000480543,-1.90886e-07,1.94644e-09,0.918833,0.000480167,-1.85047e-07,1.44127e-08,0.919313,0.00047984,-1.41809e-07,7.39438e-12,0.919793,0.000479556,-1.41787e-07,-1.44423e-08,0.920272,0.000479229,-1.85114e-07,-1.84291e-09,0.920751,0.000478854,-1.90642e-07,2.18139e-08,0.92123,0.000478538,-1.25201e-07,-2.58081e-08,0.921708,0.00047821,-2.02625e-07,2.18139e-08,0.922186,0.00047787,-1.37183e-07,-1.84291e-09,0.922664,0.00047759,-1.42712e-07,-1.44423e-08,0.923141,0.000477262,-1.86039e-07,7.34701e-12,0.923618,0.00047689,-1.86017e-07,1.44129e-08,0.924095,0.000476561,-1.42778e-07,1.94572e-09,0.924572,0.000476281,-1.36941e-07,-2.21958e-08,0.925048,0.000475941,-2.03528e-07,2.72327e-08,0.925523,0.000475615,-1.2183e-07,-2.71304e-08,0.925999,0.00047529,-2.03221e-07,2.16843e-08,0.926474,0.000474949,-1.38168e-07,-2.16005e-12,0.926949,0.000474672,-1.38175e-07,-2.16756e-08,0.927423,0.000474331,-2.03202e-07,2.71001e-08,0.927897,0.000474006,-1.21902e-07,-2.71201e-08,0.928371,0.000473681,-2.03262e-07,2.17757e-08,0.928845,0.00047334,-1.37935e-07,-3.78028e-10,0.929318,0.000473063,-1.39069e-07,-2.02636e-08,0.929791,0.000472724,-1.9986e-07,2.18276e-08,0.930263,0.000472389,-1.34377e-07,-7.44231e-09,0.930736,0.000472098,-1.56704e-07,7.94165e-09,0.931208,0.000471809,-1.32879e-07,-2.43243e-08,0.931679,0.00047147,-2.05851e-07,2.97508e-08,0.932151,0.000471148,-1.16599e-07,-3.50742e-08,0.932622,0.000470809,-2.21822e-07,5.09414e-08,0.933092,0.000470518,-6.89976e-08,-4.94821e-08,0.933563,0.000470232,-2.17444e-07,2.77775e-08,0.934033,0.00046988,-1.34111e-07,-2.02351e-09,0.934502,0.000469606,-1.40182e-07,-1.96835e-08,0.934972,0.000469267,-1.99232e-07,2.11529e-08,0.935441,0.000468932,-1.35774e-07,-5.32332e-09,0.93591,0.000468644,-1.51743e-07,1.40413e-10,0.936378,0.000468341,-1.51322e-07,4.76166e-09,0.936846,0.000468053,-1.37037e-07,-1.9187e-08,0.937314,0.000467721,-1.94598e-07,1.23819e-08,0.937782,0.000467369,-1.57453e-07,2.92642e-08,0.938249,0.000467142,-6.96601e-08,-6.98342e-08,0.938716,0.000466793,-2.79163e-07,7.12586e-08,0.939183,0.000466449,-6.53869e-08,-3.63863e-08,0.939649,0.000466209,-1.74546e-07,1.46818e-08,0.940115,0.000465904,-1.305e-07,-2.2341e-08,0.940581,0.000465576,-1.97523e-07,1.50774e-08,0.941046,0.000465226,-1.52291e-07,2.16359e-08,0.941511,0.000464986,-8.73832e-08,-4.20162e-08,0.941976,0.000464685,-2.13432e-07,2.72198e-08,0.942441,0.00046434,-1.31773e-07,-7.2581e-09,0.942905,0.000464055,-1.53547e-07,1.81263e-09,0.943369,0.000463753,-1.48109e-07,7.58386e-12,0.943832,0.000463457,-1.48086e-07,-1.84298e-09,0.944296,0.000463155,-1.53615e-07,7.36433e-09,0.944759,0.00046287,-1.31522e-07,-2.76143e-08,0.945221,0.000462524,-2.14365e-07,4.34883e-08,0.945684,0.000462226,-8.39003e-08,-2.71297e-08,0.946146,0.000461977,-1.65289e-07,5.42595e-09,0.946608,0.000461662,-1.49012e-07,5.42593e-09,0.947069,0.000461381,-1.32734e-07,-2.71297e-08,0.94753,0.000461034,-2.14123e-07,4.34881e-08,0.947991,0.000460736,-8.36585e-08,-2.76134e-08,0.948452,0.000460486,-1.66499e-07,7.36083e-09,0.948912,0.000460175,-1.44416e-07,-1.82993e-09,0.949372,0.000459881,-1.49906e-07,-4.11073e-11,0.949832,0.000459581,-1.50029e-07,1.99434e-09,0.950291,0.000459287,-1.44046e-07,-7.93627e-09,0.950751,0.000458975,-1.67855e-07,2.97507e-08,0.951209,0.000458728,-7.86029e-08,-5.1462e-08,0.951668,0.000458417,-2.32989e-07,5.6888e-08,0.952126,0.000458121,-6.2325e-08,-5.68806e-08,0.952584,0.000457826,-2.32967e-07,5.14251e-08,0.953042,0.000457514,-7.86914e-08,-2.96107e-08,0.953499,0.000457268,-1.67523e-07,7.41296e-09,0.953956,0.000456955,-1.45285e-07,-4.11262e-11,0.954413,0.000456665,-1.45408e-07,-7.24847e-09,0.95487,0.000456352,-1.67153e-07,2.9035e-08,0.955326,0.000456105,-8.00484e-08,-4.92869e-08,0.955782,0.000455797,-2.27909e-07,4.89032e-08,0.956238,0.000455488,-8.11994e-08,-2.71166e-08,0.956693,0.000455244,-1.62549e-07,-4.13678e-11,0.957148,0.000454919,-1.62673e-07,2.72821e-08,0.957603,0.000454675,-8.0827e-08,-4.94824e-08,0.958057,0.000454365,-2.29274e-07,5.14382e-08,0.958512,0.000454061,-7.49597e-08,-3.7061e-08,0.958965,0.0004538,-1.86143e-07,3.72013e-08,0.959419,0.000453539,-7.45389e-08,-5.21396e-08,0.959873,0.000453234,-2.30958e-07,5.21476e-08,0.960326,0.000452928,-7.45146e-08,-3.72416e-08,0.960778,0.000452667,-1.8624e-07,3.72143e-08,0.961231,0.000452407,-7.45967e-08,-5.20109e-08,0.961683,0.000452101,-2.30629e-07,5.16199e-08,0.962135,0.000451795,-7.57696e-08,-3.52595e-08,0.962587,0.000451538,-1.81548e-07,2.98133e-08,0.963038,0.000451264,-9.2108e-08,-2.43892e-08,0.963489,0.000451007,-1.65276e-07,8.13892e-09,0.96394,0.000450701,-1.40859e-07,-8.16647e-09,0.964391,0.000450394,-1.65358e-07,2.45269e-08,0.964841,0.000450137,-9.17775e-08,-3.03367e-08,0.965291,0.000449863,-1.82787e-07,3.7215e-08,0.965741,0.000449609,-7.11424e-08,-5.89188e-08,0.96619,0.00044929,-2.47899e-07,7.92509e-08,0.966639,0.000449032,-1.01462e-08,-7.92707e-08,0.967088,0.000448773,-2.47958e-07,5.90181e-08,0.967537,0.000448455,-7.0904e-08,-3.75925e-08,0.967985,0.0004482,-1.83681e-07,3.17471e-08,0.968433,0.000447928,-8.84401e-08,-2.97913e-08,0.968881,0.000447662,-1.77814e-07,2.78133e-08,0.969329,0.000447389,-9.4374e-08,-2.18572e-08,0.969776,0.000447135,-1.59946e-07,1.10134e-11,0.970223,0.000446815,-1.59913e-07,2.18132e-08,0.97067,0.000446561,-9.44732e-08,-2.76591e-08,0.971116,0.000446289,-1.7745e-07,2.92185e-08,0.971562,0.000446022,-8.97948e-08,-2.96104e-08,0.972008,0.000445753,-1.78626e-07,2.96185e-08,0.972454,0.000445485,-8.97706e-08,-2.92588e-08,0.972899,0.000445218,-1.77547e-07,2.78123e-08,0.973344,0.000444946,-9.41103e-08,-2.23856e-08,0.973789,0.000444691,-1.61267e-07,2.12559e-09,0.974233,0.000444374,-1.5489e-07,1.38833e-08,0.974678,0.000444106,-1.13241e-07,1.94591e-09,0.975122,0.000443886,-1.07403e-07,-2.16669e-08,0.975565,0.000443606,-1.72404e-07,2.5117e-08,0.976009,0.000443336,-9.70526e-08,-1.91963e-08,0.976452,0.000443085,-1.54642e-07,-7.93627e-09,0.976895,0.000442752,-1.7845e-07,5.09414e-08,0.977338,0.000442548,-2.56262e-08,-7.66201e-08,0.97778,0.000442266,-2.55486e-07,7.67249e-08,0.978222,0.000441986,-2.53118e-08,-5.14655e-08,0.978664,0.000441781,-1.79708e-07,9.92773e-09,0.979106,0.000441451,-1.49925e-07,1.17546e-08,0.979547,0.000441186,-1.14661e-07,2.65868e-09,0.979988,0.000440965,-1.06685e-07,-2.23893e-08,0.980429,0.000440684,-1.73853e-07,2.72939e-08,0.980869,0.000440419,-9.19716e-08,-2.71816e-08,0.98131,0.000440153,-1.73516e-07,2.18278e-08,0.98175,0.000439872,-1.08033e-07,-5.24833e-10,0.982189,0.000439654,-1.09607e-07,-1.97284e-08,0.982629,0.000439376,-1.68793e-07,1.98339e-08,0.983068,0.000439097,-1.09291e-07,-2.62901e-12,0.983507,0.000438879,-1.09299e-07,-1.98234e-08,0.983946,0.000438601,-1.68769e-07,1.96916e-08,0.984384,0.000438322,-1.09694e-07,6.6157e-10,0.984823,0.000438105,-1.0771e-07,-2.23379e-08,0.985261,0.000437823,-1.74723e-07,2.90855e-08,0.985698,0.00043756,-8.74669e-08,-3.43992e-08,0.986136,0.000437282,-1.90665e-07,4.89068e-08,0.986573,0.000437048,-4.39442e-08,-4.20188e-08,0.98701,0.000436834,-1.7e-07,-4.11073e-11,0.987446,0.000436494,-1.70124e-07,4.21832e-08,0.987883,0.00043628,-4.35742e-08,-4.94824e-08,0.988319,0.000436044,-1.92021e-07,3.6537e-08,0.988755,0.00043577,-8.24102e-08,-3.70611e-08,0.989191,0.000435494,-1.93593e-07,5.21026e-08,0.989626,0.000435263,-3.72855e-08,-5.21402e-08,0.990061,0.000435032,-1.93706e-07,3.7249e-08,0.990496,0.000434756,-8.19592e-08,-3.72512e-08,0.990931,0.000434481,-1.93713e-07,5.21511e-08,0.991365,0.00043425,-3.72595e-08,-5.21439e-08,0.991799,0.000434019,-1.93691e-07,3.72152e-08,0.992233,0.000433743,-8.20456e-08,-3.71123e-08,0.992667,0.000433468,-1.93382e-07,5.16292e-08,0.9931,0.000433236,-3.84947e-08,-5.01953e-08,0.993533,0.000433008,-1.89081e-07,2.99427e-08,0.993966,0.00043272,-9.92525e-08,-9.9708e-09,0.994399,0.000432491,-1.29165e-07,9.94051e-09,0.994831,0.000432263,-9.93434e-08,-2.97912e-08,0.995263,0.000431975,-1.88717e-07,4.96198e-08,0.995695,0.000431746,-3.98578e-08,-4.94785e-08,0.996127,0.000431518,-1.88293e-07,2.9085e-08,0.996558,0.000431229,-1.01038e-07,-7.25675e-09,0.996989,0.000431005,-1.22809e-07,-5.79945e-11,0.99742,0.000430759,-1.22983e-07,7.48873e-09,0.997851,0.000430536,-1.00516e-07,-2.98969e-08,0.998281,0.000430245,-1.90207e-07,5.24942e-08,0.998711,0.000430022,-3.27246e-08,-6.08706e-08,0.999141,0.000429774,-2.15336e-07,7.17788e-08,0.999571,0.000429392,0.,0.};$/;"	m	namespace:cv::cudev::color_cvt_detail
c_str	cpp_src/basic_string.h	/^      c_str() const$/;"	f	class:std::basic_string
c_str	opencv2/core/cvstd.hpp	/^const char* String::c_str() const$/;"	f	class:cv::String
cache_line_size	5/parallel/settings.h	/^    unsigned int                cache_line_size;$/;"	m	struct:__gnu_parallel::_Settings
calc	opencv2/core/cuda/detail/vec_distance_detail.hpp	/^            static __device__ __forceinline__ void calc(const T1* vecCached, const T2* vecGlob, int len, Dist& dist, int tid)$/;"	f	struct:cv::cuda::device::vec_distance_detail::VecDiffCachedCalculator
calc	opencv2/core/cuda/vec_distance.hpp	/^        __device__ __forceinline__ void calc(const T2* vec2, int len, Dist& dist, typename Dist::result_type* smem, int tid) const$/;"	f	struct:cv::cuda::device::VecDiffCachedRegister
calc	opencv2/core/cuda/vec_distance.hpp	/^        __device__ __forceinline__ void calc(const T2* vec2, int len, Dist& dist, typename Dist::result_type* smem, int tid) const$/;"	f	struct:cv::cuda::device::VecDiffGlobal
calcCheck	opencv2/core/cuda/detail/vec_distance_detail.hpp	/^            static __device__ __forceinline__ void calcCheck(const T1*, const T2*, int, Dist&, int)$/;"	f	struct:cv::cuda::device::vec_distance_detail::UnrollVecDiffCached
calcCheck	opencv2/core/cuda/detail/vec_distance_detail.hpp	/^            static __device__ void calcCheck(const T1* vecCached, const T2* vecGlob, int len, Dist& dist, int ind)$/;"	f	struct:cv::cuda::device::vec_distance_detail::UnrollVecDiffCached
calcError	opencv2/stitching/detail/motion_estimators.hpp	/^    void calcError(Mat &) {}$/;"	f	class:cv::detail::NoBundleAdjuster
calcJacobian	opencv2/stitching/detail/motion_estimators.hpp	/^    void calcJacobian(Mat &) {}$/;"	f	class:cv::detail::NoBundleAdjuster
calcVecDiffCached	opencv2/core/cuda/vec_distance.hpp	/^    __device__ __forceinline__ void calcVecDiffCached(const T1* vecCached, const T2* vecGlob, int len, Dist& dist, typename Dist::result_type* smem, int tid)$/;"	f	namespace:cv::cuda::device
calcVecDiffGlobal	opencv2/core/cuda/vec_distance.hpp	/^    __device__ void calcVecDiffGlobal(const T1* vec1, const T2* vec2, int len, Dist& dist, typename Dist::result_type* smem, int tid)$/;"	f	namespace:cv::cuda::device
calcWithoutCheck	opencv2/core/cuda/detail/vec_distance_detail.hpp	/^            static __device__ __forceinline__ void calcWithoutCheck(const T1*, const T2*, Dist&)$/;"	f	struct:cv::cuda::device::vec_distance_detail::UnrollVecDiffCached
calcWithoutCheck	opencv2/core/cuda/detail/vec_distance_detail.hpp	/^            static __device__ void calcWithoutCheck(const T1* vecCached, const T2* vecGlob, Dist& dist)$/;"	f	struct:cv::cuda::device::vec_distance_detail::UnrollVecDiffCached
calc_max_num_coll	5/ext/pb_ds/detail/resize_policy/cc_hash_max_collision_check_resize_trigger_imp.hpp	/^calc_max_num_coll()$/;"	f	class:PB_DS_CLASS_C_DEC
calc_resize_needed	5/ext/pb_ds/detail/resize_policy/cc_hash_max_collision_check_resize_trigger_imp.hpp	/^calc_resize_needed()$/;"	f	class:PB_DS_CLASS_C_DEC
call	opencv2/core/cuda/detail/transform_detail.hpp	/^            static void call(PtrStepSz<T1> src1, PtrStepSz<T2> src2, PtrStepSz<D> dst, BinOp op, Mask mask, cudaStream_t stream)$/;"	f	struct:cv::cuda::device::transform_detail::TransformDispatcher
call	opencv2/core/cuda/detail/transform_detail.hpp	/^            static void call(PtrStepSz<T> src, PtrStepSz<D> dst, UnOp op, Mask mask, cudaStream_t stream)$/;"	f	struct:cv::cuda::device::transform_detail::TransformDispatcher
call	opencv2/cudev/grid/detail/reduce_to_column.hpp	/^        __device__ __forceinline__ static void call(work_elem_type smem[1][BLOCK_SIZE], work_type& myVal)$/;"	f	struct:cv::cudev::grid_reduce_to_vec_detail::Reduce
call	opencv2/cudev/grid/detail/reduce_to_column.hpp	/^        __device__ __forceinline__ static void call(work_elem_type smem[2][BLOCK_SIZE], work_type& myVal)$/;"	f	struct:cv::cudev::grid_reduce_to_vec_detail::Reduce
call	opencv2/cudev/grid/detail/reduce_to_column.hpp	/^        __device__ __forceinline__ static void call(work_elem_type smem[3][BLOCK_SIZE], work_type& myVal)$/;"	f	struct:cv::cudev::grid_reduce_to_vec_detail::Reduce
call	opencv2/cudev/grid/detail/reduce_to_column.hpp	/^        __device__ __forceinline__ static void call(work_elem_type smem[4][BLOCK_SIZE], work_type& myVal)$/;"	f	struct:cv::cudev::grid_reduce_to_vec_detail::Reduce
call	opencv2/cudev/grid/detail/transform.hpp	/^        __host__ static void call(const GlobPtr<SrcType1>& src1, const GlobPtr<SrcType2>& src2, const GlobPtr<DstType>& dst, const BinOp& op, const MaskPtr& mask, int rows, int cols, cudaStream_t stream)$/;"	f	struct:cv::cudev::grid_transform_detail::TransformDispatcher
call	opencv2/cudev/grid/detail/transform.hpp	/^        __host__ static void call(const GlobPtr<SrcType>& src, const GlobPtr<DstType>& dst, const UnOp& op, const MaskPtr& mask, int rows, int cols, cudaStream_t stream)$/;"	f	struct:cv::cudev::grid_transform_detail::TransformDispatcher
call	opencv2/cudev/grid/detail/transform.hpp	/^        __host__ static void call(const SrcPtr& src, const GlobPtr<DstType>& dst, const UnOp& op, const MaskPtr& mask, int rows, int cols, cudaStream_t stream)$/;"	f	struct:cv::cudev::grid_transform_detail::TransformDispatcher
call	opencv2/cudev/grid/detail/transform.hpp	/^        __host__ static void call(const SrcPtr1& src1, const SrcPtr2& src2, const GlobPtr<DstType>& dst, const BinOp& op, const MaskPtr& mask, int rows, int cols, cudaStream_t stream)$/;"	f	struct:cv::cudev::grid_transform_detail::TransformDispatcher
cam_params_	opencv2/stitching/detail/motion_estimators.hpp	/^    Mat cam_params_;$/;"	m	class:cv::detail::BundleAdjusterBase
cameras	opencv2/stitching.hpp	/^    std::vector<detail::CameraParams> cameras() const { return cameras_; }$/;"	f	class:cv::Stitcher
cameras_	opencv2/stitching.hpp	/^    std::vector<detail::CameraParams> cameras_;$/;"	m	class:cv::Stitcher
can_use_gpu_	opencv2/stitching/detail/blenders.hpp	/^    bool can_use_gpu_;$/;"	m	class:cv::detail::MultiBandBlender
cap	opencv2/videoio.hpp	/^    Ptr<CvCapture> cap;$/;"	m	class:cv::VideoCapture
capacity	cpp_src/basic_string.h	/^      capacity() const$/;"	f	class:std::basic_string
capacity	cpp_src/stl_bvector.h	/^    capacity() const$/;"	f	class:std::vector
capacity	cpp_src/stl_vector.h	/^      capacity() const$/;"	f	class:std::vector
capacity	opencv2/flann/result_set.h	/^    int capacity;$/;"	m	class:cvflann::KNNResultSet
capacity	opencv2/flann/result_set.h	/^    int capacity;$/;"	m	class:cvflann::KNNSimpleResultSet
capacity	opencv2/flann/result_set.h	/^    size_t capacity;$/;"	m	class:cvflann::RadiusResultSet
capacity_	opencv2/flann/result_set.h	/^    unsigned int capacity_;$/;"	m	class:cvflann::KNNRadiusUniqueResultSet
capacity_	opencv2/flann/result_set.h	/^    unsigned int capacity_;$/;"	m	class:cvflann::KNNUniqueResultSet
capture	opencv2/videoio/videoio_c.h	/^CVAPI(IplImage*) cvQueryFrame( CvCapture* capture );$/;"	v
capture	opencv2/videoio/videoio_c.h	/^CVAPI(int)    cvGetCaptureDomain( CvCapture* capture);$/;"	v
capture	opencv2/videoio/videoio_c.h	/^CVAPI(int) cvGrabFrame( CvCapture* capture );$/;"	v
capture	opencv2/videoio/videoio_c.h	/^CVAPI(void) cvReleaseCapture( CvCapture** capture );$/;"	v
captureSession	opencv2/videoio/cap_ios.h	/^@property (nonatomic, strong) AVCaptureSession* captureSession;$/;"	v
captureSessionLoaded	opencv2/videoio/cap_ios.h	/^@property (nonatomic, readonly) BOOL captureSessionLoaded;$/;"	v
captureVideoPreviewLayer	opencv2/videoio/cap_ios.h	/^@property (nonatomic, readonly) AVCaptureVideoPreviewLayer *captureVideoPreviewLayer;$/;"	v
cascade	opencv2/objdetect/objdetect_c.h	/^CVAPI(void) cvReleaseHaarClassifierCascade( CvHaarClassifierCascade** cascade );$/;"	v
cascadeForTracking	opencv2/objdetect/detection_based_tracker.hpp	/^        cv::Ptr<IDetector> cascadeForTracking;$/;"	m	class:cv::DetectionBasedTracker
cast	opencv2/core/affine.hpp	/^cv::Affine3<Y> cv::Affine3<T>::cast() const$/;"	f	class:cv::Affine3
cast	opencv2/core/cuda/vec_math.hpp	/^        template <typename VecS> static __device__ __forceinline__ VecD cast(const VecS& v)$/;"	f	struct:cv::cuda::device::vec_math_detail::SatCastHelper
cast	opencv2/cudev/util/vec_math.hpp	/^        template <typename VecS> __device__ __forceinline__ static VecD cast(const VecS& v)$/;"	f	struct:cv::cudev::vec_math_detail::SatCastHelper
cast	opencv2/flann/any.h	/^    T& cast()$/;"	f	struct:cvflann::any
cast	opencv2/flann/any.h	/^    const T& cast() const$/;"	f	struct:cvflann::any
cast_fp16	opencv2/cudev/util/saturate_cast.hpp	/^template <> __device__ __forceinline__ float cast_fp16<short, float>(short v)$/;"	f	namespace:cv::cudev
cast_fp16	opencv2/cudev/util/saturate_cast.hpp	/^template <> __device__ __forceinline__ short cast_fp16<float, short>(float v)$/;"	f	namespace:cv::cudev
catalog	cpp_src/locale_facets.h	/^    typedef int catalog;$/;"	t	struct:std::messages_base
catch	cpp_src/exception_defines.h	44;"	d
category	cpp_src/locale_classes.h	/^    typedef int	category;$/;"	t	class:std::locale
cause	5/sun/awt/CausedFocusEvent.h	/^  ::sun::awt::CausedFocusEvent$Cause * __attribute__((aligned(__alignof__( ::java::awt::event::FocusEvent)))) cause;$/;"	m	class:sun::awt::CausedFocusEvent
cb_index_	opencv2/flann/kmeans_index.h	/^    float cb_index_;$/;"	m	class:cvflann::KMeansIndex
cc	opencv2/objdetect.hpp	/^    Ptr<BaseCascadeClassifier> cc;$/;"	m	class:cv::CascadeClassifier
cc30	opencv2/cudev/ptr2d/texture.hpp	/^    bool cc30;$/;"	m	struct:cv::cudev::Texture
cc_hash_max_collision_check_resize_trigger	5/ext/pb_ds/detail/resize_policy/cc_hash_max_collision_check_resize_trigger_imp.hpp	/^cc_hash_max_collision_check_resize_trigger(float load) :$/;"	f	class:PB_DS_CLASS_C_DEC
cc_hash_max_collision_check_resize_trigger	5/ext/pb_ds/hash_policy.hpp	/^  class cc_hash_max_collision_check_resize_trigger$/;"	c	namespace:__gnu_pbds
cc_hash_table	5/ext/pb_ds/assoc_container.hpp	/^    cc_hash_table() { }$/;"	f	class:__gnu_pbds::cc_hash_table
cc_hash_table	5/ext/pb_ds/assoc_container.hpp	/^    cc_hash_table(It first, It last)$/;"	f	class:__gnu_pbds::cc_hash_table
cc_hash_table	5/ext/pb_ds/assoc_container.hpp	/^    cc_hash_table(It first, It last, const hash_fn& h)$/;"	f	class:__gnu_pbds::cc_hash_table
cc_hash_table	5/ext/pb_ds/assoc_container.hpp	/^    cc_hash_table(It first, It last, const hash_fn& h, const eq_fn& e)$/;"	f	class:__gnu_pbds::cc_hash_table
cc_hash_table	5/ext/pb_ds/assoc_container.hpp	/^    cc_hash_table(It first, It last, const hash_fn& h, const eq_fn& e,$/;"	f	class:__gnu_pbds::cc_hash_table
cc_hash_table	5/ext/pb_ds/assoc_container.hpp	/^    cc_hash_table(const cc_hash_table& other)$/;"	f	class:__gnu_pbds::cc_hash_table
cc_hash_table	5/ext/pb_ds/assoc_container.hpp	/^    cc_hash_table(const hash_fn& h)$/;"	f	class:__gnu_pbds::cc_hash_table
cc_hash_table	5/ext/pb_ds/assoc_container.hpp	/^    cc_hash_table(const hash_fn& h, const eq_fn& e)$/;"	f	class:__gnu_pbds::cc_hash_table
cc_hash_table	5/ext/pb_ds/assoc_container.hpp	/^    cc_hash_table(const hash_fn& h, const eq_fn& e, const comb_hash_fn& ch)$/;"	f	class:__gnu_pbds::cc_hash_table
cc_hash_table	5/ext/pb_ds/assoc_container.hpp	/^    cc_hash_table(const hash_fn& h, const eq_fn& e, const comb_hash_fn& ch,$/;"	f	class:__gnu_pbds::cc_hash_table
cc_hash_table	5/ext/pb_ds/assoc_container.hpp	/^  class cc_hash_table :  public PB_DS_CC_HASH_BASE$/;"	c	namespace:__gnu_pbds
cc_hash_tag	5/ext/pb_ds/tag_and_trait.hpp	/^  struct cc_hash_tag : public basic_hash_tag { };$/;"	s	namespace:__gnu_pbds
cellSize	opencv2/objdetect.hpp	/^    CV_PROP Size cellSize;$/;"	m	struct:cv::HOGDescriptor
cellSize	opencv2/videostab/outlier_rejection.hpp	/^    Size cellSize() const { return cellSize_; }$/;"	f	class:cv::videostab::TranslationBasedLocalOutlierRejector
cellSize_	opencv2/videostab/outlier_rejection.hpp	/^    Size cellSize_;$/;"	m	class:cv::videostab::TranslationBasedLocalOutlierRejector
cell_bit_size_	opencv2/flann/dynamic_bitset.h	/^    static const unsigned int cell_bit_size_ = CHAR_BIT * sizeof(size_t);$/;"	m	class:cvflann::DynamicBitset
center	opencv2/core/types.hpp	/^    Point2f center; \/\/< the rectangle mass center$/;"	m	class:cv::RotatedRect
center	opencv2/core/types_c.h	/^    CvPoint2D32f center;  \/**< Center of the box.                          *\/$/;"	m	struct:CvBox2D
centersAlgFunction	opencv2/flann/hierarchical_clustering_index.h	/^    typedef void (HierarchicalClusteringIndex::* centersAlgFunction)(int, int*, int, int*, int&);$/;"	t	class:cvflann::HierarchicalClusteringIndex
centersAlgFunction	opencv2/flann/kmeans_index.h	/^    typedef void (KMeansIndex::* centersAlgFunction)(int, int*, int, int*, int&);$/;"	t	class:cvflann::KMeansIndex
centers_init_	opencv2/flann/hierarchical_clustering_index.h	/^    flann_centers_init_t centers_init_;$/;"	m	class:cvflann::HierarchicalClusteringIndex
centers_init_	opencv2/flann/kmeans_index.h	/^    flann_centers_init_t centers_init_;$/;"	m	class:cvflann::KMeansIndex
channelSeq	opencv2/core/types_c.h	/^    char channelSeq[4];     \/**< ditto *\/$/;"	m	struct:_IplImage
channel_type	opencv2/core/affine.hpp	/^        typedef _Tp                                        channel_type;$/;"	t	class:cv::DataType
channel_type	opencv2/core/cvstd.inl.hpp	/^    typedef _Tp                channel_type;$/;"	t	class:cv::DataType
channel_type	opencv2/core/mat.hpp	/^    typedef typename DataType<_Tp>::channel_type channel_type;$/;"	t	class:cv::Mat_
channel_type	opencv2/core/matx.hpp	/^    typedef _Tp                                           channel_type;$/;"	t	class:cv::DataType
channel_type	opencv2/core/matx.hpp	/^    typedef _Tp                                        channel_type;$/;"	t	class:cv::DataType
channel_type	opencv2/core/traits.hpp	/^    typedef value_type  channel_type;$/;"	t	class:cv::DataType
channel_type	opencv2/core/types.hpp	/^    typedef _Tp                                        channel_type;$/;"	t	class:cv::DataType
channel_type	opencv2/core/types.hpp	/^    typedef _Tp                                       channel_type;$/;"	t	class:cv::DataType
channel_type	opencv2/core/types.hpp	/^    typedef _Tp                                      channel_type;$/;"	t	class:cv::DataType
channel_type	opencv2/core/types.hpp	/^    typedef _Tp          channel_type;$/;"	t	class:cv::DataType
channel_type	opencv2/core/types.hpp	/^    typedef double      channel_type;$/;"	t	class:cv::DataType
channel_type	opencv2/core/types.hpp	/^    typedef float         channel_type;$/;"	t	class:cv::DataType
channel_type	opencv2/core/types.hpp	/^    typedef float        channel_type;$/;"	t	class:cv::DataType
channel_type	opencv2/core/types.hpp	/^    typedef int         channel_type;$/;"	t	class:cv::DataType
channel_type	opencv2/core/types.hpp	/^    typedef int        channel_type;$/;"	t	class:cv::DataType
channel_type	opencv2/cudev/util/vec_traits.hpp	/^    typedef schar      channel_type;$/;"	t	class:cv::DataType
channel_type	opencv2/cudev/util/vec_traits.hpp	/^    typedef value_type   channel_type;$/;"	t	class:cv::DataType
channels	opencv2/core/affine.hpp	/^               channels     = 16,$/;"	e	enum:cv::DataType::__anon316
channels	opencv2/core/core_c.h	/^template<typename _Tp> inline int Seq<_Tp>::channels() const$/;"	f	class:cv::Seq
channels	opencv2/core/cuda.inl.hpp	/^int GpuMat::channels() const$/;"	f	class:cv::cuda::GpuMat
channels	opencv2/core/cuda.inl.hpp	/^int HostMem::channels() const$/;"	f	class:cv::cuda::HostMem
channels	opencv2/core/cuda/utility.hpp	/^        int channels;$/;"	m	struct:cv::cuda::device::SingleMaskChannels
channels	opencv2/core/cvstd.inl.hpp	/^           channels     = 2,$/;"	e	enum:cv::DataType::__anon301
channels	opencv2/core/mat.inl.hpp	/^int Mat::channels() const$/;"	f	class:cv::Mat
channels	opencv2/core/mat.inl.hpp	/^int Mat_<_Tp>::channels() const$/;"	f	class:cv::Mat_
channels	opencv2/core/mat.inl.hpp	/^int SparseMat::channels() const$/;"	f	class:cv::SparseMat
channels	opencv2/core/mat.inl.hpp	/^int SparseMat_<_Tp>::channels() const$/;"	f	class:cv::SparseMat_
channels	opencv2/core/mat.inl.hpp	/^int UMat::channels() const$/;"	f	class:cv::UMat
channels	opencv2/core/matx.hpp	/^           channels     = cn,$/;"	e	enum:cv::DataType::__anon123
channels	opencv2/core/matx.hpp	/^           channels     = m * n,$/;"	e	enum:cv::DataType::__anon121
channels	opencv2/core/matx.hpp	/^           channels = cn,$/;"	e	enum:cv::Vec::__anon122
channels	opencv2/core/matx.hpp	/^           channels = rows*cols,$/;"	e	enum:cv::Matx::__anon120
channels	opencv2/core/opengl.hpp	/^int cv::ogl::Buffer::channels() const$/;"	f	class:cv::ogl::Buffer
channels	opencv2/core/traits.hpp	/^           channels     = 1,$/;"	e	enum:cv::DataType::__anon282
channels	opencv2/core/traits.hpp	/^           channels     = 1,$/;"	e	enum:cv::DataType::__anon283
channels	opencv2/core/traits.hpp	/^           channels     = 1,$/;"	e	enum:cv::DataType::__anon284
channels	opencv2/core/traits.hpp	/^           channels     = 1,$/;"	e	enum:cv::DataType::__anon285
channels	opencv2/core/traits.hpp	/^           channels     = 1,$/;"	e	enum:cv::DataType::__anon286
channels	opencv2/core/traits.hpp	/^           channels     = 1,$/;"	e	enum:cv::DataType::__anon287
channels	opencv2/core/traits.hpp	/^           channels     = 1,$/;"	e	enum:cv::DataType::__anon288
channels	opencv2/core/traits.hpp	/^           channels     = 1,$/;"	e	enum:cv::DataType::__anon289
channels	opencv2/core/traits.hpp	/^           channels     = 1,$/;"	e	enum:cv::DataType::__anon290
channels	opencv2/core/traits.hpp	/^           channels     = 1,$/;"	e	enum:cv::DataType::__anon291
channels	opencv2/core/types.hpp	/^           channels     = (int)(sizeof(value_type)\/sizeof(channel_type)), \/\/ 24$/;"	e	enum:cv::DataType::__anon312
channels	opencv2/core/types.hpp	/^           channels     = (int)(sizeof(value_type)\/sizeof(channel_type)), \/\/ 4$/;"	e	enum:cv::DataType::__anon311
channels	opencv2/core/types.hpp	/^           channels     = (int)(sizeof(value_type)\/sizeof(channel_type)), \/\/ 7$/;"	e	enum:cv::DataType::__anon310
channels	opencv2/core/types.hpp	/^           channels     = (int)sizeof(value_type)\/sizeof(channel_type), \/\/ 5$/;"	e	enum:cv::DataType::__anon307
channels	opencv2/core/types.hpp	/^           channels     = 2,$/;"	e	enum:cv::DataType::__anon302
channels	opencv2/core/types.hpp	/^           channels     = 2,$/;"	e	enum:cv::DataType::__anon303
channels	opencv2/core/types.hpp	/^           channels     = 2,$/;"	e	enum:cv::DataType::__anon305
channels	opencv2/core/types.hpp	/^           channels     = 2,$/;"	e	enum:cv::DataType::__anon308
channels	opencv2/core/types.hpp	/^           channels     = 3,$/;"	e	enum:cv::DataType::__anon304
channels	opencv2/core/types.hpp	/^           channels     = 4,$/;"	e	enum:cv::DataType::__anon306
channels	opencv2/core/types.hpp	/^           channels     = 4,$/;"	e	enum:cv::DataType::__anon309
channels	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^__host__ int GpuMat_<T>::channels() const$/;"	f	class:cv::cudev::GpuMat_
channels	opencv2/cudev/ptr2d/mask.hpp	/^    int channels;$/;"	m	struct:cv::cudev::SingleMaskChannels
channels	opencv2/cudev/util/vec_traits.hpp	/^           channels     = 1,$/;"	e	enum:cv::DataType::__anon475
channels	opencv2/cudev/util/vec_traits.hpp	/^           channels     = 1,$/;"	e	enum:cv::DataType::__anon476
channels	opencv2/cudev/util/vec_traits.hpp	/^           channels     = 2,$/;"	e	enum:cv::DataType::__anon477
channels	opencv2/cudev/util/vec_traits.hpp	/^           channels     = 3,$/;"	e	enum:cv::DataType::__anon478
channels	opencv2/cudev/util/vec_traits.hpp	/^           channels     = 4,$/;"	e	enum:cv::DataType::__anon479
char_traits	cpp_src/char_traits.h	/^    struct char_traits$/;"	s
char_type	cpp_src/basic_ios.h	/^      typedef _CharT                                 char_type;$/;"	t	class:std::basic_ios
char_type	cpp_src/char_traits.h	/^      typedef _CharT                                    char_type;$/;"	t	struct:char_traits
char_type	cpp_src/locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	class:std::collate
char_type	cpp_src/locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	class:std::ctype
char_type	cpp_src/locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	class:std::messages
char_type	cpp_src/locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	class:std::messages_byname
char_type	cpp_src/locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	class:std::money_get
char_type	cpp_src/locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	class:std::money_put
char_type	cpp_src/locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	class:std::moneypunct
char_type	cpp_src/locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	class:std::moneypunct_byname
char_type	cpp_src/locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	class:std::num_get
char_type	cpp_src/locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	class:std::numpunct
char_type	cpp_src/locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	class:std::numpunct_byname
char_type	cpp_src/locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	class:std::time_get
char_type	cpp_src/locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	class:std::time_get_byname
char_type	cpp_src/locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	class:std::time_put
char_type	cpp_src/locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	class:std::time_put_byname
char_type	cpp_src/locale_facets.h	/^      typedef _CharT		char_type;$/;"	t	class:std::ctype_byname
char_type	cpp_src/locale_facets.h	/^      typedef _CharT		char_type;$/;"	t	class:std::num_put
char_type	cpp_src/locale_facets.h	/^      typedef _CharT               char_type;$/;"	t	class:std::collate_byname
char_type	cpp_src/locale_facets.h	/^      typedef _CharT char_type;$/;"	t	class:std::__ctype_abstract_base
char_type	cpp_src/locale_facets.h	/^      typedef char		char_type;$/;"	t	class:std::ctype
char_type	cpp_src/locale_facets.h	/^      typedef wchar_t		char_type;$/;"	t	class:std::ctype
char_type	cpp_src/stream_iterator.h	/^      typedef _CharT                         char_type;$/;"	t	class:std::istream_iterator
char_type	cpp_src/stream_iterator.h	/^      typedef _CharT                         char_type;$/;"	t	class:std::ostream_iterator
char_type	cpp_src/streambuf_iterator.h	/^      typedef _CharT					char_type;$/;"	t	class:std::istreambuf_iterator
char_type	cpp_src/streambuf_iterator.h	/^      typedef _CharT                           char_type;$/;"	t	class:std::ostreambuf_iterator
check	opencv2/core/cuda/utility.hpp	/^        static __device__ __forceinline__ bool check(int, int)$/;"	f	struct:cv::cuda::device::WithOutMask
check	opencv2/core/cuda/utility.hpp	/^        static __device__ __forceinline__ bool check(int, int, int)$/;"	f	struct:cv::cuda::device::WithOutMask
checkCudaError	opencv2/core/cuda/common.hpp	/^    static inline void checkCudaError(cudaError_t err, const char* file, const int line, const char* func)$/;"	f	namespace:cv::cuda
checkCudaError	opencv2/cudev/common.hpp	/^__host__ __forceinline__ void checkCudaError(cudaError_t err, const char* file, const int line, const char* func)$/;"	f	namespace:cv::cudev
checkNcvError	opencv2/cudalegacy/private.hpp	/^    static inline void checkNcvError(int err, const char* file, const int line, const char* func)$/;"	f	namespace:cv::cuda
check_key_does_not_exist	5/ext/pb_ds/detail/debug_map_base.hpp	/^    check_key_does_not_exist(key_const_reference r_key,$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
check_key_exists	5/ext/pb_ds/detail/debug_map_base.hpp	/^    check_key_exists(key_const_reference r_key,$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
check_size	5/ext/pb_ds/detail/debug_map_base.hpp	/^    check_size(size_type size, const char* __file, int __line) const$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
child	opencv2/objdetect/objdetect_c.h	/^    int child;$/;"	m	struct:CvHaarStageClassifier
child1	opencv2/flann/kdtree_index.h	/^        Node* child1, * child2;$/;"	m	struct:cvflann::KDTreeIndex::Node
child1	opencv2/flann/kdtree_single_index.h	/^        Node* child1, * child2;$/;"	m	struct:cvflann::KDTreeSingleIndex::Node
child2	opencv2/flann/kdtree_index.h	/^        Node* child1, * child2;$/;"	m	struct:cvflann::KDTreeIndex::Node
child2	opencv2/flann/kdtree_single_index.h	/^        Node* child1, * child2;$/;"	m	struct:cvflann::KDTreeSingleIndex::Node
childs	opencv2/flann/hierarchical_clustering_index.h	/^        Node** childs;$/;"	m	struct:cvflann::HierarchicalClusteringIndex::Node
childs	opencv2/flann/kmeans_index.h	/^        KMeansNode** childs;$/;"	m	struct:cvflann::KMeansIndex::KMeansNode
chooseCenters	opencv2/flann/hierarchical_clustering_index.h	/^    centersAlgFunction chooseCenters;$/;"	m	class:cvflann::HierarchicalClusteringIndex
chooseCenters	opencv2/flann/kmeans_index.h	/^    centersAlgFunction chooseCenters;$/;"	m	class:cvflann::KMeansIndex
chooseCentersGonzales	opencv2/flann/hierarchical_clustering_index.h	/^    void chooseCentersGonzales(int k, int* dsindices, int indices_length, int* centers, int& centers_length)$/;"	f	class:cvflann::HierarchicalClusteringIndex
chooseCentersGonzales	opencv2/flann/kmeans_index.h	/^    void chooseCentersGonzales(int k, int* indices, int indices_length, int* centers, int& centers_length)$/;"	f	class:cvflann::KMeansIndex
chooseCentersKMeanspp	opencv2/flann/hierarchical_clustering_index.h	/^    void chooseCentersKMeanspp(int k, int* dsindices, int indices_length, int* centers, int& centers_length)$/;"	f	class:cvflann::HierarchicalClusteringIndex
chooseCentersKMeanspp	opencv2/flann/kmeans_index.h	/^    void chooseCentersKMeanspp(int k, int* indices, int indices_length, int* centers, int& centers_length)$/;"	f	class:cvflann::KMeansIndex
chooseCentersRandom	opencv2/flann/hierarchical_clustering_index.h	/^    void chooseCentersRandom(int k, int* dsindices, int indices_length, int* centers, int& centers_length)$/;"	f	class:cvflann::HierarchicalClusteringIndex
chooseCentersRandom	opencv2/flann/kmeans_index.h	/^    void chooseCentersRandom(int k, int* indices, int indices_length, int* centers, int& centers_length)$/;"	f	class:cvflann::KMeansIndex
choose_policy	opencv2/flann/any.h	/^struct choose_policy$/;"	s	namespace:cvflann::anyimpl
choose_policy	opencv2/flann/any.h	/^struct choose_policy<T*>$/;"	s	namespace:cvflann::anyimpl
choose_policy	opencv2/flann/any.h	/^struct choose_policy<any>$/;"	s	namespace:cvflann::anyimpl
chromaFormat	opencv2/cudacodec.hpp	/^    ChromaFormat chromaFormat;$/;"	m	struct:cv::cudacodec::FormatInfo
class$	5/sun/awt/CausedFocusEvent.h	/^  static ::java::lang::Class class$;$/;"	m	class:sun::awt::CausedFocusEvent
class$	5/sun/misc/Service.h	/^  static ::java::lang::Class class$;$/;"	m	class:sun::misc::Service
class$	5/sun/misc/ServiceConfigurationError.h	/^  static ::java::lang::Class class$;$/;"	m	class:sun::misc::ServiceConfigurationError
class$	5/sun/misc/Unsafe.h	/^  static ::java::lang::Class class$;$/;"	m	class:sun::misc::Unsafe
class$	5/sun/reflect/Reflection.h	/^  static ::java::lang::Class class$;$/;"	m	class:sun::reflect::Reflection
class$	5/sun/reflect/annotation/AnnotationInvocationHandler.h	/^  static ::java::lang::Class class$;$/;"	m	class:sun::reflect::annotation::AnnotationInvocationHandler
class$	5/sun/reflect/annotation/AnnotationParser.h	/^  static ::java::lang::Class class$;$/;"	m	class:sun::reflect::annotation::AnnotationParser
class$	5/sun/reflect/annotation/AnnotationType.h	/^  static ::java::lang::Class class$;$/;"	m	class:sun::reflect::annotation::AnnotationType
class$	5/sun/reflect/annotation/EnumConstantNotPresentExceptionProxy.h	/^  static ::java::lang::Class class$;$/;"	m	class:sun::reflect::annotation::EnumConstantNotPresentExceptionProxy
class$	5/sun/reflect/annotation/ExceptionProxy.h	/^  static ::java::lang::Class class$;$/;"	m	class:sun::reflect::annotation::ExceptionProxy
class$	5/sun/reflect/misc/ReflectUtil.h	/^  static ::java::lang::Class class$;$/;"	m	class:sun::reflect::misc::ReflectUtil
classIdx	opencv2/ml.hpp	/^        int classIdx; \/\/!< Class index normalized to 0..class_count-1 range and assigned to the$/;"	m	class:cv::ml::DTrees::Node
class_id	opencv2/core/types.hpp	/^    CV_PROP_RW int class_id; \/\/!< object class (if the keypoints need to be clustered by an object they belong to)$/;"	m	class:cv::KeyPoint
classifier	opencv2/objdetect/objdetect_c.h	/^    CvHaarClassifier* classifier;$/;"	m	struct:CvHaarStageClassifier
clear	5/ext/pb_ds/detail/bin_search_tree_/erase_fn_imps.hpp	/^clear()$/;"	f	class:PB_DS_CLASS_C_DEC
clear	5/ext/pb_ds/detail/bin_search_tree_/r_erase_fn_imps.hpp	/^clear()$/;"	f	class:PB_DS_CLASS_C_DEC
clear	5/ext/pb_ds/detail/binary_heap_/erase_fn_imps.hpp	/^clear()$/;"	f	class:PB_DS_CLASS_C_DEC
clear	5/ext/pb_ds/detail/binomial_heap_base_/erase_fn_imps.hpp	/^clear()$/;"	f	class:PB_DS_CLASS_C_DEC
clear	5/ext/pb_ds/detail/cc_hash_table_map_/erase_fn_imps.hpp	/^clear()$/;"	f	class:PB_DS_CLASS_C_DEC
clear	5/ext/pb_ds/detail/debug_map_base.hpp	/^    clear()$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
clear	5/ext/pb_ds/detail/gp_hash_table_map_/erase_fn_imps.hpp	/^clear()$/;"	f	class:PB_DS_CLASS_C_DEC
clear	5/ext/pb_ds/detail/left_child_next_sibling_heap_/erase_fn_imps.hpp	/^clear()$/;"	f	class:PB_DS_CLASS_C_DEC
clear	5/ext/pb_ds/detail/list_update_map_/erase_fn_imps.hpp	/^clear()$/;"	f	class:PB_DS_CLASS_C_DEC
clear	5/ext/pb_ds/detail/ov_tree_map_/erase_fn_imps.hpp	/^clear()$/;"	f	class:PB_DS_CLASS_C_DEC
clear	5/ext/pb_ds/detail/pat_trie_/erase_fn_imps.hpp	/^clear()$/;"	f	class:PB_DS_CLASS_C_DEC
clear	5/ext/pb_ds/detail/pat_trie_/r_erase_fn_imps.hpp	/^clear()$/;"	f	class:PB_DS_CLASS_C_DEC
clear	5/ext/pb_ds/detail/rc_binomial_heap_/erase_fn_imps.hpp	/^clear()$/;"	f	class:PB_DS_CLASS_C_DEC
clear	5/ext/pb_ds/detail/rc_binomial_heap_/rc.hpp	/^    clear()$/;"	f	class:__gnu_pbds::detail::rc
clear	5/ext/pb_ds/detail/thin_heap_/erase_fn_imps.hpp	/^clear()$/;"	f	class:PB_DS_CLASS_C_DEC
clear	cpp_src/basic_string.h	/^      clear()$/;"	f	class:std::basic_string
clear	cpp_src/stl_bvector.h	/^    clear()$/;"	f	class:std::vector
clear	cpp_src/stl_deque.h	/^      clear()$/;"	f	class:std::deque
clear	cpp_src/stl_list.h	/^      clear()$/;"	f	class:std::list
clear	cpp_src/stl_map.h	/^      clear()$/;"	f	class:std::map
clear	cpp_src/stl_multimap.h	/^      clear()$/;"	f	class:std::multimap
clear	cpp_src/stl_multiset.h	/^      clear()$/;"	f	class:std::multiset
clear	cpp_src/stl_set.h	/^      clear()$/;"	f	class:std::set
clear	cpp_src/stl_tree.h	/^      clear()$/;"	f	class:std::_Rb_tree
clear	cpp_src/stl_vector.h	/^      clear()$/;"	f	class:std::vector
clear	opencv2/core.hpp	/^    CV_WRAP virtual void clear() {}$/;"	f	class:cv::Algorithm
clear	opencv2/core/core_c.h	/^template<typename _Tp> inline void Seq<_Tp>::clear()$/;"	f	class:cv::Seq
clear	opencv2/core/cvstd.hpp	/^void String::clear()$/;"	f	class:cv::String
clear	opencv2/cudalegacy/NCV.hpp	/^    void clear()$/;"	f	class:NCVMatrix
clear	opencv2/cudalegacy/NCV.hpp	/^    void clear()$/;"	f	class:NCVVector
clear	opencv2/flann/dynamic_bitset.h	/^    void clear()$/;"	f	class:cvflann::DynamicBitset
clear	opencv2/flann/heap.h	/^    void clear()$/;"	f	class:cvflann::Heap
clear	opencv2/flann/result_set.h	/^    inline void clear()$/;"	f	class:cvflann::RadiusUniqueResultSet
clear	opencv2/flann/result_set.h	/^    void clear()$/;"	f	class:cvflann::KNNRadiusUniqueResultSet
clear	opencv2/flann/result_set.h	/^    void clear()$/;"	f	class:cvflann::KNNUniqueResultSet
clear_imp	5/ext/pb_ds/detail/bin_search_tree_/erase_fn_imps.hpp	/^clear_imp(node_pointer p_nd)$/;"	f	class:PB_DS_CLASS_C_DEC
clear_imp	5/ext/pb_ds/detail/bin_search_tree_/r_erase_fn_imps.hpp	/^clear_imp(node_pointer p_nd)$/;"	f	class:PB_DS_CLASS_C_DEC
clear_imp	5/ext/pb_ds/detail/left_child_next_sibling_heap_/erase_fn_imps.hpp	/^clear_imp(node_pointer p_nd)$/;"	f	class:PB_DS_CLASS_C_DEC
clear_imp	5/ext/pb_ds/detail/pat_trie_/erase_fn_imps.hpp	/^clear_imp(node_pointer p_nd)$/;"	f	class:PB_DS_CLASS_C_DEC
clear_imp	5/ext/pb_ds/detail/pat_trie_/r_erase_fn_imps.hpp	/^clear_imp(node_pointer p_nd)$/;"	f	class:PB_DS_CLASS_C_DEC
clone	opencv2/core/cuda.inl.hpp	/^GpuMat GpuMat::clone() const$/;"	f	class:cv::cuda::GpuMat
clone	opencv2/core/cuda.inl.hpp	/^HostMem HostMem::clone() const$/;"	f	class:cv::cuda::HostMem
clone	opencv2/core/mat.inl.hpp	/^Mat Mat::clone() const$/;"	f	class:cv::Mat
clone	opencv2/core/mat.inl.hpp	/^Mat_<_Tp> Mat_<_Tp>::clone() const$/;"	f	class:cv::Mat_
clone	opencv2/core/mat.inl.hpp	/^SparseMat SparseMat::clone() const$/;"	f	class:cv::SparseMat
clone	opencv2/core/mat.inl.hpp	/^SparseMat_<_Tp> SparseMat_<_Tp>::clone() const$/;"	f	class:cv::SparseMat_
clone	opencv2/core/mat.inl.hpp	/^UMat UMat::clone() const$/;"	f	class:cv::UMat
clone	opencv2/core/types_c.h	/^    CvCloneFunc clone; \/**< creates a copy of the object *\/$/;"	m	struct:CvTypeInfo
clone	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^__host__ GpuMat_<T> GpuMat_<T>::clone() const$/;"	f	class:cv::cudev::GpuMat_
clone	opencv2/flann/any.h	/^    virtual void clone(void* const* src, void** dest) { *dest = *src; }$/;"	f	struct:cvflann::anyimpl::small_any_policy
clone	opencv2/flann/any.h	/^    virtual void clone(void* const* src, void** dest)$/;"	f	struct:cvflann::anyimpl::big_any_policy
clone_op	opencv2/features2d.hpp	/^    static Mat clone_op( Mat m ) { return m.clone(); }$/;"	f	class:cv::DescriptorMatcher
close	cpp_src/locale_facets.h	/^      close(catalog __c) const$/;"	f	class:std::messages
clusterCount	opencv2/features2d.hpp	/^    int clusterCount;$/;"	m	class:cv::BOWKMeansTrainer
cmp_fn	5/ext/pb_ds/assoc_container.hpp	/^    typedef Cmp_Fn 				cmp_fn;$/;"	t	class:__gnu_pbds::tree
cmp_fn	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	/^      typedef Cmp_Fn 					cmp_fn;$/;"	t	class:__gnu_pbds::detail::PB_DS_BIN_TREE_NAME
cmp_fn	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	/^      typedef Cmp_Fn 					cmp_fn;$/;"	t	class:__gnu_pbds::detail::binary_heap
cmp_fn	5/ext/pb_ds/detail/binomial_heap_/binomial_heap_.hpp	/^      typedef typename base_type::cmp_fn 		cmp_fn;$/;"	t	class:__gnu_pbds::detail::binomial_heap
cmp_fn	5/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp	/^      typedef Cmp_Fn 					cmp_fn;$/;"	t	class:__gnu_pbds::detail::binomial_heap_base
cmp_fn	5/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp	/^      typedef Cmp_Fn 					cmp_fn;$/;"	t	class:__gnu_pbds::detail::left_child_next_sibling_heap
cmp_fn	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      typedef Cmp_Fn 					cmp_fn;$/;"	t	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
cmp_fn	5/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp	/^      typedef Cmp_Fn 					cmp_fn;$/;"	t	class:__gnu_pbds::detail::pairing_heap
cmp_fn	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	/^      typedef Cmp_Fn 					 cmp_fn;$/;"	t	class:__gnu_pbds::detail::PB_DS_RB_TREE_NAME
cmp_fn	5/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp	/^      typedef typename base_type::cmp_fn 		cmp_fn;$/;"	t	class:__gnu_pbds::detail::rc_binomial_heap
cmp_fn	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	/^      typedef Cmp_Fn 					 cmp_fn;$/;"	t	class:__gnu_pbds::detail::PB_DS_S_TREE_NAME
cmp_fn	5/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp	/^      typedef Cmp_Fn 					cmp_fn;$/;"	t	class:__gnu_pbds::detail::thin_heap
cmp_fn	5/ext/pb_ds/priority_queue.hpp	/^    typedef Cmp_Fn 					cmp_fn;$/;"	t	class:__gnu_pbds::priority_queue
cmp_fn	5/ext/pb_ds/tree_policy.hpp	/^    typedef Cmp_Fn 					cmp_fn;$/;"	t	class:__gnu_pbds::tree_order_statistics_node_update
cmp_keys	5/ext/pb_ds/detail/pat_trie_/synth_access_traits.hpp	/^    cmp_keys(key_const_reference r_lhs_key,$/;"	f	class:__gnu_pbds::detail::PB_DS_SYNTH_E_ACCESS_TRAITS_C_DEC
cmp_prefixes	5/ext/pb_ds/detail/pat_trie_/synth_access_traits.hpp	/^    cmp_prefixes(const_iterator b_l, const_iterator e_l, const_iterator b_r,$/;"	f	class:__gnu_pbds::detail::PB_DS_SYNTH_E_ACCESS_TRAITS_C_DEC
cmp_with_other	5/ext/pb_ds/detail/cc_hash_table_map_/cmp_fn_imps.hpp	/^cmp_with_other(const Other_Map_Type& other) const$/;"	f	class:PB_DS_CLASS_C_DEC
cmp_with_other	5/ext/pb_ds/detail/cc_hash_table_map_/info_fn_imps.hpp	/^cmp_with_other(const Other_Map_Type& other) const$/;"	f	class:PB_DS_CLASS_C_DEC
cn	opencv2/core/cuda/vec_traits.hpp	/^        enum {cn=1};$/;"	e	enum:cv::cuda::device::VecTraits::__anon253
cn	opencv2/core/cuda/vec_traits.hpp	/^        enum {cn=1};$/;"	e	enum:cv::cuda::device::VecTraits::__anon254
cn	opencv2/core/cuda/vec_traits.hpp	/^        enum {cn=1};$/;"	e	enum:cv::cuda::device::VecTraits::__anon255
cn	opencv2/core/cuda/vec_traits.hpp	/^        enum {cn=2};$/;"	e	enum:cv::cuda::device::VecTraits::__anon256
cn	opencv2/core/cuda/vec_traits.hpp	/^        enum {cn=3};$/;"	e	enum:cv::cuda::device::VecTraits::__anon257
cn	opencv2/core/cuda/vec_traits.hpp	/^        enum {cn=4};$/;"	e	enum:cv::cuda::device::VecTraits::__anon258
cn	opencv2/core/cuda/vec_traits.hpp	/^        enum {cn=8};$/;"	e	enum:cv::cuda::device::VecTraits::__anon259
cn	opencv2/cudev/grid/detail/reduce.hpp	/^        enum { cn = VecTraits<src_type>::cn };$/;"	e	enum:cv::cudev::grid_reduce_detail::SumReductor::__anon400
cn	opencv2/cudev/util/vec_traits.hpp	/^    enum {cn=1};$/;"	e	enum:cv::cudev::VecTraits::__anon470
cn	opencv2/cudev/util/vec_traits.hpp	/^    enum {cn=1};$/;"	e	enum:cv::cudev::VecTraits::__anon471
cn	opencv2/cudev/util/vec_traits.hpp	/^    enum {cn=2};$/;"	e	enum:cv::cudev::VecTraits::__anon472
cn	opencv2/cudev/util/vec_traits.hpp	/^    enum {cn=3};$/;"	e	enum:cv::cudev::VecTraits::__anon473
cn	opencv2/cudev/util/vec_traits.hpp	/^    enum {cn=4};$/;"	e	enum:cv::cudev::VecTraits::__anon474
code	opencv2/core.hpp	/^    int code; \/\/\/< error code @see CVStatus$/;"	m	class:cv::Exception
code	opencv2/imgproc/types_c.h	/^    char      code;$/;"	m	struct:CvChainPtReader
codec	opencv2/cudacodec.hpp	/^    Codec codec;$/;"	m	struct:cv::cudacodec::FormatInfo
codecvt	cpp_src/codecvt.h	/^      codecvt(size_t __refs = 0)$/;"	f	class:std::codecvt
codecvt	cpp_src/codecvt.h	/^    class codecvt$/;"	c	namespace:std
codecvt	cpp_src/codecvt.h	/^    class codecvt<char, char, mbstate_t>$/;"	c	namespace:std
codecvt	cpp_src/codecvt.h	/^    class codecvt<wchar_t, char, mbstate_t>$/;"	c	namespace:std
codecvt_base	cpp_src/codecvt.h	/^  class codecvt_base$/;"	c	namespace:std
codecvt_byname	cpp_src/codecvt.h	/^      codecvt_byname(const char* __s, size_t __refs = 0)$/;"	f	class:std::codecvt_byname
codecvt_byname	cpp_src/codecvt.h	/^    class codecvt_byname : public codecvt<_InternT, _ExternT, _StateT>$/;"	c	namespace:std
coeffObjectSizeToTrack	opencv2/objdetect/detection_based_tracker.hpp	/^            float coeffObjectSizeToTrack;$/;"	m	struct:cv::DetectionBasedTracker::InnerParameters
coeffObjectSpeedUsingInPrediction	opencv2/objdetect/detection_based_tracker.hpp	/^            float coeffObjectSpeedUsingInPrediction;$/;"	m	struct:cv::DetectionBasedTracker::InnerParameters
coeffTrackingWindowSize	opencv2/objdetect/detection_based_tracker.hpp	/^            float coeffTrackingWindowSize;$/;"	m	struct:cv::DetectionBasedTracker::InnerParameters
coi	opencv2/core/types_c.h	/^    int  coi; \/**< 0 - no COI (all channels are selected), 1 - 0th channel is selected ...*\/$/;"	m	struct:_IplROI
col	opencv2/core/cuda.inl.hpp	/^GpuMat GpuMat::col(int x) const$/;"	f	class:cv::cuda::GpuMat
col	opencv2/core/mat.inl.hpp	/^Mat Mat::col(int x) const$/;"	f	class:cv::Mat
col	opencv2/core/mat.inl.hpp	/^Mat_<_Tp> Mat_<_Tp>::col(int x) const$/;"	f	class:cv::Mat_
col	opencv2/core/mat.inl.hpp	/^UMat UMat::col(int x) const$/;"	f	class:cv::UMat
col	opencv2/core/matx.hpp	/^Matx<_Tp, m, 1> Matx<_Tp, m, n>::col(int j) const$/;"	f	class:cv::Matx
col	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^__host__ GpuMat_<T> GpuMat_<T>::col(int x) const$/;"	f	class:cv::cudev::GpuMat_
colRange	opencv2/core/cuda.inl.hpp	/^GpuMat GpuMat::colRange(Range r) const$/;"	f	class:cv::cuda::GpuMat
colRange	opencv2/core/cuda.inl.hpp	/^GpuMat GpuMat::colRange(int startcol, int endcol) const$/;"	f	class:cv::cuda::GpuMat
colRange	opencv2/core/mat.inl.hpp	/^Mat Mat::colRange(const Range& r) const$/;"	f	class:cv::Mat
colRange	opencv2/core/mat.inl.hpp	/^Mat Mat::colRange(int startcol, int endcol) const$/;"	f	class:cv::Mat
colRange	opencv2/core/mat.inl.hpp	/^UMat UMat::colRange(const Range& r) const$/;"	f	class:cv::UMat
colRange	opencv2/core/mat.inl.hpp	/^UMat UMat::colRange(int startcol, int endcol) const$/;"	f	class:cv::UMat
colRange	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^__host__ GpuMat_<T> GpuMat_<T>::colRange(Range r) const$/;"	f	class:cv::cudev::GpuMat_
colRange	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^__host__ GpuMat_<T> GpuMat_<T>::colRange(int startcol, int endcol) const$/;"	f	class:cv::cudev::GpuMat_
collate	cpp_src/locale_classes.h	/^    static const category collate	= 1L << 2;$/;"	m	class:std::locale
collate	cpp_src/locale_facets.h	/^      collate(__c_locale __cloc, size_t __refs = 0)$/;"	f	class:std::collate
collate	cpp_src/locale_facets.h	/^      collate(size_t __refs = 0)$/;"	f	class:std::collate
collate	cpp_src/locale_facets.h	/^    class collate : public locale::facet$/;"	c	namespace:std
collate_byname	cpp_src/locale_facets.h	/^      collate_byname(const char* __s, size_t __refs = 0)$/;"	f	class:std::collate_byname
collate_byname	cpp_src/locale_facets.h	/^    class collate_byname : public collate<_CharT>$/;"	c	namespace:std
collb_	opencv2/videostab/global_motion.hpp	/^    std::vector<double> obj_, collb_, colub_;$/;"	m	class:cv::videostab::MotionEstimatorL1
collb_	opencv2/videostab/motion_stabilizing.hpp	/^    std::vector<double> obj_, collb_, colub_;$/;"	m	class:cv::videostab::LpMotionStabilizer
collectGarbage	opencv2/stitching/detail/matchers.hpp	/^    virtual void collectGarbage() {}$/;"	f	class:cv::detail::FeaturesFinder
collectGarbage	opencv2/stitching/detail/matchers.hpp	/^    virtual void collectGarbage() {}$/;"	f	class:cv::detail::FeaturesMatcher
color	opencv2/highgui.hpp	/^    Scalar      color;     \/\/!< Color of the font. Scalar(blue_component, green_component, red_component[, alpha_component])$/;"	m	struct:cv::QtFont
color	opencv2/imgproc/imgproc_c.h	/^  CvScalar color;       \/\/Qt:ColorFont -> cvScalar(blue_component, green_component, red_component[, alpha_component])$/;"	m	struct:CvFont
colorModel	opencv2/core/types_c.h	/^    char colorModel[4];     \/**< Ignored by OpenCV *\/$/;"	m	struct:_IplImage
color_	opencv2/core/opengl.hpp	/^    Buffer color_;$/;"	m	class:cv::ogl::Arrays
color_cvt_detail	opencv2/cudev/functional/detail/color_cvt.hpp	/^namespace color_cvt_detail$/;"	n	namespace:cv::cudev
color_detail	opencv2/core/cuda/detail/color_detail.hpp	/^    namespace color_detail$/;"	n	namespace:cv::cuda::device
cols	opencv2/core/cuda.hpp	/^    int rows, cols;$/;"	m	class:cv::cuda::GpuMat
cols	opencv2/core/cuda.hpp	/^    int rows, cols;$/;"	m	class:cv::cuda::HostMem
cols	opencv2/core/cuda_types.hpp	/^            int cols;$/;"	m	struct:cv::cuda::PtrStepSz
cols	opencv2/core/mat.hpp	/^    int rows, cols;$/;"	m	class:cv::Mat
cols	opencv2/core/mat.hpp	/^    int rows, cols;$/;"	m	class:cv::UMat
cols	opencv2/core/matx.hpp	/^           cols     = n,$/;"	e	enum:cv::Matx::__anon120
cols	opencv2/core/opengl.hpp	/^int cv::ogl::Buffer::cols() const$/;"	f	class:cv::ogl::Buffer
cols	opencv2/core/opengl.hpp	/^int cv::ogl::Texture2D::cols() const$/;"	f	class:cv::ogl::Texture2D
cols	opencv2/core/types_c.h	/^        int cols;$/;"	m	union:CvMat::__anon327
cols	opencv2/core/types_c.h	/^    int cols;$/;"	m	struct:CvMat
cols	opencv2/cudev/ptr2d/constant.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::ConstantPtrSz
cols	opencv2/cudev/ptr2d/deriv.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::DerivXPtrSz
cols	opencv2/cudev/ptr2d/deriv.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::DerivYPtrSz
cols	opencv2/cudev/ptr2d/deriv.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::LaplacianPtrSz
cols	opencv2/cudev/ptr2d/deriv.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::ScharrXPtrSz
cols	opencv2/cudev/ptr2d/deriv.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::ScharrYPtrSz
cols	opencv2/cudev/ptr2d/deriv.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::SobelXPtrSz
cols	opencv2/cudev/ptr2d/deriv.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::SobelYPtrSz
cols	opencv2/cudev/ptr2d/extrapolation.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::BrdBase
cols	opencv2/cudev/ptr2d/extrapolation.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::BrdConstant
cols	opencv2/cudev/ptr2d/glob.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::GlobPtrSz
cols	opencv2/cudev/ptr2d/interpolation.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::CommonAreaInterPtrSz
cols	opencv2/cudev/ptr2d/interpolation.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::CubicInterPtrSz
cols	opencv2/cudev/ptr2d/interpolation.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::IntegerAreaInterPtrSz
cols	opencv2/cudev/ptr2d/interpolation.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::LinearInterPtrSz
cols	opencv2/cudev/ptr2d/interpolation.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::NearestInterPtrSz
cols	opencv2/cudev/ptr2d/lut.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::LutPtrSz
cols	opencv2/cudev/ptr2d/mask.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::SingleMaskChannelsSz
cols	opencv2/cudev/ptr2d/remap.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::RemapPtr1Sz
cols	opencv2/cudev/ptr2d/remap.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::RemapPtr2Sz
cols	opencv2/cudev/ptr2d/resize.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::ResizePtrSz
cols	opencv2/cudev/ptr2d/texture.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::Texture
cols	opencv2/cudev/ptr2d/transform.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::BinaryTransformPtrSz
cols	opencv2/cudev/ptr2d/transform.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::UnaryTransformPtrSz
cols	opencv2/cudev/ptr2d/warping.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::AffineMapPtrSz
cols	opencv2/cudev/ptr2d/warping.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::PerspectiveMapPtrSz
cols	opencv2/cudev/ptr2d/zip.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::ZipPtrSz
cols	opencv2/flann/matrix.h	/^    size_t cols;$/;"	m	class:cvflann::Matrix
cols	opencv2/flann/matrix.h	/^    size_t cols;$/;"	m	class:cvflann::UntypedMatrix
cols	opencv2/flann/saving.h	/^    size_t cols;$/;"	m	struct:cvflann::IndexHeader
cols_	opencv2/core/opengl.hpp	/^    int cols_;$/;"	m	class:cv::ogl::Buffer
cols_	opencv2/core/opengl.hpp	/^    int cols_;$/;"	m	class:cv::ogl::Texture2D
cols_	opencv2/videostab/global_motion.hpp	/^    std::vector<int> rows_, cols_;$/;"	m	class:cv::videostab::MotionEstimatorL1
cols_	opencv2/videostab/motion_stabilizing.hpp	/^    std::vector<int> rows_, cols_;$/;"	m	class:cv::videostab::LpMotionStabilizer
colub_	opencv2/videostab/global_motion.hpp	/^    std::vector<double> obj_, collb_, colub_;$/;"	m	class:cv::videostab::MotionEstimatorL1
colub_	opencv2/videostab/motion_stabilizing.hpp	/^    std::vector<double> obj_, collb_, colub_;$/;"	m	class:cv::videostab::LpMotionStabilizer
comb_hash_fn	5/ext/pb_ds/assoc_container.hpp	/^    typedef Comb_Hash_Fn 			comb_hash_fn;$/;"	t	class:__gnu_pbds::cc_hash_table
comb_hash_fn	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef Comb_Hash_Fn 			comb_hash_fn;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
comb_hash_fn_base	5/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp	/^      typedef Comb_Hash_Fn comb_hash_fn_base;$/;"	t	class:__gnu_pbds::detail::ranged_hash_fn
comb_probe_fn	5/ext/pb_ds/assoc_container.hpp	/^    typedef Comb_Probe_Fn			comb_probe_fn;$/;"	t	class:__gnu_pbds::gp_hash_table
comb_probe_fn	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef Comb_Probe_Fn 			comb_probe_fn;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
comb_probe_fn_base	5/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp	/^      typedef Comb_Probe_Fn comb_probe_fn_base;$/;"	t	class:__gnu_pbds::detail::ranged_probe_fn
common_prefix_len	5/ext/pb_ds/detail/trie_policy/trie_policy_base.hpp	/^    common_prefix_len(node_iterator nd_it, e_const_iterator b_r,$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
comp	cpp_src/stl_map.h	/^	_Compare comp;$/;"	m	class:std::map::value_compare
comp	cpp_src/stl_multimap.h	/^	_Compare comp;$/;"	m	class:std::multimap::value_compare
comp	cpp_src/stl_queue.h	/^      _Compare   comp;$/;"	m	class:std::priority_queue
comp_hash	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef typename traits_base::comp_hash 	comp_hash;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
comp_hash	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef typename traits_base::comp_hash	comp_hash;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
comp_hash	5/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp	/^      typedef std::pair<size_type, size_type> comp_hash;$/;"	t	class:__gnu_pbds::detail::ranged_hash_fn
comp_hash	5/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp	/^      typedef std::pair<size_type, size_type> comp_hash;$/;"	t	class:__gnu_pbds::detail::ranged_probe_fn
comp_hash	5/ext/pb_ds/detail/types_traits.hpp	/^	typedef std::pair<size_type, size_type> 	comp_hash;$/;"	t	struct:__gnu_pbds::detail::types_traits
compare	cpp_src/basic_string.h	/^      compare(const basic_string& __str) const$/;"	f	class:std::basic_string
compare	cpp_src/char_traits.h	/^    compare(const char_type* __s1, const char_type* __s2, std::size_t __n)$/;"	f	class:char_traits
compare	cpp_src/locale_facets.h	/^      compare(const _CharT* __lo1, const _CharT* __hi1,$/;"	f	class:std::collate
compare	opencv2/core/cvstd.hpp	/^int String::compare(const String& str) const$/;"	f	class:cv::String
compare	opencv2/core/cvstd.hpp	/^int String::compare(const char* s) const$/;"	f	class:cv::String
compatible	opencv2/flann/any.h	/^    bool compatible(const any& x) const$/;"	f	struct:cvflann::any
completeSymmFlag	opencv2/calib3d/calib3d_c.h	/^    bool completeSymmFlag;$/;"	m	class:CvLevMarq
complex	5/complex.h	39;"	d
component	opencv2/stitching.hpp	/^    std::vector<int> component() const { return indices_; }$/;"	f	class:cv::Stitcher
compose_resol_	opencv2/stitching.hpp	/^    double compose_resol_;$/;"	m	class:cv::Stitcher
compositingResol	opencv2/stitching.hpp	/^    CV_WRAP double compositingResol() const { return compose_resol_; }$/;"	f	class:cv::Stitcher
compute	opencv2/core/operations.hpp	/^    SVD::compute( const Matx<_Tp, m, n>& a, Matx<_Tp, nm, 1>& w, Matx<_Tp, m, nm>& u, Matx<_Tp, n, nm>& vt )$/;"	f	class:cv::SVD
compute	opencv2/core/operations.hpp	/^SVD::compute( const Matx<_Tp, m, n>& a, Matx<_Tp, nm, 1>& w )$/;"	f	class:cv::SVD
compute2	opencv2/features2d.hpp	/^    CV_WRAP_AS(compute) void compute2( const Mat& image, std::vector<KeyPoint>& keypoints, CV_OUT Mat& imgDescriptor )$/;"	f	class:cv::BOWImgDescriptorExtractor
computeBoundingBox	opencv2/flann/kdtree_single_index.h	/^    void computeBoundingBox(BoundingBox& bbox)$/;"	f	class:cvflann::KDTreeSingleIndex
computeClustering	opencv2/flann/hierarchical_clustering_index.h	/^    void computeClustering(NodePtr node, int* dsindices, int indices_length, int branching, int level)$/;"	f	class:cvflann::HierarchicalClusteringIndex
computeClustering	opencv2/flann/kmeans_index.h	/^    void computeClustering(KMeansNodePtr node, int* indices, int indices_length, int branching, int level)$/;"	f	class:cvflann::KMeansIndex
computeDistanceRaport	opencv2/flann/index_testing.h	/^typename Distance::ResultType computeDistanceRaport(const Matrix<typename Distance::ElementType>& inputData, typename Distance::ElementType* target,$/;"	f	namespace:cvflann
computeInitialDistances	opencv2/flann/kdtree_single_index.h	/^    DistanceType computeInitialDistances(const ElementType* vec, std::vector<DistanceType>& dists)$/;"	f	class:cvflann::KDTreeSingleIndex
computeLabels	opencv2/flann/hierarchical_clustering_index.h	/^    void computeLabels(int* dsindices, int indices_length,  int* centers, int centers_length, int* labels, DistanceType& cost)$/;"	f	class:cvflann::HierarchicalClusteringIndex
computeMinMax	opencv2/flann/kdtree_single_index.h	/^    void computeMinMax(int* ind, int count, int dim, ElementType& min_elem, ElementType& max_elem)$/;"	f	class:cvflann::KDTreeSingleIndex
computeNodeStatistics	opencv2/flann/kmeans_index.h	/^    void computeNodeStatistics(KMeansNodePtr node, int* indices, int indices_length)$/;"	f	class:cvflann::KMeansIndex
computeTiltProjectionMatrix	opencv2/imgproc/detail/distortion_model.hpp	/^void computeTiltProjectionMatrix(FLOAT tauX,$/;"	f	namespace:cv::detail
compute_ground_truth	opencv2/flann/ground_truth.h	/^void compute_ground_truth(const Matrix<typename Distance::ElementType>& dataset, const Matrix<typename Distance::ElementType>& testset, Matrix<int>& matches,$/;"	f	namespace:cvflann
concatenate	opencv2/core/affine.hpp	/^cv::Affine3<T> cv::Affine3<T>::concatenate(const Affine3<T>& affine) const$/;"	f	class:cv::Affine3
cond_dealtor	5/ext/pb_ds/detail/cc_hash_table_map_/cond_key_dtor_entry_dealtor.hpp	/^      cond_dealtor(entry_allocator* p_a, entry* p_e)$/;"	f	class:__gnu_pbds::detail::cond_dealtor
cond_dealtor	5/ext/pb_ds/detail/cc_hash_table_map_/cond_key_dtor_entry_dealtor.hpp	/^    class cond_dealtor$/;"	c	namespace:__gnu_pbds::detail
cond_dealtor	5/ext/pb_ds/detail/cond_dealtor.hpp	/^	cond_dealtor(entry_pointer p_e)$/;"	f	class:__gnu_pbds::detail::cond_dealtor
cond_dealtor	5/ext/pb_ds/detail/cond_dealtor.hpp	/^      class cond_dealtor$/;"	c	namespace:__gnu_pbds::detail
cond_dealtor	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^	cond_dealtor(leaf_pointer p_nd)$/;"	f	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME::cond_dealtor
cond_dealtor	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      class cond_dealtor$/;"	c	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
cond_dealtor_t	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	/^      typedef cond_dealtor<node, _Alloc> 		cond_dealtor_t;$/;"	t	class:__gnu_pbds::detail::PB_DS_BIN_TREE_NAME
cond_dealtor_t	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	/^      typedef cond_dealtor<value_type, _Alloc> 		cond_dealtor_t;$/;"	t	class:__gnu_pbds::detail::binary_heap
cond_dealtor_t	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef cond_dealtor<entry, _Alloc> 	cond_dealtor_t;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
cond_dealtor_t	5/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp	/^      typedef cond_dealtor< node, _Alloc> 		cond_dealtor_t;$/;"	t	class:__gnu_pbds::detail::left_child_next_sibling_heap
cond_dealtor_t	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      typedef cond_dealtor<entry, _Alloc> cond_dealtor_t;$/;"	t	class:__gnu_pbds::detail::PB_DS_LU_NAME
cond_dtor	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^	  cond_dtor(value_vector a_vec, iterator& r_last_it, $/;"	f	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME::cond_dtor
cond_dtor	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^        class cond_dtor$/;"	c	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
cond_type	5/ext/pb_ds/detail/standard_policies.hpp	/^      typedef __conditional_type<same_type::value, iftrue, iffalse> cond_type;$/;"	t	struct:__gnu_pbds::detail::default_probe_fn
cond_type	5/ext/pb_ds/detail/standard_policies.hpp	/^      typedef __conditional_type<same_type::value, iftrue, iffalse> cond_type;$/;"	t	struct:__gnu_pbds::detail::default_resize_policy
confThresh	opencv2/stitching/detail/motion_estimators.hpp	/^    double confThresh() const { return conf_thresh_; }$/;"	f	class:cv::detail::BundleAdjusterBase
conf_thresh_	opencv2/stitching.hpp	/^    double conf_thresh_;$/;"	m	class:cv::Stitcher
conf_thresh_	opencv2/stitching/detail/motion_estimators.hpp	/^    double conf_thresh_;$/;"	m	class:cv::detail::BundleAdjusterBase
confidence	opencv2/stitching/detail/matchers.hpp	/^    double confidence;                  \/\/!< Confidence two images are from the same panorama$/;"	m	struct:cv::detail::MatchesInfo
confidences	opencv2/objdetect.hpp	/^   std::vector<double> confidences;$/;"	m	struct:cv::DetectionROI
conj	opencv2/core/matx.hpp	/^Vec<double, 2> Vec<double, 2>::conj() const$/;"	f	class:cv::Vec
conj	opencv2/core/matx.hpp	/^Vec<double, 4> Vec<double, 4>::conj() const$/;"	f	class:cv::Vec
conj	opencv2/core/matx.hpp	/^Vec<float, 2> Vec<float, 2>::conj() const$/;"	f	class:cv::Vec
conj	opencv2/core/matx.hpp	/^Vec<float, 4> Vec<float, 4>::conj() const$/;"	f	class:cv::Vec
conj	opencv2/core/types.hpp	/^Complex<_Tp> Complex<_Tp>::conj() const$/;"	f	class:cv::Complex
conj	opencv2/core/types.hpp	/^Scalar_<_Tp> Scalar_<_Tp>::conj() const$/;"	f	class:cv::Scalar_
conjugate	opencv2/core/matx.hpp	/^template<typename _Tp> Vec<_Tp, 2> inline conjugate(const Vec<_Tp, 2>& v)$/;"	f	namespace:cv::internal
conjugate	opencv2/core/matx.hpp	/^template<typename _Tp> Vec<_Tp, 4> inline conjugate(const Vec<_Tp, 4>& v)$/;"	f	namespace:cv::internal
constCast	opencv2/core/ptr.inl.hpp	/^Ptr<Y> Ptr<T>::constCast() const$/;"	f	class:cv::Ptr
const_entry_pointer	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef typename entry_allocator::const_pointer const_entry_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
const_entry_pointer	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef typename entry_allocator::const_pointer const_entry_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
const_entry_pointer	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      typedef typename entry_allocator::const_pointer const_entry_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_LU_NAME
const_entry_reference	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef typename entry_allocator::const_reference const_entry_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
const_entry_reference	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef typename entry_allocator::const_reference const_entry_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
const_entry_reference	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      typedef typename entry_allocator::const_reference const_entry_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_LU_NAME
const_iterator	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	/^      typedef point_const_iterator 			const_iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_BIN_TREE_NAME
const_iterator	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	/^      							const_iterator;$/;"	t	class:__gnu_pbds::detail::binary_heap
const_iterator	5/ext/pb_ds/detail/binomial_heap_/binomial_heap_.hpp	/^      typedef typename base_type::const_iterator 	const_iterator;$/;"	t	class:__gnu_pbds::detail::binomial_heap
const_iterator	5/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp	/^      typedef typename base_type::const_iterator 	const_iterator;$/;"	t	class:__gnu_pbds::detail::binomial_heap_base
const_iterator	5/ext/pb_ds/detail/branch_policy/null_node_metadata.hpp	/^	typedef typename __traits_type::pointer        	const_iterator;$/;"	t	struct:__gnu_pbds::detail::dumnode_const_iterator
const_iterator	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef const_iterator_ 			const_iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
const_iterator	5/ext/pb_ds/detail/debug_map_base.hpp	/^      typedef typename key_repository::const_iterator  	const_iterator;$/;"	t	class:__gnu_pbds::detail::debug_map_base
const_iterator	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef const_iterator_ 			const_iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
const_iterator	5/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp	/^      const_iterator;$/;"	t	class:__gnu_pbds::detail::left_child_next_sibling_heap
const_iterator	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      typedef const_iterator_ 			const_iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_LU_NAME
const_iterator	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      typedef point_const_iterator 			const_iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
const_iterator	5/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp	/^      typedef typename base_type::const_iterator 	const_iterator;$/;"	t	class:__gnu_pbds::detail::pairing_heap
const_iterator	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef point_const_iterator 			const_iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
const_iterator	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	const_iterator(node_pointer_pointer p_p_cur = 0,$/;"	f	struct:__gnu_pbds::detail::pat_trie_base::_Inode::const_iterator
const_iterator	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      struct const_iterator$/;"	s	struct:__gnu_pbds::detail::pat_trie_base::_Inode
const_iterator	5/ext/pb_ds/detail/pat_trie_/synth_access_traits.hpp	/^      typedef typename base_type::const_iterator	const_iterator;$/;"	t	struct:__gnu_pbds::detail::synth_access_traits
const_iterator	5/ext/pb_ds/detail/pat_trie_/traits.hpp	/^      typedef base_type::_CIter<node, leaf, head, inode, true> 		const_iterator;$/;"	t	struct:__gnu_pbds::detail::trie_traits
const_iterator	5/ext/pb_ds/detail/pat_trie_/traits.hpp	/^      typedef base_type::_CIter<node, leaf, head, inode, true> 	 	const_iterator;$/;"	t	struct:__gnu_pbds::detail::trie_traits
const_iterator	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	/^      typedef typename base_type::const_iterator 	 const_iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_RB_TREE_NAME
const_iterator	5/ext/pb_ds/detail/rc_binomial_heap_/rc.hpp	/^      typedef entry_const_pointer 			 const_iterator;$/;"	t	class:__gnu_pbds::detail::rc
const_iterator	5/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp	/^      typedef typename base_type::const_iterator 	const_iterator;$/;"	t	class:__gnu_pbds::detail::rc_binomial_heap
const_iterator	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	/^      typedef typename base_type::const_iterator 	 const_iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_S_TREE_NAME
const_iterator	5/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp	/^      typedef typename base_type::const_iterator 	const_iterator;$/;"	t	class:__gnu_pbds::detail::thin_heap
const_iterator	5/ext/pb_ds/detail/trie_policy/sample_trie_access_traits.hpp	/^    typedef std::string::const_iterator 		const_iterator;$/;"	t	struct:__gnu_pbds::sample_trie_access_traits
const_iterator	5/ext/pb_ds/detail/trie_policy/trie_policy_base.hpp	/^      typedef typename node_const_iterator::value_type 	const_iterator;$/;"	t	class:__gnu_pbds::detail::trie_policy_base
const_iterator	5/ext/pb_ds/priority_queue.hpp	/^    typedef typename base_type::const_iterator 		const_iterator;$/;"	t	class:__gnu_pbds::priority_queue
const_iterator	5/ext/pb_ds/tree_policy.hpp	/^    typedef typename node_const_iterator::value_type 	const_iterator;$/;"	t	class:__gnu_pbds::tree_order_statistics_node_update
const_iterator	5/ext/pb_ds/trie_policy.hpp	/^		       typename String::const_iterator>::__type const_iterator;$/;"	t	struct:__gnu_pbds::trie_string_access_traits
const_iterator	5/ext/pb_ds/trie_policy.hpp	/^    typedef typename node_const_iterator::value_type 	const_iterator;$/;"	t	class:__gnu_pbds::trie_order_statistics_node_update
const_iterator	5/ext/pb_ds/trie_policy.hpp	/^    typedef typename node_const_iterator::value_type 	const_iterator;$/;"	t	class:__gnu_pbds::trie_prefix_search_node_update
const_iterator	cpp_src/basic_string.h	/^                                                            const_iterator;$/;"	t	class:std::basic_string
const_iterator	cpp_src/stl_bvector.h	/^    typedef _Bit_const_iterator                          const_iterator;$/;"	t	class:std::vector
const_iterator	cpp_src/stl_bvector.h	/^    typedef _Bit_const_iterator  const_iterator;$/;"	t	struct:std::_Bit_const_iterator
const_iterator	cpp_src/stl_deque.h	/^      typedef _Deque_iterator<_Tp, const _Tp&, const _Tp*> const_iterator;$/;"	t	class:std::_Deque_base
const_iterator	cpp_src/stl_deque.h	/^      typedef _Deque_iterator<_Tp, const _Tp&, const _Tp*> const_iterator;$/;"	t	struct:std::_Deque_iterator
const_iterator	cpp_src/stl_deque.h	/^      typedef typename _Base::const_iterator             const_iterator;$/;"	t	class:std::deque
const_iterator	cpp_src/stl_list.h	/^      typedef _List_const_iterator<_Tp>                  const_iterator;$/;"	t	class:std::list
const_iterator	cpp_src/stl_map.h	/^      typedef typename _Rep_type::const_iterator         const_iterator;$/;"	t	class:std::map
const_iterator	cpp_src/stl_multimap.h	/^      typedef typename _Rep_type::const_iterator         const_iterator;$/;"	t	class:std::multimap
const_iterator	cpp_src/stl_multiset.h	/^      typedef typename _Rep_type::const_iterator            const_iterator;$/;"	t	class:std::multiset
const_iterator	cpp_src/stl_set.h	/^      typedef typename _Rep_type::const_iterator            const_iterator;$/;"	t	class:std::set
const_iterator	cpp_src/stl_tree.h	/^      typedef _Rb_tree_const_iterator<value_type> const_iterator;$/;"	t	class:std::_Rb_tree
const_iterator	cpp_src/stl_vector.h	/^      const_iterator;$/;"	t	class:std::vector
const_iterator	opencv2/core/core_c.h	/^    typedef SeqIterator<_Tp> const_iterator;$/;"	t	class:cv::Seq
const_iterator	opencv2/core/cvstd.hpp	/^    typedef const char* const_iterator;$/;"	t	class:cv::String
const_iterator	opencv2/core/mat.hpp	/^    typedef MatConstIterator_<_Tp> const_iterator;$/;"	t	class:cv::Mat_
const_iterator	opencv2/core/mat.hpp	/^    typedef SparseMatConstIterator const_iterator;$/;"	t	class:cv::SparseMat
const_iterator	opencv2/core/mat.hpp	/^    typedef SparseMatConstIterator_<_Tp> const_iterator;$/;"	t	class:cv::SparseMat_
const_iterator_	5/ext/pb_ds/detail/unordered_iterator/const_iterator.hpp	/^  const_iterator_() : m_p_tbl(0)$/;"	f	class:const_iterator_
const_iterator_	5/ext/pb_ds/detail/unordered_iterator/const_iterator.hpp	/^  const_iterator_(const_pointer_ p_value,  PB_DS_GEN_POS pos,$/;"	f	class:const_iterator_
const_iterator_	5/ext/pb_ds/detail/unordered_iterator/const_iterator.hpp	/^class const_iterator_$/;"	c
const_mem_fun1_ref_t	cpp_src/stl_function.h	/^    class const_mem_fun1_ref_t : public binary_function<_Tp, _Arg, _Ret>$/;"	c	namespace:std
const_mem_fun1_t	cpp_src/stl_function.h	/^    class const_mem_fun1_t : public binary_function<const _Tp*, _Arg, _Ret>$/;"	c	namespace:std
const_mem_fun_ref_t	cpp_src/stl_function.h	/^    class const_mem_fun_ref_t : public unary_function<_Tp, _Ret>$/;"	c	namespace:std
const_mem_fun_t	cpp_src/stl_function.h	/^    class const_mem_fun_t : public unary_function<const _Tp*, _Ret>$/;"	c	namespace:std
const_metadata_pointer	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	/^      const_metadata_pointer;$/;"	t	class:__gnu_pbds::detail::ov_tree_node_const_it_
const_metadata_pointer	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	/^      const_metadata_pointer;$/;"	t	class:__gnu_pbds::detail::ov_tree_node_it_
const_param_type	opencv2/core.hpp	/^    typedef bool const_param_type;$/;"	t	struct:cv::ParamType
const_param_type	opencv2/core.hpp	/^    typedef const Mat& const_param_type;$/;"	t	struct:cv::ParamType
const_param_type	opencv2/core.hpp	/^    typedef const Ptr<Algorithm>& const_param_type;$/;"	t	struct:cv::ParamType
const_param_type	opencv2/core.hpp	/^    typedef const String& const_param_type;$/;"	t	struct:cv::ParamType
const_param_type	opencv2/core.hpp	/^    typedef const std::vector<Mat>& const_param_type;$/;"	t	struct:cv::ParamType
const_param_type	opencv2/core.hpp	/^    typedef double const_param_type;$/;"	t	struct:cv::ParamType
const_param_type	opencv2/core.hpp	/^    typedef float const_param_type;$/;"	t	struct:cv::ParamType
const_param_type	opencv2/core.hpp	/^    typedef int const_param_type;$/;"	t	struct:cv::ParamType
const_param_type	opencv2/core.hpp	/^    typedef uchar const_param_type;$/;"	t	struct:cv::ParamType
const_param_type	opencv2/core.hpp	/^    typedef uint64 const_param_type;$/;"	t	struct:cv::ParamType
const_param_type	opencv2/core.hpp	/^    typedef unsigned const_param_type;$/;"	t	struct:cv::ParamType
const_pointer	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	/^      typedef typename traits_base::const_pointer 	const_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_BIN_TREE_NAME
const_pointer	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	/^      typedef Const_Pointer 				const_pointer;$/;"	t	class:__gnu_pbds::detail::bin_search_tree_const_it_
const_pointer	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	/^      typedef typename value_allocator::const_pointer	const_pointer;$/;"	t	class:__gnu_pbds::detail::binary_heap
const_pointer	5/ext/pb_ds/detail/binary_heap_/const_iterator.hpp	/^      typedef typename base_type::const_pointer 	const_pointer;$/;"	t	class:__gnu_pbds::detail::binary_heap_const_iterator_
const_pointer	5/ext/pb_ds/detail/binary_heap_/point_const_iterator.hpp	/^      const_pointer;$/;"	t	class:__gnu_pbds::detail::binary_heap_point_const_iterator_
const_pointer	5/ext/pb_ds/detail/binomial_heap_/binomial_heap_.hpp	/^      typedef typename base_type::const_pointer 	const_pointer;$/;"	t	class:__gnu_pbds::detail::binomial_heap
const_pointer	5/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp	/^      typedef typename __rebind_v::const_pointer 	const_pointer;$/;"	t	class:__gnu_pbds::detail::binomial_heap_base
const_pointer	5/ext/pb_ds/detail/branch_policy/branch_policy.hpp	/^	typedef	typename rebind_v::const_pointer	const_pointer;$/;"	t	struct:__gnu_pbds::detail::branch_policy
const_pointer	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef typename traits_base::const_pointer const_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
const_pointer	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef typename traits_base::const_pointer const_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
const_pointer	5/ext/pb_ds/detail/left_child_next_sibling_heap_/const_iterator.hpp	/^      typedef typename base_type::const_pointer 	const_pointer;$/;"	t	class:__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_
const_pointer	5/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp	/^      typedef typename __rebind_v::other::const_pointer const_pointer;$/;"	t	class:__gnu_pbds::detail::left_child_next_sibling_heap
const_pointer	5/ext/pb_ds/detail/left_child_next_sibling_heap_/point_const_iterator.hpp	/^      const_pointer;$/;"	t	class:__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_
const_pointer	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      typedef typename traits_base::const_pointer const_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_LU_NAME
const_pointer	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	/^      const_pointer;$/;"	t	class:__gnu_pbds::detail::ov_tree_node_const_it_
const_pointer	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	/^      typedef typename base_type::const_pointer const_pointer;$/;"	t	class:__gnu_pbds::detail::ov_tree_node_it_
const_pointer	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      typedef typename traits_base::const_pointer 	const_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
const_pointer	5/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp	/^      typedef typename __rebind_a::const_pointer 	const_pointer;$/;"	t	class:__gnu_pbds::detail::pairing_heap
const_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename traits_base::const_pointer 	const_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
const_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename type_traits::const_pointer 	const_pointer;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_CIter
const_pointer	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	/^      typedef typename base_type::const_pointer 	 const_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_RB_TREE_NAME
const_pointer	5/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp	/^      typedef typename base_type::const_pointer 	const_pointer;$/;"	t	class:__gnu_pbds::detail::rc_binomial_heap
const_pointer	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	/^      typedef typename base_type::const_pointer 	 const_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_S_TREE_NAME
const_pointer	5/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp	/^      typedef typename __rebind_a::const_pointer	const_pointer;$/;"	t	class:__gnu_pbds::detail::thin_heap
const_pointer	5/ext/pb_ds/detail/types_traits.hpp	/^	typedef typename __rebind_va::const_pointer 	const_pointer;$/;"	t	struct:__gnu_pbds::detail::type_base
const_pointer	5/ext/pb_ds/detail/unordered_iterator/const_iterator.hpp	/^  typedef const_pointer_ const_pointer;$/;"	t	class:const_iterator_
const_pointer	5/ext/pb_ds/detail/unordered_iterator/iterator.hpp	/^  typedef const_pointer_ const_pointer;$/;"	t	class:iterator_
const_pointer	5/ext/pb_ds/detail/unordered_iterator/point_const_iterator.hpp	/^  typedef const_pointer_ const_pointer;$/;"	t	class:point_const_iterator_
const_pointer	5/ext/pb_ds/detail/unordered_iterator/point_iterator.hpp	/^  typedef const_pointer_ const_pointer;$/;"	t	class:point_iterator_
const_pointer	5/ext/pb_ds/priority_queue.hpp	/^    typedef typename __rebind_va::const_pointer 	const_pointer;$/;"	t	class:__gnu_pbds::priority_queue
const_pointer	5/ext/pb_ds/tree_policy.hpp	/^    typedef typename base_type::const_pointer 		const_pointer;$/;"	t	class:__gnu_pbds::tree_order_statistics_node_update
const_pointer	5/ext/pb_ds/trie_policy.hpp	/^    typedef typename base_type::const_pointer 		const_pointer;$/;"	t	class:__gnu_pbds::trie_order_statistics_node_update
const_pointer	cpp_src/allocator.h	/^      typedef const _Tp* const_pointer;$/;"	t	class:std::allocator
const_pointer	cpp_src/allocator.h	/^      typedef const void* const_pointer;$/;"	t	class:std::allocator
const_pointer	cpp_src/basic_string.h	/^      typedef typename _CharT_alloc_type::const_pointer	    const_pointer;$/;"	t	class:std::basic_string
const_pointer	cpp_src/stl_bvector.h	/^    typedef const bool*                                  const_pointer;$/;"	t	class:std::vector
const_pointer	cpp_src/stl_deque.h	/^      typedef typename _Tp_alloc_type::const_pointer     const_pointer;$/;"	t	class:std::deque
const_pointer	cpp_src/stl_list.h	/^      typedef typename _Tp_alloc_type::const_pointer     const_pointer;$/;"	t	class:std::list
const_pointer	cpp_src/stl_map.h	/^      typedef typename _Pair_alloc_type::const_pointer   const_pointer;$/;"	t	class:std::map
const_pointer	cpp_src/stl_multimap.h	/^      typedef typename _Pair_alloc_type::const_pointer   const_pointer;$/;"	t	class:std::multimap
const_pointer	cpp_src/stl_multiset.h	/^      typedef typename _Key_alloc_type::const_pointer       const_pointer;$/;"	t	class:std::multiset
const_pointer	cpp_src/stl_set.h	/^      typedef typename _Key_alloc_type::const_pointer       const_pointer;$/;"	t	class:std::set
const_pointer	cpp_src/stl_tree.h	/^      typedef const value_type* const_pointer;$/;"	t	class:std::_Rb_tree
const_pointer	cpp_src/stl_vector.h	/^      typedef typename _Tp_alloc_type::const_pointer     const_pointer;$/;"	t	class:std::vector
const_pointer	opencv2/core/cvstd.hpp	/^    typedef const char* const_pointer;$/;"	t	class:cv::String
const_pointer	opencv2/core/cvstd.hpp	/^    typedef const value_type* const_pointer;$/;"	t	class:cv::Allocator
const_pointer_	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef typename traits_base::const_pointer const_pointer_;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
const_pointer_	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef typename traits_base::const_pointer const_pointer_;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
const_pointer_	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      typedef typename traits_base::const_pointer const_pointer_;$/;"	t	class:__gnu_pbds::detail::PB_DS_LU_NAME
const_reference	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	/^      typedef typename traits_base::const_reference 	const_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_BIN_TREE_NAME
const_reference	5/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp	/^      typedef Const_Iterator const_reference;$/;"	t	class:__gnu_pbds::detail::bin_search_tree_const_node_it_
const_reference	5/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp	/^      typedef Iterator const_reference;$/;"	t	class:__gnu_pbds::detail::bin_search_tree_node_it_
const_reference	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	/^      typedef Const_Reference 				const_reference;$/;"	t	class:__gnu_pbds::detail::bin_search_tree_const_it_
const_reference	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	/^      typedef typename value_allocator::const_reference	const_reference;$/;"	t	class:__gnu_pbds::detail::binary_heap
const_reference	5/ext/pb_ds/detail/binary_heap_/const_iterator.hpp	/^      typedef typename base_type::const_reference 	const_reference;$/;"	t	class:__gnu_pbds::detail::binary_heap_const_iterator_
const_reference	5/ext/pb_ds/detail/binary_heap_/point_const_iterator.hpp	/^      const_reference;$/;"	t	class:__gnu_pbds::detail::binary_heap_point_const_iterator_
const_reference	5/ext/pb_ds/detail/binomial_heap_/binomial_heap_.hpp	/^      typedef typename base_type::const_reference 	const_reference;$/;"	t	class:__gnu_pbds::detail::binomial_heap
const_reference	5/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp	/^      typedef typename __rebind_v::const_reference   	const_reference;$/;"	t	class:__gnu_pbds::detail::binomial_heap_base
const_reference	5/ext/pb_ds/detail/branch_policy/branch_policy.hpp	/^	typedef	typename rebind_v::const_reference 	const_reference;$/;"	t	struct:__gnu_pbds::detail::branch_policy
const_reference	5/ext/pb_ds/detail/branch_policy/null_node_metadata.hpp	/^	typedef const_iterator 				const_reference;$/;"	t	struct:__gnu_pbds::detail::dumnode_const_iterator
const_reference	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef typename traits_base::const_reference const_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
const_reference	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef typename traits_base::const_reference const_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
const_reference	5/ext/pb_ds/detail/left_child_next_sibling_heap_/const_iterator.hpp	/^      typedef typename base_type::const_reference 	const_reference;$/;"	t	class:__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_
const_reference	5/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp	/^      typedef typename __rebind_v::other::const_reference const_reference;$/;"	t	class:__gnu_pbds::detail::left_child_next_sibling_heap
const_reference	5/ext/pb_ds/detail/left_child_next_sibling_heap_/point_const_iterator.hpp	/^      const_reference;$/;"	t	class:__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_
const_reference	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      typedef typename traits_base::const_reference const_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_LU_NAME
const_reference	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	/^      const_reference;$/;"	t	class:__gnu_pbds::detail::ov_tree_node_const_it_
const_reference	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	/^      const_reference;$/;"	t	class:__gnu_pbds::detail::ov_tree_node_it_
const_reference	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      typedef typename traits_base::const_reference 	const_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
const_reference	5/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp	/^      typedef typename __rebind_a::const_reference 	const_reference;$/;"	t	class:__gnu_pbds::detail::pairing_heap
const_reference	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename traits_base::const_reference 	const_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
const_reference	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	  typedef typename __rebind_m::other::const_reference  const_reference;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Metadata
const_reference	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename type_traits::const_reference 	const_reference;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_CIter
const_reference	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename type_traits::const_reference    		const_reference;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Leaf
const_reference	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef value_type 				const_reference;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_Node_citer
const_reference	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef value_type 				const_reference;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_Node_iter
const_reference	5/ext/pb_ds/detail/pat_trie_/synth_access_traits.hpp	/^      typedef typename type_traits::const_reference 	const_reference;$/;"	t	struct:__gnu_pbds::detail::synth_access_traits
const_reference	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	/^      typedef typename base_type::const_reference 	 const_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_RB_TREE_NAME
const_reference	5/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp	/^      typedef typename base_type::const_reference 	const_reference;$/;"	t	class:__gnu_pbds::detail::rc_binomial_heap
const_reference	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	/^      typedef typename base_type::const_reference 	 const_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_S_TREE_NAME
const_reference	5/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp	/^      typedef typename __rebind_a::const_reference     	const_reference;$/;"	t	class:__gnu_pbds::detail::thin_heap
const_reference	5/ext/pb_ds/detail/types_traits.hpp	/^	typedef typename __rebind_va::const_reference 	const_reference;$/;"	t	struct:__gnu_pbds::detail::type_base
const_reference	5/ext/pb_ds/detail/unordered_iterator/const_iterator.hpp	/^  typedef const_reference_ const_reference;$/;"	t	class:const_iterator_
const_reference	5/ext/pb_ds/detail/unordered_iterator/iterator.hpp	/^  typedef const_reference_ const_reference;$/;"	t	class:iterator_
const_reference	5/ext/pb_ds/detail/unordered_iterator/point_const_iterator.hpp	/^  typedef const_reference_ const_reference;$/;"	t	class:point_const_iterator_
const_reference	5/ext/pb_ds/detail/unordered_iterator/point_iterator.hpp	/^  typedef const_reference_ const_reference;$/;"	t	class:point_iterator_
const_reference	5/ext/pb_ds/priority_queue.hpp	/^    typedef typename __rebind_va::const_reference 	const_reference;$/;"	t	class:__gnu_pbds::priority_queue
const_reference	5/ext/pb_ds/tree_policy.hpp	/^    typedef typename base_type::const_reference 	const_reference;$/;"	t	class:__gnu_pbds::tree_order_statistics_node_update
const_reference	5/ext/pb_ds/trie_policy.hpp	/^    typedef typename base_type::const_reference 	const_reference;$/;"	t	class:__gnu_pbds::trie_order_statistics_node_update
const_reference	cpp_src/allocator.h	/^      typedef const _Tp& const_reference;$/;"	t	class:std::allocator
const_reference	cpp_src/basic_string.h	/^      typedef typename _CharT_alloc_type::const_reference   const_reference;$/;"	t	class:std::basic_string
const_reference	cpp_src/stl_bvector.h	/^    typedef bool                                         const_reference;$/;"	t	class:std::vector
const_reference	cpp_src/stl_bvector.h	/^    typedef bool                 const_reference;$/;"	t	struct:std::_Bit_const_iterator
const_reference	cpp_src/stl_deque.h	/^      typedef typename _Tp_alloc_type::const_reference   const_reference;$/;"	t	class:std::deque
const_reference	cpp_src/stl_list.h	/^      typedef typename _Tp_alloc_type::const_reference   const_reference;$/;"	t	class:std::list
const_reference	cpp_src/stl_map.h	/^      typedef typename _Pair_alloc_type::const_reference const_reference;$/;"	t	class:std::map
const_reference	cpp_src/stl_multimap.h	/^      typedef typename _Pair_alloc_type::const_reference const_reference;$/;"	t	class:std::multimap
const_reference	cpp_src/stl_multiset.h	/^      typedef typename _Key_alloc_type::const_reference     const_reference;$/;"	t	class:std::multiset
const_reference	cpp_src/stl_queue.h	/^      typedef typename _Sequence::const_reference           const_reference;$/;"	t	class:std::priority_queue
const_reference	cpp_src/stl_queue.h	/^      typedef typename _Sequence::const_reference           const_reference;$/;"	t	class:std::queue
const_reference	cpp_src/stl_set.h	/^      typedef typename _Key_alloc_type::const_reference     const_reference;$/;"	t	class:std::set
const_reference	cpp_src/stl_stack.h	/^      typedef typename _Sequence::const_reference           const_reference;$/;"	t	class:std::stack
const_reference	cpp_src/stl_tree.h	/^      typedef const value_type& const_reference;$/;"	t	class:std::_Rb_tree
const_reference	cpp_src/stl_vector.h	/^      typedef typename _Tp_alloc_type::const_reference   const_reference;$/;"	t	class:std::vector
const_reference	opencv2/core/cvstd.hpp	/^    typedef const char& const_reference;$/;"	t	class:cv::String
const_reference	opencv2/core/cvstd.hpp	/^    typedef const value_type& const_reference;$/;"	t	class:cv::Allocator
const_reference_	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef typename traits_base::const_reference const_reference_;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
const_reference_	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef typename traits_base::const_reference const_reference_;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
const_reference_	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      typedef typename traits_base::const_reference const_reference_;$/;"	t	class:__gnu_pbds::detail::PB_DS_LU_NAME
const_reverse_iterator	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	/^      typedef typename traits_type::const_reverse_iterator const_reverse_iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_BIN_TREE_NAME
const_reverse_iterator	5/ext/pb_ds/detail/bin_search_tree_/traits.hpp	/^      const_reverse_iterator;$/;"	t	struct:__gnu_pbds::detail::bin_search_tree_traits
const_reverse_iterator	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename traits_type::const_reverse_iterator const_reverse_iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
const_reverse_iterator	5/ext/pb_ds/detail/pat_trie_/traits.hpp	/^      typedef base_type::_CIter<node, leaf, head, inode, false>	 	const_reverse_iterator;$/;"	t	struct:__gnu_pbds::detail::trie_traits
const_reverse_iterator	5/ext/pb_ds/detail/pat_trie_/traits.hpp	/^      typedef base_type::_CIter<node, leaf, head, inode, false>	       	const_reverse_iterator;$/;"	t	struct:__gnu_pbds::detail::trie_traits
const_reverse_iterator	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	/^      typedef typename base_type::const_reverse_iterator const_reverse_iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_RB_TREE_NAME
const_reverse_iterator	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	/^      typedef typename base_type::const_reverse_iterator const_reverse_iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_S_TREE_NAME
const_reverse_iterator	cpp_src/basic_string.h	/^      typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;$/;"	t	class:std::basic_string
const_reverse_iterator	cpp_src/stl_bvector.h	/^    typedef std::reverse_iterator<const_iterator>        const_reverse_iterator;$/;"	t	class:std::vector
const_reverse_iterator	cpp_src/stl_deque.h	/^      typedef std::reverse_iterator<const_iterator>      const_reverse_iterator;$/;"	t	class:std::deque
const_reverse_iterator	cpp_src/stl_list.h	/^      typedef std::reverse_iterator<const_iterator>      const_reverse_iterator;$/;"	t	class:std::list
const_reverse_iterator	cpp_src/stl_map.h	/^      typedef typename _Rep_type::const_reverse_iterator const_reverse_iterator;$/;"	t	class:std::map
const_reverse_iterator	cpp_src/stl_multimap.h	/^      typedef typename _Rep_type::const_reverse_iterator const_reverse_iterator;$/;"	t	class:std::multimap
const_reverse_iterator	cpp_src/stl_multiset.h	/^      typedef typename _Rep_type::const_reverse_iterator    const_reverse_iterator;$/;"	t	class:std::multiset
const_reverse_iterator	cpp_src/stl_set.h	/^      typedef typename _Rep_type::const_reverse_iterator    const_reverse_iterator;$/;"	t	class:std::set
const_reverse_iterator	cpp_src/stl_tree.h	/^      typedef std::reverse_iterator<const_iterator> const_reverse_iterator;$/;"	t	class:std::_Rb_tree
const_reverse_iterator	cpp_src/stl_vector.h	/^      typedef std::reverse_iterator<const_iterator>  const_reverse_iterator;$/;"	t	class:std::vector
constantPtr	opencv2/cudev/ptr2d/constant.hpp	/^__host__ ConstantPtr<T> constantPtr(T value)$/;"	f	namespace:cv::cudev
constantPtr	opencv2/cudev/ptr2d/constant.hpp	/^__host__ constantPtr(T value, int rows, int cols)$/;"	f	namespace:cv::cudev
constant_size_blocks_tag	5/parallel/tags.h	/^  struct constant_size_blocks_tag : public find_tag { };$/;"	s	namespace:__gnu_parallel
construct	opencv2/core/cvstd.hpp	/^    void construct(pointer p, const _Tp& v) { new(static_cast<void*>(p)) _Tp(v); }$/;"	f	class:cv::Allocator
constructor_insert_new_imp	5/ext/pb_ds/detail/cc_hash_table_map_/constructor_destructor_no_store_hash_fn_imps.hpp	/^constructor_insert_new_imp(mapped_const_reference r_val, size_type pos, $/;"	f	class:PB_DS_CLASS_C_DEC
constructor_insert_new_imp	5/ext/pb_ds/detail/cc_hash_table_map_/constructor_destructor_store_hash_fn_imps.hpp	/^constructor_insert_new_imp(const_reference r_val, size_type pos, true_type)$/;"	f	class:PB_DS_CLASS_C_DEC
constructor_insert_new_imp	5/ext/pb_ds/detail/gp_hash_table_map_/constructor_destructor_no_store_hash_fn_imps.hpp	/^constructor_insert_new_imp(mapped_const_reference r_val, size_type pos, $/;"	f	class:PB_DS_CLASS_C_DEC
constructor_insert_new_imp	5/ext/pb_ds/detail/gp_hash_table_map_/constructor_destructor_store_hash_fn_imps.hpp	/^constructor_insert_new_imp(mapped_const_reference r_val, size_type pos, $/;"	f	class:PB_DS_CLASS_C_DEC
container	cpp_src/stl_iterator.h	/^      _Container* container;$/;"	m	class:std::back_insert_iterator
container	cpp_src/stl_iterator.h	/^      _Container* container;$/;"	m	class:std::front_insert_iterator
container	cpp_src/stl_iterator.h	/^      _Container* container;$/;"	m	class:std::insert_iterator
container	opencv2/core/persistence.hpp	/^    const CvFileNode* container;$/;"	m	class:cv::FileNodeIterator
container_base_dispatch	5/ext/pb_ds/detail/container_base_dispatch.hpp	/^    struct container_base_dispatch<Key, Mapped, _Alloc, cc_hash_tag, Policy_Tl>$/;"	s	namespace:__gnu_pbds::detail
container_base_dispatch	5/ext/pb_ds/detail/container_base_dispatch.hpp	/^    struct container_base_dispatch<Key, Mapped, _Alloc, gp_hash_tag, Policy_Tl>$/;"	s	namespace:__gnu_pbds::detail
container_base_dispatch	5/ext/pb_ds/detail/container_base_dispatch.hpp	/^    struct container_base_dispatch<Key, Mapped, _Alloc, list_update_tag,$/;"	s	namespace:__gnu_pbds::detail
container_base_dispatch	5/ext/pb_ds/detail/container_base_dispatch.hpp	/^    struct container_base_dispatch<Key, Mapped, _Alloc, ov_tree_tag, Policy_Tl>$/;"	s	namespace:__gnu_pbds::detail
container_base_dispatch	5/ext/pb_ds/detail/container_base_dispatch.hpp	/^    struct container_base_dispatch<Key, Mapped, _Alloc, rb_tree_tag, Policy_Tl>$/;"	s	namespace:__gnu_pbds::detail
container_base_dispatch	5/ext/pb_ds/detail/container_base_dispatch.hpp	/^    struct container_base_dispatch<Key, null_type, _Alloc, cc_hash_tag,$/;"	s	namespace:__gnu_pbds::detail
container_base_dispatch	5/ext/pb_ds/detail/container_base_dispatch.hpp	/^    struct container_base_dispatch<Key, null_type, _Alloc, gp_hash_tag,$/;"	s	namespace:__gnu_pbds::detail
container_base_dispatch	5/ext/pb_ds/detail/container_base_dispatch.hpp	/^    struct container_base_dispatch<Key, null_type, _Alloc, list_update_tag,$/;"	s	namespace:__gnu_pbds::detail
container_base_dispatch	5/ext/pb_ds/detail/container_base_dispatch.hpp	/^    struct container_base_dispatch<Key, null_type, _Alloc, ov_tree_tag,$/;"	s	namespace:__gnu_pbds::detail
container_base_dispatch	5/ext/pb_ds/detail/container_base_dispatch.hpp	/^    struct container_base_dispatch<Key, null_type, _Alloc, pat_trie_tag,$/;"	s	namespace:__gnu_pbds::detail
container_base_dispatch	5/ext/pb_ds/detail/container_base_dispatch.hpp	/^    struct container_base_dispatch<Key, null_type, _Alloc, rb_tree_tag,$/;"	s	namespace:__gnu_pbds::detail
container_base_dispatch	5/ext/pb_ds/detail/container_base_dispatch.hpp	/^    struct container_base_dispatch<Key, null_type, _Alloc, splay_tree_tag,$/;"	s	namespace:__gnu_pbds::detail
container_base_dispatch	5/ext/pb_ds/detail/container_base_dispatch.hpp	/^  struct container_base_dispatch<Key, Mapped, _Alloc, pat_trie_tag, Policy_Tl>$/;"	s	namespace:__gnu_pbds::detail
container_base_dispatch	5/ext/pb_ds/detail/container_base_dispatch.hpp	/^  struct container_base_dispatch<Key, Mapped, _Alloc, splay_tree_tag,$/;"	s	namespace:__gnu_pbds::detail
container_base_dispatch	5/ext/pb_ds/detail/priority_queue_base_dispatch.hpp	/^      struct container_base_dispatch<_VTp, Cmp_Fn, _Alloc, binary_heap_tag,$/;"	s	namespace:__gnu_pbds::detail
container_base_dispatch	5/ext/pb_ds/detail/priority_queue_base_dispatch.hpp	/^      struct container_base_dispatch<_VTp, Cmp_Fn, _Alloc, binomial_heap_tag,$/;"	s	namespace:__gnu_pbds::detail
container_base_dispatch	5/ext/pb_ds/detail/priority_queue_base_dispatch.hpp	/^      struct container_base_dispatch<_VTp, Cmp_Fn, _Alloc, pairing_heap_tag,$/;"	s	namespace:__gnu_pbds::detail
container_base_dispatch	5/ext/pb_ds/detail/priority_queue_base_dispatch.hpp	/^      struct container_base_dispatch<_VTp, Cmp_Fn, _Alloc, rc_binomial_heap_tag,$/;"	s	namespace:__gnu_pbds::detail
container_base_dispatch	5/ext/pb_ds/detail/priority_queue_base_dispatch.hpp	/^      struct container_base_dispatch<_VTp, Cmp_Fn, _Alloc, thin_heap_tag,$/;"	s	namespace:__gnu_pbds::detail
container_category	5/ext/pb_ds/assoc_container.hpp	/^    typedef cc_hash_tag	       			container_category;$/;"	t	class:__gnu_pbds::cc_hash_table
container_category	5/ext/pb_ds/assoc_container.hpp	/^    typedef gp_hash_tag	       			container_category;$/;"	t	class:__gnu_pbds::gp_hash_table
container_category	5/ext/pb_ds/assoc_container.hpp	/^    typedef list_update_tag	       		container_category;$/;"	t	class:__gnu_pbds::list_update
container_category	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      typedef ov_tree_tag 				 container_category;$/;"	t	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
container_category	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef pat_trie_tag 				container_category;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
container_category	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	/^      typedef rb_tree_tag 				 container_category;$/;"	t	class:__gnu_pbds::detail::PB_DS_RB_TREE_NAME
container_category	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	/^      typedef splay_tree_tag 				 container_category;$/;"	t	class:__gnu_pbds::detail::PB_DS_S_TREE_NAME
container_category	5/ext/pb_ds/priority_queue.hpp	/^    typedef Tag 					container_category;$/;"	t	class:__gnu_pbds::priority_queue
container_category	5/ext/pb_ds/tag_and_trait.hpp	/^    typedef binary_heap_tag 				container_category;$/;"	t	struct:__gnu_pbds::container_traits_base
container_category	5/ext/pb_ds/tag_and_trait.hpp	/^    typedef binomial_heap_tag 				container_category;$/;"	t	struct:__gnu_pbds::container_traits_base
container_category	5/ext/pb_ds/tag_and_trait.hpp	/^    typedef cc_hash_tag 				container_category;$/;"	t	struct:__gnu_pbds::container_traits_base
container_category	5/ext/pb_ds/tag_and_trait.hpp	/^    typedef gp_hash_tag 				container_category;$/;"	t	struct:__gnu_pbds::container_traits_base
container_category	5/ext/pb_ds/tag_and_trait.hpp	/^    typedef list_update_tag 				container_category;$/;"	t	struct:__gnu_pbds::container_traits_base
container_category	5/ext/pb_ds/tag_and_trait.hpp	/^    typedef ov_tree_tag 				container_category;$/;"	t	struct:__gnu_pbds::container_traits_base
container_category	5/ext/pb_ds/tag_and_trait.hpp	/^    typedef pairing_heap_tag 				container_category;$/;"	t	struct:__gnu_pbds::container_traits_base
container_category	5/ext/pb_ds/tag_and_trait.hpp	/^    typedef pat_trie_tag 				container_category;$/;"	t	struct:__gnu_pbds::container_traits_base
container_category	5/ext/pb_ds/tag_and_trait.hpp	/^    typedef rb_tree_tag 				container_category;$/;"	t	struct:__gnu_pbds::container_traits_base
container_category	5/ext/pb_ds/tag_and_trait.hpp	/^    typedef rc_binomial_heap_tag 			container_category;$/;"	t	struct:__gnu_pbds::container_traits_base
container_category	5/ext/pb_ds/tag_and_trait.hpp	/^    typedef splay_tree_tag 				container_category;$/;"	t	struct:__gnu_pbds::container_traits_base
container_category	5/ext/pb_ds/tag_and_trait.hpp	/^    typedef thin_heap_tag 				container_category;$/;"	t	struct:__gnu_pbds::container_traits_base
container_category	5/ext/pb_ds/tag_and_trait.hpp	/^    typedef typename Cntnr::container_category         container_category;$/;"	t	struct:__gnu_pbds::container_traits
container_error	5/ext/pb_ds/exception.hpp	/^    container_error()$/;"	f	struct:__gnu_pbds::container_error
container_error	5/ext/pb_ds/exception.hpp	/^  struct container_error : public std::logic_error$/;"	s	namespace:__gnu_pbds
container_tag	5/ext/pb_ds/tag_and_trait.hpp	/^  struct container_tag$/;"	s	namespace:__gnu_pbds
container_traits	5/ext/pb_ds/tag_and_trait.hpp	/^  struct container_traits$/;"	s	namespace:__gnu_pbds
container_traits_base	5/ext/pb_ds/tag_and_trait.hpp	/^  struct container_traits_base<binary_heap_tag>$/;"	s	namespace:__gnu_pbds
container_traits_base	5/ext/pb_ds/tag_and_trait.hpp	/^  struct container_traits_base<binomial_heap_tag>$/;"	s	namespace:__gnu_pbds
container_traits_base	5/ext/pb_ds/tag_and_trait.hpp	/^  struct container_traits_base<cc_hash_tag>$/;"	s	namespace:__gnu_pbds
container_traits_base	5/ext/pb_ds/tag_and_trait.hpp	/^  struct container_traits_base<gp_hash_tag>$/;"	s	namespace:__gnu_pbds
container_traits_base	5/ext/pb_ds/tag_and_trait.hpp	/^  struct container_traits_base<list_update_tag>$/;"	s	namespace:__gnu_pbds
container_traits_base	5/ext/pb_ds/tag_and_trait.hpp	/^  struct container_traits_base<ov_tree_tag>$/;"	s	namespace:__gnu_pbds
container_traits_base	5/ext/pb_ds/tag_and_trait.hpp	/^  struct container_traits_base<pairing_heap_tag>$/;"	s	namespace:__gnu_pbds
container_traits_base	5/ext/pb_ds/tag_and_trait.hpp	/^  struct container_traits_base<pat_trie_tag>$/;"	s	namespace:__gnu_pbds
container_traits_base	5/ext/pb_ds/tag_and_trait.hpp	/^  struct container_traits_base<rb_tree_tag>$/;"	s	namespace:__gnu_pbds
container_traits_base	5/ext/pb_ds/tag_and_trait.hpp	/^  struct container_traits_base<rc_binomial_heap_tag>$/;"	s	namespace:__gnu_pbds
container_traits_base	5/ext/pb_ds/tag_and_trait.hpp	/^  struct container_traits_base<splay_tree_tag>$/;"	s	namespace:__gnu_pbds
container_traits_base	5/ext/pb_ds/tag_and_trait.hpp	/^  struct container_traits_base<thin_heap_tag>$/;"	s	namespace:__gnu_pbds
container_type	5/ext/pb_ds/tag_and_trait.hpp	/^    typedef Cntnr 				       container_type;$/;"	t	struct:__gnu_pbds::container_traits
container_type	cpp_src/stl_iterator.h	/^      typedef _Container          container_type;$/;"	t	class:std::back_insert_iterator
container_type	cpp_src/stl_iterator.h	/^      typedef _Container          container_type;$/;"	t	class:std::front_insert_iterator
container_type	cpp_src/stl_iterator.h	/^      typedef _Container          container_type;$/;"	t	class:std::insert_iterator
container_type	cpp_src/stl_queue.h	/^      typedef          _Sequence                            container_type;$/;"	t	class:std::priority_queue
container_type	cpp_src/stl_queue.h	/^      typedef          _Sequence                            container_type;$/;"	t	class:std::queue
container_type	cpp_src/stl_stack.h	/^      typedef          _Sequence                            container_type;$/;"	t	class:std::stack
contains	opencv2/core/types.hpp	/^bool Rect_<_Tp>::contains(const Point_<_Tp>& pt) const$/;"	f	class:cv::Rect_
contour	opencv2/imgproc/imgproc_c.h	/^CVAPI(int)  cvCheckContourConvexity( const CvArr* contour );$/;"	v
contour	opencv2/imgproc/types_c.h	/^    CvSeq* contour; \/**<optional component boundary$/;"	m	struct:CvConnectedComp
contour1mask_	opencv2/stitching/detail/seam_finders.hpp	/^    Mat_<uchar> contour1mask_, contour2mask_;$/;"	m	class:cv::detail::DpSeamFinder
contour2mask_	opencv2/stitching/detail/seam_finders.hpp	/^    Mat_<uchar> contour1mask_, contour2mask_;$/;"	m	class:cv::detail::DpSeamFinder
contours_	opencv2/stitching/detail/seam_finders.hpp	/^    std::vector<std::vector<Point> > contours_;$/;"	m	class:cv::detail::DpSeamFinder
controlMatrix	opencv2/video/tracking.hpp	/^    CV_PROP_RW Mat controlMatrix;      \/\/!< control matrix (B) (not used if there is no control)$/;"	m	class:cv::KalmanFilter
control_matrix	opencv2/video/tracking_c.h	/^    CvMat* control_matrix;      \/* control matrix (B)$/;"	m	struct:CvKalman
converged	opencv2/flann/kmeans_index.h	/^        bool& converged;$/;"	m	class:cvflann::KMeansIndex::KMeansDistanceComputer
convertTo	opencv2/core/cuda.inl.hpp	/^void GpuMat::convertTo(OutputArray dst, int rtype) const$/;"	f	class:cv::cuda::GpuMat
convertTo	opencv2/core/cuda.inl.hpp	/^void GpuMat::convertTo(OutputArray dst, int rtype, double alpha, Stream& stream) const$/;"	f	class:cv::cuda::GpuMat
convertTo	opencv2/core/cuda.inl.hpp	/^void GpuMat::convertTo(OutputArray dst, int rtype, double alpha, double beta) const$/;"	f	class:cv::cuda::GpuMat
copy	cpp_src/char_traits.h	/^    copy(char_type* __s1, const char_type* __s2, std::size_t __n)$/;"	f	class:char_traits
copy	cpp_src/stl_algobase.h	/^        copy(_II __first, _II __last, _OI __result)$/;"	f	struct:std::__copy
copy	cpp_src/stl_algobase.h	/^        copy(const _Tp* __first, const _Tp* __last, _Tp* __result)$/;"	f	struct:std::__copy
copy	cpp_src/stl_algobase.h	/^    copy(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std
copy	cpp_src/streambuf_iterator.h	/^    copy(istreambuf_iterator<_CharT> __first,$/;"	f	namespace:std
copy	opencv2/core/cuda/block.hpp	/^        static __device__ __forceinline__ void copy(InIt beg, InIt end, OutIt out)$/;"	f	struct:cv::cuda::device::Block
copy	opencv2/core/cuda/detail/reduce_key_val.hpp	/^            static __device__ void copy(const PointerTuple& svals, const ReferenceTuple& val, unsigned int tid, unsigned int delta)$/;"	f	struct:cv::cuda::device::reduce_key_val_detail::For
copy	opencv2/core/cuda/detail/reduce_key_val.hpp	/^            static __device__ void copy(const PointerTuple&, const ReferenceTuple&, unsigned int, unsigned int)$/;"	f	struct:cv::cuda::device::reduce_key_val_detail::For
copy	opencv2/core/cuda/warp.hpp	/^        static __device__ __forceinline__ OutIt copy(InIt beg, InIt end, OutIt out)$/;"	f	struct:cv::cuda::device::Warp
copy	opencv2/cudev/block/detail/reduce_key_val.hpp	/^        __device__ static void copy(const PointerTuple& svals, const ReferenceTuple& val, uint tid, uint delta)$/;"	f	struct:cv::cudev::block_reduce_key_val_detail::For
copy	opencv2/cudev/block/detail/reduce_key_val.hpp	/^        __device__ static void copy(const PointerTuple&, const ReferenceTuple&, uint, uint)$/;"	f	struct:cv::cudev::block_reduce_key_val_detail::For
copy	opencv2/cudev/grid/detail/copy.hpp	/^        __device__ __forceinline__ static void copy(const SrcPtrTuple&, DstPtrTuple&, const int, const int)$/;"	f	struct:cv::cudev::grid_copy_detail::Unroll
copy	opencv2/cudev/grid/detail/copy.hpp	/^        __device__ static void copy(const SrcPtrTuple& src, DstPtrTuple& dst, const int y, const int x)$/;"	f	struct:cv::cudev::grid_copy_detail::Unroll
copy	opencv2/cudev/grid/detail/copy.hpp	/^    __global__ void copy(const SrcPtr src, GlobPtr<DstType> dst, const MaskPtr mask, const int rows, const int cols)$/;"	f	namespace:cv::cudev::grid_copy_detail
copy	opencv2/cudev/grid/detail/copy.hpp	/^    __host__ void copy(const SrcPtr& src, const GlobPtr<DstType>& dst, const MaskPtr& mask, int rows, int cols, cudaStream_t stream)$/;"	f	namespace:cv::cudev::grid_copy_detail
copy	opencv2/cudev/warp/detail/reduce_key_val.hpp	/^        __device__ __forceinline__ static void copy(const PointerTuple&, const ReferenceTuple&, uint, uint)$/;"	f	struct:cv::cudev::warp_reduce_key_val_detail::For
copy	opencv2/cudev/warp/detail/reduce_key_val.hpp	/^        __device__ static void copy(const PointerTuple& svals, const ReferenceTuple& val, uint tid, uint delta)$/;"	f	struct:cv::cudev::warp_reduce_key_val_detail::For
copy	opencv2/flann/result_set.h	/^    virtual void copy(int* indices, DistanceType* dist, int n_neighbors = -1) const$/;"	f	class:cvflann::UniqueResultSet
copy2D	opencv2/cudalegacy/NCV.hpp	/^    NCVStatus copy2D(NCVMatrix<T> &dst, NcvSize32u roi, cudaStream_t cuStream) const$/;"	f	class:NCVMatrix
copyHppToMat	opencv2/core/ippasync.hpp	/^    inline void copyHppToMat(hppiMatrix* src, Mat& dst, hppAccel accel, int cn)$/;"	f	namespace:cv::hpp
copyOnMap	opencv2/core/mat.inl.hpp	/^inline bool UMatData::copyOnMap() const { return (flags & COPY_ON_MAP) != 0; }$/;"	f	class:cv::UMatData
copyShfl	opencv2/core/cuda/detail/reduce_key_val.hpp	/^            static __device__ void copyShfl(const ReferenceTuple& val, unsigned int delta, int width)$/;"	f	struct:cv::cuda::device::reduce_key_val_detail::For
copyShfl	opencv2/core/cuda/detail/reduce_key_val.hpp	/^            static __device__ void copyShfl(const ReferenceTuple&, unsigned int, int)$/;"	f	struct:cv::cuda::device::reduce_key_val_detail::For
copySolid	opencv2/cudalegacy/NCV.hpp	/^    NCVStatus copySolid(NCVMatrix<T> &dst, cudaStream_t cuStream, size_t howMuch=0) const$/;"	f	class:NCVMatrix
copySolid	opencv2/cudalegacy/NCV.hpp	/^    NCVStatus copySolid(NCVVector<T> &dst, cudaStream_t cuStream, size_t howMuch=0) const$/;"	f	class:NCVVector
copyTo	opencv2/core/core_c.h	/^template<typename _Tp> inline void Seq<_Tp>::copyTo(std::vector<_Tp>& vec, const Range& range) const$/;"	f	class:cv::Seq
copyTo	opencv2/core/cuda.inl.hpp	/^void GpuMat::copyTo(OutputArray dst, InputArray mask) const$/;"	f	class:cv::cuda::GpuMat
copyVals	opencv2/core/cuda/detail/reduce_key_val.hpp	/^        __device__ __forceinline__ void copyVals(const thrust::tuple<VP0, VP1, VP2, VP3, VP4, VP5, VP6, VP7, VP8, VP9>& svals,$/;"	f	namespace:cv::cuda::device::reduce_key_val_detail
copyVals	opencv2/core/cuda/detail/reduce_key_val.hpp	/^        __device__ __forceinline__ void copyVals(volatile V* svals, V& val, unsigned int tid, unsigned int delta)$/;"	f	namespace:cv::cuda::device::reduce_key_val_detail
copyVals	opencv2/cudev/block/detail/reduce_key_val.hpp	/^    __device__ __forceinline__ void copyVals(const tuple<VP0, VP1, VP2, VP3, VP4, VP5, VP6, VP7, VP8, VP9>& svals,$/;"	f	namespace:cv::cudev::block_reduce_key_val_detail
copyVals	opencv2/cudev/block/detail/reduce_key_val.hpp	/^    __device__ __forceinline__ void copyVals(volatile V* svals, V& val, uint tid, uint delta)$/;"	f	namespace:cv::cudev::block_reduce_key_val_detail
copyVals	opencv2/cudev/warp/detail/reduce_key_val.hpp	/^    __device__ __forceinline__ void copyVals(const tuple<VP0, VP1, VP2, VP3, VP4, VP5, VP6, VP7, VP8, VP9>& svals,$/;"	f	namespace:cv::cudev::warp_reduce_key_val_detail
copyVals	opencv2/cudev/warp/detail/reduce_key_val.hpp	/^    __device__ __forceinline__ void copyVals(volatile V* svals, V& val, uint tid, uint delta)$/;"	f	namespace:cv::cudev::warp_reduce_key_val_detail
copyValsShfl	opencv2/core/cuda/detail/reduce_key_val.hpp	/^        __device__ __forceinline__ void copyValsShfl(V& val, unsigned int delta, int width)$/;"	f	namespace:cv::cuda::device::reduce_key_val_detail
copyValsShfl	opencv2/core/cuda/detail/reduce_key_val.hpp	/^        __device__ __forceinline__ void copyValsShfl(const thrust::tuple<VR0, VR1, VR2, VR3, VR4, VR5, VR6, VR7, VR8, VR9>& val,$/;"	f	namespace:cv::cuda::device::reduce_key_val_detail
copy_backward	cpp_src/stl_algobase.h	/^    copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)$/;"	f	namespace:std
copy_from_ordered_range	5/ext/pb_ds/detail/ov_tree_map_/constructors_destructor_fn_imps.hpp	/^copy_from_ordered_range(It first_it, It last_it)$/;"	f	class:PB_DS_CLASS_C_DEC
copy_from_ordered_range	5/ext/pb_ds/detail/ov_tree_map_/constructors_destructor_fn_imps.hpp	/^copy_from_ordered_range(It first_it, It last_it, It other_first_it,$/;"	f	class:PB_DS_CLASS_C_DEC
copy_from_range	5/ext/pb_ds/detail/binary_heap_/constructors_destructor_fn_imps.hpp	/^copy_from_range(It first_it, It last_it)$/;"	f	class:PB_DS_CLASS_C_DEC
copy_from_range	5/ext/pb_ds/detail/binomial_heap_base_/constructors_destructor_fn_imps.hpp	/^copy_from_range(It first_it, It last_it)$/;"	f	class:PB_DS_CLASS_C_DEC
copy_from_range	5/ext/pb_ds/detail/cc_hash_table_map_/constructor_destructor_fn_imps.hpp	/^copy_from_range(It first_it, It last_it)$/;"	f	class:PB_DS_CLASS_C_DEC
copy_from_range	5/ext/pb_ds/detail/gp_hash_table_map_/constructor_destructor_fn_imps.hpp	/^copy_from_range(It first_it, It last_it)$/;"	f	class:PB_DS_CLASS_C_DEC
copy_from_range	5/ext/pb_ds/detail/list_update_map_/constructor_destructor_fn_imps.hpp	/^copy_from_range(It first_it, It last_it)$/;"	f	class:PB_DS_CLASS_C_DEC
copy_from_range	5/ext/pb_ds/detail/ov_tree_map_/constructors_destructor_fn_imps.hpp	/^copy_from_range(It first_it, It last_it)$/;"	f	class:PB_DS_CLASS_C_DEC
copy_from_range	5/ext/pb_ds/detail/pairing_heap_/constructors_destructor_fn_imps.hpp	/^copy_from_range(It first_it, It last_it)$/;"	f	class:PB_DS_CLASS_C_DEC
copy_from_range	5/ext/pb_ds/detail/pat_trie_/constructors_destructor_fn_imps.hpp	/^copy_from_range(It first_it, It last_it)$/;"	f	class:PB_DS_CLASS_C_DEC
copy_from_range	5/ext/pb_ds/detail/rb_tree_map_/constructors_destructor_fn_imps.hpp	/^copy_from_range(It first_it, It last_it)$/;"	f	class:PB_DS_CLASS_C_DEC
copy_from_range	5/ext/pb_ds/detail/splay_tree_/constructors_destructor_fn_imps.hpp	/^copy_from_range(It first_it, It last_it)$/;"	f	class:PB_DS_CLASS_C_DEC
copy_from_range	5/ext/pb_ds/detail/thin_heap_/constructors_destructor_fn_imps.hpp	/^copy_from_range(It first_it, It last_it)$/;"	f	class:PB_DS_CLASS_C_DEC
copy_from_value	opencv2/flann/any.h	/^    virtual void copy_from_value(void const* src, void** dest)$/;"	f	struct:cvflann::anyimpl::big_any_policy
copy_from_value	opencv2/flann/any.h	/^    virtual void copy_from_value(void const* src, void** dest)$/;"	f	struct:cvflann::anyimpl::small_any_policy
copy_tuple	opencv2/cudev/grid/detail/copy.hpp	/^    __global__ void copy_tuple(const SrcPtrTuple src, DstPtrTuple dst, const MaskPtr mask, const int rows, const int cols)$/;"	f	namespace:cv::cudev::grid_copy_detail
copy_tuple	opencv2/cudev/grid/detail/copy.hpp	/^    __host__ void copy_tuple(const SrcPtrTuple& src, const DstPtrTuple& dst, const MaskPtr& mask, int rows, int cols, cudaStream_t stream)$/;"	f	namespace:cv::cudev::grid_copy_detail
copyfmt_event	cpp_src/ios_base.h	/^      copyfmt_event$/;"	e	enum:std::ios_base::event
corners_	opencv2/stitching/detail/seam_finders.hpp	/^        const Point *corners_;$/;"	m	class:cv::detail::DpSeamFinder::ImagePairLess
corners_	opencv2/stitching/detail/seam_finders.hpp	/^    std::vector<Point> corners_;$/;"	m	class:cv::detail::PairwiseSeamFinder
cost	opencv2/calib3d/calib3d_c.h	/^    CvMat* cost;$/;"	m	struct:CvStereoBMState
costFunc_	opencv2/stitching/detail/seam_finders.hpp	/^    CostFunction costFunc_;$/;"	m	class:cv::detail::DpSeamFinder
costFunction	opencv2/stitching/detail/seam_finders.hpp	/^    CostFunction costFunction() const { return costFunc_; }$/;"	f	class:cv::detail::DpSeamFinder
cost_type_	opencv2/stitching/detail/seam_finders.hpp	/^    int cost_type_;$/;"	m	class:cv::detail::GraphCutSeamFinderGpu
count	cpp_src/stl_algo.h	/^    count(_InputIterator __first, _InputIterator __last, const _Tp& __value)$/;"	f	namespace:std
count	cpp_src/stl_map.h	/^      count(const key_type& __x) const$/;"	f	class:std::map
count	cpp_src/stl_multimap.h	/^      count(const key_type& __x) const$/;"	f	class:std::multimap
count	cpp_src/stl_multiset.h	/^      count(const key_type& __x) const$/;"	f	class:std::multiset
count	cpp_src/stl_set.h	/^      count(const key_type& __x) const$/;"	f	class:std::set
count	cpp_src/stl_tree.h	/^    count(const _Key& __k) const$/;"	f	class:std::_Rb_tree
count	opencv2/core/core_c.h	/^    int count; \/**< number of arrays *\/$/;"	m	struct:CvNArrayIterator
count	opencv2/core/types_c.h	/^    int    count;             \/**< Number of elements in the block.           *\/$/;"	m	struct:CvSeqBlock
count	opencv2/flann/heap.h	/^    int count;$/;"	m	class:cvflann::Heap
count	opencv2/flann/kmeans_index.h	/^        int* count;$/;"	m	class:cvflann::KMeansIndex::KMeansDistanceComputer
count	opencv2/flann/result_set.h	/^    int count;$/;"	m	class:cvflann::KNNResultSet
count	opencv2/flann/result_set.h	/^    int count;$/;"	m	class:cvflann::KNNSimpleResultSet
count	opencv2/flann/result_set.h	/^    size_t count;$/;"	m	class:cvflann::RadiusResultSet
count	opencv2/imgproc.hpp	/^    int err, count;$/;"	m	class:cv::LineIterator
count	opencv2/objdetect/objdetect_c.h	/^    int  count;$/;"	m	struct:CvHaarClassifierCascade
count	opencv2/objdetect/objdetect_c.h	/^    int  count;$/;"	m	struct:CvHaarStageClassifier
count	opencv2/objdetect/objdetect_c.h	/^    int count;$/;"	m	struct:CvHaarClassifier
countCorrectMatches	opencv2/flann/index_testing.h	/^inline int countCorrectMatches(int* neighbors, int* groundTruth, int n)$/;"	f	namespace:cvflann
countNonZero_	opencv2/cudev/expr/reduction.hpp	/^countNonZero_(const SrcPtr& src)$/;"	f	namespace:cv::cudev
count_if	cpp_src/stl_algo.h	/^    count_if(_InputIterator __first, _InputIterator __last, _Predicate __pred)$/;"	f	namespace:std
count_minimal_n	5/parallel/settings.h	/^    _SequenceIndex              count_minimal_n;$/;"	m	struct:__gnu_parallel::_Settings
counter	opencv2/core/utility.hpp	/^    int64 counter;$/;"	m	class:cv::TickMeter
counter_	opencv2/flann/random.h	/^    int counter_;$/;"	m	class:cvflann::UniqueRandom
create	opencv2/core/cuda.inl.hpp	/^void GpuMat::create(Size size_, int type_)$/;"	f	class:cv::cuda::GpuMat
create	opencv2/core/cuda.inl.hpp	/^void HostMem::create(Size size_, int type_)$/;"	f	class:cv::cuda::HostMem
create	opencv2/core/mat.inl.hpp	/^void Mat::create(Size _sz, int _type)$/;"	f	class:cv::Mat
create	opencv2/core/mat.inl.hpp	/^void Mat::create(int _rows, int _cols, int _type)$/;"	f	class:cv::Mat
create	opencv2/core/mat.inl.hpp	/^void Mat_<_Tp>::create(Size _sz)$/;"	f	class:cv::Mat_
create	opencv2/core/mat.inl.hpp	/^void Mat_<_Tp>::create(int _dims, const int* _sz)$/;"	f	class:cv::Mat_
create	opencv2/core/mat.inl.hpp	/^void Mat_<_Tp>::create(int _rows, int _cols)$/;"	f	class:cv::Mat_
create	opencv2/core/mat.inl.hpp	/^void SparseMat_<_Tp>::create(int _dims, const int* _sizes)$/;"	f	class:cv::SparseMat_
create	opencv2/core/mat.inl.hpp	/^void UMat::create(Size _sz, int _type, UMatUsageFlags _usageFlags)$/;"	f	class:cv::UMat
create	opencv2/core/mat.inl.hpp	/^void UMat::create(int _rows, int _cols, int _type, UMatUsageFlags _usageFlags)$/;"	f	class:cv::UMat
create	opencv2/core/opengl.hpp	/^void cv::ogl::Buffer::create(Size asize, int atype, Target target, bool autoRelease)$/;"	f	class:cv::ogl::Buffer
create	opencv2/core/opengl.hpp	/^void cv::ogl::Texture2D::create(Size asize, Format aformat, bool autoRelease)$/;"	f	class:cv::ogl::Texture2D
create	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^    __host__ NCVStatus create(Ncv32f leafValue)$/;"	f	struct:HaarClassifierNodeDescriptor32
create	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^    __host__ NCVStatus create(Ncv32u offsetHaarClassifierNode)$/;"	f	struct:HaarClassifierNodeDescriptor32
create	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^    __host__ NCVStatus create(NcvBool bTilted, NcvBool bLeftLeaf, NcvBool bRightLeaf,$/;"	f	struct:HaarFeatureDescriptor32
create	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^__host__ void GpuMat_<T>::create(Size asize)$/;"	f	class:cv::cudev::GpuMat_
create	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^__host__ void GpuMat_<T>::create(int arows, int acols)$/;"	f	class:cv::cudev::GpuMat_
create	opencv2/flann/all_indices.h	/^    static NNIndex<Distance>* create(const Matrix<typename Distance::ElementType>& dataset, const IndexParams& params, const Distance& distance)$/;"	f	struct:cvflann::index_creator
create	opencv2/flann/object_factory.h	/^    ObjectCreator create(UniqueIdType id)$/;"	f	class:cvflann::ObjectFactory
create	opencv2/stitching/detail/util.hpp	/^    void create(int num_vertices) { edges_.assign(num_vertices, std::list<GraphEdge>()); }$/;"	f	class:cv::detail::Graph
create	opencv2/stitching/warpers.hpp	/^    Ptr<detail::RotationWarper> create(float scale) const { return makePtr<detail::AffineWarper>(scale); }$/;"	f	class:cv::AffineWarper
create	opencv2/stitching/warpers.hpp	/^    Ptr<detail::RotationWarper> create(float scale) const { return makePtr<detail::CompressedRectilinearPortraitWarper>(scale, a, b); }$/;"	f	class:cv::CompressedRectilinearPortraitWarper
create	opencv2/stitching/warpers.hpp	/^    Ptr<detail::RotationWarper> create(float scale) const { return makePtr<detail::CompressedRectilinearWarper>(scale, a, b); }$/;"	f	class:cv::CompressedRectilinearWarper
create	opencv2/stitching/warpers.hpp	/^    Ptr<detail::RotationWarper> create(float scale) const { return makePtr<detail::CylindricalWarper>(scale); }$/;"	f	class:cv::CylindricalWarper
create	opencv2/stitching/warpers.hpp	/^    Ptr<detail::RotationWarper> create(float scale) const { return makePtr<detail::CylindricalWarperGpu>(scale); }$/;"	f	class:cv::CylindricalWarperGpu
create	opencv2/stitching/warpers.hpp	/^    Ptr<detail::RotationWarper> create(float scale) const { return makePtr<detail::FisheyeWarper>(scale); }$/;"	f	class:cv::FisheyeWarper
create	opencv2/stitching/warpers.hpp	/^    Ptr<detail::RotationWarper> create(float scale) const { return makePtr<detail::MercatorWarper>(scale); }$/;"	f	class:cv::MercatorWarper
create	opencv2/stitching/warpers.hpp	/^    Ptr<detail::RotationWarper> create(float scale) const { return makePtr<detail::PaniniPortraitWarper>(scale, a, b); }$/;"	f	class:cv::PaniniPortraitWarper
create	opencv2/stitching/warpers.hpp	/^    Ptr<detail::RotationWarper> create(float scale) const { return makePtr<detail::PaniniWarper>(scale, a, b); }$/;"	f	class:cv::PaniniWarper
create	opencv2/stitching/warpers.hpp	/^    Ptr<detail::RotationWarper> create(float scale) const { return makePtr<detail::PlaneWarper>(scale); }$/;"	f	class:cv::PlaneWarper
create	opencv2/stitching/warpers.hpp	/^    Ptr<detail::RotationWarper> create(float scale) const { return makePtr<detail::PlaneWarperGpu>(scale); }$/;"	f	class:cv::PlaneWarperGpu
create	opencv2/stitching/warpers.hpp	/^    Ptr<detail::RotationWarper> create(float scale) const { return makePtr<detail::SphericalWarper>(scale); }$/;"	f	class:cv::SphericalWarper
create	opencv2/stitching/warpers.hpp	/^    Ptr<detail::RotationWarper> create(float scale) const { return makePtr<detail::SphericalWarperGpu>(scale); }$/;"	f	class:cv::SphericalWarperGpu
create	opencv2/stitching/warpers.hpp	/^    Ptr<detail::RotationWarper> create(float scale) const { return makePtr<detail::StereographicWarper>(scale); }$/;"	f	class:cv::StereographicWarper
create	opencv2/stitching/warpers.hpp	/^    Ptr<detail::RotationWarper> create(float scale) const { return makePtr<detail::TransverseMercatorWarper>(scale); }$/;"	f	class:cv::TransverseMercatorWarper
createContinuous	opencv2/core/cuda.inl.hpp	/^GpuMat createContinuous(Size size, int type)$/;"	f	namespace:cv::cuda
createContinuous	opencv2/core/cuda.inl.hpp	/^GpuMat createContinuous(int rows, int cols, int type)$/;"	f	namespace:cv::cuda
createContinuous	opencv2/core/cuda.inl.hpp	/^void createContinuous(Size size, int type, OutputArray arr)$/;"	f	namespace:cv::cuda
createDataInstance	opencv2/core/utility.hpp	/^    virtual void* createDataInstance() const {return new T;}                \/\/ Wrapper to allocate data by template$/;"	f	class:cv::TLSData
createMatHeader	opencv2/core/cuda.inl.hpp	/^Mat HostMem::createMatHeader() const$/;"	f	class:cv::cuda::HostMem
create_index_by_type	opencv2/flann/all_indices.h	/^NNIndex<Distance>* create_index_by_type(const Matrix<typename Distance::ElementType>& dataset, const IndexParams& params, const Distance& distance)$/;"	f	namespace:cvflann
criteria	opencv2/calib3d/calib3d_c.h	/^    CvTermCriteria criteria;$/;"	m	class:CvLevMarq
cross	opencv2/core/mat.inl.hpp	/^Mat_<_Tp> Mat_<_Tp>::cross(const Mat_& m) const$/;"	f	class:cv::Mat_
cross	opencv2/core/matx.hpp	/^Vec<_Tp, cn> Vec<_Tp, cn>::cross(const Vec<_Tp, cn>&) const$/;"	f	class:cv::Vec
cross	opencv2/core/matx.hpp	/^Vec<double, 3> Vec<double, 3>::cross(const Vec<double, 3>& v) const$/;"	f	class:cv::Vec
cross	opencv2/core/matx.hpp	/^Vec<float, 3> Vec<float, 3>::cross(const Vec<float, 3>& v) const$/;"	f	class:cv::Vec
cross	opencv2/core/types.hpp	/^Point3_<_Tp> Point3_<_Tp>::cross(const Point3_<_Tp>& pt) const$/;"	f	class:cv::Point3_
cross	opencv2/core/types.hpp	/^double Point_<_Tp>::cross(const Point_& pt) const$/;"	f	class:cv::Point_
crossCheck	opencv2/features2d.hpp	/^    bool crossCheck;$/;"	m	class:cv::BFMatcher
cshift	cpp_src/valarray_after.h	/^    _Expr<_Clos, _Tp>::cshift(int __n) const$/;"	f	class:std::_Expr
cstr_	opencv2/core/cvstd.hpp	/^    char*  cstr_;$/;"	m	class:cv::String
ctype	cpp_src/locale_classes.h	/^    static const category ctype		= 1L << 0;$/;"	m	class:std::locale
ctype	cpp_src/locale_facets.h	/^      ctype(size_t __refs = 0) : __ctype_abstract_base<_CharT>(__refs) { }$/;"	f	class:std::ctype
ctype	cpp_src/locale_facets.h	/^    class ctype : public __ctype_abstract_base<_CharT>$/;"	c	namespace:std
ctype	cpp_src/locale_facets.h	/^    class ctype<char> : public locale::facet, public ctype_base$/;"	c	namespace:std
ctype	cpp_src/locale_facets.h	/^    class ctype<wchar_t> : public __ctype_abstract_base<wchar_t>$/;"	c	namespace:std
ctype_byname	cpp_src/locale_facets.h	/^    class ctype_byname : public ctype<_CharT>$/;"	c	namespace:std
cuda	opencv2/core/base.hpp	/^namespace cuda$/;"	n	namespace:cv
cuda	opencv2/core/cuda.hpp	/^namespace cv { namespace cuda {$/;"	n	namespace:cv
cuda	opencv2/core/cuda.inl.hpp	/^namespace cv { namespace cuda {$/;"	n	namespace:cv
cuda	opencv2/core/cuda/block.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv
cuda	opencv2/core/cuda/border_interpolate.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv
cuda	opencv2/core/cuda/color.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv
cuda	opencv2/core/cuda/common.hpp	/^namespace cv { namespace cuda {$/;"	n	namespace:cv
cuda	opencv2/core/cuda/common.hpp	/^namespace cv { namespace cuda$/;"	n	namespace:cv
cuda	opencv2/core/cuda/datamov_utils.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv
cuda	opencv2/core/cuda/detail/color_detail.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv
cuda	opencv2/core/cuda/detail/reduce.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv
cuda	opencv2/core/cuda/detail/reduce_key_val.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv
cuda	opencv2/core/cuda/detail/transform_detail.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv
cuda	opencv2/core/cuda/detail/type_traits_detail.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv
cuda	opencv2/core/cuda/detail/vec_distance_detail.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv
cuda	opencv2/core/cuda/dynamic_smem.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv
cuda	opencv2/core/cuda/emulation.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv
cuda	opencv2/core/cuda/filters.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv
cuda	opencv2/core/cuda/funcattrib.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv
cuda	opencv2/core/cuda/functional.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv
cuda	opencv2/core/cuda/limits.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv
cuda	opencv2/core/cuda/reduce.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv
cuda	opencv2/core/cuda/saturate_cast.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv
cuda	opencv2/core/cuda/scan.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv
cuda	opencv2/core/cuda/simd_functions.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv
cuda	opencv2/core/cuda/transform.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv
cuda	opencv2/core/cuda/type_traits.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv
cuda	opencv2/core/cuda/utility.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv
cuda	opencv2/core/cuda/vec_distance.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv
cuda	opencv2/core/cuda/vec_math.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv
cuda	opencv2/core/cuda/vec_traits.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv
cuda	opencv2/core/cuda/warp.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv
cuda	opencv2/core/cuda/warp_reduce.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv
cuda	opencv2/core/cuda/warp_shuffle.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv
cuda	opencv2/core/cuda_stream_accessor.hpp	/^    namespace cuda$/;"	n	namespace:cv
cuda	opencv2/core/cuda_types.hpp	/^    namespace cuda$/;"	n	namespace:cv
cuda	opencv2/core/opengl.hpp	/^namespace cv { namespace cuda {$/;"	n	namespace:cv
cuda	opencv2/core/private.cuda.hpp	/^namespace cv { namespace cuda {$/;"	n	namespace:cv
cuda	opencv2/cudaarithm.hpp	/^namespace cv { namespace cuda {$/;"	n	namespace:cv
cuda	opencv2/cudabgsegm.hpp	/^namespace cv { namespace cuda {$/;"	n	namespace:cv
cuda	opencv2/cudafeatures2d.hpp	/^namespace cv { namespace cuda {$/;"	n	namespace:cv
cuda	opencv2/cudafilters.hpp	/^namespace cv { namespace cuda {$/;"	n	namespace:cv
cuda	opencv2/cudaimgproc.hpp	/^namespace cv { namespace cuda {$/;"	n	namespace:cv
cuda	opencv2/cudalegacy.hpp	/^namespace cv { namespace cuda {$/;"	n	namespace:cv
cuda	opencv2/cudalegacy/NCVPyramid.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv
cuda	opencv2/cudalegacy/private.hpp	/^namespace cv { namespace cuda$/;"	n	namespace:cv
cuda	opencv2/cudaobjdetect.hpp	/^namespace cv { namespace cuda {$/;"	n	namespace:cv
cuda	opencv2/cudaoptflow.hpp	/^namespace cv { namespace cuda {$/;"	n	namespace:cv
cuda	opencv2/cudastereo.hpp	/^namespace cv { namespace cuda {$/;"	n	namespace:cv
cuda	opencv2/cudawarping.hpp	/^namespace cv { namespace cuda {$/;"	n	namespace:cv
cuda	opencv2/photo/cuda.hpp	/^namespace cv { namespace cuda {$/;"	n	namespace:cv
cudaSafeCall	opencv2/core/cuda/common.hpp	74;"	d
cudacodec	opencv2/cudacodec.hpp	/^namespace cv { namespace cudacodec {$/;"	n	namespace:cv
cudev	opencv2/core/base.hpp	/^namespace cudev$/;"	n	namespace:cv
cudev	opencv2/cudev/block/block.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/block/detail/reduce.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/block/detail/reduce_key_val.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/block/dynamic_smem.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/block/reduce.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/block/scan.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/block/vec_distance.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/common.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/expr/binary_func.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/expr/binary_op.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/expr/color.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/expr/deriv.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/expr/expr.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/expr/per_element_func.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/expr/reduction.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/expr/unary_func.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/expr/unary_op.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/expr/warping.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/functional/color_cvt.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/functional/detail/color_cvt.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/functional/functional.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/functional/tuple_adapter.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/grid/copy.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/grid/detail/copy.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/grid/detail/histogram.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/grid/detail/integral.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/grid/detail/minmaxloc.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/grid/detail/pyr_down.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/grid/detail/pyr_up.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/grid/detail/reduce.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/grid/detail/reduce_to_column.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/grid/detail/reduce_to_row.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/grid/detail/split_merge.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/grid/detail/transform.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/grid/detail/transpose.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/grid/histogram.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/grid/integral.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/grid/pyramids.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/grid/reduce.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/grid/reduce_to_vec.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/grid/split_merge.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/grid/transform.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/grid/transpose.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/ptr2d/constant.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/ptr2d/deriv.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/ptr2d/extrapolation.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/ptr2d/glob.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/ptr2d/gpumat.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/ptr2d/interpolation.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/ptr2d/lut.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/ptr2d/mask.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/ptr2d/remap.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/ptr2d/resize.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/ptr2d/texture.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/ptr2d/traits.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/ptr2d/transform.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/ptr2d/warping.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/ptr2d/zip.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/util/atomic.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/util/detail/tuple.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/util/detail/type_traits.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/util/limits.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/util/saturate_cast.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/util/simd_functions.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/util/tuple.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/util/type_traits.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/util/vec_math.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/util/vec_traits.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/warp/detail/reduce.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/warp/detail/reduce_key_val.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/warp/reduce.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/warp/scan.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/warp/shuffle.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cudev	opencv2/cudev/warp/warp.hpp	/^namespace cv { namespace cudev {$/;"	n	namespace:cv
cur	cpp_src/ios_base.h	/^    static const seekdir cur =		_S_cur;$/;"	m	class:std::ios_base
curMask	opencv2/core/cuda/utility.hpp	/^        PtrStepb curMask;$/;"	m	struct:cv::cuda::device::MaskCollection
curPos_	opencv2/videostab/stabilizer.hpp	/^    int curPos_;$/;"	m	class:cv::videostab::StabilizerBase
curStabilizedPos_	opencv2/videostab/stabilizer.hpp	/^    int curStabilizedPos_;$/;"	m	class:cv::videostab::StabilizerBase
curidx	opencv2/core/types_c.h	/^    int curidx;$/;"	m	struct:CvSparseMatIterator
currAllocator	opencv2/core/mat.hpp	/^    const MatAllocator* currAllocator;$/;"	m	struct:cv::UMatData
curr_symbol	cpp_src/locale_facets.h	/^      curr_symbol() const$/;"	f	class:std::moneypunct
current	cpp_src/stl_iterator.h	/^      _Iterator current;$/;"	m	class:std::reverse_iterator
currentSize	opencv2/cudalegacy/NCV.hpp	/^    size_t currentSize;$/;"	m	class:NCVMemNativeAllocator
currentSize	opencv2/cudalegacy/NCV.hpp	/^    size_t currentSize;$/;"	m	class:NCVMemStackAllocator
current_exception	5/bits/nested_exception.h	/^    nested_exception() noexcept : _M_ptr(current_exception()) { }$/;"	f	class:std::nested_exception
cv	opencv2/calib3d.hpp	/^namespace cv$/;"	n
cv	opencv2/core.hpp	/^namespace cv {$/;"	n
cv	opencv2/core/affine.hpp	/^namespace cv$/;"	n
cv	opencv2/core/base.hpp	/^namespace cv$/;"	n
cv	opencv2/core/bufferpool.hpp	/^namespace cv$/;"	n
cv	opencv2/core/core_c.h	/^namespace cv$/;"	n
cv	opencv2/core/cuda.hpp	/^namespace cv { namespace cuda {$/;"	n
cv	opencv2/core/cuda.inl.hpp	/^namespace cv { namespace cuda {$/;"	n
cv	opencv2/core/cuda.inl.hpp	/^namespace cv {$/;"	n
cv	opencv2/core/cuda/block.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n
cv	opencv2/core/cuda/border_interpolate.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n
cv	opencv2/core/cuda/color.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n
cv	opencv2/core/cuda/common.hpp	/^namespace cv { namespace cuda {$/;"	n
cv	opencv2/core/cuda/common.hpp	/^namespace cv { namespace cuda$/;"	n
cv	opencv2/core/cuda/datamov_utils.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n
cv	opencv2/core/cuda/detail/color_detail.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n
cv	opencv2/core/cuda/detail/reduce.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n
cv	opencv2/core/cuda/detail/reduce_key_val.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n
cv	opencv2/core/cuda/detail/transform_detail.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n
cv	opencv2/core/cuda/detail/type_traits_detail.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n
cv	opencv2/core/cuda/detail/vec_distance_detail.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n
cv	opencv2/core/cuda/dynamic_smem.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n
cv	opencv2/core/cuda/emulation.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n
cv	opencv2/core/cuda/filters.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n
cv	opencv2/core/cuda/funcattrib.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n
cv	opencv2/core/cuda/functional.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n
cv	opencv2/core/cuda/limits.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n
cv	opencv2/core/cuda/reduce.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n
cv	opencv2/core/cuda/saturate_cast.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n
cv	opencv2/core/cuda/scan.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n
cv	opencv2/core/cuda/simd_functions.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n
cv	opencv2/core/cuda/transform.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n
cv	opencv2/core/cuda/type_traits.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n
cv	opencv2/core/cuda/utility.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n
cv	opencv2/core/cuda/vec_distance.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n
cv	opencv2/core/cuda/vec_math.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n
cv	opencv2/core/cuda/vec_traits.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n
cv	opencv2/core/cuda/warp.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n
cv	opencv2/core/cuda/warp_reduce.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n
cv	opencv2/core/cuda/warp_shuffle.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n
cv	opencv2/core/cuda_stream_accessor.hpp	/^namespace cv$/;"	n
cv	opencv2/core/cuda_types.hpp	/^namespace cv$/;"	n
cv	opencv2/core/cvstd.hpp	/^namespace cv {$/;"	n
cv	opencv2/core/cvstd.hpp	/^namespace cv$/;"	n
cv	opencv2/core/cvstd.inl.hpp	/^namespace cv$/;"	n
cv	opencv2/core/directx.hpp	/^namespace cv { namespace directx {$/;"	n
cv	opencv2/core/eigen.hpp	/^namespace cv$/;"	n
cv	opencv2/core/hal/hal.hpp	/^namespace cv { namespace hal {$/;"	n
cv	opencv2/core/hal/intrin.hpp	/^namespace cv {$/;"	n
cv	opencv2/core/hal/intrin_cpp.hpp	/^namespace cv$/;"	n
cv	opencv2/core/hal/intrin_neon.hpp	/^namespace cv$/;"	n
cv	opencv2/core/hal/intrin_sse.hpp	/^namespace cv$/;"	n
cv	opencv2/core/ippasync.hpp	/^namespace cv$/;"	n
cv	opencv2/core/mat.hpp	/^namespace cv$/;"	n
cv	opencv2/core/mat.inl.hpp	/^namespace cv$/;"	n
cv	opencv2/core/matx.hpp	/^namespace cv$/;"	n
cv	opencv2/core/ocl.hpp	/^namespace cv { namespace ocl {$/;"	n
cv	opencv2/core/ocl_genbase.hpp	/^namespace cv$/;"	n
cv	opencv2/core/opengl.hpp	/^namespace cv { namespace cuda {$/;"	n
cv	opencv2/core/opengl.hpp	/^namespace cv { namespace ogl {$/;"	n
cv	opencv2/core/operations.hpp	/^namespace cv$/;"	n
cv	opencv2/core/optim.hpp	/^namespace cv$/;"	n
cv	opencv2/core/ovx.hpp	/^namespace cv$/;"	n
cv	opencv2/core/persistence.hpp	/^namespace cv {$/;"	n
cv	opencv2/core/private.cuda.hpp	/^namespace cv { namespace cuda {$/;"	n
cv	opencv2/core/private.hpp	/^namespace cv$/;"	n
cv	opencv2/core/ptr.inl.hpp	/^namespace cv {$/;"	n
cv	opencv2/core/saturate.hpp	/^namespace cv$/;"	n
cv	opencv2/core/traits.hpp	/^namespace cv$/;"	n
cv	opencv2/core/types.hpp	/^namespace cv$/;"	n
cv	opencv2/core/utility.hpp	/^namespace cv$/;"	n
cv	opencv2/core/va_intel.hpp	/^namespace cv { namespace va_intel {$/;"	n
cv	opencv2/core/wimage.hpp	/^namespace cv {$/;"	n
cv	opencv2/cudaarithm.hpp	/^namespace cv { namespace cuda {$/;"	n
cv	opencv2/cudabgsegm.hpp	/^namespace cv { namespace cuda {$/;"	n
cv	opencv2/cudacodec.hpp	/^namespace cv { namespace cudacodec {$/;"	n
cv	opencv2/cudafeatures2d.hpp	/^namespace cv { namespace cuda {$/;"	n
cv	opencv2/cudafilters.hpp	/^namespace cv { namespace cuda {$/;"	n
cv	opencv2/cudaimgproc.hpp	/^namespace cv { namespace cuda {$/;"	n
cv	opencv2/cudalegacy.hpp	/^namespace cv { namespace cuda {$/;"	n
cv	opencv2/cudalegacy/NCVPyramid.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n
cv	opencv2/cudalegacy/private.hpp	/^namespace cv { namespace cuda$/;"	n
cv	opencv2/cudaobjdetect.hpp	/^namespace cv { namespace cuda {$/;"	n
cv	opencv2/cudaoptflow.hpp	/^namespace cv { namespace cuda {$/;"	n
cv	opencv2/cudastereo.hpp	/^namespace cv { namespace cuda {$/;"	n
cv	opencv2/cudawarping.hpp	/^namespace cv { namespace cuda {$/;"	n
cv	opencv2/cudev/block/block.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/block/detail/reduce.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/block/detail/reduce_key_val.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/block/dynamic_smem.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/block/reduce.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/block/scan.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/block/vec_distance.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/common.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/expr/binary_func.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/expr/binary_op.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/expr/color.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/expr/deriv.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/expr/expr.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/expr/per_element_func.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/expr/reduction.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/expr/unary_func.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/expr/unary_op.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/expr/warping.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/functional/color_cvt.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/functional/detail/color_cvt.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/functional/functional.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/functional/tuple_adapter.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/grid/copy.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/grid/detail/copy.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/grid/detail/histogram.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/grid/detail/integral.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/grid/detail/minmaxloc.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/grid/detail/pyr_down.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/grid/detail/pyr_up.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/grid/detail/reduce.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/grid/detail/reduce_to_column.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/grid/detail/reduce_to_row.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/grid/detail/split_merge.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/grid/detail/transform.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/grid/detail/transpose.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/grid/histogram.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/grid/integral.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/grid/pyramids.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/grid/reduce.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/grid/reduce_to_vec.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/grid/split_merge.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/grid/transform.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/grid/transpose.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/ptr2d/constant.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/ptr2d/deriv.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^namespace cv {$/;"	n
cv	opencv2/cudev/ptr2d/extrapolation.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/ptr2d/glob.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/ptr2d/gpumat.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/ptr2d/interpolation.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/ptr2d/lut.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/ptr2d/mask.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/ptr2d/remap.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/ptr2d/resize.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/ptr2d/texture.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/ptr2d/traits.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/ptr2d/transform.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/ptr2d/warping.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/ptr2d/zip.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/util/atomic.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/util/detail/tuple.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/util/detail/type_traits.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/util/limits.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/util/saturate_cast.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/util/simd_functions.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/util/tuple.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/util/type_traits.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/util/vec_math.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/util/vec_traits.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/util/vec_traits.hpp	/^namespace cv {$/;"	n
cv	opencv2/cudev/warp/detail/reduce.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/warp/detail/reduce_key_val.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/warp/reduce.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/warp/scan.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/warp/shuffle.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/cudev/warp/warp.hpp	/^namespace cv { namespace cudev {$/;"	n
cv	opencv2/features2d.hpp	/^namespace cv$/;"	n
cv	opencv2/flann.hpp	/^namespace cv$/;"	n
cv	opencv2/flann/miniflann.hpp	/^namespace cv$/;"	n
cv	opencv2/highgui.hpp	/^namespace cv$/;"	n
cv	opencv2/imgcodecs.hpp	/^namespace cv$/;"	n
cv	opencv2/imgproc.hpp	/^namespace cv$/;"	n
cv	opencv2/imgproc/detail/distortion_model.hpp	/^namespace cv { namespace detail {$/;"	n
cv	opencv2/imgproc/hal/hal.hpp	/^namespace cv { namespace hal {$/;"	n
cv	opencv2/ml.hpp	/^namespace cv$/;"	n
cv	opencv2/objdetect.hpp	/^namespace cv$/;"	n
cv	opencv2/objdetect/detection_based_tracker.hpp	/^namespace cv$/;"	n
cv	opencv2/photo.hpp	/^namespace cv$/;"	n
cv	opencv2/photo/cuda.hpp	/^namespace cv { namespace cuda {$/;"	n
cv	opencv2/shape/emdL1.hpp	/^namespace cv$/;"	n
cv	opencv2/shape/hist_cost.hpp	/^namespace cv$/;"	n
cv	opencv2/shape/shape_distance.hpp	/^namespace cv$/;"	n
cv	opencv2/shape/shape_transformer.hpp	/^namespace cv$/;"	n
cv	opencv2/stitching.hpp	/^namespace cv {$/;"	n
cv	opencv2/stitching/detail/autocalib.hpp	/^namespace cv {$/;"	n
cv	opencv2/stitching/detail/blenders.hpp	/^namespace cv {$/;"	n
cv	opencv2/stitching/detail/camera.hpp	/^namespace cv {$/;"	n
cv	opencv2/stitching/detail/exposure_compensate.hpp	/^namespace cv {$/;"	n
cv	opencv2/stitching/detail/matchers.hpp	/^namespace cv {$/;"	n
cv	opencv2/stitching/detail/motion_estimators.hpp	/^namespace cv {$/;"	n
cv	opencv2/stitching/detail/seam_finders.hpp	/^namespace cv {$/;"	n
cv	opencv2/stitching/detail/timelapsers.hpp	/^namespace cv {$/;"	n
cv	opencv2/stitching/detail/util.hpp	/^namespace cv {$/;"	n
cv	opencv2/stitching/detail/util_inl.hpp	/^namespace cv {$/;"	n
cv	opencv2/stitching/detail/warpers.hpp	/^namespace cv {$/;"	n
cv	opencv2/stitching/detail/warpers_inl.hpp	/^namespace cv {$/;"	n
cv	opencv2/stitching/warpers.hpp	/^namespace cv {$/;"	n
cv	opencv2/superres.hpp	/^namespace cv$/;"	n
cv	opencv2/superres/optical_flow.hpp	/^namespace cv$/;"	n
cv	opencv2/video/background_segm.hpp	/^namespace cv$/;"	n
cv	opencv2/video/tracking.hpp	/^namespace cv$/;"	n
cv	opencv2/videoio.hpp	/^namespace cv$/;"	n
cv	opencv2/videostab/deblurring.hpp	/^namespace cv$/;"	n
cv	opencv2/videostab/fast_marching.hpp	/^namespace cv$/;"	n
cv	opencv2/videostab/fast_marching_inl.hpp	/^namespace cv$/;"	n
cv	opencv2/videostab/frame_source.hpp	/^namespace cv$/;"	n
cv	opencv2/videostab/global_motion.hpp	/^namespace cv$/;"	n
cv	opencv2/videostab/inpainting.hpp	/^namespace cv$/;"	n
cv	opencv2/videostab/log.hpp	/^namespace cv$/;"	n
cv	opencv2/videostab/motion_core.hpp	/^namespace cv$/;"	n
cv	opencv2/videostab/motion_stabilizing.hpp	/^namespace cv$/;"	n
cv	opencv2/videostab/optical_flow.hpp	/^namespace cv$/;"	n
cv	opencv2/videostab/outlier_rejection.hpp	/^namespace cv$/;"	n
cv	opencv2/videostab/ring_buffer.hpp	/^namespace cv$/;"	n
cv	opencv2/videostab/stabilizer.hpp	/^namespace cv$/;"	n
cv	opencv2/videostab/wobble_suppression.hpp	/^namespace cv$/;"	n
cv2eigen	opencv2/core/eigen.hpp	/^void cv2eigen( const Mat& src,$/;"	f	namespace:cv
cv2eigen	opencv2/core/eigen.hpp	/^void cv2eigen( const Matx<_Tp, 1, _cols>& src,$/;"	f	namespace:cv
cv2eigen	opencv2/core/eigen.hpp	/^void cv2eigen( const Matx<_Tp, _rows, 1>& src,$/;"	f	namespace:cv
cv2eigen	opencv2/core/eigen.hpp	/^void cv2eigen( const Matx<_Tp, _rows, _cols>& src,$/;"	f	namespace:cv
cvAXPY	opencv2/core/core_c.h	1087;"	d
cvAbs	opencv2/core/core_c.h	1176;"	d
cvAddSearchPath	opencv2/highgui/highgui_c.h	228;"	d
cvAlign	opencv2/core/private.hpp	/^static inline int cvAlign( int size, int align )$/;"	f
cvAlignPtr	opencv2/core/private.hpp	/^static inline void* cvAlignPtr( const void* ptr, int align = 32 )$/;"	f
cvAttrList	opencv2/core/types_c.h	/^CV_INLINE CvAttrList cvAttrList( const char** attr CV_DEFAULT(NULL),$/;"	f
cvCalcBackProject	opencv2/imgproc/imgproc_c.h	784;"	d
cvCalcBackProjectPatch	opencv2/imgproc/imgproc_c.h	810;"	d
cvCalcHist	opencv2/imgproc/imgproc_c.h	/^CV_INLINE  void  cvCalcHist( IplImage** image, CvHistogram* hist,$/;"	f
cvCaptureFromAVI	opencv2/videoio/videoio_c.h	576;"	d
cvCaptureFromCAM	opencv2/videoio/videoio_c.h	574;"	d
cvCaptureFromFile	opencv2/videoio/videoio_c.h	575;"	d
cvCeil	opencv2/core/fast_math.hpp	/^CV_INLINE int cvCeil( double value )$/;"	f
cvCeil	opencv2/core/fast_math.hpp	/^CV_INLINE int cvCeil( float value )$/;"	f
cvCeil	opencv2/core/fast_math.hpp	/^CV_INLINE int cvCeil( int value )$/;"	f
cvCheckArray	opencv2/core/core_c.h	1223;"	d
cvCloneSeq	opencv2/core/core_c.h	/^CV_INLINE CvSeq* cvCloneSeq( const CvSeq* seq, CvMemStorage* storage CV_DEFAULT(NULL))$/;"	f
cvContourPerimeter	opencv2/imgproc/imgproc_c.h	/^CV_INLINE double cvContourPerimeter( const void* contour )$/;"	f
cvConvert	opencv2/core/core_c.h	1023;"	d
cvCreateAVIWriter	opencv2/videoio/videoio_c.h	577;"	d
cvCvtScale	opencv2/core/core_c.h	1021;"	d
cvCvtScaleAbs	opencv2/core/core_c.h	1034;"	d
cvDecRefData	opencv2/core/core_c.h	/^CV_INLINE  void  cvDecRefData( CvArr* arr )$/;"	f
cvDrawCircle	opencv2/imgproc/imgproc_c.h	1070;"	d
cvDrawEllipse	opencv2/imgproc/imgproc_c.h	1071;"	d
cvDrawLine	opencv2/imgproc/imgproc_c.h	1069;"	d
cvDrawPolyLine	opencv2/imgproc/imgproc_c.h	1072;"	d
cvDrawRect	opencv2/imgproc/imgproc_c.h	1068;"	d
cvEllipseBox	opencv2/imgproc/imgproc_c.h	/^CV_INLINE  void  cvEllipseBox( CvArr* img, CvBox2D box, CvScalar color,$/;"	f
cvFFT	opencv2/core/core_c.h	1524;"	d
cvFloor	opencv2/core/fast_math.hpp	/^CV_INLINE int cvFloor( double value )$/;"	f
cvFloor	opencv2/core/fast_math.hpp	/^CV_INLINE int cvFloor( float value )$/;"	f
cvFloor	opencv2/core/fast_math.hpp	/^CV_INLINE int cvFloor( int value )$/;"	f
cvFont	opencv2/imgproc/imgproc_c.h	/^CV_INLINE CvFont cvFont( double scale, int thickness CV_DEFAULT(1) )$/;"	f
cvFree	opencv2/core/core_c.h	89;"	d
cvFuncName	opencv2/core/core_c.h	2709;"	d
cvGetCol	opencv2/core/core_c.h	/^CV_INLINE  CvMat*  cvGetCol( const CvArr* arr, CvMat* submat, int col )$/;"	f
cvGetGraphVtx	opencv2/core/core_c.h	1828;"	d
cvGetMatSize	opencv2/core/private.hpp	/^static inline cv::Size cvGetMatSize( const CvMat* mat )$/;"	f
cvGetNextSparseNode	opencv2/core/core_c.h	/^CV_INLINE CvSparseNode* cvGetNextSparseNode( CvSparseMatIterator* mat_iterator )$/;"	f
cvGetRow	opencv2/core/core_c.h	/^CV_INLINE  CvMat*  cvGetRow( const CvArr* arr, CvMat* submat, int row )$/;"	f
cvGetSetElem	opencv2/core/core_c.h	/^CV_INLINE CvSetElem* cvGetSetElem( const CvSet* set_header, int idx )$/;"	f
cvGetSubArr	opencv2/core/core_c.h	358;"	d
cvGraphEdgeIdx	opencv2/core/core_c.h	1834;"	d
cvGraphFindEdge	opencv2/core/core_c.h	1815;"	d
cvGraphFindEdgeByPtr	opencv2/core/core_c.h	1816;"	d
cvGraphGetEdgeCount	opencv2/core/core_c.h	1837;"	d
cvGraphGetVtxCount	opencv2/core/core_c.h	1836;"	d
cvGraphVtxIdx	opencv2/core/core_c.h	1831;"	d
cvIncRefData	opencv2/core/core_c.h	/^CV_INLINE  int  cvIncRefData( CvArr* arr )$/;"	f
cvInv	opencv2/core/core_c.h	1351;"	d
cvInvSqrt	opencv2/core/types_c.h	197;"	d
cvIplDepth	opencv2/core/types_c.h	/^CV_INLINE int cvIplDepth( int type )$/;"	f
cvIsInf	opencv2/core/fast_math.hpp	/^CV_INLINE int cvIsInf( double value )$/;"	f
cvIsInf	opencv2/core/fast_math.hpp	/^CV_INLINE int cvIsInf( float value )$/;"	f
cvIsNaN	opencv2/core/fast_math.hpp	/^CV_INLINE int cvIsNaN( double value )$/;"	f
cvIsNaN	opencv2/core/fast_math.hpp	/^CV_INLINE int cvIsNaN( float value )$/;"	f
cvKalmanUpdateByMeasurement	opencv2/video/tracking_c.h	223;"	d
cvKalmanUpdateByTime	opencv2/video/tracking_c.h	222;"	d
cvMahalonobis	opencv2/core/core_c.h	1427;"	d
cvMat	opencv2/core/types_c.h	/^CV_INLINE CvMat cvMat( int rows, int cols, int type, void* data CV_DEFAULT(NULL))$/;"	f
cvMatMul	opencv2/core/core_c.h	1284;"	d
cvMatMulAdd	opencv2/core/core_c.h	1283;"	d
cvMatMulAddEx	opencv2/core/core_c.h	1294;"	d
cvMatMulAddS	opencv2/core/core_c.h	1301;"	d
cvMirror	opencv2/core/core_c.h	1324;"	d
cvPoint	opencv2/core/types_c.h	/^CV_INLINE  CvPoint  cvPoint( int x, int y )$/;"	f
cvPoint2D32f	opencv2/core/types_c.h	/^CV_INLINE  CvPoint2D32f  cvPoint2D32f( double x, double y )$/;"	f
cvPoint2D64f	opencv2/core/types_c.h	/^CV_INLINE  CvPoint2D64f  cvPoint2D64f( double x, double y )$/;"	f
cvPoint3D32f	opencv2/core/types_c.h	/^CV_INLINE  CvPoint3D32f  cvPoint3D32f( double x, double y, double z )$/;"	f
cvPoint3D64f	opencv2/core/types_c.h	/^CV_INLINE  CvPoint3D64f  cvPoint3D64f( double x, double y, double z )$/;"	f
cvPointFrom32f	opencv2/core/types_c.h	/^CV_INLINE  CvPoint  cvPointFrom32f( CvPoint2D32f point )$/;"	f
cvPointTo32f	opencv2/core/types_c.h	/^CV_INLINE  CvPoint2D32f  cvPointTo32f( CvPoint point )$/;"	f
cvROIToRect	opencv2/core/types_c.h	/^CV_INLINE  CvRect  cvROIToRect( IplROI roi )$/;"	f
cvRandInt	opencv2/core/types_c.h	/^CV_INLINE unsigned cvRandInt( CvRNG* rng )$/;"	f
cvRandReal	opencv2/core/types_c.h	/^CV_INLINE double cvRandReal( CvRNG* rng )$/;"	f
cvReadByName	opencv2/core/core_c.h	/^CV_INLINE void* cvReadByName( CvFileStorage* fs, const CvFileNode* map,$/;"	f
cvReadInt	opencv2/core/core_c.h	/^CV_INLINE int cvReadInt( const CvFileNode* node, int default_value CV_DEFAULT(0) )$/;"	f
cvReadIntByName	opencv2/core/core_c.h	/^CV_INLINE int cvReadIntByName( const CvFileStorage* fs, const CvFileNode* map,$/;"	f
cvReadReal	opencv2/core/core_c.h	/^CV_INLINE double cvReadReal( const CvFileNode* node, double default_value CV_DEFAULT(0.) )$/;"	f
cvReadRealByName	opencv2/core/core_c.h	/^CV_INLINE double cvReadRealByName( const CvFileStorage* fs, const CvFileNode* map,$/;"	f
cvReadString	opencv2/core/core_c.h	/^CV_INLINE const char* cvReadString( const CvFileNode* node,$/;"	f
cvReadStringByName	opencv2/core/core_c.h	/^CV_INLINE const char* cvReadStringByName( const CvFileStorage* fs, const CvFileNode* map,$/;"	f
cvRealScalar	opencv2/core/types_c.h	/^CV_INLINE  CvScalar  cvRealScalar( double val0 )$/;"	f
cvRect	opencv2/core/types_c.h	/^CV_INLINE  CvRect  cvRect( int x, int y, int width, int height )$/;"	f
cvRectToROI	opencv2/core/types_c.h	/^CV_INLINE  IplROI  cvRectToROI( CvRect rect, int coi )$/;"	f
cvReleaseMatND	opencv2/core/core_c.h	/^CV_INLINE  void  cvReleaseMatND( CvMatND** mat )$/;"	f
cvReshapeND	opencv2/core/core_c.h	836;"	d
cvRound	opencv2/core/fast_math.hpp	/^CV_INLINE int cvRound( int value )$/;"	f
cvRound	opencv2/core/fast_math.hpp	/^CV_INLINE int cvRound(float value)$/;"	f
cvRound	opencv2/core/fast_math.hpp	/^cvRound( double value )$/;"	f
cvScalar	opencv2/core/types_c.h	/^CV_INLINE  CvScalar  cvScalar( double val0, double val1 CV_DEFAULT(0),$/;"	f
cvScalarAll	opencv2/core/types_c.h	/^CV_INLINE  CvScalar  cvScalarAll( double val0123 )$/;"	f
cvScale	opencv2/core/core_c.h	1022;"	d
cvSetNew	opencv2/core/core_c.h	/^CV_INLINE  CvSetElem* cvSetNew( CvSet* set_header )$/;"	f
cvSetPostprocessFuncWin32	opencv2/highgui/highgui_c.h	247;"	d
cvSetPreprocessFuncWin32	opencv2/highgui/highgui_c.h	246;"	d
cvSetRemoveByPtr	opencv2/core/core_c.h	/^CV_INLINE  void cvSetRemoveByPtr( CvSet* set_header, void* elem )$/;"	f
cvSize	opencv2/core/types_c.h	/^CV_INLINE  CvSize  cvSize( int width, int height )$/;"	f
cvSize2D32f	opencv2/core/types_c.h	/^CV_INLINE  CvSize2D32f  cvSize2D32f( double width, double height )$/;"	f
cvSlice	opencv2/core/types_c.h	/^CV_INLINE  CvSlice  cvSlice( int start, int end )$/;"	f
cvSqrt	opencv2/core/types_c.h	198;"	d
cvSubS	opencv2/core/core_c.h	/^CV_INLINE  void  cvSubS( const CvArr* src, CvScalar value, CvArr* dst,$/;"	f
cvT	opencv2/core/core_c.h	1314;"	d
cvTermCriteria	opencv2/core/types_c.h	/^CV_INLINE  CvTermCriteria  cvTermCriteria( int type, int max_iter, double epsilon )$/;"	f
cvWriteToAVI	opencv2/videoio/videoio_c.h	578;"	d
cvZero	opencv2/core/core_c.h	980;"	d
cv_abs	opencv2/core/base.hpp	/^inline int cv_abs(schar x) { return std::abs(x); }$/;"	f	namespace:cv
cv_abs	opencv2/core/base.hpp	/^inline int cv_abs(short x) { return std::abs(x); }$/;"	f	namespace:cv
cv_abs	opencv2/core/base.hpp	/^inline int cv_abs(uchar x) { return x; }$/;"	f	namespace:cv
cv_abs	opencv2/core/base.hpp	/^inline int cv_abs(ushort x) { return x; }$/;"	f	namespace:cv
cv_abs	opencv2/core/base.hpp	/^template<typename _Tp> inline _Tp cv_abs(_Tp x) { return std::abs(x); }$/;"	f	namespace:cv
cv_vrecp_f32	opencv2/core/neon_utils.hpp	/^inline float32x2_t cv_vrecp_f32(float32x2_t val)$/;"	f
cv_vrecpq_f32	opencv2/core/neon_utils.hpp	/^inline float32x4_t cv_vrecpq_f32(float32x4_t val)$/;"	f
cv_vrnd_s32_f32	opencv2/core/neon_utils.hpp	/^inline int32x2_t cv_vrnd_s32_f32(float32x2_t v)$/;"	f
cv_vrnd_u32_f32	opencv2/core/neon_utils.hpp	/^inline uint32x2_t cv_vrnd_u32_f32(float32x2_t v)$/;"	f
cv_vrndq_s32_f32	opencv2/core/neon_utils.hpp	/^inline int32x4_t cv_vrndq_s32_f32(float32x4_t v)$/;"	f
cv_vrndq_u32_f32	opencv2/core/neon_utils.hpp	/^inline uint32x4_t cv_vrndq_u32_f32(float32x4_t v)$/;"	f
cv_vrsqrt_f32	opencv2/core/neon_utils.hpp	/^inline float32x2_t cv_vrsqrt_f32(float32x2_t val)$/;"	f
cv_vrsqrtq_f32	opencv2/core/neon_utils.hpp	/^inline float32x4_t cv_vrsqrtq_f32(float32x4_t val)$/;"	f
cv_vsqrt_f32	opencv2/core/neon_utils.hpp	/^inline float32x2_t cv_vsqrt_f32(float32x2_t val)$/;"	f
cv_vsqrtq_f32	opencv2/core/neon_utils.hpp	/^inline float32x4_t cv_vsqrtq_f32(float32x4_t val)$/;"	f
cvarrToMatND	opencv2/core/core_c.h	/^static inline Mat cvarrToMatND(const CvArr* arr, bool copyData=false, int coiMode=0)$/;"	f	namespace:cv
cvflann	opencv2/flann.hpp	/^namespace cvflann$/;"	n
cvflann	opencv2/flann/all_indices.h	/^namespace cvflann$/;"	n
cvflann	opencv2/flann/allocator.h	/^namespace cvflann$/;"	n
cvflann	opencv2/flann/any.h	/^namespace cvflann$/;"	n
cvflann	opencv2/flann/autotuned_index.h	/^namespace cvflann$/;"	n
cvflann	opencv2/flann/composite_index.h	/^namespace cvflann$/;"	n
cvflann	opencv2/flann/defines.h	/^namespace cvflann {$/;"	n
cvflann	opencv2/flann/dist.h	/^namespace cvflann$/;"	n
cvflann	opencv2/flann/dummy.h	/^namespace cvflann$/;"	n
cvflann	opencv2/flann/dynamic_bitset.h	/^namespace cvflann {$/;"	n
cvflann	opencv2/flann/flann_base.hpp	/^namespace cvflann$/;"	n
cvflann	opencv2/flann/general.h	/^namespace cvflann$/;"	n
cvflann	opencv2/flann/ground_truth.h	/^namespace cvflann$/;"	n
cvflann	opencv2/flann/hdf5.h	/^namespace cvflann$/;"	n
cvflann	opencv2/flann/heap.h	/^namespace cvflann$/;"	n
cvflann	opencv2/flann/hierarchical_clustering_index.h	/^namespace cvflann$/;"	n
cvflann	opencv2/flann/index_testing.h	/^namespace cvflann$/;"	n
cvflann	opencv2/flann/kdtree_index.h	/^namespace cvflann$/;"	n
cvflann	opencv2/flann/kdtree_single_index.h	/^namespace cvflann$/;"	n
cvflann	opencv2/flann/kmeans_index.h	/^namespace cvflann$/;"	n
cvflann	opencv2/flann/linear_index.h	/^namespace cvflann$/;"	n
cvflann	opencv2/flann/logger.h	/^namespace cvflann$/;"	n
cvflann	opencv2/flann/lsh_index.h	/^namespace cvflann$/;"	n
cvflann	opencv2/flann/lsh_table.h	/^namespace cvflann$/;"	n
cvflann	opencv2/flann/matrix.h	/^namespace cvflann$/;"	n
cvflann	opencv2/flann/nn_index.h	/^namespace cvflann$/;"	n
cvflann	opencv2/flann/object_factory.h	/^namespace cvflann$/;"	n
cvflann	opencv2/flann/params.h	/^namespace cvflann$/;"	n
cvflann	opencv2/flann/random.h	/^namespace cvflann$/;"	n
cvflann	opencv2/flann/result_set.h	/^namespace cvflann$/;"	n
cvflann	opencv2/flann/sampling.h	/^namespace cvflann$/;"	n
cvflann	opencv2/flann/saving.h	/^namespace cvflann$/;"	n
cvflann	opencv2/flann/simplex_downhill.h	/^namespace cvflann$/;"	n
cvflann	opencv2/flann/timer.h	/^namespace cvflann$/;"	n
cvmGet	opencv2/core/types_c.h	/^CV_INLINE  double  cvmGet( const CvMat* mat, int row, int col )$/;"	f
cvmSet	opencv2/core/types_c.h	/^CV_INLINE  void  cvmSet( CvMat* mat, int row, int col, double value )$/;"	f
cvt	opencv2/core/cuda/detail/color_detail.hpp	/^            static __device__ __forceinline__ uchar cvt(uint t)$/;"	f	struct:cv::cuda::device::color_detail::RGB5x52GrayConverter
cvt	opencv2/core/cuda/detail/color_detail.hpp	/^            static __device__ __forceinline__ ushort cvt(const uchar3& src)$/;"	f	struct:cv::cuda::device::color_detail::RGB2RGB5x5Converter
cvt	opencv2/core/cuda/detail/color_detail.hpp	/^            static __device__ __forceinline__ ushort cvt(uint src)$/;"	f	struct:cv::cuda::device::color_detail::RGB2RGB5x5Converter
cvt	opencv2/core/cuda/detail/color_detail.hpp	/^            static __device__ __forceinline__ ushort cvt(uint t)$/;"	f	struct:cv::cuda::device::color_detail::Gray2RGB5x5Converter
cvt	opencv2/core/cuda/detail/color_detail.hpp	/^            static __device__ __forceinline__ void cvt(uint src, uchar3& dst)$/;"	f	struct:cv::cuda::device::color_detail::RGB5x52RGBConverter
cvt	opencv2/core/cuda/detail/color_detail.hpp	/^            static __device__ __forceinline__ void cvt(uint src, uint& dst)$/;"	f	struct:cv::cuda::device::color_detail::RGB5x52RGBConverter
cvt_	opencv2/cudev/expr/per_element_func.hpp	/^cvt_(const SrcPtr& src)$/;"	f	namespace:cv::cudev
cvvAddSearchPath	opencv2/highgui/highgui_c.h	235;"	d
cvvConvertImage	opencv2/imgcodecs/imgcodecs_c.h	140;"	d
cvvCreateTrackbar	opencv2/highgui/highgui_c.h	234;"	d
cvvDestroyWindow	opencv2/highgui/highgui_c.h	233;"	d
cvvInitSystem	opencv2/highgui/highgui_c.h	229;"	d
cvvLoadImage	opencv2/imgcodecs/imgcodecs_c.h	138;"	d
cvvNamedWindow	opencv2/highgui/highgui_c.h	230;"	d
cvvResizeWindow	opencv2/highgui/highgui_c.h	232;"	d
cvvSaveImage	opencv2/imgcodecs/imgcodecs_c.h	139;"	d
cvvShowImage	opencv2/highgui/highgui_c.h	231;"	d
cvvWaitKey	opencv2/highgui/highgui_c.h	236;"	d
cvvWaitKeyEx	opencv2/highgui/highgui_c.h	237;"	d
cyrillic	opencv2/highgui.hpp	/^    const int*  cyrillic;$/;"	m	struct:cv::QtFont
cyrillic	opencv2/imgproc/imgproc_c.h	/^    const int*  cyrillic;$/;"	m	struct:CvFont
d_dst_	opencv2/stitching/detail/warpers.hpp	/^    cuda::GpuMat d_xmap_, d_ymap_, d_src_, d_dst_;$/;"	m	class:cv::detail::CylindricalWarperGpu
d_dst_	opencv2/stitching/detail/warpers.hpp	/^    cuda::GpuMat d_xmap_, d_ymap_, d_src_, d_dst_;$/;"	m	class:cv::detail::PlaneWarperGpu
d_dst_	opencv2/stitching/detail/warpers.hpp	/^    cuda::GpuMat d_xmap_, d_ymap_, d_src_, d_dst_;$/;"	m	class:cv::detail::SphericalWarperGpu
d_src_	opencv2/stitching/detail/warpers.hpp	/^    cuda::GpuMat d_xmap_, d_ymap_, d_src_, d_dst_;$/;"	m	class:cv::detail::CylindricalWarperGpu
d_src_	opencv2/stitching/detail/warpers.hpp	/^    cuda::GpuMat d_xmap_, d_ymap_, d_src_, d_dst_;$/;"	m	class:cv::detail::PlaneWarperGpu
d_src_	opencv2/stitching/detail/warpers.hpp	/^    cuda::GpuMat d_xmap_, d_ymap_, d_src_, d_dst_;$/;"	m	class:cv::detail::SphericalWarperGpu
d_xmap_	opencv2/stitching/detail/warpers.hpp	/^    cuda::GpuMat d_xmap_, d_ymap_, d_src_, d_dst_;$/;"	m	class:cv::detail::CylindricalWarperGpu
d_xmap_	opencv2/stitching/detail/warpers.hpp	/^    cuda::GpuMat d_xmap_, d_ymap_, d_src_, d_dst_;$/;"	m	class:cv::detail::PlaneWarperGpu
d_xmap_	opencv2/stitching/detail/warpers.hpp	/^    cuda::GpuMat d_xmap_, d_ymap_, d_src_, d_dst_;$/;"	m	class:cv::detail::SphericalWarperGpu
d_ymap_	opencv2/stitching/detail/warpers.hpp	/^    cuda::GpuMat d_xmap_, d_ymap_, d_src_, d_dst_;$/;"	m	class:cv::detail::CylindricalWarperGpu
d_ymap_	opencv2/stitching/detail/warpers.hpp	/^    cuda::GpuMat d_xmap_, d_ymap_, d_src_, d_dst_;$/;"	m	class:cv::detail::PlaneWarperGpu
d_ymap_	opencv2/stitching/detail/warpers.hpp	/^    cuda::GpuMat d_xmap_, d_ymap_, d_src_, d_dst_;$/;"	m	class:cv::detail::SphericalWarperGpu
data	cpp_src/basic_string.h	/^      data() const$/;"	f	class:std::basic_string
data	cpp_src/stl_bvector.h	/^    data() { }$/;"	f	class:std::vector
data	cpp_src/stl_vector.h	/^      data() const$/;"	f	class:std::vector
data	cpp_src/stl_vector.h	/^      data()$/;"	f	class:std::vector
data	opencv2/core/cuda.hpp	/^    uchar* data;$/;"	m	class:cv::cuda::GpuMat
data	opencv2/core/cuda.hpp	/^    uchar* data;$/;"	m	class:cv::cuda::HostMem
data	opencv2/core/cuda_types.hpp	/^            T* data;$/;"	m	struct:cv::cuda::DevPtr
data	opencv2/core/mat.hpp	/^    uchar* data;$/;"	m	class:cv::Mat
data	opencv2/core/mat.hpp	/^    uchar* data;$/;"	m	struct:cv::UMatData
data	opencv2/core/types_c.h	/^    schar* data;              \/**< Pointer to the first element of the block. *\/$/;"	m	struct:CvSeqBlock
data	opencv2/core/types_c.h	/^    } data;$/;"	m	struct:CvFileNode	typeref:union:CvFileNode::__anon330
data	opencv2/core/types_c.h	/^    } data;$/;"	m	struct:CvMat	typeref:union:CvMat::__anon325
data	opencv2/core/types_c.h	/^    } data;$/;"	m	struct:CvMatND	typeref:union:CvMatND::__anon328
data	opencv2/cudev/ptr2d/glob.hpp	/^    T* data;$/;"	m	struct:cv::cudev::GlobPtr
data	opencv2/flann/matrix.h	/^    T* data;$/;"	m	class:cvflann::Matrix
data	opencv2/flann/matrix.h	/^    void* data;$/;"	m	class:cvflann::UntypedMatrix
dataOrder	opencv2/core/types_c.h	/^    int  dataOrder;         \/**< 0 - interleaved color channels, 1 - separate color channels.$/;"	m	struct:_IplImage
data_	opencv2/flann/kdtree_single_index.h	/^    Matrix<ElementType> data_;$/;"	m	class:cvflann::KDTreeSingleIndex
data_type	opencv2/flann/saving.h	/^    flann_datatype_t data_type;$/;"	m	struct:cvflann::IndexHeader
dataend	opencv2/core/cuda.hpp	/^    const uchar* dataend;$/;"	m	class:cv::cuda::GpuMat
dataend	opencv2/core/cuda.hpp	/^    const uchar* dataend;$/;"	m	class:cv::cuda::HostMem
dataend	opencv2/core/mat.hpp	/^    const uchar* dataend;$/;"	m	class:cv::Mat
datalimit	opencv2/core/mat.hpp	/^    const uchar* datalimit;$/;"	m	class:cv::Mat
dataset	opencv2/flann/hierarchical_clustering_index.h	/^    const Matrix<ElementType> dataset;$/;"	m	class:cvflann::HierarchicalClusteringIndex
dataset	opencv2/flann/kmeans_index.h	/^        const Matrix<ElementType>& dataset;$/;"	m	class:cvflann::KMeansIndex::KMeansDistanceComputer
dataset_	opencv2/flann/autotuned_index.h	/^    const Matrix<ElementType> dataset_;$/;"	m	class:cvflann::AutotunedIndex
dataset_	opencv2/flann/kdtree_index.h	/^    const Matrix<ElementType> dataset_;$/;"	m	class:cvflann::KDTreeIndex
dataset_	opencv2/flann/kdtree_single_index.h	/^    const Matrix<ElementType> dataset_;$/;"	m	class:cvflann::KDTreeSingleIndex
dataset_	opencv2/flann/kmeans_index.h	/^    const Matrix<ElementType> dataset_;$/;"	m	class:cvflann::KMeansIndex
dataset_	opencv2/flann/linear_index.h	/^    const Matrix<ElementType> dataset_;$/;"	m	class:cvflann::LinearIndex
dataset_	opencv2/flann/lsh_index.h	/^    Matrix<ElementType> dataset_;$/;"	m	class:cvflann::LshIndex
datastart	opencv2/core/cuda.hpp	/^    uchar* datastart;$/;"	m	class:cv::cuda::GpuMat
datastart	opencv2/core/cuda.hpp	/^    uchar* datastart;$/;"	m	class:cv::cuda::HostMem
datastart	opencv2/core/mat.hpp	/^    const uchar* datastart;$/;"	m	class:cv::Mat
date_order	cpp_src/locale_facets.h	/^      date_order()  const$/;"	f	class:std::time_get
dateorder	cpp_src/locale_facets.h	/^    enum dateorder { no_order, dmy, mdy, ymd, ydm };$/;"	g	class:std::time_base
db	opencv2/core/types_c.h	/^        double* db;$/;"	m	union:CvMat::__anon325
db	opencv2/core/types_c.h	/^        double* db;$/;"	m	union:CvMatND::__anon328
dcenters	opencv2/flann/kmeans_index.h	/^        const Matrix<double>& dcenters;$/;"	m	class:cvflann::KMeansIndex::KMeansDistanceComputer
ddot	opencv2/core/matx.hpp	/^double Matx<_Tp, m, n>::ddot(const Matx<_Tp, m, n>& M) const$/;"	f	class:cv::Matx
ddot	opencv2/core/types.hpp	/^double Point3_<_Tp>::ddot(const Point3_& pt) const$/;"	f	class:cv::Point3_
ddot	opencv2/core/types.hpp	/^double Point_<_Tp>::ddot(const Point_& pt) const$/;"	f	class:cv::Point_
deallocate	opencv2/core/cvstd.hpp	/^    void deallocate(pointer p, size_type) { fastFree(p); }$/;"	f	class:cv::Allocator
deallocate	opencv2/core/utility.hpp	/^AutoBuffer<_Tp, fixed_size>::deallocate()$/;"	f	class:cv::AutoBuffer
deallocate_all	5/ext/pb_ds/detail/cc_hash_table_map_/constructor_destructor_fn_imps.hpp	/^deallocate_all()$/;"	f	class:PB_DS_CLASS_C_DEC
deallocate_all	5/ext/pb_ds/detail/gp_hash_table_map_/constructor_destructor_fn_imps.hpp	/^deallocate_all()$/;"	f	class:PB_DS_CLASS_C_DEC
deallocate_all	5/ext/pb_ds/detail/list_update_map_/constructor_destructor_fn_imps.hpp	/^deallocate_all()$/;"	f	class:PB_DS_CLASS_C_DEC
deallocate_links_in_list	5/ext/pb_ds/detail/cc_hash_table_map_/entry_list_fn_imps.hpp	/^deallocate_links_in_list(entry_pointer p_e)$/;"	f	class:PB_DS_CLASS_C_DEC
deblur	opencv2/videostab/deblurring.hpp	/^    virtual void deblur(int \/*idx*\/, Mat &\/*frame*\/) {}$/;"	f	class:cv::videostab::NullDeblurer
deblurer_	opencv2/videostab/stabilizer.hpp	/^    Ptr<DeblurerBase> deblurer_;$/;"	m	class:cv::videostab::StabilizerBase
deblurrer	opencv2/videostab/stabilizer.hpp	/^    Ptr<DeblurerBase> deblurrer() const { return deblurer_; }$/;"	f	class:cv::videostab::StabilizerBase
debug_base	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	/^      typedef PB_DS_DEBUG_MAP_BASE_C_DEC 		debug_base;$/;"	t	class:__gnu_pbds::detail::PB_DS_BIN_TREE_NAME
debug_base	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef PB_DS_DEBUG_MAP_BASE_C_DEC 	debug_base;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
debug_base	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef PB_DS_DEBUG_MAP_BASE_C_DEC 	debug_base;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
debug_base	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      typedef PB_DS_DEBUG_MAP_BASE_C_DEC debug_base;$/;"	t	class:__gnu_pbds::detail::PB_DS_LU_NAME
debug_base	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      typedef PB_DS_DEBUG_MAP_BASE_C_DEC 		debug_base;$/;"	t	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
debug_base	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef PB_DS_DEBUG_MAP_BASE_C_DEC 		debug_base;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
debug_base	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	/^      typedef base_type debug_base;$/;"	t	class:__gnu_pbds::detail::PB_DS_S_TREE_NAME
debug_map_base	5/ext/pb_ds/detail/debug_map_base.hpp	/^    class debug_map_base$/;"	c	namespace:__gnu_pbds::detail
debug_map_base	5/ext/pb_ds/detail/debug_map_base.hpp	/^    debug_map_base()$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
debug_map_base	5/ext/pb_ds/detail/debug_map_base.hpp	/^    debug_map_base(const PB_DS_CLASS_C_DEC& other)$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
dec	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	/^      dec(false_type)$/;"	f	class:__gnu_pbds::detail::bin_search_tree_const_it_
dec	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	/^      dec(true_type)$/;"	f	class:__gnu_pbds::detail::bin_search_tree_const_it_
dec	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      dec(false_type)$/;"	f	class:__gnu_pbds::detail::pat_trie_base::_CIter
dec	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      dec(true_type)$/;"	f	class:__gnu_pbds::detail::pat_trie_base::_CIter
dec	cpp_src/ios_base.h	/^    static const fmtflags dec =         _S_dec;$/;"	m	class:std::ios_base
dec	cpp_src/ios_base.h	/^  dec(ios_base& __base)$/;"	f	namespace:std
decRef	opencv2/core/ptr.inl.hpp	/^    void decRef()$/;"	f	struct:cv::detail::PtrOwner
decimal_point	cpp_src/locale_facets.h	/^      decimal_point() const$/;"	f	class:std::moneypunct
decimal_point	cpp_src/locale_facets.h	/^      decimal_point() const$/;"	f	class:std::numpunct
default2dMotion	opencv2/videostab/motion_core.hpp	/^    static RansacParams default2dMotion(MotionModel model)$/;"	f	struct:cv::videostab::RansacParams
defaultAVCaptureDevicePosition	opencv2/videoio/cap_ios.h	/^@property (nonatomic, assign) AVCaptureDevicePosition defaultAVCaptureDevicePosition;$/;"	v
defaultAVCaptureSessionPreset	opencv2/videoio/cap_ios.h	/^@property (nonatomic, strong) NSString *const defaultAVCaptureSessionPreset;$/;"	v
defaultAVCaptureVideoOrientation	opencv2/videoio/cap_ios.h	/^@property (nonatomic, assign) AVCaptureVideoOrientation defaultAVCaptureVideoOrientation;$/;"	v
defaultDir	opencv2/ml.hpp	/^        int defaultDir; \/\/!< Default direction where to go (-1: left or +1: right). It helps in the$/;"	m	class:cv::ml::DTrees::Node
defaultFPS	opencv2/videoio/cap_ios.h	/^@property (nonatomic, assign) int defaultFPS;$/;"	v
default_comb_hash_fn	5/ext/pb_ds/detail/standard_policies.hpp	/^    struct default_comb_hash_fn$/;"	s	namespace:__gnu_pbds::detail
default_eq_fn	5/ext/pb_ds/detail/standard_policies.hpp	/^    struct default_eq_fn$/;"	s	namespace:__gnu_pbds::detail
default_fn	5/ext/pb_ds/detail/standard_policies.hpp	/^      typedef direct_mask_range_hashing<size_type> 		default_fn;$/;"	t	struct:__gnu_pbds::detail::default_probe_fn
default_fn	5/ext/pb_ds/detail/standard_policies.hpp	/^      typedef direct_mask_range_hashing<size_type> 		default_fn;$/;"	t	struct:__gnu_pbds::detail::default_resize_policy
default_func_addr	opencv2/core/types_c.h	/^    void* default_func_addr;$/;"	m	struct:CvPluginFuncInfo
default_hash_fn	5/ext/pb_ds/detail/standard_policies.hpp	/^    struct default_hash_fn$/;"	s	namespace:__gnu_pbds::detail
default_parallel_tag	5/parallel/tags.h	/^    default_parallel_tag() { }$/;"	f	struct:__gnu_parallel::default_parallel_tag
default_parallel_tag	5/parallel/tags.h	/^    default_parallel_tag(_ThreadIndex __num_threads)$/;"	f	struct:__gnu_parallel::default_parallel_tag
default_parallel_tag	5/parallel/tags.h	/^  struct default_parallel_tag : public parallel_tag$/;"	s	namespace:__gnu_parallel
default_probe_fn	5/ext/pb_ds/detail/standard_policies.hpp	/^    struct default_probe_fn$/;"	s	namespace:__gnu_pbds::detail
default_resize_policy	5/ext/pb_ds/detail/standard_policies.hpp	/^    struct default_resize_policy$/;"	s	namespace:__gnu_pbds::detail
default_store_hash	5/ext/pb_ds/detail/standard_policies.hpp	/^	default_store_hash = false$/;"	e	enum:__gnu_pbds::detail::__anon48
default_trie_access_traits	5/ext/pb_ds/detail/standard_policies.hpp	/^      struct default_trie_access_traits<__dtrie_string>$/;"	s	namespace:__gnu_pbds::detail
default_update_policy	5/ext/pb_ds/detail/standard_policies.hpp	/^    struct default_update_policy$/;"	s	namespace:__gnu_pbds::detail
degree	5/ext/pb_ds/detail/left_child_next_sibling_heap_/debug_fn_imps.hpp	/^degree(node_const_pointer p_nd)$/;"	f	class:PB_DS_CLASS_C_DEC
delegate	opencv2/videoio/cap_ios.h	/^@property (nonatomic, weak) id<CvPhotoCameraDelegate> delegate;$/;"	v
delegate	opencv2/videoio/cap_ios.h	/^@property (nonatomic, weak) id<CvVideoCameraDelegate> delegate;$/;"	v
deleteDataInstance	opencv2/core/utility.hpp	/^    virtual void  deleteDataInstance(void* pData) const {delete (T*)pData;} \/\/ Wrapper to release data by template$/;"	f	class:cv::TLSData
deleteSelf	opencv2/core/ptr.inl.hpp	/^    void deleteSelf()$/;"	f	struct:cv::detail::PtrOwnerImpl
deleter	opencv2/core/ptr.inl.hpp	/^    D deleter;$/;"	m	struct:cv::detail::PtrOwnerImpl
delta	opencv2/core/hal/intrin.hpp	/^    enum { delta = 0, shift = 0 };$/;"	e	enum:cv::V_TypeTraits::__anon149
delta	opencv2/core/hal/intrin.hpp	/^    enum { delta = 128, shift = 8 };$/;"	e	enum:cv::V_TypeTraits::__anon150
delta	opencv2/core/hal/intrin.hpp	/^    enum { delta = 128, shift = 8 };$/;"	e	enum:cv::V_TypeTraits::__anon151
delta	opencv2/core/hal/intrin.hpp	/^    enum { delta = 128, shift = 8 };$/;"	e	enum:cv::V_TypeTraits::__anon153
delta	opencv2/core/hal/intrin.hpp	/^    enum { delta = 32768, shift = 16 };$/;"	e	enum:cv::V_TypeTraits::__anon152
delta	opencv2/cudalegacy.hpp	/^    float delta;   \/\/!< Affects color and color co-occurrence quantization, typically set to 2.$/;"	m	struct:cv::cuda::FGDParams
delta_index	opencv2/core/persistence.hpp	/^      int          delta_index;\/* = seq->first->start_index   *\/$/;"	m	struct:cv::FileNodeIterator::SeqReader
deltas	opencv2/imgproc/types_c.h	/^    schar     deltas[8][2];$/;"	m	struct:CvChainPtReader
depth	opencv2/core/affine.hpp	/^               depth        = DataType<channel_type>::depth,$/;"	e	enum:cv::DataType::__anon316
depth	opencv2/core/core_c.h	/^template<typename _Tp> inline int Seq<_Tp>::depth() const$/;"	f	class:cv::Seq
depth	opencv2/core/cuda.inl.hpp	/^int GpuMat::depth() const$/;"	f	class:cv::cuda::GpuMat
depth	opencv2/core/cuda.inl.hpp	/^int HostMem::depth() const$/;"	f	class:cv::cuda::HostMem
depth	opencv2/core/cvstd.inl.hpp	/^           depth        = DataType<channel_type>::depth,$/;"	e	enum:cv::DataType::__anon301
depth	opencv2/core/mat.inl.hpp	/^int Mat::depth() const$/;"	f	class:cv::Mat
depth	opencv2/core/mat.inl.hpp	/^int Mat_<_Tp>::depth() const$/;"	f	class:cv::Mat_
depth	opencv2/core/mat.inl.hpp	/^int SparseMat::depth() const$/;"	f	class:cv::SparseMat
depth	opencv2/core/mat.inl.hpp	/^int SparseMat_<_Tp>::depth() const$/;"	f	class:cv::SparseMat_
depth	opencv2/core/mat.inl.hpp	/^int UMat::depth() const$/;"	f	class:cv::UMat
depth	opencv2/core/matx.hpp	/^           depth        = DataType<channel_type>::depth,$/;"	e	enum:cv::DataType::__anon121
depth	opencv2/core/matx.hpp	/^           depth        = DataType<channel_type>::depth,$/;"	e	enum:cv::DataType::__anon123
depth	opencv2/core/matx.hpp	/^    enum { depth    = DataType<_Tp>::depth,$/;"	e	enum:cv::Matx::__anon120
depth	opencv2/core/matx.hpp	/^    enum { depth    = Matx<_Tp, cn, 1>::depth,$/;"	e	enum:cv::Vec::__anon122
depth	opencv2/core/opengl.hpp	/^int cv::ogl::Buffer::depth() const$/;"	f	class:cv::ogl::Buffer
depth	opencv2/core/traits.hpp	/^           depth        = -1,$/;"	e	enum:cv::DataType::__anon282
depth	opencv2/core/traits.hpp	/^           depth        = CV_16S,$/;"	e	enum:cv::DataType::__anon288
depth	opencv2/core/traits.hpp	/^           depth        = CV_16U,$/;"	e	enum:cv::DataType::__anon287
depth	opencv2/core/traits.hpp	/^           depth        = CV_32F,$/;"	e	enum:cv::DataType::__anon290
depth	opencv2/core/traits.hpp	/^           depth        = CV_32S,$/;"	e	enum:cv::DataType::__anon289
depth	opencv2/core/traits.hpp	/^           depth        = CV_64F,$/;"	e	enum:cv::DataType::__anon291
depth	opencv2/core/traits.hpp	/^           depth        = CV_8S,$/;"	e	enum:cv::DataType::__anon285
depth	opencv2/core/traits.hpp	/^           depth        = CV_8S,$/;"	e	enum:cv::DataType::__anon286
depth	opencv2/core/traits.hpp	/^           depth        = CV_8U,$/;"	e	enum:cv::DataType::__anon283
depth	opencv2/core/traits.hpp	/^           depth        = CV_8U,$/;"	e	enum:cv::DataType::__anon284
depth	opencv2/core/traits.hpp	/^    enum { depth = CV_16S };$/;"	e	enum:cv::TypeDepth::__anon297
depth	opencv2/core/traits.hpp	/^    enum { depth = CV_16U };$/;"	e	enum:cv::TypeDepth::__anon296
depth	opencv2/core/traits.hpp	/^    enum { depth = CV_32F };$/;"	e	enum:cv::TypeDepth::__anon299
depth	opencv2/core/traits.hpp	/^    enum { depth = CV_32S };$/;"	e	enum:cv::TypeDepth::__anon298
depth	opencv2/core/traits.hpp	/^    enum { depth = CV_64F };$/;"	e	enum:cv::TypeDepth::__anon300
depth	opencv2/core/traits.hpp	/^    enum { depth = CV_8S };$/;"	e	enum:cv::TypeDepth::__anon295
depth	opencv2/core/traits.hpp	/^    enum { depth = CV_8U };$/;"	e	enum:cv::TypeDepth::__anon294
depth	opencv2/core/traits.hpp	/^    enum { depth = CV_USRTYPE1 };$/;"	e	enum:cv::TypeDepth::__anon293
depth	opencv2/core/types.hpp	/^           depth        = DataType<channel_type>::depth,$/;"	e	enum:cv::DataType::__anon302
depth	opencv2/core/types.hpp	/^           depth        = DataType<channel_type>::depth,$/;"	e	enum:cv::DataType::__anon303
depth	opencv2/core/types.hpp	/^           depth        = DataType<channel_type>::depth,$/;"	e	enum:cv::DataType::__anon304
depth	opencv2/core/types.hpp	/^           depth        = DataType<channel_type>::depth,$/;"	e	enum:cv::DataType::__anon305
depth	opencv2/core/types.hpp	/^           depth        = DataType<channel_type>::depth,$/;"	e	enum:cv::DataType::__anon306
depth	opencv2/core/types.hpp	/^           depth        = DataType<channel_type>::depth,$/;"	e	enum:cv::DataType::__anon307
depth	opencv2/core/types.hpp	/^           depth        = DataType<channel_type>::depth,$/;"	e	enum:cv::DataType::__anon308
depth	opencv2/core/types.hpp	/^           depth        = DataType<channel_type>::depth,$/;"	e	enum:cv::DataType::__anon309
depth	opencv2/core/types.hpp	/^           depth        = DataType<channel_type>::depth,$/;"	e	enum:cv::DataType::__anon310
depth	opencv2/core/types.hpp	/^           depth        = DataType<channel_type>::depth,$/;"	e	enum:cv::DataType::__anon311
depth	opencv2/core/types.hpp	/^           depth        = DataType<channel_type>::depth,$/;"	e	enum:cv::DataType::__anon312
depth	opencv2/core/types_c.h	/^    int  depth;             \/**< Pixel depth in bits: IPL_DEPTH_8U, IPL_DEPTH_8S, IPL_DEPTH_16S,$/;"	m	struct:_IplImage
depth	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^__host__ int GpuMat_<T>::depth() const$/;"	f	class:cv::cudev::GpuMat_
depth	opencv2/cudev/util/vec_traits.hpp	/^           depth        = CV_32S,$/;"	e	enum:cv::DataType::__anon475
depth	opencv2/cudev/util/vec_traits.hpp	/^           depth        = DataType<channel_type>::depth,$/;"	e	enum:cv::DataType::__anon476
depth	opencv2/cudev/util/vec_traits.hpp	/^           depth        = DataType<channel_type>::depth,$/;"	e	enum:cv::DataType::__anon477
depth	opencv2/cudev/util/vec_traits.hpp	/^           depth        = DataType<channel_type>::depth,$/;"	e	enum:cv::DataType::__anon478
depth	opencv2/cudev/util/vec_traits.hpp	/^           depth        = DataType<channel_type>::depth,$/;"	e	enum:cv::DataType::__anon479
depth	opencv2/imgproc/types_c.h	/^    float depth; \/**< distance between the farthest point and the convex hull *\/$/;"	m	struct:CvConvexityDefect
depth_point	opencv2/imgproc/types_c.h	/^    CvPoint* depth_point; \/**< the farthest from the convex hull point within the defect *\/$/;"	m	struct:CvConvexityDefect
deque	cpp_src/stl_deque.h	/^        deque(_InputIterator __first, _InputIterator __last,$/;"	f	class:std::deque
deque	cpp_src/stl_deque.h	/^      deque(const allocator_type& __a = allocator_type())$/;"	f	class:std::deque
deque	cpp_src/stl_deque.h	/^      deque(const deque& __x)$/;"	f	class:std::deque
deque	cpp_src/stl_deque.h	/^      deque(size_type __n, const value_type& __value = value_type(),$/;"	f	class:std::deque
deque	cpp_src/stl_deque.h	/^    class deque : protected _Deque_base<_Tp, _Alloc>$/;"	c	namespace:std
derivAperture	opencv2/objdetect.hpp	/^    CV_PROP int derivAperture;$/;"	m	struct:cv::HOGDescriptor
derivXPtr	opencv2/cudev/ptr2d/deriv.hpp	/^__host__ DerivXPtrSz<typename PtrTraits<SrcPtr>::ptr_type> derivXPtr(const SrcPtr& src)$/;"	f	namespace:cv::cudev
derivX_	opencv2/cudev/expr/deriv.hpp	/^derivX_(const SrcPtr& src)$/;"	f	namespace:cv::cudev
derivYPtr	opencv2/cudev/ptr2d/deriv.hpp	/^__host__ DerivYPtrSz<typename PtrTraits<SrcPtr>::ptr_type> derivYPtr(const SrcPtr& src)$/;"	f	namespace:cv::cudev
derivY_	opencv2/cudev/expr/deriv.hpp	/^derivY_(const SrcPtr& src)$/;"	f	namespace:cv::cudev
desc	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^    Ncv32u desc;$/;"	m	struct:HaarFeatureDescriptor32
descriptors	opencv2/features2d.hpp	/^    std::vector<Mat> descriptors;$/;"	m	class:cv::BOWTrainer
descriptors	opencv2/stitching/detail/matchers.hpp	/^    UMat descriptors;$/;"	m	struct:cv::detail::ImageFeatures
descriptors_	opencv2/stitching/detail/matchers.hpp	/^    cuda::GpuMat descriptors_;$/;"	m	class:cv::detail::SurfFeaturesFinderGpu
destroy	opencv2/core/cvstd.hpp	/^    void destroy(pointer p) { p->~_Tp(); }$/;"	f	class:cv::Allocator
detail	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/bin_search_tree_/traits.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/binary_heap_/const_iterator.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/binary_heap_/entry_cmp.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/binary_heap_/entry_pred.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/binary_heap_/point_const_iterator.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/binary_heap_/resize_policy.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/binomial_heap_/binomial_heap_.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/branch_policy/branch_policy.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/branch_policy/null_node_metadata.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/branch_policy/traits.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/cc_hash_table_map_/cond_key_dtor_entry_dealtor.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/cond_dealtor.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/container_base_dispatch.hpp	/^namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/debug_map_base.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/eq_fn/eq_by_less.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/eq_fn/hash_eq_fn.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/hash_fn/mask_based_range_hashing.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/hash_fn/mod_based_range_hashing.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/hash_fn/probe_fn_base.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/left_child_next_sibling_heap_/const_iterator.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/left_child_next_sibling_heap_/node.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/left_child_next_sibling_heap_/point_const_iterator.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/list_update_map_/entry_metadata_base.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/list_update_policy/lu_counter_metadata.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/ov_tree_map_/traits.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/pat_trie_/synth_access_traits.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/pat_trie_/traits.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/priority_queue_base_dispatch.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/rb_tree_map_/node.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/rb_tree_map_/traits.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/rc_binomial_heap_/rc.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_size_base.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/resize_policy/hash_prime_size_policy_imp.hpp	/^namespace detail$/;"	n
detail	5/ext/pb_ds/detail/splay_tree_/node.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/splay_tree_/traits.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/standard_policies.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/tree_policy/node_metadata_selector.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/tree_trace_base.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/trie_policy/node_metadata_selector.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/trie_policy/trie_policy_base.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/type_utils.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/detail/types_traits.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	5/ext/pb_ds/tag_and_trait.hpp	/^  namespace detail$/;"	n	namespace:__gnu_pbds
detail	opencv2/core/cvstd.hpp	/^namespace detail$/;"	n	namespace:cv
detail	opencv2/core/ptr.inl.hpp	/^namespace detail$/;"	n	namespace:cv
detail	opencv2/imgproc/detail/distortion_model.hpp	/^namespace cv { namespace detail {$/;"	n	namespace:cv
detail	opencv2/stitching/detail/autocalib.hpp	/^namespace detail {$/;"	n	namespace:cv
detail	opencv2/stitching/detail/blenders.hpp	/^namespace detail {$/;"	n	namespace:cv
detail	opencv2/stitching/detail/camera.hpp	/^namespace detail {$/;"	n	namespace:cv
detail	opencv2/stitching/detail/exposure_compensate.hpp	/^namespace detail {$/;"	n	namespace:cv
detail	opencv2/stitching/detail/matchers.hpp	/^namespace detail {$/;"	n	namespace:cv
detail	opencv2/stitching/detail/motion_estimators.hpp	/^namespace detail {$/;"	n	namespace:cv
detail	opencv2/stitching/detail/seam_finders.hpp	/^namespace detail {$/;"	n	namespace:cv
detail	opencv2/stitching/detail/timelapsers.hpp	/^namespace detail {$/;"	n	namespace:cv
detail	opencv2/stitching/detail/util.hpp	/^namespace detail {$/;"	n	namespace:cv
detail	opencv2/stitching/detail/util_inl.hpp	/^namespace detail {$/;"	n	namespace:cv
detail	opencv2/stitching/detail/warpers.hpp	/^namespace detail {$/;"	n	namespace:cv
detail	opencv2/stitching/detail/warpers_inl.hpp	/^namespace detail {$/;"	n	namespace:cv
detectResultRoi	opencv2/stitching/detail/warpers.hpp	/^    void detectResultRoi(Size src_size, Point &dst_tl, Point &dst_br)$/;"	f	class:cv::detail::CylindricalPortraitWarper
detectResultRoi	opencv2/stitching/detail/warpers.hpp	/^    void detectResultRoi(Size src_size, Point &dst_tl, Point &dst_br)$/;"	f	class:cv::detail::CylindricalWarper
detectResultRoi	opencv2/stitching/detail/warpers.hpp	/^    void detectResultRoi(Size src_size, Point &dst_tl, Point &dst_br)$/;"	f	class:cv::detail::PlanePortraitWarper
detectResultRoi	opencv2/stitching/detail/warpers_inl.hpp	/^void RotationWarperBase<P>::detectResultRoi(Size src_size, Point &dst_tl, Point &dst_br)$/;"	f	class:cv::detail::RotationWarperBase
detectResultRoiByBorder	opencv2/stitching/detail/warpers_inl.hpp	/^void RotationWarperBase<P>::detectResultRoiByBorder(Size src_size, Point &dst_tl, Point &dst_br)$/;"	f	class:cv::detail::RotationWarperBase
detector	opencv2/videostab/global_motion.hpp	/^    Ptr<FeatureDetector> detector() const { return detector_; }$/;"	f	class:cv::videostab::KeypointBasedMotionEstimator
detector_	opencv2/stitching/detail/matchers.hpp	/^    Ptr<FeatureDetector> detector_;$/;"	m	class:cv::detail::SurfFeaturesFinder
detector_	opencv2/videostab/global_motion.hpp	/^    Ptr<FeatureDetector> detector_;$/;"	m	class:cv::videostab::KeypointBasedMotionEstimator
detector_	opencv2/videostab/global_motion.hpp	/^    Ptr<cuda::CornersDetector> detector_;$/;"	m	class:cv::videostab::KeypointBasedMotionEstimatorGpu
determinant	opencv2/core/matx.hpp	/^double determinant(const Matx<_Tp, m, m>& a)$/;"	f	namespace:cv
device	opencv2/core/cuda/block.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv::cuda
device	opencv2/core/cuda/border_interpolate.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv::cuda
device	opencv2/core/cuda/color.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv::cuda
device	opencv2/core/cuda/common.hpp	/^    namespace device$/;"	n	namespace:cv::cuda
device	opencv2/core/cuda/datamov_utils.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv::cuda
device	opencv2/core/cuda/detail/color_detail.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv::cuda
device	opencv2/core/cuda/detail/reduce.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv::cuda
device	opencv2/core/cuda/detail/reduce_key_val.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv::cuda
device	opencv2/core/cuda/detail/transform_detail.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv::cuda
device	opencv2/core/cuda/detail/type_traits_detail.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv::cuda
device	opencv2/core/cuda/detail/vec_distance_detail.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv::cuda
device	opencv2/core/cuda/dynamic_smem.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv::cuda
device	opencv2/core/cuda/emulation.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv::cuda
device	opencv2/core/cuda/filters.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv::cuda
device	opencv2/core/cuda/funcattrib.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv::cuda
device	opencv2/core/cuda/functional.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv::cuda
device	opencv2/core/cuda/limits.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv::cuda
device	opencv2/core/cuda/reduce.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv::cuda
device	opencv2/core/cuda/saturate_cast.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv::cuda
device	opencv2/core/cuda/scan.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv::cuda
device	opencv2/core/cuda/simd_functions.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv::cuda
device	opencv2/core/cuda/transform.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv::cuda
device	opencv2/core/cuda/type_traits.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv::cuda
device	opencv2/core/cuda/utility.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv::cuda
device	opencv2/core/cuda/vec_distance.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv::cuda
device	opencv2/core/cuda/vec_math.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv::cuda
device	opencv2/core/cuda/vec_traits.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv::cuda
device	opencv2/core/cuda/warp.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv::cuda
device	opencv2/core/cuda/warp_reduce.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv::cuda
device	opencv2/core/cuda/warp_shuffle.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv::cuda
device	opencv2/cudalegacy/NCVPyramid.hpp	/^namespace cv { namespace cuda { namespace device$/;"	n	namespace:cv::cuda
deviceCopyObsolete	opencv2/core/mat.inl.hpp	/^inline bool UMatData::deviceCopyObsolete() const { return (flags & DEVICE_COPY_OBSOLETE) != 0; }$/;"	f	class:cv::UMatData
deviceID	opencv2/core/cuda.inl.hpp	/^int DeviceInfo::deviceID() const$/;"	f	class:cv::cuda::DeviceInfo
deviceMemMapped	opencv2/core/mat.inl.hpp	/^inline bool UMatData::deviceMemMapped() const { return (flags & DEVICE_MEM_MAPPED) != 0; }$/;"	f	class:cv::UMatData
device_id_	opencv2/core/cuda.hpp	/^    int device_id_;$/;"	m	class:cv::cuda::DeviceInfo
dextractor	opencv2/features2d.hpp	/^    Ptr<DescriptorExtractor> dextractor;$/;"	m	class:cv::BOWImgDescriptorExtractor
diag	opencv2/core/mat.inl.hpp	/^Mat_<_Tp> Mat_<_Tp>::diag(int d) const$/;"	f	class:cv::Mat_
diag	opencv2/core/matx.hpp	/^Matx<_Tp,m,n> Matx<_Tp,m,n>::diag(const typename Matx<_Tp,m,n>::diag_type& d)$/;"	f	class:cv::Matx
diag	opencv2/core/matx.hpp	/^typename Matx<_Tp, m, n>::diag_type Matx<_Tp, m, n>::diag() const$/;"	f	class:cv::Matx
diag_type	opencv2/core/matx.hpp	/^    typedef Matx<_Tp, shortdim, 1> diag_type;$/;"	t	class:cv::Matx
difference_type	5/debug/safe_iterator.h	/^      typedef typename _Traits::difference_type		difference_type;$/;"	t	class:__gnu_debug::_Safe_iterator
difference_type	5/debug/safe_local_iterator.h	/^      typedef typename _Traits::difference_type		difference_type;$/;"	t	class:__gnu_debug::_Safe_local_iterator
difference_type	5/debug/safe_sequence.h	/^      difference_type;$/;"	t	class:__gnu_debug::_After_nth_from
difference_type	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	/^      typedef typename _Alloc::difference_type 	difference_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_BIN_TREE_NAME
difference_type	5/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp	/^      typedef trivial_iterator_difference_type difference_type;$/;"	t	class:__gnu_pbds::detail::bin_search_tree_const_node_it_
difference_type	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	/^      typedef typename _Alloc::difference_type 	difference_type;$/;"	t	class:__gnu_pbds::detail::bin_search_tree_const_it_
difference_type	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	/^      typedef typename _Alloc::difference_type 		difference_type;$/;"	t	class:__gnu_pbds::detail::binary_heap
difference_type	5/ext/pb_ds/detail/binary_heap_/const_iterator.hpp	/^      typedef typename _Alloc::difference_type 		difference_type;$/;"	t	class:__gnu_pbds::detail::binary_heap_const_iterator_
difference_type	5/ext/pb_ds/detail/binary_heap_/point_const_iterator.hpp	/^      typedef trivial_iterator_difference_type difference_type;$/;"	t	class:__gnu_pbds::detail::binary_heap_point_const_iterator_
difference_type	5/ext/pb_ds/detail/binomial_heap_/binomial_heap_.hpp	/^      typedef typename _Alloc::difference_type 		difference_type;$/;"	t	class:__gnu_pbds::detail::binomial_heap
difference_type	5/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp	/^      typedef typename _Alloc::difference_type 		difference_type;$/;"	t	class:__gnu_pbds::detail::binomial_heap_base
difference_type	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef typename _Alloc::difference_type 	difference_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
difference_type	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef typename _Alloc::difference_type 	difference_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
difference_type	5/ext/pb_ds/detail/left_child_next_sibling_heap_/const_iterator.hpp	/^      typedef typename _Alloc::difference_type 		difference_type;$/;"	t	class:__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_
difference_type	5/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp	/^      typedef typename _Alloc::difference_type 	difference_type;$/;"	t	class:__gnu_pbds::detail::left_child_next_sibling_heap
difference_type	5/ext/pb_ds/detail/left_child_next_sibling_heap_/point_const_iterator.hpp	/^      typedef trivial_iterator_difference_type difference_type;$/;"	t	class:__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_
difference_type	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      typedef typename _Alloc::difference_type difference_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_LU_NAME
difference_type	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	/^      typedef trivial_iterator_difference_type difference_type;$/;"	t	class:__gnu_pbds::detail::ov_tree_node_const_it_
difference_type	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	/^      typedef trivial_iterator_difference_type difference_type;$/;"	t	class:__gnu_pbds::detail::ov_tree_node_it_
difference_type	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      typedef typename _Alloc::difference_type 		difference_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
difference_type	5/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp	/^      typedef typename _Alloc::difference_type 		difference_type;$/;"	t	class:__gnu_pbds::detail::pairing_heap
difference_type	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename _Alloc::difference_type 		difference_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
difference_type	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	typedef typename _Alloc::difference_type 	difference_type;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Inode::const_iterator
difference_type	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	typedef typename _Alloc::difference_type 	difference_type;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Inode::iterator
difference_type	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef trivial_iterator_difference_type 		difference_type;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_Node_citer
difference_type	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename allocator_type::difference_type	difference_type;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_CIter
difference_type	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	/^      typedef typename _Alloc::difference_type 		 difference_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_RB_TREE_NAME
difference_type	5/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp	/^      typedef typename _Alloc::difference_type 		difference_type;$/;"	t	class:__gnu_pbds::detail::rc_binomial_heap
difference_type	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	/^      typedef typename _Alloc::difference_type 		 difference_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_S_TREE_NAME
difference_type	5/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp	/^      typedef typename _Alloc::difference_type 		difference_type;$/;"	t	class:__gnu_pbds::detail::thin_heap
difference_type	5/ext/pb_ds/detail/unordered_iterator/const_iterator.hpp	/^  typedef typename _Alloc::difference_type difference_type;$/;"	t	class:const_iterator_
difference_type	5/ext/pb_ds/detail/unordered_iterator/iterator.hpp	/^  typedef typename _Alloc::difference_type difference_type;$/;"	t	class:iterator_
difference_type	5/ext/pb_ds/detail/unordered_iterator/point_const_iterator.hpp	/^  typedef trivial_iterator_difference_type difference_type;$/;"	t	class:point_const_iterator_
difference_type	5/ext/pb_ds/detail/unordered_iterator/point_iterator.hpp	/^  typedef trivial_iterator_difference_type difference_type;$/;"	t	class:point_iterator_
difference_type	5/ext/pb_ds/priority_queue.hpp	/^    typedef typename allocator_type::difference_type 	difference_type;$/;"	t	class:__gnu_pbds::priority_queue
difference_type	5/parallel/iterator.h	/^                                                            difference_type;$/;"	t	class:__gnu_parallel::_IteratorTriple
difference_type	5/parallel/iterator.h	/^      typedef typename _TraitsType::difference_type difference_type;$/;"	t	class:__gnu_parallel::_IteratorPair
difference_type	cpp_src/allocator.h	/^      typedef ptrdiff_t   difference_type;$/;"	t	class:std::allocator
difference_type	cpp_src/allocator.h	/^      typedef ptrdiff_t  difference_type;$/;"	t	class:std::allocator
difference_type	cpp_src/basic_string.h	/^      typedef typename _CharT_alloc_type::difference_type   difference_type;$/;"	t	class:std::basic_string
difference_type	cpp_src/stl_bvector.h	/^    typedef ptrdiff_t                                    difference_type;$/;"	t	class:std::vector
difference_type	cpp_src/stl_deque.h	/^      typedef ptrdiff_t                          difference_type;$/;"	t	class:std::deque
difference_type	cpp_src/stl_deque.h	/^      typedef ptrdiff_t                       difference_type;$/;"	t	struct:std::_Deque_iterator
difference_type	cpp_src/stl_iterator.h	/^							       difference_type;$/;"	t	class:std::reverse_iterator
difference_type	cpp_src/stl_iterator.h	/^                                                             difference_type;$/;"	t	class:__normal_iterator
difference_type	cpp_src/stl_iterator_base_types.h	/^      typedef _Distance  difference_type;$/;"	t	struct:std::iterator
difference_type	cpp_src/stl_iterator_base_types.h	/^      typedef ptrdiff_t                   difference_type;$/;"	t	struct:std::iterator_traits
difference_type	cpp_src/stl_iterator_base_types.h	/^      typedef typename _Iterator::difference_type   difference_type;$/;"	t	struct:std::iterator_traits
difference_type	cpp_src/stl_list.h	/^      typedef ptrdiff_t                                  difference_type;$/;"	t	class:std::list
difference_type	cpp_src/stl_list.h	/^      typedef ptrdiff_t                          difference_type;$/;"	t	struct:std::_List_const_iterator
difference_type	cpp_src/stl_list.h	/^      typedef ptrdiff_t                          difference_type;$/;"	t	struct:std::_List_iterator
difference_type	cpp_src/stl_map.h	/^      typedef typename _Rep_type::difference_type        difference_type;$/;"	t	class:std::map
difference_type	cpp_src/stl_multimap.h	/^      typedef typename _Rep_type::difference_type        difference_type;$/;"	t	class:std::multimap
difference_type	cpp_src/stl_multiset.h	/^      typedef typename _Rep_type::difference_type           difference_type;$/;"	t	class:std::multiset
difference_type	cpp_src/stl_set.h	/^      typedef typename _Rep_type::difference_type           difference_type;$/;"	t	class:std::set
difference_type	cpp_src/stl_tree.h	/^      typedef ptrdiff_t                  difference_type;$/;"	t	struct:std::_Rb_tree_const_iterator
difference_type	cpp_src/stl_tree.h	/^      typedef ptrdiff_t                  difference_type;$/;"	t	struct:std::_Rb_tree_iterator
difference_type	cpp_src/stl_tree.h	/^      typedef ptrdiff_t difference_type;$/;"	t	class:std::_Rb_tree
difference_type	cpp_src/stl_vector.h	/^      typedef ptrdiff_t					 difference_type;$/;"	t	class:std::vector
difference_type	opencv2/core/cvstd.hpp	/^    typedef ptrdiff_t difference_type;$/;"	t	class:cv::Allocator
difference_type	opencv2/core/cvstd.hpp	/^    typedef ptrdiff_t difference_type;$/;"	t	class:cv::String
difference_type	opencv2/core/mat.hpp	/^    typedef ptrdiff_t difference_type;$/;"	t	class:cv::MatConstIterator
difference_type	opencv2/core/mat.hpp	/^    typedef ptrdiff_t difference_type;$/;"	t	class:cv::MatConstIterator_
dim	opencv2/core/types_c.h	/^    dim[CV_MAX_DIM];$/;"	m	struct:CvMatND	typeref:struct:CvMatND::__anon329
dim_	opencv2/flann/kdtree_single_index.h	/^    size_t dim_;$/;"	m	class:cvflann::KDTreeSingleIndex
dims	opencv2/core/core_c.h	/^    int dims; \/**< number of dimensions to iterate *\/$/;"	m	struct:CvNArrayIterator
dims	opencv2/core/mat.hpp	/^        int dims;$/;"	m	struct:cv::SparseMat::Hdr
dims	opencv2/core/mat.hpp	/^    int dims;$/;"	m	class:cv::Mat
dims	opencv2/core/mat.hpp	/^    int dims;$/;"	m	class:cv::UMat
dims	opencv2/core/mat.inl.hpp	/^int SparseMat::dims() const$/;"	f	class:cv::SparseMat
dims	opencv2/core/types_c.h	/^    int dims;$/;"	m	struct:CvMatND
dims	opencv2/core/types_c.h	/^    int dims;$/;"	m	struct:CvSparseMat
direct_mask_range_hashing	5/ext/pb_ds/hash_policy.hpp	/^  class direct_mask_range_hashing$/;"	c	namespace:__gnu_pbds
direct_mod_range_hashing	5/ext/pb_ds/hash_policy.hpp	/^  class direct_mod_range_hashing$/;"	c	namespace:__gnu_pbds
direction_func	opencv2/cudev/functional/functional.hpp	/^template <typename T, bool angleInDegrees> struct direction_func : binary_function<T, T, T>$/;"	s	namespace:cv::cudev
directx	opencv2/core/directx.hpp	/^namespace cv { namespace directx {$/;"	n	namespace:cv
disp	opencv2/calib3d/calib3d_c.h	/^    CvMat* disp;$/;"	m	struct:CvStereoBMState
disp12MaxDiff	opencv2/calib3d/calib3d_c.h	/^    int disp12MaxDiff;$/;"	m	struct:CvStereoBMState
dist	opencv2/videostab/fast_marching.hpp	/^        float dist;$/;"	m	struct:cv::videostab::FastMarchingMethod::DXY
distThresh	opencv2/videostab/inpainting.hpp	/^    float distThresh() const { return distThresh_; }$/;"	f	class:cv::videostab::MotionInpainter
distThresh_	opencv2/videostab/inpainting.hpp	/^    float distThresh_;$/;"	m	class:cv::videostab::MotionInpainter
distType	opencv2/flann/miniflann.hpp	/^    cvflann::flann_distance_t distType;$/;"	m	class:cv::flann::Index
dist_	opencv2/flann/result_set.h	/^        DistanceType dist_;$/;"	m	struct:cvflann::UniqueResultSet::DistIndex
dist_	opencv2/videostab/fast_marching.hpp	/^    cv::Mat_<float> dist_; \/\/ distance map$/;"	m	class:cv::videostab::FastMarchingMethod
dist_indices_	opencv2/flann/result_set.h	/^    std::set<DistIndex> dist_indices_;$/;"	m	class:cvflann::UniqueResultSet
distance	cpp_src/stl_iterator_base_funcs.h	/^    distance(_InputIterator __first, _InputIterator __last)$/;"	f	namespace:std
distance	opencv2/core/types.hpp	/^    CV_PROP_RW float distance;$/;"	m	class:cv::DMatch
distance	opencv2/flann/hierarchical_clustering_index.h	/^    Distance distance;$/;"	m	class:cvflann::HierarchicalClusteringIndex
distance	opencv2/flann/kmeans_index.h	/^        Distance distance;$/;"	m	class:cvflann::KMeansIndex::KMeansDistanceComputer
distanceMap	opencv2/videostab/fast_marching.hpp	/^    Mat distanceMap() const { return dist_; }$/;"	f	class:cv::videostab::FastMarchingMethod
distance_	opencv2/flann/autotuned_index.h	/^    Distance distance_;$/;"	m	class:cvflann::AutotunedIndex
distance_	opencv2/flann/kdtree_index.h	/^    Distance distance_;$/;"	m	class:cvflann::KDTreeIndex
distance_	opencv2/flann/kdtree_single_index.h	/^    Distance distance_;$/;"	m	class:cvflann::KDTreeSingleIndex
distance_	opencv2/flann/kmeans_index.h	/^    Distance distance_;$/;"	m	class:cvflann::KMeansIndex
distance_	opencv2/flann/linear_index.h	/^    Distance distance_;$/;"	m	class:cvflann::LinearIndex
distance_	opencv2/flann/lsh_index.h	/^    Distance distance_;$/;"	m	class:cvflann::LshIndex
dists	opencv2/flann/result_set.h	/^    DistanceType* dists;$/;"	m	class:cvflann::KNNResultSet
dists	opencv2/flann/result_set.h	/^    DistanceType* dists;$/;"	m	class:cvflann::KNNSimpleResultSet
dists	opencv2/flann/result_set.h	/^    DistanceType* dists;$/;"	m	class:cvflann::RadiusResultSet
div	opencv2/core/matx.hpp	/^Matx<_Tp, m, n> Matx<_Tp, m, n>::div(const Matx<_Tp, m, n>& a) const$/;"	f	class:cv::Matx
divUp	opencv2/core/cuda/common.hpp	/^        __host__ __device__ __forceinline__ int divUp(int total, int grain)$/;"	f	namespace:cv::cuda::device
divUp	opencv2/cudev/common.hpp	/^__host__ __device__ __forceinline__ int divUp(int total, int grain)$/;"	f	namespace:cv::cudev
divfeat	opencv2/flann/kdtree_index.h	/^        int divfeat;$/;"	m	struct:cvflann::KDTreeIndex::Node
divfeat	opencv2/flann/kdtree_single_index.h	/^        int divfeat;$/;"	m	struct:cvflann::KDTreeSingleIndex::Node
divhigh	opencv2/flann/kdtree_single_index.h	/^        DistanceType divlow, divhigh;$/;"	m	struct:cvflann::KDTreeSingleIndex::Node
divideTree	opencv2/flann/kdtree_index.h	/^    NodePtr divideTree(int* ind, int count)$/;"	f	class:cvflann::KDTreeIndex
divideTree	opencv2/flann/kdtree_single_index.h	/^    NodePtr divideTree(int left, int right, BoundingBox& bbox)$/;"	f	class:cvflann::KDTreeSingleIndex
divides	cpp_src/stl_function.h	/^    struct divides : public binary_function<_Tp, _Tp, _Tp>$/;"	s	namespace:std
divides	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ divides() {}$/;"	f	struct:cv::cuda::device::divides
divides	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ divides(const divides&) {}$/;"	f	struct:cv::cuda::device::divides
divides	opencv2/core/cuda/functional.hpp	/^    template <typename T> struct divides : binary_function<T, T, T>$/;"	s	namespace:cv::cuda::device
divides	opencv2/cudev/functional/functional.hpp	/^template <typename T> struct divides : binary_function<T, T, T>$/;"	s	namespace:cv::cudev
divlow	opencv2/flann/kdtree_single_index.h	/^        DistanceType divlow, divhigh;$/;"	m	struct:cvflann::KDTreeSingleIndex::Node
divval	opencv2/flann/kdtree_index.h	/^        DistanceType divval;$/;"	m	struct:cvflann::KDTreeIndex::Node
dmatcher	opencv2/features2d.hpp	/^    Ptr<DescriptorMatcher> dmatcher;$/;"	m	class:cv::BOWImgDescriptorExtractor
dmy	cpp_src/locale_facets.h	/^    enum dateorder { no_order, dmy, mdy, ymd, ydm };$/;"	e	enum:std::time_base::dateorder
doCorrectionForInclusion	opencv2/videostab/stabilizer.hpp	/^    bool doCorrectionForInclusion() const { return doCorrectionForInclusion_; }$/;"	f	class:cv::videostab::StabilizerBase
doCorrectionForInclusion_	opencv2/videostab/stabilizer.hpp	/^    bool doCorrectionForInclusion_;$/;"	m	class:cv::videostab::StabilizerBase
doDeblurring_	opencv2/videostab/stabilizer.hpp	/^    bool doDeblurring_;$/;"	m	class:cv::videostab::StabilizerBase
doInpainting_	opencv2/videostab/stabilizer.hpp	/^    bool doInpainting_;$/;"	m	class:cv::videostab::StabilizerBase
doWobbleSuppression_	opencv2/videostab/stabilizer.hpp	/^    bool doWobbleSuppression_;$/;"	m	class:cv::videostab::TwoPassStabilizer
do_curr_symbol	cpp_src/locale_facets.h	/^      do_curr_symbol()   const$/;"	f	class:std::moneypunct
do_decimal_point	cpp_src/locale_facets.h	/^      do_decimal_point() const$/;"	f	class:std::moneypunct
do_decimal_point	cpp_src/locale_facets.h	/^      do_decimal_point() const$/;"	f	class:std::numpunct
do_falsename	cpp_src/locale_facets.h	/^      do_falsename() const$/;"	f	class:std::numpunct
do_frac_digits	cpp_src/locale_facets.h	/^      do_frac_digits() const$/;"	f	class:std::moneypunct
do_grouping	cpp_src/locale_facets.h	/^      do_grouping() const$/;"	f	class:std::moneypunct
do_grouping	cpp_src/locale_facets.h	/^      do_grouping() const$/;"	f	class:std::numpunct
do_narrow	cpp_src/locale_facets.h	/^      do_narrow(char_type __c, char) const$/;"	f	class:std::ctype
do_narrow	cpp_src/locale_facets.h	/^      do_narrow(const char_type* __lo, const char_type* __hi,$/;"	f	class:std::ctype
do_neg_format	cpp_src/locale_facets.h	/^      do_neg_format() const$/;"	f	class:std::moneypunct
do_negative_sign	cpp_src/locale_facets.h	/^      do_negative_sign() const$/;"	f	class:std::moneypunct
do_pos_format	cpp_src/locale_facets.h	/^      do_pos_format() const$/;"	f	class:std::moneypunct
do_positive_sign	cpp_src/locale_facets.h	/^      do_positive_sign() const$/;"	f	class:std::moneypunct
do_resize	5/ext/pb_ds/detail/cc_hash_table_map_/resize_fn_imps.hpp	/^do_resize(size_type len)$/;"	f	class:PB_DS_CLASS_C_DEC
do_resize	5/ext/pb_ds/detail/gp_hash_table_map_/resize_fn_imps.hpp	/^do_resize(size_type n)$/;"	f	class:PB_DS_CLASS_C_DEC
do_resize	5/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_imp.hpp	/^do_resize(size_type)$/;"	f	class:PB_DS_CLASS_C_DEC
do_resize	5/ext/pb_ds/detail/resize_policy/hash_standard_resize_policy_imp.hpp	/^do_resize(size_type)$/;"	f	class:PB_DS_CLASS_C_DEC
do_resize_if_needed	5/ext/pb_ds/detail/cc_hash_table_map_/resize_fn_imps.hpp	/^do_resize_if_needed()$/;"	f	class:PB_DS_CLASS_C_DEC
do_resize_if_needed	5/ext/pb_ds/detail/gp_hash_table_map_/resize_fn_imps.hpp	/^do_resize_if_needed()$/;"	f	class:PB_DS_CLASS_C_DEC
do_resize_if_needed_no_throw	5/ext/pb_ds/detail/cc_hash_table_map_/resize_fn_imps.hpp	/^do_resize_if_needed_no_throw()$/;"	f	class:PB_DS_CLASS_C_DEC
do_resize_if_needed_no_throw	5/ext/pb_ds/detail/gp_hash_table_map_/resize_fn_imps.hpp	/^do_resize_if_needed_no_throw()$/;"	f	class:PB_DS_CLASS_C_DEC
do_thousands_sep	cpp_src/locale_facets.h	/^      do_thousands_sep() const$/;"	f	class:std::moneypunct
do_thousands_sep	cpp_src/locale_facets.h	/^      do_thousands_sep() const$/;"	f	class:std::numpunct
do_truename	cpp_src/locale_facets.h	/^      do_truename() const$/;"	f	class:std::numpunct
do_wave_correct_	opencv2/stitching.hpp	/^    bool do_wave_correct_;$/;"	m	class:cv::Stitcher
do_widen	cpp_src/locale_facets.h	/^      do_widen(char __c) const$/;"	f	class:std::ctype
do_widen	cpp_src/locale_facets.h	/^      do_widen(const char* __lo, const char* __hi, char_type* __dest) const$/;"	f	class:std::ctype
dot	opencv2/core/matx.hpp	/^_Tp Matx<_Tp, m, n>::dot(const Matx<_Tp, m, n>& M) const$/;"	f	class:cv::Matx
dot	opencv2/core/types.hpp	/^_Tp Point3_<_Tp>::dot(const Point3_& pt) const$/;"	f	class:cv::Point3_
dot	opencv2/core/types.hpp	/^_Tp Point_<_Tp>::dot(const Point_& pt) const$/;"	f	class:cv::Point_
double8	opencv2/core/cuda/vec_traits.hpp	/^    struct double8$/;"	s	namespace:cv::cuda::device
dst	opencv2/core/core_c.h	/^    CvGraphVtx* dst;       \/* current graph edge destination vertex *\/$/;"	m	struct:CvGraphScanner
dst	opencv2/core/matx.hpp	/^    Matx<_Tp, m, n>* dst;$/;"	m	class:cv::MatxCommaInitializer
dst_	opencv2/stitching/detail/blenders.hpp	/^    UMat dst_, dst_mask_;$/;"	m	class:cv::detail::Blender
dst_	opencv2/stitching/detail/timelapsers.hpp	/^    UMat dst_;$/;"	m	class:cv::detail::Timelapser
dst_band_weights_	opencv2/stitching/detail/blenders.hpp	/^    std::vector<UMat> dst_band_weights_;$/;"	m	class:cv::detail::MultiBandBlender
dst_img_idx	opencv2/stitching/detail/matchers.hpp	/^    int src_img_idx, dst_img_idx;       \/\/!< Images indices (optional)$/;"	m	struct:cv::detail::MatchesInfo
dst_mask_	opencv2/stitching/detail/blenders.hpp	/^    UMat dst_, dst_mask_;$/;"	m	class:cv::detail::Blender
dst_pyr_laplace_	opencv2/stitching/detail/blenders.hpp	/^    std::vector<UMat> dst_pyr_laplace_;$/;"	m	class:cv::detail::MultiBandBlender
dst_roi_	opencv2/stitching/detail/blenders.hpp	/^    Rect dst_roi_;$/;"	m	class:cv::detail::Blender
dst_roi_	opencv2/stitching/detail/timelapsers.hpp	/^    Rect dst_roi_;$/;"	m	class:cv::detail::Timelapser
dst_roi_final_	opencv2/stitching/detail/blenders.hpp	/^    Rect dst_roi_final_;$/;"	m	class:cv::detail::MultiBandBlender
dst_weight_map_	opencv2/stitching/detail/blenders.hpp	/^    UMat dst_weight_map_;$/;"	m	class:cv::detail::FeatherBlender
dumnode_const_iterator	5/ext/pb_ds/detail/branch_policy/null_node_metadata.hpp	/^      struct dumnode_const_iterator$/;"	s	namespace:__gnu_pbds::detail
dx	opencv2/highgui.hpp	/^    float       dx;        \/\/!< horizontal interval between letters$/;"	m	struct:cv::QtFont
dx	opencv2/imgproc/imgproc_c.h	/^    float       dx;       \/\/!< horizontal interval between letters$/;"	m	struct:CvFont
dx_	opencv2/stitching/detail/seam_finders.hpp	/^    std::vector<Mat> dx_, dy_;$/;"	m	class:cv::detail::GraphCutSeamFinderGpu
dy_	opencv2/stitching/detail/seam_finders.hpp	/^    std::vector<Mat> dx_, dy_;$/;"	m	class:cv::detail::GraphCutSeamFinderGpu
dynamicCast	opencv2/core/ptr.inl.hpp	/^Ptr<Y> Ptr<T>::dynamicCast() const$/;"	f	class:cv::Ptr
e_const_iterator	5/ext/pb_ds/detail/trie_policy/trie_policy_base.hpp	/^      typedef typename access_traits::const_iterator 	e_const_iterator;$/;"	t	class:__gnu_pbds::detail::trie_policy_base
e_pos	5/ext/pb_ds/detail/trie_policy/trie_string_access_traits_imp.hpp	/^e_pos(e_type e)$/;"	f	class:PB_DS_CLASS_C_DEC
e_type	5/ext/pb_ds/detail/trie_policy/sample_trie_access_traits.hpp	/^    typedef char 				       	e_type;$/;"	t	struct:__gnu_pbds::sample_trie_access_traits
e_type	5/ext/pb_ds/trie_policy.hpp	/^    typedef typename std::iterator_traits<const_iterator>::value_type e_type;$/;"	t	struct:__gnu_pbds::trie_string_access_traits
edge	opencv2/core/core_c.h	/^    CvGraphEdge* edge;     \/* current edge *\/$/;"	m	struct:CvGraphScanner
edges_	opencv2/stitching/detail/motion_estimators.hpp	/^    std::vector<std::pair<int,int> > edges_;$/;"	m	class:cv::detail::BundleAdjusterBase
edges_	opencv2/stitching/detail/seam_finders.hpp	/^    std::set<std::pair<int, int> > edges_;$/;"	m	class:cv::detail::DpSeamFinder
edges_	opencv2/stitching/detail/util.hpp	/^    std::vector< std::list<GraphEdge> > edges_;$/;"	m	class:cv::detail::Graph
eigen2cv	opencv2/core/eigen.hpp	/^void eigen2cv( const Eigen::Matrix<_Tp, _rows, _cols, _options, _maxRows, _maxCols>& src, Mat& dst )$/;"	f	namespace:cv
eigen2cv	opencv2/core/eigen.hpp	/^void eigen2cv( const Eigen::Matrix<_Tp, _rows, _cols, _options, _maxRows, _maxCols>& src,$/;"	f	namespace:cv
eigenvalues	opencv2/core.hpp	/^    Mat eigenvalues() const { return _eigenvalues; }$/;"	f	class:cv::LDA
eigenvalues	opencv2/core.hpp	/^    Mat eigenvalues; \/\/!< eigenvalues of the covariation matrix$/;"	m	class:cv::PCA
eigenvectors	opencv2/core.hpp	/^    Mat eigenvectors() const { return _eigenvectors; }$/;"	f	class:cv::LDA
eigenvectors	opencv2/core.hpp	/^    Mat eigenvectors; \/\/!< eigenvectors of the covariation matrix$/;"	m	class:cv::PCA
elemSize	opencv2/core/core_c.h	/^template<typename _Tp> inline size_t Seq<_Tp>::elemSize() const$/;"	f	class:cv::Seq
elemSize	opencv2/core/cuda.inl.hpp	/^size_t GpuMat::elemSize() const$/;"	f	class:cv::cuda::GpuMat
elemSize	opencv2/core/cuda.inl.hpp	/^size_t HostMem::elemSize() const$/;"	f	class:cv::cuda::HostMem
elemSize	opencv2/core/cuda_types.hpp	/^            __CV_CUDA_HOST_DEVICE__ size_t elemSize() const { return elem_size; }$/;"	f	struct:cv::cuda::DevPtr
elemSize	opencv2/core/mat.hpp	/^    size_t elemSize;$/;"	m	class:cv::MatConstIterator
elemSize	opencv2/core/mat.inl.hpp	/^size_t Mat::elemSize() const$/;"	f	class:cv::Mat
elemSize	opencv2/core/mat.inl.hpp	/^size_t Mat_<_Tp>::elemSize() const$/;"	f	class:cv::Mat_
elemSize	opencv2/core/mat.inl.hpp	/^size_t SparseMat::elemSize() const$/;"	f	class:cv::SparseMat
elemSize	opencv2/core/mat.inl.hpp	/^size_t UMat::elemSize() const$/;"	f	class:cv::UMat
elemSize	opencv2/core/opengl.hpp	/^int cv::ogl::Buffer::elemSize() const$/;"	f	class:cv::ogl::Buffer
elemSize	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^__host__ size_t GpuMat_<T>::elemSize() const$/;"	f	class:cv::cudev::GpuMat_
elemSize	opencv2/imgproc.hpp	/^    int step, elemSize;$/;"	m	class:cv::LineIterator
elemSize1	opencv2/core/cuda.inl.hpp	/^size_t GpuMat::elemSize1() const$/;"	f	class:cv::cuda::GpuMat
elemSize1	opencv2/core/cuda.inl.hpp	/^size_t HostMem::elemSize1() const$/;"	f	class:cv::cuda::HostMem
elemSize1	opencv2/core/mat.inl.hpp	/^size_t Mat::elemSize1() const$/;"	f	class:cv::Mat
elemSize1	opencv2/core/mat.inl.hpp	/^size_t Mat_<_Tp>::elemSize1() const$/;"	f	class:cv::Mat_
elemSize1	opencv2/core/mat.inl.hpp	/^size_t SparseMat::elemSize1() const$/;"	f	class:cv::SparseMat
elemSize1	opencv2/core/mat.inl.hpp	/^size_t UMat::elemSize1() const$/;"	f	class:cv::UMat
elemSize1	opencv2/core/opengl.hpp	/^int cv::ogl::Buffer::elemSize1() const$/;"	f	class:cv::ogl::Buffer
elemSize1	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^__host__ size_t GpuMat_<T>::elemSize1() const$/;"	f	class:cv::cudev::GpuMat_
elem_size	opencv2/core/cuda_types.hpp	/^            enum { elem_size = sizeof(elem_type) };$/;"	e	enum:cv::cuda::DevPtr::__anon281
elem_type	opencv2/core/cuda/border_interpolate.hpp	/^        typedef typename B::result_type elem_type;$/;"	t	struct:cv::cuda::device::BorderReader
elem_type	opencv2/core/cuda/border_interpolate.hpp	/^        typedef typename BrdConstant<D>::result_type elem_type;$/;"	t	struct:cv::cuda::device::BorderReader
elem_type	opencv2/core/cuda/filters.hpp	/^        typedef typename Ptr2D::elem_type elem_type;$/;"	t	struct:cv::cuda::device::AreaFilter
elem_type	opencv2/core/cuda/filters.hpp	/^        typedef typename Ptr2D::elem_type elem_type;$/;"	t	struct:cv::cuda::device::CubicFilter
elem_type	opencv2/core/cuda/filters.hpp	/^        typedef typename Ptr2D::elem_type elem_type;$/;"	t	struct:cv::cuda::device::IntegerAreaFilter
elem_type	opencv2/core/cuda/filters.hpp	/^        typedef typename Ptr2D::elem_type elem_type;$/;"	t	struct:cv::cuda::device::LinearFilter
elem_type	opencv2/core/cuda/filters.hpp	/^        typedef typename Ptr2D::elem_type elem_type;$/;"	t	struct:cv::cuda::device::PointFilter
elem_type	opencv2/core/cuda/vec_traits.hpp	/^        typedef char elem_type;$/;"	t	struct:cv::cuda::device::VecTraits
elem_type	opencv2/core/cuda/vec_traits.hpp	/^        typedef schar elem_type;$/;"	t	struct:cv::cuda::device::VecTraits
elem_type	opencv2/core/cuda_types.hpp	/^            typedef T elem_type;$/;"	t	struct:cv::cuda::DevPtr
elem_type	opencv2/cudev/util/vec_traits.hpp	/^    typedef schar elem_type;$/;"	t	struct:cv::cudev::VecTraits
element	opencv2/imgproc/imgproc_c.h	/^CVAPI(void)  cvReleaseStructuringElement( IplConvKernel** element );$/;"	v
element_type	opencv2/core/cvstd.hpp	/^    typedef T element_type;$/;"	t	struct:cv::Ptr
elems_	opencv2/videostab/global_motion.hpp	/^    std::vector<double> elems_, rowlb_, rowub_;$/;"	m	class:cv::videostab::MotionEstimatorL1
elems_	opencv2/videostab/motion_stabilizing.hpp	/^    std::vector<double> elems_, rowlb_, rowub_;$/;"	m	class:cv::videostab::LpMotionStabilizer
elname	opencv2/core/persistence.hpp	/^    String elname; \/\/!< the currently written element$/;"	m	class:cv::FileStorage
empty	5/ext/pb_ds/detail/bin_search_tree_/info_fn_imps.hpp	/^empty() const$/;"	f	class:PB_DS_CLASS_C_DEC
empty	5/ext/pb_ds/detail/binary_heap_/info_fn_imps.hpp	/^empty() const$/;"	f	class:PB_DS_CLASS_C_DEC
empty	5/ext/pb_ds/detail/cc_hash_table_map_/info_fn_imps.hpp	/^empty() const$/;"	f	class:PB_DS_CLASS_C_DEC
empty	5/ext/pb_ds/detail/cc_hash_table_map_/size_fn_imps.hpp	/^empty() const$/;"	f	class:PB_DS_CLASS_C_DEC
empty	5/ext/pb_ds/detail/gp_hash_table_map_/info_fn_imps.hpp	/^empty() const$/;"	f	class:PB_DS_CLASS_C_DEC
empty	5/ext/pb_ds/detail/left_child_next_sibling_heap_/info_fn_imps.hpp	/^empty() const$/;"	f	class:PB_DS_CLASS_C_DEC
empty	5/ext/pb_ds/detail/list_update_map_/info_fn_imps.hpp	/^empty() const$/;"	f	class:PB_DS_CLASS_C_DEC
empty	5/ext/pb_ds/detail/ov_tree_map_/info_fn_imps.hpp	/^empty() const$/;"	f	class:PB_DS_CLASS_C_DEC
empty	5/ext/pb_ds/detail/pat_trie_/info_fn_imps.hpp	/^empty() const$/;"	f	class:PB_DS_CLASS_C_DEC
empty	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^	empty() const$/;"	f	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME::branch_bag
empty	5/ext/pb_ds/detail/rc_binomial_heap_/rc.hpp	/^    empty() const$/;"	f	class:__gnu_pbds::detail::rc
empty	cpp_src/basic_string.h	/^      empty() const$/;"	f	class:std::basic_string
empty	cpp_src/stl_bvector.h	/^    empty() const$/;"	f	class:std::vector
empty	cpp_src/stl_deque.h	/^      empty() const$/;"	f	class:std::deque
empty	cpp_src/stl_list.h	/^      empty() const$/;"	f	class:std::list
empty	cpp_src/stl_map.h	/^      empty() const$/;"	f	class:std::map
empty	cpp_src/stl_multimap.h	/^      empty() const$/;"	f	class:std::multimap
empty	cpp_src/stl_multiset.h	/^      empty() const$/;"	f	class:std::multiset
empty	cpp_src/stl_queue.h	/^      empty() const$/;"	f	class:std::priority_queue
empty	cpp_src/stl_queue.h	/^      empty() const$/;"	f	class:std::queue
empty	cpp_src/stl_set.h	/^      empty() const$/;"	f	class:std::set
empty	cpp_src/stl_stack.h	/^      empty() const$/;"	f	class:std::stack
empty	cpp_src/stl_tree.h	/^      empty() const$/;"	f	class:std::_Rb_tree
empty	cpp_src/stl_vector.h	/^      empty() const$/;"	f	class:std::vector
empty	opencv2/core.hpp	/^    virtual bool empty() const { return false; }$/;"	f	class:cv::Algorithm
empty	opencv2/core/core_c.h	/^template<typename _Tp> inline bool Seq<_Tp>::empty() const$/;"	f	class:cv::Seq
empty	opencv2/core/cuda.inl.hpp	/^bool GpuMat::empty() const$/;"	f	class:cv::cuda::GpuMat
empty	opencv2/core/cuda.inl.hpp	/^bool HostMem::empty() const$/;"	f	class:cv::cuda::HostMem
empty	opencv2/core/cvstd.hpp	/^bool String::empty() const$/;"	f	class:cv::String
empty	opencv2/core/mat.inl.hpp	/^bool Mat::empty() const$/;"	f	class:cv::Mat
empty	opencv2/core/mat.inl.hpp	/^bool UMat::empty() const$/;"	f	class:cv::UMat
empty	opencv2/core/opengl.hpp	/^bool cv::ogl::Arrays::empty() const$/;"	f	class:cv::ogl::Arrays
empty	opencv2/core/opengl.hpp	/^bool cv::ogl::Buffer::empty() const$/;"	f	class:cv::ogl::Buffer
empty	opencv2/core/opengl.hpp	/^bool cv::ogl::Texture2D::empty() const$/;"	f	class:cv::ogl::Texture2D
empty	opencv2/core/persistence.hpp	/^inline bool FileNode::empty() const    { return node   == 0;    }$/;"	f	class:cv::FileNode
empty	opencv2/core/ptr.inl.hpp	/^bool Ptr<T>::empty() const$/;"	f	class:cv::Ptr
empty	opencv2/core/types.hpp	/^bool Range::empty() const$/;"	f	class:cv::Range
empty	opencv2/flann/any.h	/^    bool empty() const$/;"	f	struct:cvflann::any
empty	opencv2/flann/dynamic_bitset.h	/^    bool empty() const$/;"	f	class:cvflann::DynamicBitset
empty	opencv2/flann/heap.h	/^    bool empty()$/;"	f	class:cvflann::Heap
empty	opencv2/videostab/inpainting.hpp	/^    bool empty() const { return inpainters_.empty(); }$/;"	f	class:cv::videostab::InpaintingPipeline
empty	opencv2/videostab/motion_stabilizing.hpp	/^    bool empty() const { return stabilizers_.empty(); }$/;"	f	class:cv::videostab::MotionStabilizationPipeline
empty_any	opencv2/flann/any.h	/^struct empty_any$/;"	s	namespace:cvflann::anyimpl
empty_entry_status	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^	  empty_entry_status,$/;"	e	enum:__gnu_pbds::detail::PB_DS_GP_HASH_NAME::entry_status
encoding	cpp_src/codecvt.h	/^      encoding() const throw()$/;"	f	class:std::__codecvt_abstract_base
end	5/ext/pb_ds/detail/bin_search_tree_/iterators_fn_imps.hpp	/^end() const$/;"	f	class:PB_DS_CLASS_C_DEC
end	5/ext/pb_ds/detail/bin_search_tree_/iterators_fn_imps.hpp	/^end()$/;"	f	class:PB_DS_CLASS_C_DEC
end	5/ext/pb_ds/detail/binary_heap_/iterators_fn_imps.hpp	/^end() const$/;"	f	class:PB_DS_CLASS_C_DEC
end	5/ext/pb_ds/detail/binary_heap_/iterators_fn_imps.hpp	/^end()$/;"	f	class:PB_DS_CLASS_C_DEC
end	5/ext/pb_ds/detail/cc_hash_table_map_/iterators_fn_imps.hpp	/^end() const$/;"	f	class:PB_DS_CLASS_C_DEC
end	5/ext/pb_ds/detail/cc_hash_table_map_/iterators_fn_imps.hpp	/^end()$/;"	f	class:PB_DS_CLASS_C_DEC
end	5/ext/pb_ds/detail/gp_hash_table_map_/iterator_fn_imps.hpp	/^end() const$/;"	f	class:PB_DS_CLASS_C_DEC
end	5/ext/pb_ds/detail/gp_hash_table_map_/iterator_fn_imps.hpp	/^end()$/;"	f	class:PB_DS_CLASS_C_DEC
end	5/ext/pb_ds/detail/left_child_next_sibling_heap_/iterators_fn_imps.hpp	/^end() const$/;"	f	class:PB_DS_CLASS_C_DEC
end	5/ext/pb_ds/detail/left_child_next_sibling_heap_/iterators_fn_imps.hpp	/^end()$/;"	f	class:PB_DS_CLASS_C_DEC
end	5/ext/pb_ds/detail/list_update_map_/iterators_fn_imps.hpp	/^end() const$/;"	f	class:PB_DS_CLASS_C_DEC
end	5/ext/pb_ds/detail/list_update_map_/iterators_fn_imps.hpp	/^end()$/;"	f	class:PB_DS_CLASS_C_DEC
end	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      end() const$/;"	f	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
end	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      end()$/;"	f	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
end	5/ext/pb_ds/detail/pat_trie_/iterators_fn_imps.hpp	/^end() const$/;"	f	class:PB_DS_CLASS_C_DEC
end	5/ext/pb_ds/detail/pat_trie_/iterators_fn_imps.hpp	/^end()$/;"	f	class:PB_DS_CLASS_C_DEC
end	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^    end() const$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
end	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^    end()$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
end	5/ext/pb_ds/detail/rc_binomial_heap_/rc.hpp	/^    end() const$/;"	f	class:__gnu_pbds::detail::rc
end	5/ext/pb_ds/detail/trie_policy/trie_string_access_traits_imp.hpp	/^end(key_const_reference r_key)$/;"	f	class:PB_DS_CLASS_C_DEC
end	5/parallel/base.h	/^      end() const$/;"	f	class:__gnu_parallel::_PseudoSequence
end	cpp_src/basic_string.h	/^      end() const$/;"	f	class:std::basic_string
end	cpp_src/basic_string.h	/^      end()$/;"	f	class:std::basic_string
end	cpp_src/ios_base.h	/^    static const seekdir end =		_S_end;$/;"	m	class:std::ios_base
end	cpp_src/stl_bvector.h	/^    end() const$/;"	f	class:std::vector
end	cpp_src/stl_bvector.h	/^    end()$/;"	f	class:std::vector
end	cpp_src/stl_deque.h	/^      end() const$/;"	f	class:std::deque
end	cpp_src/stl_deque.h	/^      end()$/;"	f	class:std::deque
end	cpp_src/stl_list.h	/^      end() const$/;"	f	class:std::list
end	cpp_src/stl_list.h	/^      end()$/;"	f	class:std::list
end	cpp_src/stl_map.h	/^      end() const$/;"	f	class:std::map
end	cpp_src/stl_map.h	/^      end()$/;"	f	class:std::map
end	cpp_src/stl_multimap.h	/^      end() const$/;"	f	class:std::multimap
end	cpp_src/stl_multimap.h	/^      end()$/;"	f	class:std::multimap
end	cpp_src/stl_multiset.h	/^      end() const$/;"	f	class:std::multiset
end	cpp_src/stl_set.h	/^      end() const$/;"	f	class:std::set
end	cpp_src/stl_tempbuf.h	/^      end()$/;"	f	class:std::_Temporary_buffer
end	cpp_src/stl_tree.h	/^      end() const$/;"	f	class:std::_Rb_tree
end	cpp_src/stl_tree.h	/^      end()$/;"	f	class:std::_Rb_tree
end	cpp_src/stl_vector.h	/^      end() const$/;"	f	class:std::vector
end	cpp_src/stl_vector.h	/^      end()$/;"	f	class:std::vector
end	opencv2/core/core_c.h	/^template<typename _Tp> inline SeqIterator<_Tp> Seq<_Tp>::end() const$/;"	f	class:cv::Seq
end	opencv2/core/cvstd.hpp	/^const char* String::end() const$/;"	f	class:cv::String
end	opencv2/core/mat.inl.hpp	/^MatConstIterator_<_Tp> Mat::end() const$/;"	f	class:cv::Mat
end	opencv2/core/mat.inl.hpp	/^MatConstIterator_<_Tp> Mat_<_Tp>::end() const$/;"	f	class:cv::Mat_
end	opencv2/core/mat.inl.hpp	/^MatIterator_<_Tp> Mat::end()$/;"	f	class:cv::Mat
end	opencv2/core/mat.inl.hpp	/^MatIterator_<_Tp> Mat_<_Tp>::end()$/;"	f	class:cv::Mat_
end	opencv2/core/mat.inl.hpp	/^SparseMatConstIterator SparseMat::end() const$/;"	f	class:cv::SparseMat
end	opencv2/core/mat.inl.hpp	/^SparseMatConstIterator_<_Tp> SparseMat::end() const$/;"	f	class:cv::SparseMat
end	opencv2/core/mat.inl.hpp	/^SparseMatConstIterator_<_Tp> SparseMat_<_Tp>::end() const$/;"	f	class:cv::SparseMat_
end	opencv2/core/mat.inl.hpp	/^SparseMatIterator SparseMat::end()$/;"	f	class:cv::SparseMat
end	opencv2/core/mat.inl.hpp	/^SparseMatIterator_<_Tp> SparseMat::end()$/;"	f	class:cv::SparseMat
end	opencv2/core/mat.inl.hpp	/^SparseMatIterator_<_Tp> SparseMat_<_Tp>::end()$/;"	f	class:cv::SparseMat_
end	opencv2/core/persistence.hpp	/^inline FileNodeIterator FileNode::end() const   { return FileNodeIterator(fs, node, size()); }$/;"	f	class:cv::FileNode
end	opencv2/core/types.hpp	/^    int start, end;$/;"	m	class:cv::Range
end	opencv2/cudalegacy/NCV.hpp	/^    Ncv8u *end;$/;"	m	class:NCVMemStackAllocator
end	opencv2/imgproc/types_c.h	/^    CvPoint* end; \/**< point of the contour where the defect ends *\/$/;"	m	struct:CvConvexityDefect
end_imp	5/ext/pb_ds/detail/trie_policy/trie_string_access_traits_imp.hpp	/^end_imp(key_const_reference r_key, detail::false_type)$/;"	f	class:PB_DS_CLASS_C_DEC
end_imp	5/ext/pb_ds/detail/trie_policy/trie_string_access_traits_imp.hpp	/^end_imp(key_const_reference r_key, detail::true_type)$/;"	f	class:PB_DS_CLASS_C_DEC
end_index	opencv2/core/types_c.h	/^    int  start_index, end_index;$/;"	m	struct:CvSlice
end_iterator	5/ext/pb_ds/detail/branch_policy/branch_policy.hpp	/^	end_iterator() const$/;"	f	struct:__gnu_pbds::detail::branch_policy
ensureSimpleDistance	opencv2/flann/dist.h	/^typename Distance::ResultType ensureSimpleDistance( typename Distance::ResultType dist )$/;"	f	namespace:cvflann
ensureSizeIsEnough	opencv2/core/cuda.inl.hpp	/^void ensureSizeIsEnough(Size size, int type, OutputArray arr)$/;"	f	namespace:cv::cuda
ensureSquareDistance	opencv2/flann/dist.h	/^typename Distance::ResultType ensureSquareDistance( typename Distance::ResultType dist )$/;"	f	namespace:cvflann
entry	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	/^      							entry;$/;"	t	class:__gnu_pbds::detail::binary_heap
entry	5/ext/pb_ds/detail/binary_heap_/entry_cmp.hpp	/^	typedef typename __rebind_v::other::const_pointer	entry;$/;"	t	struct:__gnu_pbds::detail::entry_cmp
entry	5/ext/pb_ds/detail/binary_heap_/entry_pred.hpp	/^	typedef typename __rebind_v::other::const_pointer	entry;$/;"	t	struct:__gnu_pbds::detail::entry_pred
entry	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      struct entry : public traits_base::stored_data_type$/;"	s	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
entry	5/ext/pb_ds/detail/cc_hash_table_map_/cond_key_dtor_entry_dealtor.hpp	/^      typedef typename HT_Map::entry 		entry;$/;"	t	class:__gnu_pbds::detail::cond_dealtor
entry	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      struct entry : public traits_base::stored_data_type$/;"	s	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
entry	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      struct entry$/;"	s	class:__gnu_pbds::detail::PB_DS_LU_NAME
entry	5/ext/pb_ds/detail/rc_binomial_heap_/rc.hpp	/^      typedef node_pointer 				 entry;$/;"	t	class:__gnu_pbds::detail::rc
entry_allocator	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	/^      							entry_allocator;$/;"	t	class:__gnu_pbds::detail::binary_heap
entry_allocator	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef typename _Alloc::template rebind<entry>::other entry_allocator;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
entry_allocator	5/ext/pb_ds/detail/cc_hash_table_map_/cond_key_dtor_entry_dealtor.hpp	/^      typedef typename HT_Map::entry_allocator 	entry_allocator;$/;"	t	class:__gnu_pbds::detail::cond_dealtor
entry_allocator	5/ext/pb_ds/detail/cond_dealtor.hpp	/^	typedef typename __rebind_e::other 		entry_allocator;$/;"	t	class:__gnu_pbds::detail::cond_dealtor
entry_allocator	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef typename _Alloc::template rebind<entry>::other entry_allocator;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
entry_allocator	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      typedef typename _Alloc::template rebind<entry>::other entry_allocator;$/;"	t	class:__gnu_pbds::detail::PB_DS_LU_NAME
entry_array	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef typename entry_allocator::pointer entry_array;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
entry_cmp	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	/^      typedef typename PB_DS_ENTRY_CMP_DEC 		entry_cmp;$/;"	t	class:__gnu_pbds::detail::binary_heap
entry_cmp	5/ext/pb_ds/detail/binary_heap_/entry_cmp.hpp	/^      struct entry_cmp<_VTp, Cmp_Fn, _Alloc, false>$/;"	s	namespace:__gnu_pbds::detail
entry_cmp	5/ext/pb_ds/detail/binary_heap_/entry_cmp.hpp	/^      struct entry_cmp<_VTp, Cmp_Fn, _Alloc, true>$/;"	s	namespace:__gnu_pbds::detail
entry_const_pointer	5/ext/pb_ds/detail/rc_binomial_heap_/rc.hpp	/^      typedef typename __rebind_np::other::const_pointer entry_const_pointer;$/;"	t	class:__gnu_pbds::detail::rc
entry_pointer	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	/^      typedef typename entry_allocator::pointer 	entry_pointer;$/;"	t	class:__gnu_pbds::detail::binary_heap
entry_pointer	5/ext/pb_ds/detail/binary_heap_/const_iterator.hpp	/^      typedef typename base_type::entry_pointer 	entry_pointer;$/;"	t	class:__gnu_pbds::detail::binary_heap_const_iterator_
entry_pointer	5/ext/pb_ds/detail/binary_heap_/point_const_iterator.hpp	/^      typedef typename _Alloc::template rebind<Entry>::other::pointer entry_pointer;$/;"	t	class:__gnu_pbds::detail::binary_heap_point_const_iterator_
entry_pointer	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef typename entry_allocator::pointer entry_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
entry_pointer	5/ext/pb_ds/detail/cond_dealtor.hpp	/^	typedef typename entry_allocator::pointer 	entry_pointer;$/;"	t	class:__gnu_pbds::detail::cond_dealtor
entry_pointer	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef typename entry_allocator::pointer entry_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
entry_pointer	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      typedef typename entry_allocator::pointer entry_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_LU_NAME
entry_pointer	5/ext/pb_ds/detail/rc_binomial_heap_/rc.hpp	/^      typedef typename __rebind_np::other::pointer 	 entry_pointer;$/;"	t	class:__gnu_pbds::detail::rc
entry_pointer_allocator	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef typename _Alloc::template rebind<entry_pointer>::other entry_pointer_allocator;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
entry_pointer_allocator	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      typedef typename _Alloc::template rebind<entry_pointer>::other entry_pointer_allocator;$/;"	t	class:__gnu_pbds::detail::PB_DS_LU_NAME
entry_pointer_array	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef typename entry_pointer_allocator::pointer entry_pointer_array;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
entry_pointer_array	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      typedef typename entry_pointer_allocator::pointer entry_pointer_array;$/;"	t	class:__gnu_pbds::detail::PB_DS_LU_NAME
entry_pred	5/ext/pb_ds/detail/binary_heap_/entry_pred.hpp	/^      struct entry_pred<_VTp, Pred, _Alloc, false>$/;"	s	namespace:__gnu_pbds::detail
entry_pred	5/ext/pb_ds/detail/binary_heap_/entry_pred.hpp	/^      struct entry_pred<_VTp, Pred, _Alloc, true>$/;"	s	namespace:__gnu_pbds::detail
entry_reference	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef typename entry_allocator::reference entry_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
entry_reference	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef typename entry_allocator::reference entry_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
entry_reference	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      typedef typename entry_allocator::reference entry_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_LU_NAME
entry_status	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      enum entry_status$/;"	g	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
eof	cpp_src/basic_ios.h	/^      eof() const$/;"	f	class:std::basic_ios
eof	cpp_src/char_traits.h	/^      eof()$/;"	f	struct:char_traits
eofbit	cpp_src/ios_base.h	/^    static const iostate eofbit =	_S_eofbit;$/;"	m	class:std::ios_base
eps	opencv2/objdetect.hpp	/^    double eps;$/;"	m	class:cv::SimilarRects
eps	opencv2/videostab/motion_core.hpp	/^    float eps; \/\/!< max outliers ratio$/;"	m	struct:cv::videostab::RansacParams
epsilon	opencv2/core/cuda/limits.hpp	/^    __device__ __forceinline__ static double epsilon() { return DBL_EPSILON; }$/;"	f	struct:cv::cuda::device::numeric_limits
epsilon	opencv2/core/cuda/limits.hpp	/^    __device__ __forceinline__ static float epsilon() { return FLT_EPSILON; }$/;"	f	struct:cv::cuda::device::numeric_limits
epsilon	opencv2/core/types.hpp	/^    double epsilon; \/\/ the desired accuracy$/;"	m	class:cv::TermCriteria
epsilon	opencv2/core/types_c.h	/^    double epsilon;$/;"	m	struct:CvTermCriteria
epsilon	opencv2/cudev/util/limits.hpp	/^    __device__ __forceinline__ static double epsilon() { return DBL_EPSILON; }$/;"	f	struct:cv::cudev::numeric_limits
epsilon	opencv2/cudev/util/limits.hpp	/^    __device__ __forceinline__ static float epsilon() { return FLT_EPSILON; }$/;"	f	struct:cv::cudev::numeric_limits
eq	cpp_src/char_traits.h	/^      eq(const char_type& __c1, const char_type& __c2)$/;"	f	struct:char_traits
eq_by_less	5/ext/pb_ds/detail/eq_fn/eq_by_less.hpp	/^    struct eq_by_less : private Cmp_Fn$/;"	s	namespace:__gnu_pbds::detail
eq_fn	5/ext/pb_ds/assoc_container.hpp	/^    typedef Eq_Fn 				eq_fn;$/;"	t	class:__gnu_pbds::cc_hash_table
eq_fn	5/ext/pb_ds/assoc_container.hpp	/^    typedef Eq_Fn 				eq_fn;$/;"	t	class:__gnu_pbds::gp_hash_table
eq_fn	5/ext/pb_ds/assoc_container.hpp	/^    typedef Eq_Fn 				eq_fn;$/;"	t	class:__gnu_pbds::list_update
eq_fn	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef Eq_Fn 				eq_fn;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
eq_fn	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef Eq_Fn 				eq_fn;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
eq_fn	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      typedef Eq_Fn eq_fn;$/;"	t	class:__gnu_pbds::detail::PB_DS_LU_NAME
eq_fn_base	5/ext/pb_ds/detail/eq_fn/hash_eq_fn.hpp	/^      typedef Eq_Fn 					   eq_fn_base;$/;"	t	struct:__gnu_pbds::detail::hash_eq_fn
eq_int_type	cpp_src/char_traits.h	/^      eq_int_type(const int_type& __c1, const int_type& __c2)$/;"	f	struct:char_traits
equal	cpp_src/stl_algobase.h	/^    equal(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	namespace:std
equal	cpp_src/streambuf_iterator.h	/^      equal(const istreambuf_iterator& __b) const$/;"	f	class:std::istreambuf_iterator
equal_keys	5/ext/pb_ds/detail/pat_trie_/synth_access_traits.hpp	/^    equal_keys(key_const_reference r_lhs_key,$/;"	f	class:__gnu_pbds::detail::PB_DS_SYNTH_E_ACCESS_TRAITS_C_DEC
equal_prefixes	5/ext/pb_ds/detail/pat_trie_/synth_access_traits.hpp	/^    equal_prefixes(const_iterator b_l, const_iterator e_l, const_iterator b_r,$/;"	f	class:__gnu_pbds::detail::PB_DS_SYNTH_E_ACCESS_TRAITS_C_DEC
equal_range	cpp_src/stl_algo.h	/^    equal_range(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std
equal_range	cpp_src/stl_map.h	/^      equal_range(const key_type& __x) const$/;"	f	class:std::map
equal_range	cpp_src/stl_map.h	/^      equal_range(const key_type& __x)$/;"	f	class:std::map
equal_range	cpp_src/stl_multimap.h	/^      equal_range(const key_type& __x) const$/;"	f	class:std::multimap
equal_range	cpp_src/stl_multimap.h	/^      equal_range(const key_type& __x)$/;"	f	class:std::multimap
equal_range	cpp_src/stl_multiset.h	/^      equal_range(const key_type& __x) const$/;"	f	class:std::multiset
equal_range	cpp_src/stl_multiset.h	/^      equal_range(const key_type& __x)$/;"	f	class:std::multiset
equal_range	cpp_src/stl_set.h	/^      equal_range(const key_type& __x) const$/;"	f	class:std::set
equal_range	cpp_src/stl_set.h	/^      equal_range(const key_type& __x)$/;"	f	class:std::set
equal_range	cpp_src/stl_tree.h	/^    equal_range(const _Key& __k) const$/;"	f	class:std::_Rb_tree
equal_range	cpp_src/stl_tree.h	/^    equal_range(const _Key& __k)$/;"	f	class:std::_Rb_tree
equal_split_tag	5/parallel/tags.h	/^  struct equal_split_tag : public find_tag { };$/;"	s	namespace:__gnu_parallel
equal_to	cpp_src/stl_function.h	/^    struct equal_to : public binary_function<_Tp, _Tp, bool>$/;"	s	namespace:std
equal_to	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ equal_to() {}$/;"	f	struct:cv::cuda::device::equal_to
equal_to	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ equal_to(const equal_to&) {}$/;"	f	struct:cv::cuda::device::equal_to
equal_to	opencv2/core/cuda/functional.hpp	/^    template <typename T> struct equal_to : binary_function<T, T, bool>$/;"	s	namespace:cv::cuda::device
equal_to	opencv2/cudev/functional/functional.hpp	/^template <typename T> struct equal_to : binary_function<T, T, typename MakeVec<uchar, VecTraits<T>::cn>::type>$/;"	s	namespace:cv::cudev
erase	5/ext/pb_ds/detail/binary_heap_/erase_fn_imps.hpp	/^erase(point_iterator it)$/;"	f	class:PB_DS_CLASS_C_DEC
erase	5/ext/pb_ds/detail/binomial_heap_base_/erase_fn_imps.hpp	/^erase(point_iterator it)$/;"	f	class:PB_DS_CLASS_C_DEC
erase	5/ext/pb_ds/detail/cc_hash_table_map_/erase_no_store_hash_fn_imps.hpp	/^erase(key_const_reference r_key)$/;"	f	class:PB_DS_CLASS_C_DEC
erase	5/ext/pb_ds/detail/gp_hash_table_map_/erase_fn_imps.hpp	/^erase(key_const_reference r_key)$/;"	f	class:PB_DS_CLASS_C_DEC
erase	5/ext/pb_ds/detail/list_update_map_/erase_fn_imps.hpp	/^erase(key_const_reference r_key)$/;"	f	class:PB_DS_CLASS_C_DEC
erase	5/ext/pb_ds/detail/ov_tree_map_/erase_fn_imps.hpp	/^erase(key_const_reference r_key)$/;"	f	class:PB_DS_CLASS_C_DEC
erase	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      erase(iterator it)$/;"	f	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
erase	5/ext/pb_ds/detail/pairing_heap_/erase_fn_imps.hpp	/^erase(point_iterator it)$/;"	f	class:PB_DS_CLASS_C_DEC
erase	5/ext/pb_ds/detail/pat_trie_/erase_fn_imps.hpp	/^erase(const_iterator it)$/;"	f	class:PB_DS_CLASS_C_DEC
erase	5/ext/pb_ds/detail/pat_trie_/erase_fn_imps.hpp	/^erase(const_reverse_iterator it)$/;"	f	class:PB_DS_CLASS_C_DEC
erase	5/ext/pb_ds/detail/pat_trie_/erase_fn_imps.hpp	/^erase(iterator it)$/;"	f	class:PB_DS_CLASS_C_DEC
erase	5/ext/pb_ds/detail/pat_trie_/erase_fn_imps.hpp	/^erase(key_const_reference r_key)$/;"	f	class:PB_DS_CLASS_C_DEC
erase	5/ext/pb_ds/detail/pat_trie_/erase_fn_imps.hpp	/^erase(reverse_iterator it)$/;"	f	class:PB_DS_CLASS_C_DEC
erase	5/ext/pb_ds/detail/rb_tree_map_/erase_fn_imps.hpp	/^erase(iterator it)$/;"	f	class:PB_DS_CLASS_C_DEC
erase	5/ext/pb_ds/detail/rb_tree_map_/erase_fn_imps.hpp	/^erase(key_const_reference r_key)$/;"	f	class:PB_DS_CLASS_C_DEC
erase	5/ext/pb_ds/detail/rb_tree_map_/erase_fn_imps.hpp	/^erase(reverse_iterator it)$/;"	f	class:PB_DS_CLASS_C_DEC
erase	5/ext/pb_ds/detail/rc_binomial_heap_/erase_fn_imps.hpp	/^erase(point_iterator it)$/;"	f	class:PB_DS_CLASS_C_DEC
erase	5/ext/pb_ds/detail/splay_tree_/erase_fn_imps.hpp	/^erase(iterator it)$/;"	f	class:PB_DS_CLASS_C_DEC
erase	5/ext/pb_ds/detail/splay_tree_/erase_fn_imps.hpp	/^erase(key_const_reference r_key)$/;"	f	class:PB_DS_CLASS_C_DEC
erase	5/ext/pb_ds/detail/splay_tree_/erase_fn_imps.hpp	/^erase(reverse_iterator it)$/;"	f	class:PB_DS_CLASS_C_DEC
erase	5/ext/pb_ds/detail/thin_heap_/erase_fn_imps.hpp	/^erase(point_iterator it)$/;"	f	class:PB_DS_CLASS_C_DEC
erase	cpp_src/basic_string.h	/^      erase(iterator __first, iterator __last)$/;"	f	class:std::basic_string
erase	cpp_src/basic_string.h	/^      erase(iterator __position)$/;"	f	class:std::basic_string
erase	cpp_src/basic_string.h	/^      erase(size_type __pos = 0, size_type __n = npos)$/;"	f	class:std::basic_string
erase	cpp_src/stl_bvector.h	/^    erase(iterator __first, iterator __last)$/;"	f	class:std::vector
erase	cpp_src/stl_bvector.h	/^    erase(iterator __position)$/;"	f	class:std::vector
erase	cpp_src/stl_list.h	/^      erase(iterator __first, iterator __last)$/;"	f	class:std::list
erase	cpp_src/stl_map.h	/^      erase(const key_type& __x)$/;"	f	class:std::map
erase	cpp_src/stl_map.h	/^      erase(iterator __first, iterator __last)$/;"	f	class:std::map
erase	cpp_src/stl_map.h	/^      erase(iterator __position)$/;"	f	class:std::map
erase	cpp_src/stl_multimap.h	/^      erase(const key_type& __x)$/;"	f	class:std::multimap
erase	cpp_src/stl_multimap.h	/^      erase(iterator __first, iterator __last)$/;"	f	class:std::multimap
erase	cpp_src/stl_multimap.h	/^      erase(iterator __position)$/;"	f	class:std::multimap
erase	cpp_src/stl_multiset.h	/^      erase(const key_type& __x)$/;"	f	class:std::multiset
erase	cpp_src/stl_multiset.h	/^      erase(iterator __first, iterator __last)$/;"	f	class:std::multiset
erase	cpp_src/stl_multiset.h	/^      erase(iterator __position)$/;"	f	class:std::multiset
erase	cpp_src/stl_set.h	/^      erase(const key_type& __x)$/;"	f	class:std::set
erase	cpp_src/stl_set.h	/^      erase(iterator __first, iterator __last)$/;"	f	class:std::set
erase	cpp_src/stl_set.h	/^      erase(iterator __position)$/;"	f	class:std::set
erase	cpp_src/stl_tree.h	/^    erase(const _Key& __x)$/;"	f	class:std::_Rb_tree
erase	cpp_src/stl_tree.h	/^    erase(const _Key* __first, const _Key* __last)$/;"	f	class:std::_Rb_tree
erase	cpp_src/stl_tree.h	/^    erase(const_iterator __first, const_iterator __last)$/;"	f	class:std::_Rb_tree
erase	cpp_src/stl_tree.h	/^    erase(const_iterator __position)$/;"	f	class:std::_Rb_tree
erase	cpp_src/stl_tree.h	/^    erase(iterator __first, iterator __last)$/;"	f	class:std::_Rb_tree
erase	cpp_src/stl_tree.h	/^    erase(iterator __position)$/;"	f	class:std::_Rb_tree
erase_all_valid_entries	5/ext/pb_ds/detail/gp_hash_table_map_/constructor_destructor_fn_imps.hpp	/^erase_all_valid_entries(entry_array a_entries_resized, size_type len)$/;"	f	class:PB_DS_CLASS_C_DEC
erase_at	5/ext/pb_ds/detail/binary_heap_/erase_fn_imps.hpp	/^erase_at(entry_pointer a_entries, size_type i, false_type)$/;"	f	class:PB_DS_CLASS_C_DEC
erase_at	5/ext/pb_ds/detail/binary_heap_/erase_fn_imps.hpp	/^erase_at(entry_pointer, size_type, true_type)$/;"	f	class:PB_DS_CLASS_C_DEC
erase_can_throw	5/ext/pb_ds/tag_and_trait.hpp	/^	erase_can_throw = base_type::erase_can_throw,$/;"	e	enum:__gnu_pbds::container_traits::__anon25
erase_can_throw	5/ext/pb_ds/tag_and_trait.hpp	/^	erase_can_throw = false,$/;"	e	enum:__gnu_pbds::container_traits_base::__anon13
erase_can_throw	5/ext/pb_ds/tag_and_trait.hpp	/^	erase_can_throw = false,$/;"	e	enum:__gnu_pbds::container_traits_base::__anon14
erase_can_throw	5/ext/pb_ds/tag_and_trait.hpp	/^	erase_can_throw = false,$/;"	e	enum:__gnu_pbds::container_traits_base::__anon15
erase_can_throw	5/ext/pb_ds/tag_and_trait.hpp	/^	erase_can_throw = false,$/;"	e	enum:__gnu_pbds::container_traits_base::__anon16
erase_can_throw	5/ext/pb_ds/tag_and_trait.hpp	/^	erase_can_throw = false,$/;"	e	enum:__gnu_pbds::container_traits_base::__anon18
erase_can_throw	5/ext/pb_ds/tag_and_trait.hpp	/^	erase_can_throw = false,$/;"	e	enum:__gnu_pbds::container_traits_base::__anon19
erase_can_throw	5/ext/pb_ds/tag_and_trait.hpp	/^	erase_can_throw = false,$/;"	e	enum:__gnu_pbds::container_traits_base::__anon20
erase_can_throw	5/ext/pb_ds/tag_and_trait.hpp	/^	erase_can_throw = false,$/;"	e	enum:__gnu_pbds::container_traits_base::__anon21
erase_can_throw	5/ext/pb_ds/tag_and_trait.hpp	/^	erase_can_throw = false,$/;"	e	enum:__gnu_pbds::container_traits_base::__anon22
erase_can_throw	5/ext/pb_ds/tag_and_trait.hpp	/^	erase_can_throw = false,$/;"	e	enum:__gnu_pbds::container_traits_base::__anon23
erase_can_throw	5/ext/pb_ds/tag_and_trait.hpp	/^	erase_can_throw = false,$/;"	e	enum:__gnu_pbds::container_traits_base::__anon24
erase_can_throw	5/ext/pb_ds/tag_and_trait.hpp	/^	erase_can_throw = true,$/;"	e	enum:__gnu_pbds::container_traits_base::__anon17
erase_entry	5/ext/pb_ds/detail/gp_hash_table_map_/erase_fn_imps.hpp	/^erase_entry(entry_pointer p_e)$/;"	f	class:PB_DS_CLASS_C_DEC
erase_entry_pointer	5/ext/pb_ds/detail/cc_hash_table_map_/erase_fn_imps.hpp	/^erase_entry_pointer(entry_pointer& r_p_e)$/;"	f	class:PB_DS_CLASS_C_DEC
erase_event	cpp_src/ios_base.h	/^      erase_event,$/;"	e	enum:std::ios_base::event
erase_existing	5/ext/pb_ds/detail/debug_map_base.hpp	/^    erase_existing(key_const_reference r_key)$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
erase_fixup	5/ext/pb_ds/detail/pat_trie_/erase_fn_imps.hpp	/^erase_fixup(inode_pointer p_nd)$/;"	f	class:PB_DS_CLASS_C_DEC
erase_if	5/ext/pb_ds/detail/binary_heap_/erase_fn_imps.hpp	/^erase_if(Pred pred)$/;"	f	class:PB_DS_CLASS_C_DEC
erase_if	5/ext/pb_ds/detail/binomial_heap_base_/erase_fn_imps.hpp	/^erase_if(Pred pred)$/;"	f	class:PB_DS_CLASS_C_DEC
erase_if	5/ext/pb_ds/detail/cc_hash_table_map_/erase_fn_imps.hpp	/^erase_if(Pred pred)$/;"	f	class:PB_DS_CLASS_C_DEC
erase_if	5/ext/pb_ds/detail/gp_hash_table_map_/erase_fn_imps.hpp	/^erase_if(Pred pred)$/;"	f	class:PB_DS_CLASS_C_DEC
erase_if	5/ext/pb_ds/detail/list_update_map_/erase_fn_imps.hpp	/^erase_if(Pred pred)$/;"	f	class:PB_DS_CLASS_C_DEC
erase_if	5/ext/pb_ds/detail/ov_tree_map_/erase_fn_imps.hpp	/^erase_if(Pred pred)$/;"	f	class:PB_DS_CLASS_C_DEC
erase_if	5/ext/pb_ds/detail/pairing_heap_/erase_fn_imps.hpp	/^erase_if(Pred pred)$/;"	f	class:PB_DS_CLASS_C_DEC
erase_if	5/ext/pb_ds/detail/pat_trie_/erase_fn_imps.hpp	/^erase_if(Pred pred)$/;"	f	class:PB_DS_CLASS_C_DEC
erase_if	5/ext/pb_ds/detail/rb_tree_map_/erase_fn_imps.hpp	/^erase_if(Pred pred)$/;"	f	class:PB_DS_CLASS_C_DEC
erase_if	5/ext/pb_ds/detail/rc_binomial_heap_/erase_fn_imps.hpp	/^erase_if(Pred pred)$/;"	f	class:PB_DS_CLASS_C_DEC
erase_if	5/ext/pb_ds/detail/splay_tree_/erase_fn_imps.hpp	/^erase_if(Pred pred)$/;"	f	class:PB_DS_CLASS_C_DEC
erase_if	5/ext/pb_ds/detail/thin_heap_/erase_fn_imps.hpp	/^erase_if(Pred pred)$/;"	f	class:PB_DS_CLASS_C_DEC
erase_imp	5/ext/pb_ds/detail/gp_hash_table_map_/erase_no_store_hash_fn_imps.hpp	/^erase_imp(key_const_reference r_key,  false_type)$/;"	f	class:PB_DS_CLASS_C_DEC
erase_imp	5/ext/pb_ds/detail/gp_hash_table_map_/erase_store_hash_fn_imps.hpp	/^erase_imp(key_const_reference r_key, true_type)$/;"	f	class:PB_DS_CLASS_C_DEC
erase_imp	5/ext/pb_ds/detail/ov_tree_map_/erase_fn_imps.hpp	/^erase_imp(It it)$/;"	f	class:PB_DS_CLASS_C_DEC
erase_in_pos_imp	5/ext/pb_ds/detail/cc_hash_table_map_/erase_no_store_hash_fn_imps.hpp	/^erase_in_pos_imp(key_const_reference r_key, size_type pos)$/;"	f	class:PB_DS_CLASS_C_DEC
erase_in_pos_imp	5/ext/pb_ds/detail/cc_hash_table_map_/erase_store_hash_fn_imps.hpp	/^erase_in_pos_imp(key_const_reference r_key, const comp_hash& r_pos_hash_pair)$/;"	f	class:PB_DS_CLASS_C_DEC
erase_leaf	5/ext/pb_ds/detail/pat_trie_/erase_fn_imps.hpp	/^erase_leaf(leaf_pointer p_l)$/;"	f	class:PB_DS_CLASS_C_DEC
erase_next	5/ext/pb_ds/detail/list_update_map_/erase_fn_imps.hpp	/^erase_next(entry_pointer p_l)$/;"	f	class:PB_DS_CLASS_C_DEC
erase_node	5/ext/pb_ds/detail/rb_tree_map_/erase_fn_imps.hpp	/^erase_node(node_pointer p_nd)$/;"	f	class:PB_DS_CLASS_C_DEC
erase_node	5/ext/pb_ds/detail/splay_tree_/erase_fn_imps.hpp	/^erase_node(node_pointer p_nd)$/;"	f	class:PB_DS_CLASS_C_DEC
erased_entry_status	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^	  erased_entry_status$/;"	e	enum:__gnu_pbds::detail::PB_DS_GP_HASH_NAME::entry_status
err	opencv2/calib3d/calib3d_c.h	/^    cv::Ptr<CvMat> err;$/;"	m	class:CvLevMarq
err	opencv2/core.hpp	/^    String err; \/\/\/< error description$/;"	m	class:cv::Exception
err	opencv2/core/types_c.h	/^    int  err;$/;"	m	struct:CvLineIterator
err	opencv2/imgproc.hpp	/^    int err, count;$/;"	m	class:cv::LineIterator
err1_	opencv2/stitching/detail/motion_estimators.hpp	/^    Mat err1_, err2_;$/;"	m	class:cv::detail::BundleAdjusterAffine
err1_	opencv2/stitching/detail/motion_estimators.hpp	/^    Mat err1_, err2_;$/;"	m	class:cv::detail::BundleAdjusterAffinePartial
err1_	opencv2/stitching/detail/motion_estimators.hpp	/^    Mat err1_, err2_;$/;"	m	class:cv::detail::BundleAdjusterRay
err1_	opencv2/stitching/detail/motion_estimators.hpp	/^    Mat err1_, err2_;$/;"	m	class:cv::detail::BundleAdjusterReproj
err2_	opencv2/stitching/detail/motion_estimators.hpp	/^    Mat err1_, err2_;$/;"	m	class:cv::detail::BundleAdjusterAffine
err2_	opencv2/stitching/detail/motion_estimators.hpp	/^    Mat err1_, err2_;$/;"	m	class:cv::detail::BundleAdjusterAffinePartial
err2_	opencv2/stitching/detail/motion_estimators.hpp	/^    Mat err1_, err2_;$/;"	m	class:cv::detail::BundleAdjusterRay
err2_	opencv2/stitching/detail/motion_estimators.hpp	/^    Mat err1_, err2_;$/;"	m	class:cv::detail::BundleAdjusterReproj
errNorm	opencv2/calib3d/calib3d_c.h	/^    double prevErrNorm, errNorm;$/;"	m	class:CvLevMarq
error	cpp_src/codecvt.h	/^      error,$/;"	e	enum:std::codecvt_base::result
errorCovPost	opencv2/video/tracking.hpp	/^    CV_PROP_RW Mat errorCovPost;       \/\/!< posteriori error estimate covariance matrix (P(k)): P(k)=(I-K(k)*H)*P'(k)$/;"	m	class:cv::KalmanFilter
errorCovPre	opencv2/video/tracking.hpp	/^    CV_PROP_RW Mat errorCovPre;        \/\/!< priori error estimate covariance matrix (P'(k)): P'(k)=A*P(k-1)*At + Q)*\/$/;"	m	class:cv::KalmanFilter
errorNoReturn	opencv2/core/base.hpp	/^CV_INLINE CV_NORETURN void errorNoReturn(int _code, const String& _err, const char* _func, const char* _file, int _line)$/;"	f	namespace:cv
error_cov_post	opencv2/video/tracking_c.h	/^    CvMat* error_cov_post;      \/* posteriori error estimate covariance matrix (P(k)):$/;"	m	struct:CvKalman
error_cov_pre	opencv2/video/tracking_c.h	/^    CvMat* error_cov_pre;       \/* priori error estimate covariance matrix (P'(k)):$/;"	m	struct:CvKalman
errors_	opencv2/videostab/optical_flow.hpp	/^    cuda::GpuMat frame0_, frame1_, flowX_, flowY_, errors_;$/;"	m	class:cv::videostab::DensePyrLkOptFlowEstimatorGpu
errors_	opencv2/videostab/optical_flow.hpp	/^    cuda::GpuMat frame0_, frame1_, points0_, points1_, status_, errors_;$/;"	m	class:cv::videostab::SparsePyrLkOptFlowEstimatorGpu
estimate	opencv2/stitching/detail/motion_estimators.hpp	/^    bool estimate(const std::vector<ImageFeatures> &, const std::vector<MatchesInfo> &,$/;"	f	class:cv::detail::NoBundleAdjuster
estimateBuildParams	opencv2/flann/autotuned_index.h	/^    IndexParams estimateBuildParams()$/;"	f	class:cvflann::AutotunedIndex
estimateSearchParams	opencv2/flann/autotuned_index.h	/^    float estimateSearchParams(SearchParams& searchParams)$/;"	f	class:cvflann::AutotunedIndex
evaluate_kdtree	opencv2/flann/autotuned_index.h	/^    void evaluate_kdtree(CostData& cost)$/;"	f	class:cvflann::AutotunedIndex
evaluate_kmeans	opencv2/flann/autotuned_index.h	/^    void evaluate_kmeans(CostData& cost)$/;"	f	class:cvflann::AutotunedIndex
event	cpp_src/ios_base.h	/^    enum event$/;"	g	class:std::ios_base
event_callback	cpp_src/ios_base.h	/^    typedef void (*event_callback) (event, ios_base&, int);$/;"	t	class:std::ios_base
exact_tag	5/parallel/tags.h	/^    exact_tag() { }$/;"	f	struct:__gnu_parallel::exact_tag
exact_tag	5/parallel/tags.h	/^    exact_tag(_ThreadIndex __num_threads)$/;"	f	struct:__gnu_parallel::exact_tag
exact_tag	5/parallel/tags.h	/^  struct exact_tag : public parallel_tag$/;"	s	namespace:__gnu_parallel
exception_ptr	5/bits/exception_ptr.h	/^    class exception_ptr$/;"	c	namespace:std::__exception_ptr
exceptions	cpp_src/basic_ios.h	/^      exceptions() const$/;"	f	class:std::basic_ios
exceptions	cpp_src/basic_ios.h	/^      exceptions(iostate __except)$/;"	f	class:std::basic_ios
exploreNodeBranches	opencv2/flann/kmeans_index.h	/^    int exploreNodeBranches(KMeansNodePtr node, const ElementType* q, DistanceType* domain_distances, Heap<BranchSt>* heap)$/;"	f	class:cvflann::KMeansIndex
exponent	opencv2/core/cvdef.h	/^        unsigned int exponent    : 5;$/;"	m	struct:Cv16suf::_fp16Format
exponent	opencv2/core/cvdef.h	/^        unsigned int exponent    : 8;$/;"	m	struct:Cv32suf::_fp32Format
exposureCompensator	opencv2/stitching.hpp	/^    Ptr<detail::ExposureCompensator> exposureCompensator() { return exposure_comp_; }$/;"	f	class:cv::Stitcher
exposureCompensator	opencv2/stitching.hpp	/^    const Ptr<detail::ExposureCompensator> exposureCompensator() const { return exposure_comp_; }$/;"	f	class:cv::Stitcher
exposure_comp_	opencv2/stitching.hpp	/^    Ptr<detail::ExposureCompensator> exposure_comp_;$/;"	m	class:cv::Stitcher
extended_I0	opencv2/cudalegacy.hpp	/^    GpuMat extended_I0;$/;"	m	class:cv::cuda::FastOpticalFlowBM
extended_I1	opencv2/cudalegacy.hpp	/^    GpuMat extended_I1;$/;"	m	class:cv::cuda::FastOpticalFlowBM
extern_type	cpp_src/codecvt.h	/^      typedef _ExternT			extern_type;$/;"	t	class:std::__codecvt_abstract_base
extern_type	cpp_src/codecvt.h	/^      typedef _ExternT			extern_type;$/;"	t	class:std::codecvt
extern_type	cpp_src/codecvt.h	/^      typedef char			extern_type;$/;"	t	class:std::codecvt
external_load_access	5/ext/pb_ds/hash_policy.hpp	/^	external_load_access = External_Load_Access$/;"	e	enum:__gnu_pbds::cc_hash_max_collision_check_resize_trigger::__anon27
external_load_access	5/ext/pb_ds/hash_policy.hpp	/^	external_load_access = External_Load_Access$/;"	e	enum:__gnu_pbds::hash_load_check_resize_trigger::__anon26
external_size_access	5/ext/pb_ds/hash_policy.hpp	/^	external_size_access = External_Size_Access$/;"	e	enum:__gnu_pbds::hash_standard_resize_policy::__anon28
extract_key	5/ext/pb_ds/detail/branch_policy/branch_policy.hpp	/^	extract_key(const_reference r_val)$/;"	f	struct:__gnu_pbds::detail::branch_policy
extract_key	5/ext/pb_ds/detail/pat_trie_/synth_access_traits.hpp	/^    extract_key(const_reference r_val)$/;"	f	class:__gnu_pbds::detail::PB_DS_SYNTH_E_ACCESS_TRAITS_C_DEC
extract_key	5/ext/pb_ds/detail/pat_trie_/synth_access_traits.hpp	/^    extract_key(const_reference r_val, false_type)$/;"	f	class:__gnu_pbds::detail::PB_DS_SYNTH_E_ACCESS_TRAITS_C_DEC
extract_key	5/ext/pb_ds/detail/pat_trie_/synth_access_traits.hpp	/^    extract_key(const_reference r_val, true_type)$/;"	f	class:__gnu_pbds::detail::PB_DS_SYNTH_E_ACCESS_TRAITS_C_DEC
extractor_	opencv2/stitching/detail/matchers.hpp	/^    Ptr<DescriptorExtractor> extractor_;$/;"	m	class:cv::detail::SurfFeaturesFinder
eye	opencv2/core/mat.inl.hpp	/^MatExpr Mat_<_Tp>::eye(Size sz)$/;"	f	class:cv::Mat_
eye	opencv2/core/mat.inl.hpp	/^MatExpr Mat_<_Tp>::eye(int rows, int cols)$/;"	f	class:cv::Mat_
eye	opencv2/core/matx.hpp	/^Matx<_Tp,m,n> Matx<_Tp,m,n>::eye()$/;"	f	class:cv::Matx
f	opencv2/core/cvdef.h	/^    double f;$/;"	m	union:Cv64suf
f	opencv2/core/cvdef.h	/^    float f;$/;"	m	union:Cv32suf
f	opencv2/core/types_c.h	/^        double f; \/**< scalar floating-point number *\/$/;"	m	union:CvFileNode::__anon330
facet	cpp_src/locale_classes.h	/^    facet(size_t __refs = 0) throw() : _M_refcount(__refs ? 1 : 0)$/;"	f	class:std::locale::facet
facet	cpp_src/locale_classes.h	/^  class locale::facet$/;"	c	class:std::locale
factor	5/ext/pb_ds/detail/binary_heap_/resize_policy.hpp	/^	  factor = 2$/;"	e	enum:__gnu_pbds::detail::resize_policy::__anon37
fail	cpp_src/basic_ios.h	/^      fail() const$/;"	f	class:std::basic_ios
failbit	cpp_src/ios_base.h	/^    static const iostate failbit =	_S_failbit;$/;"	m	class:std::ios_base
failed	cpp_src/streambuf_iterator.h	/^      failed() const throw()$/;"	f	class:std::ostreambuf_iterator
failure	cpp_src/ios_base.h	/^    class failure : public exception$/;"	c	class:std::ios_base
false_type	5/ext/pb_ds/detail/type_utils.hpp	/^    typedef std::tr1::integral_constant<int, 0> false_type;$/;"	t	namespace:__gnu_pbds::detail
falsename	cpp_src/locale_facets.h	/^      falsename() const$/;"	f	class:std::numpunct
featureType	opencv2/flann/miniflann.hpp	/^    int featureType;$/;"	m	class:cv::flann::Index
feature_size_	opencv2/flann/lsh_index.h	/^    unsigned int feature_size_;$/;"	m	class:cvflann::LshIndex
featuresFinder	opencv2/stitching.hpp	/^    Ptr<detail::FeaturesFinder> featuresFinder() { return features_finder_; }$/;"	f	class:cv::Stitcher
featuresFinder	opencv2/stitching.hpp	/^    const Ptr<detail::FeaturesFinder> featuresFinder() const { return features_finder_; }$/;"	f	class:cv::Stitcher
featuresMatcher	opencv2/stitching.hpp	/^    Ptr<detail::FeaturesMatcher> featuresMatcher() { return features_matcher_; }$/;"	f	class:cv::Stitcher
featuresMatcher	opencv2/stitching.hpp	/^    const Ptr<detail::FeaturesMatcher> featuresMatcher() const { return features_matcher_; }$/;"	f	class:cv::Stitcher
features_	opencv2/stitching.hpp	/^    std::vector<detail::ImageFeatures> features_;$/;"	m	class:cv::Stitcher
features_	opencv2/stitching/detail/motion_estimators.hpp	/^    const ImageFeatures *features_;$/;"	m	class:cv::detail::BundleAdjusterBase
features_finder_	opencv2/stitching.hpp	/^    Ptr<detail::FeaturesFinder> features_finder_;$/;"	m	class:cv::Stitcher
features_matcher_	opencv2/stitching.hpp	/^    Ptr<detail::FeaturesMatcher> features_matcher_;$/;"	m	class:cv::Stitcher
feclearexcept	5/fenv.h	43;"	d
feed	opencv2/stitching/detail/exposure_compensate.hpp	/^    void feed(const std::vector<Point> &\/*corners*\/, const std::vector<UMat> &\/*images*\/,$/;"	f	class:cv::detail::NoExposureCompensator
fegetenv	5/fenv.h	50;"	d
fegetexceptflag	5/fenv.h	44;"	d
fegetround	5/fenv.h	48;"	d
feholdexcept	5/fenv.h	51;"	d
feraiseexcept	5/fenv.h	45;"	d
fesetenv	5/fenv.h	52;"	d
fesetexceptflag	5/fenv.h	46;"	d
fesetround	5/fenv.h	49;"	d
fetestexcept	5/fenv.h	47;"	d
feupdateenv	5/fenv.h	53;"	d
field	cpp_src/locale_facets.h	/^    struct pattern { char field[4]; };$/;"	m	struct:std::money_base::pattern
file	opencv2/core.hpp	/^    String file; \/\/\/< source file name where the error has occured$/;"	m	class:cv::Exception
file_	opencv2/videostab/global_motion.hpp	/^    std::ifstream file_;$/;"	m	class:cv::videostab::FromFileMotionReader
file_	opencv2/videostab/global_motion.hpp	/^    std::ofstream file_;$/;"	m	class:cv::videostab::ToFileMotionWriter
fill	cpp_src/basic_ios.h	/^      fill() const$/;"	f	class:std::basic_ios
fill	cpp_src/basic_ios.h	/^      fill(char_type __ch)$/;"	f	class:std::basic_ios
fill	cpp_src/stl_algobase.h	/^        fill(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	struct:std::__fill
fill	cpp_src/stl_algobase.h	/^    fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)$/;"	f	namespace:std
fill	cpp_src/stl_algobase.h	/^  fill(char* __first, char* __last, const char& __c)$/;"	f	namespace:std
fill	cpp_src/stl_algobase.h	/^  fill(signed char* __first, signed char* __last, const signed char& __c)$/;"	f	namespace:std
fill	cpp_src/stl_algobase.h	/^  fill(unsigned char* __first, unsigned char* __last, const unsigned char& __c)$/;"	f	namespace:std
fill	cpp_src/stl_bvector.h	/^  fill(_Bit_iterator __first, _Bit_iterator __last, const bool& __x)$/;"	f	namespace:std
fill	opencv2/core/cuda/block.hpp	/^        static __device__ __forceinline__ void fill(It beg, It end, const T& value)$/;"	f	struct:cv::cuda::device::Block
fill	opencv2/core/cuda/warp.hpp	/^        static __device__ __forceinline__ void fill(It beg, It end, const T& value)$/;"	f	struct:cv::cuda::device::Warp
fill_minimal_n	5/parallel/settings.h	/^    _SequenceIndex              fill_minimal_n;$/;"	m	struct:__gnu_parallel::_Settings
fill_n	cpp_src/stl_algobase.h	/^        fill_n(_OutputIterator __first, _Size __n, const _Tp& __value)$/;"	f	struct:std::__fill_n
fill_n	cpp_src/stl_algobase.h	/^    fill_n(_OutputIterator __first, _Size __n, const _Tp& __value)$/;"	f	namespace:std
fill_n	cpp_src/stl_algobase.h	/^    fill_n(char* __first, _Size __n, const char& __c)$/;"	f	namespace:std
fill_n	cpp_src/stl_algobase.h	/^    fill_n(signed char* __first, _Size __n, const signed char& __c)$/;"	f	namespace:std
fill_n	cpp_src/stl_algobase.h	/^    fill_n(unsigned char* __first, _Size __n, const unsigned char& __c)$/;"	f	namespace:std
fill_xor_mask	opencv2/flann/lsh_index.h	/^    void fill_xor_mask(lsh::BucketKey key, int lowest_index, unsigned int level,$/;"	f	class:cvflann::LshIndex
filterByArea	opencv2/features2d.hpp	/^      CV_PROP_RW bool filterByArea;$/;"	m	struct:cv::SimpleBlobDetector::Params
filterByCircularity	opencv2/features2d.hpp	/^      CV_PROP_RW bool filterByCircularity;$/;"	m	struct:cv::SimpleBlobDetector::Params
filterByColor	opencv2/features2d.hpp	/^      CV_PROP_RW bool filterByColor;$/;"	m	struct:cv::SimpleBlobDetector::Params
filterByConvexity	opencv2/features2d.hpp	/^      CV_PROP_RW bool filterByConvexity;$/;"	m	struct:cv::SimpleBlobDetector::Params
filterByInertia	opencv2/features2d.hpp	/^      CV_PROP_RW bool filterByInertia;$/;"	m	struct:cv::SimpleBlobDetector::Params
finalFrame_	opencv2/videostab/stabilizer.hpp	/^    Mat finalFrame_;$/;"	m	class:cv::videostab::StabilizerBase
find	5/ext/pb_ds/detail/bin_search_tree_/find_fn_imps.hpp	/^find(key_const_reference r_key) const$/;"	f	class:PB_DS_CLASS_C_DEC
find	5/ext/pb_ds/detail/bin_search_tree_/find_fn_imps.hpp	/^find(key_const_reference r_key)$/;"	f	class:PB_DS_CLASS_C_DEC
find	5/ext/pb_ds/detail/cc_hash_table_map_/find_fn_imps.hpp	/^find(key_const_reference r_key) const$/;"	f	class:PB_DS_CLASS_C_DEC
find	5/ext/pb_ds/detail/cc_hash_table_map_/find_fn_imps.hpp	/^find(key_const_reference r_key)$/;"	f	class:PB_DS_CLASS_C_DEC
find	5/ext/pb_ds/detail/debug_map_base.hpp	/^    find(key_const_reference r_key) const$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
find	5/ext/pb_ds/detail/debug_map_base.hpp	/^    find(key_const_reference r_key)$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
find	5/ext/pb_ds/detail/gp_hash_table_map_/find_fn_imps.hpp	/^find(key_const_reference r_key) const$/;"	f	class:PB_DS_CLASS_C_DEC
find	5/ext/pb_ds/detail/gp_hash_table_map_/find_fn_imps.hpp	/^find(key_const_reference r_key)$/;"	f	class:PB_DS_CLASS_C_DEC
find	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      find(key_const_reference r_key) const$/;"	f	class:__gnu_pbds::detail::PB_DS_LU_NAME
find	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      find(key_const_reference r_key)$/;"	f	class:__gnu_pbds::detail::PB_DS_LU_NAME
find	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      find(key_const_reference r_key) const$/;"	f	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
find	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      find(key_const_reference r_key)$/;"	f	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
find	5/ext/pb_ds/detail/pat_trie_/find_fn_imps.hpp	/^find(key_const_reference r_key) const$/;"	f	class:PB_DS_CLASS_C_DEC
find	5/ext/pb_ds/detail/pat_trie_/find_fn_imps.hpp	/^find(key_const_reference r_key)$/;"	f	class:PB_DS_CLASS_C_DEC
find	5/ext/pb_ds/detail/splay_tree_/find_fn_imps.hpp	/^find(key_const_reference r_key) const$/;"	f	class:PB_DS_CLASS_C_DEC
find	5/ext/pb_ds/detail/splay_tree_/find_fn_imps.hpp	/^find(key_const_reference r_key)$/;"	f	class:PB_DS_CLASS_C_DEC
find	cpp_src/basic_string.h	/^      find(const _CharT* __s, size_type __pos = 0) const$/;"	f	class:std::basic_string
find	cpp_src/basic_string.h	/^      find(const basic_string& __str, size_type __pos = 0) const$/;"	f	class:std::basic_string
find	cpp_src/char_traits.h	/^    find(const char_type* __s, std::size_t __n, const char_type& __a)$/;"	f	class:char_traits
find	cpp_src/stl_algo.h	/^    find(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std
find	cpp_src/stl_map.h	/^      find(const key_type& __x) const$/;"	f	class:std::map
find	cpp_src/stl_map.h	/^      find(const key_type& __x)$/;"	f	class:std::map
find	cpp_src/stl_multimap.h	/^      find(const key_type& __x) const$/;"	f	class:std::multimap
find	cpp_src/stl_multimap.h	/^      find(const key_type& __x)$/;"	f	class:std::multimap
find	cpp_src/stl_multiset.h	/^      find(const key_type& __x) const$/;"	f	class:std::multiset
find	cpp_src/stl_multiset.h	/^      find(const key_type& __x)$/;"	f	class:std::multiset
find	cpp_src/stl_set.h	/^      find(const key_type& __x) const$/;"	f	class:std::set
find	cpp_src/stl_set.h	/^      find(const key_type& __x)$/;"	f	class:std::set
find	cpp_src/stl_tree.h	/^    find(const _Key& __k) const$/;"	f	class:std::_Rb_tree
find	cpp_src/stl_tree.h	/^    find(const _Key& __k)$/;"	f	class:std::_Rb_tree
find	cpp_src/streambuf_iterator.h	/^    find(istreambuf_iterator<_CharT> __first,$/;"	f	namespace:std
find	opencv2/core/cvstd.hpp	/^size_t String::find(char c, size_t pos) const$/;"	f	class:cv::String
find	opencv2/core/cvstd.hpp	/^size_t String::find(const String& str, size_t pos) const$/;"	f	class:cv::String
find	opencv2/core/cvstd.hpp	/^size_t String::find(const char* s, size_t pos) const$/;"	f	class:cv::String
find	opencv2/core/cvstd.hpp	/^size_t String::find(const char* s, size_t pos, size_t n) const$/;"	f	class:cv::String
find	opencv2/core/mat.inl.hpp	/^const _Tp* SparseMat::find(const int* idx, size_t* hashval) const$/;"	f	class:cv::SparseMat
find	opencv2/core/mat.inl.hpp	/^const _Tp* SparseMat::find(int i0, int i1, int i2, size_t* hashval) const$/;"	f	class:cv::SparseMat
find	opencv2/core/mat.inl.hpp	/^const _Tp* SparseMat::find(int i0, int i1, size_t* hashval) const$/;"	f	class:cv::SparseMat
find	opencv2/core/mat.inl.hpp	/^const _Tp* SparseMat::find(int i0, size_t* hashval) const$/;"	f	class:cv::SparseMat
find	opencv2/stitching/detail/seam_finders.hpp	/^    void find(const std::vector<UMat>&, const std::vector<Point>&, std::vector<UMat>&) {}$/;"	f	class:cv::detail::NoSeamFinder
findChild	opencv2/core/utility.hpp	/^    Node<OBJECT>* findChild(OBJECT& payload) const$/;"	f	class:cv::Node
findChild	opencv2/core/utility.hpp	/^    int findChild(Node<OBJECT> *pNode) const$/;"	f	class:cv::Node
findExactNN	opencv2/flann/kmeans_index.h	/^    void findExactNN(KMeansNodePtr node, ResultSet<DistanceType>& result, const ElementType* vec)$/;"	f	class:cvflann::KMeansIndex
findNN	opencv2/flann/hierarchical_clustering_index.h	/^    void findNN(NodePtr node, ResultSet<DistanceType>& result, const ElementType* vec, int& checks, int maxChecks,$/;"	f	class:cvflann::HierarchicalClusteringIndex
findNN	opencv2/flann/kmeans_index.h	/^    void findNN(KMeansNodePtr node, ResultSet<DistanceType>& result, const ElementType* vec, int& checks, int maxChecks,$/;"	f	class:cvflann::KMeansIndex
findNeighbors	opencv2/flann/autotuned_index.h	/^    virtual void findNeighbors(ResultSet<DistanceType>& result, const ElementType* vec, const SearchParams& searchParams)$/;"	f	class:cvflann::AutotunedIndex
findNeighbors	opencv2/flann/composite_index.h	/^    void findNeighbors(ResultSet<DistanceType>& result, const ElementType* vec, const SearchParams& searchParams)$/;"	f	class:cvflann::CompositeIndex
findNeighbors	opencv2/flann/flann_base.hpp	/^    void findNeighbors(ResultSet<DistanceType>& result, const ElementType* vec, const SearchParams& searchParams)$/;"	f	class:cvflann::Index
findNeighbors	opencv2/flann/hierarchical_clustering_index.h	/^    void findNeighbors(ResultSet<DistanceType>& result, const ElementType* vec, const SearchParams& searchParams)$/;"	f	class:cvflann::HierarchicalClusteringIndex
findNeighbors	opencv2/flann/kdtree_index.h	/^    void findNeighbors(ResultSet<DistanceType>& result, const ElementType* vec, const SearchParams& searchParams)$/;"	f	class:cvflann::KDTreeIndex
findNeighbors	opencv2/flann/kdtree_single_index.h	/^    void findNeighbors(ResultSet<DistanceType>& result, const ElementType* vec, const SearchParams& searchParams)$/;"	f	class:cvflann::KDTreeSingleIndex
findNeighbors	opencv2/flann/kmeans_index.h	/^    void findNeighbors(ResultSet<DistanceType>& result, const ElementType* vec, const SearchParams& searchParams)$/;"	f	class:cvflann::KMeansIndex
findNeighbors	opencv2/flann/linear_index.h	/^    void findNeighbors(ResultSet<DistanceType>& resultSet, const ElementType* vec, const SearchParams& \/*searchParams*\/)$/;"	f	class:cvflann::LinearIndex
findNeighbors	opencv2/flann/lsh_index.h	/^    void findNeighbors(ResultSet<DistanceType>& result, const ElementType* vec, const SearchParams& \/*searchParams*\/)$/;"	f	class:cvflann::LshIndex
find_algorithm	5/parallel/settings.h	/^    _FindAlgorithm              find_algorithm;$/;"	m	struct:__gnu_parallel::_Settings
find_by_order	5/ext/pb_ds/detail/tree_policy/order_statistics_imp.hpp	/^find_by_order(size_type order) const$/;"	f	class:PB_DS_CLASS_C_DEC
find_by_order	5/ext/pb_ds/detail/tree_policy/order_statistics_imp.hpp	/^find_by_order(size_type order)$/;"	f	class:PB_DS_CLASS_C_DEC
find_by_order	5/ext/pb_ds/detail/trie_policy/order_statistics_imp.hpp	/^find_by_order(size_type order) const$/;"	f	class:PB_DS_CLASS_C_DEC
find_by_order	5/ext/pb_ds/detail/trie_policy/order_statistics_imp.hpp	/^find_by_order(size_type order)$/;"	f	class:PB_DS_CLASS_C_DEC
find_end	5/ext/pb_ds/detail/cc_hash_table_map_/find_fn_imps.hpp	/^find_end() const$/;"	f	class:PB_DS_CLASS_C_DEC
find_end	5/ext/pb_ds/detail/cc_hash_table_map_/find_fn_imps.hpp	/^find_end()$/;"	f	class:PB_DS_CLASS_C_DEC
find_end	5/ext/pb_ds/detail/gp_hash_table_map_/find_fn_imps.hpp	/^find_end() const$/;"	f	class:PB_DS_CLASS_C_DEC
find_end	5/ext/pb_ds/detail/gp_hash_table_map_/find_fn_imps.hpp	/^find_end()$/;"	f	class:PB_DS_CLASS_C_DEC
find_end	cpp_src/stl_algo.h	/^    find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1,$/;"	f	namespace:std
find_first_not_of	cpp_src/basic_string.h	/^      find_first_not_of(const _CharT* __s, size_type __pos = 0) const$/;"	f	class:std::basic_string
find_first_not_of	cpp_src/basic_string.h	/^      find_first_not_of(const basic_string& __str, size_type __pos = 0) const$/;"	f	class:std::basic_string
find_first_of	cpp_src/basic_string.h	/^      find_first_of(_CharT __c, size_type __pos = 0) const$/;"	f	class:std::basic_string
find_first_of	cpp_src/basic_string.h	/^      find_first_of(const _CharT* __s, size_type __pos = 0) const$/;"	f	class:std::basic_string
find_first_of	cpp_src/basic_string.h	/^      find_first_of(const basic_string& __str, size_type __pos = 0) const$/;"	f	class:std::basic_string
find_first_of	cpp_src/stl_algo.h	/^    find_first_of(_InputIterator __first1, _InputIterator __last1,$/;"	f	namespace:std
find_first_of	opencv2/core/cvstd.hpp	/^size_t String::find_first_of(char c, size_t pos) const$/;"	f	class:cv::String
find_first_of	opencv2/core/cvstd.hpp	/^size_t String::find_first_of(const String& str, size_t pos) const$/;"	f	class:cv::String
find_first_of	opencv2/core/cvstd.hpp	/^size_t String::find_first_of(const char* s, size_t pos) const$/;"	f	class:cv::String
find_first_of	opencv2/core/cvstd.hpp	/^size_t String::find_first_of(const char* s, size_t pos, size_t n) const$/;"	f	class:cv::String
find_if	cpp_src/stl_algo.h	/^    find_if(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std
find_imp	5/ext/pb_ds/detail/list_update_map_/find_fn_imps.hpp	/^find_imp(key_const_reference r_key) const$/;"	f	class:PB_DS_CLASS_C_DEC
find_imp	5/ext/pb_ds/detail/pat_trie_/find_fn_imps.hpp	/^find_imp(key_const_reference r_key)$/;"	f	class:PB_DS_CLASS_C_DEC
find_imp	5/ext/pb_ds/detail/splay_tree_/find_fn_imps.hpp	/^find_imp(key_const_reference r_key) const$/;"	f	class:PB_DS_CLASS_C_DEC
find_imp	5/ext/pb_ds/detail/splay_tree_/find_fn_imps.hpp	/^find_imp(key_const_reference r_key)$/;"	f	class:PB_DS_CLASS_C_DEC
find_increasing_factor	5/parallel/settings.h	/^    double                      find_increasing_factor;$/;"	m	struct:__gnu_parallel::_Settings
find_initial_block_size	5/parallel/settings.h	/^    _SequenceIndex              find_initial_block_size;$/;"	m	struct:__gnu_parallel::_Settings
find_ins_pos	5/ext/pb_ds/detail/gp_hash_table_map_/insert_no_store_hash_fn_imps.hpp	/^find_ins_pos(key_const_reference r_key, false_type)$/;"	f	class:PB_DS_CLASS_C_DEC
find_ins_pos	5/ext/pb_ds/detail/gp_hash_table_map_/insert_store_hash_fn_imps.hpp	/^find_ins_pos(key_const_reference r_key, true_type)$/;"	f	class:PB_DS_CLASS_C_DEC
find_join_pos_left	5/ext/pb_ds/detail/rb_tree_map_/split_join_fn_imps.hpp	/^find_join_pos_left(node_pointer p_r, size_type h_l, size_type h_r)$/;"	f	class:PB_DS_CLASS_C_DEC
find_join_pos_right	5/ext/pb_ds/detail/rb_tree_map_/split_join_fn_imps.hpp	/^find_join_pos_right(node_pointer p_l, size_type h_l, size_type h_r)$/;"	f	class:PB_DS_CLASS_C_DEC
find_key_pointer	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      find_key_pointer(key_const_reference r_key, false_type)$/;"	f	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
find_key_pointer	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      find_key_pointer(key_const_reference r_key, true_type)$/;"	f	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
find_key_pointer	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      find_key_pointer(key_const_reference key, false_type)$/;"	f	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
find_key_pointer	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      find_key_pointer(key_const_reference key, true_type)$/;"	f	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
find_last_not_of	cpp_src/basic_string.h	/^      find_last_not_of(const _CharT* __s, size_type __pos = npos) const$/;"	f	class:std::basic_string
find_last_not_of	cpp_src/basic_string.h	/^      find_last_not_of(const basic_string& __str, size_type __pos = npos) const$/;"	f	class:std::basic_string
find_last_of	cpp_src/basic_string.h	/^      find_last_of(_CharT __c, size_type __pos = npos) const$/;"	f	class:std::basic_string
find_last_of	cpp_src/basic_string.h	/^      find_last_of(const _CharT* __s, size_type __pos = npos) const$/;"	f	class:std::basic_string
find_last_of	cpp_src/basic_string.h	/^      find_last_of(const basic_string& __str, size_type __pos = npos) const$/;"	f	class:std::basic_string
find_last_of	opencv2/core/cvstd.hpp	/^size_t String::find_last_of(char c, size_t pos) const$/;"	f	class:cv::String
find_last_of	opencv2/core/cvstd.hpp	/^size_t String::find_last_of(const String& str, size_t pos) const$/;"	f	class:cv::String
find_last_of	opencv2/core/cvstd.hpp	/^size_t String::find_last_of(const char* s, size_t pos) const$/;"	f	class:cv::String
find_last_of	opencv2/core/cvstd.hpp	/^size_t String::find_last_of(const char* s, size_t pos, size_t n) const$/;"	f	class:cv::String
find_max	5/ext/pb_ds/detail/binomial_heap_base_/find_fn_imps.hpp	/^find_max()$/;"	f	class:PB_DS_CLASS_C_DEC
find_maximum_block_size	5/parallel/settings.h	/^    _SequenceIndex              find_maximum_block_size;$/;"	m	struct:__gnu_parallel::_Settings
find_nearest	opencv2/flann/ground_truth.h	/^void find_nearest(const Matrix<typename Distance::ElementType>& dataset, typename Distance::ElementType* query, int* matches, int nn,$/;"	f	namespace:cvflann
find_scale_factor	5/parallel/settings.h	/^    float                       find_scale_factor;$/;"	m	struct:__gnu_parallel::_Settings
find_sequential_search_size	5/parallel/settings.h	/^    _SequenceIndex              find_sequential_search_size;$/;"	m	struct:__gnu_parallel::_Settings
find_tag	5/parallel/tags.h	/^  struct find_tag { };$/;"	s	namespace:__gnu_parallel
first	cpp_src/stl_pair.h	/^      _T1 first;                 \/\/\/< @c first is a copy of the first object$/;"	m	struct:std::pair
first	opencv2/core/core_c.h	/^    static CvTypeInfo* first;$/;"	m	struct:CvType
firstCall_	opencv2/superres.hpp	/^            bool firstCall_;$/;"	m	class:cv::superres::SuperResolution
firstEdge	opencv2/imgproc.hpp	/^        int firstEdge;$/;"	m	struct:cv::Subdiv2D::Vertex
first_argument_type	cpp_src/stl_function.h	/^      typedef _Arg1 first_argument_type;   \/\/\/< the type of the first argument$/;"	t	struct:std::binary_function
first_argument_type	opencv2/cudev/functional/functional.hpp	/^    typedef _Arg1   first_argument_type;$/;"	t	struct:cv::cudev::binary_function
first_type	cpp_src/stl_pair.h	/^      typedef _T1 first_type;    \/\/\/<  @c first_type is the first bound type$/;"	t	struct:std::pair
fisheye	opencv2/calib3d.hpp	/^namespace fisheye$/;"	n	namespace:cv
fix	5/ext/pb_ds/detail/binary_heap_/insert_fn_imps.hpp	/^fix(entry_pointer p_e)$/;"	f	class:PB_DS_CLASS_C_DEC
fix	5/ext/pb_ds/detail/binomial_heap_base_/insert_fn_imps.hpp	/^fix(node_pointer p_nd) const$/;"	f	class:PB_DS_CLASS_C_DEC
fix	5/ext/pb_ds/detail/thin_heap_/insert_fn_imps.hpp	/^fix(node_pointer p_y)$/;"	f	class:PB_DS_CLASS_C_DEC
fix_child	5/ext/pb_ds/detail/thin_heap_/insert_fn_imps.hpp	/^fix_child(node_pointer p_y)$/;"	f	class:PB_DS_CLASS_C_DEC
fix_root	5/ext/pb_ds/detail/thin_heap_/insert_fn_imps.hpp	/^fix_root(node_pointer p_y)$/;"	f	class:PB_DS_CLASS_C_DEC
fix_sibling_general_marked	5/ext/pb_ds/detail/thin_heap_/insert_fn_imps.hpp	/^fix_sibling_general_marked(node_pointer p_y)$/;"	f	class:PB_DS_CLASS_C_DEC
fix_sibling_general_unmarked	5/ext/pb_ds/detail/thin_heap_/insert_fn_imps.hpp	/^fix_sibling_general_unmarked(node_pointer p_y)$/;"	f	class:PB_DS_CLASS_C_DEC
fix_sibling_rank_1_marked	5/ext/pb_ds/detail/thin_heap_/insert_fn_imps.hpp	/^fix_sibling_rank_1_marked(node_pointer p_y)$/;"	f	class:PB_DS_CLASS_C_DEC
fix_sibling_rank_1_unmarked	5/ext/pb_ds/detail/thin_heap_/insert_fn_imps.hpp	/^fix_sibling_rank_1_unmarked(node_pointer p_y)$/;"	f	class:PB_DS_CLASS_C_DEC
fixed	cpp_src/ios_base.h	/^    static const fmtflags fixed =       _S_fixed;$/;"	m	class:std::ios_base
fixed	cpp_src/ios_base.h	/^  fixed(ios_base& __base)$/;"	f	namespace:std
fl	opencv2/core/types_c.h	/^        float* fl;$/;"	m	union:CvMat::__anon325
fl	opencv2/core/types_c.h	/^        float* fl;$/;"	m	union:CvMatND::__anon328
flag_	opencv2/videostab/fast_marching.hpp	/^    cv::Mat_<uchar> flag_; \/\/ flag map$/;"	m	class:cv::videostab::FastMarchingMethod
flags	cpp_src/ios_base.h	/^    flags() const { return _M_flags; }$/;"	f	class:std::ios_base
flags	cpp_src/ios_base.h	/^    flags(fmtflags __fmtfl)$/;"	f	class:std::ios_base
flags	opencv2/core/cuda.hpp	/^    int flags;$/;"	m	class:cv::cuda::GpuMat
flags	opencv2/core/cuda.hpp	/^    int flags;$/;"	m	class:cv::cuda::HostMem
flags	opencv2/core/mat.hpp	/^    int flags;$/;"	m	class:cv::Mat
flags	opencv2/core/mat.hpp	/^    int flags;$/;"	m	class:cv::MatExpr
flags	opencv2/core/mat.hpp	/^    int flags;$/;"	m	class:cv::SparseMat
flags	opencv2/core/mat.hpp	/^    int flags;$/;"	m	class:cv::UMat
flags	opencv2/core/mat.hpp	/^    int flags;$/;"	m	class:cv::_InputArray
flags	opencv2/core/mat.hpp	/^    int flags;$/;"	m	struct:cv::UMatData
flags	opencv2/core/ocl.hpp	/^    int flags;$/;"	m	class:cv::ocl::KernelArg
flags	opencv2/core/private.hpp	/^    int        flags;$/;"	m	class:cv::instr::InstrStruct
flags	opencv2/core/types_c.h	/^    int flags; \/**< not used *\/$/;"	m	struct:CvTypeInfo
flags	opencv2/features2d.hpp	/^    int flags;$/;"	m	class:cv::BOWKMeansTrainer
flags	opencv2/objdetect/objdetect_c.h	/^    int  flags;$/;"	m	struct:CvHaarClassifierCascade
flann	opencv2/flann.hpp	/^namespace flann$/;"	n	namespace:cv
flann	opencv2/flann/miniflann.hpp	/^namespace flann$/;"	n	namespace:cv
flannIndex	opencv2/features2d.hpp	/^    Ptr<flann::Index> flannIndex;$/;"	m	class:cv::FlannBasedMatcher
flann_algorithm_t	opencv2/flann/defines.h	/^enum flann_algorithm_t$/;"	g	namespace:cvflann
flann_centers_init_t	opencv2/flann/defines.h	/^enum flann_centers_init_t$/;"	g	namespace:cvflann
flann_datatype_t	opencv2/flann/defines.h	/^enum flann_datatype_t$/;"	g	namespace:cvflann
flann_distance_t	opencv2/flann/defines.h	/^enum flann_distance_t$/;"	g	namespace:cvflann
flann_log_level_t	opencv2/flann/defines.h	/^enum flann_log_level_t$/;"	g	namespace:cvflann
flattenedThreadId	opencv2/core/cuda/block.hpp	/^        static __device__ __forceinline__ int flattenedThreadId()$/;"	f	struct:cv::cuda::device::Block
flip	cpp_src/stl_bvector.h	/^    flip()$/;"	f	class:std::vector
flip	cpp_src/stl_bvector.h	/^    flip()$/;"	f	struct:std::_Bit_reference
float_type	opencv2/core/affine.hpp	/^        typedef T float_type;$/;"	t	class:cv::Affine3
floatfield	cpp_src/ios_base.h	/^    static const fmtflags floatfield =  _S_floatfield;$/;"	m	class:std::ios_base
flowErrorThreshold	opencv2/videostab/inpainting.hpp	/^    float flowErrorThreshold() const { return flowErrorThreshold_; }$/;"	f	class:cv::videostab::MotionInpainter
flowErrorThreshold_	opencv2/videostab/inpainting.hpp	/^    float flowErrorThreshold_;$/;"	m	class:cv::videostab::MotionInpainter
flowErrors_	opencv2/videostab/inpainting.hpp	/^    Mat_<float> flowX_, flowY_, flowErrors_;$/;"	m	class:cv::videostab::MotionInpainter
flowMask_	opencv2/videostab/inpainting.hpp	/^    Mat_<uchar> flowMask_;$/;"	m	class:cv::videostab::MotionInpainter
flowX_	opencv2/videostab/inpainting.hpp	/^    Mat_<float> flowX_, flowY_, flowErrors_;$/;"	m	class:cv::videostab::MotionInpainter
flowX_	opencv2/videostab/optical_flow.hpp	/^    cuda::GpuMat frame0_, frame1_, flowX_, flowY_, errors_;$/;"	m	class:cv::videostab::DensePyrLkOptFlowEstimatorGpu
flowY_	opencv2/videostab/inpainting.hpp	/^    Mat_<float> flowX_, flowY_, flowErrors_;$/;"	m	class:cv::videostab::MotionInpainter
flowY_	opencv2/videostab/optical_flow.hpp	/^    cuda::GpuMat frame0_, frame1_, flowX_, flowY_, errors_;$/;"	m	class:cv::videostab::DensePyrLkOptFlowEstimatorGpu
fmm_	opencv2/videostab/inpainting.hpp	/^    FastMarchingMethod fmm_;$/;"	m	class:cv::videostab::ColorAverageInpainter
fmm_	opencv2/videostab/inpainting.hpp	/^    FastMarchingMethod fmm_;$/;"	m	class:cv::videostab::MotionInpainter
fmt	opencv2/core/affine.hpp	/^               fmt          = DataType<channel_type>::fmt + ((channels - 1) << 8),$/;"	e	enum:cv::DataType::__anon316
fmt	opencv2/core/cvdef.h	/^    } fmt;$/;"	m	union:Cv16suf	typeref:struct:Cv16suf::_fp16Format
fmt	opencv2/core/cvdef.h	/^    } fmt;$/;"	m	union:Cv32suf	typeref:struct:Cv32suf::_fp32Format
fmt	opencv2/core/cvstd.inl.hpp	/^           fmt          = DataType<channel_type>::fmt + ((channels - 1) << 8),$/;"	e	enum:cv::DataType::__anon301
fmt	opencv2/core/matx.hpp	/^           fmt          = DataType<channel_type>::fmt + ((channels - 1) << 8),$/;"	e	enum:cv::DataType::__anon121
fmt	opencv2/core/matx.hpp	/^           fmt          = DataType<channel_type>::fmt + ((channels - 1) << 8),$/;"	e	enum:cv::DataType::__anon123
fmt	opencv2/core/traits.hpp	/^           fmt          = (int)'c',$/;"	e	enum:cv::DataType::__anon285
fmt	opencv2/core/traits.hpp	/^           fmt          = (int)'c',$/;"	e	enum:cv::DataType::__anon286
fmt	opencv2/core/traits.hpp	/^           fmt          = (int)'d',$/;"	e	enum:cv::DataType::__anon291
fmt	opencv2/core/traits.hpp	/^           fmt          = (int)'f',$/;"	e	enum:cv::DataType::__anon290
fmt	opencv2/core/traits.hpp	/^           fmt          = (int)'i',$/;"	e	enum:cv::DataType::__anon289
fmt	opencv2/core/traits.hpp	/^           fmt          = (int)'s',$/;"	e	enum:cv::DataType::__anon288
fmt	opencv2/core/traits.hpp	/^           fmt          = (int)'u',$/;"	e	enum:cv::DataType::__anon283
fmt	opencv2/core/traits.hpp	/^           fmt          = (int)'u',$/;"	e	enum:cv::DataType::__anon284
fmt	opencv2/core/traits.hpp	/^           fmt          = (int)'w',$/;"	e	enum:cv::DataType::__anon287
fmt	opencv2/core/traits.hpp	/^           fmt          = 0,$/;"	e	enum:cv::DataType::__anon282
fmt	opencv2/core/traits.hpp	/^        fmt   = DataType<_Tp>::fmt$/;"	e	enum:cv::DataDepth::__anon292
fmt	opencv2/core/types.hpp	/^           fmt          = DataType<channel_type>::fmt + ((channels - 1) << 8),$/;"	e	enum:cv::DataType::__anon302
fmt	opencv2/core/types.hpp	/^           fmt          = DataType<channel_type>::fmt + ((channels - 1) << 8),$/;"	e	enum:cv::DataType::__anon303
fmt	opencv2/core/types.hpp	/^           fmt          = DataType<channel_type>::fmt + ((channels - 1) << 8),$/;"	e	enum:cv::DataType::__anon304
fmt	opencv2/core/types.hpp	/^           fmt          = DataType<channel_type>::fmt + ((channels - 1) << 8),$/;"	e	enum:cv::DataType::__anon305
fmt	opencv2/core/types.hpp	/^           fmt          = DataType<channel_type>::fmt + ((channels - 1) << 8),$/;"	e	enum:cv::DataType::__anon306
fmt	opencv2/core/types.hpp	/^           fmt          = DataType<channel_type>::fmt + ((channels - 1) << 8),$/;"	e	enum:cv::DataType::__anon307
fmt	opencv2/core/types.hpp	/^           fmt          = DataType<channel_type>::fmt + ((channels - 1) << 8),$/;"	e	enum:cv::DataType::__anon308
fmt	opencv2/core/types.hpp	/^           fmt          = DataType<channel_type>::fmt + ((channels - 1) << 8),$/;"	e	enum:cv::DataType::__anon309
fmt	opencv2/core/types.hpp	/^           fmt          = DataType<channel_type>::fmt + ((channels - 1) << 8),$/;"	e	enum:cv::DataType::__anon310
fmt	opencv2/core/types.hpp	/^           fmt          = DataType<channel_type>::fmt + ((channels - 1) << 8),$/;"	e	enum:cv::DataType::__anon311
fmt	opencv2/core/types.hpp	/^           fmt          = DataType<channel_type>::fmt + ((channels - 1) << 8),$/;"	e	enum:cv::DataType::__anon312
fmt	opencv2/cudev/util/vec_traits.hpp	/^           fmt          = (int)'i',$/;"	e	enum:cv::DataType::__anon475
fmt	opencv2/cudev/util/vec_traits.hpp	/^           fmt          = DataType<channel_type>::fmt + ((channels - 1) << 8),$/;"	e	enum:cv::DataType::__anon476
fmt	opencv2/cudev/util/vec_traits.hpp	/^           fmt          = DataType<channel_type>::fmt + ((channels - 1) << 8),$/;"	e	enum:cv::DataType::__anon477
fmt	opencv2/cudev/util/vec_traits.hpp	/^           fmt          = DataType<channel_type>::fmt + ((channels - 1) << 8),$/;"	e	enum:cv::DataType::__anon478
fmt	opencv2/cudev/util/vec_traits.hpp	/^           fmt          = DataType<channel_type>::fmt + ((channels - 1) << 8),$/;"	e	enum:cv::DataType::__anon479
fmtflags	cpp_src/ios_base.h	/^    typedef _Ios_Fmtflags fmtflags;$/;"	t	class:std::ios_base
focal	opencv2/stitching/detail/camera.hpp	/^    double focal; \/\/ Focal length$/;"	m	struct:cv::detail::CameraParams
font_face	opencv2/highgui.hpp	/^    int         font_face; \/\/!< See cv::QtFontStyles$/;"	m	struct:cv::QtFont
font_face	opencv2/imgproc/imgproc_c.h	/^    int         font_face;    \/\/Qt: bool italic         \/** =CV_FONT_* *\/$/;"	m	struct:CvFont
forEach	opencv2/core/mat.inl.hpp	/^void Mat::forEach(const Functor& operation) const {$/;"	f	class:cv::Mat
forEach	opencv2/core/mat.inl.hpp	/^void Mat::forEach(const Functor& operation) {$/;"	f	class:cv::Mat
forEach	opencv2/core/mat.inl.hpp	/^void Mat_<_Tp>::forEach(const Functor& operation) const {$/;"	f	class:cv::Mat_
forEach	opencv2/core/mat.inl.hpp	/^void Mat_<_Tp>::forEach(const Functor& operation) {$/;"	f	class:cv::Mat_
forEach	opencv2/stitching/detail/util_inl.hpp	/^B Graph::forEach(B body) const$/;"	f	class:cv::detail::Graph
forEach_impl	opencv2/core/utility.hpp	/^void Mat::forEach_impl(const Functor& operation) {$/;"	f	class:cv::Mat
for_each	cpp_src/stl_algo.h	/^    for_each(_InputIterator __first, _InputIterator __last, _Function __f)$/;"	f	namespace:std
for_each_minimal_n	5/parallel/settings.h	/^    _SequenceIndex              for_each_minimal_n;$/;"	m	struct:__gnu_parallel::_Settings
force_parallel	5/parallel/types.h	/^      force_parallel$/;"	e	enum:__gnu_parallel::_AlgorithmStrategy
force_sequential	5/parallel/types.h	/^      force_sequential,$/;"	e	enum:__gnu_parallel::_AlgorithmStrategy
format	opencv2/core/opengl.hpp	/^cv::ogl::Texture2D::Format cv::ogl::Texture2D::format() const$/;"	f	class:cv::ogl::Texture2D
format	opencv2/core/operations.hpp	/^Ptr<Formatted> format(InputArray mtx, int fmt)$/;"	f	namespace:cv
format_	opencv2/core/opengl.hpp	/^    Format format_;$/;"	m	class:cv::ogl::Texture2D
forward_iterator_tag	cpp_src/stl_iterator_base_types.h	/^  struct forward_iterator_tag : public input_iterator_tag {};$/;"	s	namespace:std
forward_join	5/ext/pb_ds/detail/pairing_heap_/erase_fn_imps.hpp	/^forward_join(node_pointer p_nd, node_pointer p_next)$/;"	f	class:PB_DS_CLASS_C_DEC
fpos	cpp_src/postypes.h	/^      fpos()$/;"	f	class:std::fpos
fpos	cpp_src/postypes.h	/^      fpos(streamoff __off)$/;"	f	class:std::fpos
fpos	cpp_src/postypes.h	/^    class fpos$/;"	c	namespace:std
frac_digits	cpp_src/locale_facets.h	/^      frac_digits() const$/;"	f	class:std::moneypunct
frame0_	opencv2/videostab/global_motion.hpp	/^    cuda::GpuMat frame0_, grayFrame0_, frame1_;$/;"	m	class:cv::videostab::KeypointBasedMotionEstimatorGpu
frame0_	opencv2/videostab/optical_flow.hpp	/^    cuda::GpuMat frame0_, frame1_, flowX_, flowY_, errors_;$/;"	m	class:cv::videostab::DensePyrLkOptFlowEstimatorGpu
frame0_	opencv2/videostab/optical_flow.hpp	/^    cuda::GpuMat frame0_, frame1_, points0_, points1_, status_, errors_;$/;"	m	class:cv::videostab::SparsePyrLkOptFlowEstimatorGpu
frame1_	opencv2/videostab/global_motion.hpp	/^    cuda::GpuMat frame0_, grayFrame0_, frame1_;$/;"	m	class:cv::videostab::KeypointBasedMotionEstimatorGpu
frame1_	opencv2/videostab/inpainting.hpp	/^    Mat frame1_, transformedFrame1_;$/;"	m	class:cv::videostab::MotionInpainter
frame1_	opencv2/videostab/optical_flow.hpp	/^    cuda::GpuMat frame0_, frame1_, flowX_, flowY_, errors_;$/;"	m	class:cv::videostab::DensePyrLkOptFlowEstimatorGpu
frame1_	opencv2/videostab/optical_flow.hpp	/^    cuda::GpuMat frame0_, frame1_, points0_, points1_, status_, errors_;$/;"	m	class:cv::videostab::SparsePyrLkOptFlowEstimatorGpu
frameCount	opencv2/videostab/wobble_suppression.hpp	/^    virtual int frameCount() const { return frameCount_; }$/;"	f	class:cv::videostab::WobbleSuppressorBase
frameCount_	opencv2/videostab/stabilizer.hpp	/^    int frameCount_;$/;"	m	class:cv::videostab::TwoPassStabilizer
frameCount_	opencv2/videostab/wobble_suppression.hpp	/^    int frameCount_;$/;"	m	class:cv::videostab::WobbleSuppressorBase
frameDevice_	opencv2/videostab/wobble_suppression.hpp	/^    cuda::GpuMat frameDevice_, resultDevice_;$/;"	m	class:cv::videostab::MoreAccurateMotionWobbleSuppressorGpu
frameMask_	opencv2/videostab/stabilizer.hpp	/^    Mat frameMask_;$/;"	m	class:cv::videostab::StabilizerBase
frameSize	opencv2/videostab/motion_stabilizing.hpp	/^    Size frameSize() const { return frameSize_; }$/;"	f	class:cv::videostab::LpMotionStabilizer
frameSize_	opencv2/videostab/motion_stabilizing.hpp	/^    Size frameSize_;$/;"	m	class:cv::videostab::LpMotionStabilizer
frameSize_	opencv2/videostab/stabilizer.hpp	/^    Size frameSize_;$/;"	m	class:cv::videostab::StabilizerBase
frameSource	opencv2/videostab/stabilizer.hpp	/^    Ptr<IFrameSource> frameSource() const { return frameSource_; }$/;"	f	class:cv::videostab::StabilizerBase
frameSource_	opencv2/superres.hpp	/^            Ptr<FrameSource> frameSource_;$/;"	m	class:cv::superres::SuperResolution
frameSource_	opencv2/videostab/stabilizer.hpp	/^    Ptr<IFrameSource> frameSource_;$/;"	m	class:cv::videostab::StabilizerBase
frames	opencv2/videostab/deblurring.hpp	/^    virtual const std::vector<Mat>& frames() const { return *frames_; }$/;"	f	class:cv::videostab::DeblurerBase
frames	opencv2/videostab/inpainting.hpp	/^    virtual const std::vector<Mat>& frames() const { return *frames_; }$/;"	f	class:cv::videostab::InpainterBase
frames_	opencv2/videostab/deblurring.hpp	/^    const std::vector<Mat> *frames_;$/;"	m	class:cv::videostab::DeblurerBase
frames_	opencv2/videostab/inpainting.hpp	/^    const std::vector<Mat> *frames_;$/;"	m	class:cv::videostab::InpainterBase
frames_	opencv2/videostab/stabilizer.hpp	/^    std::vector<Mat> frames_;$/;"	m	class:cv::videostab::StabilizerBase
free	opencv2/flann/matrix.h	/^    FLANN_DEPRECATED void free()$/;"	f	class:cvflann::Matrix
freeList	opencv2/core/mat.hpp	/^        size_t freeList;$/;"	m	struct:cv::SparseMat::Hdr
freeMemory	opencv2/core/cuda.inl.hpp	/^size_t DeviceInfo::freeMemory() const$/;"	f	class:cv::cuda::DeviceInfo
freePoint	opencv2/imgproc.hpp	/^    int freePoint;$/;"	m	class:cv::Subdiv2D
freeQEdge	opencv2/imgproc.hpp	/^    int freeQEdge;$/;"	m	class:cv::Subdiv2D
free_centers	opencv2/flann/kmeans_index.h	/^    void free_centers(KMeansNodePtr node)$/;"	f	class:cvflann::KMeansIndex
free_coef	opencv2/objdetect.hpp	/^    float free_coef;$/;"	m	struct:cv::HOGDescriptor
free_elements	opencv2/flann/hierarchical_clustering_index.h	/^    void free_elements()$/;"	f	class:cvflann::HierarchicalClusteringIndex
free_space	opencv2/core/types_c.h	/^    int free_space;               \/**< Remaining free space in current block.   *\/$/;"	m	struct:CvMemStorage
free_space	opencv2/core/types_c.h	/^    int free_space;$/;"	m	struct:CvMemStoragePos
from	opencv2/stitching/detail/util.hpp	/^    int from, to;$/;"	m	struct:cv::detail::GraphEdge
front	cpp_src/stl_bvector.h	/^    front() const$/;"	f	class:std::vector
front	cpp_src/stl_bvector.h	/^    front()$/;"	f	class:std::vector
front	cpp_src/stl_deque.h	/^      front() const$/;"	f	class:std::deque
front	cpp_src/stl_deque.h	/^      front()$/;"	f	class:std::deque
front	cpp_src/stl_list.h	/^      front() const$/;"	f	class:std::list
front	cpp_src/stl_list.h	/^      front()$/;"	f	class:std::list
front	cpp_src/stl_queue.h	/^      front() const$/;"	f	class:std::queue
front	cpp_src/stl_queue.h	/^      front()$/;"	f	class:std::queue
front	cpp_src/stl_vector.h	/^      front() const$/;"	f	class:std::vector
front	cpp_src/stl_vector.h	/^      front()$/;"	f	class:std::vector
front	opencv2/core/core_c.h	/^template<typename _Tp> inline _Tp& Seq<_Tp>::front()$/;"	f	class:cv::Seq
front	opencv2/core/core_c.h	/^template<typename _Tp> inline const _Tp& Seq<_Tp>::front() const$/;"	f	class:cv::Seq
front_insert_iterator	cpp_src/stl_iterator.h	/^      explicit front_insert_iterator(_Container& __x) : container(&__x) { }$/;"	f	class:std::front_insert_iterator
front_insert_iterator	cpp_src/stl_iterator.h	/^    class front_insert_iterator$/;"	c	namespace:std
front_inserter	cpp_src/stl_iterator.h	/^    front_inserter(_Container& __x)$/;"	f	namespace:std
fs	opencv2/core/core_c.h	/^CVAPI(void) cvEndWriteStruct( CvFileStorage* fs );$/;"	v
fs	opencv2/core/core_c.h	/^CVAPI(void) cvReleaseFileStorage( CvFileStorage** fs );$/;"	v
fs	opencv2/core/core_c.h	/^CVAPI(void) cvStartNextStream( CvFileStorage* fs );$/;"	v
fs	opencv2/core/persistence.hpp	/^        FileStorage* fs;$/;"	m	class:cv::internal::VecWriterProxy
fs	opencv2/core/persistence.hpp	/^        FileStorage* fs;$/;"	m	class:cv::internal::WriteStructContext
fs	opencv2/core/persistence.hpp	/^    Ptr<CvFileStorage> fs; \/\/!< the underlying C FileStorage structure$/;"	m	class:cv::FileStorage
fs	opencv2/core/persistence.hpp	/^    const CvFileStorage* fs;$/;"	m	class:cv::FileNode
fs	opencv2/core/persistence.hpp	/^    const CvFileStorage* fs;$/;"	m	class:cv::FileNodeIterator
full	opencv2/flann/result_set.h	/^    bool full() const$/;"	f	class:cvflann::KNNResultSet
full	opencv2/flann/result_set.h	/^    bool full() const$/;"	f	class:cvflann::KNNSimpleResultSet
full	opencv2/flann/result_set.h	/^    bool full() const$/;"	f	class:cvflann::RadiusResultSet
full	opencv2/flann/result_set.h	/^    inline bool full() const$/;"	f	class:cvflann::RadiusUniqueResultSet
full	opencv2/flann/result_set.h	/^    inline bool full() const$/;"	f	class:cvflann::UniqueResultSet
full_affine_	opencv2/stitching/detail/matchers.hpp	/^    bool full_affine_;$/;"	m	class:cv::detail::AffineBestOf2NearestMatcher
full_img_sizes_	opencv2/stitching.hpp	/^    std::vector<cv::Size> full_img_sizes_;$/;"	m	class:cv::Stitcher
func	opencv2/core.hpp	/^    String func; \/\/\/< function name. Available only when the compiler supports getting it$/;"	m	class:cv::Exception
func_addr	opencv2/core/types_c.h	/^    void** func_addr;$/;"	m	struct:CvPluginFuncInfo
func_names	opencv2/core/types_c.h	/^    const char* func_names;$/;"	m	struct:CvPluginFuncInfo
func_tab	opencv2/core/types_c.h	/^    CvPluginFuncInfo* func_tab;$/;"	m	struct:CvModuleInfo
functional_detail	opencv2/core/cuda/functional.hpp	/^    namespace functional_detail$/;"	n	namespace:cv::cuda::device
functional_detail	opencv2/cudev/functional/functional.hpp	/^namespace functional_detail$/;"	n	namespace:cv::cudev
fx	opencv2/cudev/ptr2d/resize.hpp	/^    float fx, fy;$/;"	m	struct:cv::cudev::ResizePtr
fy	opencv2/cudev/ptr2d/resize.hpp	/^    float fx, fy;$/;"	m	struct:cv::cudev::ResizePtr
gSum_	opencv2/videostab/deblurring.hpp	/^    Mat_<float> bSum_, gSum_, rSum_, wSum_;$/;"	m	class:cv::videostab::WeightingDeblurer
g_a_rank_bounds	5/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp	/^    static const std::size_t g_a_rank_bounds[num_distinct_rank_bounds] =$/;"	m	namespace:__gnu_pbds::detail
g_a_sizes	5/ext/pb_ds/detail/resize_policy/hash_prime_size_policy_imp.hpp	/^  static const std::size_t g_a_sizes[num_distinct_sizes_64_bit] =$/;"	m	namespace:detail
gain	opencv2/video/tracking.hpp	/^    CV_PROP_RW Mat gain;               \/\/!< Kalman gain matrix (K(k)): K(k)=P'(k)*Ht*inv(H*P'(k)*Ht+R)$/;"	m	class:cv::KalmanFilter
gain	opencv2/video/tracking_c.h	/^    CvMat* gain;                \/* Kalman gain matrix (K(k)):$/;"	m	struct:CvKalman
gain_maps_	opencv2/stitching/detail/exposure_compensate.hpp	/^    std::vector<UMat> gain_maps_;$/;"	m	class:cv::detail::BlocksGainCompensator
gains_	opencv2/stitching/detail/exposure_compensate.hpp	/^    Mat_<double> gains_;$/;"	m	class:cv::detail::GainCompensator
gamma	opencv2/cudalegacy/NCVBroxOpticalFlow.hpp	/^    Ncv32f gamma;$/;"	m	struct:NCVBroxOpticalFlowDescriptor
gammaCorrection	opencv2/objdetect.hpp	/^    CV_PROP bool gammaCorrection;$/;"	m	struct:cv::HOGDescriptor
gamma_shift	opencv2/core/cuda/detail/color_detail.hpp	/^            gamma_shift = 3,$/;"	e	enum:cv::cuda::device::color_detail::__anon247
gamma_shift	opencv2/cudev/functional/detail/color_cvt.hpp	/^        gamma_shift = 3,$/;"	e	enum:cv::cudev::color_cvt_detail::__anon397
gather	opencv2/core/utility.hpp	/^    inline void gather(std::vector<T*> &data) const$/;"	f	class:cv::TLSData
generate	cpp_src/stl_algo.h	/^    generate(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std
generate_minimal_n	5/parallel/settings.h	/^    _SequenceIndex              generate_minimal_n;$/;"	m	struct:__gnu_parallel::_Settings
generate_n	cpp_src/stl_algo.h	/^    generate_n(_OutputIterator __first, _Size __n, _Generator __gen)$/;"	f	namespace:std
generic_type	opencv2/core/affine.hpp	/^        enum { generic_type = 0,$/;"	e	enum:cv::DataType::__anon316
generic_type	opencv2/core/cvstd.inl.hpp	/^    enum { generic_type = 0,$/;"	e	enum:cv::DataType::__anon301
generic_type	opencv2/core/matx.hpp	/^    enum { generic_type = 0,$/;"	e	enum:cv::DataType::__anon121
generic_type	opencv2/core/matx.hpp	/^    enum { generic_type = 0,$/;"	e	enum:cv::DataType::__anon123
generic_type	opencv2/core/traits.hpp	/^    enum { generic_type = 0,$/;"	e	enum:cv::DataType::__anon283
generic_type	opencv2/core/traits.hpp	/^    enum { generic_type = 0,$/;"	e	enum:cv::DataType::__anon284
generic_type	opencv2/core/traits.hpp	/^    enum { generic_type = 0,$/;"	e	enum:cv::DataType::__anon285
generic_type	opencv2/core/traits.hpp	/^    enum { generic_type = 0,$/;"	e	enum:cv::DataType::__anon286
generic_type	opencv2/core/traits.hpp	/^    enum { generic_type = 0,$/;"	e	enum:cv::DataType::__anon287
generic_type	opencv2/core/traits.hpp	/^    enum { generic_type = 0,$/;"	e	enum:cv::DataType::__anon288
generic_type	opencv2/core/traits.hpp	/^    enum { generic_type = 0,$/;"	e	enum:cv::DataType::__anon289
generic_type	opencv2/core/traits.hpp	/^    enum { generic_type = 0,$/;"	e	enum:cv::DataType::__anon290
generic_type	opencv2/core/traits.hpp	/^    enum { generic_type = 0,$/;"	e	enum:cv::DataType::__anon291
generic_type	opencv2/core/traits.hpp	/^    enum { generic_type = 1,$/;"	e	enum:cv::DataType::__anon282
generic_type	opencv2/core/types.hpp	/^    enum { generic_type = 0,$/;"	e	enum:cv::DataType::__anon302
generic_type	opencv2/core/types.hpp	/^    enum { generic_type = 0,$/;"	e	enum:cv::DataType::__anon303
generic_type	opencv2/core/types.hpp	/^    enum { generic_type = 0,$/;"	e	enum:cv::DataType::__anon304
generic_type	opencv2/core/types.hpp	/^    enum { generic_type = 0,$/;"	e	enum:cv::DataType::__anon305
generic_type	opencv2/core/types.hpp	/^    enum { generic_type = 0,$/;"	e	enum:cv::DataType::__anon306
generic_type	opencv2/core/types.hpp	/^    enum { generic_type = 0,$/;"	e	enum:cv::DataType::__anon307
generic_type	opencv2/core/types.hpp	/^    enum { generic_type = 0,$/;"	e	enum:cv::DataType::__anon308
generic_type	opencv2/core/types.hpp	/^    enum { generic_type = 0,$/;"	e	enum:cv::DataType::__anon309
generic_type	opencv2/core/types.hpp	/^    enum { generic_type = 0,$/;"	e	enum:cv::DataType::__anon310
generic_type	opencv2/core/types.hpp	/^    enum { generic_type = 0,$/;"	e	enum:cv::DataType::__anon311
generic_type	opencv2/core/types.hpp	/^    enum { generic_type = 0,$/;"	e	enum:cv::DataType::__anon312
generic_type	opencv2/cudev/util/vec_traits.hpp	/^    enum { generic_type = 0,$/;"	e	enum:cv::DataType::__anon475
generic_type	opencv2/cudev/util/vec_traits.hpp	/^    enum { generic_type = 0,$/;"	e	enum:cv::DataType::__anon476
generic_type	opencv2/cudev/util/vec_traits.hpp	/^    enum { generic_type = 0,$/;"	e	enum:cv::DataType::__anon477
generic_type	opencv2/cudev/util/vec_traits.hpp	/^    enum { generic_type = 0,$/;"	e	enum:cv::DataType::__anon478
generic_type	opencv2/cudev/util/vec_traits.hpp	/^    enum { generic_type = 0,$/;"	e	enum:cv::DataType::__anon479
get	cpp_src/locale_facets.h	/^      get(catalog __c, int __set, int __msgid, const string_type& __s) const$/;"	f	class:std::messages
get	cpp_src/locale_facets.h	/^      get(iter_type __in, iter_type __end, ios_base& __io,$/;"	f	class:std::num_get
get	cpp_src/locale_facets.h	/^      get(iter_type __s, iter_type __end, bool __intl, ios_base& __io,$/;"	f	class:std::money_get
get	opencv2/core/hal/intrin_cpp.hpp	/^    _Tp get(const int i) const { return s[i]; }$/;"	f	struct:cv::v_reg
get	opencv2/core/ptr.inl.hpp	/^T* Ptr<T>::get() const$/;"	f	class:cv::Ptr
get	opencv2/core/utility.hpp	/^    T get(const String& name, bool space_delete = true) const$/;"	f	class:cv::CommandLineParser
get	opencv2/core/utility.hpp	/^    T get(int index, bool space_delete = true) const$/;"	f	class:cv::CommandLineParser
get	opencv2/core/utility.hpp	/^    inline T* get() const   { return (T*)getData(); } \/\/ Get data assosiated with key$/;"	f	class:cv::TLSData
get	opencv2/core/utility.hpp	/^template<> inline std::string CommandLineParser::get<std::string>(const String& name, bool space_delete) const$/;"	f	class:cv::CommandLineParser
get	opencv2/core/utility.hpp	/^template<> inline std::string CommandLineParser::get<std::string>(int index, bool space_delete) const$/;"	f	class:cv::CommandLineParser
get0	opencv2/core/hal/intrin_cpp.hpp	/^    _Tp get0() const { return s[0]; }$/;"	f	struct:cv::v_reg
get0	opencv2/core/hal/intrin_neon.hpp	/^    double get0() const$/;"	f	struct:cv::v_float64x2
get0	opencv2/core/hal/intrin_neon.hpp	/^    float get0() const$/;"	f	struct:cv::v_float32x4
get0	opencv2/core/hal/intrin_neon.hpp	/^    int get0() const$/;"	f	struct:cv::v_int32x4
get0	opencv2/core/hal/intrin_neon.hpp	/^    int64 get0() const$/;"	f	struct:cv::v_int64x2
get0	opencv2/core/hal/intrin_neon.hpp	/^    schar get0() const$/;"	f	struct:cv::v_int8x16
get0	opencv2/core/hal/intrin_neon.hpp	/^    short get0() const$/;"	f	struct:cv::v_float16x4
get0	opencv2/core/hal/intrin_neon.hpp	/^    short get0() const$/;"	f	struct:cv::v_int16x8
get0	opencv2/core/hal/intrin_neon.hpp	/^    uchar get0() const$/;"	f	struct:cv::v_uint8x16
get0	opencv2/core/hal/intrin_neon.hpp	/^    uint64 get0() const$/;"	f	struct:cv::v_uint64x2
get0	opencv2/core/hal/intrin_neon.hpp	/^    unsigned get0() const$/;"	f	struct:cv::v_uint32x4
get0	opencv2/core/hal/intrin_neon.hpp	/^    ushort get0() const$/;"	f	struct:cv::v_uint16x8
get0	opencv2/core/hal/intrin_sse.hpp	/^    double get0() const$/;"	f	struct:cv::v_float64x2
get0	opencv2/core/hal/intrin_sse.hpp	/^    float get0() const$/;"	f	struct:cv::v_float32x4
get0	opencv2/core/hal/intrin_sse.hpp	/^    int get0() const$/;"	f	struct:cv::v_int32x4
get0	opencv2/core/hal/intrin_sse.hpp	/^    int64 get0() const$/;"	f	struct:cv::v_int64x2
get0	opencv2/core/hal/intrin_sse.hpp	/^    schar get0() const$/;"	f	struct:cv::v_int8x16
get0	opencv2/core/hal/intrin_sse.hpp	/^    short get0() const$/;"	f	struct:cv::v_float16x4
get0	opencv2/core/hal/intrin_sse.hpp	/^    short get0() const$/;"	f	struct:cv::v_int16x8
get0	opencv2/core/hal/intrin_sse.hpp	/^    uchar get0() const$/;"	f	struct:cv::v_uint8x16
get0	opencv2/core/hal/intrin_sse.hpp	/^    uint64 get0() const$/;"	f	struct:cv::v_uint64x2
get0	opencv2/core/hal/intrin_sse.hpp	/^    unsigned get0() const$/;"	f	struct:cv::v_uint32x4
get0	opencv2/core/hal/intrin_sse.hpp	/^    ushort get0() const$/;"	f	struct:cv::v_uint16x8
getAllocatorsAlignment	opencv2/cudalegacy/NCV.hpp	/^    Ncv32u getAllocatorsAlignment() const$/;"	f	class:NCVMatrixAlloc
getAllocatorsAlignment	opencv2/cudalegacy/NCV.hpp	/^    Ncv32u getAllocatorsAlignment() const$/;"	f	class:NCVVectorAlloc
getAlpha	opencv2/core/cuda/detail/color_detail.hpp	/^        template <typename T> static __device__ __forceinline__ T getAlpha(const typename TypeVec<T, 3>::vec_type& vec)$/;"	f	namespace:cv::cuda::device::color_detail
getAlpha	opencv2/core/cuda/detail/color_detail.hpp	/^        template <typename T> static __device__ __forceinline__ T getAlpha(const typename TypeVec<T, 4>::vec_type& vec)$/;"	f	namespace:cv::cuda::device::color_detail
getAlpha	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <typename T> __device__ __forceinline__ T getAlpha(const typename MakeVec<T, 3>::type& vec)$/;"	f	namespace:cv::cudev::color_cvt_detail
getAlpha	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <typename T> __device__ __forceinline__ T getAlpha(const typename MakeVec<T, 4>::type& vec)$/;"	f	namespace:cv::cudev::color_cvt_detail
getBucketFromKey	opencv2/flann/lsh_table.h	/^    inline const Bucket* getBucketFromKey(BucketKey key) const$/;"	f	class:cvflann::lsh::LshTable
getCenterOrdering	opencv2/flann/kmeans_index.h	/^    void getCenterOrdering(KMeansNodePtr node, const ElementType* q, int* sort_indices)$/;"	f	class:cvflann::KMeansIndex
getClusterCenters	opencv2/flann/kmeans_index.h	/^    int getClusterCenters(Matrix<DistanceType>& centers)$/;"	f	class:cvflann::KMeansIndex
getCols	opencv2/cudev/expr/expr.hpp	/^    __host__ static int getCols(const Expr<Body>& expr)$/;"	f	struct:cv::cudev::PtrTraits
getCols	opencv2/cudev/ptr2d/traits.hpp	/^    __host__ static int getCols(const Ptr2DSz& ptr)$/;"	f	struct:cv::cudev::PtrTraitsBase
getCols	opencv2/cudev/ptr2d/traits.hpp	/^__host__ int getCols(const Ptr2DSz& ptr)$/;"	f	namespace:cv::cudev
getCounter	opencv2/core/utility.hpp	/^    CV_WRAP int64 getCounter() const$/;"	f	class:cv::TickMeter
getDepth	opencv2/core/utility.hpp	/^    int getDepth()$/;"	f	class:cv::Node
getDistanceToBorder	opencv2/flann/kmeans_index.h	/^    DistanceType getDistanceToBorder(DistanceType* p, DistanceType* c, DistanceType* q)$/;"	f	class:cvflann::KMeansIndex
getDst	opencv2/stitching/detail/timelapsers.hpp	/^    virtual const UMat& getDst() {return dst_;}$/;"	f	class:cv::detail::Timelapser
getElemSize	opencv2/core/utility.hpp	/^static inline size_t getElemSize(int type) { return CV_ELEM_SIZE(type); }$/;"	f	namespace:cv
getExactNeighbors	opencv2/flann/kdtree_index.h	/^    void getExactNeighbors(ResultSet<DistanceType>& result, const ElementType* vec, float epsError)$/;"	f	class:cvflann::KDTreeIndex
getFeatureDesc	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^    __host__ __device__ HaarFeatureDescriptor32 getFeatureDesc(void)$/;"	f	struct:HaarClassifierNode128
getFeaturesOffset	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^    __device__ __host__ Ncv32u getFeaturesOffset(void)$/;"	f	struct:HaarFeatureDescriptor32
getFirstTopLevelNode	opencv2/core/persistence.hpp	/^inline FileNode FileStorage::getFirstTopLevelNode() const { FileNode r = root(); FileNodeIterator it = r.begin(); return it != r.end() ? *it : FileNode(); }$/;"	f	class:cv::FileStorage
getFlags	opencv2/core/mat.inl.hpp	/^inline int _InputArray::getFlags() const { return flags; }$/;"	f	class:cv::_InputArray
getHpp	opencv2/core/ippasync.hpp	/^    inline hppiMatrix* getHpp(const Mat& src, hppAccel accel)$/;"	f	namespace:cv::hpp
getIndex	opencv2/flann/flann_base.hpp	/^    FLANN_DEPRECATED NNIndex<Distance>* getIndex()$/;"	f	class:cvflann::Index
getIndexParameters	opencv2/flann.hpp	/^        FLANN_DEPRECATED const ::cvflann::IndexParams* getIndexParameters() { return nnIndex->getIndexParameters(); }$/;"	f	class:cv::flann::GenericIndex
getIndexParameters	opencv2/flann.hpp	/^    FLANN_DEPRECATED const ::cvflann::IndexParams* getIndexParameters()$/;"	f	class:cv::flann::Index_
getIndexParameters	opencv2/flann/flann_base.hpp	/^    FLANN_DEPRECATED  const IndexParams* getIndexParameters()$/;"	f	class:cvflann::Index
getKey	opencv2/flann/lsh_table.h	/^    size_t getKey(const ElementType* \/*feature*\/) const$/;"	f	class:cvflann::lsh::LshTable
getKey	opencv2/flann/lsh_table.h	/^inline size_t LshTable<unsigned char>::getKey(const unsigned char* feature) const$/;"	f	class:cvflann::lsh::LshTable
getLaunchCfg	opencv2/cudev/grid/detail/minmaxloc.hpp	/^    void getLaunchCfg(int rows, int cols, dim3& block, dim3& grid)$/;"	f	namespace:cv::cudev::grid_minmaxloc_detail
getLeafValue	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^    __device__ Ncv32f getLeafValue(void)$/;"	f	struct:HaarClassifierNodeDescriptor32
getLeafValueHost	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^    __host__ Ncv32f getLeafValueHost(void)$/;"	f	struct:HaarClassifierNodeDescriptor32
getLeftNodeDesc	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^    __host__ __device__ HaarClassifierNodeDescriptor32 getLeftNodeDesc(void)$/;"	f	struct:HaarClassifierNode128
getMat	opencv2/core/ippasync.hpp	/^    inline Mat getMat(hppiMatrix* src, hppAccel accel, int cn)$/;"	f	namespace:cv::hpp
getMat	opencv2/core/mat.inl.hpp	/^inline Mat _InputArray::getMat(int i) const$/;"	f	class:cv::_InputArray
getMaxObjectSize	opencv2/objdetect/detection_based_tracker.hpp	/^                cv::Size getMaxObjectSize() const$/;"	f	class:cv::DetectionBasedTracker::IDetector
getMeanMs	opencv2/core/utility.hpp	/^    double getMeanMs()    const { return (((double)m_ticksTotal\/m_counter) \/ cv::getTickFrequency()) * 1000; }$/;"	f	class:cv::instr::NodeData
getMinNeighbours	opencv2/objdetect/detection_based_tracker.hpp	/^                int getMinNeighbours()$/;"	f	class:cv::DetectionBasedTracker::IDetector
getMinObjectSize	opencv2/objdetect/detection_based_tracker.hpp	/^                cv::Size getMinObjectSize() const$/;"	f	class:cv::DetectionBasedTracker::IDetector
getMinVarianceClusters	opencv2/flann/kmeans_index.h	/^    int getMinVarianceClusters(KMeansNodePtr root, KMeansNodePtr* clusters, int clusters_length, DistanceType& varianceValue)$/;"	f	class:cvflann::KMeansIndex
getNeighbors	opencv2/flann/kdtree_index.h	/^    void getNeighbors(ResultSet<DistanceType>& result, const ElementType* vec, int maxCheck, float epsError)$/;"	f	class:cvflann::KDTreeIndex
getNeighbors	opencv2/flann/lsh_index.h	/^    void getNeighbors(const ElementType* vec, ResultSet<DistanceType>& result)$/;"	f	class:cvflann::LshIndex
getNeighbors	opencv2/flann/lsh_index.h	/^    void getNeighbors(const ElementType* vec, bool \/*do_radius*\/, float radius, bool do_k, unsigned int k_nn,$/;"	f	class:cvflann::LshIndex
getNextId	opencv2/objdetect/detection_based_tracker.hpp	/^            static int getNextId()$/;"	f	struct:cv::DetectionBasedTracker::TrackedObject
getNextNodeOffset	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^    __device__ __host__ Ncv32u getNextNodeOffset(void)$/;"	f	struct:HaarClassifierNodeDescriptor32
getNumClassifierRootNodes	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^    __host__ __device__ Ncv32u getNumClassifierRootNodes(void)$/;"	f	struct:HaarStage64
getNumFeatures	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^    __device__ __host__ Ncv32u getNumFeatures(void)$/;"	f	struct:HaarFeatureDescriptor32
getObj	opencv2/core/mat.inl.hpp	/^inline void* _InputArray::getObj() const { return obj; }$/;"	f	class:cv::_InputArray
getOutputMat	opencv2/core/private.cuda.hpp	/^    static inline GpuMat getOutputMat(OutputArray _dst, Size size, int type, Stream& stream)$/;"	f	namespace:cv::cuda
getParameters	opencv2/flann.hpp	/^        ::cvflann::IndexParams getParameters() { return nnIndex->getParameters(); }$/;"	f	class:cv::flann::GenericIndex
getParameters	opencv2/flann.hpp	/^    FLANN_DEPRECATED ::cvflann::IndexParams getParameters()$/;"	f	class:cv::flann::Index_
getParameters	opencv2/flann/autotuned_index.h	/^    IndexParams getParameters() const$/;"	f	class:cvflann::AutotunedIndex
getParameters	opencv2/flann/composite_index.h	/^    IndexParams getParameters() const$/;"	f	class:cvflann::CompositeIndex
getParameters	opencv2/flann/flann_base.hpp	/^    IndexParams getParameters() const$/;"	f	class:cvflann::Index
getParameters	opencv2/flann/hierarchical_clustering_index.h	/^    IndexParams getParameters() const$/;"	f	class:cvflann::HierarchicalClusteringIndex
getParameters	opencv2/flann/kdtree_index.h	/^    IndexParams getParameters() const$/;"	f	class:cvflann::KDTreeIndex
getParameters	opencv2/flann/kdtree_single_index.h	/^    IndexParams getParameters() const$/;"	f	class:cvflann::KDTreeSingleIndex
getParameters	opencv2/flann/kmeans_index.h	/^    IndexParams getParameters() const$/;"	f	class:cvflann::KMeansIndex
getParameters	opencv2/flann/linear_index.h	/^    IndexParams getParameters() const$/;"	f	class:cvflann::LinearIndex
getParameters	opencv2/flann/lsh_index.h	/^    IndexParams getParameters() const$/;"	f	class:cvflann::LshIndex
getRect	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^    __device__ __host__ void getRect(Ncv32u *rectX, Ncv32u *rectY, Ncv32u *rectWidth, Ncv32u *rectHeight)$/;"	f	struct:HaarFeature64
getRightNodeDesc	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^    __host__ __device__ HaarClassifierNodeDescriptor32 getRightNodeDesc(void)$/;"	f	struct:HaarClassifierNode128
getRows	opencv2/cudev/expr/expr.hpp	/^    __host__ static int getRows(const Expr<Body>& expr)$/;"	f	struct:cv::cudev::PtrTraits
getRows	opencv2/cudev/ptr2d/traits.hpp	/^    __host__ static int getRows(const Ptr2DSz& ptr)$/;"	f	struct:cv::cudev::PtrTraitsBase
getRows	opencv2/cudev/ptr2d/traits.hpp	/^__host__ int getRows(const Ptr2DSz& ptr)$/;"	f	namespace:cv::cudev
getScale	opencv2/stitching/detail/warpers.hpp	/^    float getScale() const { return projector_.scale; }$/;"	f	class:cv::detail::RotationWarperBase
getScale	opencv2/stitching/detail/warpers.hpp	/^    virtual float getScale() const { return 1.f; }$/;"	f	class:cv::detail::RotationWarper
getScaleFactor	opencv2/objdetect/detection_based_tracker.hpp	/^                float getScaleFactor()$/;"	f	class:cv::DetectionBasedTracker::IDetector
getSearchParameters	opencv2/flann/autotuned_index.h	/^    SearchParams getSearchParameters() const$/;"	f	class:cvflann::AutotunedIndex
getSegment	opencv2/cudalegacy/NCV.hpp	/^    NCVMemSegment getSegment() const$/;"	f	class:NCVMatrixAlloc
getSegment	opencv2/cudalegacy/NCV.hpp	/^    NCVMemSegment getSegment() const$/;"	f	class:NCVVectorAlloc
getSpeedup	opencv2/flann/autotuned_index.h	/^    float getSpeedup() const$/;"	f	class:cvflann::AutotunedIndex
getStageThreshold	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^    __host__ __device__ Ncv32f getStageThreshold(void)$/;"	f	struct:HaarStage64
getStartClassifierRootNodeOffset	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^    __host__ __device__ Ncv32u getStartClassifierRootNodeOffset(void)$/;"	f	struct:HaarStage64
getStats	opencv2/flann/lsh_table.h	/^inline LshStats LshTable<unsigned char>::getStats() const$/;"	f	class:cvflann::lsh::LshTable
getSz	opencv2/core/mat.inl.hpp	/^inline Size _InputArray::getSz() const { return sz; }$/;"	f	class:cv::_InputArray
getThreshold	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^    __host__ __device__ Ncv32f getThreshold(void)$/;"	f	struct:HaarClassifierNode128
getTimeMicro	opencv2/core/utility.hpp	/^    CV_WRAP double getTimeMicro() const$/;"	f	class:cv::TickMeter
getTimeMilli	opencv2/core/utility.hpp	/^    CV_WRAP double getTimeMilli() const$/;"	f	class:cv::TickMeter
getTimeSec	opencv2/core/utility.hpp	/^    CV_WRAP double getTimeSec()   const$/;"	f	class:cv::TickMeter
getTimeTicks	opencv2/core/utility.hpp	/^    CV_WRAP int64 getTimeTicks() const$/;"	f	class:cv::TickMeter
getTotalMs	opencv2/core/utility.hpp	/^    double getTotalMs()   const { return ((double)m_ticksTotal \/ cv::getTickFrequency()) * 1000; }$/;"	f	class:cv::instr::NodeData
getType	opencv2/flann/autotuned_index.h	/^    virtual flann_algorithm_t getType() const$/;"	f	class:cvflann::AutotunedIndex
getType	opencv2/flann/composite_index.h	/^    flann_algorithm_t getType() const$/;"	f	class:cvflann::CompositeIndex
getType	opencv2/flann/flann_base.hpp	/^    flann_algorithm_t getType() const$/;"	f	class:cvflann::Index
getType	opencv2/flann/hierarchical_clustering_index.h	/^    flann_algorithm_t getType() const$/;"	f	class:cvflann::HierarchicalClusteringIndex
getType	opencv2/flann/kdtree_index.h	/^    flann_algorithm_t getType() const$/;"	f	class:cvflann::KDTreeIndex
getType	opencv2/flann/kdtree_single_index.h	/^    flann_algorithm_t getType() const$/;"	f	class:cvflann::KDTreeSingleIndex
getType	opencv2/flann/kmeans_index.h	/^    flann_algorithm_t getType() const$/;"	f	class:cvflann::KMeansIndex
getType	opencv2/flann/linear_index.h	/^    flann_algorithm_t getType() const$/;"	f	class:cvflann::LinearIndex
getType	opencv2/flann/lsh_index.h	/^    flann_algorithm_t getType() const$/;"	f	class:cvflann::LshIndex
getWeight	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^    __device__ __host__ Ncv32f getWeight(void)$/;"	f	struct:HaarFeature64
get_access_traits	5/ext/pb_ds/detail/pat_trie_/policy_access_fn_imps.hpp	/^get_access_traits() const$/;"	f	class:PB_DS_CLASS_C_DEC
get_access_traits	5/ext/pb_ds/detail/pat_trie_/policy_access_fn_imps.hpp	/^get_access_traits()$/;"	f	class:PB_DS_CLASS_C_DEC
get_actual_size	5/ext/pb_ds/detail/resize_policy/hash_standard_resize_policy_imp.hpp	/^get_actual_size() const$/;"	f	class:PB_DS_CLASS_C_DEC
get_allocator	cpp_src/basic_string.h	/^      get_allocator() const$/;"	f	class:std::basic_string
get_allocator	cpp_src/stl_bvector.h	/^      get_allocator() const$/;"	f	struct:std::_Bvector_base
get_allocator	cpp_src/stl_bvector.h	/^    allocator_type get_allocator() const$/;"	f	class:std::vector
get_allocator	cpp_src/stl_deque.h	/^      get_allocator() const$/;"	f	class:std::_Deque_base
get_allocator	cpp_src/stl_deque.h	/^      get_allocator() const$/;"	f	class:std::deque
get_allocator	cpp_src/stl_list.h	/^      get_allocator() const$/;"	f	class:std::_List_base
get_allocator	cpp_src/stl_list.h	/^      get_allocator() const$/;"	f	class:std::list
get_allocator	cpp_src/stl_map.h	/^      get_allocator() const$/;"	f	class:std::map
get_allocator	cpp_src/stl_multimap.h	/^      get_allocator() const$/;"	f	class:std::multimap
get_allocator	cpp_src/stl_multiset.h	/^      get_allocator() const$/;"	f	class:std::multiset
get_allocator	cpp_src/stl_set.h	/^      get_allocator() const$/;"	f	class:std::set
get_allocator	cpp_src/stl_tree.h	/^      get_allocator() const$/;"	f	class:std::_Rb_tree
get_allocator	cpp_src/stl_vector.h	/^      get_allocator() const$/;"	f	struct:std::_Vector_base
get_begin_pos	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^    get_begin_pos() const$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
get_branch	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^	get_branch()$/;"	f	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME::branch_bag
get_child	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      get_child(size_type i) const$/;"	f	class:__gnu_pbds::detail::pat_trie_base::_Node_citer
get_child	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      get_child(size_type i) const$/;"	f	class:__gnu_pbds::detail::pat_trie_base::_Node_iter
get_child_it	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^    get_child_it(a_const_iterator b_it, a_const_iterator e_it,$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
get_child_node	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^    get_child_node(a_const_iterator b_it, a_const_iterator e_it,$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
get_cmp_fn	5/ext/pb_ds/detail/bin_search_tree_/policy_access_fn_imps.hpp	/^get_cmp_fn() const$/;"	f	class:PB_DS_CLASS_C_DEC
get_cmp_fn	5/ext/pb_ds/detail/bin_search_tree_/policy_access_fn_imps.hpp	/^get_cmp_fn()$/;"	f	class:PB_DS_CLASS_C_DEC
get_cmp_fn	5/ext/pb_ds/detail/binary_heap_/policy_access_fn_imps.hpp	/^get_cmp_fn() const$/;"	f	class:PB_DS_CLASS_C_DEC
get_cmp_fn	5/ext/pb_ds/detail/binary_heap_/policy_access_fn_imps.hpp	/^get_cmp_fn()$/;"	f	class:PB_DS_CLASS_C_DEC
get_cmp_fn	5/ext/pb_ds/detail/left_child_next_sibling_heap_/policy_access_fn_imps.hpp	/^get_cmp_fn() const$/;"	f	class:PB_DS_CLASS_C_DEC
get_cmp_fn	5/ext/pb_ds/detail/left_child_next_sibling_heap_/policy_access_fn_imps.hpp	/^get_cmp_fn()$/;"	f	class:PB_DS_CLASS_C_DEC
get_cmp_fn	5/ext/pb_ds/detail/ov_tree_map_/policy_access_fn_imps.hpp	/^get_cmp_fn() const$/;"	f	class:PB_DS_CLASS_C_DEC
get_cmp_fn	5/ext/pb_ds/detail/ov_tree_map_/policy_access_fn_imps.hpp	/^get_cmp_fn()$/;"	f	class:PB_DS_CLASS_C_DEC
get_comb_hash_fn	5/ext/pb_ds/detail/cc_hash_table_map_/policy_access_fn_imps.hpp	/^get_comb_hash_fn() const$/;"	f	class:PB_DS_CLASS_C_DEC
get_comb_hash_fn	5/ext/pb_ds/detail/cc_hash_table_map_/policy_access_fn_imps.hpp	/^get_comb_hash_fn()$/;"	f	class:PB_DS_CLASS_C_DEC
get_comb_probe_fn	5/ext/pb_ds/detail/gp_hash_table_map_/policy_access_fn_imps.hpp	/^get_comb_probe_fn() const$/;"	f	class:PB_DS_CLASS_C_DEC
get_comb_probe_fn	5/ext/pb_ds/detail/gp_hash_table_map_/policy_access_fn_imps.hpp	/^get_comb_probe_fn()$/;"	f	class:PB_DS_CLASS_C_DEC
get_date	cpp_src/locale_facets.h	/^      get_date(iter_type __beg, iter_type __end, ios_base& __io,$/;"	f	class:std::time_get
get_e_ind	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      get_e_ind() const$/;"	f	struct:__gnu_pbds::detail::pat_trie_base::_Inode
get_entry	5/ext/pb_ds/detail/cc_hash_table_map_/entry_list_fn_imps.hpp	/^get_entry(const_reference r_val, false_type)$/;"	f	class:PB_DS_CLASS_C_DEC
get_entry	5/ext/pb_ds/detail/cc_hash_table_map_/entry_list_fn_imps.hpp	/^get_entry(const_reference r_val, true_type)$/;"	f	class:PB_DS_CLASS_C_DEC
get_eq_fn	5/ext/pb_ds/detail/cc_hash_table_map_/policy_access_fn_imps.hpp	/^get_eq_fn() const$/;"	f	class:PB_DS_CLASS_C_DEC
get_eq_fn	5/ext/pb_ds/detail/cc_hash_table_map_/policy_access_fn_imps.hpp	/^get_eq_fn()$/;"	f	class:PB_DS_CLASS_C_DEC
get_eq_fn	5/ext/pb_ds/detail/gp_hash_table_map_/policy_access_fn_imps.hpp	/^get_eq_fn() const$/;"	f	class:PB_DS_CLASS_C_DEC
get_eq_fn	5/ext/pb_ds/detail/gp_hash_table_map_/policy_access_fn_imps.hpp	/^get_eq_fn()$/;"	f	class:PB_DS_CLASS_C_DEC
get_hash_fn	5/ext/pb_ds/detail/cc_hash_table_map_/policy_access_fn_imps.hpp	/^get_hash_fn() const$/;"	f	class:PB_DS_CLASS_C_DEC
get_hash_fn	5/ext/pb_ds/detail/cc_hash_table_map_/policy_access_fn_imps.hpp	/^get_hash_fn()$/;"	f	class:PB_DS_CLASS_C_DEC
get_hash_fn	5/ext/pb_ds/detail/gp_hash_table_map_/policy_access_fn_imps.hpp	/^get_hash_fn() const$/;"	f	class:PB_DS_CLASS_C_DEC
get_hash_fn	5/ext/pb_ds/detail/gp_hash_table_map_/policy_access_fn_imps.hpp	/^get_hash_fn()$/;"	f	class:PB_DS_CLASS_C_DEC
get_hdf5_type	opencv2/flann/hdf5.h	/^hid_t get_hdf5_type()$/;"	f	namespace:cvflann::__anon113
get_hdf5_type	opencv2/flann/hdf5.h	/^hid_t get_hdf5_type<char>() { return H5T_NATIVE_CHAR; }$/;"	f	namespace:cvflann::__anon113
get_hdf5_type	opencv2/flann/hdf5.h	/^hid_t get_hdf5_type<double>() { return H5T_NATIVE_DOUBLE; }$/;"	f	namespace:cvflann::__anon113
get_hdf5_type	opencv2/flann/hdf5.h	/^hid_t get_hdf5_type<float>() { return H5T_NATIVE_FLOAT; }$/;"	f	namespace:cvflann::__anon113
get_hdf5_type	opencv2/flann/hdf5.h	/^hid_t get_hdf5_type<int>() { return H5T_NATIVE_INT; }$/;"	f	namespace:cvflann::__anon113
get_hdf5_type	opencv2/flann/hdf5.h	/^hid_t get_hdf5_type<long>() { return H5T_NATIVE_LONG; }$/;"	f	namespace:cvflann::__anon113
get_hdf5_type	opencv2/flann/hdf5.h	/^hid_t get_hdf5_type<short int>() { return H5T_NATIVE_SHORT; }$/;"	f	namespace:cvflann::__anon113
get_hdf5_type	opencv2/flann/hdf5.h	/^hid_t get_hdf5_type<unsigned char>() { return H5T_NATIVE_UCHAR; }$/;"	f	namespace:cvflann::__anon113
get_hdf5_type	opencv2/flann/hdf5.h	/^hid_t get_hdf5_type<unsigned int>() { return H5T_NATIVE_UINT; }$/;"	f	namespace:cvflann::__anon113
get_hdf5_type	opencv2/flann/hdf5.h	/^hid_t get_hdf5_type<unsigned long>() { return H5T_NATIVE_ULONG; }$/;"	f	namespace:cvflann::__anon113
get_hdf5_type	opencv2/flann/hdf5.h	/^hid_t get_hdf5_type<unsigned short int>() { return H5T_NATIVE_USHORT; }$/;"	f	namespace:cvflann::__anon113
get_join_child	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^    get_join_child(node_const_pointer p_nd,$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
get_join_child	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^    get_join_child(node_pointer p_nd, a_const_pointer p_traits)$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
get_l_child	5/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp	/^      get_l_child() const$/;"	f	class:__gnu_pbds::detail::bin_search_tree_const_node_it_
get_l_child	5/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp	/^      get_l_child() const$/;"	f	class:__gnu_pbds::detail::bin_search_tree_node_it_
get_l_child	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	/^      get_l_child() const$/;"	f	class:__gnu_pbds::detail::ov_tree_node_const_it_
get_l_child	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	/^      get_l_child() const$/;"	f	class:__gnu_pbds::detail::ov_tree_node_it_
get_larger_sibling	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      get_larger_sibling(node_pointer p_nd)$/;"	f	class:__gnu_pbds::detail::pat_trie_base::_CIter
get_load	5/ext/pb_ds/detail/resize_policy/cc_hash_max_collision_check_resize_trigger_imp.hpp	/^get_load() const$/;"	f	class:PB_DS_CLASS_C_DEC
get_loads	5/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_imp.hpp	/^get_loads() const$/;"	f	class:PB_DS_CLASS_C_DEC
get_lower_bound_child_node	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^    get_lower_bound_child_node(a_const_iterator b_it, a_const_iterator e_it,$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
get_metadata	5/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp	/^      get_metadata() const$/;"	f	class:__gnu_pbds::detail::bin_search_tree_const_node_it_
get_metadata	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	/^      get_metadata() const$/;"	f	class:__gnu_pbds::detail::ov_tree_node_const_it_
get_metadata	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	  get_metadata() const$/;"	f	struct:__gnu_pbds::detail::pat_trie_base::_Metadata
get_metadata	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      get_metadata() const$/;"	f	class:__gnu_pbds::detail::pat_trie_base::_Node_citer
get_metadata	5/ext/pb_ds/detail/rb_tree_map_/node.hpp	/^      get_metadata() const$/;"	f	struct:__gnu_pbds::detail::rb_tree_node_
get_metadata	5/ext/pb_ds/detail/rb_tree_map_/node.hpp	/^      get_metadata()$/;"	f	struct:__gnu_pbds::detail::rb_tree_node_
get_metadata	5/ext/pb_ds/detail/splay_tree_/node.hpp	/^      get_metadata() const$/;"	f	struct:__gnu_pbds::detail::splay_tree_node_
get_metadata	5/ext/pb_ds/detail/splay_tree_/node.hpp	/^      get_metadata()$/;"	f	struct:__gnu_pbds::detail::splay_tree_node_
get_minor	opencv2/core/matx.hpp	/^Matx<_Tp, m1, n1> Matx<_Tp, m, n>::get_minor(int i, int j) const$/;"	f	class:cv::Matx
get_monthname	cpp_src/locale_facets.h	/^      get_monthname(iter_type __beg, iter_type __end, ios_base& __io,$/;"	f	class:std::time_get
get_nearest_larger_size	5/ext/pb_ds/detail/resize_policy/hash_exponential_size_policy_imp.hpp	/^get_nearest_larger_size(size_type size) const$/;"	f	class:PB_DS_CLASS_C_DEC
get_nearest_larger_size	5/ext/pb_ds/detail/resize_policy/hash_prime_size_policy_imp.hpp	/^get_nearest_larger_size(size_type n) const$/;"	f	class:PB_DS_CLASS_C_DEC
get_nearest_smaller_size	5/ext/pb_ds/detail/resize_policy/hash_exponential_size_policy_imp.hpp	/^get_nearest_smaller_size(size_type size) const$/;"	f	class:PB_DS_CLASS_C_DEC
get_nearest_smaller_size	5/ext/pb_ds/detail/resize_policy/hash_prime_size_policy_imp.hpp	/^get_nearest_smaller_size(size_type n) const$/;"	f	class:PB_DS_CLASS_C_DEC
get_new_node_for_insert	5/ext/pb_ds/detail/left_child_next_sibling_heap_/insert_fn_imps.hpp	/^get_new_node_for_insert(const_reference r_val)$/;"	f	class:PB_DS_CLASS_C_DEC
get_new_node_for_insert	5/ext/pb_ds/detail/left_child_next_sibling_heap_/insert_fn_imps.hpp	/^get_new_node_for_insert(const_reference r_val, false_type)$/;"	f	class:PB_DS_CLASS_C_DEC
get_new_node_for_insert	5/ext/pb_ds/detail/left_child_next_sibling_heap_/insert_fn_imps.hpp	/^get_new_node_for_insert(const_reference r_val, true_type)$/;"	f	class:PB_DS_CLASS_C_DEC
get_new_node_for_leaf_insert	5/ext/pb_ds/detail/bin_search_tree_/insert_fn_imps.hpp	/^get_new_node_for_leaf_insert(const_reference r_val, false_type)$/;"	f	class:PB_DS_CLASS_C_DEC
get_new_node_for_leaf_insert	5/ext/pb_ds/detail/bin_search_tree_/insert_fn_imps.hpp	/^get_new_node_for_leaf_insert(const_reference r_val, true_type)$/;"	f	class:PB_DS_CLASS_C_DEC
get_new_size	5/ext/pb_ds/detail/resize_policy/hash_standard_resize_policy_imp.hpp	/^get_new_size(size_type size, size_type num_used_e) const$/;"	f	class:PB_DS_CLASS_C_DEC
get_new_size_for_arbitrary	5/ext/pb_ds/detail/binary_heap_/resize_policy.hpp	/^    get_new_size_for_arbitrary(size_type size) const$/;"	f	class:__gnu_pbds::detail::resize_policy
get_new_size_for_grow	5/ext/pb_ds/detail/binary_heap_/resize_policy.hpp	/^    get_new_size_for_grow() const$/;"	f	class:__gnu_pbds::detail::resize_policy
get_new_size_for_shrink	5/ext/pb_ds/detail/binary_heap_/resize_policy.hpp	/^    get_new_size_for_shrink() const$/;"	f	class:__gnu_pbds::detail::resize_policy
get_node_update	5/ext/pb_ds/detail/pat_trie_/policy_access_fn_imps.hpp	/^get_node_update() const$/;"	f	class:PB_DS_CLASS_C_DEC
get_node_update	5/ext/pb_ds/detail/pat_trie_/policy_access_fn_imps.hpp	/^get_node_update()$/;"	f	class:PB_DS_CLASS_C_DEC
get_param	opencv2/flann/params.h	/^T get_param(const IndexParams& params, cv::String name)$/;"	f	namespace:cvflann
get_param	opencv2/flann/params.h	/^T get_param(const IndexParams& params, cv::String name, const T& default_value)$/;"	f	namespace:cvflann
get_policy	opencv2/flann/any.h	/^inline base_any_policy* SinglePolicy<T>::get_policy() { return &policy; }$/;"	f	class:cvflann::anyimpl::SinglePolicy
get_pref_pos	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^    get_pref_pos(a_const_iterator b_it, a_const_iterator e_it,$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
get_probe_fn	5/ext/pb_ds/detail/gp_hash_table_map_/policy_access_fn_imps.hpp	/^get_probe_fn() const$/;"	f	class:PB_DS_CLASS_C_DEC
get_probe_fn	5/ext/pb_ds/detail/gp_hash_table_map_/policy_access_fn_imps.hpp	/^get_probe_fn()$/;"	f	class:PB_DS_CLASS_C_DEC
get_r_child	5/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp	/^      get_r_child() const$/;"	f	class:__gnu_pbds::detail::bin_search_tree_const_node_it_
get_r_child	5/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp	/^      get_r_child() const$/;"	f	class:__gnu_pbds::detail::bin_search_tree_node_it_
get_r_child	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	/^      get_r_child() const$/;"	f	class:__gnu_pbds::detail::ov_tree_node_const_it_
get_r_child	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	/^      get_r_child() const$/;"	f	class:__gnu_pbds::detail::ov_tree_node_it_
get_resize_policy	5/ext/pb_ds/detail/cc_hash_table_map_/policy_access_fn_imps.hpp	/^get_resize_policy() const$/;"	f	class:PB_DS_CLASS_C_DEC
get_resize_policy	5/ext/pb_ds/detail/cc_hash_table_map_/policy_access_fn_imps.hpp	/^get_resize_policy()$/;"	f	class:PB_DS_CLASS_C_DEC
get_resize_policy	5/ext/pb_ds/detail/gp_hash_table_map_/policy_access_fn_imps.hpp	/^get_resize_policy() const$/;"	f	class:PB_DS_CLASS_C_DEC
get_resize_policy	5/ext/pb_ds/detail/gp_hash_table_map_/policy_access_fn_imps.hpp	/^get_resize_policy()$/;"	f	class:PB_DS_CLASS_C_DEC
get_size	5/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_size_base.hpp	/^      get_size() const$/;"	f	class:__gnu_pbds::detail::hash_load_check_resize_trigger_size_base
get_size	opencv2/flann/any.h	/^    virtual ::size_t get_size() { return sizeof(T); }$/;"	f	struct:cvflann::anyimpl::typed_base_any_policy
get_size_policy	5/ext/pb_ds/detail/resize_policy/hash_standard_resize_policy_imp.hpp	/^get_size_policy() const$/;"	f	class:PB_DS_CLASS_C_DEC
get_size_policy	5/ext/pb_ds/detail/resize_policy/hash_standard_resize_policy_imp.hpp	/^get_size_policy()$/;"	f	class:PB_DS_CLASS_C_DEC
get_smaller_sibling	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      get_smaller_sibling(node_pointer p_nd)$/;"	f	class:__gnu_pbds::detail::pat_trie_base::_CIter
get_start_it_state	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      get_start_it_state(pointer& r_p_value,$/;"	f	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
get_start_it_state	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      get_start_it_state(const_pointer& r_p_value, size_type& r_pos) const$/;"	f	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
get_start_it_state	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      get_start_it_state(pointer& r_p_value, size_type& r_pos)$/;"	f	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
get_time	cpp_src/locale_facets.h	/^      get_time(iter_type __beg, iter_type __end, ios_base& __io,$/;"	f	class:std::time_get
get_trigger_policy	5/ext/pb_ds/detail/resize_policy/hash_standard_resize_policy_imp.hpp	/^get_trigger_policy() const$/;"	f	class:PB_DS_CLASS_C_DEC
get_trigger_policy	5/ext/pb_ds/detail/resize_policy/hash_standard_resize_policy_imp.hpp	/^get_trigger_policy()$/;"	f	class:PB_DS_CLASS_C_DEC
get_value	opencv2/flann/any.h	/^    virtual const void* get_value(void* const * src) { return *src; }$/;"	f	struct:cvflann::anyimpl::big_any_policy
get_value	opencv2/flann/any.h	/^    virtual const void* get_value(void* const * src) { return reinterpret_cast<const void*>(src); }$/;"	f	struct:cvflann::anyimpl::small_any_policy
get_value	opencv2/flann/any.h	/^    virtual void* get_value(void** src) { return *src; }$/;"	f	struct:cvflann::anyimpl::big_any_policy
get_value	opencv2/flann/any.h	/^    virtual void* get_value(void** src) { return reinterpret_cast<void*>(src); }$/;"	f	struct:cvflann::anyimpl::small_any_policy
get_weekday	cpp_src/locale_facets.h	/^      get_weekday(iter_type __beg, iter_type __end, ios_base& __io,$/;"	f	class:std::time_get
get_year	cpp_src/locale_facets.h	/^      get_year(iter_type __beg, iter_type __end, ios_base& __io,$/;"	f	class:std::time_get
getline	cpp_src/basic_string.h	/^    getline(basic_istream<_CharT, _Traits>& __is,$/;"	f	namespace:std
getloc	cpp_src/ios_base.h	/^    getloc() const { return _M_ios_locale; }$/;"	f	class:std::ios_base
glob	opencv2/core/cuda/emulation.hpp	/^        struct glob$/;"	s	struct:cv::cuda::device::Emulation
globPtr	opencv2/cudev/ptr2d/glob.hpp	/^__host__ GlobPtrSz<T> globPtr(const GpuMat& mat)$/;"	f	namespace:cv::cudev
globPtr	opencv2/cudev/ptr2d/glob.hpp	/^__host__ __device__ GlobPtr<T> globPtr(T* data, size_t step)$/;"	f	namespace:cv::cudev
globPtr	opencv2/cudev/ptr2d/glob.hpp	/^__host__ __device__ GlobPtrSz<T> globPtr(T* data, size_t step, int rows, int cols)$/;"	f	namespace:cv::cudev
good	cpp_src/basic_ios.h	/^      good() const$/;"	f	class:std::basic_ios
goodbit	cpp_src/ios_base.h	/^    static const iostate goodbit =	_S_goodbit;$/;"	m	class:std::ios_base
gp_hash_table	5/ext/pb_ds/assoc_container.hpp	/^    gp_hash_table() { }$/;"	f	class:__gnu_pbds::gp_hash_table
gp_hash_table	5/ext/pb_ds/assoc_container.hpp	/^    gp_hash_table(It first, It last)$/;"	f	class:__gnu_pbds::gp_hash_table
gp_hash_table	5/ext/pb_ds/assoc_container.hpp	/^    gp_hash_table(It first, It last, const hash_fn& h)$/;"	f	class:__gnu_pbds::gp_hash_table
gp_hash_table	5/ext/pb_ds/assoc_container.hpp	/^    gp_hash_table(It first, It last, const hash_fn& h, const eq_fn& e)$/;"	f	class:__gnu_pbds::gp_hash_table
gp_hash_table	5/ext/pb_ds/assoc_container.hpp	/^    gp_hash_table(It first, It last, const hash_fn& h, const eq_fn& e,$/;"	f	class:__gnu_pbds::gp_hash_table
gp_hash_table	5/ext/pb_ds/assoc_container.hpp	/^    gp_hash_table(const gp_hash_table& other)$/;"	f	class:__gnu_pbds::gp_hash_table
gp_hash_table	5/ext/pb_ds/assoc_container.hpp	/^    gp_hash_table(const hash_fn& h)$/;"	f	class:__gnu_pbds::gp_hash_table
gp_hash_table	5/ext/pb_ds/assoc_container.hpp	/^    gp_hash_table(const hash_fn& h, const eq_fn& e)$/;"	f	class:__gnu_pbds::gp_hash_table
gp_hash_table	5/ext/pb_ds/assoc_container.hpp	/^    gp_hash_table(const hash_fn& h, const eq_fn& e, const comb_probe_fn& cp)$/;"	f	class:__gnu_pbds::gp_hash_table
gp_hash_table	5/ext/pb_ds/assoc_container.hpp	/^    gp_hash_table(const hash_fn& h, const eq_fn& e, const comb_probe_fn& cp,$/;"	f	class:__gnu_pbds::gp_hash_table
gp_hash_table	5/ext/pb_ds/assoc_container.hpp	/^  class gp_hash_table : public PB_DS_GP_HASH_BASE$/;"	c	namespace:__gnu_pbds
gp_hash_tag	5/ext/pb_ds/tag_and_trait.hpp	/^  struct gp_hash_tag : public basic_hash_tag { };$/;"	s	namespace:__gnu_pbds
gradx1_	opencv2/stitching/detail/seam_finders.hpp	/^    Mat_<float> gradx1_, grady1_;$/;"	m	class:cv::detail::DpSeamFinder
gradx2_	opencv2/stitching/detail/seam_finders.hpp	/^    Mat_<float> gradx2_, grady2_;$/;"	m	class:cv::detail::DpSeamFinder
grady1_	opencv2/stitching/detail/seam_finders.hpp	/^    Mat_<float> gradx1_, grady1_;$/;"	m	class:cv::detail::DpSeamFinder
grady2_	opencv2/stitching/detail/seam_finders.hpp	/^    Mat_<float> gradx2_, grady2_;$/;"	m	class:cv::detail::DpSeamFinder
graph	opencv2/core/core_c.h	/^    CvGraph* graph;        \/* the graph *\/$/;"	m	struct:CvGraphScanner
graph	opencv2/core/core_c.h	/^CVAPI(void)  cvClearGraph( CvGraph* graph );$/;"	v
grayFrame0_	opencv2/videostab/global_motion.hpp	/^    cuda::GpuMat frame0_, grayFrame0_, frame1_;$/;"	m	class:cv::videostab::KeypointBasedMotionEstimatorGpu
grayFrame_	opencv2/videostab/inpainting.hpp	/^    Mat_<uchar> grayFrame_, transformedGrayFrame1_;$/;"	m	class:cv::videostab::MotionInpainter
gray_image_	opencv2/stitching/detail/matchers.hpp	/^    cuda::GpuMat gray_image_;$/;"	m	class:cv::detail::SurfFeaturesFinderGpu
grayscaleMode	opencv2/videoio/cap_ios.h	/^@property (nonatomic, assign) BOOL grayscaleMode;$/;"	v
greater	cpp_src/stl_function.h	/^    struct greater : public binary_function<_Tp, _Tp, bool>$/;"	s	namespace:std
greater	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ greater() {}$/;"	f	struct:cv::cuda::device::greater
greater	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ greater(const greater&) {}$/;"	f	struct:cv::cuda::device::greater
greater	opencv2/core/cuda/functional.hpp	/^    template <typename T> struct greater : binary_function<T, T, bool>$/;"	s	namespace:cv::cuda::device
greater	opencv2/cudev/functional/functional.hpp	/^template <typename T> struct greater : binary_function<T, T, typename MakeVec<uchar, VecTraits<T>::cn>::type>$/;"	s	namespace:cv::cudev
greater_equal	cpp_src/stl_function.h	/^    struct greater_equal : public binary_function<_Tp, _Tp, bool>$/;"	s	namespace:std
greater_equal	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ greater_equal() {}$/;"	f	struct:cv::cuda::device::greater_equal
greater_equal	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ greater_equal(const greater_equal&) {}$/;"	f	struct:cv::cuda::device::greater_equal
greater_equal	opencv2/core/cuda/functional.hpp	/^    template <typename T> struct greater_equal : binary_function<T, T, bool>$/;"	s	namespace:cv::cuda::device
greater_equal	opencv2/cudev/functional/functional.hpp	/^template <typename T> struct greater_equal : binary_function<T, T, typename MakeVec<uchar, VecTraits<T>::cn>::type>$/;"	s	namespace:cv::cudev
greek	opencv2/highgui.hpp	/^    const int*  greek;$/;"	m	struct:cv::QtFont
greek	opencv2/imgproc/imgproc_c.h	/^    const int*  greek;$/;"	m	struct:CvFont
gridCalcSum	opencv2/cudev/grid/reduce.hpp	/^__host__ void gridCalcSum(const SrcPtr& src, GpuMat_<ResType>& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridCalcSum	opencv2/cudev/grid/reduce.hpp	/^__host__ void gridCalcSum(const SrcPtr& src, GpuMat_<ResType>& dst, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridCalcSum_	opencv2/cudev/grid/reduce.hpp	/^__host__ void gridCalcSum_(const SrcPtr& src, GpuMat_<ResType>& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridCalcSum_	opencv2/cudev/grid/reduce.hpp	/^__host__ void gridCalcSum_(const SrcPtr& src, GpuMat_<ResType>& dst, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridCopy	opencv2/cudev/grid/copy.hpp	/^__host__ void gridCopy(const SrcPtr& src, GpuMat_<DstType>& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridCopy	opencv2/cudev/grid/copy.hpp	/^__host__ void gridCopy(const SrcPtr& src, GpuMat_<DstType>& dst, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridCopy	opencv2/cudev/grid/copy.hpp	/^__host__ void gridCopy(const SrcPtr& src, const GlobPtrSz<DstType>& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridCopy	opencv2/cudev/grid/copy.hpp	/^__host__ void gridCopy(const SrcPtr& src, const GlobPtrSz<DstType>& dst, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridCopy	opencv2/cudev/grid/copy.hpp	/^__host__ void gridCopy(const SrcPtrTuple& src, const tuple< GlobPtrSz<D0>, GlobPtrSz<D1> >& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridCopy	opencv2/cudev/grid/copy.hpp	/^__host__ void gridCopy(const SrcPtrTuple& src, const tuple< GlobPtrSz<D0>, GlobPtrSz<D1> >& dst, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridCopy	opencv2/cudev/grid/copy.hpp	/^__host__ void gridCopy(const SrcPtrTuple& src, const tuple< GlobPtrSz<D0>, GlobPtrSz<D1>, GlobPtrSz<D2> >& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridCopy	opencv2/cudev/grid/copy.hpp	/^__host__ void gridCopy(const SrcPtrTuple& src, const tuple< GlobPtrSz<D0>, GlobPtrSz<D1>, GlobPtrSz<D2> >& dst, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridCopy	opencv2/cudev/grid/copy.hpp	/^__host__ void gridCopy(const SrcPtrTuple& src, const tuple< GlobPtrSz<D0>, GlobPtrSz<D1>, GlobPtrSz<D2>, GlobPtrSz<D3> >& dst, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridCopy	opencv2/cudev/grid/copy.hpp	/^__host__ void gridCopy(const SrcPtrTuple& src, const tuple< GpuMat_<D0>&, GpuMat_<D1>& >& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridCopy	opencv2/cudev/grid/copy.hpp	/^__host__ void gridCopy(const SrcPtrTuple& src, const tuple< GpuMat_<D0>&, GpuMat_<D1>& >& dst, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridCopy	opencv2/cudev/grid/copy.hpp	/^__host__ void gridCopy(const SrcPtrTuple& src, const tuple< GpuMat_<D0>&, GpuMat_<D1>&, GpuMat_<D2>& >& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridCopy	opencv2/cudev/grid/copy.hpp	/^__host__ void gridCopy(const SrcPtrTuple& src, const tuple< GpuMat_<D0>&, GpuMat_<D1>&, GpuMat_<D2>& >& dst, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridCopy	opencv2/cudev/grid/copy.hpp	/^__host__ void gridCopy(const SrcPtrTuple& src, const tuple< GpuMat_<D0>&, GpuMat_<D1>&, GpuMat_<D2>&, GpuMat_<D3>& >& dst, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridCopy_	opencv2/cudev/grid/copy.hpp	/^__host__ void gridCopy_(const SrcPtr& src, GpuMat_<DstType>& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridCopy_	opencv2/cudev/grid/copy.hpp	/^__host__ void gridCopy_(const SrcPtr& src, GpuMat_<DstType>& dst, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridCopy_	opencv2/cudev/grid/copy.hpp	/^__host__ void gridCopy_(const SrcPtr& src, const GlobPtrSz<DstType>& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridCopy_	opencv2/cudev/grid/copy.hpp	/^__host__ void gridCopy_(const SrcPtr& src, const GlobPtrSz<DstType>& dst, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridCopy_	opencv2/cudev/grid/copy.hpp	/^__host__ void gridCopy_(const SrcPtrTuple& src, const tuple< GlobPtrSz<D0>, GlobPtrSz<D1> >& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridCopy_	opencv2/cudev/grid/copy.hpp	/^__host__ void gridCopy_(const SrcPtrTuple& src, const tuple< GlobPtrSz<D0>, GlobPtrSz<D1> >& dst, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridCopy_	opencv2/cudev/grid/copy.hpp	/^__host__ void gridCopy_(const SrcPtrTuple& src, const tuple< GlobPtrSz<D0>, GlobPtrSz<D1>, GlobPtrSz<D2> >& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridCopy_	opencv2/cudev/grid/copy.hpp	/^__host__ void gridCopy_(const SrcPtrTuple& src, const tuple< GlobPtrSz<D0>, GlobPtrSz<D1>, GlobPtrSz<D2> >& dst, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridCopy_	opencv2/cudev/grid/copy.hpp	/^__host__ void gridCopy_(const SrcPtrTuple& src, const tuple< GlobPtrSz<D0>, GlobPtrSz<D1>, GlobPtrSz<D2>, GlobPtrSz<D3> >& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridCopy_	opencv2/cudev/grid/copy.hpp	/^__host__ void gridCopy_(const SrcPtrTuple& src, const tuple< GlobPtrSz<D0>, GlobPtrSz<D1>, GlobPtrSz<D2>, GlobPtrSz<D3> >& dst, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridCopy_	opencv2/cudev/grid/copy.hpp	/^__host__ void gridCopy_(const SrcPtrTuple& src, const tuple< GpuMat_<D0>&, GpuMat_<D1>& >& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridCopy_	opencv2/cudev/grid/copy.hpp	/^__host__ void gridCopy_(const SrcPtrTuple& src, const tuple< GpuMat_<D0>&, GpuMat_<D1>& >& dst, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridCopy_	opencv2/cudev/grid/copy.hpp	/^__host__ void gridCopy_(const SrcPtrTuple& src, const tuple< GpuMat_<D0>&, GpuMat_<D1>&, GpuMat_<D2>& >& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridCopy_	opencv2/cudev/grid/copy.hpp	/^__host__ void gridCopy_(const SrcPtrTuple& src, const tuple< GpuMat_<D0>&, GpuMat_<D1>&, GpuMat_<D2>& >& dst, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridCopy_	opencv2/cudev/grid/copy.hpp	/^__host__ void gridCopy_(const SrcPtrTuple& src, const tuple< GpuMat_<D0>&, GpuMat_<D1>&, GpuMat_<D2>&, GpuMat_<D3>& >& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridCopy_	opencv2/cudev/grid/copy.hpp	/^__host__ void gridCopy_(const SrcPtrTuple& src, const tuple< GpuMat_<D0>&, GpuMat_<D1>&, GpuMat_<D2>&, GpuMat_<D3>& >& dst, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridCountNonZero	opencv2/cudev/grid/reduce.hpp	/^__host__ void gridCountNonZero(const SrcPtr& src, GpuMat_<ResType>& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridCountNonZero	opencv2/cudev/grid/reduce.hpp	/^__host__ void gridCountNonZero(const SrcPtr& src, GpuMat_<ResType>& dst, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridCountNonZero_	opencv2/cudev/grid/reduce.hpp	/^__host__ void gridCountNonZero_(const SrcPtr& src, GpuMat_<ResType>& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridCountNonZero_	opencv2/cudev/grid/reduce.hpp	/^__host__ void gridCountNonZero_(const SrcPtr& src, GpuMat_<ResType>& dst, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridFindMaxVal	opencv2/cudev/grid/reduce.hpp	/^__host__ void gridFindMaxVal(const SrcPtr& src, GpuMat_<ResType>& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridFindMaxVal	opencv2/cudev/grid/reduce.hpp	/^__host__ void gridFindMaxVal(const SrcPtr& src, GpuMat_<ResType>& dst, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridFindMaxVal_	opencv2/cudev/grid/reduce.hpp	/^__host__ void gridFindMaxVal_(const SrcPtr& src, GpuMat_<ResType>& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridFindMaxVal_	opencv2/cudev/grid/reduce.hpp	/^__host__ void gridFindMaxVal_(const SrcPtr& src, GpuMat_<ResType>& dst, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridFindMinMaxVal	opencv2/cudev/grid/reduce.hpp	/^__host__ void gridFindMinMaxVal(const SrcPtr& src, GpuMat_<ResType>& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridFindMinMaxVal	opencv2/cudev/grid/reduce.hpp	/^__host__ void gridFindMinMaxVal(const SrcPtr& src, GpuMat_<ResType>& dst, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridFindMinMaxVal_	opencv2/cudev/grid/reduce.hpp	/^__host__ void gridFindMinMaxVal_(const SrcPtr& src, GpuMat_<ResType>& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridFindMinMaxVal_	opencv2/cudev/grid/reduce.hpp	/^__host__ void gridFindMinMaxVal_(const SrcPtr& src, GpuMat_<ResType>& dst, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridFindMinVal	opencv2/cudev/grid/reduce.hpp	/^__host__ void gridFindMinVal(const SrcPtr& src, GpuMat_<ResType>& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridFindMinVal	opencv2/cudev/grid/reduce.hpp	/^__host__ void gridFindMinVal(const SrcPtr& src, GpuMat_<ResType>& dst, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridFindMinVal_	opencv2/cudev/grid/reduce.hpp	/^__host__ void gridFindMinVal_(const SrcPtr& src, GpuMat_<ResType>& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridFindMinVal_	opencv2/cudev/grid/reduce.hpp	/^__host__ void gridFindMinVal_(const SrcPtr& src, GpuMat_<ResType>& dst, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridHistogram	opencv2/cudev/grid/histogram.hpp	/^__host__ void gridHistogram(const SrcPtr& src, GpuMat_<ResType>& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridHistogram	opencv2/cudev/grid/histogram.hpp	/^__host__ void gridHistogram(const SrcPtr& src, GpuMat_<ResType>& dst, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridHistogram_	opencv2/cudev/grid/histogram.hpp	/^__host__ void gridHistogram_(const SrcPtr& src, GpuMat_<ResType>& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridHistogram_	opencv2/cudev/grid/histogram.hpp	/^__host__ void gridHistogram_(const SrcPtr& src, GpuMat_<ResType>& dst, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridIntegral	opencv2/cudev/grid/integral.hpp	/^__host__ void gridIntegral(const SrcPtr& src, GpuMat_<DstType>& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridMerge	opencv2/cudev/grid/split_merge.hpp	/^__host__ void gridMerge(const SrcPtrTuple& src, GpuMat_<DstType>& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridMerge	opencv2/cudev/grid/split_merge.hpp	/^__host__ void gridMerge(const SrcPtrTuple& src, GpuMat_<DstType>& dst, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridMerge	opencv2/cudev/grid/split_merge.hpp	/^__host__ void gridMerge(const SrcPtrTuple& src, const GlobPtrSz<DstType>& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridMerge	opencv2/cudev/grid/split_merge.hpp	/^__host__ void gridMerge(const SrcPtrTuple& src, const GlobPtrSz<DstType>& dst, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridMerge_	opencv2/cudev/grid/split_merge.hpp	/^__host__ void gridMerge_(const SrcPtrTuple& src, GpuMat_<DstType>& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridMerge_	opencv2/cudev/grid/split_merge.hpp	/^__host__ void gridMerge_(const SrcPtrTuple& src, GpuMat_<DstType>& dst, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridMerge_	opencv2/cudev/grid/split_merge.hpp	/^__host__ void gridMerge_(const SrcPtrTuple& src, const GlobPtrSz<DstType>& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridMerge_	opencv2/cudev/grid/split_merge.hpp	/^__host__ void gridMerge_(const SrcPtrTuple& src, const GlobPtrSz<DstType>& dst, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridMinMaxLoc	opencv2/cudev/grid/reduce.hpp	/^__host__ void gridMinMaxLoc(const SrcPtr& src, GpuMat_<ResType>& valBuf, GpuMat_<int>& locBuf, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridMinMaxLoc	opencv2/cudev/grid/reduce.hpp	/^__host__ void gridMinMaxLoc(const SrcPtr& src, GpuMat_<ResType>& valBuf, GpuMat_<int>& locBuf, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridMinMaxLoc_	opencv2/cudev/grid/reduce.hpp	/^__host__ void gridMinMaxLoc_(const SrcPtr& src, GpuMat_<ResType>& valBuf, GpuMat_<int>& locBuf, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridMinMaxLoc_	opencv2/cudev/grid/reduce.hpp	/^__host__ void gridMinMaxLoc_(const SrcPtr& src, GpuMat_<ResType>& valBuf, GpuMat_<int>& locBuf, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridPyrDown	opencv2/cudev/grid/pyramids.hpp	/^__host__ void gridPyrDown(const SrcPtr& src, GpuMat_<DstType>& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridPyrDown_	opencv2/cudev/grid/pyramids.hpp	/^__host__ void gridPyrDown_(const SrcPtr& src, GpuMat_<DstType>& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridPyrUp	opencv2/cudev/grid/pyramids.hpp	/^__host__ void gridPyrUp(const SrcPtr& src, GpuMat_<DstType>& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridReduceToColumn	opencv2/cudev/grid/reduce_to_vec.hpp	/^__host__ void gridReduceToColumn(const SrcPtr& src, GpuMat_<ResType>& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridReduceToColumn	opencv2/cudev/grid/reduce_to_vec.hpp	/^__host__ void gridReduceToColumn(const SrcPtr& src, GpuMat_<ResType>& dst, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridReduceToColumn_	opencv2/cudev/grid/reduce_to_vec.hpp	/^__host__ void gridReduceToColumn_(const SrcPtr& src, GpuMat_<ResType>& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridReduceToColumn_	opencv2/cudev/grid/reduce_to_vec.hpp	/^__host__ void gridReduceToColumn_(const SrcPtr& src, GpuMat_<ResType>& dst, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridReduceToRow	opencv2/cudev/grid/reduce_to_vec.hpp	/^__host__ void gridReduceToRow(const SrcPtr& src, GpuMat_<ResType>& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridReduceToRow	opencv2/cudev/grid/reduce_to_vec.hpp	/^__host__ void gridReduceToRow(const SrcPtr& src, GpuMat_<ResType>& dst, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridSplit	opencv2/cudev/grid/split_merge.hpp	/^__host__ void gridSplit(const SrcPtr& src, GlobPtrSz<DstType> (&dst)[COUNT], Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridSplit	opencv2/cudev/grid/split_merge.hpp	/^__host__ void gridSplit(const SrcPtr& src, GlobPtrSz<DstType> (&dst)[COUNT], const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridSplit	opencv2/cudev/grid/split_merge.hpp	/^__host__ void gridSplit(const SrcPtr& src, GpuMat_<DstType> (&dst)[COUNT], Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridSplit	opencv2/cudev/grid/split_merge.hpp	/^__host__ void gridSplit(const SrcPtr& src, GpuMat_<DstType> (&dst)[COUNT], const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridSplit	opencv2/cudev/grid/split_merge.hpp	/^__host__ void gridSplit(const SrcPtr& src, const tuple< GpuMat_<DstType>&, GpuMat_<DstType>& >& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridSplit	opencv2/cudev/grid/split_merge.hpp	/^__host__ void gridSplit(const SrcPtr& src, const tuple< GpuMat_<DstType>&, GpuMat_<DstType>& >& dst, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridSplit	opencv2/cudev/grid/split_merge.hpp	/^__host__ void gridSplit(const SrcPtr& src, const tuple< GpuMat_<DstType>&, GpuMat_<DstType>&, GpuMat_<DstType>& >& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridSplit	opencv2/cudev/grid/split_merge.hpp	/^__host__ void gridSplit(const SrcPtr& src, const tuple< GpuMat_<DstType>&, GpuMat_<DstType>&, GpuMat_<DstType>& >& dst, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridSplit	opencv2/cudev/grid/split_merge.hpp	/^__host__ void gridSplit(const SrcPtr& src, const tuple< GpuMat_<DstType>&, GpuMat_<DstType>&, GpuMat_<DstType>&, GpuMat_<DstType>& >& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridSplit	opencv2/cudev/grid/split_merge.hpp	/^__host__ void gridSplit(const SrcPtr& src, const tuple< GpuMat_<DstType>&, GpuMat_<DstType>&, GpuMat_<DstType>&, GpuMat_<DstType>& >& dst, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridSplit_	opencv2/cudev/grid/split_merge.hpp	/^__host__ void gridSplit_(const SrcPtr& src, GlobPtrSz<DstType> (&dst)[2], Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridSplit_	opencv2/cudev/grid/split_merge.hpp	/^__host__ void gridSplit_(const SrcPtr& src, GlobPtrSz<DstType> (&dst)[2], const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridSplit_	opencv2/cudev/grid/split_merge.hpp	/^__host__ void gridSplit_(const SrcPtr& src, GlobPtrSz<DstType> (&dst)[3], Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridSplit_	opencv2/cudev/grid/split_merge.hpp	/^__host__ void gridSplit_(const SrcPtr& src, GlobPtrSz<DstType> (&dst)[3], const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridSplit_	opencv2/cudev/grid/split_merge.hpp	/^__host__ void gridSplit_(const SrcPtr& src, GlobPtrSz<DstType> (&dst)[4], Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridSplit_	opencv2/cudev/grid/split_merge.hpp	/^__host__ void gridSplit_(const SrcPtr& src, GlobPtrSz<DstType> (&dst)[4], const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridSplit_	opencv2/cudev/grid/split_merge.hpp	/^__host__ void gridSplit_(const SrcPtr& src, GpuMat_<DstType> (&dst)[2], Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridSplit_	opencv2/cudev/grid/split_merge.hpp	/^__host__ void gridSplit_(const SrcPtr& src, GpuMat_<DstType> (&dst)[2], const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridSplit_	opencv2/cudev/grid/split_merge.hpp	/^__host__ void gridSplit_(const SrcPtr& src, GpuMat_<DstType> (&dst)[3], Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridSplit_	opencv2/cudev/grid/split_merge.hpp	/^__host__ void gridSplit_(const SrcPtr& src, GpuMat_<DstType> (&dst)[3], const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridSplit_	opencv2/cudev/grid/split_merge.hpp	/^__host__ void gridSplit_(const SrcPtr& src, GpuMat_<DstType> (&dst)[4], Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridSplit_	opencv2/cudev/grid/split_merge.hpp	/^__host__ void gridSplit_(const SrcPtr& src, GpuMat_<DstType> (&dst)[4], const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridSplit_	opencv2/cudev/grid/split_merge.hpp	/^__host__ void gridSplit_(const SrcPtr& src, const tuple< GpuMat_<DstType>&, GpuMat_<DstType>& >& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridSplit_	opencv2/cudev/grid/split_merge.hpp	/^__host__ void gridSplit_(const SrcPtr& src, const tuple< GpuMat_<DstType>&, GpuMat_<DstType>& >& dst, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridSplit_	opencv2/cudev/grid/split_merge.hpp	/^__host__ void gridSplit_(const SrcPtr& src, const tuple< GpuMat_<DstType>&, GpuMat_<DstType>&, GpuMat_<DstType>& >& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridSplit_	opencv2/cudev/grid/split_merge.hpp	/^__host__ void gridSplit_(const SrcPtr& src, const tuple< GpuMat_<DstType>&, GpuMat_<DstType>&, GpuMat_<DstType>& >& dst, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridSplit_	opencv2/cudev/grid/split_merge.hpp	/^__host__ void gridSplit_(const SrcPtr& src, const tuple< GpuMat_<DstType>&, GpuMat_<DstType>&, GpuMat_<DstType>&, GpuMat_<DstType>& >& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridSplit_	opencv2/cudev/grid/split_merge.hpp	/^__host__ void gridSplit_(const SrcPtr& src, const tuple< GpuMat_<DstType>&, GpuMat_<DstType>&, GpuMat_<DstType>&, GpuMat_<DstType>& >& dst, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridTransformBinary	opencv2/cudev/grid/transform.hpp	/^__host__ void gridTransformBinary(const SrcPtr1& src1, const SrcPtr2& src2, GpuMat_<DstType>& dst, const Op& op, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridTransformBinary	opencv2/cudev/grid/transform.hpp	/^__host__ void gridTransformBinary(const SrcPtr1& src1, const SrcPtr2& src2, GpuMat_<DstType>& dst, const Op& op, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridTransformBinary	opencv2/cudev/grid/transform.hpp	/^__host__ void gridTransformBinary(const SrcPtr1& src1, const SrcPtr2& src2, const GlobPtrSz<DstType>& dst, const Op& op, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridTransformBinary	opencv2/cudev/grid/transform.hpp	/^__host__ void gridTransformBinary(const SrcPtr1& src1, const SrcPtr2& src2, const GlobPtrSz<DstType>& dst, const Op& op, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridTransformBinary_	opencv2/cudev/grid/transform.hpp	/^__host__ void gridTransformBinary_(const SrcPtr1& src1, const SrcPtr2& src2, GpuMat_<DstType>& dst, const BinOp& op, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridTransformBinary_	opencv2/cudev/grid/transform.hpp	/^__host__ void gridTransformBinary_(const SrcPtr1& src1, const SrcPtr2& src2, GpuMat_<DstType>& dst, const BinOp& op, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridTransformBinary_	opencv2/cudev/grid/transform.hpp	/^__host__ void gridTransformBinary_(const SrcPtr1& src1, const SrcPtr2& src2, const GlobPtrSz<DstType>& dst, const BinOp& op, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridTransformBinary_	opencv2/cudev/grid/transform.hpp	/^__host__ void gridTransformBinary_(const SrcPtr1& src1, const SrcPtr2& src2, const GlobPtrSz<DstType>& dst, const BinOp& op, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridTransformTuple	opencv2/cudev/grid/transform.hpp	/^__host__ void gridTransformTuple(const SrcPtr& src, const tuple< GlobPtrSz<D0>, GlobPtrSz<D1> >& dst, const OpTuple& op, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridTransformTuple	opencv2/cudev/grid/transform.hpp	/^__host__ void gridTransformTuple(const SrcPtr& src, const tuple< GlobPtrSz<D0>, GlobPtrSz<D1> >& dst, const OpTuple& op, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridTransformTuple	opencv2/cudev/grid/transform.hpp	/^__host__ void gridTransformTuple(const SrcPtr& src, const tuple< GlobPtrSz<D0>, GlobPtrSz<D1>, GlobPtrSz<D2> >& dst, const OpTuple& op, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridTransformTuple	opencv2/cudev/grid/transform.hpp	/^__host__ void gridTransformTuple(const SrcPtr& src, const tuple< GlobPtrSz<D0>, GlobPtrSz<D1>, GlobPtrSz<D2> >& dst, const OpTuple& op, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridTransformTuple	opencv2/cudev/grid/transform.hpp	/^__host__ void gridTransformTuple(const SrcPtr& src, const tuple< GlobPtrSz<D0>, GlobPtrSz<D1>, GlobPtrSz<D2>, GlobPtrSz<D3> >& dst, const OpTuple& op, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridTransformTuple	opencv2/cudev/grid/transform.hpp	/^__host__ void gridTransformTuple(const SrcPtr& src, const tuple< GlobPtrSz<D0>, GlobPtrSz<D1>, GlobPtrSz<D2>, GlobPtrSz<D3> >& dst, const OpTuple& op, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridTransformTuple	opencv2/cudev/grid/transform.hpp	/^__host__ void gridTransformTuple(const SrcPtr& src, const tuple< GpuMat_<D0>&, GpuMat_<D1>& >& dst, const OpTuple& op, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridTransformTuple	opencv2/cudev/grid/transform.hpp	/^__host__ void gridTransformTuple(const SrcPtr& src, const tuple< GpuMat_<D0>&, GpuMat_<D1>& >& dst, const OpTuple& op, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridTransformTuple	opencv2/cudev/grid/transform.hpp	/^__host__ void gridTransformTuple(const SrcPtr& src, const tuple< GpuMat_<D0>&, GpuMat_<D1>&, GpuMat_<D2>& >& dst, const OpTuple& op, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridTransformTuple	opencv2/cudev/grid/transform.hpp	/^__host__ void gridTransformTuple(const SrcPtr& src, const tuple< GpuMat_<D0>&, GpuMat_<D1>&, GpuMat_<D2>& >& dst, const OpTuple& op, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridTransformTuple	opencv2/cudev/grid/transform.hpp	/^__host__ void gridTransformTuple(const SrcPtr& src, const tuple< GpuMat_<D0>&, GpuMat_<D1>&, GpuMat_<D2>&, GpuMat_<D3>& >& dst, const OpTuple& op, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridTransformTuple	opencv2/cudev/grid/transform.hpp	/^__host__ void gridTransformTuple(const SrcPtr& src, const tuple< GpuMat_<D0>&, GpuMat_<D1>&, GpuMat_<D2>&, GpuMat_<D3>& >& dst, const OpTuple& op, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridTransformTuple_	opencv2/cudev/grid/transform.hpp	/^__host__ void gridTransformTuple_(const SrcPtr& src, const tuple< GlobPtrSz<D0>, GlobPtrSz<D1> >& dst, const OpTuple& op, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridTransformTuple_	opencv2/cudev/grid/transform.hpp	/^__host__ void gridTransformTuple_(const SrcPtr& src, const tuple< GlobPtrSz<D0>, GlobPtrSz<D1> >& dst, const OpTuple& op, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridTransformTuple_	opencv2/cudev/grid/transform.hpp	/^__host__ void gridTransformTuple_(const SrcPtr& src, const tuple< GlobPtrSz<D0>, GlobPtrSz<D1>, GlobPtrSz<D2> >& dst, const OpTuple& op, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridTransformTuple_	opencv2/cudev/grid/transform.hpp	/^__host__ void gridTransformTuple_(const SrcPtr& src, const tuple< GlobPtrSz<D0>, GlobPtrSz<D1>, GlobPtrSz<D2> >& dst, const OpTuple& op, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridTransformTuple_	opencv2/cudev/grid/transform.hpp	/^__host__ void gridTransformTuple_(const SrcPtr& src, const tuple< GlobPtrSz<D0>, GlobPtrSz<D1>, GlobPtrSz<D2>, GlobPtrSz<D3> >& dst, const OpTuple& op, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridTransformTuple_	opencv2/cudev/grid/transform.hpp	/^__host__ void gridTransformTuple_(const SrcPtr& src, const tuple< GlobPtrSz<D0>, GlobPtrSz<D1>, GlobPtrSz<D2>, GlobPtrSz<D3> >& dst, const OpTuple& op, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridTransformTuple_	opencv2/cudev/grid/transform.hpp	/^__host__ void gridTransformTuple_(const SrcPtr& src, const tuple< GpuMat_<D0>&, GpuMat_<D1>& >& dst, const OpTuple& op, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridTransformTuple_	opencv2/cudev/grid/transform.hpp	/^__host__ void gridTransformTuple_(const SrcPtr& src, const tuple< GpuMat_<D0>&, GpuMat_<D1>& >& dst, const OpTuple& op, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridTransformTuple_	opencv2/cudev/grid/transform.hpp	/^__host__ void gridTransformTuple_(const SrcPtr& src, const tuple< GpuMat_<D0>&, GpuMat_<D1>&, GpuMat_<D2>& >& dst, const OpTuple& op, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridTransformTuple_	opencv2/cudev/grid/transform.hpp	/^__host__ void gridTransformTuple_(const SrcPtr& src, const tuple< GpuMat_<D0>&, GpuMat_<D1>&, GpuMat_<D2>& >& dst, const OpTuple& op, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridTransformTuple_	opencv2/cudev/grid/transform.hpp	/^__host__ void gridTransformTuple_(const SrcPtr& src, const tuple< GpuMat_<D0>&, GpuMat_<D1>&, GpuMat_<D2>&, GpuMat_<D3>& >& dst, const OpTuple& op, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridTransformTuple_	opencv2/cudev/grid/transform.hpp	/^__host__ void gridTransformTuple_(const SrcPtr& src, const tuple< GpuMat_<D0>&, GpuMat_<D1>&, GpuMat_<D2>&, GpuMat_<D3>& >& dst, const OpTuple& op, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridTransformUnary	opencv2/cudev/grid/transform.hpp	/^__host__ void gridTransformUnary(const SrcPtr& src, GpuMat_<DstType>& dst, const Op& op, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridTransformUnary	opencv2/cudev/grid/transform.hpp	/^__host__ void gridTransformUnary(const SrcPtr& src, GpuMat_<DstType>& dst, const Op& op, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridTransformUnary	opencv2/cudev/grid/transform.hpp	/^__host__ void gridTransformUnary(const SrcPtr& src, const GlobPtrSz<DstType>& dst, const Op& op, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridTransformUnary	opencv2/cudev/grid/transform.hpp	/^__host__ void gridTransformUnary(const SrcPtr& src, const GlobPtrSz<DstType>& dst, const Op& op, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridTransformUnary_	opencv2/cudev/grid/transform.hpp	/^__host__ void gridTransformUnary_(const SrcPtr& src, GpuMat_<DstType>& dst, const UnOp& op, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridTransformUnary_	opencv2/cudev/grid/transform.hpp	/^__host__ void gridTransformUnary_(const SrcPtr& src, GpuMat_<DstType>& dst, const UnOp& op, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridTransformUnary_	opencv2/cudev/grid/transform.hpp	/^__host__ void gridTransformUnary_(const SrcPtr& src, const GlobPtrSz<DstType>& dst, const UnOp& op, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridTransformUnary_	opencv2/cudev/grid/transform.hpp	/^__host__ void gridTransformUnary_(const SrcPtr& src, const GlobPtrSz<DstType>& dst, const UnOp& op, const MaskPtr& mask, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridTranspose	opencv2/cudev/grid/transpose.hpp	/^__host__ void gridTranspose(const SrcPtr& src, GpuMat_<DstType>& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridTranspose	opencv2/cudev/grid/transpose.hpp	/^__host__ void gridTranspose(const SrcPtr& src, const GlobPtrSz<DstType>& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridTranspose_	opencv2/cudev/grid/transpose.hpp	/^__host__ void gridTranspose_(const SrcPtr& src, GpuMat_<DstType>& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
gridTranspose_	opencv2/cudev/grid/transpose.hpp	/^__host__ void gridTranspose_(const SrcPtr& src, const GlobPtrSz<DstType>& dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cudev
grid_	opencv2/videostab/outlier_rejection.hpp	/^    std::vector<Cell> grid_;$/;"	m	class:cv::videostab::TranslationBasedLocalOutlierRejector
grid_copy_detail	opencv2/cudev/grid/detail/copy.hpp	/^namespace grid_copy_detail$/;"	n	namespace:cv::cudev
grid_histogram_detail	opencv2/cudev/grid/detail/histogram.hpp	/^namespace grid_histogram_detail$/;"	n	namespace:cv::cudev
grid_minmaxloc_detail	opencv2/cudev/grid/detail/minmaxloc.hpp	/^namespace grid_minmaxloc_detail$/;"	n	namespace:cv::cudev
grid_reduce_detail	opencv2/cudev/grid/detail/reduce.hpp	/^namespace grid_reduce_detail$/;"	n	namespace:cv::cudev
grid_reduce_to_vec_detail	opencv2/cudev/grid/detail/reduce_to_column.hpp	/^namespace grid_reduce_to_vec_detail$/;"	n	namespace:cv::cudev
grid_reduce_to_vec_detail	opencv2/cudev/grid/detail/reduce_to_row.hpp	/^namespace grid_reduce_to_vec_detail$/;"	n	namespace:cv::cudev
grid_size	opencv2/stitching/detail/matchers.hpp	/^    Size grid_size;$/;"	m	class:cv::detail::OrbFeaturesFinder
grid_split_merge_detail	opencv2/cudev/grid/detail/split_merge.hpp	/^namespace grid_split_merge_detail$/;"	n	namespace:cv::cudev
grid_transform_detail	opencv2/cudev/grid/detail/transform.hpp	/^namespace grid_transform_detail$/;"	n	namespace:cv::cudev
grouping	cpp_src/locale_facets.h	/^      grouping() const$/;"	f	class:std::moneypunct
grouping	cpp_src/locale_facets.h	/^      grouping() const$/;"	f	class:std::numpunct
growing_blocks_tag	5/parallel/tags.h	/^  struct growing_blocks_tag : public find_tag { };$/;"	s	namespace:__gnu_parallel
gslice	cpp_src/gslice.h	/^  class gslice$/;"	c	namespace:std
gslice	cpp_src/gslice.h	/^  gslice::gslice(const gslice& __g) : _M_index(__g._M_index)$/;"	f	class:std::gslice
gslice	cpp_src/gslice.h	/^  gslice::gslice(size_t __o, const valarray<size_t>& __l,$/;"	f	class:std::gslice
gslice	cpp_src/gslice.h	/^  inline gslice::gslice () : _M_index(0) {}$/;"	f	class:std::gslice
gslice_array	cpp_src/gslice_array.h	/^    class gslice_array$/;"	c	namespace:std
gslice_array	cpp_src/gslice_array.h	/^    gslice_array<_Tp>::gslice_array(_Array<_Tp> __a,$/;"	f	class:std::gslice_array
gslice_array	cpp_src/gslice_array.h	/^    gslice_array<_Tp>::gslice_array(const gslice_array<_Tp>& __a)$/;"	f	class:std::gslice_array
gt_matches_	opencv2/flann/autotuned_index.h	/^    Matrix<int> gt_matches_;$/;"	m	class:cvflann::AutotunedIndex
h	opencv2/core/cvdef.h	/^    __fp16 h;$/;"	m	union:Cv16suf
haar_feature	opencv2/objdetect/objdetect_c.h	/^    CvHaarFeature* haar_feature;$/;"	m	struct:CvHaarClassifier
haight	opencv2/core/cuda/filters.hpp	/^        int width, haight;$/;"	m	struct:cv::cuda::device::AreaFilter
hal	opencv2/core/hal/hal.hpp	/^namespace cv { namespace hal {$/;"	n	namespace:cv
hal	opencv2/imgproc/hal/hal.hpp	/^namespace cv { namespace hal {$/;"	n	namespace:cv
half	opencv2/core/cuda/detail/color_detail.hpp	/^            static __device__ __forceinline__ T half() { return (T)(max()\/2 + 1); }$/;"	f	struct:cv::cuda::device::color_detail::ColorChannel
half	opencv2/core/cuda/detail/color_detail.hpp	/^            static __device__ __forceinline__ float half() { return 0.5f; }$/;"	f	struct:cv::cuda::device::color_detail::ColorChannel
half	opencv2/cudev/functional/detail/color_cvt.hpp	/^        __device__ __forceinline__ static T half() { return (T)(max()\/2 + 1); }$/;"	f	struct:cv::cudev::color_cvt_detail::ColorChannel
half	opencv2/cudev/functional/detail/color_cvt.hpp	/^        __device__ __forceinline__ static float half() { return 0.5f; }$/;"	f	struct:cv::cudev::color_cvt_detail::ColorChannel
handle	opencv2/core/mat.hpp	/^    void* handle;$/;"	m	struct:cv::UMatData
has	opencv2/core/cuda.inl.hpp	/^bool TargetArchs::has(int major, int minor)$/;"	f	class:cv::cuda::TargetArchs
hasEqualOrGreater	opencv2/core/cuda.inl.hpp	/^bool TargetArchs::hasEqualOrGreater(int major, int minor)$/;"	f	class:cv::cuda::TargetArchs
hasSIMD128	opencv2/core/hal/intrin_cpp.hpp	/^static inline bool hasSIMD128()$/;"	f	namespace:cv
hasSIMD128	opencv2/core/hal/intrin_neon.hpp	/^static inline bool hasSIMD128()$/;"	f	namespace:cv
hasSIMD128	opencv2/core/hal/intrin_sse.hpp	/^static inline bool hasSIMD128()$/;"	f	namespace:cv
has_type	opencv2/flann/any.h	/^    bool has_type()$/;"	f	struct:cvflann::any
hash	cpp_src/locale_facets.h	/^      hash(const _CharT* __lo, const _CharT* __hi) const$/;"	f	class:std::collate
hash	opencv2/core/mat.inl.hpp	/^size_t SparseMat::hash(const int* idx) const$/;"	f	class:cv::SparseMat
hash	opencv2/core/mat.inl.hpp	/^size_t SparseMat::hash(int i0) const$/;"	f	class:cv::SparseMat
hash	opencv2/core/mat.inl.hpp	/^size_t SparseMat::hash(int i0, int i1) const$/;"	f	class:cv::SparseMat
hash	opencv2/core/mat.inl.hpp	/^size_t SparseMat::hash(int i0, int i1, int i2) const$/;"	f	class:cv::SparseMat
hash_eq_fn	5/ext/pb_ds/detail/eq_fn/hash_eq_fn.hpp	/^      hash_eq_fn() { }$/;"	f	struct:__gnu_pbds::detail::hash_eq_fn
hash_eq_fn	5/ext/pb_ds/detail/eq_fn/hash_eq_fn.hpp	/^      hash_eq_fn(const Eq_Fn& r_eq_fn) : Eq_Fn(r_eq_fn) { }$/;"	f	struct:__gnu_pbds::detail::hash_eq_fn
hash_eq_fn	5/ext/pb_ds/detail/eq_fn/hash_eq_fn.hpp	/^    struct hash_eq_fn<Key, Eq_Fn, _Alloc, false> : public Eq_Fn$/;"	s	namespace:__gnu_pbds::detail
hash_eq_fn	5/ext/pb_ds/detail/eq_fn/hash_eq_fn.hpp	/^    struct hash_eq_fn<Key, Eq_Fn, _Alloc, true> : public Eq_Fn$/;"	s	namespace:__gnu_pbds::detail
hash_eq_fn_base	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef PB_DS_HASH_EQ_FN_C_DEC hash_eq_fn_base;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
hash_eq_fn_base	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef PB_DS_HASH_EQ_FN_C_DEC 		hash_eq_fn_base;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
hash_exponential_size_policy	5/ext/pb_ds/detail/resize_policy/hash_exponential_size_policy_imp.hpp	/^hash_exponential_size_policy(size_type start_size, size_type grow_factor) :$/;"	f	class:PB_DS_CLASS_C_DEC
hash_exponential_size_policy	5/ext/pb_ds/hash_policy.hpp	/^  class hash_exponential_size_policy$/;"	c	namespace:__gnu_pbds
hash_fn	5/ext/pb_ds/assoc_container.hpp	/^    typedef Hash_Fn 				hash_fn;$/;"	t	class:__gnu_pbds::cc_hash_table
hash_fn	5/ext/pb_ds/assoc_container.hpp	/^    typedef Hash_Fn 				hash_fn;$/;"	t	class:__gnu_pbds::gp_hash_table
hash_fn	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef Hash_Fn 				hash_fn;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
hash_fn	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef Hash_Fn 				hash_fn;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
hash_fn_base	5/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp	/^      typedef Hash_Fn hash_fn_base;$/;"	t	class:__gnu_pbds::detail::ranged_hash_fn
hash_fn_base	5/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp	/^      typedef Hash_Fn hash_fn_base;$/;"	t	class:__gnu_pbds::detail::ranged_probe_fn
hash_load_check_resize_trigger	5/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_imp.hpp	/^hash_load_check_resize_trigger(float load_min, float load_max)$/;"	f	class:PB_DS_CLASS_C_DEC
hash_load_check_resize_trigger	5/ext/pb_ds/hash_policy.hpp	/^  class hash_load_check_resize_trigger : private PB_DS_SIZE_BASE_C_DEC$/;"	c	namespace:__gnu_pbds
hash_load_check_resize_trigger_size_base	5/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_size_base.hpp	/^      hash_load_check_resize_trigger_size_base(): m_size(0)$/;"	f	class:__gnu_pbds::detail::hash_load_check_resize_trigger_size_base
hash_load_check_resize_trigger_size_base	5/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_size_base.hpp	/^    class hash_load_check_resize_trigger_size_base<Size_Type, false>$/;"	c	namespace:__gnu_pbds::detail
hash_load_check_resize_trigger_size_base	5/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_size_base.hpp	/^    class hash_load_check_resize_trigger_size_base<Size_Type, true>$/;"	c	namespace:__gnu_pbds::detail
hash_prime_size_policy	5/ext/pb_ds/detail/resize_policy/hash_prime_size_policy_imp.hpp	/^hash_prime_size_policy(size_type n) : m_start_size(n)$/;"	f	class:PB_DS_CLASS_C_DEC
hash_prime_size_policy	5/ext/pb_ds/hash_policy.hpp	/^  class hash_prime_size_policy$/;"	c	namespace:__gnu_pbds
hash_standard_resize_policy	5/ext/pb_ds/detail/resize_policy/hash_standard_resize_policy_imp.hpp	/^hash_standard_resize_policy() $/;"	f	class:PB_DS_CLASS_C_DEC
hash_standard_resize_policy	5/ext/pb_ds/detail/resize_policy/hash_standard_resize_policy_imp.hpp	/^hash_standard_resize_policy(const Size_Policy& r_size_policy) $/;"	f	class:PB_DS_CLASS_C_DEC
hash_standard_resize_policy	5/ext/pb_ds/detail/resize_policy/hash_standard_resize_policy_imp.hpp	/^hash_standard_resize_policy(const Size_Policy& r_size_policy, $/;"	f	class:PB_DS_CLASS_C_DEC
hash_standard_resize_policy	5/ext/pb_ds/hash_policy.hpp	/^  class hash_standard_resize_policy$/;"	c	namespace:__gnu_pbds
hash_t	opencv2/core/ocl.hpp	/^    typedef uint64 hash_t;$/;"	t	class:cv::ocl::ProgramSource
hash_type	5/ext/pb_ds/detail/types_traits.hpp	/^	typedef _Th 	hash_type;$/;"	t	struct:__gnu_pbds::detail::stored_hash
hashidx	opencv2/core/mat.hpp	/^    size_t hashidx;$/;"	m	class:cv::SparseMatConstIterator
hashsize	opencv2/core/types_c.h	/^    int hashsize;$/;"	m	struct:CvSparseMat
hashtab	opencv2/core/mat.hpp	/^        std::vector<size_t> hashtab;$/;"	m	struct:cv::SparseMat::Hdr
hashtable	opencv2/core/types_c.h	/^    void** hashtable;$/;"	m	struct:CvSparseMat
hashval	opencv2/core/mat.hpp	/^        size_t hashval;$/;"	m	struct:cv::SparseMat::Node
hashval	opencv2/core/types_c.h	/^    unsigned hashval;$/;"	m	struct:CvSparseNode
hashval	opencv2/core/types_c.h	/^    unsigned hashval;$/;"	m	struct:CvStringHashNode
hdr	opencv2/core/core_c.h	/^    CvMatND* hdr[CV_MAX_ARR]; \/**< pointers to the headers of the$/;"	m	struct:CvNArrayIterator
hdr	opencv2/core/mat.hpp	/^    Hdr* hdr;$/;"	m	class:cv::SparseMat
hdr_refcount	opencv2/core/types_c.h	/^    int hdr_refcount;$/;"	m	struct:CvMat
hdr_refcount	opencv2/core/types_c.h	/^    int hdr_refcount;$/;"	m	struct:CvMatND
hdr_refcount	opencv2/core/types_c.h	/^    int hdr_refcount;$/;"	m	struct:CvSparseMat
head	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename traits_type::head 		head;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
head	5/ext/pb_ds/detail/pat_trie_/traits.hpp	/^      typedef base_type::_Head<synth_access_traits, metadata>	       	head;$/;"	t	struct:__gnu_pbds::detail::trie_traits
head	5/ext/pb_ds/detail/pat_trie_/traits.hpp	/^      typedef base_type::_Head<synth_access_traits, metadata> 	       	head;$/;"	t	struct:__gnu_pbds::detail::trie_traits
head_allocator	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename __rebind_h::other 		head_allocator;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
head_node	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	  head_node$/;"	e	enum:__gnu_pbds::detail::pat_trie_base::node_type
head_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename head_allocator::pointer 		head_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
head_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename __rebind_h::other::pointer	head_pointer;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_CIter
head_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename base_type::head_pointer		head_pointer;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_Iter
header_	opencv2/core/wimage.hpp	/^    IplImage header_;$/;"	m	class:cv::WImageView
header_	opencv2/core/wimage.hpp	/^    IplImage header_;$/;"	m	class:cv::WImageViewC
header_size	opencv2/core/persistence.hpp	/^      int          header_size;$/;"	m	struct:cv::FileNodeIterator::SeqReader
header_size	opencv2/core/types_c.h	/^    int header_size; \/**< sizeof(CvTypeInfo) *\/$/;"	m	struct:CvTypeInfo
heap	opencv2/core/types_c.h	/^    struct CvSet* heap;$/;"	m	struct:CvSparseMat	typeref:struct:CvSparseMat::CvSet
heap	opencv2/flann/heap.h	/^    std::vector<T> heap;$/;"	m	class:cvflann::Heap
height	opencv2/core/cuda/border_interpolate.hpp	/^        int height;$/;"	m	struct:cv::cuda::device::BorderReader
height	opencv2/core/cuda/border_interpolate.hpp	/^        int height;$/;"	m	struct:cv::cuda::device::BrdColConstant
height	opencv2/core/cuda/border_interpolate.hpp	/^        int height;$/;"	m	struct:cv::cuda::device::BrdColWrap
height	opencv2/core/cuda/border_interpolate.hpp	/^        int height;$/;"	m	struct:cv::cuda::device::BrdConstant
height	opencv2/core/cuda/border_interpolate.hpp	/^        int height;$/;"	m	struct:cv::cuda::device::BrdWrap
height	opencv2/core/types.hpp	/^    _Tp width, height; \/\/ the width and the height$/;"	m	class:cv::Size_
height	opencv2/core/types.hpp	/^    _Tp x, y, width, height; \/\/< the top-left corner, as well as width and height of the rectangle$/;"	m	class:cv::Rect_
height	opencv2/core/types_c.h	/^        int height;$/;"	m	union:CvMat::__anon326
height	opencv2/core/types_c.h	/^    float height;$/;"	m	struct:CvSize2D32f
height	opencv2/core/types_c.h	/^    int  height;            \/**< Image height in pixels.                          *\/$/;"	m	struct:_IplImage
height	opencv2/core/types_c.h	/^    int  height;$/;"	m	struct:_IplROI
height	opencv2/core/types_c.h	/^    int height;$/;"	m	struct:CvRect
height	opencv2/core/types_c.h	/^    int height;$/;"	m	struct:CvSize
height	opencv2/cudacodec.hpp	/^    int height;$/;"	m	struct:cv::cudacodec::FormatInfo
height	opencv2/cudalegacy/NCV.hpp	/^    Ncv32s height;     \/\/\/< Rectangle height.$/;"	m	struct:NcvRect32s
height	opencv2/cudalegacy/NCV.hpp	/^    Ncv32s height; \/\/\/< Rectangle height.$/;"	m	struct:NcvSize32s
height	opencv2/cudalegacy/NCV.hpp	/^    Ncv32u height() const {return this->_height;}$/;"	f	class:NCVMatrix
height	opencv2/cudalegacy/NCV.hpp	/^    Ncv32u height;     \/\/\/< Rectangle height.$/;"	m	struct:NcvRect32u
height	opencv2/cudalegacy/NCV.hpp	/^    Ncv32u height; \/\/\/< Rectangle height.$/;"	m	struct:NcvSize32u
height	opencv2/cudalegacy/NCV.hpp	/^    Ncv8u height;$/;"	m	struct:NcvRect8u
heuristic	5/parallel/types.h	/^      heuristic,$/;"	e	enum:__gnu_parallel::_AlgorithmStrategy
hex	cpp_src/ios_base.h	/^    static const fmtflags hex =         _S_hex;$/;"	m	class:std::ios_base
hex	cpp_src/ios_base.h	/^  hex(ios_base& __base)$/;"	f	namespace:std
hid_cascade	opencv2/objdetect/objdetect_c.h	/^    CvHidHaarClassifierCascade* hid_cascade;$/;"	m	struct:CvHaarClassifierCascade
hierarchicalClustering	opencv2/flann.hpp	/^FLANN_DEPRECATED int hierarchicalClustering(const Mat& features, Mat& centers, const ::cvflann::KMeansIndexParams& params)$/;"	f	namespace:cv::flann
hierarchicalClustering	opencv2/flann.hpp	/^int hierarchicalClustering(const Mat& features, Mat& centers, const ::cvflann::KMeansIndexParams& params,$/;"	f	namespace:cv::flann
hierarchicalClustering	opencv2/flann/flann_base.hpp	/^int hierarchicalClustering(const Matrix<typename Distance::ElementType>& points, Matrix<typename Distance::ResultType>& centers,$/;"	f	namespace:cvflann
high	opencv2/core/hal/intrin_cpp.hpp	/^    v_reg<_Tp, n> high() const$/;"	f	struct:cv::v_reg
high	opencv2/flann/kdtree_single_index.h	/^        DistanceType low, high;$/;"	m	struct:cvflann::KDTreeSingleIndex::Interval
hist	opencv2/imgproc/imgproc_c.h	/^CVAPI(void)  cvClearHist( CvHistogram* hist );$/;"	v
hist	opencv2/imgproc/imgproc_c.h	/^CVAPI(void)  cvReleaseHist( CvHistogram** hist );$/;"	v
histogram	opencv2/cudev/grid/detail/histogram.hpp	/^    __global__ void histogram(const SrcPtr src, ResType* hist, const MaskPtr mask, const int rows, const int cols)$/;"	f	namespace:cv::cudev::grid_histogram_detail
histogram	opencv2/cudev/grid/detail/histogram.hpp	/^    __host__ void histogram(const SrcPtr& src, ResType* hist, const MaskPtr& mask, int rows, int cols, cudaStream_t stream)$/;"	f	namespace:cv::cudev::grid_histogram_detail
histogramNormType	opencv2/objdetect.hpp	/^    CV_PROP int histogramNormType;$/;"	m	struct:cv::HOGDescriptor
histogram_	opencv2/cudev/expr/reduction.hpp	/^histogram_(const SrcPtr& src)$/;"	f	namespace:cv::cudev
horisontal_pass_8u_shfl	opencv2/cudev/grid/detail/integral.hpp	/^    __host__ static void horisontal_pass_8u_shfl(const GlobPtr<uchar> src, GlobPtr<uint> integral, int rows, int cols, cudaStream_t stream)$/;"	f	namespace:cv::cudev::integral_detail
horisontal_pass_8u_shfl_kernel	opencv2/cudev/grid/detail/integral.hpp	/^    __global__ static void horisontal_pass_8u_shfl_kernel(const GlobPtr<uint4> img, GlobPtr<uint4> integral)$/;"	f	namespace:cv::cudev::integral_detail
horizontal_pass	opencv2/cudev/grid/detail/integral.hpp	/^    __global__ void horizontal_pass(const GlobPtr<T> src, GlobPtr<D> dst, const int cols)$/;"	f	namespace:cv::cudev::integral_detail
horizontal_pass	opencv2/cudev/grid/detail/integral.hpp	/^    __global__ void horizontal_pass(const SrcPtr src, GlobPtr<D> dst, const int cols)$/;"	f	namespace:cv::cudev::integral_detail
horizontal_pass	opencv2/cudev/grid/detail/integral.hpp	/^    __host__ void horizontal_pass(const SrcPtr& src, const GlobPtr<D>& dst, int rows, int cols, cudaStream_t stream)$/;"	f	namespace:cv::cudev::integral_detail
hostCopyObsolete	opencv2/core/mat.inl.hpp	/^inline bool UMatData::hostCopyObsolete() const { return (flags & HOST_COPY_OBSOLETE) != 0; }$/;"	f	class:cv::UMatData
hostPointsPrevTmp_	opencv2/videostab/global_motion.hpp	/^    std::vector<Point2f> hostPointsPrevTmp_, hostPointsTmp_;$/;"	m	class:cv::videostab::KeypointBasedMotionEstimatorGpu
hostPointsPrev_	opencv2/videostab/global_motion.hpp	/^    Mat hostPointsPrev_, hostPoints_;$/;"	m	class:cv::videostab::KeypointBasedMotionEstimatorGpu
hostPointsTmp_	opencv2/videostab/global_motion.hpp	/^    std::vector<Point2f> hostPointsPrevTmp_, hostPointsTmp_;$/;"	m	class:cv::videostab::KeypointBasedMotionEstimatorGpu
hostPoints_	opencv2/videostab/global_motion.hpp	/^    Mat hostPointsPrev_, hostPoints_;$/;"	m	class:cv::videostab::KeypointBasedMotionEstimatorGpu
hpp	opencv2/core/ippasync.hpp	/^namespace hpp$/;"	n	namespace:cv
hscale	opencv2/highgui.hpp	/^    float       hscale, vscale;$/;"	m	struct:cv::QtFont
hscale	opencv2/imgproc/imgproc_c.h	/^    float       hscale, vscale;$/;"	m	struct:CvFont
hu1	opencv2/imgproc/types_c.h	/^    double hu1, hu2, hu3, hu4, hu5, hu6, hu7; \/**< Hu invariants *\/$/;"	m	struct:CvHuMoments
hu2	opencv2/imgproc/types_c.h	/^    double hu1, hu2, hu3, hu4, hu5, hu6, hu7; \/**< Hu invariants *\/$/;"	m	struct:CvHuMoments
hu3	opencv2/imgproc/types_c.h	/^    double hu1, hu2, hu3, hu4, hu5, hu6, hu7; \/**< Hu invariants *\/$/;"	m	struct:CvHuMoments
hu4	opencv2/imgproc/types_c.h	/^    double hu1, hu2, hu3, hu4, hu5, hu6, hu7; \/**< Hu invariants *\/$/;"	m	struct:CvHuMoments
hu5	opencv2/imgproc/types_c.h	/^    double hu1, hu2, hu3, hu4, hu5, hu6, hu7; \/**< Hu invariants *\/$/;"	m	struct:CvHuMoments
hu6	opencv2/imgproc/types_c.h	/^    double hu1, hu2, hu3, hu4, hu5, hu6, hu7; \/**< Hu invariants *\/$/;"	m	struct:CvHuMoments
hu7	opencv2/imgproc/types_c.h	/^    double hu1, hu2, hu3, hu4, hu5, hu6, hu7; \/**< Hu invariants *\/$/;"	m	struct:CvHuMoments
hypot_sqr_func	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ hypot_sqr_func() {}$/;"	f	struct:cv::cuda::device::hypot_sqr_func
hypot_sqr_func	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ hypot_sqr_func(const hypot_sqr_func&) {}$/;"	f	struct:cv::cuda::device::hypot_sqr_func
hypot_sqr_func	opencv2/core/cuda/functional.hpp	/^    template<typename T> struct hypot_sqr_func : binary_function<T, T, float>$/;"	s	namespace:cv::cuda::device
i	opencv2/core/cvdef.h	/^    int i;$/;"	m	union:Cv32suf
i	opencv2/core/cvdef.h	/^    int64 i;$/;"	m	union:Cv64suf
i	opencv2/core/cvdef.h	/^    short i;$/;"	m	union:Cv16suf
i	opencv2/core/types_c.h	/^        int i;    \/**< scalar integer number *\/$/;"	m	union:CvFileNode::__anon330
i	opencv2/core/types_c.h	/^        int* i;$/;"	m	union:CvMat::__anon325
i	opencv2/core/types_c.h	/^        int* i;$/;"	m	union:CvMatND::__anon328
i_node	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	  i_node,$/;"	e	enum:__gnu_pbds::detail::pat_trie_base::node_type
icap	opencv2/videoio.hpp	/^    Ptr<IVideoCapture> icap;$/;"	m	class:cv::VideoCapture
id	cpp_src/codecvt.h	/^      static locale::id			id;$/;"	m	class:std::codecvt
id	cpp_src/codecvt.h	/^      static locale::id id;$/;"	m	class:std::codecvt
id	cpp_src/codecvt.h	/^    locale::id codecvt<_InternT, _ExternT, _StateT>::id;$/;"	m	class:std::codecvt
id	cpp_src/locale_classes.h	/^    id() { }$/;"	f	class:std::locale::id
id	cpp_src/locale_classes.h	/^  class locale::id$/;"	c	class:std::locale
id	cpp_src/locale_facets.h	/^      static locale::id			id;$/;"	m	class:std::__timepunct
id	cpp_src/locale_facets.h	/^      static locale::id			id;$/;"	m	class:std::collate
id	cpp_src/locale_facets.h	/^      static locale::id			id;$/;"	m	class:std::ctype
id	cpp_src/locale_facets.h	/^      static locale::id			id;$/;"	m	class:std::messages
id	cpp_src/locale_facets.h	/^      static locale::id			id;$/;"	m	class:std::money_get
id	cpp_src/locale_facets.h	/^      static locale::id			id;$/;"	m	class:std::money_put
id	cpp_src/locale_facets.h	/^      static locale::id			id;$/;"	m	class:std::moneypunct
id	cpp_src/locale_facets.h	/^      static locale::id			id;$/;"	m	class:std::num_get
id	cpp_src/locale_facets.h	/^      static locale::id			id;$/;"	m	class:std::numpunct
id	cpp_src/locale_facets.h	/^      static locale::id			id;$/;"	m	class:std::time_get
id	cpp_src/locale_facets.h	/^      static locale::id			id;$/;"	m	class:std::time_put
id	cpp_src/locale_facets.h	/^      static locale::id		id;$/;"	m	class:std::ctype
id	cpp_src/locale_facets.h	/^      static locale::id		id;$/;"	m	class:std::num_put
id	cpp_src/locale_facets.h	/^      static locale::id        id;$/;"	m	class:std::ctype
id	cpp_src/locale_facets.h	/^    locale::id __timepunct<_CharT>::id;$/;"	m	class:std::__timepunct
id	cpp_src/locale_facets.h	/^    locale::id collate<_CharT>::id;$/;"	m	class:std::collate
id	cpp_src/locale_facets.h	/^    locale::id ctype<_CharT>::id;$/;"	m	class:std::ctype
id	cpp_src/locale_facets.h	/^    locale::id messages<_CharT>::id;$/;"	m	class:std::messages
id	cpp_src/locale_facets.h	/^    locale::id money_get<_CharT, _InIter>::id;$/;"	m	class:std::money_get
id	cpp_src/locale_facets.h	/^    locale::id money_put<_CharT, _OutIter>::id;$/;"	m	class:std::money_put
id	cpp_src/locale_facets.h	/^    locale::id moneypunct<_CharT, _Intl>::id;$/;"	m	class:std::moneypunct
id	cpp_src/locale_facets.h	/^    locale::id num_get<_CharT, _InIter>::id;$/;"	m	class:std::num_get
id	cpp_src/locale_facets.h	/^    locale::id num_put<_CharT, _OutIter>::id;$/;"	m	class:std::num_put
id	cpp_src/locale_facets.h	/^    locale::id numpunct<_CharT>::id;$/;"	m	class:std::numpunct
id	cpp_src/locale_facets.h	/^    locale::id time_get<_CharT, _InIter>::id;$/;"	m	class:std::time_get
id	cpp_src/locale_facets.h	/^    locale::id time_put<_CharT, _OutIter>::id;$/;"	m	class:std::time_put
id	opencv2/core/cuda/block.hpp	/^        static __device__ __forceinline__ unsigned int id()$/;"	f	struct:cv::cuda::device::Block
id	opencv2/objdetect/detection_based_tracker.hpp	/^            int id;$/;"	m	struct:cv::DetectionBasedTracker::ExtObject
id	opencv2/objdetect/detection_based_tracker.hpp	/^            int id;$/;"	m	struct:cv::DetectionBasedTracker::TrackedObject
identity	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ identity() {}$/;"	f	struct:cv::cuda::device::identity
identity	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ identity(const identity&) {}$/;"	f	struct:cv::cuda::device::identity
identity	opencv2/core/cuda/functional.hpp	/^    template <typename T> struct identity : unary_function<T, T>$/;"	s	namespace:cv::cuda::device
identity	opencv2/cudev/functional/functional.hpp	/^template <typename T> struct identity : unary_function<T, T>$/;"	s	namespace:cv::cudev
idx	opencv2/core/mat.hpp	/^        int idx[MAX_DIM];$/;"	m	struct:cv::SparseMat::Node
idx	opencv2/core/mat.hpp	/^    size_t idx;$/;"	m	class:cv::NAryMatIterator
idx	opencv2/core/matx.hpp	/^    int idx;$/;"	m	class:cv::MatxCommaInitializer
idx_col	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_col(int x) const$/;"	f	struct:cv::cuda::device::BrdReflect
idx_col	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_col(int x) const$/;"	f	struct:cv::cuda::device::BrdReflect101
idx_col	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_col(int x) const$/;"	f	struct:cv::cuda::device::BrdReplicate
idx_col	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_col(int x) const$/;"	f	struct:cv::cuda::device::BrdRowReflect
idx_col	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_col(int x) const$/;"	f	struct:cv::cuda::device::BrdRowReflect101
idx_col	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_col(int x) const$/;"	f	struct:cv::cuda::device::BrdRowReplicate
idx_col	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_col(int x) const$/;"	f	struct:cv::cuda::device::BrdRowWrap
idx_col	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_col(int x) const$/;"	f	struct:cv::cuda::device::BrdWrap
idx_col	opencv2/cudev/ptr2d/extrapolation.hpp	/^    __device__ __forceinline__ int idx_col(int x) const$/;"	f	struct:cv::cudev::BrdBase
idx_col_high	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_col_high(int x) const$/;"	f	struct:cv::cuda::device::BrdReflect
idx_col_high	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_col_high(int x) const$/;"	f	struct:cv::cuda::device::BrdReflect101
idx_col_high	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_col_high(int x) const$/;"	f	struct:cv::cuda::device::BrdReplicate
idx_col_high	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_col_high(int x) const$/;"	f	struct:cv::cuda::device::BrdRowReflect
idx_col_high	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_col_high(int x) const$/;"	f	struct:cv::cuda::device::BrdRowReflect101
idx_col_high	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_col_high(int x) const$/;"	f	struct:cv::cuda::device::BrdRowReplicate
idx_col_high	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_col_high(int x) const$/;"	f	struct:cv::cuda::device::BrdRowWrap
idx_col_high	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_col_high(int x) const$/;"	f	struct:cv::cuda::device::BrdWrap
idx_col_low	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_col_low(int x) const$/;"	f	struct:cv::cuda::device::BrdReflect
idx_col_low	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_col_low(int x) const$/;"	f	struct:cv::cuda::device::BrdReflect101
idx_col_low	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_col_low(int x) const$/;"	f	struct:cv::cuda::device::BrdReplicate
idx_col_low	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_col_low(int x) const$/;"	f	struct:cv::cuda::device::BrdRowReflect
idx_col_low	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_col_low(int x) const$/;"	f	struct:cv::cuda::device::BrdRowReflect101
idx_col_low	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_col_low(int x) const$/;"	f	struct:cv::cuda::device::BrdRowReplicate
idx_col_low	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_col_low(int x) const$/;"	f	struct:cv::cuda::device::BrdRowWrap
idx_col_low	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_col_low(int x) const$/;"	f	struct:cv::cuda::device::BrdWrap
idx_high	opencv2/cudev/ptr2d/extrapolation.hpp	/^    __device__ __forceinline__ static int idx_high(int i, int len)$/;"	f	struct:cv::cudev::BrdReflect
idx_high	opencv2/cudev/ptr2d/extrapolation.hpp	/^    __device__ __forceinline__ static int idx_high(int i, int len)$/;"	f	struct:cv::cudev::BrdReflect101
idx_high	opencv2/cudev/ptr2d/extrapolation.hpp	/^    __device__ __forceinline__ static int idx_high(int i, int len)$/;"	f	struct:cv::cudev::BrdReplicate
idx_high	opencv2/cudev/ptr2d/extrapolation.hpp	/^    __device__ __forceinline__ static int idx_high(int i, int len)$/;"	f	struct:cv::cudev::BrdWrap
idx_low	opencv2/cudev/ptr2d/extrapolation.hpp	/^    __device__ __forceinline__ static int idx_low(int i, int len)$/;"	f	struct:cv::cudev::BrdReflect
idx_low	opencv2/cudev/ptr2d/extrapolation.hpp	/^    __device__ __forceinline__ static int idx_low(int i, int len)$/;"	f	struct:cv::cudev::BrdReflect101
idx_low	opencv2/cudev/ptr2d/extrapolation.hpp	/^    __device__ __forceinline__ static int idx_low(int i, int len)$/;"	f	struct:cv::cudev::BrdReplicate
idx_low	opencv2/cudev/ptr2d/extrapolation.hpp	/^    __device__ __forceinline__ static int idx_low(int i, int len)$/;"	f	struct:cv::cudev::BrdWrap
idx_row	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_row(int y) const$/;"	f	struct:cv::cuda::device::BrdColReflect
idx_row	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_row(int y) const$/;"	f	struct:cv::cuda::device::BrdColReflect101
idx_row	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_row(int y) const$/;"	f	struct:cv::cuda::device::BrdColReplicate
idx_row	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_row(int y) const$/;"	f	struct:cv::cuda::device::BrdColWrap
idx_row	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_row(int y) const$/;"	f	struct:cv::cuda::device::BrdReflect
idx_row	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_row(int y) const$/;"	f	struct:cv::cuda::device::BrdReflect101
idx_row	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_row(int y) const$/;"	f	struct:cv::cuda::device::BrdReplicate
idx_row	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_row(int y) const$/;"	f	struct:cv::cuda::device::BrdWrap
idx_row	opencv2/cudev/ptr2d/extrapolation.hpp	/^    __device__ __forceinline__ int idx_row(int y) const$/;"	f	struct:cv::cudev::BrdBase
idx_row_high	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_row_high(int y) const$/;"	f	struct:cv::cuda::device::BrdColReflect
idx_row_high	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_row_high(int y) const$/;"	f	struct:cv::cuda::device::BrdColReflect101
idx_row_high	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_row_high(int y) const$/;"	f	struct:cv::cuda::device::BrdColReplicate
idx_row_high	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_row_high(int y) const$/;"	f	struct:cv::cuda::device::BrdColWrap
idx_row_high	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_row_high(int y) const$/;"	f	struct:cv::cuda::device::BrdReflect
idx_row_high	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_row_high(int y) const$/;"	f	struct:cv::cuda::device::BrdReflect101
idx_row_high	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_row_high(int y) const$/;"	f	struct:cv::cuda::device::BrdReplicate
idx_row_high	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_row_high(int y) const$/;"	f	struct:cv::cuda::device::BrdWrap
idx_row_low	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_row_low(int y) const$/;"	f	struct:cv::cuda::device::BrdColReflect
idx_row_low	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_row_low(int y) const$/;"	f	struct:cv::cuda::device::BrdColReflect101
idx_row_low	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_row_low(int y) const$/;"	f	struct:cv::cuda::device::BrdColReplicate
idx_row_low	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_row_low(int y) const$/;"	f	struct:cv::cuda::device::BrdColWrap
idx_row_low	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_row_low(int y) const$/;"	f	struct:cv::cuda::device::BrdReflect
idx_row_low	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_row_low(int y) const$/;"	f	struct:cv::cuda::device::BrdReflect101
idx_row_low	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_row_low(int y) const$/;"	f	struct:cv::cuda::device::BrdReplicate
idx_row_low	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ int idx_row_low(int y) const$/;"	f	struct:cv::cuda::device::BrdWrap
idxoffset	opencv2/core/types_c.h	/^    int idxoffset;$/;"	m	struct:CvSparseMat
iffalse	5/ext/pb_ds/detail/standard_policies.hpp	/^      typedef hash_prime_size_policy 				iffalse;$/;"	t	struct:__gnu_pbds::detail::default_resize_policy
iffalse	5/ext/pb_ds/detail/standard_policies.hpp	/^      typedef quadratic_probe_fn<size_type> 			iffalse;$/;"	t	struct:__gnu_pbds::detail::default_probe_fn
iftrue	5/ext/pb_ds/detail/standard_policies.hpp	/^      typedef hash_exponential_size_policy<size_type> 		iftrue;$/;"	t	struct:__gnu_pbds::detail::default_resize_policy
iftrue	5/ext/pb_ds/detail/standard_policies.hpp	/^      typedef linear_probe_fn<size_type> 			iftrue;$/;"	t	struct:__gnu_pbds::detail::default_probe_fn
im	opencv2/core/types.hpp	/^    _Tp re, im; \/\/< the real and the imaginary parts$/;"	m	class:cv::Complex
image	opencv2/core/core_c.h	/^CVAPI(CvRect) cvGetImageROI( const IplImage* image );$/;"	v
image	opencv2/core/core_c.h	/^CVAPI(IplImage*) cvCloneImage( const IplImage* image );$/;"	v
image	opencv2/core/core_c.h	/^CVAPI(int)  cvGetImageCOI( const IplImage* image );$/;"	v
image	opencv2/core/core_c.h	/^CVAPI(void)  cvReleaseImage( IplImage** image );$/;"	v
image	opencv2/core/core_c.h	/^CVAPI(void)  cvReleaseImageHeader( IplImage** image );$/;"	v
image	opencv2/core/core_c.h	/^CVAPI(void)  cvResetImageROI( IplImage* image );$/;"	v
imageData	opencv2/core/types_c.h	/^    char *imageData;        \/**< Pointer to aligned image data.         *\/$/;"	m	struct:_IplImage
imageDataOrigin	opencv2/core/types_c.h	/^    char *imageDataOrigin;  \/**< Pointer to very origin of image data$/;"	m	struct:_IplImage
imageHeight	opencv2/videoio/cap_ios.h	/^@property (nonatomic, assign) int imageHeight;$/;"	v
imageId	opencv2/core/types_c.h	/^    void  *imageId;                 \/**< "           " *\/$/;"	m	struct:_IplImage
imageSize	opencv2/core/types_c.h	/^    int  imageSize;         \/**< Image data size in bytes$/;"	m	struct:_IplImage
imageWidth	opencv2/videoio/cap_ios.h	/^@property (nonatomic, assign) int imageWidth;$/;"	v
image_	opencv2/core/wimage.hpp	/^    IplImage* image_;$/;"	m	class:cv::WImage
image_	opencv2/stitching/detail/matchers.hpp	/^    cuda::GpuMat image_;$/;"	m	class:cv::detail::SurfFeaturesFinderGpu
images_	opencv2/stitching/detail/seam_finders.hpp	/^    std::vector<UMat> images_;$/;"	m	class:cv::detail::PairwiseSeamFinder
imbue_event	cpp_src/ios_base.h	/^      imbue_event,$/;"	e	enum:std::ios_base::event
imgIdx	opencv2/core/types.hpp	/^    CV_PROP_RW int imgIdx;   \/\/ train image index$/;"	m	class:cv::DMatch
img_idx	opencv2/stitching/detail/matchers.hpp	/^    int img_idx;$/;"	m	struct:cv::detail::ImageFeatures
img_size	opencv2/stitching/detail/matchers.hpp	/^    Size img_size;$/;"	m	struct:cv::detail::ImageFeatures
imgs_	opencv2/stitching.hpp	/^    std::vector<cv::UMat> imgs_;$/;"	m	class:cv::Stitcher
impl	opencv2/core/utility.hpp	/^    Impl* impl;$/;"	m	class:cv::CommandLineParser
impl	opencv2/core/utility.hpp	/^    Impl* impl;$/;"	m	class:cv::Mutex
impl	opencv2/videostab/frame_source.hpp	/^    Ptr<IFrameSource> impl;$/;"	m	class:cv::videostab::VideoFileSource
impl_	opencv2/core/cuda.hpp	/^    Ptr<Impl> impl_;$/;"	m	class:cv::cuda::Event
impl_	opencv2/core/cuda.hpp	/^    Ptr<Impl> impl_;$/;"	m	class:cv::cuda::Stream
impl_	opencv2/core/opengl.hpp	/^    Ptr<Impl> impl_;$/;"	m	class:cv::ogl::Buffer
impl_	opencv2/core/opengl.hpp	/^    Ptr<Impl> impl_;$/;"	m	class:cv::ogl::Texture2D
impl_	opencv2/stitching/detail/matchers.hpp	/^    Ptr<FeaturesMatcher> impl_;$/;"	m	class:cv::detail::BestOf2NearestMatcher
impl_	opencv2/stitching/detail/seam_finders.hpp	/^    Ptr<PairwiseSeamFinder> impl_;$/;"	m	class:cv::detail::GraphCutSeamFinder
in	cpp_src/codecvt.h	/^      in(state_type& __state, const extern_type* __from,$/;"	f	class:std::__codecvt_abstract_base
in	cpp_src/ios_base.h	/^    static const openmode in =		_S_in;$/;"	m	class:std::ios_base
inc	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	/^      inc(false_type)$/;"	f	class:__gnu_pbds::detail::bin_search_tree_const_it_
inc	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	/^      inc(true_type)$/;"	f	class:__gnu_pbds::detail::bin_search_tree_const_it_
inc	5/ext/pb_ds/detail/binary_heap_/const_iterator.hpp	/^      inc()$/;"	f	class:__gnu_pbds::detail::binary_heap_const_iterator_
inc	5/ext/pb_ds/detail/left_child_next_sibling_heap_/const_iterator.hpp	/^      inc()$/;"	f	class:__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_
inc	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      inc(false_type)$/;"	f	class:__gnu_pbds::detail::pat_trie_base::_CIter
inc	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      inc(true_type)$/;"	f	class:__gnu_pbds::detail::pat_trie_base::_CIter
incRef	opencv2/core/ptr.inl.hpp	/^    void incRef()$/;"	f	struct:cv::detail::PtrOwner
inc_it_state	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      inc_it_state(const_pointer& r_p_value,$/;"	f	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
inc_it_state	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      inc_it_state(pointer& r_p_value,$/;"	f	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
inc_it_state	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      inc_it_state(const_pointer& r_p_value, size_type& r_pos) const$/;"	f	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
inc_it_state	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      inc_it_state(pointer& r_p_value, size_type& r_pos) const$/;"	f	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
inc_it_state	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      inc_it_state(const_pointer& r_p_value, entry_pointer& r_pos) const$/;"	f	class:__gnu_pbds::detail::PB_DS_LU_NAME
includes	cpp_src/stl_algo.h	/^    includes(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	namespace:std
index	opencv2/core/core_c.h	/^    int      index;        \/* the lower bound of certainly visited vertices *\/$/;"	m	struct:CvGraphScanner
index	opencv2/core/core_c.h	/^    int index;$/;"	m	class:cv::SeqIterator
index	opencv2/core/core_c.h	/^template<typename _Tp> inline size_t Seq<_Tp>::index(const _Tp& elem) const$/;"	f	class:cv::Seq
index	opencv2/core/cuda/scan.hpp	/^        __device__ __forceinline__ unsigned int index(const unsigned int tid)$/;"	f	struct:cv::cuda::device::WarpScan
index	opencv2/core/cuda/scan.hpp	/^        __device__ __forceinline__ unsigned int index(const unsigned int tid)$/;"	f	struct:cv::cuda::device::WarpScanNoComp
index	opencv2/flann/miniflann.hpp	/^    void* index;$/;"	m	class:cv::flann::Index
indexOf	opencv2/videostab/fast_marching.hpp	/^    int& indexOf(const DXY &dxy) { return index_(dxy.y, dxy.x); }$/;"	f	class:cv::videostab::FastMarchingMethod
indexParams	opencv2/features2d.hpp	/^    Ptr<flann::IndexParams> indexParams;$/;"	m	class:cv::FlannBasedMatcher
index_	opencv2/flann/result_set.h	/^        unsigned int index_;$/;"	m	struct:cvflann::UniqueResultSet::DistIndex
index_	opencv2/videostab/fast_marching.hpp	/^    cv::Mat_<int> index_; \/\/ index of point in the narrow band$/;"	m	class:cv::videostab::FastMarchingMethod
index_creator	opencv2/flann/all_indices.h	/^struct index_creator$/;"	s	namespace:cvflann
index_creator	opencv2/flann/all_indices.h	/^struct index_creator<False,False,Distance>$/;"	s	namespace:cvflann
index_creator	opencv2/flann/all_indices.h	/^struct index_creator<False,VectorSpace,Distance>$/;"	s	namespace:cvflann
index_params_	opencv2/flann/composite_index.h	/^    const IndexParams index_params_;$/;"	m	class:cvflann::CompositeIndex
index_params_	opencv2/flann/flann_base.hpp	/^    IndexParams index_params_;$/;"	m	class:cvflann::Index
index_params_	opencv2/flann/kdtree_index.h	/^    IndexParams index_params_;$/;"	m	class:cvflann::KDTreeIndex
index_params_	opencv2/flann/kdtree_single_index.h	/^    IndexParams index_params_;$/;"	m	class:cvflann::KDTreeSingleIndex
index_params_	opencv2/flann/kmeans_index.h	/^    IndexParams index_params_;$/;"	m	class:cvflann::KMeansIndex
index_params_	opencv2/flann/linear_index.h	/^    IndexParams index_params_;$/;"	m	class:cvflann::LinearIndex
index_params_	opencv2/flann/lsh_index.h	/^    IndexParams index_params_;$/;"	m	class:cvflann::LshIndex
index_type	opencv2/core/cuda/border_interpolate.hpp	/^        typedef typename Ptr2D::index_type index_type;$/;"	t	struct:cv::cuda::device::BorderReader
index_type	opencv2/core/cuda/filters.hpp	/^        typedef float index_type;$/;"	t	struct:cv::cuda::device::AreaFilter
index_type	opencv2/core/cuda/filters.hpp	/^        typedef float index_type;$/;"	t	struct:cv::cuda::device::CubicFilter
index_type	opencv2/core/cuda/filters.hpp	/^        typedef float index_type;$/;"	t	struct:cv::cuda::device::IntegerAreaFilter
index_type	opencv2/core/cuda/filters.hpp	/^        typedef float index_type;$/;"	t	struct:cv::cuda::device::LinearFilter
index_type	opencv2/core/cuda/filters.hpp	/^        typedef float index_type;$/;"	t	struct:cv::cuda::device::PointFilter
index_type	opencv2/core/cuda_types.hpp	/^            typedef int index_type;$/;"	t	struct:cv::cuda::DevPtr
index_type	opencv2/cudev/ptr2d/constant.hpp	/^    typedef int index_type;$/;"	t	struct:cv::cudev::ConstantPtr
index_type	opencv2/cudev/ptr2d/deriv.hpp	/^    typedef int                                    index_type;$/;"	t	struct:cv::cudev::DerivXPtr
index_type	opencv2/cudev/ptr2d/deriv.hpp	/^    typedef int                                    index_type;$/;"	t	struct:cv::cudev::DerivYPtr
index_type	opencv2/cudev/ptr2d/deriv.hpp	/^    typedef int                                    index_type;$/;"	t	struct:cv::cudev::LaplacianPtr
index_type	opencv2/cudev/ptr2d/deriv.hpp	/^    typedef int                                    index_type;$/;"	t	struct:cv::cudev::ScharrXPtr
index_type	opencv2/cudev/ptr2d/deriv.hpp	/^    typedef int                                    index_type;$/;"	t	struct:cv::cudev::ScharrYPtr
index_type	opencv2/cudev/ptr2d/deriv.hpp	/^    typedef int                                    index_type;$/;"	t	struct:cv::cudev::SobelXPtr
index_type	opencv2/cudev/ptr2d/deriv.hpp	/^    typedef int                                    index_type;$/;"	t	struct:cv::cudev::SobelYPtr
index_type	opencv2/cudev/ptr2d/extrapolation.hpp	/^    typedef int                                    index_type;$/;"	t	struct:cv::cudev::BrdBase
index_type	opencv2/cudev/ptr2d/extrapolation.hpp	/^    typedef int                                    index_type;$/;"	t	struct:cv::cudev::BrdConstant
index_type	opencv2/cudev/ptr2d/glob.hpp	/^    typedef int index_type;$/;"	t	struct:cv::cudev::GlobPtr
index_type	opencv2/cudev/ptr2d/interpolation.hpp	/^    typedef float                                  index_type;$/;"	t	struct:cv::cudev::CommonAreaInterPtr
index_type	opencv2/cudev/ptr2d/interpolation.hpp	/^    typedef float                                  index_type;$/;"	t	struct:cv::cudev::CubicInterPtr
index_type	opencv2/cudev/ptr2d/interpolation.hpp	/^    typedef float                                  index_type;$/;"	t	struct:cv::cudev::IntegerAreaInterPtr
index_type	opencv2/cudev/ptr2d/interpolation.hpp	/^    typedef float                                  index_type;$/;"	t	struct:cv::cudev::LinearInterPtr
index_type	opencv2/cudev/ptr2d/interpolation.hpp	/^    typedef float                                  index_type;$/;"	t	struct:cv::cudev::NearestInterPtr
index_type	opencv2/cudev/ptr2d/lut.hpp	/^    typedef typename PtrTraits<SrcPtr>::index_type   index_type;$/;"	t	struct:cv::cudev::LutPtr
index_type	opencv2/cudev/ptr2d/mask.hpp	/^    typedef int  index_type;$/;"	t	struct:cv::cudev::WithOutMask
index_type	opencv2/cudev/ptr2d/mask.hpp	/^    typedef typename PtrTraits<MaskPtr>::index_type index_type;$/;"	t	struct:cv::cudev::SingleMaskChannels
index_type	opencv2/cudev/ptr2d/remap.hpp	/^    typedef typename PtrTraits<MapPtr>::index_type index_type;$/;"	t	struct:cv::cudev::RemapPtr1
index_type	opencv2/cudev/ptr2d/remap.hpp	/^    typedef typename PtrTraits<MapXPtr>::index_type index_type;$/;"	t	struct:cv::cudev::RemapPtr2
index_type	opencv2/cudev/ptr2d/resize.hpp	/^    typedef typename PtrTraits<SrcPtr>::index_type index_type;$/;"	t	struct:cv::cudev::ResizePtr
index_type	opencv2/cudev/ptr2d/texture.hpp	/^    typedef float index_type;$/;"	t	struct:cv::cudev::TexturePtr
index_type	opencv2/cudev/ptr2d/traits.hpp	/^    typedef typename Ptr2D::index_type index_type;$/;"	t	struct:cv::cudev::PtrTraitsBase
index_type	opencv2/cudev/ptr2d/transform.hpp	/^    typedef typename PtrTraits<Src1Ptr>::index_type index_type;$/;"	t	struct:cv::cudev::BinaryTransformPtr
index_type	opencv2/cudev/ptr2d/transform.hpp	/^    typedef typename PtrTraits<SrcPtr>::index_type index_type;$/;"	t	struct:cv::cudev::UnaryTransformPtr
index_type	opencv2/cudev/ptr2d/warping.hpp	/^    typedef float  index_type;$/;"	t	struct:cv::cudev::AffineMapPtr
index_type	opencv2/cudev/ptr2d/warping.hpp	/^    typedef float  index_type;$/;"	t	struct:cv::cudev::PerspectiveMapPtr
index_type	opencv2/cudev/ptr2d/zip.hpp	/^    typedef typename PtrTraits<Ptr0>::index_type        index_type;$/;"	t	struct:cv::cudev::ZipPtr
index_type	opencv2/flann/saving.h	/^    flann_algorithm_t index_type;$/;"	m	struct:cvflann::IndexHeader
indicator	5/ext/pb_ds/detail/types_traits.hpp	/^	typedef integral_constant<int, __simple> 	       	indicator;$/;"	t	struct:__gnu_pbds::detail::no_throw_copies
indicator	5/ext/pb_ds/detail/types_traits.hpp	/^	typedef integral_constant<int, is_simple<Key>::value> 	indicator;$/;"	t	struct:__gnu_pbds::detail::no_throw_copies
indices	opencv2/flann/hierarchical_clustering_index.h	/^        int* indices;$/;"	m	struct:cvflann::HierarchicalClusteringIndex::Node
indices	opencv2/flann/hierarchical_clustering_index.h	/^    int** indices;$/;"	m	class:cvflann::HierarchicalClusteringIndex
indices	opencv2/flann/kmeans_index.h	/^        const int* indices;$/;"	m	class:cvflann::KMeansIndex::KMeansDistanceComputer
indices	opencv2/flann/kmeans_index.h	/^        int* indices;$/;"	m	struct:cvflann::KMeansIndex::KMeansNode
indices	opencv2/flann/result_set.h	/^    int* indices;$/;"	m	class:cvflann::KNNResultSet
indices	opencv2/flann/result_set.h	/^    int* indices;$/;"	m	class:cvflann::KNNSimpleResultSet
indices	opencv2/flann/result_set.h	/^    int* indices;$/;"	m	class:cvflann::RadiusResultSet
indices_	opencv2/flann/kmeans_index.h	/^    int* indices_;$/;"	m	class:cvflann::KMeansIndex
indices_	opencv2/stitching.hpp	/^    std::vector<int> indices_;$/;"	m	class:cv::Stitcher
indirect_array	cpp_src/indirect_array.h	/^    class indirect_array$/;"	c	namespace:std
indirect_array	cpp_src/indirect_array.h	/^    indirect_array<_Tp>::indirect_array(_Array<_Tp> __a, size_t __s,$/;"	f	class:std::indirect_array
indirect_array	cpp_src/indirect_array.h	/^    indirect_array<_Tp>::indirect_array(const indirect_array<_Tp>& __a)$/;"	f	class:std::indirect_array
inf_	opencv2/videostab/fast_marching.hpp	/^    float inf_;$/;"	m	class:cv::videostab::FastMarchingMethod
info	opencv2/core/core_c.h	/^    CvTypeInfo* info;$/;"	m	struct:CvType
info	opencv2/core/core_c.h	/^CVAPI(void) cvRegisterType( const CvTypeInfo* info );$/;"	v
info	opencv2/core/types_c.h	/^    struct CvTypeInfo* info; \/**< type information$/;"	m	struct:CvFileNode	typeref:struct:CvFileNode::CvTypeInfo
init	opencv2/core/cuda/scan.hpp	/^        __device__ __forceinline__ void init(volatile T *ptr)$/;"	f	struct:cv::cuda::device::WarpScanNoComp
init	opencv2/core/cuda/scan.hpp	/^        __device__ __forceinline__ void init(volatile T *ptr){}$/;"	f	struct:cv::cuda::device::WarpScan
init	opencv2/core/mat.inl.hpp	/^inline void _InputArray::init(int _flags, const void* _obj)$/;"	f	class:cv::_InputArray
init	opencv2/core/mat.inl.hpp	/^inline void _InputArray::init(int _flags, const void* _obj, Size _sz)$/;"	f	class:cv::_InputArray
init	opencv2/flann/random.h	/^    void init(int n)$/;"	f	class:cvflann::UniqueRandom
init	opencv2/flann/result_set.h	/^    void init()$/;"	f	class:cvflann::RadiusResultSet
init	opencv2/flann/result_set.h	/^    void init(int* indices_, DistanceType* dists_)$/;"	f	class:cvflann::KNNResultSet
init	opencv2/flann/result_set.h	/^    void init(int* indices_, DistanceType* dists_)$/;"	f	class:cvflann::KNNSimpleResultSet
init_entry_metadata	5/ext/pb_ds/detail/list_update_map_/insert_fn_imps.hpp	/^init_entry_metadata(entry_pointer p_l, type_to_type<Metadata>)$/;"	f	class:PB_DS_CLASS_C_DEC
init_entry_metadata	5/ext/pb_ds/detail/list_update_map_/insert_fn_imps.hpp	/^init_entry_metadata(entry_pointer, type_to_type<null_type>)$/;"	f	class:PB_DS_CLASS_C_DEC
initial	opencv2/cudev/grid/detail/reduce.hpp	/^        __device__ __forceinline__ static T initial()$/;"	f	struct:cv::cudev::grid_reduce_detail::maxop
initial	opencv2/cudev/grid/detail/reduce.hpp	/^        __device__ __forceinline__ static T initial()$/;"	f	struct:cv::cudev::grid_reduce_detail::minop
initialValue	opencv2/cudev/grid/reduce_to_vec.hpp	/^    __device__ __forceinline__ static T initialValue()$/;"	f	struct:cv::cudev::Avg
initialValue	opencv2/cudev/grid/reduce_to_vec.hpp	/^    __device__ __forceinline__ static T initialValue()$/;"	f	struct:cv::cudev::Max
initialValue	opencv2/cudev/grid/reduce_to_vec.hpp	/^    __device__ __forceinline__ static T initialValue()$/;"	f	struct:cv::cudev::Min
initialValue	opencv2/cudev/grid/reduce_to_vec.hpp	/^    __device__ __forceinline__ static T initialValue()$/;"	f	struct:cv::cudev::Sum
initialize	5/ext/pb_ds/detail/bin_search_tree_/constructors_destructor_fn_imps.hpp	/^initialize()$/;"	f	class:PB_DS_CLASS_C_DEC
initialize	5/ext/pb_ds/detail/cc_hash_table_map_/constructor_destructor_fn_imps.hpp	/^initialize()$/;"	f	class:PB_DS_CLASS_C_DEC
initialize	5/ext/pb_ds/detail/gp_hash_table_map_/constructor_destructor_fn_imps.hpp	/^initialize()$/;"	f	class:PB_DS_CLASS_C_DEC
initialize	5/ext/pb_ds/detail/pat_trie_/constructors_destructor_fn_imps.hpp	/^initialize()$/;"	f	class:PB_DS_CLASS_C_DEC
initialize	5/ext/pb_ds/detail/rb_tree_map_/constructors_destructor_fn_imps.hpp	/^initialize()$/;"	f	class:PB_DS_CLASS_C_DEC
initialize	5/ext/pb_ds/detail/splay_tree_/constructors_destructor_fn_imps.hpp	/^initialize()$/;"	f	class:PB_DS_CLASS_C_DEC
initialize	5/ext/pb_ds/detail/thin_heap_/constructors_destructor_fn_imps.hpp	/^initialize()$/;"	f	class:PB_DS_CLASS_C_DEC
initialize	opencv2/flann/lsh_table.h	/^    void initialize(size_t key_size)$/;"	f	class:cvflann::lsh::LshTable
initializeMask	opencv2/objdetect.hpp	/^        virtual void initializeMask(const Mat& \/*src*\/) { }$/;"	f	class:cv::BaseCascadeClassifier::MaskGenerator
initialize_min_max	5/ext/pb_ds/detail/bin_search_tree_/constructors_destructor_fn_imps.hpp	/^initialize_min_max()$/;"	f	class:PB_DS_CLASS_C_DEC
inliers_mask	opencv2/stitching/detail/matchers.hpp	/^    std::vector<uchar> inliers_mask;    \/\/!< Geometrically consistent matches mask$/;"	m	struct:cv::detail::MatchesInfo
innerParameters	opencv2/objdetect/detection_based_tracker.hpp	/^        InnerParameters innerParameters;$/;"	m	class:cv::DetectionBasedTracker
inner_product	cpp_src/stl_numeric.h	/^    inner_product(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	namespace:std
inode	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename traits_type::inode 		inode;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
inode	5/ext/pb_ds/detail/pat_trie_/traits.hpp	/^      typedef base_type::_Inode<synth_access_traits, metadata> 		inode;$/;"	t	struct:__gnu_pbds::detail::trie_traits
inode	5/ext/pb_ds/detail/pat_trie_/traits.hpp	/^      typedef base_type::_Inode<synth_access_traits, metadata> 	       	inode;$/;"	t	struct:__gnu_pbds::detail::trie_traits
inode_allocator	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename __rebind_in::other      	       	inode_allocator;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
inode_const_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename __rebind_ina::const_pointer 	inode_const_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
inode_const_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename __rebind_in::const_pointer 	    inode_const_pointer;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Inode
inode_const_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename __rebind_in::other::const_pointer inode_const_pointer;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_Node_citer
inode_iterator	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename inode::iterator 			inode_iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
inode_iterator	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename Inode::iterator			inode_iterator;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_CIter
inode_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename __rebind_ina::pointer 		inode_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
inode_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename __rebind_in::other::pointer 	inode_pointer;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_CIter
inode_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename __rebind_in::other::pointer 	inode_pointer;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_Node_citer
inode_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename __rebind_in::pointer 			inode_pointer;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Inode
inode_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename base_type::inode_pointer 	inode_pointer;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_Iter
inode_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename base_type::inode_pointer 	inode_pointer;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_Node_iter
inpaint	opencv2/videostab/inpainting.hpp	/^    virtual void inpaint(int \/*idx*\/, Mat &\/*frame*\/, Mat &\/*mask*\/) {}$/;"	f	class:cv::videostab::NullInpainter
inpainter	opencv2/videostab/stabilizer.hpp	/^    Ptr<InpainterBase> inpainter() const { return inpainter_; }$/;"	f	class:cv::videostab::StabilizerBase
inpainter_	opencv2/videostab/stabilizer.hpp	/^    Ptr<InpainterBase> inpainter_;$/;"	m	class:cv::videostab::StabilizerBase
inpainters_	opencv2/videostab/inpainting.hpp	/^    std::vector<Ptr<InpainterBase> > inpainters_;$/;"	m	class:cv::videostab::InpaintingPipeline
inpaintingMask_	opencv2/videostab/stabilizer.hpp	/^    Mat inpaintingMask_;$/;"	m	class:cv::videostab::StabilizerBase
inplace_merge	cpp_src/stl_algo.h	/^    inplace_merge(_BidirectionalIterator __first,$/;"	f	namespace:std
input_iterator_tag	cpp_src/stl_iterator_base_types.h	/^  struct input_iterator_tag {};$/;"	s	namespace:std
insert	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      insert(const_reference r_val)$/;"	f	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
insert	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      insert(const_reference r_val)$/;"	f	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
insert	5/ext/pb_ds/detail/list_update_map_/insert_fn_imps.hpp	/^insert(const_reference r_val)$/;"	f	class:PB_DS_CLASS_C_DEC
insert	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      insert(const_reference r_value)$/;"	f	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
insert	5/ext/pb_ds/detail/pat_trie_/insert_join_fn_imps.hpp	/^insert(const_reference r_val)$/;"	f	class:PB_DS_CLASS_C_DEC
insert	5/ext/pb_ds/detail/rb_tree_map_/insert_fn_imps.hpp	/^insert(const_reference r_value)$/;"	f	class:PB_DS_CLASS_C_DEC
insert	5/ext/pb_ds/detail/splay_tree_/insert_fn_imps.hpp	/^insert(const_reference r_value)$/;"	f	class:PB_DS_CLASS_C_DEC
insert	cpp_src/basic_string.h	/^        insert(iterator __p, _InputIterator __beg, _InputIterator __end)$/;"	f	class:std::basic_string
insert	cpp_src/basic_string.h	/^      insert(iterator __p, _CharT __c)$/;"	f	class:std::basic_string
insert	cpp_src/basic_string.h	/^      insert(iterator __p, size_type __n, _CharT __c)$/;"	f	class:std::basic_string
insert	cpp_src/basic_string.h	/^      insert(size_type __pos, const _CharT* __s)$/;"	f	class:std::basic_string
insert	cpp_src/basic_string.h	/^      insert(size_type __pos, size_type __n, _CharT __c)$/;"	f	class:std::basic_string
insert	cpp_src/basic_string.h	/^      insert(size_type __pos1, const basic_string& __str)$/;"	f	class:std::basic_string
insert	cpp_src/basic_string.h	/^      insert(size_type __pos1, const basic_string& __str,$/;"	f	class:std::basic_string
insert	cpp_src/stl_bvector.h	/^      insert(iterator __position,$/;"	f	class:std::vector
insert	cpp_src/stl_bvector.h	/^    insert(iterator __position, const bool& __x = bool())$/;"	f	class:std::vector
insert	cpp_src/stl_bvector.h	/^    insert(iterator __position, size_type __n, const bool& __x)$/;"	f	class:std::vector
insert	cpp_src/stl_deque.h	/^        insert(iterator __position, _InputIterator __first,$/;"	f	class:std::deque
insert	cpp_src/stl_deque.h	/^      insert(iterator __position, size_type __n, const value_type& __x)$/;"	f	class:std::deque
insert	cpp_src/stl_list.h	/^        insert(iterator __position, _InputIterator __first,$/;"	f	class:std::list
insert	cpp_src/stl_list.h	/^      insert(iterator __position, size_type __n, const value_type& __x)$/;"	f	class:std::list
insert	cpp_src/stl_map.h	/^        insert(_InputIterator __first, _InputIterator __last)$/;"	f	class:std::map
insert	cpp_src/stl_map.h	/^      insert(const value_type& __x)$/;"	f	class:std::map
insert	cpp_src/stl_map.h	/^      insert(iterator __position, const value_type& __x)$/;"	f	class:std::map
insert	cpp_src/stl_multimap.h	/^        insert(_InputIterator __first, _InputIterator __last)$/;"	f	class:std::multimap
insert	cpp_src/stl_multimap.h	/^      insert(const value_type& __x)$/;"	f	class:std::multimap
insert	cpp_src/stl_multimap.h	/^      insert(iterator __position, const value_type& __x)$/;"	f	class:std::multimap
insert	cpp_src/stl_multiset.h	/^        insert(_InputIterator __first, _InputIterator __last)$/;"	f	class:std::multiset
insert	cpp_src/stl_multiset.h	/^      insert(const value_type& __x)$/;"	f	class:std::multiset
insert	cpp_src/stl_multiset.h	/^      insert(iterator __position, const value_type& __x)$/;"	f	class:std::multiset
insert	cpp_src/stl_set.h	/^        insert(_InputIterator __first, _InputIterator __last)$/;"	f	class:std::set
insert	cpp_src/stl_set.h	/^      insert(const value_type& __x)$/;"	f	class:std::set
insert	cpp_src/stl_set.h	/^      insert(iterator __position, const value_type& __x)$/;"	f	class:std::set
insert	cpp_src/stl_vector.h	/^        insert(iterator __position, _InputIterator __first,$/;"	f	class:std::vector
insert	cpp_src/stl_vector.h	/^      insert(iterator __position, size_type __n, const value_type& __x)$/;"	f	class:std::vector
insert	opencv2/core/core_c.h	/^template<typename _Tp> inline void Seq<_Tp>::insert(int idx, const _Tp& elem)$/;"	f	class:cv::Seq
insert	opencv2/core/core_c.h	/^template<typename _Tp> inline void Seq<_Tp>::insert(int idx, const _Tp* elems, size_t count)$/;"	f	class:cv::Seq
insert	opencv2/flann/heap.h	/^    void insert(T value)$/;"	f	class:cvflann::Heap
insert_branch	5/ext/pb_ds/detail/pat_trie_/insert_join_fn_imps.hpp	/^insert_branch(node_pointer p_l, node_pointer p_r, branch_bag& r_bag)$/;"	f	class:PB_DS_CLASS_C_DEC
insert_error	5/ext/pb_ds/exception.hpp	/^  struct insert_error : public container_error { };$/;"	s	namespace:__gnu_pbds
insert_fixup	5/ext/pb_ds/detail/rb_tree_map_/insert_fn_imps.hpp	/^insert_fixup(node_pointer p_nd)$/;"	f	class:PB_DS_CLASS_C_DEC
insert_imp	5/ext/pb_ds/detail/cc_hash_table_map_/insert_no_store_hash_fn_imps.hpp	/^insert_imp(const_reference r_val, false_type)$/;"	f	class:PB_DS_CLASS_C_DEC
insert_imp	5/ext/pb_ds/detail/cc_hash_table_map_/insert_store_hash_fn_imps.hpp	/^insert_imp(const_reference r_val, true_type)$/;"	f	class:PB_DS_CLASS_C_DEC
insert_imp	5/ext/pb_ds/detail/gp_hash_table_map_/insert_no_store_hash_fn_imps.hpp	/^insert_imp(const_reference r_val, false_type)$/;"	f	class:PB_DS_CLASS_C_DEC
insert_imp	5/ext/pb_ds/detail/gp_hash_table_map_/insert_store_hash_fn_imps.hpp	/^insert_imp(const_reference r_val, true_type)$/;"	f	class:PB_DS_CLASS_C_DEC
insert_imp_empty	5/ext/pb_ds/detail/bin_search_tree_/insert_fn_imps.hpp	/^insert_imp_empty(const_reference r_value)$/;"	f	class:PB_DS_CLASS_C_DEC
insert_iterator	cpp_src/stl_iterator.h	/^      insert_iterator(_Container& __x, typename _Container::iterator __i)$/;"	f	class:std::insert_iterator
insert_iterator	cpp_src/stl_iterator.h	/^    class insert_iterator$/;"	c	namespace:std
insert_leaf	5/ext/pb_ds/detail/bin_search_tree_/insert_fn_imps.hpp	/^insert_leaf(const_reference r_value)$/;"	f	class:PB_DS_CLASS_C_DEC
insert_leaf_imp	5/ext/pb_ds/detail/splay_tree_/insert_fn_imps.hpp	/^insert_leaf_imp(const_reference r_value)$/;"	f	class:PB_DS_CLASS_C_DEC
insert_leaf_new	5/ext/pb_ds/detail/bin_search_tree_/insert_fn_imps.hpp	/^insert_leaf_new(const_reference r_value, node_pointer p_nd, bool left_nd)$/;"	f	class:PB_DS_CLASS_C_DEC
insert_new	5/ext/pb_ds/detail/debug_map_base.hpp	/^    insert_new(key_const_reference r_key)$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
insert_new_imp	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      insert_new_imp(const_reference r_val, comp_hash& r_pos_hash_pair)$/;"	f	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
insert_new_imp	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      insert_new_imp(const_reference r_val, size_type pos)$/;"	f	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
insert_new_imp	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      insert_new_imp(const_reference r_val, comp_hash& r_pos_hash_pair)$/;"	f	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
insert_new_imp	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      insert_new_imp(const_reference r_val, size_type pos)$/;"	f	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
insert_new_val	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      insert_new_val(iterator it, const_reference r_value)$/;"	f	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
insert_node	5/ext/pb_ds/detail/binomial_heap_base_/insert_fn_imps.hpp	/^insert_node(node_pointer p_nd)$/;"	f	class:PB_DS_CLASS_C_DEC
insert_value	5/ext/pb_ds/detail/binary_heap_/insert_fn_imps.hpp	/^insert_value(const_reference r_val, false_type)$/;"	f	class:PB_DS_CLASS_C_DEC
insert_value	5/ext/pb_ds/detail/binary_heap_/insert_fn_imps.hpp	/^insert_value(value_type val, true_type)$/;"	f	class:PB_DS_CLASS_C_DEC
inserter	cpp_src/stl_iterator.h	/^    inserter(_Container& __x, _Iterator __i)$/;"	f	namespace:std
inside	opencv2/core/types.hpp	/^Point_<_Tp>::inside( const Rect_<_Tp>& r ) const$/;"	f	class:cv::Point_
instance	opencv2/flann/logger.h	/^    static Logger& instance()$/;"	f	class:cvflann::Logger
instance	opencv2/flann/object_factory.h	/^    static ThisClass& instance()$/;"	f	class:cvflann::ObjectFactory
instr	opencv2/core/private.hpp	/^namespace instr$/;"	n	namespace:cv
instr	opencv2/core/utility.hpp	/^namespace instr$/;"	n	namespace:cv
int64	opencv2/core/hal/interface.h	/^   typedef __int64 int64;$/;"	t
int64	opencv2/core/hal/interface.h	/^   typedef int64_t int64;$/;"	t
int_reg	opencv2/core/hal/intrin.hpp	/^    typedef v_int16x8 int_reg;$/;"	t	struct:cv::V_RegTrait128
int_reg	opencv2/core/hal/intrin.hpp	/^    typedef v_int32x4 int_reg;$/;"	t	struct:cv::V_RegTrait128
int_to_uchar4	opencv2/cudev/grid/detail/integral.hpp	/^    __device__ static uchar4 int_to_uchar4(unsigned int in)$/;"	f	namespace:cv::cudev::integral_detail
int_type	cpp_src/basic_ios.h	/^      typedef typename _Traits::int_type             int_type;$/;"	t	class:std::basic_ios
int_type	cpp_src/char_traits.h	/^      typedef typename _Char_types<_CharT>::int_type    int_type;$/;"	t	struct:char_traits
int_type	cpp_src/char_traits.h	/^      typedef unsigned long   int_type;$/;"	t	struct:_Char_types
int_type	cpp_src/streambuf_iterator.h	/^      typedef typename _Traits::int_type		int_type;$/;"	t	class:std::istreambuf_iterator
int_type	opencv2/core/hal/intrin.hpp	/^    typedef _Tp int_type;$/;"	t	struct:cv::V_TypeTraits
int_type	opencv2/core/hal/intrin.hpp	/^    typedef int int_type;$/;"	t	struct:cv::V_TypeTraits
int_type	opencv2/core/hal/intrin.hpp	/^    typedef int64 int_type;$/;"	t	struct:cv::V_TypeTraits
int_type	opencv2/core/hal/intrin.hpp	/^    typedef schar int_type;$/;"	t	struct:cv::V_TypeTraits
int_type	opencv2/core/hal/intrin.hpp	/^    typedef short int_type;$/;"	t	struct:cv::V_TypeTraits
int_vec	opencv2/core/hal/intrin_cpp.hpp	/^    typedef v_reg<typename V_TypeTraits<_Tp>::int_type, n> int_vec;$/;"	t	struct:cv::v_reg
integral	opencv2/cudev/grid/detail/integral.hpp	/^    __host__ __forceinline__ void integral(const GlobPtr<uchar>& src, const GlobPtr<int>& dst, int rows, int cols, cudaStream_t stream)$/;"	f	namespace:cv::cudev::integral_detail
integral	opencv2/cudev/grid/detail/integral.hpp	/^    __host__ static void integral(const GlobPtr<uchar>& src, const GlobPtr<uint>& dst, int rows, int cols, cudaStream_t stream)$/;"	f	namespace:cv::cudev::integral_detail
integral	opencv2/cudev/grid/detail/integral.hpp	/^    __host__ void integral(const SrcPtr& src, const GlobPtr<D>& dst, int rows, int cols, cudaStream_t stream)$/;"	f	namespace:cv::cudev::integral_detail
integral_	opencv2/cudev/expr/reduction.hpp	/^integral_(const SrcPtr& src)$/;"	f	namespace:cv::cudev
integral_detail	opencv2/cudev/grid/detail/integral.hpp	/^namespace integral_detail$/;"	n	namespace:cv::cudev
interArea	opencv2/cudev/ptr2d/interpolation.hpp	/^__host__ CommonAreaInterPtrSz<typename PtrTraits<SrcPtr>::ptr_type> interArea(const SrcPtr& src, Size2f areaSize)$/;"	f	namespace:cv::cudev
interArea	opencv2/cudev/ptr2d/interpolation.hpp	/^__host__ IntegerAreaInterPtrSz<typename PtrTraits<SrcPtr>::ptr_type> interArea(const SrcPtr& src, Size areaSize)$/;"	f	namespace:cv::cudev
interCubic	opencv2/cudev/ptr2d/interpolation.hpp	/^__host__ CubicInterPtrSz<typename PtrTraits<SrcPtr>::ptr_type> interCubic(const SrcPtr& src)$/;"	f	namespace:cv::cudev
interLinear	opencv2/cudev/ptr2d/interpolation.hpp	/^__host__ LinearInterPtrSz<typename PtrTraits<SrcPtr>::ptr_type> interLinear(const SrcPtr& src)$/;"	f	namespace:cv::cudev
interNearest	opencv2/cudev/ptr2d/interpolation.hpp	/^__host__ NearestInterPtrSz<typename PtrTraits<SrcPtr>::ptr_type> interNearest(const SrcPtr& src)$/;"	f	namespace:cv::cudev
intern_type	cpp_src/codecvt.h	/^      typedef _InternT			intern_type;$/;"	t	class:std::__codecvt_abstract_base
intern_type	cpp_src/codecvt.h	/^      typedef _InternT			intern_type;$/;"	t	class:std::codecvt
intern_type	cpp_src/codecvt.h	/^      typedef char			intern_type;$/;"	t	class:std::codecvt
intern_type	cpp_src/codecvt.h	/^      typedef wchar_t			intern_type;$/;"	t	class:std::codecvt
internal	cpp_src/ios_base.h	/^    static const fmtflags internal =    _S_internal;$/;"	m	class:std::ios_base
internal	cpp_src/ios_base.h	/^  internal(ios_base& __base)$/;"	f	namespace:std
internal	opencv2/core/matx.hpp	/^namespace internal$/;"	n	namespace:cv
internal	opencv2/core/ocl.hpp	/^namespace internal {$/;"	n	namespace:cv::ocl
internal	opencv2/core/operations.hpp	/^namespace internal$/;"	n	namespace:cv
internal	opencv2/core/persistence.hpp	/^namespace internal$/;"	n	namespace:cv
intl	cpp_src/locale_facets.h	/^      static const bool			intl = _Intl;$/;"	m	class:std::moneypunct
intl	cpp_src/locale_facets.h	/^      static const bool intl = _Intl;$/;"	m	class:std::moneypunct_byname
intl	cpp_src/locale_facets.h	/^    const bool moneypunct<_CharT, _Intl>::intl;$/;"	m	class:std::moneypunct
intl	cpp_src/locale_facets.h	/^    const bool moneypunct_byname<_CharT, _Intl>::intl;$/;"	m	class:std::moneypunct_byname
inv	opencv2/core/affine.hpp	/^cv::Affine3<T> cv::Affine3<T>::inv(int method) const$/;"	f	class:cv::Affine3
inv	opencv2/core/operations.hpp	/^Matx<_Tp, n, m> Matx<_Tp, m, n>::inv(int method, bool *p_is_ok \/*= NULL*\/) const$/;"	f	class:cv::Matx
invMask_	opencv2/videostab/inpainting.hpp	/^    Mat invMask_;$/;"	m	class:cv::videostab::ColorInpainter
inv_sqrt_m00	opencv2/imgproc/types_c.h	/^    double  inv_sqrt_m00; \/**< m00 != 0 ? 1\/sqrt(m00) : 0 *\/$/;"	m	struct:CvMoments
invalidation_guarantee	5/ext/pb_ds/tag_and_trait.hpp	/^    typedef basic_invalidation_guarantee 		invalidation_guarantee;$/;"	t	struct:__gnu_pbds::container_traits_base
invalidation_guarantee	5/ext/pb_ds/tag_and_trait.hpp	/^    typedef point_invalidation_guarantee 		invalidation_guarantee;$/;"	t	struct:__gnu_pbds::container_traits_base
invalidation_guarantee	5/ext/pb_ds/tag_and_trait.hpp	/^    typedef range_invalidation_guarantee 		invalidation_guarantee;$/;"	t	struct:__gnu_pbds::container_traits_base
invalidation_guarantee	5/ext/pb_ds/tag_and_trait.hpp	/^    typedef typename base_type::invalidation_guarantee invalidation_guarantee;$/;"	t	struct:__gnu_pbds::container_traits
inversed	opencv2/ml.hpp	/^        bool inversed; \/\/!< If true, then the inverse split rule is used (i.e. left and right$/;"	m	class:cv::ml::DTrees::Split
io_state	cpp_src/ios_base.h	/^    typedef int io_state;$/;"	t	class:std::ios_base
ios_base	cpp_src/ios_base.h	/^  class ios_base$/;"	c	namespace:std
iostate	cpp_src/ios_base.h	/^    typedef _Ios_Iostate iostate;$/;"	t	class:std::ios_base
ipp	opencv2/core/base.hpp	/^namespace ipp$/;"	n	namespace:cv
ippiGetBorderType	opencv2/core/private.hpp	/^static inline IppiBorderType ippiGetBorderType(int borderTypeNI)$/;"	f
ippiGetDataType	opencv2/core/private.hpp	/^static inline IppDataType ippiGetDataType(int depth)$/;"	f
ippiPoint	opencv2/core/private.hpp	/^static inline IppiPoint ippiPoint(const cv::Point & _point)$/;"	f
ippiPoint	opencv2/core/private.hpp	/^static inline IppiPoint ippiPoint(int x, int y)$/;"	f
ippiSize	opencv2/core/private.hpp	/^static inline IppiSize ippiSize(const cv::Size & _size)$/;"	f
ippiSize	opencv2/core/private.hpp	/^static inline IppiSize ippiSize(int width, int height)$/;"	f
is	cpp_src/locale_facets.h	/^      is(const char_type *__lo, const char_type *__hi, mask *__vec) const$/;"	f	class:std::__ctype_abstract_base
is	cpp_src/locale_facets.h	/^      is(mask __m, char_type __c) const$/;"	f	class:std::__ctype_abstract_base
isAMD	opencv2/core/ocl.hpp	/^    inline bool isAMD() const { return vendorID() == VENDOR_AMD; }$/;"	f	class:cv::ocl::Device
isAligned	opencv2/core/cuda/common.hpp	/^    static inline bool isAligned(size_t step, size_t size)$/;"	f	namespace:cv::cuda
isAligned	opencv2/core/cuda/common.hpp	/^    template <typename T> static inline bool isAligned(const T* ptr, size_t size)$/;"	f	namespace:cv::cuda
isAligned	opencv2/cudev/grid/detail/transform.hpp	/^        __host__ static bool isAligned(const T* ptr, size_t size)$/;"	f	struct:cv::cudev::grid_transform_detail::TransformDispatcher
isAligned	opencv2/cudev/grid/detail/transform.hpp	/^        __host__ static bool isAligned(size_t step, size_t size)$/;"	f	struct:cv::cudev::grid_transform_detail::TransformDispatcher
isArith	opencv2/core/cuda/type_traits.hpp	/^        enum { isArith          = isIntegral || isFloat };$/;"	e	enum:cv::cuda::device::TypeTraits::__anon270
isConst	opencv2/core/cuda/type_traits.hpp	/^        enum { isConst          = type_traits_detail::UnConst<T>::value };$/;"	e	enum:cv::cuda::device::TypeTraits::__anon262
isContinuous	opencv2/core/cuda.inl.hpp	/^bool GpuMat::isContinuous() const$/;"	f	class:cv::cuda::GpuMat
isContinuous	opencv2/core/cuda.inl.hpp	/^bool HostMem::isContinuous() const$/;"	f	class:cv::cuda::HostMem
isContinuous	opencv2/core/mat.inl.hpp	/^bool Mat::isContinuous() const$/;"	f	class:cv::Mat
isContinuous	opencv2/core/mat.inl.hpp	/^bool UMat::isContinuous() const$/;"	f	class:cv::UMat
isFloat	opencv2/core/cuda/type_traits.hpp	/^        enum { isFloat          = type_traits_detail::IsFloat<UnqualifiedType>::value };$/;"	e	enum:cv::cuda::device::TypeTraits::__anon269
isGpuMatVector	opencv2/core/mat.inl.hpp	/^inline bool _InputArray::isGpuMatVector() const { return kind() == _InputArray::STD_VECTOR_CUDA_GPU_MAT; }$/;"	f	class:cv::_InputArray
isInt	opencv2/core/persistence.hpp	/^inline bool FileNode::isInt() const    { return type() == INT;  }$/;"	f	class:cv::FileNode
isIntegral	opencv2/core/cuda/type_traits.hpp	/^        enum { isIntegral       = type_traits_detail::IsIntegral<UnqualifiedType>::value };$/;"	e	enum:cv::cuda::device::TypeTraits::__anon268
isIntel	opencv2/core/ocl.hpp	/^    inline bool isIntel() const { return vendorID() == VENDOR_INTEL; }$/;"	f	class:cv::ocl::Device
isLeftNodeLeaf	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^    __device__ __host__ NcvBool isLeftNodeLeaf(void)$/;"	f	struct:HaarFeatureDescriptor32
isMap	opencv2/core/persistence.hpp	/^inline bool FileNode::isMap() const    { return type() == MAP;  }$/;"	f	class:cv::FileNode
isMaskSupported	opencv2/features2d.hpp	/^    virtual bool isMaskSupported() const { return true; }$/;"	f	class:cv::BFMatcher
isMat	opencv2/core/mat.inl.hpp	/^inline bool _InputArray::isMat() const { return kind() == _InputArray::MAT; }$/;"	f	class:cv::_InputArray
isMatVector	opencv2/core/mat.inl.hpp	/^inline bool _InputArray::isMatVector() const { return kind() == _InputArray::STD_VECTOR_MAT; }$/;"	f	class:cv::_InputArray
isMatx	opencv2/core/mat.inl.hpp	/^inline bool _InputArray::isMatx() const { return kind() == _InputArray::MATX; }$/;"	f	class:cv::_InputArray
isMemAllocated	opencv2/cudalegacy/NCV.hpp	/^    NcvBool isMemAllocated() const$/;"	f	class:NCVMatrixAlloc
isMemAllocated	opencv2/cudalegacy/NCV.hpp	/^    NcvBool isMemAllocated() const$/;"	f	class:NCVVectorAlloc
isMemReused	opencv2/cudalegacy/NCV.hpp	/^    NcvBool isMemReused() const$/;"	f	class:NCVMatrixReuse
isMemReused	opencv2/cudalegacy/NCV.hpp	/^    NcvBool isMemReused() const$/;"	f	class:NCVVectorReuse
isNVidia	opencv2/core/ocl.hpp	/^    inline bool isNVidia() const { return vendorID() == VENDOR_NVIDIA; }$/;"	f	class:cv::ocl::Device
isNone	opencv2/core/persistence.hpp	/^inline bool FileNode::isNone() const   { return type() == NONE; }$/;"	f	class:cv::FileNode
isPointer	opencv2/core/cuda/type_traits.hpp	/^        enum { isPointer        = type_traits_detail::PointerTraits<typename type_traits_detail::ReferenceTraits<UnqualifiedType>::type>::value };$/;"	e	enum:cv::cuda::device::TypeTraits::__anon265
isPrePassDone_	opencv2/videostab/stabilizer.hpp	/^    bool isPrePassDone_;$/;"	m	class:cv::videostab::TwoPassStabilizer
isReal	opencv2/core/persistence.hpp	/^inline bool FileNode::isReal() const   { return type() == REAL; }$/;"	f	class:cv::FileNode
isReal	opencv2/core/types.hpp	/^bool Scalar_<_Tp>::isReal() const$/;"	f	class:cv::Scalar_
isReference	opencv2/core/cuda/type_traits.hpp	/^        enum { isReference      = type_traits_detail::ReferenceTraits<UnqualifiedType>::value };$/;"	e	enum:cv::cuda::device::TypeTraits::__anon264
isRightNodeLeaf	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^    __device__ __host__ NcvBool isRightNodeLeaf(void)$/;"	f	struct:HaarFeatureDescriptor32
isSeq	opencv2/core/persistence.hpp	/^inline bool FileNode::isSeq() const    { return type() == SEQ;  }$/;"	f	class:cv::FileNode
isSignedInt	opencv2/core/cuda/type_traits.hpp	/^        enum { isSignedInt      = type_traits_detail::IsSignedIntergral<UnqualifiedType>::value };$/;"	e	enum:cv::cuda::device::TypeTraits::__anon267
isString	opencv2/core/persistence.hpp	/^inline bool FileNode::isString() const { return type() == STR;  }$/;"	f	class:cv::FileNode
isSubmatrix	opencv2/core/mat.inl.hpp	/^bool Mat::isSubmatrix() const$/;"	f	class:cv::Mat
isSubmatrix	opencv2/core/mat.inl.hpp	/^bool UMat::isSubmatrix() const$/;"	f	class:cv::UMat
isThreadSafe	opencv2/stitching/detail/matchers.hpp	/^    bool isThreadSafe() const { return is_thread_safe_; }$/;"	f	class:cv::detail::FeaturesMatcher
isTilted	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^    __device__ __host__ NcvBool isTilted(void)$/;"	f	struct:HaarFeatureDescriptor32
isUMat	opencv2/core/mat.inl.hpp	/^inline bool _InputArray::isUMat() const  { return kind() == _InputArray::UMAT; }$/;"	f	class:cv::_InputArray
isUMatVector	opencv2/core/mat.inl.hpp	/^inline bool _InputArray::isUMatVector() const  { return kind() == _InputArray::STD_VECTOR_UMAT; }$/;"	f	class:cv::_InputArray
isUmat_	opencv2/superres.hpp	/^            bool isUmat_;$/;"	m	class:cv::superres::SuperResolution
isUnsignedInt	opencv2/core/cuda/type_traits.hpp	/^        enum { isUnsignedInt    = type_traits_detail::IsUnsignedIntegral<UnqualifiedType>::value };$/;"	e	enum:cv::cuda::device::TypeTraits::__anon266
isVec	opencv2/core/cuda/type_traits.hpp	/^        enum { isVec            = type_traits_detail::IsVec<UnqualifiedType>::value };$/;"	e	enum:cv::cuda::device::TypeTraits::__anon271
isVector	opencv2/core/mat.inl.hpp	/^inline bool _InputArray::isVector() const { return kind() == _InputArray::STD_VECTOR || kind() == _InputArray::STD_BOOL_VECTOR; }$/;"	f	class:cv::_InputArray
isVolatile	opencv2/core/cuda/type_traits.hpp	/^        enum { isVolatile       = type_traits_detail::UnVolatile<T>::value };$/;"	e	enum:cv::cuda::device::TypeTraits::__anon263
is_const	opencv2/cudev/util/type_traits.hpp	/^    enum { is_const          = type_traits_detail::UnConst<T>::value };$/;"	e	enum:cv::cudev::TypeTraits::__anon486
is_const_pointer	5/ext/pb_ds/detail/type_utils.hpp	/^    struct is_const_pointer$/;"	s	namespace:__gnu_pbds::detail
is_const_reference	5/ext/pb_ds/detail/type_utils.hpp	/^    struct is_const_reference$/;"	s	namespace:__gnu_pbds::detail
is_effectively_black	5/ext/pb_ds/detail/rb_tree_map_/info_fn_imps.hpp	/^is_effectively_black(const node_pointer p_nd)$/;"	f	class:PB_DS_CLASS_C_DEC
is_float	opencv2/cudev/util/type_traits.hpp	/^    enum { is_float          = type_traits_detail::IsFloat<unqualified_type>::value };$/;"	e	enum:cv::cudev::TypeTraits::__anon493
is_focals_estimated_	opencv2/stitching/detail/motion_estimators.hpp	/^    bool is_focals_estimated_;$/;"	m	class:cv::detail::HomographyBasedEstimator
is_full_	opencv2/flann/result_set.h	/^    bool is_full_;$/;"	m	class:cvflann::UniqueResultSet
is_grow_needed	5/ext/pb_ds/detail/resize_policy/cc_hash_max_collision_check_resize_trigger_imp.hpp	/^is_grow_needed(size_type \/*size*\/, size_type \/*num_used_e*\/) const$/;"	f	class:PB_DS_CLASS_C_DEC
is_grow_needed	5/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_imp.hpp	/^is_grow_needed(size_type \/*size*\/, size_type num_entries) const$/;"	f	class:PB_DS_CLASS_C_DEC
is_heap	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	/^      is_heap()$/;"	f	class:__gnu_pbds::detail::binary_heap
is_instance	opencv2/core/types_c.h	/^    CvIsInstanceFunc is_instance; \/**< checks if the passed object belongs to the type *\/$/;"	m	struct:CvTypeInfo
is_integral	opencv2/cudev/util/type_traits.hpp	/^    enum { is_integral       = type_traits_detail::IsIntegral<unqualified_type>::value };$/;"	e	enum:cv::cudev::TypeTraits::__anon492
is_kdtree_distance	opencv2/flann/dist.h	/^    typedef False is_kdtree_distance;$/;"	t	struct:cvflann::Hamming
is_kdtree_distance	opencv2/flann/dist.h	/^    typedef False is_kdtree_distance;$/;"	t	struct:cvflann::Hamming2
is_kdtree_distance	opencv2/flann/dist.h	/^    typedef False is_kdtree_distance;$/;"	t	struct:cvflann::HammingLUT
is_kdtree_distance	opencv2/flann/dist.h	/^    typedef False is_kdtree_distance;$/;"	t	struct:cvflann::MaxDistance
is_kdtree_distance	opencv2/flann/dist.h	/^    typedef True is_kdtree_distance;$/;"	t	struct:cvflann::ChiSquareDistance
is_kdtree_distance	opencv2/flann/dist.h	/^    typedef True is_kdtree_distance;$/;"	t	struct:cvflann::HellingerDistance
is_kdtree_distance	opencv2/flann/dist.h	/^    typedef True is_kdtree_distance;$/;"	t	struct:cvflann::HistIntersectionDistance
is_kdtree_distance	opencv2/flann/dist.h	/^    typedef True is_kdtree_distance;$/;"	t	struct:cvflann::KL_Divergence
is_kdtree_distance	opencv2/flann/dist.h	/^    typedef True is_kdtree_distance;$/;"	t	struct:cvflann::L1
is_kdtree_distance	opencv2/flann/dist.h	/^    typedef True is_kdtree_distance;$/;"	t	struct:cvflann::L2
is_kdtree_distance	opencv2/flann/dist.h	/^    typedef True is_kdtree_distance;$/;"	t	struct:cvflann::L2_Simple
is_kdtree_distance	opencv2/flann/dist.h	/^    typedef True is_kdtree_distance;$/;"	t	struct:cvflann::MinkowskiDistance
is_obj_without_holes	opencv2/cudalegacy.hpp	/^    bool is_obj_without_holes; \/\/!< If TRUE we ignore holes within foreground blobs. Defaults to TRUE.$/;"	m	struct:cv::cuda::FGDParams
is_pair	5/ext/pb_ds/detail/type_utils.hpp	/^    class is_pair$/;"	c	namespace:__gnu_pbds::detail
is_pair_imp	5/ext/pb_ds/detail/type_utils.hpp	/^      struct is_pair_imp$/;"	s	class:__gnu_pbds::detail::is_pair
is_pair_imp	5/ext/pb_ds/detail/type_utils.hpp	/^      struct is_pair_imp<std::pair<U,V> >$/;"	s	class:__gnu_pbds::detail::is_pair
is_pointer	opencv2/cudev/util/type_traits.hpp	/^    enum { is_pointer        = type_traits_detail::PointerTraits<typename type_traits_detail::ReferenceTraits<unqualified_type>::type>::value };$/;"	e	enum:cv::cudev::TypeTraits::__anon489
is_reference	opencv2/cudev/util/type_traits.hpp	/^    enum { is_reference      = type_traits_detail::ReferenceTraits<unqualified_type>::value };$/;"	e	enum:cv::cudev::TypeTraits::__anon488
is_resize_needed	5/ext/pb_ds/detail/resize_policy/cc_hash_max_collision_check_resize_trigger_imp.hpp	/^is_resize_needed() const$/;"	f	class:PB_DS_CLASS_C_DEC
is_resize_needed	5/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_imp.hpp	/^is_resize_needed() const$/;"	f	class:PB_DS_CLASS_C_DEC
is_resize_needed	5/ext/pb_ds/detail/resize_policy/hash_standard_resize_policy_imp.hpp	/^is_resize_needed() const$/;"	f	class:PB_DS_CLASS_C_DEC
is_scalar	opencv2/cudev/util/type_traits.hpp	/^    enum { is_scalar         = is_integral || is_float };$/;"	e	enum:cv::cudev::TypeTraits::__anon494
is_signed	opencv2/core/cuda/limits.hpp	/^    static const bool is_signed = false;$/;"	m	struct:cv::cuda::device::numeric_limits
is_signed	opencv2/core/cuda/limits.hpp	/^    static const bool is_signed = true;$/;"	m	struct:cv::cuda::device::numeric_limits
is_signed	opencv2/cudev/util/limits.hpp	/^    static const bool is_signed = false;$/;"	m	struct:cv::cudev::numeric_limits
is_signed	opencv2/cudev/util/limits.hpp	/^    static const bool is_signed = true;$/;"	m	struct:cv::cudev::numeric_limits
is_signed_int	opencv2/cudev/util/type_traits.hpp	/^    enum { is_signed_int     = type_traits_detail::IsSignedIntergral<unqualified_type>::value };$/;"	e	enum:cv::cudev::TypeTraits::__anon491
is_simple	5/ext/pb_ds/detail/type_utils.hpp	/^    struct is_simple$/;"	s	namespace:__gnu_pbds::detail
is_thread_safe_	opencv2/stitching/detail/matchers.hpp	/^    bool is_thread_safe_;$/;"	m	class:cv::detail::FeaturesMatcher
is_tuple	opencv2/cudev/util/tuple.hpp	/^    enum { is_tuple = 0 };$/;"	e	enum:cv::cudev::TupleTraits::__anon407
is_tuple	opencv2/cudev/util/tuple.hpp	/^    enum { is_tuple = 1 };$/;"	e	enum:cv::cudev::TupleTraits::__anon409
is_unsigned_int	opencv2/cudev/util/type_traits.hpp	/^    enum { is_unsigned_int   = type_traits_detail::IsUnsignedIntegral<unqualified_type>::value };$/;"	e	enum:cv::cudev::TypeTraits::__anon490
is_vec	opencv2/cudev/util/type_traits.hpp	/^    enum { is_vec            = type_traits_detail::IsVec<unqualified_type>::value };$/;"	e	enum:cv::cudev::TypeTraits::__anon495
is_vector_space_distance	opencv2/flann/dist.h	/^    typedef False is_vector_space_distance;$/;"	t	struct:cvflann::Hamming
is_vector_space_distance	opencv2/flann/dist.h	/^    typedef False is_vector_space_distance;$/;"	t	struct:cvflann::Hamming2
is_vector_space_distance	opencv2/flann/dist.h	/^    typedef False is_vector_space_distance;$/;"	t	struct:cvflann::HammingLUT
is_vector_space_distance	opencv2/flann/dist.h	/^    typedef True is_vector_space_distance;$/;"	t	struct:cvflann::ChiSquareDistance
is_vector_space_distance	opencv2/flann/dist.h	/^    typedef True is_vector_space_distance;$/;"	t	struct:cvflann::HellingerDistance
is_vector_space_distance	opencv2/flann/dist.h	/^    typedef True is_vector_space_distance;$/;"	t	struct:cvflann::HistIntersectionDistance
is_vector_space_distance	opencv2/flann/dist.h	/^    typedef True is_vector_space_distance;$/;"	t	struct:cvflann::KL_Divergence
is_vector_space_distance	opencv2/flann/dist.h	/^    typedef True is_vector_space_distance;$/;"	t	struct:cvflann::L1
is_vector_space_distance	opencv2/flann/dist.h	/^    typedef True is_vector_space_distance;$/;"	t	struct:cvflann::L2
is_vector_space_distance	opencv2/flann/dist.h	/^    typedef True is_vector_space_distance;$/;"	t	struct:cvflann::L2_Simple
is_vector_space_distance	opencv2/flann/dist.h	/^    typedef True is_vector_space_distance;$/;"	t	struct:cvflann::MaxDistance
is_vector_space_distance	opencv2/flann/dist.h	/^    typedef True is_vector_space_distance;$/;"	t	struct:cvflann::MinkowskiDistance
is_volatile	opencv2/cudev/util/type_traits.hpp	/^    enum { is_volatile       = type_traits_detail::UnVolatile<T>::value };$/;"	e	enum:cv::cudev::TypeTraits::__anon487
isalnum	cpp_src/locale_facets.h	/^    isalnum(_CharT __c, const locale& __loc)$/;"	f	namespace:std
isalpha	cpp_src/locale_facets.h	/^    isalpha(_CharT __c, const locale& __loc)$/;"	f	namespace:std
iscntrl	cpp_src/locale_facets.h	/^    iscntrl(_CharT __c, const locale& __loc)$/;"	f	namespace:std
isdigit	cpp_src/locale_facets.h	/^    isdigit(_CharT __c, const locale& __loc)$/;"	f	namespace:std
isgraph	cpp_src/locale_facets.h	/^    isgraph(_CharT __c, const locale& __loc)$/;"	f	namespace:std
islower	cpp_src/locale_facets.h	/^    islower(_CharT __c, const locale& __loc)$/;"	f	namespace:std
isprint	cpp_src/locale_facets.h	/^    isprint(_CharT __c, const locale& __loc)$/;"	f	namespace:std
ispunct	cpp_src/locale_facets.h	/^    ispunct(_CharT __c, const locale& __loc)$/;"	f	namespace:std
isspace	cpp_src/locale_facets.h	/^    isspace(_CharT __c, const locale& __loc)$/;"	f	namespace:std
istream_iterator	cpp_src/stream_iterator.h	/^      istream_iterator()$/;"	f	class:std::istream_iterator
istream_iterator	cpp_src/stream_iterator.h	/^      istream_iterator(const istream_iterator& __obj)$/;"	f	class:std::istream_iterator
istream_iterator	cpp_src/stream_iterator.h	/^      istream_iterator(istream_type& __s)$/;"	f	class:std::istream_iterator
istream_iterator	cpp_src/stream_iterator.h	/^    class istream_iterator$/;"	c	namespace:std
istream_type	cpp_src/stream_iterator.h	/^      typedef basic_istream<_CharT, _Traits> istream_type;$/;"	t	class:std::istream_iterator
istream_type	cpp_src/streambuf_iterator.h	/^      typedef basic_istream<_CharT, _Traits>		istream_type;$/;"	t	class:std::istreambuf_iterator
istreambuf_iterator	cpp_src/streambuf_iterator.h	/^      istreambuf_iterator() throw()$/;"	f	class:std::istreambuf_iterator
istreambuf_iterator	cpp_src/streambuf_iterator.h	/^      istreambuf_iterator(istream_type& __s) throw()$/;"	f	class:std::istreambuf_iterator
istreambuf_iterator	cpp_src/streambuf_iterator.h	/^      istreambuf_iterator(streambuf_type* __s) throw()$/;"	f	class:std::istreambuf_iterator
istreambuf_iterator	cpp_src/streambuf_iterator.h	/^    class istreambuf_iterator$/;"	c	namespace:std
isupper	cpp_src/locale_facets.h	/^    isupper(_CharT __c, const locale& __loc)$/;"	f	namespace:std
isxdigit	cpp_src/locale_facets.h	/^    isxdigit(_CharT __c, const locale& __loc)$/;"	f	namespace:std
it	opencv2/core/mat.hpp	/^    MatIterator_<_Tp> it;$/;"	m	class:cv::MatCommaInitializer_
it	opencv2/core/persistence.hpp	/^        FileNodeIterator* it;$/;"	m	class:cv::internal::VecReaderProxy
it_type	5/ext/pb_ds/detail/branch_policy/branch_policy.hpp	/^	typedef typename Node_CItr::value_type 		   it_type;$/;"	t	struct:__gnu_pbds::detail::branch_policy
it_type	5/ext/pb_ds/detail/branch_policy/branch_policy.hpp	/^	typedef typename Node_Itr::value_type 		it_type;$/;"	t	struct:__gnu_pbds::detail::branch_policy
iter	cpp_src/stl_iterator.h	/^      typename _Container::iterator iter;$/;"	m	class:std::insert_iterator
iter_swap	cpp_src/stl_algobase.h	/^        iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)$/;"	f	struct:std::__iter_swap
iter_swap	cpp_src/stl_algobase.h	/^    iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)$/;"	f	namespace:std
iter_type	cpp_src/locale_facets.h	/^      typedef _InIter			iter_type;$/;"	t	class:std::money_get
iter_type	cpp_src/locale_facets.h	/^      typedef _InIter			iter_type;$/;"	t	class:std::num_get
iter_type	cpp_src/locale_facets.h	/^      typedef _InIter			iter_type;$/;"	t	class:std::time_get
iter_type	cpp_src/locale_facets.h	/^      typedef _InIter			iter_type;$/;"	t	class:std::time_get_byname
iter_type	cpp_src/locale_facets.h	/^      typedef _OutIter			iter_type;$/;"	t	class:std::money_put
iter_type	cpp_src/locale_facets.h	/^      typedef _OutIter			iter_type;$/;"	t	class:std::time_put
iter_type	cpp_src/locale_facets.h	/^      typedef _OutIter			iter_type;$/;"	t	class:std::time_put_byname
iter_type	cpp_src/locale_facets.h	/^      typedef _OutIter		iter_type;$/;"	t	class:std::num_put
iterations_	opencv2/flann/kmeans_index.h	/^    int iterations_;$/;"	m	class:cvflann::KMeansIndex
iterator	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	/^      typedef point_iterator 				iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_BIN_TREE_NAME
iterator	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	/^      typedef const_iterator 				iterator;$/;"	t	class:__gnu_pbds::detail::binary_heap
iterator	5/ext/pb_ds/detail/binomial_heap_/binomial_heap_.hpp	/^      typedef typename base_type::iterator 		iterator;$/;"	t	class:__gnu_pbds::detail::binomial_heap
iterator	5/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp	/^      typedef typename base_type::iterator 		iterator;$/;"	t	class:__gnu_pbds::detail::binomial_heap_base
iterator	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef const_iterator_ 			iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
iterator	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef iterator_ 			iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
iterator	5/ext/pb_ds/detail/debug_map_base.hpp	/^      typedef typename key_repository::iterator	       	iterator;$/;"	t	class:__gnu_pbds::detail::debug_map_base
iterator	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef const_iterator_ 			iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
iterator	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef iterator_ 			iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
iterator	5/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp	/^      typedef const_iterator 				iterator;$/;"	t	class:__gnu_pbds::detail::left_child_next_sibling_heap
iterator	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      typedef const_iterator_ 			iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_LU_NAME
iterator	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      typedef iterator_ 			iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_LU_NAME
iterator	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      typedef point_iterator 				iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
iterator	5/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp	/^      typedef typename base_type::iterator 		iterator;$/;"	t	class:__gnu_pbds::detail::pairing_heap
iterator	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef point_iterator 				iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
iterator	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	iterator(node_pointer_pointer p_p_cur = 0,$/;"	f	struct:__gnu_pbds::detail::pat_trie_base::_Inode::iterator
iterator	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      struct iterator : public const_iterator$/;"	s	struct:__gnu_pbds::detail::pat_trie_base::_Inode
iterator	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef Iterator 					iterator;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_Node_iter
iterator	5/ext/pb_ds/detail/pat_trie_/traits.hpp	/^      typedef base_type::_Iter<node, leaf, head, inode, true>	       	iterator;$/;"	t	struct:__gnu_pbds::detail::trie_traits
iterator	5/ext/pb_ds/detail/pat_trie_/traits.hpp	/^      typedef const_iterator 					       	iterator;$/;"	t	struct:__gnu_pbds::detail::trie_traits
iterator	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	/^      typedef typename base_type::iterator 		 iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_RB_TREE_NAME
iterator	5/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp	/^      typedef typename base_type::iterator 		iterator;$/;"	t	class:__gnu_pbds::detail::rc_binomial_heap
iterator	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	/^      typedef typename base_type::iterator 		 iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_S_TREE_NAME
iterator	5/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp	/^      typedef typename base_type::iterator 		iterator;$/;"	t	class:__gnu_pbds::detail::thin_heap
iterator	5/ext/pb_ds/detail/trie_policy/trie_policy_base.hpp	/^      typedef typename node_iterator::value_type 	iterator;$/;"	t	class:__gnu_pbds::detail::trie_policy_base
iterator	5/ext/pb_ds/priority_queue.hpp	/^    typedef typename base_type::iterator 		iterator;$/;"	t	class:__gnu_pbds::priority_queue
iterator	5/ext/pb_ds/tree_policy.hpp	/^    typedef typename node_iterator::value_type 		iterator;$/;"	t	class:__gnu_pbds::tree_order_statistics_node_update
iterator	5/ext/pb_ds/trie_policy.hpp	/^    typedef typename node_iterator::value_type 		iterator;$/;"	t	class:__gnu_pbds::trie_order_statistics_node_update
iterator	5/ext/pb_ds/trie_policy.hpp	/^    typedef typename node_iterator::value_type 		iterator;$/;"	t	class:__gnu_pbds::trie_prefix_search_node_update
iterator	5/parallel/base.h	/^      typedef _PseudoSequenceIterator<_Tp, uint64_t> iterator;$/;"	t	class:__gnu_parallel::_PseudoSequence
iterator	cpp_src/basic_string.h	/^      typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;$/;"	t	class:std::basic_string
iterator	cpp_src/stl_bvector.h	/^    typedef _Bit_iterator                                iterator;$/;"	t	class:std::vector
iterator	cpp_src/stl_bvector.h	/^    typedef _Bit_iterator   iterator;$/;"	t	struct:std::_Bit_iterator
iterator	cpp_src/stl_deque.h	/^      typedef _Deque_iterator<_Tp, _Tp&, _Tp*>             iterator;$/;"	t	class:std::_Deque_base
iterator	cpp_src/stl_deque.h	/^      typedef _Deque_iterator<_Tp, _Tp&, _Tp*>             iterator;$/;"	t	struct:std::_Deque_iterator
iterator	cpp_src/stl_deque.h	/^      typedef typename _Base::iterator                   iterator;$/;"	t	class:std::deque
iterator	cpp_src/stl_iterator_base_types.h	/^    struct iterator$/;"	s	namespace:std
iterator	cpp_src/stl_list.h	/^      typedef _List_iterator<_Tp>                        iterator;$/;"	t	class:std::list
iterator	cpp_src/stl_list.h	/^      typedef _List_iterator<_Tp>                iterator;$/;"	t	struct:std::_List_const_iterator
iterator	cpp_src/stl_map.h	/^      typedef typename _Rep_type::iterator               iterator;$/;"	t	class:std::map
iterator	cpp_src/stl_multimap.h	/^      typedef typename _Rep_type::iterator               iterator;$/;"	t	class:std::multimap
iterator	cpp_src/stl_multiset.h	/^      typedef typename _Rep_type::const_iterator            iterator;$/;"	t	class:std::multiset
iterator	cpp_src/stl_set.h	/^      typedef typename _Rep_type::const_iterator            iterator;$/;"	t	class:std::set
iterator	cpp_src/stl_tempbuf.h	/^      typedef pointer     iterator;$/;"	t	class:std::_Temporary_buffer
iterator	cpp_src/stl_tree.h	/^      typedef _Rb_tree_iterator<_Tp> iterator;$/;"	t	struct:std::_Rb_tree_const_iterator
iterator	cpp_src/stl_tree.h	/^      typedef _Rb_tree_iterator<value_type>       iterator;$/;"	t	class:std::_Rb_tree
iterator	cpp_src/stl_vector.h	/^      typedef __gnu_cxx::__normal_iterator<pointer, vector_type> iterator;$/;"	t	class:std::vector
iterator	opencv2/core/core_c.h	/^    typedef SeqIterator<_Tp> iterator;$/;"	t	class:cv::Seq
iterator	opencv2/core/cvstd.hpp	/^    typedef char* iterator;$/;"	t	class:cv::String
iterator	opencv2/core/mat.hpp	/^    typedef MatIterator_<_Tp> iterator;$/;"	t	class:cv::Mat_
iterator	opencv2/core/mat.hpp	/^    typedef SparseMatIterator iterator;$/;"	t	class:cv::SparseMat
iterator	opencv2/core/mat.hpp	/^    typedef SparseMatIterator_<_Tp> iterator;$/;"	t	class:cv::SparseMat_
iterator_	5/ext/pb_ds/detail/unordered_iterator/iterator.hpp	/^  iterator_()$/;"	f	class:iterator_
iterator_	5/ext/pb_ds/detail/unordered_iterator/iterator.hpp	/^  iterator_(pointer p_value, PB_DS_GEN_POS pos, PB_DS_CLASS_C_DEC* p_tbl)$/;"	f	class:iterator_
iterator_	5/ext/pb_ds/detail/unordered_iterator/iterator.hpp	/^class iterator_$/;"	c
iterator_category	5/debug/safe_iterator.h	/^      typedef typename _Traits::iterator_category	iterator_category;$/;"	t	class:__gnu_debug::_Safe_iterator
iterator_category	5/debug/safe_local_iterator.h	/^      typedef typename _Traits::iterator_category	iterator_category;$/;"	t	class:__gnu_debug::_Safe_local_iterator
iterator_category	5/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp	/^      typedef trivial_iterator_tag iterator_category;$/;"	t	class:__gnu_pbds::detail::bin_search_tree_const_node_it_
iterator_category	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	/^      typedef std::bidirectional_iterator_tag 		iterator_category;$/;"	t	class:__gnu_pbds::detail::bin_search_tree_const_it_
iterator_category	5/ext/pb_ds/detail/binary_heap_/const_iterator.hpp	/^      typedef std::forward_iterator_tag 		iterator_category;$/;"	t	class:__gnu_pbds::detail::binary_heap_const_iterator_
iterator_category	5/ext/pb_ds/detail/binary_heap_/point_const_iterator.hpp	/^      typedef trivial_iterator_tag iterator_category;$/;"	t	class:__gnu_pbds::detail::binary_heap_point_const_iterator_
iterator_category	5/ext/pb_ds/detail/left_child_next_sibling_heap_/const_iterator.hpp	/^      typedef std::forward_iterator_tag 		iterator_category;$/;"	t	class:__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_
iterator_category	5/ext/pb_ds/detail/left_child_next_sibling_heap_/point_const_iterator.hpp	/^      typedef trivial_iterator_tag iterator_category;$/;"	t	class:__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_
iterator_category	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	/^      typedef trivial_iterator_tag iterator_category;$/;"	t	class:__gnu_pbds::detail::ov_tree_node_const_it_
iterator_category	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	/^      typedef trivial_iterator_tag iterator_category;$/;"	t	class:__gnu_pbds::detail::ov_tree_node_it_
iterator_category	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	typedef std::forward_iterator_tag 		iterator_category;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Inode::const_iterator
iterator_category	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	typedef std::forward_iterator_tag 		iterator_category;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Inode::iterator
iterator_category	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef std::bidirectional_iterator_tag 		iterator_category;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_CIter
iterator_category	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef trivial_iterator_tag 			iterator_category;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_Node_citer
iterator_category	5/ext/pb_ds/detail/unordered_iterator/const_iterator.hpp	/^  typedef std::forward_iterator_tag iterator_category;$/;"	t	class:const_iterator_
iterator_category	5/ext/pb_ds/detail/unordered_iterator/iterator.hpp	/^  typedef std::forward_iterator_tag iterator_category;$/;"	t	class:iterator_
iterator_category	5/ext/pb_ds/detail/unordered_iterator/point_const_iterator.hpp	/^  typedef trivial_iterator_tag iterator_category;$/;"	t	class:point_const_iterator_
iterator_category	5/ext/pb_ds/detail/unordered_iterator/point_iterator.hpp	/^  typedef trivial_iterator_tag iterator_category;$/;"	t	class:point_iterator_
iterator_category	5/parallel/iterator.h	/^      typedef _IteratorCategory iterator_category;$/;"	t	class:__gnu_parallel::_IteratorPair
iterator_category	5/parallel/iterator.h	/^      typedef _IteratorCategory iterator_category;$/;"	t	class:__gnu_parallel::_IteratorTriple
iterator_category	cpp_src/stl_deque.h	/^      typedef std::random_access_iterator_tag iterator_category;$/;"	t	struct:std::_Deque_iterator
iterator_category	cpp_src/stl_iterator.h	/^                                                             iterator_category;$/;"	t	class:__normal_iterator
iterator_category	cpp_src/stl_iterator_base_types.h	/^      typedef _Category  iterator_category;$/;"	t	struct:std::iterator
iterator_category	cpp_src/stl_iterator_base_types.h	/^      typedef random_access_iterator_tag iterator_category;$/;"	t	struct:std::iterator_traits
iterator_category	cpp_src/stl_iterator_base_types.h	/^      typedef typename _Iterator::iterator_category iterator_category;$/;"	t	struct:std::iterator_traits
iterator_category	cpp_src/stl_list.h	/^      typedef std::bidirectional_iterator_tag    iterator_category;$/;"	t	struct:std::_List_const_iterator
iterator_category	cpp_src/stl_list.h	/^      typedef std::bidirectional_iterator_tag    iterator_category;$/;"	t	struct:std::_List_iterator
iterator_category	cpp_src/stl_tree.h	/^      typedef bidirectional_iterator_tag iterator_category;$/;"	t	struct:std::_Rb_tree_const_iterator
iterator_category	cpp_src/stl_tree.h	/^      typedef bidirectional_iterator_tag iterator_category;$/;"	t	struct:std::_Rb_tree_iterator
iterator_category	opencv2/core/mat.hpp	/^    typedef std::forward_iterator_tag iterator_category;$/;"	t	class:cv::SparseMatConstIterator_
iterator_category	opencv2/core/mat.hpp	/^    typedef std::forward_iterator_tag iterator_category;$/;"	t	class:cv::SparseMatIterator_
iterator_category	opencv2/core/mat.hpp	/^    typedef std::random_access_iterator_tag iterator_category;$/;"	t	class:cv::MatConstIterator
iterator_category	opencv2/core/mat.hpp	/^    typedef std::random_access_iterator_tag iterator_category;$/;"	t	class:cv::MatConstIterator_
iterator_category	opencv2/core/mat.hpp	/^    typedef std::random_access_iterator_tag iterator_category;$/;"	t	class:cv::MatIterator_
iterator_traits	cpp_src/stl_iterator_base_types.h	/^    struct iterator_traits$/;"	s	namespace:std
iterator_traits	cpp_src/stl_iterator_base_types.h	/^    struct iterator_traits<_Tp*>$/;"	s	namespace:std
iterator_traits	cpp_src/stl_iterator_base_types.h	/^    struct iterator_traits<const _Tp*>$/;"	s	namespace:std
iterator_type	5/debug/safe_iterator.h	/^      typedef _Iterator					iterator_type;$/;"	t	class:__gnu_debug::_Safe_iterator
iterator_type	5/debug/safe_local_iterator.h	/^      typedef _Iterator					iterator_type;$/;"	t	class:__gnu_debug::_Safe_local_iterator
iterator_type	cpp_src/stl_iterator.h	/^      typedef _Iterator					       iterator_type;$/;"	t	class:std::reverse_iterator
iterdepth	opencv2/core/mat.hpp	/^    int iterdepth;$/;"	m	class:cv::NAryMatIterator
iters	opencv2/calib3d/calib3d_c.h	/^    int iters;$/;"	m	class:CvLevMarq
iword	cpp_src/ios_base.h	/^    iword(int __ix)$/;"	f	class:std::ios_base
iwriter	opencv2/videoio.hpp	/^    Ptr<IVideoWriter> iwriter;$/;"	m	class:cv::VideoWriter
iwscale	opencv2/core/ocl.hpp	/^    int wscale, iwscale;$/;"	m	class:cv::ocl::KernelArg
jaccardDistance	opencv2/core/types.hpp	/^double jaccardDistance(const Rect_<_Tp>& a, const Rect_<_Tp>& b) {$/;"	f	namespace:cv
java	5/sun/awt/CausedFocusEvent.h	/^  namespace java$/;"	n
join	5/ext/pb_ds/detail/binary_heap_/split_join_fn_imps.hpp	/^join(PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
join	5/ext/pb_ds/detail/binomial_heap_base_/split_join_fn_imps.hpp	/^join(PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
join	5/ext/pb_ds/detail/binomial_heap_base_/split_join_fn_imps.hpp	/^join(node_pointer p_lhs, node_pointer p_rhs) const$/;"	f	class:PB_DS_CLASS_C_DEC
join	5/ext/pb_ds/detail/debug_map_base.hpp	/^    join(PB_DS_CLASS_C_DEC& other, bool with_cleanup)$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
join	5/ext/pb_ds/detail/ov_tree_map_/split_join_fn_imps.hpp	/^join(PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
join	5/ext/pb_ds/detail/pairing_heap_/split_join_fn_imps.hpp	/^join(PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
join	5/ext/pb_ds/detail/pat_trie_/insert_join_fn_imps.hpp	/^join(PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
join	5/ext/pb_ds/detail/rb_tree_map_/split_join_fn_imps.hpp	/^join(PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
join	5/ext/pb_ds/detail/rc_binomial_heap_/split_join_fn_imps.hpp	/^join(PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
join	5/ext/pb_ds/detail/splay_tree_/split_join_fn_imps.hpp	/^join(PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
join	5/ext/pb_ds/detail/thin_heap_/split_join_fn_imps.hpp	/^join(PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
join_error	5/ext/pb_ds/exception.hpp	/^  struct join_error : public container_error { };$/;"	s	namespace:__gnu_pbds
join_finish	5/ext/pb_ds/detail/bin_search_tree_/split_join_fn_imps.hpp	/^join_finish(PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
join_imp	5/ext/pb_ds/detail/rb_tree_map_/split_join_fn_imps.hpp	/^join_imp(node_pointer p_x, node_pointer p_r)$/;"	f	class:PB_DS_CLASS_C_DEC
join_node_children	5/ext/pb_ds/detail/pairing_heap_/erase_fn_imps.hpp	/^join_node_children(node_pointer p_nd)$/;"	f	class:PB_DS_CLASS_C_DEC
join_prep	5/ext/pb_ds/detail/bin_search_tree_/split_join_fn_imps.hpp	/^join_prep(PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
join_prep	5/ext/pb_ds/detail/pat_trie_/insert_join_fn_imps.hpp	/^join_prep(PB_DS_CLASS_C_DEC& other, branch_bag& r_bag)$/;"	f	class:PB_DS_CLASS_C_DEC
k	opencv2/stitching/detail/warpers.hpp	/^    float k[9];$/;"	m	struct:cv::detail::ProjectorBase
kArray	opencv2/flann/lsh_table.h	/^        kArray, kBitsetHash, kHash$/;"	e	enum:cvflann::lsh::LshTable::SpeedLevel
kBitsetHash	opencv2/flann/lsh_table.h	/^        kArray, kBitsetHash, kHash$/;"	e	enum:cvflann::lsh::LshTable::SpeedLevel
kBytes	opencv2/features2d.hpp	/^    enum { kBytes = 32, HARRIS_SCORE=0, FAST_SCORE=1 };$/;"	e	enum:cv::ORB::__anon376
kChannels	opencv2/core/wimage.hpp	/^    enum { kChannels = C };$/;"	e	enum:cv::WImageBufferC::__anon125
kChannels	opencv2/core/wimage.hpp	/^    enum { kChannels = C };$/;"	e	enum:cv::WImageC::__anon124
kChannels	opencv2/core/wimage.hpp	/^    enum { kChannels = C };$/;"	e	enum:cv::WImageViewC::__anon126
kHash	opencv2/flann/lsh_table.h	/^        kArray, kBitsetHash, kHash$/;"	e	enum:cvflann::lsh::LshTable::SpeedLevel
k_rinv	opencv2/stitching/detail/warpers.hpp	/^    float k_rinv[9];$/;"	m	struct:cv::detail::ProjectorBase
kalman	opencv2/video/tracking_c.h	/^CVAPI(void)  cvReleaseKalman( CvKalman** kalman);$/;"	v
kdtree_index_	opencv2/flann/composite_index.h	/^    KDTreeIndex<Distance>* kdtree_index_;$/;"	m	class:cvflann::CompositeIndex
key_	opencv2/core/utility.hpp	/^    int key_;$/;"	m	class:cv::TLSDataContainer
key_allocator	5/ext/pb_ds/detail/eq_fn/hash_eq_fn.hpp	/^      typedef typename _Alloc::template rebind<Key>::other key_allocator;$/;"	t	struct:__gnu_pbds::detail::hash_eq_fn
key_allocator	5/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp	/^      typedef typename _Alloc::template rebind< Key>::other key_allocator;$/;"	t	class:__gnu_pbds::detail::ranged_hash_fn
key_allocator	5/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp	/^      typedef typename _Alloc::template rebind<Key>::other key_allocator;$/;"	t	class:__gnu_pbds::detail::ranged_hash_fn
key_allocator	5/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp	/^      typedef typename _Alloc::template rebind<Key>::other key_allocator;$/;"	t	class:__gnu_pbds::detail::ranged_probe_fn
key_bitset_	opencv2/flann/lsh_table.h	/^    DynamicBitset key_bitset_;$/;"	m	class:cvflann::lsh::LshTable
key_comp	cpp_src/stl_map.h	/^      key_comp() const$/;"	f	class:std::map
key_comp	cpp_src/stl_multimap.h	/^      key_comp() const$/;"	f	class:std::multimap
key_comp	cpp_src/stl_multiset.h	/^      key_comp() const$/;"	f	class:std::multiset
key_comp	cpp_src/stl_set.h	/^      key_comp() const$/;"	f	class:std::set
key_comp	cpp_src/stl_tree.h	/^      key_comp() const$/;"	f	class:std::_Rb_tree
key_compare	cpp_src/stl_map.h	/^      typedef _Compare                                      key_compare;$/;"	t	class:std::map
key_compare	cpp_src/stl_multimap.h	/^      typedef _Compare                                      key_compare;$/;"	t	class:std::multimap
key_compare	cpp_src/stl_multiset.h	/^      typedef _Compare key_compare;$/;"	t	class:std::multiset
key_compare	cpp_src/stl_set.h	/^      typedef _Compare key_compare;$/;"	t	class:std::set
key_const_pointer	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	/^      typedef typename traits_base::key_const_pointer 	key_const_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_BIN_TREE_NAME
key_const_pointer	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef typename traits_base::key_const_pointer key_const_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
key_const_pointer	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef typename traits_base::key_const_pointer key_const_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
key_const_pointer	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      typedef typename traits_base::key_const_pointer key_const_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_LU_NAME
key_const_pointer	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      typedef typename traits_base::key_const_pointer 	key_const_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
key_const_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename traits_base::key_const_pointer 	key_const_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
key_const_pointer	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	/^      typedef typename base_type::key_const_pointer 	 key_const_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_RB_TREE_NAME
key_const_pointer	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	/^      typedef typename base_type::key_const_pointer 	 key_const_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_S_TREE_NAME
key_const_pointer	5/ext/pb_ds/detail/types_traits.hpp	/^	typedef typename __rebind_a::const_pointer 	key_const_pointer;$/;"	t	struct:__gnu_pbds::detail::types_traits
key_const_reference	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	/^      typedef typename traits_base::key_const_reference key_const_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_BIN_TREE_NAME
key_const_reference	5/ext/pb_ds/detail/branch_policy/branch_policy.hpp	/^	typedef	typename rebind_k::const_reference 	key_const_reference;$/;"	t	struct:__gnu_pbds::detail::branch_policy
key_const_reference	5/ext/pb_ds/detail/branch_policy/branch_policy.hpp	/^	typedef	typename rebind_v::const_reference 	key_const_reference;$/;"	t	struct:__gnu_pbds::detail::branch_policy
key_const_reference	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef typename traits_base::key_const_reference key_const_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
key_const_reference	5/ext/pb_ds/detail/debug_map_base.hpp	/^      typedef Const_Key_Reference 			key_const_reference;$/;"	t	class:__gnu_pbds::detail::debug_map_base
key_const_reference	5/ext/pb_ds/detail/eq_fn/hash_eq_fn.hpp	/^      typedef typename key_allocator::const_reference 	   key_const_reference;$/;"	t	struct:__gnu_pbds::detail::hash_eq_fn
key_const_reference	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef typename traits_base::key_const_reference key_const_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
key_const_reference	5/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp	/^      typedef typename key_allocator::const_reference key_const_reference;$/;"	t	class:__gnu_pbds::detail::ranged_hash_fn
key_const_reference	5/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp	/^      typedef typename key_allocator::const_reference key_const_reference;$/;"	t	class:__gnu_pbds::detail::ranged_probe_fn
key_const_reference	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      typedef typename traits_base::key_const_reference key_const_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_LU_NAME
key_const_reference	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      typedef typename traits_base::key_const_reference key_const_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
key_const_reference	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename traits_base::key_const_reference key_const_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
key_const_reference	5/ext/pb_ds/detail/pat_trie_/synth_access_traits.hpp	/^      typedef typename type_traits::key_const_reference key_const_reference;$/;"	t	struct:__gnu_pbds::detail::synth_access_traits
key_const_reference	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	/^      typedef typename base_type::key_const_reference 	 key_const_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_RB_TREE_NAME
key_const_reference	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	/^      typedef typename base_type::key_const_reference 	 key_const_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_S_TREE_NAME
key_const_reference	5/ext/pb_ds/detail/trie_policy/sample_trie_access_traits.hpp	/^    typedef typename __rebind_k::other::const_reference	key_const_reference;$/;"	t	struct:__gnu_pbds::sample_trie_access_traits
key_const_reference	5/ext/pb_ds/detail/trie_policy/trie_policy_base.hpp	/^      typedef typename base_type::key_const_reference 	key_const_reference;$/;"	t	class:__gnu_pbds::detail::trie_policy_base
key_const_reference	5/ext/pb_ds/detail/types_traits.hpp	/^	typedef typename __rebind_a::const_reference 	key_const_reference;$/;"	t	struct:__gnu_pbds::detail::types_traits
key_const_reference	5/ext/pb_ds/tree_policy.hpp	/^    typedef typename base_type::key_const_reference 	key_const_reference;$/;"	t	class:__gnu_pbds::tree_order_statistics_node_update
key_const_reference	5/ext/pb_ds/trie_policy.hpp	/^    typedef typename __rebind_k::other::const_reference   key_const_reference;$/;"	t	struct:__gnu_pbds::trie_string_access_traits
key_const_reference	5/ext/pb_ds/trie_policy.hpp	/^    typedef typename base_type::key_const_reference 	key_const_reference;$/;"	t	class:__gnu_pbds::trie_order_statistics_node_update
key_const_reference	5/ext/pb_ds/trie_policy.hpp	/^    typedef typename base_type::key_const_reference 	key_const_reference;$/;"	t	class:__gnu_pbds::trie_prefix_search_node_update
key_pointer	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	/^      typedef typename traits_base::key_pointer 	key_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_BIN_TREE_NAME
key_pointer	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef typename traits_base::key_pointer key_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
key_pointer	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef typename traits_base::key_pointer key_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
key_pointer	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      typedef typename traits_base::key_pointer key_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_LU_NAME
key_pointer	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      typedef typename traits_base::key_pointer 	key_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
key_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename traits_base::key_pointer 	key_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
key_pointer	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	/^      typedef typename base_type::key_pointer 		 key_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_RB_TREE_NAME
key_pointer	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	/^      typedef typename base_type::key_pointer 		 key_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_S_TREE_NAME
key_pointer	5/ext/pb_ds/detail/types_traits.hpp	/^	typedef typename __rebind_a::pointer 		key_pointer;$/;"	t	struct:__gnu_pbds::detail::types_traits
key_reference	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	/^      typedef typename traits_base::key_reference 	key_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_BIN_TREE_NAME
key_reference	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef typename traits_base::key_reference key_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
key_reference	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef typename traits_base::key_reference key_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
key_reference	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      typedef typename traits_base::key_reference key_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_LU_NAME
key_reference	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      typedef typename traits_base::key_reference 	key_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
key_reference	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename traits_base::key_reference 	key_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
key_reference	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	/^      typedef typename base_type::key_reference 	 key_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_RB_TREE_NAME
key_reference	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	/^      typedef typename base_type::key_reference 	 key_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_S_TREE_NAME
key_reference	5/ext/pb_ds/detail/types_traits.hpp	/^	typedef typename __rebind_a::reference 		key_reference;$/;"	t	struct:__gnu_pbds::detail::types_traits
key_repository	5/ext/pb_ds/detail/debug_map_base.hpp	/^      typedef std::_GLIBCXX_STD_C::list<Key> 		key_repository;$/;"	t	class:__gnu_pbds::detail::debug_map_base
key_size_	opencv2/flann/lsh_index.h	/^    unsigned int key_size_;$/;"	m	class:cvflann::LshIndex
key_size_	opencv2/flann/lsh_table.h	/^    unsigned int key_size_;$/;"	m	class:cvflann::lsh::LshTable
key_type	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	/^      typedef typename traits_base::key_type 		key_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_BIN_TREE_NAME
key_type	5/ext/pb_ds/detail/branch_policy/branch_policy.hpp	/^	typedef typename value_type::first_type 	key_type;$/;"	t	struct:__gnu_pbds::detail::branch_policy
key_type	5/ext/pb_ds/detail/branch_policy/branch_policy.hpp	/^	typedef value_type 				key_type;$/;"	t	struct:__gnu_pbds::detail::branch_policy
key_type	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef typename traits_base::key_type key_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
key_type	5/ext/pb_ds/detail/cc_hash_table_map_/cond_key_dtor_entry_dealtor.hpp	/^      typedef typename HT_Map::key_type 	key_type;$/;"	t	class:__gnu_pbds::detail::cond_dealtor
key_type	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef typename traits_base::key_type 	key_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
key_type	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      typedef typename traits_base::key_type key_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_LU_NAME
key_type	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      typedef typename traits_base::key_type 		key_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
key_type	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename traits_base::key_type 		key_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
key_type	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	/^      typedef typename base_type::key_type 		 key_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_RB_TREE_NAME
key_type	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	/^      typedef typename base_type::key_type 		 key_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_S_TREE_NAME
key_type	5/ext/pb_ds/detail/trie_policy/sample_trie_access_traits.hpp	/^    typedef std::string 			       	key_type;$/;"	t	struct:__gnu_pbds::sample_trie_access_traits
key_type	5/ext/pb_ds/detail/trie_policy/trie_policy_base.hpp	/^      typedef typename base_type::key_type 		key_type;$/;"	t	class:__gnu_pbds::detail::trie_policy_base
key_type	5/ext/pb_ds/detail/types_traits.hpp	/^	typedef typename __rebind_a::value_type 	key_type;$/;"	t	struct:__gnu_pbds::detail::types_traits
key_type	5/ext/pb_ds/tree_policy.hpp	/^    typedef typename base_type::key_type 		key_type;$/;"	t	class:__gnu_pbds::tree_order_statistics_node_update
key_type	5/ext/pb_ds/trie_policy.hpp	/^    typedef String 					  key_type;$/;"	t	struct:__gnu_pbds::trie_string_access_traits
key_type	5/ext/pb_ds/trie_policy.hpp	/^    typedef typename base_type::key_type 		key_type;$/;"	t	class:__gnu_pbds::trie_order_statistics_node_update
key_type	5/ext/pb_ds/trie_policy.hpp	/^    typedef typename base_type::key_type 		key_type;$/;"	t	class:__gnu_pbds::trie_prefix_search_node_update
key_type	cpp_src/stl_map.h	/^      typedef _Key                                          key_type;$/;"	t	class:std::map
key_type	cpp_src/stl_multimap.h	/^      typedef _Key                                          key_type;$/;"	t	class:std::multimap
key_type	cpp_src/stl_multiset.h	/^      typedef _Key     key_type;$/;"	t	class:std::multiset
key_type	cpp_src/stl_set.h	/^      typedef _Key     key_type;$/;"	t	class:std::set
key_type	cpp_src/stl_tree.h	/^      typedef _Key key_type;$/;"	t	class:std::_Rb_tree
keypoints	opencv2/stitching/detail/matchers.hpp	/^    std::vector<KeyPoint> keypoints;$/;"	m	struct:cv::detail::ImageFeatures
keypointsPrev_	opencv2/videostab/global_motion.hpp	/^    std::vector<KeyPoint> keypointsPrev_;$/;"	m	class:cv::videostab::KeypointBasedMotionEstimator
keypoints_	opencv2/stitching/detail/matchers.hpp	/^    cuda::GpuMat keypoints_;$/;"	m	class:cv::detail::SurfFeaturesFinderGpu
keys_diff_ind	5/ext/pb_ds/detail/pat_trie_/insert_join_fn_imps.hpp	/^keys_diff_ind(typename access_traits::const_iterator b_l,$/;"	f	class:PB_DS_CLASS_C_DEC
kmeans_index_	opencv2/flann/composite_index.h	/^    KMeansIndex<Distance>* kmeans_index_;$/;"	m	class:cvflann::CompositeIndex
knnSearch	opencv2/flann.hpp	/^    FLANN_DEPRECATED void knnSearch(const Mat& queries, Mat& indices, Mat& dists, int knn, const ::cvflann::SearchParams& searchParams)$/;"	f	class:cv::flann::Index_
knnSearch	opencv2/flann.hpp	/^    FLANN_DEPRECATED void knnSearch(const std::vector<ElementType>& query, std::vector<int>& indices, std::vector<DistanceType>& dists, int knn, const ::cvflann::SearchParams& searchParams)$/;"	f	class:cv::flann::Index_
knnSearch	opencv2/flann.hpp	/^void GenericIndex<Distance>::knnSearch(const Mat& queries, Mat& indices, Mat& dists, int knn, const ::cvflann::SearchParams& searchParams)$/;"	f	class:cv::flann::GenericIndex
knnSearch	opencv2/flann.hpp	/^void GenericIndex<Distance>::knnSearch(const std::vector<ElementType>& query, std::vector<int>& indices, std::vector<DistanceType>& dists, int knn, const ::cvflann::SearchParams& searchParams)$/;"	f	class:cv::flann::GenericIndex
knnSearch	opencv2/flann/flann_base.hpp	/^    void knnSearch(const Matrix<ElementType>& queries, Matrix<int>& indices, Matrix<DistanceType>& dists, int knn, const SearchParams& params)$/;"	f	class:cvflann::Index
knnSearch	opencv2/flann/kdtree_single_index.h	/^    void knnSearch(const Matrix<ElementType>& queries, Matrix<int>& indices, Matrix<DistanceType>& dists, int knn, const SearchParams& params)$/;"	f	class:cvflann::KDTreeSingleIndex
knnSearch	opencv2/flann/lsh_index.h	/^    virtual void knnSearch(const Matrix<ElementType>& queries, Matrix<int>& indices, Matrix<DistanceType>& dists, int knn, const SearchParams& params)$/;"	f	class:cvflann::LshIndex
knnSearch	opencv2/flann/nn_index.h	/^    virtual void knnSearch(const Matrix<ElementType>& queries, Matrix<int>& indices, Matrix<DistanceType>& dists, int knn, const SearchParams& params)$/;"	f	class:cvflann::NNIndex
lab_shift	opencv2/core/cuda/detail/color_detail.hpp	/^            lab_shift = xyz_shift,$/;"	e	enum:cv::cuda::device::color_detail::__anon247
lab_shift	opencv2/cudev/functional/detail/color_cvt.hpp	/^        lab_shift = xyz_shift,$/;"	e	enum:cv::cudev::color_cvt_detail::__anon397
lab_shift2	opencv2/core/cuda/detail/color_detail.hpp	/^            lab_shift2 = (lab_shift + gamma_shift),$/;"	e	enum:cv::cuda::device::color_detail::__anon247
lab_shift2	opencv2/cudev/functional/detail/color_cvt.hpp	/^        lab_shift2 = (lab_shift + gamma_shift),$/;"	e	enum:cv::cudev::color_cvt_detail::__anon397
labels_	opencv2/stitching/detail/seam_finders.hpp	/^    Mat_<int> labels_;$/;"	m	class:cv::detail::DpSeamFinder
lambdaLg10	opencv2/calib3d/calib3d_c.h	/^    int lambdaLg10;$/;"	m	class:CvLevMarq
laneId	opencv2/core/cuda/warp.hpp	/^        static __device__ __forceinline__ unsigned int laneId()$/;"	f	struct:cv::cuda::device::Warp
laneId	opencv2/cudev/warp/warp.hpp	/^    __device__ __forceinline__ static uint laneId()$/;"	f	struct:cv::cudev::Warp
lane_type	opencv2/core/hal/intrin_cpp.hpp	/^    typedef _Tp lane_type;$/;"	t	struct:cv::v_reg
lane_type	opencv2/core/hal/intrin_neon.hpp	/^    typedef double lane_type;$/;"	t	struct:cv::v_float64x2
lane_type	opencv2/core/hal/intrin_neon.hpp	/^    typedef float lane_type;$/;"	t	struct:cv::v_float32x4
lane_type	opencv2/core/hal/intrin_neon.hpp	/^    typedef int lane_type;$/;"	t	struct:cv::v_int32x4
lane_type	opencv2/core/hal/intrin_neon.hpp	/^    typedef int64 lane_type;$/;"	t	struct:cv::v_int64x2
lane_type	opencv2/core/hal/intrin_neon.hpp	/^    typedef schar lane_type;$/;"	t	struct:cv::v_int8x16
lane_type	opencv2/core/hal/intrin_neon.hpp	/^    typedef short lane_type;$/;"	t	struct:cv::v_float16x4
lane_type	opencv2/core/hal/intrin_neon.hpp	/^    typedef short lane_type;$/;"	t	struct:cv::v_int16x8
lane_type	opencv2/core/hal/intrin_neon.hpp	/^    typedef uchar lane_type;$/;"	t	struct:cv::v_uint8x16
lane_type	opencv2/core/hal/intrin_neon.hpp	/^    typedef uint64 lane_type;$/;"	t	struct:cv::v_uint64x2
lane_type	opencv2/core/hal/intrin_neon.hpp	/^    typedef unsigned lane_type;$/;"	t	struct:cv::v_uint32x4
lane_type	opencv2/core/hal/intrin_neon.hpp	/^    typedef ushort lane_type;$/;"	t	struct:cv::v_uint16x8
lane_type	opencv2/core/hal/intrin_sse.hpp	/^    typedef double lane_type;$/;"	t	struct:cv::v_float64x2
lane_type	opencv2/core/hal/intrin_sse.hpp	/^    typedef float lane_type;$/;"	t	struct:cv::v_float32x4
lane_type	opencv2/core/hal/intrin_sse.hpp	/^    typedef int lane_type;$/;"	t	struct:cv::v_int32x4
lane_type	opencv2/core/hal/intrin_sse.hpp	/^    typedef int64 lane_type;$/;"	t	struct:cv::v_int64x2
lane_type	opencv2/core/hal/intrin_sse.hpp	/^    typedef schar lane_type;$/;"	t	struct:cv::v_int8x16
lane_type	opencv2/core/hal/intrin_sse.hpp	/^    typedef short lane_type;$/;"	t	struct:cv::v_float16x4
lane_type	opencv2/core/hal/intrin_sse.hpp	/^    typedef short lane_type;$/;"	t	struct:cv::v_int16x8
lane_type	opencv2/core/hal/intrin_sse.hpp	/^    typedef uchar lane_type;$/;"	t	struct:cv::v_uint8x16
lane_type	opencv2/core/hal/intrin_sse.hpp	/^    typedef uint64 lane_type;$/;"	t	struct:cv::v_uint64x2
lane_type	opencv2/core/hal/intrin_sse.hpp	/^    typedef unsigned lane_type;$/;"	t	struct:cv::v_uint32x4
lane_type	opencv2/core/hal/intrin_sse.hpp	/^    typedef ushort lane_type;$/;"	t	struct:cv::v_uint16x8
laplacianPtr	opencv2/cudev/ptr2d/deriv.hpp	/^__host__ LaplacianPtrSz<ksize, typename PtrTraits<SrcPtr>::ptr_type> laplacianPtr(const SrcPtr& src)$/;"	f	namespace:cv::cudev
laplacian_	opencv2/cudev/expr/deriv.hpp	/^laplacian_(const SrcPtr& src)$/;"	f	namespace:cv::cudev
last	opencv2/core/core_c.h	/^    static CvTypeInfo* last;$/;"	m	struct:CvType
lastPositions	opencv2/objdetect/detection_based_tracker.hpp	/^            PositionsVector lastPositions;$/;"	m	struct:cv::DetectionBasedTracker::TrackedObject
last_col	opencv2/core/cuda/border_interpolate.hpp	/^        int last_col;$/;"	m	struct:cv::cuda::device::BrdReflect
last_col	opencv2/core/cuda/border_interpolate.hpp	/^        int last_col;$/;"	m	struct:cv::cuda::device::BrdReflect101
last_col	opencv2/core/cuda/border_interpolate.hpp	/^        int last_col;$/;"	m	struct:cv::cuda::device::BrdReplicate
last_col	opencv2/core/cuda/border_interpolate.hpp	/^        int last_col;$/;"	m	struct:cv::cuda::device::BrdRowReflect
last_col	opencv2/core/cuda/border_interpolate.hpp	/^        int last_col;$/;"	m	struct:cv::cuda::device::BrdRowReflect101
last_col	opencv2/core/cuda/border_interpolate.hpp	/^        int last_col;$/;"	m	struct:cv::cuda::device::BrdRowReplicate
last_row	opencv2/core/cuda/border_interpolate.hpp	/^        int last_row;$/;"	m	struct:cv::cuda::device::BrdColReflect
last_row	opencv2/core/cuda/border_interpolate.hpp	/^        int last_row;$/;"	m	struct:cv::cuda::device::BrdColReflect101
last_row	opencv2/core/cuda/border_interpolate.hpp	/^        int last_row;$/;"	m	struct:cv::cuda::device::BrdColReplicate
last_row	opencv2/core/cuda/border_interpolate.hpp	/^        int last_row;$/;"	m	struct:cv::cuda::device::BrdReflect
last_row	opencv2/core/cuda/border_interpolate.hpp	/^        int last_row;$/;"	m	struct:cv::cuda::device::BrdReflect101
last_row	opencv2/core/cuda/border_interpolate.hpp	/^        int last_row;$/;"	m	struct:cv::cuda::device::BrdReplicate
leaf	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename traits_type::leaf 		leaf;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
leaf	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef _Leaf<_ATraits, Metadata>	 			leaf;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Inode
leaf	5/ext/pb_ds/detail/pat_trie_/traits.hpp	/^      typedef base_type::_Leaf<synth_access_traits, metadata>	       	leaf;$/;"	t	struct:__gnu_pbds::detail::trie_traits
leaf	5/ext/pb_ds/detail/pat_trie_/traits.hpp	/^      typedef base_type::_Leaf<synth_access_traits, metadata> 	       	leaf;$/;"	t	struct:__gnu_pbds::detail::trie_traits
leaf_allocator	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename __rebind_l::other 		leaf_allocator;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
leaf_const_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename leaf_allocator::const_pointer 	leaf_const_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
leaf_const_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename __rebind_l::const_pointer 	    leaf_const_pointer;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Inode
leaf_const_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename __rebind_l::other::const_pointer	leaf_const_pointer;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_CIter
leaf_const_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename __rebind_l::other::const_pointer	leaf_const_pointer;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_Node_citer
leaf_const_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename base_type::leaf_const_pointer	leaf_const_pointer;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_Iter
leaf_max_size_	opencv2/flann/kdtree_single_index.h	/^    int leaf_max_size_;$/;"	m	class:cvflann::KDTreeSingleIndex
leaf_node	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	  leaf_node,$/;"	e	enum:__gnu_pbds::detail::pat_trie_base::node_type
leaf_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename leaf_allocator::pointer 		leaf_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
leaf_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename __rebind_l::other::pointer	leaf_pointer;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_CIter
leaf_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename __rebind_l::other::pointer	leaf_pointer;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_Node_citer
leaf_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename __rebind_l::pointer 			leaf_pointer;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Inode
leaf_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename base_type::leaf_pointer		leaf_pointer;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_Iter
leaf_size_	opencv2/flann/hierarchical_clustering_index.h	/^    int leaf_size_;$/;"	m	class:cvflann::HierarchicalClusteringIndex
left	cpp_src/ios_base.h	/^    static const fmtflags left =        _S_left;$/;"	m	class:std::ios_base
left	cpp_src/ios_base.h	/^  left(ios_base& __base)$/;"	f	namespace:std
left	opencv2/flann/kdtree_single_index.h	/^        int left, right;$/;"	m	struct:cvflann::KDTreeSingleIndex::Node
left	opencv2/ml.hpp	/^        int left; \/\/!< Index of the left child node$/;"	m	class:cv::ml::DTrees::Node
left	opencv2/objdetect/objdetect_c.h	/^    int* left;$/;"	m	struct:CvHaarClassifier
left_child	5/ext/pb_ds/detail/binary_heap_/find_fn_imps.hpp	/^left_child(size_type i)$/;"	f	class:PB_DS_CLASS_C_DEC
left_child_next_sibling_heap	5/ext/pb_ds/detail/left_child_next_sibling_heap_/constructors_destructor_fn_imps.hpp	/^left_child_next_sibling_heap() :$/;"	f	class:PB_DS_CLASS_C_DEC
left_child_next_sibling_heap	5/ext/pb_ds/detail/left_child_next_sibling_heap_/constructors_destructor_fn_imps.hpp	/^left_child_next_sibling_heap(const Cmp_Fn& r_cmp_fn) :$/;"	f	class:PB_DS_CLASS_C_DEC
left_child_next_sibling_heap	5/ext/pb_ds/detail/left_child_next_sibling_heap_/constructors_destructor_fn_imps.hpp	/^left_child_next_sibling_heap(const PB_DS_CLASS_C_DEC& other) $/;"	f	class:PB_DS_CLASS_C_DEC
left_child_next_sibling_heap	5/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp	/^    class left_child_next_sibling_heap : public Cmp_Fn$/;"	c	namespace:__gnu_pbds::detail
left_child_next_sibling_heap_const_iterator_	5/ext/pb_ds/detail/left_child_next_sibling_heap_/const_iterator.hpp	/^      left_child_next_sibling_heap_const_iterator_()$/;"	f	class:__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_
left_child_next_sibling_heap_const_iterator_	5/ext/pb_ds/detail/left_child_next_sibling_heap_/const_iterator.hpp	/^      left_child_next_sibling_heap_const_iterator_(const PB_DS_CLASS_C_DEC& other) : base_type(other)$/;"	f	class:__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_
left_child_next_sibling_heap_const_iterator_	5/ext/pb_ds/detail/left_child_next_sibling_heap_/const_iterator.hpp	/^      left_child_next_sibling_heap_const_iterator_(node_pointer p_nd)$/;"	f	class:__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_
left_child_next_sibling_heap_const_iterator_	5/ext/pb_ds/detail/left_child_next_sibling_heap_/const_iterator.hpp	/^    class left_child_next_sibling_heap_const_iterator_$/;"	c	namespace:__gnu_pbds::detail
left_child_next_sibling_heap_node_	5/ext/pb_ds/detail/left_child_next_sibling_heap_/node.hpp	/^    struct left_child_next_sibling_heap_node_$/;"	s	namespace:__gnu_pbds::detail
left_child_next_sibling_heap_node_	5/ext/pb_ds/detail/left_child_next_sibling_heap_/node.hpp	/^    struct left_child_next_sibling_heap_node_<_Value, null_type, _Alloc>$/;"	s	namespace:__gnu_pbds::detail
left_child_next_sibling_heap_node_point_const_iterator_	5/ext/pb_ds/detail/left_child_next_sibling_heap_/point_const_iterator.hpp	/^      left_child_next_sibling_heap_node_point_const_iterator_() : m_p_nd(0)$/;"	f	class:__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_
left_child_next_sibling_heap_node_point_const_iterator_	5/ext/pb_ds/detail/left_child_next_sibling_heap_/point_const_iterator.hpp	/^      left_child_next_sibling_heap_node_point_const_iterator_(const PB_DS_CLASS_C_DEC& other) : m_p_nd(other.m_p_nd)$/;"	f	class:__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_
left_child_next_sibling_heap_node_point_const_iterator_	5/ext/pb_ds/detail/left_child_next_sibling_heap_/point_const_iterator.hpp	/^      left_child_next_sibling_heap_node_point_const_iterator_(node_pointer p_nd) : m_p_nd(p_nd)$/;"	f	class:__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_
left_child_next_sibling_heap_node_point_const_iterator_	5/ext/pb_ds/detail/left_child_next_sibling_heap_/point_const_iterator.hpp	/^    class left_child_next_sibling_heap_node_point_const_iterator_$/;"	c	namespace:__gnu_pbds::detail
leftmost	5/ext/pb_ds/detail/splay_tree_/erase_fn_imps.hpp	/^leftmost(node_pointer p_nd)$/;"	f	class:PB_DS_CLASS_C_DEC
leftmost_descendant	5/ext/pb_ds/detail/pat_trie_/find_fn_imps.hpp	/^leftmost_descendant(node_const_pointer p_nd)$/;"	f	class:PB_DS_CLASS_C_DEC
leftmost_descendant	5/ext/pb_ds/detail/pat_trie_/find_fn_imps.hpp	/^leftmost_descendant(node_pointer p_nd)$/;"	f	class:PB_DS_CLASS_C_DEC
leftmost_descendant	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      leftmost_descendant(node_pointer p_nd)$/;"	f	class:__gnu_pbds::detail::pat_trie_base::_CIter
leftmost_descendant	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^    leftmost_descendant() const$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
leftmost_descendant	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^    leftmost_descendant()$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
leftmost_it	5/ext/pb_ds/detail/trie_policy/trie_policy_base.hpp	/^    leftmost_it(node_iterator nd_it)$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
len	opencv2/core/types_c.h	/^    int len;$/;"	m	struct:CvString
len_	opencv2/core/cvstd.hpp	/^    size_t len_;$/;"	m	class:cv::String
length	cpp_src/basic_string.h	/^      length() const$/;"	f	class:std::basic_string
length	cpp_src/char_traits.h	/^    length(const char_type* __p)$/;"	f	class:char_traits
length	cpp_src/codecvt.h	/^      length(state_type& __state, const extern_type* __from,$/;"	f	class:std::__codecvt_abstract_base
length	opencv2/core/cvstd.hpp	/^size_t String::length() const$/;"	f	class:cv::String
length	opencv2/cudalegacy/NCV.hpp	/^    size_t length() const {return this->_length;}$/;"	f	class:NCVVector
length	opencv2/flann/heap.h	/^    int length;$/;"	m	class:cvflann::Heap
less	5/ext/pb_ds/detail/trie_policy/trie_policy_base.hpp	/^    less(e_const_iterator b_l, e_const_iterator e_l,$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
less	cpp_src/stl_function.h	/^    struct less : public binary_function<_Tp, _Tp, bool>$/;"	s	namespace:std
less	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ less() {}$/;"	f	struct:cv::cuda::device::less
less	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ less(const less&) {}$/;"	f	struct:cv::cuda::device::less
less	opencv2/core/cuda/functional.hpp	/^    template <typename T> struct less : binary_function<T, T, bool>$/;"	s	namespace:cv::cuda::device
less	opencv2/cudev/functional/functional.hpp	/^template <typename T> struct less : binary_function<T, T, typename MakeVec<uchar, VecTraits<T>::cn>::type>$/;"	s	namespace:cv::cudev
less_equal	cpp_src/stl_function.h	/^    struct less_equal : public binary_function<_Tp, _Tp, bool>$/;"	s	namespace:std
less_equal	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ less_equal() {}$/;"	f	struct:cv::cuda::device::less_equal
less_equal	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ less_equal(const less_equal&) {}$/;"	f	struct:cv::cuda::device::less_equal
less_equal	opencv2/core/cuda/functional.hpp	/^    template <typename T> struct less_equal : binary_function<T, T, bool>$/;"	s	namespace:cv::cuda::device
less_equal	opencv2/cudev/functional/functional.hpp	/^template <typename T> struct less_equal : binary_function<T, T, typename MakeVec<uchar, VecTraits<T>::cn>::type>$/;"	s	namespace:cv::cudev
level	opencv2/core/core_c.h	/^    int level;$/;"	m	struct:CvTreeNodeIterator
level	opencv2/flann/hierarchical_clustering_index.h	/^        int level;$/;"	m	struct:cvflann::HierarchicalClusteringIndex::Node
level	opencv2/flann/kmeans_index.h	/^        int level;$/;"	m	struct:cvflann::KMeansIndex::KMeansNode
lexicographical_compare	cpp_src/stl_algobase.h	/^    lexicographical_compare(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	namespace:std
lexicographical_compare	cpp_src/stl_algobase.h	/^  lexicographical_compare(const char* __first1, const char* __last1,$/;"	f	namespace:std
lexicographical_compare	cpp_src/stl_algobase.h	/^  lexicographical_compare(const unsigned char* __first1,$/;"	f	namespace:std
line	opencv2/core.hpp	/^    int line; \/\/\/< line number in the source file where the error has occured$/;"	m	class:cv::Exception
line_type	opencv2/highgui.hpp	/^    int         line_type; \/\/!< PointSize$/;"	m	struct:cv::QtFont
line_type	opencv2/imgproc/imgproc_c.h	/^    int         line_type;    \/\/!< Qt: PointSize$/;"	m	struct:CvFont
linear	opencv2/core/affine.hpp	/^typename cv::Affine3<T>::Mat3 cv::Affine3<T>::linear() const$/;"	f	class:cv::Affine3
linear	opencv2/core/affine.hpp	/^void cv::Affine3<T>::linear(const Mat3& L)$/;"	f	class:cv::Affine3
linear_probe_fn	5/ext/pb_ds/hash_policy.hpp	/^  class linear_probe_fn$/;"	c	namespace:__gnu_pbds
link_with_next_sibling	5/ext/pb_ds/detail/rc_binomial_heap_/insert_fn_imps.hpp	/^link_with_next_sibling(node_pointer p_nd)$/;"	f	class:PB_DS_CLASS_C_DEC
list	cpp_src/stl_list.h	/^        list(_InputIterator __first, _InputIterator __last,$/;"	f	class:std::list
list	cpp_src/stl_list.h	/^      list(const allocator_type& __a = allocator_type())$/;"	f	class:std::list
list	cpp_src/stl_list.h	/^      list(const list& __x)$/;"	f	class:std::list
list	cpp_src/stl_list.h	/^      list(size_type __n, const value_type& __value = value_type(),$/;"	f	class:std::list
list	cpp_src/stl_list.h	/^    class list : protected _List_base<_Tp, _Alloc>$/;"	c	namespace:std
list_partition	5/parallel/list_partition.h	/^    list_partition(const _IIter __begin, const _IIter __end,$/;"	f	namespace:__gnu_parallel
list_update	5/ext/pb_ds/assoc_container.hpp	/^    list_update() { }$/;"	f	class:__gnu_pbds::list_update
list_update	5/ext/pb_ds/assoc_container.hpp	/^    list_update(It first, It last)$/;"	f	class:__gnu_pbds::list_update
list_update	5/ext/pb_ds/assoc_container.hpp	/^    list_update(const list_update& other)$/;"	f	class:__gnu_pbds::list_update
list_update	5/ext/pb_ds/assoc_container.hpp	/^  class list_update : public PB_DS_LU_BASE$/;"	c	namespace:__gnu_pbds
list_update_tag	5/ext/pb_ds/tag_and_trait.hpp	/^  struct list_update_tag : public associative_tag { };$/;"	s	namespace:__gnu_pbds
load	opencv2/core.hpp	/^    template<typename _Tp> static Ptr<_Tp> load(const String& filename, const String& objname=String())$/;"	f	class:cv::Algorithm
loadFromSmem	opencv2/core/cuda/detail/reduce.hpp	/^            static __device__ void loadFromSmem(const PointerTuple& smem, const ValTuple& val, unsigned int tid)$/;"	f	struct:cv::cuda::device::reduce_detail::For
loadFromSmem	opencv2/core/cuda/detail/reduce.hpp	/^            static __device__ void loadFromSmem(const PointerTuple&, const ValTuple&, unsigned int)$/;"	f	struct:cv::cuda::device::reduce_detail::For
loadFromSmem	opencv2/core/cuda/detail/reduce.hpp	/^        __device__ __forceinline__ void loadFromSmem(const thrust::tuple<P0, P1, P2, P3, P4, P5, P6, P7, P8, P9>& smem,$/;"	f	namespace:cv::cuda::device::reduce_detail
loadFromSmem	opencv2/core/cuda/detail/reduce.hpp	/^        __device__ __forceinline__ void loadFromSmem(volatile T* smem, T& val, unsigned int tid)$/;"	f	namespace:cv::cuda::device::reduce_detail
loadFromSmem	opencv2/core/cuda/detail/reduce_key_val.hpp	/^            static __device__ void loadFromSmem(const PointerTuple& smem, const ReferenceTuple& data, unsigned int tid)$/;"	f	struct:cv::cuda::device::reduce_key_val_detail::For
loadFromSmem	opencv2/core/cuda/detail/reduce_key_val.hpp	/^            static __device__ void loadFromSmem(const PointerTuple&, const ReferenceTuple&, unsigned int)$/;"	f	struct:cv::cuda::device::reduce_key_val_detail::For
loadFromSmem	opencv2/core/cuda/detail/reduce_key_val.hpp	/^        __device__ __forceinline__ void loadFromSmem(const thrust::tuple<VP0, VP1, VP2, VP3, VP4, VP5, VP6, VP7, VP8, VP9>& smem,$/;"	f	namespace:cv::cuda::device::reduce_key_val_detail
loadFromSmem	opencv2/core/cuda/detail/reduce_key_val.hpp	/^        __device__ __forceinline__ void loadFromSmem(volatile T* smem, T& data, unsigned int tid)$/;"	f	namespace:cv::cuda::device::reduce_key_val_detail
loadFromSmem	opencv2/cudev/block/detail/reduce.hpp	/^        __device__ __forceinline__ static void loadFromSmem(const PointerTuple&, const ValTuple&, uint)$/;"	f	struct:cv::cudev::block_reduce_detail::For
loadFromSmem	opencv2/cudev/block/detail/reduce.hpp	/^        __device__ static void loadFromSmem(const PointerTuple& smem, const ValTuple& val, uint tid)$/;"	f	struct:cv::cudev::block_reduce_detail::For
loadFromSmem	opencv2/cudev/block/detail/reduce.hpp	/^    __device__ __forceinline__ void loadFromSmem(const tuple<P0, P1, P2, P3, P4, P5, P6, P7, P8, P9>& smem,$/;"	f	namespace:cv::cudev::block_reduce_detail
loadFromSmem	opencv2/cudev/block/detail/reduce.hpp	/^    __device__ __forceinline__ void loadFromSmem(volatile T* smem, T& val, uint tid)$/;"	f	namespace:cv::cudev::block_reduce_detail
loadFromSmem	opencv2/cudev/block/detail/reduce_key_val.hpp	/^        __device__ static void loadFromSmem(const PointerTuple& smem, const ReferenceTuple& data, uint tid)$/;"	f	struct:cv::cudev::block_reduce_key_val_detail::For
loadFromSmem	opencv2/cudev/block/detail/reduce_key_val.hpp	/^        __device__ static void loadFromSmem(const PointerTuple&, const ReferenceTuple&, uint)$/;"	f	struct:cv::cudev::block_reduce_key_val_detail::For
loadFromSmem	opencv2/cudev/block/detail/reduce_key_val.hpp	/^    __device__ __forceinline__ void loadFromSmem(const tuple<VP0, VP1, VP2, VP3, VP4, VP5, VP6, VP7, VP8, VP9>& smem,$/;"	f	namespace:cv::cudev::block_reduce_key_val_detail
loadFromSmem	opencv2/cudev/block/detail/reduce_key_val.hpp	/^    __device__ __forceinline__ void loadFromSmem(volatile T* smem, T& data, uint tid)$/;"	f	namespace:cv::cudev::block_reduce_key_val_detail
loadFromString	opencv2/core.hpp	/^    template<typename _Tp> static Ptr<_Tp> loadFromString(const String& strModel, const String& objname=String())$/;"	f	class:cv::Algorithm
loadIndex	opencv2/flann/autotuned_index.h	/^    virtual void loadIndex(FILE* stream)$/;"	f	class:cvflann::AutotunedIndex
loadIndex	opencv2/flann/composite_index.h	/^    void loadIndex(FILE* stream)$/;"	f	class:cvflann::CompositeIndex
loadIndex	opencv2/flann/flann_base.hpp	/^    virtual void loadIndex(FILE* stream)$/;"	f	class:cvflann::Index
loadIndex	opencv2/flann/hierarchical_clustering_index.h	/^    void loadIndex(FILE* stream)$/;"	f	class:cvflann::HierarchicalClusteringIndex
loadIndex	opencv2/flann/kdtree_index.h	/^    void loadIndex(FILE* stream)$/;"	f	class:cvflann::KDTreeIndex
loadIndex	opencv2/flann/kdtree_single_index.h	/^    void loadIndex(FILE* stream)$/;"	f	class:cvflann::KDTreeSingleIndex
loadIndex	opencv2/flann/kmeans_index.h	/^    void loadIndex(FILE* stream)$/;"	f	class:cvflann::KMeansIndex
loadIndex	opencv2/flann/linear_index.h	/^    void loadIndex(FILE*)$/;"	f	class:cvflann::LinearIndex
loadIndex	opencv2/flann/lsh_index.h	/^    void loadIndex(FILE* stream)$/;"	f	class:cvflann::LshIndex
loadToSmem	opencv2/core/cuda/detail/reduce.hpp	/^            static __device__ void loadToSmem(const PointerTuple& smem, const ValTuple& val, unsigned int tid)$/;"	f	struct:cv::cuda::device::reduce_detail::For
loadToSmem	opencv2/core/cuda/detail/reduce.hpp	/^            static __device__ void loadToSmem(const PointerTuple&, const ValTuple&, unsigned int)$/;"	f	struct:cv::cuda::device::reduce_detail::For
loadToSmem	opencv2/core/cuda/detail/reduce.hpp	/^        __device__ __forceinline__ void loadToSmem(const thrust::tuple<P0, P1, P2, P3, P4, P5, P6, P7, P8, P9>& smem,$/;"	f	namespace:cv::cuda::device::reduce_detail
loadToSmem	opencv2/core/cuda/detail/reduce.hpp	/^        __device__ __forceinline__ void loadToSmem(volatile T* smem, T& val, unsigned int tid)$/;"	f	namespace:cv::cuda::device::reduce_detail
loadToSmem	opencv2/core/cuda/detail/reduce_key_val.hpp	/^            static __device__ void loadToSmem(const PointerTuple& smem, const ReferenceTuple& data, unsigned int tid)$/;"	f	struct:cv::cuda::device::reduce_key_val_detail::For
loadToSmem	opencv2/core/cuda/detail/reduce_key_val.hpp	/^            static __device__ void loadToSmem(const PointerTuple&, const ReferenceTuple&, unsigned int)$/;"	f	struct:cv::cuda::device::reduce_key_val_detail::For
loadToSmem	opencv2/core/cuda/detail/reduce_key_val.hpp	/^        __device__ __forceinline__ void loadToSmem(const thrust::tuple<VP0, VP1, VP2, VP3, VP4, VP5, VP6, VP7, VP8, VP9>& smem,$/;"	f	namespace:cv::cuda::device::reduce_key_val_detail
loadToSmem	opencv2/core/cuda/detail/reduce_key_val.hpp	/^        __device__ __forceinline__ void loadToSmem(volatile T* smem, T& data, unsigned int tid)$/;"	f	namespace:cv::cuda::device::reduce_key_val_detail
loadToSmem	opencv2/cudev/block/detail/reduce.hpp	/^        __device__ __forceinline__ static void loadToSmem(const PointerTuple&, const ValTuple&, uint)$/;"	f	struct:cv::cudev::block_reduce_detail::For
loadToSmem	opencv2/cudev/block/detail/reduce.hpp	/^        __device__ static void loadToSmem(const PointerTuple& smem, const ValTuple& val, uint tid)$/;"	f	struct:cv::cudev::block_reduce_detail::For
loadToSmem	opencv2/cudev/block/detail/reduce.hpp	/^    __device__ __forceinline__ void loadToSmem(const tuple<P0, P1, P2, P3, P4, P5, P6, P7, P8, P9>& smem,$/;"	f	namespace:cv::cudev::block_reduce_detail
loadToSmem	opencv2/cudev/block/detail/reduce.hpp	/^    __device__ __forceinline__ void loadToSmem(volatile T* smem, T& val, uint tid)$/;"	f	namespace:cv::cudev::block_reduce_detail
loadToSmem	opencv2/cudev/block/detail/reduce_key_val.hpp	/^        __device__ static void loadToSmem(const PointerTuple& smem, const ReferenceTuple& data, uint tid)$/;"	f	struct:cv::cudev::block_reduce_key_val_detail::For
loadToSmem	opencv2/cudev/block/detail/reduce_key_val.hpp	/^        __device__ static void loadToSmem(const PointerTuple&, const ReferenceTuple&, uint)$/;"	f	struct:cv::cudev::block_reduce_key_val_detail::For
loadToSmem	opencv2/cudev/block/detail/reduce_key_val.hpp	/^    __device__ __forceinline__ void loadToSmem(const tuple<VP0, VP1, VP2, VP3, VP4, VP5, VP6, VP7, VP8, VP9>& smem,$/;"	f	namespace:cv::cudev::block_reduce_key_val_detail
loadToSmem	opencv2/cudev/block/detail/reduce_key_val.hpp	/^    __device__ __forceinline__ void loadToSmem(volatile T* smem, T& data, uint tid)$/;"	f	namespace:cv::cudev::block_reduce_key_val_detail
loadToSmem	opencv2/cudev/warp/detail/reduce.hpp	/^        __device__ __forceinline__ static void loadToSmem(const PointerTuple&, const ValTuple&, uint)$/;"	f	struct:cv::cudev::warp_reduce_detail::For
loadToSmem	opencv2/cudev/warp/detail/reduce.hpp	/^        __device__ static void loadToSmem(const PointerTuple& smem, const ValTuple& val, uint tid)$/;"	f	struct:cv::cudev::warp_reduce_detail::For
loadToSmem	opencv2/cudev/warp/detail/reduce.hpp	/^    __device__ __forceinline__ void loadToSmem(const tuple<P0, P1, P2, P3, P4, P5, P6, P7, P8, P9>& smem,$/;"	f	namespace:cv::cudev::warp_reduce_detail
loadToSmem	opencv2/cudev/warp/detail/reduce.hpp	/^    __device__ __forceinline__ void loadToSmem(volatile T* smem, T& val, uint tid)$/;"	f	namespace:cv::cudev::warp_reduce_detail
loadToSmem	opencv2/cudev/warp/detail/reduce_key_val.hpp	/^        __device__ __forceinline__ static void loadToSmem(const PointerTuple&, const ReferenceTuple&, uint)$/;"	f	struct:cv::cudev::warp_reduce_key_val_detail::For
loadToSmem	opencv2/cudev/warp/detail/reduce_key_val.hpp	/^        __device__ static void loadToSmem(const PointerTuple& smem, const ReferenceTuple& data, uint tid)$/;"	f	struct:cv::cudev::warp_reduce_key_val_detail::For
loadToSmem	opencv2/cudev/warp/detail/reduce_key_val.hpp	/^    __device__ __forceinline__ void loadToSmem(const tuple<VP0, VP1, VP2, VP3, VP4, VP5, VP6, VP7, VP8, VP9>& smem,$/;"	f	namespace:cv::cudev::warp_reduce_key_val_detail
loadToSmem	opencv2/cudev/warp/detail/reduce_key_val.hpp	/^    __device__ __forceinline__ void loadToSmem(volatile T* smem, T& data, uint tid)$/;"	f	namespace:cv::cudev::warp_reduce_key_val_detail
load_from_file	opencv2/flann/hdf5.h	/^void load_from_file(cvflann::Matrix<T>& dataset, const String& filename, const String& name)$/;"	f	namespace:cvflann
load_from_file	opencv2/flann/hdf5.h	/^void load_from_file(cvflann::Matrix<T>& dataset, const String& filename, const String& name)$/;"	f	namespace:cvflann::mpi
load_header	opencv2/flann/saving.h	/^inline IndexHeader load_header(FILE* stream)$/;"	f	namespace:cvflann
load_saved_index	opencv2/flann/flann_base.hpp	/^NNIndex<Distance>* load_saved_index(const Matrix<typename Distance::ElementType>& dataset, const cv::String& filename, Distance distance)$/;"	f	namespace:cvflann
load_tree	opencv2/flann/hierarchical_clustering_index.h	/^    void load_tree(FILE* stream, NodePtr& node, int num)$/;"	f	class:cvflann::HierarchicalClusteringIndex
load_tree	opencv2/flann/kdtree_index.h	/^    void load_tree(FILE* stream, NodePtr& tree)$/;"	f	class:cvflann::KDTreeIndex
load_tree	opencv2/flann/kdtree_single_index.h	/^    void load_tree(FILE* stream, NodePtr& tree)$/;"	f	class:cvflann::KDTreeSingleIndex
load_tree	opencv2/flann/kmeans_index.h	/^    void load_tree(FILE* stream, KMeansNodePtr& node)$/;"	f	class:cvflann::KMeansIndex
load_value	opencv2/flann/saving.h	/^void load_value(FILE* stream, T& value, size_t count = 1)$/;"	f	namespace:cvflann
load_value	opencv2/flann/saving.h	/^void load_value(FILE* stream, cvflann::Matrix<T>& value)$/;"	f	namespace:cvflann
load_value	opencv2/flann/saving.h	/^void load_value(FILE* stream, std::vector<T>& value)$/;"	f	namespace:cvflann
loaded_	opencv2/flann/flann_base.hpp	/^    bool loaded_;$/;"	m	class:cvflann::Index
loaded_from	opencv2/core/types_c.h	/^    int loaded_from;$/;"	m	struct:CvPluginFuncInfo
loc	opencv2/flann/allocator.h	/^    void*   loc;      \/* Current location in block to next allocate memory. *\/$/;"	m	class:cvflann::PooledAllocator
locale	cpp_src/locale_classes.h	/^    locale::locale(const locale& __other, _Facet* __f)$/;"	f	class:std::locale
locale	cpp_src/locale_classes.h	/^  class locale$/;"	c	namespace:std
location	opencv2/objdetect/detection_based_tracker.hpp	/^            cv::Rect location;$/;"	m	struct:cv::DetectionBasedTracker::ExtObject
locations	opencv2/objdetect.hpp	/^   std::vector<cv::Point> locations;$/;"	m	struct:cv::DetectionROI
log	opencv2/flann/logger.h	/^    static int log(int level, const char* fmt, ...)$/;"	f	class:cvflann::Logger
log	opencv2/videostab/stabilizer.hpp	/^    Ptr<ILog> log() const { return log_; }$/;"	f	class:cv::videostab::StabilizerBase
logLevel	opencv2/flann/logger.h	/^    int logLevel;$/;"	m	class:cvflann::Logger
logStep	opencv2/ml.hpp	/^    double logStep;$/;"	m	class:cv::ml::ParamGrid
log_	opencv2/videostab/stabilizer.hpp	/^    Ptr<ILog> log_;$/;"	m	class:cv::videostab::StabilizerBase
log_verbosity	opencv2/flann/flann_base.hpp	/^inline void log_verbosity(int level)$/;"	f	namespace:cvflann
logical_and	cpp_src/stl_function.h	/^    struct logical_and : public binary_function<_Tp, _Tp, bool>$/;"	s	namespace:std
logical_and	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ logical_and() {}$/;"	f	struct:cv::cuda::device::logical_and
logical_and	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ logical_and(const logical_and&) {}$/;"	f	struct:cv::cuda::device::logical_and
logical_and	opencv2/core/cuda/functional.hpp	/^    template <typename T> struct logical_and : binary_function<T, T, bool>$/;"	s	namespace:cv::cuda::device
logical_and	opencv2/cudev/functional/functional.hpp	/^template <typename T> struct logical_and : binary_function<T, T, typename MakeVec<uchar, VecTraits<T>::cn>::type>$/;"	s	namespace:cv::cudev
logical_not	cpp_src/stl_function.h	/^    struct logical_not : public unary_function<_Tp, bool>$/;"	s	namespace:std
logical_not	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ logical_not() {}$/;"	f	struct:cv::cuda::device::logical_not
logical_not	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ logical_not(const logical_not&) {}$/;"	f	struct:cv::cuda::device::logical_not
logical_not	opencv2/core/cuda/functional.hpp	/^    template <typename T> struct logical_not : unary_function<T, bool>$/;"	s	namespace:cv::cuda::device
logical_not	opencv2/cudev/functional/functional.hpp	/^template <typename T> struct logical_not : unary_function<T, typename MakeVec<uchar, VecTraits<T>::cn>::type>$/;"	s	namespace:cv::cudev
logical_or	cpp_src/stl_function.h	/^    struct logical_or : public binary_function<_Tp, _Tp, bool>$/;"	s	namespace:std
logical_or	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ logical_or() {}$/;"	f	struct:cv::cuda::device::logical_or
logical_or	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ logical_or(const logical_or&) {}$/;"	f	struct:cv::cuda::device::logical_or
logical_or	opencv2/core/cuda/functional.hpp	/^    template <typename T> struct logical_or : binary_function<T, T, bool>$/;"	s	namespace:cv::cuda::device
logical_or	opencv2/cudev/functional/functional.hpp	/^template <typename T> struct logical_or : binary_function<T, T, typename MakeVec<uchar, VecTraits<T>::cn>::type>$/;"	s	namespace:cv::cudev
loop	opencv2/core/cuda/detail/reduce.hpp	/^            static __device__ void loop(Pointer smem, Reference val, unsigned int tid, Op op)$/;"	f	struct:cv::cuda::device::reduce_detail::Unroll
loop	opencv2/core/cuda/detail/reduce.hpp	/^            static __device__ void loop(Pointer, Reference, unsigned int, Op)$/;"	f	struct:cv::cuda::device::reduce_detail::Unroll
loop	opencv2/core/cuda/detail/reduce_key_val.hpp	/^            static __device__ void loop(KP skeys, KR key, VP svals, VR val, unsigned int tid, Cmp cmp)$/;"	f	struct:cv::cuda::device::reduce_key_val_detail::Unroll
loop	opencv2/core/cuda/detail/reduce_key_val.hpp	/^            static __device__ void loop(KP, KR, VP, VR, unsigned int, Cmp)$/;"	f	struct:cv::cuda::device::reduce_key_val_detail::Unroll
loop	opencv2/cudev/block/detail/reduce.hpp	/^        __device__ __forceinline__ static void loop(Pointer, Reference, uint, Op)$/;"	f	struct:cv::cudev::block_reduce_detail::Unroll
loop	opencv2/cudev/block/detail/reduce.hpp	/^        __device__ static void loop(Pointer smem, Reference val, uint tid, Op op)$/;"	f	struct:cv::cudev::block_reduce_detail::Unroll
loop	opencv2/cudev/block/detail/reduce_key_val.hpp	/^        __device__ __forceinline__ static void loop(KP, KR, VP, VR, uint, Cmp)$/;"	f	struct:cv::cudev::block_reduce_key_val_detail::Unroll
loop	opencv2/cudev/block/detail/reduce_key_val.hpp	/^        __device__ static void loop(KP skeys, KR key, VP svals, VR val, uint tid, Cmp cmp)$/;"	f	struct:cv::cudev::block_reduce_key_val_detail::Unroll
loopShfl	opencv2/core/cuda/detail/reduce.hpp	/^            static __device__ void loopShfl(Reference val, Op op, unsigned int N)$/;"	f	struct:cv::cuda::device::reduce_detail::Unroll
loopShfl	opencv2/core/cuda/detail/reduce.hpp	/^            static __device__ void loopShfl(Reference, Op, unsigned int)$/;"	f	struct:cv::cuda::device::reduce_detail::Unroll
loopShfl	opencv2/core/cuda/detail/reduce_key_val.hpp	/^            static __device__ void loopShfl(KR key, VR val, Cmp cmp, unsigned int N)$/;"	f	struct:cv::cuda::device::reduce_key_val_detail::Unroll
loopShfl	opencv2/core/cuda/detail/reduce_key_val.hpp	/^            static __device__ void loopShfl(KR, VR, Cmp, unsigned int)$/;"	f	struct:cv::cuda::device::reduce_key_val_detail::Unroll
loopShfl	opencv2/cudev/block/detail/reduce.hpp	/^        __device__ __forceinline__ static void loopShfl(Reference, Op, uint)$/;"	f	struct:cv::cudev::block_reduce_detail::Unroll
loopShfl	opencv2/cudev/block/detail/reduce.hpp	/^        __device__ static void loopShfl(Reference val, Op op, uint N)$/;"	f	struct:cv::cudev::block_reduce_detail::Unroll
low	opencv2/flann/kdtree_single_index.h	/^        DistanceType low, high;$/;"	m	struct:cvflann::KDTreeSingleIndex::Interval
lower_bound	5/ext/pb_ds/detail/bin_search_tree_/find_fn_imps.hpp	/^lower_bound(key_const_reference r_key) const$/;"	f	class:PB_DS_CLASS_C_DEC
lower_bound	5/ext/pb_ds/detail/bin_search_tree_/find_fn_imps.hpp	/^lower_bound(key_const_reference r_key)$/;"	f	class:PB_DS_CLASS_C_DEC
lower_bound	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      lower_bound(key_const_reference r_key) const$/;"	f	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
lower_bound	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      lower_bound(key_const_reference r_key)$/;"	f	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
lower_bound	5/ext/pb_ds/detail/pat_trie_/find_fn_imps.hpp	/^lower_bound(key_const_reference r_key) const$/;"	f	class:PB_DS_CLASS_C_DEC
lower_bound	5/ext/pb_ds/detail/pat_trie_/find_fn_imps.hpp	/^lower_bound(key_const_reference r_key)$/;"	f	class:PB_DS_CLASS_C_DEC
lower_bound	cpp_src/stl_algo.h	/^    lower_bound(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std
lower_bound	cpp_src/stl_map.h	/^      lower_bound(const key_type& __x) const$/;"	f	class:std::map
lower_bound	cpp_src/stl_map.h	/^      lower_bound(const key_type& __x)$/;"	f	class:std::map
lower_bound	cpp_src/stl_multimap.h	/^      lower_bound(const key_type& __x) const$/;"	f	class:std::multimap
lower_bound	cpp_src/stl_multimap.h	/^      lower_bound(const key_type& __x)$/;"	f	class:std::multimap
lower_bound	cpp_src/stl_multiset.h	/^      lower_bound(const key_type& __x) const$/;"	f	class:std::multiset
lower_bound	cpp_src/stl_multiset.h	/^      lower_bound(const key_type& __x)$/;"	f	class:std::multiset
lower_bound	cpp_src/stl_set.h	/^      lower_bound(const key_type& __x) const$/;"	f	class:std::set
lower_bound	cpp_src/stl_set.h	/^      lower_bound(const key_type& __x)$/;"	f	class:std::set
lower_bound	cpp_src/stl_tree.h	/^    lower_bound(const _Key& __k) const$/;"	f	class:std::_Rb_tree
lower_bound	cpp_src/stl_tree.h	/^    lower_bound(const _Key& __k)$/;"	f	class:std::_Rb_tree
lower_bound_imp	5/ext/pb_ds/detail/pat_trie_/find_fn_imps.hpp	/^lower_bound_imp(key_const_reference r_key)$/;"	f	class:PB_DS_CLASS_C_DEC
lsh	opencv2/flann/lsh_table.h	/^namespace lsh$/;"	n	namespace:cvflann
lt	cpp_src/char_traits.h	/^      lt(const char_type& __c1, const char_type& __c2)$/;"	f	struct:char_traits
lu_counter_metadata	5/ext/pb_ds/detail/list_update_policy/lu_counter_metadata.hpp	/^	lu_counter_metadata(size_type init_count) : m_count(init_count)$/;"	f	class:__gnu_pbds::detail::lu_counter_metadata
lu_counter_metadata	5/ext/pb_ds/detail/list_update_policy/lu_counter_metadata.hpp	/^      class lu_counter_metadata$/;"	c	namespace:__gnu_pbds::detail
lu_counter_policy	5/ext/pb_ds/list_update_policy.hpp	/^    class lu_counter_policy$/;"	c	namespace:__gnu_pbds
lu_counter_policy_base	5/ext/pb_ds/detail/list_update_policy/lu_counter_metadata.hpp	/^      class lu_counter_policy_base$/;"	c	namespace:__gnu_pbds::detail
lu_map_entry_metadata_base	5/ext/pb_ds/detail/list_update_map_/entry_metadata_base.hpp	/^    struct lu_map_entry_metadata_base$/;"	s	namespace:__gnu_pbds::detail
lu_map_entry_metadata_base	5/ext/pb_ds/detail/list_update_map_/entry_metadata_base.hpp	/^    struct lu_map_entry_metadata_base<null_type>$/;"	s	namespace:__gnu_pbds::detail
lu_move_to_front_policy	5/ext/pb_ds/list_update_policy.hpp	/^   class lu_move_to_front_policy$/;"	c	namespace:__gnu_pbds
lutPtr	opencv2/cudev/ptr2d/lut.hpp	/^__host__ LutPtrSz<typename PtrTraits<SrcPtr>::ptr_type, typename PtrTraits<TablePtr>::ptr_type> lutPtr(const SrcPtr& src, const TablePtr& tbl)$/;"	f	namespace:cv::cudev
lut_	opencv2/cudev/expr/per_element_func.hpp	/^lut_(const SrcPtr& src, const TablePtr& tbl)$/;"	f	namespace:cv::cudev
m	opencv2/core/mat.hpp	/^    const Mat* m;$/;"	m	class:cv::MatConstIterator
m	opencv2/core/mat.hpp	/^    const SparseMat* m;$/;"	m	class:cv::SparseMatConstIterator
m	opencv2/core/ocl.hpp	/^    UMat* m;$/;"	m	class:cv::ocl::KernelArg
m00	opencv2/core/types.hpp	/^    CV_PROP_RW double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03;$/;"	m	class:cv::Moments
m00	opencv2/imgproc/types_c.h	/^    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; \/**< spatial moments *\/$/;"	m	struct:CvMoments
m01	opencv2/core/types.hpp	/^    CV_PROP_RW double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03;$/;"	m	class:cv::Moments
m01	opencv2/imgproc/types_c.h	/^    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; \/**< spatial moments *\/$/;"	m	struct:CvMoments
m02	opencv2/core/types.hpp	/^    CV_PROP_RW double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03;$/;"	m	class:cv::Moments
m02	opencv2/imgproc/types_c.h	/^    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; \/**< spatial moments *\/$/;"	m	struct:CvMoments
m03	opencv2/core/types.hpp	/^    CV_PROP_RW double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03;$/;"	m	class:cv::Moments
m03	opencv2/imgproc/types_c.h	/^    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; \/**< spatial moments *\/$/;"	m	struct:CvMoments
m10	opencv2/core/types.hpp	/^    CV_PROP_RW double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03;$/;"	m	class:cv::Moments
m10	opencv2/imgproc/types_c.h	/^    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; \/**< spatial moments *\/$/;"	m	struct:CvMoments
m11	opencv2/core/types.hpp	/^    CV_PROP_RW double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03;$/;"	m	class:cv::Moments
m11	opencv2/imgproc/types_c.h	/^    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; \/**< spatial moments *\/$/;"	m	struct:CvMoments
m12	opencv2/core/types.hpp	/^    CV_PROP_RW double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03;$/;"	m	class:cv::Moments
m12	opencv2/imgproc/types_c.h	/^    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; \/**< spatial moments *\/$/;"	m	struct:CvMoments
m20	opencv2/core/types.hpp	/^    CV_PROP_RW double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03;$/;"	m	class:cv::Moments
m20	opencv2/imgproc/types_c.h	/^    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; \/**< spatial moments *\/$/;"	m	struct:CvMoments
m21	opencv2/core/types.hpp	/^    CV_PROP_RW double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03;$/;"	m	class:cv::Moments
m21	opencv2/imgproc/types_c.h	/^    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; \/**< spatial moments *\/$/;"	m	struct:CvMoments
m30	opencv2/core/types.hpp	/^    CV_PROP_RW double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03;$/;"	m	class:cv::Moments
m30	opencv2/imgproc/types_c.h	/^    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; \/**< spatial moments *\/$/;"	m	struct:CvMoments
m_a_aux	5/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp	/^      node_pointer 	m_a_aux[max_rank];$/;"	m	class:__gnu_pbds::detail::thin_heap
m_a_entries	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	/^      entry_pointer 		m_a_entries;$/;"	m	class:__gnu_pbds::detail::binary_heap
m_a_entries	5/ext/pb_ds/detail/rc_binomial_heap_/rc.hpp	/^      node_pointer 	m_a_entries[max_entries];$/;"	m	class:__gnu_pbds::detail::rc
m_a_metadata	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      metadata_pointer 		m_a_metadata;$/;"	m	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
m_a_p_children	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      node_pointer 			m_a_p_children[arr_size];$/;"	m	struct:__gnu_pbds::detail::pat_trie_base::_Inode
m_a_values	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      value_vector 		m_a_values;$/;"	m	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
m_a_vec	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^	  value_vector 		m_a_vec;$/;"	m	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME::cond_dtor
m_actual_size	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	/^      size_type 		m_actual_size;$/;"	m	class:__gnu_pbds::detail::binary_heap
m_alwaysExpand	opencv2/core/utility.hpp	/^    bool                m_alwaysExpand;$/;"	m	class:cv::instr::NodeData
m_bag	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^	bag_type 						m_bag;$/;"	m	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME::branch_bag
m_call_destructor	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^	bool 			m_call_destructor;$/;"	m	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME::cond_dealtor
m_childs	opencv2/core/utility.hpp	/^    std::vector<Node<OBJECT>*> m_childs;$/;"	m	class:cv::Node
m_count	5/ext/pb_ds/detail/list_update_policy/lu_counter_metadata.hpp	/^	mutable size_type 	m_count;$/;"	m	class:__gnu_pbds::detail::lu_counter_metadata
m_counter	opencv2/core/utility.hpp	/^    volatile int         m_counter;$/;"	m	class:cv::instr::NodeData
m_disabled	opencv2/core/private.hpp	/^    bool    m_disabled; \/\/ region status$/;"	m	class:cv::instr::IntrumentationRegion
m_e_ind	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      const size_type 			m_e_ind;$/;"	m	struct:__gnu_pbds::detail::pat_trie_base::_Inode
m_end_it	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      iterator 			m_end_it;$/;"	m	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
m_entries	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      entry_pointer_array 		m_entries;$/;"	m	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
m_entries	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      entry_pointer 		m_entries;$/;"	m	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
m_eq	5/ext/pb_ds/detail/debug_map_base.hpp	/^      Eq_Fn 		m_eq;$/;"	m	class:__gnu_pbds::detail::debug_map_base
m_fileName	opencv2/core/utility.hpp	/^    const char*         m_fileName;$/;"	m	class:cv::instr::NodeData
m_funError	opencv2/core/utility.hpp	/^    bool                m_funError;$/;"	m	class:cv::instr::NodeData
m_funName	opencv2/core/utility.hpp	/^    cv::String          m_funName;$/;"	m	class:cv::instr::NodeData
m_grow_factor	5/ext/pb_ds/hash_policy.hpp	/^    size_type m_grow_factor;$/;"	m	class:__gnu_pbds::hash_exponential_size_policy
m_grow_size	5/ext/pb_ds/detail/binary_heap_/resize_policy.hpp	/^      _Tp 		m_grow_size;$/;"	m	class:__gnu_pbds::detail::resize_policy
m_hash	5/ext/pb_ds/detail/types_traits.hpp	/^	hash_type 	m_hash;$/;"	m	struct:__gnu_pbds::detail::stored_hash
m_implType	opencv2/core/utility.hpp	/^    cv::instr::IMPL     m_implType;$/;"	m	class:cv::instr::NodeData
m_instrType	opencv2/core/utility.hpp	/^    cv::instr::TYPE     m_instrType;$/;"	m	class:cv::instr::NodeData
m_key_destruct	5/ext/pb_ds/detail/cc_hash_table_map_/cond_key_dtor_entry_dealtor.hpp	/^      bool 					m_key_destruct;$/;"	m	class:__gnu_pbds::detail::cond_dealtor
m_keys	5/ext/pb_ds/detail/debug_map_base.hpp	/^      key_repository 	m_keys;$/;"	m	class:__gnu_pbds::detail::debug_map_base
m_lineNum	opencv2/core/utility.hpp	/^    int                 m_lineNum;$/;"	m	class:cv::instr::NodeData
m_load	5/ext/pb_ds/hash_policy.hpp	/^    float 	m_load;$/;"	m	class:__gnu_pbds::cc_hash_max_collision_check_resize_trigger
m_load_max	5/ext/pb_ds/hash_policy.hpp	/^    float 	m_load_max;$/;"	m	class:__gnu_pbds::hash_load_check_resize_trigger
m_load_min	5/ext/pb_ds/hash_policy.hpp	/^    float 	m_load_min;$/;"	m	class:__gnu_pbds::hash_load_check_resize_trigger
m_mask	5/ext/pb_ds/detail/hash_fn/mask_based_range_hashing.hpp	/^      size_type 		m_mask;$/;"	m	class:__gnu_pbds::detail::mask_based_range_hashing
m_max_col	5/ext/pb_ds/hash_policy.hpp	/^    size_type 	m_max_col;$/;"	m	class:__gnu_pbds::cc_hash_max_collision_check_resize_trigger
m_max_size	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^	  const Size_Type 	m_max_size;$/;"	m	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME::cond_dtor
m_metadata	5/ext/pb_ds/detail/left_child_next_sibling_heap_/node.hpp	/^      metadata_type 	m_metadata;$/;"	m	struct:__gnu_pbds::detail::left_child_next_sibling_heap_node_
m_metadata	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	  metadata_type 					m_metadata;$/;"	m	struct:__gnu_pbds::detail::pat_trie_base::_Metadata
m_metadata	5/ext/pb_ds/detail/rb_tree_map_/node.hpp	/^      metadata_type 	m_metadata;$/;"	m	struct:__gnu_pbds::detail::rb_tree_node_
m_metadata	5/ext/pb_ds/detail/splay_tree_/node.hpp	/^      metadata_type m_metadata;$/;"	m	struct:__gnu_pbds::detail::splay_tree_node_
m_next_grow_size	5/ext/pb_ds/hash_policy.hpp	/^    size_type 	m_next_grow_size;$/;"	m	class:__gnu_pbds::hash_load_check_resize_trigger
m_next_shrink_size	5/ext/pb_ds/hash_policy.hpp	/^    size_type 	m_next_shrink_size;$/;"	m	class:__gnu_pbds::hash_load_check_resize_trigger
m_no_action	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^	  bool 			m_no_action;$/;"	m	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME::cond_dtor
m_no_action_destructor	5/ext/pb_ds/detail/cc_hash_table_map_/cond_key_dtor_entry_dealtor.hpp	/^      bool 					m_no_action_destructor;$/;"	m	class:__gnu_pbds::detail::cond_dealtor
m_no_action_destructor	5/ext/pb_ds/detail/cond_dealtor.hpp	/^	bool 			m_no_action_destructor;$/;"	m	class:__gnu_pbds::detail::cond_dealtor
m_no_action_dtor	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^	bool 			m_no_action_dtor;$/;"	m	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME::cond_dealtor
m_no_throw_copies_indicator	5/ext/pb_ds/detail/types_traits.hpp	/^	no_throw_indicator 		 	m_no_throw_copies_indicator;$/;"	m	struct:__gnu_pbds::detail::types_traits
m_num_col	5/ext/pb_ds/hash_policy.hpp	/^    size_type 	m_num_col;$/;"	m	class:__gnu_pbds::cc_hash_max_collision_check_resize_trigger
m_num_e	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      size_type 			m_num_e;$/;"	m	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
m_num_e	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      size_type 		m_num_e;$/;"	m	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
m_num_used_e	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      size_type 			m_num_used_e;$/;"	m	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
m_num_used_e	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      size_type 		m_num_used_e;$/;"	m	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
m_over_top	5/ext/pb_ds/detail/rc_binomial_heap_/rc.hpp	/^      size_type 	m_over_top;$/;"	m	class:__gnu_pbds::detail::rc
m_pBuffer	opencv2/core/private.hpp	/^    T* m_pBuffer;$/;"	m	class:IppAutoBuffer
m_pParent	opencv2/core/utility.hpp	/^    Node<OBJECT>*              m_pParent;$/;"	m	class:cv::Node
m_p_a	5/ext/pb_ds/detail/cc_hash_table_map_/cond_key_dtor_entry_dealtor.hpp	/^      entry_allocator* const 			m_p_a;$/;"	m	class:__gnu_pbds::detail::cond_dealtor
m_p_begin_value	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	/^      pointer m_p_begin_value;$/;"	m	class:__gnu_pbds::detail::ov_tree_node_const_it_
m_p_e	5/ext/pb_ds/detail/binary_heap_/point_const_iterator.hpp	/^      entry_pointer m_p_e;$/;"	m	class:__gnu_pbds::detail::binary_heap_point_const_iterator_
m_p_e	5/ext/pb_ds/detail/cc_hash_table_map_/cond_key_dtor_entry_dealtor.hpp	/^      entry* const 				m_p_e;$/;"	m	class:__gnu_pbds::detail::cond_dealtor
m_p_e	5/ext/pb_ds/detail/cond_dealtor.hpp	/^	entry_pointer 		m_p_e;$/;"	m	class:__gnu_pbds::detail::cond_dealtor
m_p_end_value	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	/^      pointer m_p_end_value;$/;"	m	class:__gnu_pbds::detail::ov_tree_node_const_it_
m_p_head	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	/^      node_pointer 		m_p_head;$/;"	m	class:__gnu_pbds::detail::PB_DS_BIN_TREE_NAME
m_p_head	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      head_pointer 			m_p_head;$/;"	m	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
m_p_l	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      mutable entry_pointer 			m_p_l;$/;"	m	class:__gnu_pbds::detail::PB_DS_LU_NAME
m_p_l_child	5/ext/pb_ds/detail/left_child_next_sibling_heap_/node.hpp	/^      node_pointer 	m_p_l_child;$/;"	m	struct:__gnu_pbds::detail::left_child_next_sibling_heap_node_
m_p_left	5/ext/pb_ds/detail/rb_tree_map_/node.hpp	/^      node_pointer 	m_p_left;$/;"	m	struct:__gnu_pbds::detail::rb_tree_node_
m_p_left	5/ext/pb_ds/detail/splay_tree_/node.hpp	/^      node_pointer m_p_left;$/;"	m	struct:__gnu_pbds::detail::splay_tree_node_
m_p_max	5/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp	/^      node_pointer 	m_p_max;$/;"	m	class:__gnu_pbds::detail::binomial_heap_base
m_p_max	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      node_pointer						m_p_max;$/;"	m	struct:__gnu_pbds::detail::pat_trie_base::_Head
m_p_max	5/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp	/^      node_pointer 	m_p_max;$/;"	m	class:__gnu_pbds::detail::thin_heap
m_p_metadata	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	/^      const_metadata_pointer m_p_metadata;$/;"	m	class:__gnu_pbds::detail::ov_tree_node_const_it_
m_p_min	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      node_pointer						m_p_min;$/;"	m	struct:__gnu_pbds::detail::pat_trie_base::_Head
m_p_nd	5/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp	/^      node_pointer m_p_nd;$/;"	m	class:__gnu_pbds::detail::bin_search_tree_const_node_it_
m_p_nd	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	/^      Node_Pointer m_p_nd;$/;"	m	class:__gnu_pbds::detail::bin_search_tree_const_it_
m_p_nd	5/ext/pb_ds/detail/left_child_next_sibling_heap_/point_const_iterator.hpp	/^      node_pointer m_p_nd;$/;"	m	class:__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_
m_p_nd	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^	leaf_pointer 		m_p_nd;$/;"	m	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME::cond_dealtor
m_p_nd	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      node_pointer 					m_p_nd;$/;"	m	class:__gnu_pbds::detail::pat_trie_base::_CIter
m_p_nd	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      node_pointer 			m_p_nd;$/;"	m	class:__gnu_pbds::detail::pat_trie_base::_Node_citer
m_p_next	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^	typename _Alloc::template rebind<entry>::other::pointer m_p_next;$/;"	m	struct:__gnu_pbds::detail::PB_DS_CC_HASH_NAME::entry
m_p_next	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^	typename _Alloc::template rebind<entry>::other::pointer m_p_next;$/;"	m	struct:__gnu_pbds::detail::PB_DS_LU_NAME::entry
m_p_next_sibling	5/ext/pb_ds/detail/left_child_next_sibling_heap_/node.hpp	/^      node_pointer 	m_p_next_sibling;$/;"	m	struct:__gnu_pbds::detail::left_child_next_sibling_heap_node_
m_p_p_cur	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	node_pointer_pointer 				m_p_p_cur;$/;"	m	struct:__gnu_pbds::detail::pat_trie_base::_Inode::const_iterator
m_p_p_end	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	node_pointer_pointer 				m_p_p_end;$/;"	m	struct:__gnu_pbds::detail::pat_trie_base::_Inode::const_iterator
m_p_parent	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	node_pointer 						m_p_parent;$/;"	m	struct:__gnu_pbds::detail::pat_trie_base::_Node_base
m_p_parent	5/ext/pb_ds/detail/rb_tree_map_/node.hpp	/^      node_pointer 	m_p_parent;$/;"	m	struct:__gnu_pbds::detail::rb_tree_node_
m_p_parent	5/ext/pb_ds/detail/splay_tree_/node.hpp	/^      node_pointer m_p_parent;$/;"	m	struct:__gnu_pbds::detail::splay_tree_node_
m_p_prev_or_parent	5/ext/pb_ds/detail/left_child_next_sibling_heap_/node.hpp	/^      node_pointer 	m_p_prev_or_parent;$/;"	m	struct:__gnu_pbds::detail::left_child_next_sibling_heap_node_
m_p_right	5/ext/pb_ds/detail/rb_tree_map_/node.hpp	/^      node_pointer 	m_p_right;$/;"	m	struct:__gnu_pbds::detail::rb_tree_node_
m_p_right	5/ext/pb_ds/detail/splay_tree_/node.hpp	/^      node_pointer m_p_right;$/;"	m	struct:__gnu_pbds::detail::splay_tree_node_
m_p_root	5/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp	/^      node_pointer 		m_p_root;$/;"	m	class:__gnu_pbds::detail::left_child_next_sibling_heap
m_p_tbl	5/ext/pb_ds/detail/unordered_iterator/const_iterator.hpp	/^  const PB_DS_CLASS_C_DEC* m_p_tbl;$/;"	m	class:const_iterator_
m_p_traits	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      a_const_pointer 			m_p_traits;$/;"	m	class:__gnu_pbds::detail::pat_trie_base::_Node_citer
m_p_value	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	/^      pointer m_p_value;$/;"	m	class:__gnu_pbds::detail::ov_tree_node_const_it_
m_p_value	5/ext/pb_ds/detail/unordered_iterator/point_const_iterator.hpp	/^  const_pointer m_p_value;$/;"	m	class:point_const_iterator_
m_p_value	5/ext/pb_ds/detail/unordered_iterator/point_iterator.hpp	/^  pointer m_p_value;$/;"	m	class:point_iterator_
m_payload	opencv2/core/utility.hpp	/^    OBJECT                     m_payload;$/;"	m	class:cv::Node
m_pos	5/ext/pb_ds/detail/unordered_iterator/const_iterator.hpp	/^  PB_DS_GEN_POS m_pos;$/;"	m	class:const_iterator_
m_pref_b_it	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      a_const_iterator 			m_pref_b_it;$/;"	m	struct:__gnu_pbds::detail::pat_trie_base::_Inode
m_pref_e_it	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      a_const_iterator 			m_pref_e_it;$/;"	m	struct:__gnu_pbds::detail::pat_trie_base::_Inode
m_r_last_it	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^	  iterator& 		m_r_last_it;$/;"	m	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME::cond_dtor
m_rc	5/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp	/^      rc_t 			m_rc;$/;"	m	class:__gnu_pbds::detail::rc_binomial_heap
m_red	5/ext/pb_ds/detail/rb_tree_map_/node.hpp	/^      bool 		m_red;$/;"	m	struct:__gnu_pbds::detail::rb_tree_node_
m_regionTicks	opencv2/core/private.hpp	/^    uint64  m_regionTicks;$/;"	m	class:cv::instr::IntrumentationRegion
m_resize_needed	5/ext/pb_ds/hash_policy.hpp	/^    bool 	m_resize_needed;$/;"	m	class:__gnu_pbds::cc_hash_max_collision_check_resize_trigger
m_resize_needed	5/ext/pb_ds/hash_policy.hpp	/^    bool 	m_resize_needed;$/;"	m	class:__gnu_pbds::hash_load_check_resize_trigger
m_retAddress	opencv2/core/utility.hpp	/^    void*               m_retAddress;$/;"	m	class:cv::instr::NodeData
m_shrink_size	5/ext/pb_ds/detail/binary_heap_/resize_policy.hpp	/^      _Tp 		m_shrink_size;$/;"	m	class:__gnu_pbds::detail::resize_policy
m_size	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	/^      size_type 		m_size;$/;"	m	class:__gnu_pbds::detail::PB_DS_BIN_TREE_NAME
m_size	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	/^      size_type 		m_size;$/;"	m	class:__gnu_pbds::detail::binary_heap
m_size	5/ext/pb_ds/detail/hash_fn/mod_based_range_hashing.hpp	/^      size_type m_size;$/;"	m	class:__gnu_pbds::detail::mod_based_range_hashing
m_size	5/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp	/^      size_type 		m_size;$/;"	m	class:__gnu_pbds::detail::left_child_next_sibling_heap
m_size	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      size_type 		m_size;$/;"	m	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
m_size	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      size_type 			m_size;$/;"	m	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
m_size	5/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_size_base.hpp	/^      size_type m_size;$/;"	m	class:__gnu_pbds::detail::hash_load_check_resize_trigger_size_base
m_size	5/ext/pb_ds/hash_policy.hpp	/^    size_type 	m_size;$/;"	m	class:__gnu_pbds::cc_hash_max_collision_check_resize_trigger
m_size	5/ext/pb_ds/hash_policy.hpp	/^    size_type m_size;$/;"	m	class:__gnu_pbds::hash_standard_resize_policy
m_special	5/ext/pb_ds/detail/splay_tree_/node.hpp	/^      bool m_special;$/;"	m	struct:__gnu_pbds::detail::splay_tree_node_
m_start_size	5/ext/pb_ds/hash_policy.hpp	/^    size_type m_start_size;$/;"	m	class:__gnu_pbds::hash_exponential_size_policy
m_start_size	5/ext/pb_ds/hash_policy.hpp	/^    size_type m_start_size;$/;"	m	class:__gnu_pbds::hash_prime_size_policy
m_stat	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^	entry_status m_stat;$/;"	m	struct:__gnu_pbds::detail::PB_DS_GP_HASH_NAME::entry
m_store_extra_indicator	5/ext/pb_ds/detail/types_traits.hpp	/^	store_extra			       	m_store_extra_indicator;$/;"	m	struct:__gnu_pbds::detail::types_traits
m_threads	opencv2/core/utility.hpp	/^    int                  m_threads;$/;"	m	class:cv::instr::NodeData
m_ticksTotal	opencv2/core/utility.hpp	/^    uint64      m_ticksTotal;$/;"	m	struct:cv::instr::NodeDataTls
m_ticksTotal	opencv2/core/utility.hpp	/^    volatile uint64      m_ticksTotal;$/;"	m	class:cv::instr::NodeData
m_tls	opencv2/core/utility.hpp	/^    TLSData<NodeDataTls> m_tls;$/;"	m	class:cv::instr::NodeData
m_type	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	const node_type 	       				m_type;$/;"	m	struct:__gnu_pbds::detail::pat_trie_base::_Node_base
m_update_metadata	5/ext/pb_ds/detail/list_update_map_/entry_metadata_base.hpp	/^      Metadata m_update_metadata;$/;"	m	struct:__gnu_pbds::detail::lu_map_entry_metadata_base
m_value	5/ext/pb_ds/detail/left_child_next_sibling_heap_/node.hpp	/^      value_type 	m_value;$/;"	m	struct:__gnu_pbds::detail::left_child_next_sibling_heap_node_
m_value	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^	typename traits_base::value_type m_value;$/;"	m	struct:__gnu_pbds::detail::PB_DS_LU_NAME::entry
m_value	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      value_type						m_value;$/;"	m	struct:__gnu_pbds::detail::pat_trie_base::_Leaf
m_value	5/ext/pb_ds/detail/rb_tree_map_/node.hpp	/^      value_type 	m_value;$/;"	m	struct:__gnu_pbds::detail::rb_tree_node_
m_value	5/ext/pb_ds/detail/splay_tree_/node.hpp	/^      value_type m_value;$/;"	m	struct:__gnu_pbds::detail::splay_tree_node_
m_value	5/ext/pb_ds/detail/types_traits.hpp	/^	value_type 	m_value;$/;"	m	struct:__gnu_pbds::detail::stored_value
magnitude_func	opencv2/cudev/functional/functional.hpp	/^template <typename T> struct magnitude_func : binary_function<T, T, typename functional_detail::FloatType<T>::type>$/;"	s	namespace:cv::cudev
magnitude_sqr_func	opencv2/cudev/functional/functional.hpp	/^template <typename T> struct magnitude_sqr_func : binary_function<T, T, typename functional_detail::FloatType<T>::type>$/;"	s	namespace:cv::cudev
make	opencv2/core/cuda/vec_traits.hpp	/^        static __device__ __host__ __forceinline__ char make(char x) {return x;}$/;"	f	struct:cv::cuda::device::VecTraits
make	opencv2/core/cuda/vec_traits.hpp	/^        static __device__ __host__ __forceinline__ char make(const char* x) {return *x;}$/;"	f	struct:cv::cuda::device::VecTraits
make	opencv2/core/cuda/vec_traits.hpp	/^        static __device__ __host__ __forceinline__ char1 make(const schar* v) {return make_char1(v[0]);}$/;"	f	struct:cv::cuda::device::VecTraits
make	opencv2/core/cuda/vec_traits.hpp	/^        static __device__ __host__ __forceinline__ char1 make(schar x) {return make_char1(x);}$/;"	f	struct:cv::cuda::device::VecTraits
make	opencv2/core/cuda/vec_traits.hpp	/^        static __device__ __host__ __forceinline__ char2 make(const schar* v) {return make_char2(v[0], v[1]);}$/;"	f	struct:cv::cuda::device::VecTraits
make	opencv2/core/cuda/vec_traits.hpp	/^        static __device__ __host__ __forceinline__ char2 make(schar x, schar y) {return make_char2(x, y);}$/;"	f	struct:cv::cuda::device::VecTraits
make	opencv2/core/cuda/vec_traits.hpp	/^        static __device__ __host__ __forceinline__ char3 make(const schar* v) {return make_char3(v[0], v[1], v[2]);}$/;"	f	struct:cv::cuda::device::VecTraits
make	opencv2/core/cuda/vec_traits.hpp	/^        static __device__ __host__ __forceinline__ char3 make(schar x, schar y, schar z) {return make_char3(x, y, z);}$/;"	f	struct:cv::cuda::device::VecTraits
make	opencv2/core/cuda/vec_traits.hpp	/^        static __device__ __host__ __forceinline__ char4 make(const schar* v) {return make_char4(v[0], v[1], v[2], v[3]);}$/;"	f	struct:cv::cuda::device::VecTraits
make	opencv2/core/cuda/vec_traits.hpp	/^        static __device__ __host__ __forceinline__ char4 make(schar x, schar y, schar z, schar w) {return make_char4(x, y, z, w);}$/;"	f	struct:cv::cuda::device::VecTraits
make	opencv2/core/cuda/vec_traits.hpp	/^        static __device__ __host__ __forceinline__ char8 make(const schar* v) {return make_char8(v[0], v[1], v[2], v[3], v[4], v[5], v[6], v[7]);}$/;"	f	struct:cv::cuda::device::VecTraits
make	opencv2/core/cuda/vec_traits.hpp	/^        static __device__ __host__ __forceinline__ char8 make(schar a0, schar a1, schar a2, schar a3, schar a4, schar a5, schar a6, schar a7) {return make_char8(a0, a1, a2, a3, a4, a5, a6, a7);}$/;"	f	struct:cv::cuda::device::VecTraits
make	opencv2/core/cuda/vec_traits.hpp	/^        static __device__ __host__ __forceinline__ schar make(const schar* x) {return *x;}$/;"	f	struct:cv::cuda::device::VecTraits
make	opencv2/core/cuda/vec_traits.hpp	/^        static __device__ __host__ __forceinline__ schar make(schar x) {return x;}$/;"	f	struct:cv::cuda::device::VecTraits
make	opencv2/cudev/util/vec_traits.hpp	/^    __host__ __device__ __forceinline__ static char1 make(const schar* v) {return make_char1(v[0]);}$/;"	f	struct:cv::cudev::VecTraits
make	opencv2/cudev/util/vec_traits.hpp	/^    __host__ __device__ __forceinline__ static char1 make(schar x) {return make_char1(x);}$/;"	f	struct:cv::cudev::VecTraits
make	opencv2/cudev/util/vec_traits.hpp	/^    __host__ __device__ __forceinline__ static char2 make(const schar* v) {return make_char2(v[0], v[1]);}$/;"	f	struct:cv::cudev::VecTraits
make	opencv2/cudev/util/vec_traits.hpp	/^    __host__ __device__ __forceinline__ static char2 make(schar x, schar y) {return make_char2(x, y);}$/;"	f	struct:cv::cudev::VecTraits
make	opencv2/cudev/util/vec_traits.hpp	/^    __host__ __device__ __forceinline__ static char3 make(const schar* v) {return make_char3(v[0], v[1], v[2]);}$/;"	f	struct:cv::cudev::VecTraits
make	opencv2/cudev/util/vec_traits.hpp	/^    __host__ __device__ __forceinline__ static char3 make(schar x, schar y, schar z) {return make_char3(x, y, z);}$/;"	f	struct:cv::cudev::VecTraits
make	opencv2/cudev/util/vec_traits.hpp	/^    __host__ __device__ __forceinline__ static char4 make(const schar* v) {return make_char4(v[0], v[1], v[2], v[3]);}$/;"	f	struct:cv::cudev::VecTraits
make	opencv2/cudev/util/vec_traits.hpp	/^    __host__ __device__ __forceinline__ static char4 make(schar x, schar y, schar z, schar w) {return make_char4(x, y, z, w);}$/;"	f	struct:cv::cudev::VecTraits
make	opencv2/cudev/util/vec_traits.hpp	/^    __host__ __device__ __forceinline__ static schar make(const schar* x) {return *x;}$/;"	f	struct:cv::cudev::VecTraits
make	opencv2/cudev/util/vec_traits.hpp	/^    __host__ __device__ __forceinline__ static schar make(schar x) {return x;}$/;"	f	struct:cv::cudev::VecTraits
makeExpr	opencv2/cudev/expr/expr.hpp	/^__host__ Expr<Body> makeExpr(const Body& body)$/;"	f	namespace:cv::cudev
makePtr	opencv2/core/ptr.inl.hpp	/^Ptr<T> makePtr()$/;"	f	namespace:cv
makePtr	opencv2/core/ptr.inl.hpp	/^Ptr<T> makePtr(const A1& a1)$/;"	f	namespace:cv
makePtr	opencv2/core/ptr.inl.hpp	/^Ptr<T> makePtr(const A1& a1, const A2& a2)$/;"	f	namespace:cv
makePtr	opencv2/core/ptr.inl.hpp	/^Ptr<T> makePtr(const A1& a1, const A2& a2, const A3& a3)$/;"	f	namespace:cv
makePtr	opencv2/core/ptr.inl.hpp	/^Ptr<T> makePtr(const A1& a1, const A2& a2, const A3& a3, const A4& a4)$/;"	f	namespace:cv
makePtr	opencv2/core/ptr.inl.hpp	/^Ptr<T> makePtr(const A1& a1, const A2& a2, const A3& a3, const A4& a4, const A5& a5)$/;"	f	namespace:cv
makePtr	opencv2/core/ptr.inl.hpp	/^Ptr<T> makePtr(const A1& a1, const A2& a2, const A3& a3, const A4& a4, const A5& a5, const A6& a6)$/;"	f	namespace:cv
makePtr	opencv2/core/ptr.inl.hpp	/^Ptr<T> makePtr(const A1& a1, const A2& a2, const A3& a3, const A4& a4, const A5& a5, const A6& a6, const A7& a7)$/;"	f	namespace:cv
makePtr	opencv2/core/ptr.inl.hpp	/^Ptr<T> makePtr(const A1& a1, const A2& a2, const A3& a3, const A4& a4, const A5& a5, const A6& a6, const A7& a7, const A8& a8)$/;"	f	namespace:cv
makePtr	opencv2/core/ptr.inl.hpp	/^Ptr<T> makePtr(const A1& a1, const A2& a2, const A3& a3, const A4& a4, const A5& a5, const A6& a6, const A7& a7, const A8& a8, const A9& a9)$/;"	f	namespace:cv
makePtr	opencv2/core/ptr.inl.hpp	/^Ptr<T> makePtr(const A1& a1, const A2& a2, const A3& a3, const A4& a4, const A5& a5, const A6& a6, const A7& a7, const A8& a8, const A9& a9, const A10& a10)$/;"	f	namespace:cv
makePtr	opencv2/core/ptr.inl.hpp	/^Ptr<T> makePtr(const A1& a1, const A2& a2, const A3& a3, const A4& a4, const A5& a5, const A6& a6, const A7& a7, const A8& a8, const A9& a9, const A10& a10, const A11& a11)$/;"	f	namespace:cv
makePtr	opencv2/core/ptr.inl.hpp	/^Ptr<T> makePtr(const A1& a1, const A2& a2, const A3& a3, const A4& a4, const A5& a5, const A6& a6, const A7& a7, const A8& a8, const A9& a9, const A10& a10, const A11& a11, const A12& a12)$/;"	f	namespace:cv
make_0_exposed	5/ext/pb_ds/detail/rc_binomial_heap_/insert_fn_imps.hpp	/^make_0_exposed()$/;"	f	class:PB_DS_CLASS_C_DEC
make_binomial_heap	5/ext/pb_ds/detail/rc_binomial_heap_/erase_fn_imps.hpp	/^make_binomial_heap()$/;"	f	class:PB_DS_CLASS_C_DEC
make_char8	opencv2/core/cuda/vec_traits.hpp	/^    static __host__ __device__ __forceinline__ char8 make_char8(schar a0, schar a1, schar a2, schar a3, schar a4, schar a5, schar a6, schar a7)$/;"	f	namespace:cv::cuda::device
make_child_of	5/ext/pb_ds/detail/left_child_next_sibling_heap_/insert_fn_imps.hpp	/^make_child_of(node_pointer p_nd, node_pointer p_new_parent)$/;"	f	class:PB_DS_CLASS_C_DEC
make_child_of	5/ext/pb_ds/detail/thin_heap_/erase_fn_imps.hpp	/^make_child_of(node_pointer p_nd, node_pointer p_new_parent)$/;"	f	class:PB_DS_CLASS_C_DEC
make_double8	opencv2/core/cuda/vec_traits.hpp	/^    static __host__ __device__ __forceinline__ double8 make_double8(double a0, double a1, double a2, double a3, double a4, double a5, double a6, double a7)$/;"	f	namespace:cv::cuda::device
make_float8	opencv2/core/cuda/vec_traits.hpp	/^    static __host__ __device__ __forceinline__ float8 make_float8(float a0, float a1, float a2, float a3, float a4, float a5, float a6, float a7)$/;"	f	namespace:cv::cuda::device
make_from_aux	5/ext/pb_ds/detail/thin_heap_/erase_fn_imps.hpp	/^make_from_aux()$/;"	f	class:PB_DS_CLASS_C_DEC
make_heap	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	/^      make_heap()$/;"	f	class:__gnu_pbds::detail::binary_heap
make_heap	cpp_src/stl_heap.h	/^    make_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)$/;"	f	namespace:std
make_heap	cpp_src/stl_heap.h	/^    make_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	namespace:std
make_int8	opencv2/core/cuda/vec_traits.hpp	/^    static __host__ __device__ __forceinline__ int8 make_int8(int a0, int a1, int a2, int a3, int a4, int a5, int a6, int a7)$/;"	f	namespace:cv::cuda::device
make_pair	cpp_src/stl_pair.h	/^    make_pair(_T1 __x, _T2 __y)$/;"	f	namespace:std
make_root	5/ext/pb_ds/detail/thin_heap_/insert_fn_imps.hpp	/^make_root(node_pointer p_nd)$/;"	f	class:PB_DS_CLASS_C_DEC
make_root_and_link	5/ext/pb_ds/detail/thin_heap_/insert_fn_imps.hpp	/^make_root_and_link(node_pointer p_nd)$/;"	f	class:PB_DS_CLASS_C_DEC
make_short8	opencv2/core/cuda/vec_traits.hpp	/^    static __host__ __device__ __forceinline__ short8 make_short8(short a0, short a1, short a2, short a3, short a4, short a5, short a6, short a7)$/;"	f	namespace:cv::cuda::device
make_uchar8	opencv2/core/cuda/vec_traits.hpp	/^    static __host__ __device__ __forceinline__ uchar8 make_uchar8(uchar a0, uchar a1, uchar a2, uchar a3, uchar a4, uchar a5, uchar a6, uchar a7)$/;"	f	namespace:cv::cuda::device
make_uint8	opencv2/core/cuda/vec_traits.hpp	/^    static __host__ __device__ __forceinline__ uint8 make_uint8(uint a0, uint a1, uint a2, uint a3, uint a4, uint a5, uint a6, uint a7)$/;"	f	namespace:cv::cuda::device
make_ushort8	opencv2/core/cuda/vec_traits.hpp	/^    static __host__ __device__ __forceinline__ ushort8 make_ushort8(ushort a0, ushort a1, ushort a2, ushort a3, ushort a4, ushort a5, ushort a6, ushort a7)$/;"	f	namespace:cv::cuda::device
map	cpp_src/stl_map.h	/^        map(_InputIterator __first, _InputIterator __last)$/;"	f	class:std::map
map	cpp_src/stl_map.h	/^        map(_InputIterator __first, _InputIterator __last,$/;"	f	class:std::map
map	cpp_src/stl_map.h	/^      map()$/;"	f	class:std::map
map	cpp_src/stl_map.h	/^      map(const _Compare& __comp, const allocator_type& __a = allocator_type())$/;"	f	class:std::map
map	cpp_src/stl_map.h	/^      map(const map& __x)$/;"	f	class:std::map
map	cpp_src/stl_map.h	/^    class map$/;"	c	namespace:std
map	opencv2/core/types_c.h	/^        CvFileNodeHash* map; \/**< map (collection of named file nodes) *\/$/;"	m	union:CvFileNode::__anon330
map	opencv2/cudev/ptr2d/remap.hpp	/^    MapPtr map;$/;"	m	struct:cv::cudev::RemapPtr1
mapBackward	opencv2/stitching/detail/warpers_inl.hpp	/^void CompressedRectilinearPortraitProjector::mapBackward(float u, float v, float &x, float &y)$/;"	f	class:cv::detail::CompressedRectilinearPortraitProjector
mapBackward	opencv2/stitching/detail/warpers_inl.hpp	/^void CompressedRectilinearProjector::mapBackward(float u, float v, float &x, float &y)$/;"	f	class:cv::detail::CompressedRectilinearProjector
mapBackward	opencv2/stitching/detail/warpers_inl.hpp	/^void CylindricalPortraitProjector::mapBackward(float u0, float v0, float &x, float &y)$/;"	f	class:cv::detail::CylindricalPortraitProjector
mapBackward	opencv2/stitching/detail/warpers_inl.hpp	/^void CylindricalProjector::mapBackward(float u, float v, float &x, float &y)$/;"	f	class:cv::detail::CylindricalProjector
mapBackward	opencv2/stitching/detail/warpers_inl.hpp	/^void FisheyeProjector::mapBackward(float u, float v, float &x, float &y)$/;"	f	class:cv::detail::FisheyeProjector
mapBackward	opencv2/stitching/detail/warpers_inl.hpp	/^void MercatorProjector::mapBackward(float u, float v, float &x, float &y)$/;"	f	class:cv::detail::MercatorProjector
mapBackward	opencv2/stitching/detail/warpers_inl.hpp	/^void PaniniPortraitProjector::mapBackward(float u, float v, float &x, float &y)$/;"	f	class:cv::detail::PaniniPortraitProjector
mapBackward	opencv2/stitching/detail/warpers_inl.hpp	/^void PaniniProjector::mapBackward(float u, float v, float &x, float &y)$/;"	f	class:cv::detail::PaniniProjector
mapBackward	opencv2/stitching/detail/warpers_inl.hpp	/^void PlanePortraitProjector::mapBackward(float u0, float v0, float &x, float &y)$/;"	f	class:cv::detail::PlanePortraitProjector
mapBackward	opencv2/stitching/detail/warpers_inl.hpp	/^void PlaneProjector::mapBackward(float u, float v, float &x, float &y)$/;"	f	class:cv::detail::PlaneProjector
mapBackward	opencv2/stitching/detail/warpers_inl.hpp	/^void SphericalPortraitProjector::mapBackward(float u0, float v0, float &x, float &y)$/;"	f	class:cv::detail::SphericalPortraitProjector
mapBackward	opencv2/stitching/detail/warpers_inl.hpp	/^void SphericalProjector::mapBackward(float u, float v, float &x, float &y)$/;"	f	class:cv::detail::SphericalProjector
mapBackward	opencv2/stitching/detail/warpers_inl.hpp	/^void StereographicProjector::mapBackward(float u, float v, float &x, float &y)$/;"	f	class:cv::detail::StereographicProjector
mapBackward	opencv2/stitching/detail/warpers_inl.hpp	/^void TransverseMercatorProjector::mapBackward(float u, float v, float &x, float &y)$/;"	f	class:cv::detail::TransverseMercatorProjector
mapForward	opencv2/stitching/detail/warpers_inl.hpp	/^void CompressedRectilinearPortraitProjector::mapForward(float x, float y, float &u, float &v)$/;"	f	class:cv::detail::CompressedRectilinearPortraitProjector
mapForward	opencv2/stitching/detail/warpers_inl.hpp	/^void CompressedRectilinearProjector::mapForward(float x, float y, float &u, float &v)$/;"	f	class:cv::detail::CompressedRectilinearProjector
mapForward	opencv2/stitching/detail/warpers_inl.hpp	/^void CylindricalPortraitProjector::mapForward(float x, float y, float &u0, float &v0)$/;"	f	class:cv::detail::CylindricalPortraitProjector
mapForward	opencv2/stitching/detail/warpers_inl.hpp	/^void CylindricalProjector::mapForward(float x, float y, float &u, float &v)$/;"	f	class:cv::detail::CylindricalProjector
mapForward	opencv2/stitching/detail/warpers_inl.hpp	/^void FisheyeProjector::mapForward(float x, float y, float &u, float &v)$/;"	f	class:cv::detail::FisheyeProjector
mapForward	opencv2/stitching/detail/warpers_inl.hpp	/^void MercatorProjector::mapForward(float x, float y, float &u, float &v)$/;"	f	class:cv::detail::MercatorProjector
mapForward	opencv2/stitching/detail/warpers_inl.hpp	/^void PaniniPortraitProjector::mapForward(float x, float y, float &u, float &v)$/;"	f	class:cv::detail::PaniniPortraitProjector
mapForward	opencv2/stitching/detail/warpers_inl.hpp	/^void PaniniProjector::mapForward(float x, float y, float &u, float &v)$/;"	f	class:cv::detail::PaniniProjector
mapForward	opencv2/stitching/detail/warpers_inl.hpp	/^void PlanePortraitProjector::mapForward(float x, float y, float &u0, float &v0)$/;"	f	class:cv::detail::PlanePortraitProjector
mapForward	opencv2/stitching/detail/warpers_inl.hpp	/^void PlaneProjector::mapForward(float x, float y, float &u, float &v)$/;"	f	class:cv::detail::PlaneProjector
mapForward	opencv2/stitching/detail/warpers_inl.hpp	/^void SphericalPortraitProjector::mapForward(float x, float y, float &u0, float &v0)$/;"	f	class:cv::detail::SphericalPortraitProjector
mapForward	opencv2/stitching/detail/warpers_inl.hpp	/^void SphericalProjector::mapForward(float x, float y, float &u, float &v)$/;"	f	class:cv::detail::SphericalProjector
mapForward	opencv2/stitching/detail/warpers_inl.hpp	/^void StereographicProjector::mapForward(float x, float y, float &u, float &v)$/;"	f	class:cv::detail::StereographicProjector
mapForward	opencv2/stitching/detail/warpers_inl.hpp	/^void TransverseMercatorProjector::mapForward(float x, float y, float &u, float &v)$/;"	f	class:cv::detail::TransverseMercatorProjector
mapcount	opencv2/core/mat.hpp	/^    int mapcount;$/;"	m	struct:cv::UMatData
mapped_const_pointer	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	/^      typedef typename traits_base::mapped_const_pointer mapped_const_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_BIN_TREE_NAME
mapped_const_pointer	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef typename traits_base::mapped_const_pointer mapped_const_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
mapped_const_pointer	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef typename traits_base::mapped_const_pointer mapped_const_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
mapped_const_pointer	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      typedef typename traits_base::mapped_const_pointer mapped_const_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_LU_NAME
mapped_const_pointer	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      typedef typename traits_base::mapped_const_pointer mapped_const_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
mapped_const_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename traits_base::mapped_const_pointer mapped_const_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
mapped_const_pointer	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	/^      typedef typename base_type::mapped_const_pointer 	 mapped_const_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_RB_TREE_NAME
mapped_const_pointer	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	/^      typedef typename base_type::mapped_const_pointer 	 mapped_const_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_S_TREE_NAME
mapped_const_pointer	5/ext/pb_ds/detail/types_traits.hpp	/^	typedef typename __rebind_ma::const_pointer 	mapped_const_pointer;$/;"	t	struct:__gnu_pbds::detail::type_base
mapped_const_pointer_	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      typedef typename traits_base::const_pointer 	mapped_const_pointer_;$/;"	t	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
mapped_const_reference	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	/^      typedef typename traits_base::mapped_const_reference mapped_const_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_BIN_TREE_NAME
mapped_const_reference	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef typename traits_base::mapped_const_reference mapped_const_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
mapped_const_reference	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef typename traits_base::mapped_const_reference mapped_const_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
mapped_const_reference	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      typedef typename traits_base::mapped_const_reference mapped_const_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_LU_NAME
mapped_const_reference	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      typedef typename traits_base::mapped_const_reference mapped_const_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
mapped_const_reference	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename traits_base::mapped_const_reference mapped_const_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
mapped_const_reference	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	/^      typedef typename base_type::mapped_const_reference mapped_const_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_RB_TREE_NAME
mapped_const_reference	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	/^      typedef typename base_type::mapped_const_reference mapped_const_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_S_TREE_NAME
mapped_const_reference	5/ext/pb_ds/detail/types_traits.hpp	/^	typedef typename __rebind_ma::const_reference 	mapped_const_reference;$/;"	t	struct:__gnu_pbds::detail::type_base
mapped_pointer	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	/^      typedef typename traits_base::mapped_pointer 	mapped_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_BIN_TREE_NAME
mapped_pointer	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef typename traits_base::mapped_pointer mapped_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
mapped_pointer	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef typename traits_base::mapped_pointer mapped_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
mapped_pointer	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      typedef typename traits_base::mapped_pointer mapped_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_LU_NAME
mapped_pointer	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      typedef typename traits_base::mapped_pointer 	mapped_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
mapped_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename traits_base::mapped_pointer 	mapped_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
mapped_pointer	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	/^      typedef typename base_type::mapped_pointer 	 mapped_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_RB_TREE_NAME
mapped_pointer	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	/^      typedef typename base_type::mapped_pointer 	 mapped_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_S_TREE_NAME
mapped_pointer	5/ext/pb_ds/detail/types_traits.hpp	/^	typedef typename __rebind_ma::pointer 		mapped_pointer;$/;"	t	struct:__gnu_pbds::detail::type_base
mapped_pointer_	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      typedef typename traits_base::pointer 		mapped_pointer_;$/;"	t	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
mapped_reference	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	/^      typedef typename traits_base::mapped_reference 	mapped_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_BIN_TREE_NAME
mapped_reference	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef typename traits_base::mapped_reference mapped_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
mapped_reference	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef typename traits_base::mapped_reference mapped_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
mapped_reference	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      typedef typename traits_base::mapped_reference mapped_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_LU_NAME
mapped_reference	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      typedef typename traits_base::mapped_reference 	mapped_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
mapped_reference	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename traits_base::mapped_reference 	mapped_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
mapped_reference	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	/^      typedef typename base_type::mapped_reference 	 mapped_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_RB_TREE_NAME
mapped_reference	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	/^      typedef typename base_type::mapped_reference 	 mapped_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_S_TREE_NAME
mapped_reference	5/ext/pb_ds/detail/types_traits.hpp	/^	typedef typename __rebind_ma::reference	       	mapped_reference;$/;"	t	struct:__gnu_pbds::detail::type_base
mapped_type	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	/^      typedef typename traits_base::mapped_type 	mapped_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_BIN_TREE_NAME
mapped_type	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef typename traits_base::mapped_type mapped_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
mapped_type	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef typename traits_base::mapped_type mapped_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
mapped_type	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      typedef typename traits_base::mapped_type mapped_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_LU_NAME
mapped_type	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      typedef typename traits_base::mapped_type 	mapped_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
mapped_type	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename traits_base::mapped_type 	mapped_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
mapped_type	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	/^      typedef typename base_type::mapped_type 		 mapped_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_RB_TREE_NAME
mapped_type	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	/^      typedef typename base_type::mapped_type 	 	 mapped_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_S_TREE_NAME
mapped_type	5/ext/pb_ds/detail/types_traits.hpp	/^	typedef typename __rebind_ma::value_type       	mapped_type;$/;"	t	struct:__gnu_pbds::detail::type_base
mapped_type	cpp_src/stl_map.h	/^      typedef _Tp                                           mapped_type;$/;"	t	class:std::map
mapped_type	cpp_src/stl_multimap.h	/^      typedef _Tp                                           mapped_type;$/;"	t	class:std::multimap
mapx	opencv2/cudev/ptr2d/remap.hpp	/^    MapXPtr mapx;$/;"	m	struct:cv::cudev::RemapPtr2
mapx_	opencv2/videostab/wobble_suppression.hpp	/^    Mat_<float> mapx_, mapy_;$/;"	m	class:cv::videostab::MoreAccurateMotionWobbleSuppressor
mapx_	opencv2/videostab/wobble_suppression.hpp	/^    cuda::GpuMat mapx_, mapy_;$/;"	m	class:cv::videostab::MoreAccurateMotionWobbleSuppressorGpu
mapy	opencv2/cudev/ptr2d/remap.hpp	/^    MapYPtr mapy;$/;"	m	struct:cv::cudev::RemapPtr2
mapy_	opencv2/videostab/wobble_suppression.hpp	/^    Mat_<float> mapx_, mapy_;$/;"	m	class:cv::videostab::MoreAccurateMotionWobbleSuppressor
mapy_	opencv2/videostab/wobble_suppression.hpp	/^    cuda::GpuMat mapx_, mapy_;$/;"	m	class:cv::videostab::MoreAccurateMotionWobbleSuppressorGpu
markDeviceCopyObsolete	opencv2/core/mat.inl.hpp	/^inline void UMatData::markDeviceCopyObsolete(bool flag)$/;"	f	class:cv::UMatData
markDeviceMemMapped	opencv2/core/mat.inl.hpp	/^inline void UMatData::markDeviceMemMapped(bool flag)$/;"	f	class:cv::UMatData
markHostCopyObsolete	opencv2/core/mat.inl.hpp	/^inline void UMatData::markHostCopyObsolete(bool flag)$/;"	f	class:cv::UMatData
mask	cpp_src/locale_facets.h	/^      typedef typename __ctype_abstract_base<_CharT>::mask mask;$/;"	t	class:std::ctype
mask	opencv2/calib3d/calib3d_c.h	/^    cv::Ptr<CvMat> mask;$/;"	m	class:CvLevMarq
mask	opencv2/core/core_c.h	/^    int      mask;         \/* event mask *\/$/;"	m	struct:CvGraphScanner
mask	opencv2/core/cuda/utility.hpp	/^        PtrStepb mask;$/;"	m	struct:cv::cuda::device::SingleMask
mask	opencv2/core/cuda/utility.hpp	/^        PtrStepb mask;$/;"	m	struct:cv::cuda::device::SingleMaskChannels
mask	opencv2/cudev/ptr2d/mask.hpp	/^    MaskPtr mask;$/;"	m	struct:cv::cudev::SingleMaskChannels
mask1_	opencv2/stitching/detail/seam_finders.hpp	/^    Mat_<uchar> mask1_, mask2_;$/;"	m	class:cv::detail::DpSeamFinder
mask1_	opencv2/videostab/inpainting.hpp	/^    Mat_<uchar> mask1_, transformedMask1_;$/;"	m	class:cv::videostab::MotionInpainter
mask2_	opencv2/stitching/detail/seam_finders.hpp	/^    Mat_<uchar> mask1_, mask2_;$/;"	m	class:cv::detail::DpSeamFinder
maskCollection	opencv2/core/cuda/utility.hpp	/^        const PtrStepb* maskCollection;$/;"	m	struct:cv::cuda::device::MaskCollection
maskROI	opencv2/core/types_c.h	/^    struct _IplImage *maskROI;      \/**< Must be NULL. *\/$/;"	m	struct:_IplImage	typeref:struct:_IplImage::_IplImage
mask_	opencv2/flann/lsh_table.h	/^    std::vector<size_t> mask_;$/;"	m	class:cvflann::lsh::LshTable
mask_array	cpp_src/mask_array.h	/^    class mask_array$/;"	c	namespace:std
mask_array	cpp_src/mask_array.h	/^    inline mask_array<_Tp>::mask_array(const mask_array<_Tp>& a)$/;"	f	class:std::mask_array
mask_array	cpp_src/mask_array.h	/^    mask_array<_Tp>::mask_array(_Array<_Tp> __a, size_t __s, _Array<bool> __m)$/;"	f	class:std::mask_array
mask_based_base	5/ext/pb_ds/hash_policy.hpp	/^    typedef detail::mask_based_range_hashing<Size_Type> mask_based_base;$/;"	t	class:__gnu_pbds::direct_mask_range_hashing
mask_based_range_hashing	5/ext/pb_ds/detail/hash_fn/mask_based_range_hashing.hpp	/^    class mask_based_range_hashing$/;"	c	namespace:__gnu_pbds::detail
masks_	opencv2/stitching/detail/seam_finders.hpp	/^    std::vector<UMat> masks_;$/;"	m	class:cv::detail::PairwiseSeamFinder
mat	opencv2/core/core_c.h	/^CVAPI(CvMat*) cvCloneMat( const CvMat* mat );$/;"	v
mat	opencv2/core/core_c.h	/^CVAPI(CvMatND*) cvCloneMatND( const CvMatND* mat );$/;"	v
mat	opencv2/core/core_c.h	/^CVAPI(CvScalar) cvTrace( const CvArr* mat );$/;"	v
mat	opencv2/core/core_c.h	/^CVAPI(CvSparseMat*) cvCloneSparseMat( const CvSparseMat* mat );$/;"	v
mat	opencv2/core/core_c.h	/^CVAPI(double) cvDet( const CvArr* mat );$/;"	v
mat	opencv2/core/core_c.h	/^CVAPI(void)  cvReleaseMat( CvMat** mat );$/;"	v
mat	opencv2/core/core_c.h	/^CVAPI(void)  cvReleaseSparseMat( CvSparseMat** mat );$/;"	v
mat	opencv2/core/persistence.hpp	/^inline Mat FileNode::mat() const { Mat value; read(*this, value, value);    return value; }$/;"	f	class:cv::FileNode
mat	opencv2/core/types_c.h	/^    CvMatND mat;                    \/**< Embedded matrix header for array histograms. *\/$/;"	m	struct:CvHistogram
mat	opencv2/core/types_c.h	/^    CvSparseMat* mat;$/;"	m	struct:CvSparseMatIterator
mat_type	opencv2/core/matx.hpp	/^    typedef Matx<_Tp, m, n>               mat_type;$/;"	t	class:cv::Matx
matches	opencv2/stitching/detail/matchers.hpp	/^    std::vector<DMatch> matches;$/;"	m	struct:cv::detail::MatchesInfo
matchingMask	opencv2/stitching.hpp	/^    const cv::UMat& matchingMask() const { return matching_mask_; }$/;"	f	class:cv::Stitcher
matching_mask_	opencv2/stitching.hpp	/^    cv::UMat matching_mask_;$/;"	m	class:cv::Stitcher
matrix	opencv2/core/affine.hpp	/^        Mat4 matrix;$/;"	m	class:cv::Affine3
max	5/parallel/base.h	/^    max(const _Tp& __a, const _Tp& __b)$/;"	f	namespace:__gnu_parallel
max	cpp_src/stl_algobase.h	/^    max(const _Tp& __a, const _Tp& __b)$/;"	f	namespace:std
max	cpp_src/stl_algobase.h	/^    max(const _Tp& __a, const _Tp& __b, _Compare __comp)$/;"	f	namespace:std
max	cpp_src/valarray_after.h	/^    _Expr<_Clos, _Tp>::max() const$/;"	f	class:std::_Expr
max	opencv2/core/cuda/detail/color_detail.hpp	/^            static __device__ __forceinline__ T max() { return numeric_limits<T>::max(); }$/;"	f	struct:cv::cuda::device::color_detail::ColorChannel
max	opencv2/core/cuda/detail/color_detail.hpp	/^            static __device__ __forceinline__ float max() { return 1.f; }$/;"	f	struct:cv::cuda::device::color_detail::ColorChannel
max	opencv2/core/cuda/limits.hpp	/^    __device__ __forceinline__ static bool max() { return true;  }$/;"	f	struct:cv::cuda::device::numeric_limits
max	opencv2/core/cuda/limits.hpp	/^    __device__ __forceinline__ static double max() { return DBL_MAX; }$/;"	f	struct:cv::cuda::device::numeric_limits
max	opencv2/core/cuda/limits.hpp	/^    __device__ __forceinline__ static float max() { return FLT_MAX; }$/;"	f	struct:cv::cuda::device::numeric_limits
max	opencv2/core/cuda/limits.hpp	/^    __device__ __forceinline__ static int max() { return INT_MAX; }$/;"	f	struct:cv::cuda::device::numeric_limits
max	opencv2/core/cuda/limits.hpp	/^    __device__ __forceinline__ static short max() { return SHRT_MAX; }$/;"	f	struct:cv::cuda::device::numeric_limits
max	opencv2/core/cuda/limits.hpp	/^    __device__ __forceinline__ static signed char max() { return SCHAR_MAX; }$/;"	f	struct:cv::cuda::device::numeric_limits
max	opencv2/core/cuda/limits.hpp	/^    __device__ __forceinline__ static unsigned char max() { return UCHAR_MAX; }$/;"	f	struct:cv::cuda::device::numeric_limits
max	opencv2/core/cuda/limits.hpp	/^    __device__ __forceinline__ static unsigned int max() { return UINT_MAX; }$/;"	f	struct:cv::cuda::device::numeric_limits
max	opencv2/core/cuda/limits.hpp	/^    __device__ __forceinline__ static unsigned short max() { return USHRT_MAX; }$/;"	f	struct:cv::cuda::device::numeric_limits
max	opencv2/core/cvdef.h	58;"	d
max	opencv2/core/mat.inl.hpp	/^MatExpr max(const Mat_<_Tp>& a, const Mat_<_Tp>& b)$/;"	f	namespace:cv
max	opencv2/core/mat.inl.hpp	/^MatExpr max(const Mat_<_Tp>& a, double s)$/;"	f	namespace:cv
max	opencv2/core/mat.inl.hpp	/^MatExpr max(double s, const Mat_<_Tp>& a)$/;"	f	namespace:cv
max	opencv2/core/private.hpp	66;"	d
max	opencv2/cudev/functional/detail/color_cvt.hpp	/^        __device__ __forceinline__ static T max() { return numeric_limits<T>::max(); }$/;"	f	struct:cv::cudev::color_cvt_detail::ColorChannel
max	opencv2/cudev/functional/detail/color_cvt.hpp	/^        __device__ __forceinline__ static float max() { return 1.f; }$/;"	f	struct:cv::cudev::color_cvt_detail::ColorChannel
max	opencv2/cudev/grid/detail/reduce.hpp	/^        __device__ __forceinline__ static void max(R* ptr, R val)$/;"	f	struct:cv::cudev::grid_reduce_detail::AtomicUnroll
max	opencv2/cudev/grid/detail/reduce.hpp	/^        __device__ __forceinline__ static void max(R* ptr, val_type val)$/;"	f	struct:cv::cudev::grid_reduce_detail::AtomicUnroll
max	opencv2/cudev/util/limits.hpp	/^    __device__ __forceinline__ static bool max() { return true;  }$/;"	f	struct:cv::cudev::numeric_limits
max	opencv2/cudev/util/limits.hpp	/^    __device__ __forceinline__ static double max() { return DBL_MAX; }$/;"	f	struct:cv::cudev::numeric_limits
max	opencv2/cudev/util/limits.hpp	/^    __device__ __forceinline__ static float max() { return FLT_MAX; }$/;"	f	struct:cv::cudev::numeric_limits
max	opencv2/cudev/util/limits.hpp	/^    __device__ __forceinline__ static int max() { return INT_MAX; }$/;"	f	struct:cv::cudev::numeric_limits
max	opencv2/cudev/util/limits.hpp	/^    __device__ __forceinline__ static schar max() { return SCHAR_MAX; }$/;"	f	struct:cv::cudev::numeric_limits
max	opencv2/cudev/util/limits.hpp	/^    __device__ __forceinline__ static short max() { return SHRT_MAX; }$/;"	f	struct:cv::cudev::numeric_limits
max	opencv2/cudev/util/limits.hpp	/^    __device__ __forceinline__ static uchar max() { return UCHAR_MAX; }$/;"	f	struct:cv::cudev::numeric_limits
max	opencv2/cudev/util/limits.hpp	/^    __device__ __forceinline__ static uint max() { return UINT_MAX; }$/;"	f	struct:cv::cudev::numeric_limits
max	opencv2/cudev/util/limits.hpp	/^    __device__ __forceinline__ static ushort max() { return USHRT_MAX; }$/;"	f	struct:cv::cudev::numeric_limits
maxArea	opencv2/features2d.hpp	/^      CV_PROP_RW float minArea, maxArea;$/;"	m	struct:cv::SimpleBlobDetector::Params
maxCircularity	opencv2/features2d.hpp	/^      CV_PROP_RW float minCircularity, maxCircularity;$/;"	m	struct:cv::SimpleBlobDetector::Params
maxConvexity	opencv2/features2d.hpp	/^      CV_PROP_RW float minConvexity, maxConvexity;$/;"	m	struct:cv::SimpleBlobDetector::Params
maxCount	opencv2/core/types.hpp	/^    int maxCount; \/\/ the maximum number of iterations\/elements$/;"	m	class:cv::TermCriteria
maxDepth	opencv2/core/private.hpp	/^    int        maxDepth;$/;"	m	class:cv::instr::InstrStruct
maxInertiaRatio	opencv2/features2d.hpp	/^      CV_PROP_RW float minInertiaRatio, maxInertiaRatio;$/;"	m	struct:cv::SimpleBlobDetector::Params
maxLevel	opencv2/videostab/optical_flow.hpp	/^    virtual int maxLevel() const { return maxLevel_; }$/;"	f	class:cv::videostab::PyrLkOptFlowEstimatorBase
maxLevel_	opencv2/videostab/optical_flow.hpp	/^    int maxLevel_;$/;"	m	class:cv::videostab::PyrLkOptFlowEstimatorBase
maxObjSize	opencv2/objdetect/detection_based_tracker.hpp	/^                cv::Size maxObjSize;$/;"	m	class:cv::DetectionBasedTracker::IDetector
maxThreshold	opencv2/features2d.hpp	/^      CV_PROP_RW float maxThreshold;$/;"	m	struct:cv::SimpleBlobDetector::Params
maxTrackLifetime	opencv2/objdetect/detection_based_tracker.hpp	/^            int maxTrackLifetime;$/;"	m	struct:cv::DetectionBasedTracker::Parameters
maxVal	opencv2/core/cuda/functional.hpp	/^        T maxVal;$/;"	m	struct:cv::cuda::device::thresh_binary_func
maxVal	opencv2/core/cuda/functional.hpp	/^        T maxVal;$/;"	m	struct:cv::cuda::device::thresh_binary_inv_func
maxVal	opencv2/cudev/functional/functional.hpp	/^    T maxVal;$/;"	m	struct:cv::cudev::ThreshBinaryFunc
maxVal	opencv2/cudev/functional/functional.hpp	/^    T maxVal;$/;"	m	struct:cv::cudev::ThreshBinaryInvFunc
maxVal	opencv2/cudev/grid/detail/reduce.hpp	/^    __host__ void maxVal(const SrcPtr& src, ResType* result, const MaskPtr& mask, int rows, int cols, cudaStream_t stream)$/;"	f	namespace:cv::cudev::grid_reduce_detail
maxVal	opencv2/ml.hpp	/^    double maxVal; \/\/!< Maximum value of the statmodel parameter. Default value is 0.$/;"	m	class:cv::ml::ParamGrid
maxVal_	opencv2/cudev/expr/reduction.hpp	/^maxVal_(const SrcPtr& src)$/;"	f	namespace:cv::cudev
max_	opencv2/cudev/expr/per_element_func.hpp	/^max_(const SrcPtr1& src1, const SrcPtr2& src2)$/;"	f	namespace:cv::cudev
max_count	5/ext/pb_ds/list_update_policy.hpp	/^	  max_count = Max_Count$/;"	e	enum:__gnu_pbds::lu_counter_policy::__anon52
max_e_val	5/ext/pb_ds/trie_policy.hpp	/^	max_e_val = Max_E_Val,$/;"	e	enum:__gnu_pbds::trie_string_access_traits::__anon12
max_element	cpp_src/stl_algo.h	/^    max_element(_ForwardIterator __first, _ForwardIterator __last)$/;"	f	namespace:std
max_element	cpp_src/stl_algo.h	/^    max_element(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std
max_element_minimal_n	5/parallel/settings.h	/^    _SequenceIndex              max_element_minimal_n;$/;"	m	struct:__gnu_parallel::_Settings
max_entries	5/ext/pb_ds/detail/rc_binomial_heap_/rc.hpp	/^	  max_entries = sizeof(size_type) << 3$/;"	e	enum:__gnu_pbds::detail::rc::__anon38
max_iter	opencv2/core/types_c.h	/^    int    max_iter;$/;"	m	struct:CvTermCriteria
max_length	cpp_src/codecvt.h	/^      max_length() const throw()$/;"	f	class:std::__codecvt_abstract_base
max_level	opencv2/core/core_c.h	/^    int max_level;$/;"	m	struct:CvTreeNodeIterator
max_rank	5/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp	/^	  max_rank = (sizeof(size_type) << 4) + 2$/;"	e	enum:__gnu_pbds::detail::thin_heap::__anon34
max_size	5/ext/pb_ds/detail/bin_search_tree_/info_fn_imps.hpp	/^max_size() const$/;"	f	class:PB_DS_CLASS_C_DEC
max_size	5/ext/pb_ds/detail/binary_heap_/info_fn_imps.hpp	/^max_size() const$/;"	f	class:PB_DS_CLASS_C_DEC
max_size	5/ext/pb_ds/detail/cc_hash_table_map_/info_fn_imps.hpp	/^max_size() const$/;"	f	class:PB_DS_CLASS_C_DEC
max_size	5/ext/pb_ds/detail/cc_hash_table_map_/size_fn_imps.hpp	/^max_size() const$/;"	f	class:PB_DS_CLASS_C_DEC
max_size	5/ext/pb_ds/detail/gp_hash_table_map_/info_fn_imps.hpp	/^max_size() const$/;"	f	class:PB_DS_CLASS_C_DEC
max_size	5/ext/pb_ds/detail/left_child_next_sibling_heap_/info_fn_imps.hpp	/^max_size() const$/;"	f	class:PB_DS_CLASS_C_DEC
max_size	5/ext/pb_ds/detail/list_update_map_/info_fn_imps.hpp	/^max_size() const$/;"	f	class:PB_DS_CLASS_C_DEC
max_size	5/ext/pb_ds/detail/ov_tree_map_/info_fn_imps.hpp	/^max_size() const$/;"	f	class:PB_DS_CLASS_C_DEC
max_size	5/ext/pb_ds/detail/pat_trie_/info_fn_imps.hpp	/^max_size() const$/;"	f	class:PB_DS_CLASS_C_DEC
max_size	5/ext/pb_ds/detail/trie_policy/sample_trie_access_traits.hpp	/^	max_size = 4$/;"	e	enum:__gnu_pbds::sample_trie_access_traits::__anon40
max_size	5/ext/pb_ds/trie_policy.hpp	/^	max_size = max_e_val - min_e_val + 1$/;"	e	enum:__gnu_pbds::trie_string_access_traits::__anon12
max_size	cpp_src/basic_string.h	/^      max_size() const$/;"	f	class:std::basic_string
max_size	cpp_src/stl_bvector.h	/^    max_size() const$/;"	f	class:std::vector
max_size	cpp_src/stl_deque.h	/^      max_size() const$/;"	f	class:std::deque
max_size	cpp_src/stl_list.h	/^      max_size() const$/;"	f	class:std::list
max_size	cpp_src/stl_map.h	/^      max_size() const$/;"	f	class:std::map
max_size	cpp_src/stl_multimap.h	/^      max_size() const$/;"	f	class:std::multimap
max_size	cpp_src/stl_multiset.h	/^      max_size() const$/;"	f	class:std::multiset
max_size	cpp_src/stl_set.h	/^      max_size() const$/;"	f	class:std::set
max_size	cpp_src/stl_tree.h	/^      max_size() const$/;"	f	class:std::_Rb_tree
max_size	cpp_src/stl_vector.h	/^      max_size() const$/;"	f	class:std::vector
max_size	opencv2/core/cvstd.hpp	/^    size_type max_size() const { return cv::max(static_cast<_Tp>(-1)\/sizeof(_Tp), 1); }$/;"	f	class:cv::Allocator
maximum	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ maximum() {}$/;"	f	struct:cv::cuda::device::maximum
maximum	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ maximum(const maximum&) {}$/;"	f	struct:cv::cuda::device::maximum
maximum	opencv2/core/cuda/functional.hpp	/^    template <typename T> struct maximum : binary_function<T, T, T>$/;"	s	namespace:cv::cuda::device
maximum	opencv2/cudev/functional/functional.hpp	/^template <typename T> struct maximum : binary_function<T, T, T>$/;"	s	namespace:cv::cudev
maxop	opencv2/cudev/grid/detail/reduce.hpp	/^    template <typename T> struct maxop : maximum<T>$/;"	s	namespace:cv::cudev::grid_reduce_detail
mdy	cpp_src/locale_facets.h	/^    enum dateorder { no_order, dmy, mdy, ymd, ydm };$/;"	e	enum:std::time_base::dateorder
mean	opencv2/core.hpp	/^    Mat mean; \/\/!< mean value subtracted before the projection and added after the back projection$/;"	m	class:cv::PCA
meanSplit	opencv2/flann/kdtree_index.h	/^    void meanSplit(int* ind, int count, int& index, int& cutfeat, DistanceType& cutval)$/;"	f	class:cvflann::KDTreeIndex
mean_	opencv2/flann/kdtree_index.h	/^    DistanceType* mean_;$/;"	m	class:cvflann::KDTreeIndex
mean_radius	opencv2/flann/kmeans_index.h	/^        DistanceType mean_radius;$/;"	m	struct:cvflann::KMeansIndex::KMeansNode
measurementMatrix	opencv2/video/tracking.hpp	/^    CV_PROP_RW Mat measurementMatrix;  \/\/!< measurement matrix (H)$/;"	m	class:cv::KalmanFilter
measurementNoiseCov	opencv2/video/tracking.hpp	/^    CV_PROP_RW Mat measurementNoiseCov;\/\/!< measurement noise covariance matrix (R)$/;"	m	class:cv::KalmanFilter
measurement_matrix	opencv2/video/tracking_c.h	/^    CvMat* measurement_matrix;  \/* measurement matrix (H) *\/$/;"	m	struct:CvKalman
measurement_noise_cov	opencv2/video/tracking_c.h	/^    CvMat* measurement_noise_cov; \/* measurement noise covariance matrix (R) *\/$/;"	m	struct:CvKalman
memType	opencv2/cudalegacy/NCV.hpp	/^    NCVMemoryType memType() const {return this->_memtype;}$/;"	f	class:NCVMatrix
memType	opencv2/cudalegacy/NCV.hpp	/^    NCVMemoryType memType() const {return this->_memtype;}$/;"	f	class:NCVVector
mem_fun1_ref_t	cpp_src/stl_function.h	/^    class mem_fun1_ref_t : public binary_function<_Tp, _Arg, _Ret>$/;"	c	namespace:std
mem_fun1_t	cpp_src/stl_function.h	/^    class mem_fun1_t : public binary_function<_Tp*, _Arg, _Ret>$/;"	c	namespace:std
mem_fun_ref_t	cpp_src/stl_function.h	/^    class mem_fun_ref_t : public unary_function<_Tp, _Ret>$/;"	c	namespace:std
mem_fun_t	cpp_src/stl_function.h	/^    class mem_fun_t : public unary_function<_Tp*, _Ret>$/;"	c	namespace:std
memberValues	5/sun/reflect/annotation/AnnotationInvocationHandler.h	/^  ::java::util::Map * memberValues;$/;"	m	class:sun::reflect::annotation::AnnotationInvocationHandler
member_type	opencv2/core.hpp	/^    typedef Mat member_type;$/;"	t	struct:cv::ParamType
member_type	opencv2/core.hpp	/^    typedef Ptr<Algorithm> member_type;$/;"	t	struct:cv::ParamType
member_type	opencv2/core.hpp	/^    typedef String member_type;$/;"	t	struct:cv::ParamType
member_type	opencv2/core.hpp	/^    typedef bool member_type;$/;"	t	struct:cv::ParamType
member_type	opencv2/core.hpp	/^    typedef double member_type;$/;"	t	struct:cv::ParamType
member_type	opencv2/core.hpp	/^    typedef float member_type;$/;"	t	struct:cv::ParamType
member_type	opencv2/core.hpp	/^    typedef int member_type;$/;"	t	struct:cv::ParamType
member_type	opencv2/core.hpp	/^    typedef std::vector<Mat> member_type;$/;"	t	struct:cv::ParamType
member_type	opencv2/core.hpp	/^    typedef uchar member_type;$/;"	t	struct:cv::ParamType
member_type	opencv2/core.hpp	/^    typedef uint64 member_type;$/;"	t	struct:cv::ParamType
member_type	opencv2/core.hpp	/^    typedef unsigned member_type;$/;"	t	struct:cv::ParamType
memoryCost	opencv2/flann/autotuned_index.h	/^        float memoryCost;$/;"	m	struct:cvflann::AutotunedIndex::CostData
memoryCounter	opencv2/flann/hierarchical_clustering_index.h	/^    int memoryCounter;$/;"	m	class:cvflann::HierarchicalClusteringIndex
memoryCounter_	opencv2/flann/kmeans_index.h	/^    int memoryCounter_;$/;"	m	class:cvflann::KMeansIndex
memory_weight_	opencv2/flann/autotuned_index.h	/^    float memory_weight_;$/;"	m	class:cvflann::AutotunedIndex
memtype	opencv2/cudalegacy/NCV.hpp	/^    NCVMemoryType memtype;$/;"	m	struct:NCVMemPtr
merge	cpp_src/stl_algo.h	/^    merge(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	namespace:std
merge	opencv2/core/cuda/detail/reduce.hpp	/^            static __device__ void merge(const PointerTuple& smem, const ValTuple& val, unsigned int tid, unsigned int delta, const OpTuple& op)$/;"	f	struct:cv::cuda::device::reduce_detail::For
merge	opencv2/core/cuda/detail/reduce.hpp	/^            static __device__ void merge(const PointerTuple&, const ValTuple&, unsigned int, unsigned int, const OpTuple&)$/;"	f	struct:cv::cuda::device::reduce_detail::For
merge	opencv2/core/cuda/detail/reduce.hpp	/^        __device__ __forceinline__ void merge(const thrust::tuple<P0, P1, P2, P3, P4, P5, P6, P7, P8, P9>& smem,$/;"	f	namespace:cv::cuda::device::reduce_detail
merge	opencv2/core/cuda/detail/reduce.hpp	/^        __device__ __forceinline__ void merge(volatile T* smem, T& val, unsigned int tid, unsigned int delta, const Op& op)$/;"	f	namespace:cv::cuda::device::reduce_detail
merge	opencv2/core/cuda/detail/reduce_key_val.hpp	/^            static __device__ void merge(const KeyPointerTuple& skeys, const KeyReferenceTuple& key,$/;"	f	struct:cv::cuda::device::reduce_key_val_detail::For
merge	opencv2/core/cuda/detail/reduce_key_val.hpp	/^            static __device__ void merge(const KeyPointerTuple&, const KeyReferenceTuple&,$/;"	f	struct:cv::cuda::device::reduce_key_val_detail::For
merge	opencv2/core/cuda/detail/reduce_key_val.hpp	/^        __device__ __forceinline__ void merge(const thrust::tuple<KP0, KP1, KP2, KP3, KP4, KP5, KP6, KP7, KP8, KP9>& skeys,$/;"	f	namespace:cv::cuda::device::reduce_key_val_detail
merge	opencv2/core/cuda/detail/reduce_key_val.hpp	/^        __device__ __forceinline__ void merge(volatile K* skeys, K& key, volatile V* svals, V& val, const Cmp& cmp, unsigned int tid, unsigned int delta)$/;"	f	namespace:cv::cuda::device::reduce_key_val_detail
merge	opencv2/core/cuda/detail/reduce_key_val.hpp	/^        __device__ __forceinline__ void merge(volatile K* skeys, K& key,$/;"	f	namespace:cv::cuda::device::reduce_key_val_detail
merge	opencv2/core/cuda/scan.hpp	/^        typedef WarpScan<INCLUSIVE, T, F>  merge;$/;"	t	struct:cv::cuda::device::WarpScan
merge	opencv2/core/cuda/scan.hpp	/^        typedef WarpScanNoComp<INCLUSIVE, T, F> merge;$/;"	t	struct:cv::cuda::device::WarpScanNoComp
merge	opencv2/cudev/block/detail/reduce.hpp	/^        __device__ __forceinline__ static void merge(const PointerTuple&, const ValTuple&, uint, uint, const OpTuple&)$/;"	f	struct:cv::cudev::block_reduce_detail::For
merge	opencv2/cudev/block/detail/reduce.hpp	/^        __device__ static void merge(const PointerTuple& smem, const ValTuple& val, uint tid, uint delta, const OpTuple& op)$/;"	f	struct:cv::cudev::block_reduce_detail::For
merge	opencv2/cudev/block/detail/reduce.hpp	/^    __device__ __forceinline__ void merge(const tuple<P0, P1, P2, P3, P4, P5, P6, P7, P8, P9>& smem,$/;"	f	namespace:cv::cudev::block_reduce_detail
merge	opencv2/cudev/block/detail/reduce.hpp	/^    __device__ __forceinline__ void merge(volatile T* smem, T& val, uint tid, uint delta, const Op& op)$/;"	f	namespace:cv::cudev::block_reduce_detail
merge	opencv2/cudev/block/detail/reduce_key_val.hpp	/^        __device__ static void merge(const KeyPointerTuple& skeys, const KeyReferenceTuple& key,$/;"	f	struct:cv::cudev::block_reduce_key_val_detail::For
merge	opencv2/cudev/block/detail/reduce_key_val.hpp	/^        __device__ static void merge(const KeyPointerTuple&, const KeyReferenceTuple&,$/;"	f	struct:cv::cudev::block_reduce_key_val_detail::For
merge	opencv2/cudev/block/detail/reduce_key_val.hpp	/^    __device__ __forceinline__ void merge(const tuple<KP0, KP1, KP2, KP3, KP4, KP5, KP6, KP7, KP8, KP9>& skeys,$/;"	f	namespace:cv::cudev::block_reduce_key_val_detail
merge	opencv2/cudev/block/detail/reduce_key_val.hpp	/^    __device__ void merge(volatile K* skeys, K& key, volatile V* svals, V& val, const Cmp& cmp, uint tid, uint delta)$/;"	f	namespace:cv::cudev::block_reduce_key_val_detail
merge	opencv2/cudev/block/detail/reduce_key_val.hpp	/^    __device__ void merge(volatile K* skeys, K& key,$/;"	f	namespace:cv::cudev::block_reduce_key_val_detail
merge	opencv2/cudev/grid/detail/split_merge.hpp	/^        __host__ static void merge(const SrcPtrTuple& src, const GlobPtr<DstType>& dst, const MaskPtr& mask, int rows, int cols, cudaStream_t stream)$/;"	f	struct:cv::cudev::grid_split_merge_detail::MergeImpl
merge	opencv2/cudev/warp/detail/reduce.hpp	/^        __device__ __forceinline__ static void merge(const PointerTuple&, const ValTuple&, uint, uint, const OpTuple&)$/;"	f	struct:cv::cudev::warp_reduce_detail::For
merge	opencv2/cudev/warp/detail/reduce.hpp	/^        __device__ static void merge(const PointerTuple& smem, const ValTuple& val, uint tid, uint delta, const OpTuple& op)$/;"	f	struct:cv::cudev::warp_reduce_detail::For
merge	opencv2/cudev/warp/detail/reduce.hpp	/^    __device__ __forceinline__ void merge(const tuple<P0, P1, P2, P3, P4, P5, P6, P7, P8, P9>& smem,$/;"	f	namespace:cv::cudev::warp_reduce_detail
merge	opencv2/cudev/warp/detail/reduce.hpp	/^    __device__ __forceinline__ void merge(volatile T* smem, T& val, uint tid, uint delta, const Op& op)$/;"	f	namespace:cv::cudev::warp_reduce_detail
merge	opencv2/cudev/warp/detail/reduce_key_val.hpp	/^        __device__ __forceinline__ static void merge(const KeyPointerTuple&, const KeyReferenceTuple&,$/;"	f	struct:cv::cudev::warp_reduce_key_val_detail::For
merge	opencv2/cudev/warp/detail/reduce_key_val.hpp	/^        __device__ static void merge(const KeyPointerTuple& skeys, const KeyReferenceTuple& key,$/;"	f	struct:cv::cudev::warp_reduce_key_val_detail::For
merge	opencv2/cudev/warp/detail/reduce_key_val.hpp	/^    __device__ __forceinline__ void merge(const tuple<KP0, KP1, KP2, KP3, KP4, KP5, KP6, KP7, KP8, KP9>& skeys,$/;"	f	namespace:cv::cudev::warp_reduce_key_val_detail
merge	opencv2/cudev/warp/detail/reduce_key_val.hpp	/^    __device__ void merge(volatile K* skeys, K& key, volatile V* svals, V& val, const Cmp& cmp, uint tid, uint delta)$/;"	f	namespace:cv::cudev::warp_reduce_key_val_detail
merge	opencv2/cudev/warp/detail/reduce_key_val.hpp	/^    __device__ void merge(volatile K* skeys, K& key,$/;"	f	namespace:cv::cudev::warp_reduce_key_val_detail
mergeC2	opencv2/cudev/grid/detail/split_merge.hpp	/^    __global__ void mergeC2(const Src1Ptr src1, const Src2Ptr src2, GlobPtr<DstType> dst, const MaskPtr mask, const int rows, const int cols)$/;"	f	namespace:cv::cudev::grid_split_merge_detail
mergeC2	opencv2/cudev/grid/detail/split_merge.hpp	/^    __host__ void mergeC2(const Src1Ptr& src1, const Src2Ptr& src2, const GlobPtr<DstType>& dst, const MaskPtr& mask, int rows, int cols, cudaStream_t stream)$/;"	f	namespace:cv::cudev::grid_split_merge_detail
mergeC3	opencv2/cudev/grid/detail/split_merge.hpp	/^    __global__ void mergeC3(const Src1Ptr src1, const Src2Ptr src2, const Src3Ptr src3, GlobPtr<DstType> dst, const MaskPtr mask, const int rows, const int cols)$/;"	f	namespace:cv::cudev::grid_split_merge_detail
mergeC3	opencv2/cudev/grid/detail/split_merge.hpp	/^    __host__ void mergeC3(const Src1Ptr& src1, const Src2Ptr& src2, const Src3Ptr& src3, const GlobPtr<DstType>& dst, const MaskPtr& mask, int rows, int cols, cudaStream_t stream)$/;"	f	namespace:cv::cudev::grid_split_merge_detail
mergeC4	opencv2/cudev/grid/detail/split_merge.hpp	/^    __global__ void mergeC4(const Src1Ptr src1, const Src2Ptr src2, const Src3Ptr src3, const Src4Ptr src4, GlobPtr<DstType> dst, const MaskPtr mask, const int rows, const int cols)$/;"	f	namespace:cv::cudev::grid_split_merge_detail
mergeC4	opencv2/cudev/grid/detail/split_merge.hpp	/^    __host__ void mergeC4(const Src1Ptr& src1, const Src2Ptr& src2, const Src3Ptr& src3, const Src4Ptr& src4, const GlobPtr<DstType>& dst, const MaskPtr& mask, int rows, int cols, cudaStream_t stream)$/;"	f	namespace:cv::cudev::grid_split_merge_detail
mergeShfl	opencv2/core/cuda/detail/reduce.hpp	/^            static __device__ void mergeShfl(const ValTuple& val, unsigned int delta, unsigned int width, const OpTuple& op)$/;"	f	struct:cv::cuda::device::reduce_detail::For
mergeShfl	opencv2/core/cuda/detail/reduce.hpp	/^            static __device__ void mergeShfl(const ValTuple&, unsigned int, unsigned int, const OpTuple&)$/;"	f	struct:cv::cuda::device::reduce_detail::For
mergeShfl	opencv2/core/cuda/detail/reduce.hpp	/^        __device__ __forceinline__ void mergeShfl(T& val, unsigned int delta, unsigned int width, const Op& op)$/;"	f	namespace:cv::cuda::device::reduce_detail
mergeShfl	opencv2/core/cuda/detail/reduce.hpp	/^        __device__ __forceinline__ void mergeShfl(const thrust::tuple<R0, R1, R2, R3, R4, R5, R6, R7, R8, R9>& val,$/;"	f	namespace:cv::cuda::device::reduce_detail
mergeShfl	opencv2/core/cuda/detail/reduce_key_val.hpp	/^            static __device__ void mergeShfl(const KeyReferenceTuple& key, const ValReferenceTuple& val, const CmpTuple& cmp, unsigned int delta, int width)$/;"	f	struct:cv::cuda::device::reduce_key_val_detail::For
mergeShfl	opencv2/core/cuda/detail/reduce_key_val.hpp	/^            static __device__ void mergeShfl(const KeyReferenceTuple&, const ValReferenceTuple&, const CmpTuple&, unsigned int, int)$/;"	f	struct:cv::cuda::device::reduce_key_val_detail::For
mergeShfl	opencv2/core/cuda/detail/reduce_key_val.hpp	/^        __device__ __forceinline__ void mergeShfl(K& key, V& val, const Cmp& cmp, unsigned int delta, int width)$/;"	f	namespace:cv::cuda::device::reduce_key_val_detail
mergeShfl	opencv2/core/cuda/detail/reduce_key_val.hpp	/^        __device__ __forceinline__ void mergeShfl(K& key,$/;"	f	namespace:cv::cuda::device::reduce_key_val_detail
mergeShfl	opencv2/core/cuda/detail/reduce_key_val.hpp	/^        __device__ __forceinline__ void mergeShfl(const thrust::tuple<KR0, KR1, KR2, KR3, KR4, KR5, KR6, KR7, KR8, KR9>& key,$/;"	f	namespace:cv::cuda::device::reduce_key_val_detail
mergeShfl	opencv2/cudev/block/detail/reduce.hpp	/^        __device__ __forceinline__ static void mergeShfl(const ValTuple&, uint, uint, const OpTuple&)$/;"	f	struct:cv::cudev::block_reduce_detail::For
mergeShfl	opencv2/cudev/block/detail/reduce.hpp	/^        __device__ static void mergeShfl(const ValTuple& val, uint delta, uint width, const OpTuple& op)$/;"	f	struct:cv::cudev::block_reduce_detail::For
mergeShfl	opencv2/cudev/block/detail/reduce.hpp	/^    __device__ __forceinline__ void mergeShfl(T& val, uint delta, uint width, const Op& op)$/;"	f	namespace:cv::cudev::block_reduce_detail
mergeShfl	opencv2/cudev/block/detail/reduce.hpp	/^    __device__ __forceinline__ void mergeShfl(const tuple<R0, R1, R2, R3, R4, R5, R6, R7, R8, R9>& val,$/;"	f	namespace:cv::cudev::block_reduce_detail
mergeShfl	opencv2/cudev/warp/detail/reduce.hpp	/^        __device__ __forceinline__ static void mergeShfl(const ValTuple&, uint, uint, const OpTuple&)$/;"	f	struct:cv::cudev::warp_reduce_detail::For
mergeShfl	opencv2/cudev/warp/detail/reduce.hpp	/^        __device__ static void mergeShfl(const ValTuple& val, uint delta, uint width, const OpTuple& op)$/;"	f	struct:cv::cudev::warp_reduce_detail::For
mergeShfl	opencv2/cudev/warp/detail/reduce.hpp	/^    __device__ __forceinline__ void mergeShfl(T& val, uint delta, uint width, const Op& op)$/;"	f	namespace:cv::cudev::warp_reduce_detail
mergeShfl	opencv2/cudev/warp/detail/reduce.hpp	/^    __device__ __forceinline__ void mergeShfl(const tuple<R0, R1, R2, R3, R4, R5, R6, R7, R8, R9>& val,$/;"	f	namespace:cv::cudev::warp_reduce_detail
merge_minimal_n	5/parallel/settings.h	/^    _SequenceIndex              merge_minimal_n;$/;"	m	struct:__gnu_parallel::_Settings
merge_oversampling	5/parallel/settings.h	/^    unsigned int                merge_oversampling;$/;"	m	struct:__gnu_parallel::_Settings
merge_splitting	5/parallel/settings.h	/^    _SplittingAlgorithm         merge_splitting;$/;"	m	struct:__gnu_parallel::_Settings
mergedDescriptors	opencv2/features2d.hpp	/^        Mat mergedDescriptors;$/;"	m	class:cv::DescriptorMatcher::DescriptorCollection
mergedDescriptors	opencv2/features2d.hpp	/^    DescriptorCollection mergedDescriptors;$/;"	m	class:cv::FlannBasedMatcher
messages	cpp_src/locale_classes.h	/^    static const category messages	= 1L << 5;$/;"	m	class:std::locale
messages	cpp_src/locale_facets.h	/^    class messages : public locale::facet, public messages_base$/;"	c	namespace:std
messages_base	cpp_src/locale_facets.h	/^  struct messages_base$/;"	s	namespace:std
messages_byname	cpp_src/locale_facets.h	/^    class messages_byname : public messages<_CharT>$/;"	c	namespace:std
metadata	5/ext/pb_ds/detail/pat_trie_/traits.hpp	/^      typedef base_type::_Metadata<metadata_type, _Alloc>				metadata;$/;"	t	struct:__gnu_pbds::detail::trie_traits
metadata	5/ext/pb_ds/detail/pat_trie_/traits.hpp	/^      typedef base_type::_Metadata<metadata_type, _Alloc>      	metadata;$/;"	t	struct:__gnu_pbds::detail::trie_traits
metadata_allocator	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      typedef typename _Alloc::template rebind<metadata_type>::other metadata_allocator;$/;"	t	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
metadata_const_reference	5/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp	/^      metadata_const_reference;$/;"	t	class:__gnu_pbds::detail::bin_search_tree_const_node_it_
metadata_const_reference	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	/^      metadata_const_reference;$/;"	t	class:__gnu_pbds::detail::ov_tree_node_const_it_
metadata_const_reference	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      typedef typename metadata_allocator::const_reference metadata_const_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
metadata_const_reference	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename __rebind_ma::const_reference    metadata_const_reference;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_Node_citer
metadata_const_reference	5/ext/pb_ds/detail/rb_tree_map_/node.hpp	/^      metadata_const_reference;$/;"	t	struct:__gnu_pbds::detail::rb_tree_node_
metadata_const_reference	5/ext/pb_ds/detail/splay_tree_/node.hpp	/^      metadata_const_reference;$/;"	t	struct:__gnu_pbds::detail::splay_tree_node_
metadata_const_reference	5/ext/pb_ds/tree_policy.hpp	/^    typedef typename __rebind_m::const_reference       metadata_const_reference;$/;"	t	class:__gnu_pbds::tree_order_statistics_node_update
metadata_const_reference	5/ext/pb_ds/trie_policy.hpp	/^    typedef typename __rebind_ma::const_reference      metadata_const_reference;$/;"	t	class:__gnu_pbds::trie_order_statistics_node_update
metadata_pointer	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      typedef typename metadata_allocator::pointer 	metadata_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
metadata_reference	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      typedef typename metadata_allocator::reference 	metadata_reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
metadata_reference	5/ext/pb_ds/detail/rb_tree_map_/node.hpp	/^      metadata_reference;$/;"	t	struct:__gnu_pbds::detail::rb_tree_node_
metadata_reference	5/ext/pb_ds/detail/splay_tree_/node.hpp	/^      metadata_reference;$/;"	t	struct:__gnu_pbds::detail::splay_tree_node_
metadata_reference	5/ext/pb_ds/list_update_policy.hpp	/^      typedef typename __rebind_m::other::reference 	metadata_reference;$/;"	t	class:__gnu_pbds::lu_counter_policy
metadata_reference	5/ext/pb_ds/list_update_policy.hpp	/^     typedef typename __rebind_m::other::reference 	metadata_reference;$/;"	t	class:__gnu_pbds::lu_move_to_front_policy
metadata_reference	5/ext/pb_ds/tree_policy.hpp	/^    typedef typename __rebind_m::reference 		metadata_reference;$/;"	t	class:__gnu_pbds::tree_order_statistics_node_update
metadata_reference	5/ext/pb_ds/trie_policy.hpp	/^    typedef typename __rebind_ma::reference 		metadata_reference;$/;"	t	class:__gnu_pbds::trie_order_statistics_node_update
metadata_type	5/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp	/^      typedef typename Node::metadata_type metadata_type;$/;"	t	class:__gnu_pbds::detail::bin_search_tree_const_node_it_
metadata_type	5/ext/pb_ds/detail/left_child_next_sibling_heap_/node.hpp	/^      typedef _Metadata 			metadata_type;$/;"	t	struct:__gnu_pbds::detail::left_child_next_sibling_heap_node_
metadata_type	5/ext/pb_ds/detail/list_update_policy/sample_update_policy.hpp	/^    typedef some_metadata_type metadata_type;$/;"	t	struct:__gnu_pbds::sample_update_policy
metadata_type	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	/^      typedef Metadata_Type metadata_type;$/;"	t	class:__gnu_pbds::detail::ov_tree_node_const_it_
metadata_type	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      typedef typename traits_type::metadata_type 	metadata_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
metadata_type	5/ext/pb_ds/detail/ov_tree_map_/traits.hpp	/^      metadata_type;$/;"	t	struct:__gnu_pbds::detail::tree_traits
metadata_type	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	  typedef Metadata     					metadata_type;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Metadata
metadata_type	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	  typedef null_type 					metadata_type;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Metadata
metadata_type	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename Node::metadata_type 		metadata_type;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_Node_citer
metadata_type	5/ext/pb_ds/detail/pat_trie_/traits.hpp	/^      typedef typename trie_node_metadata_dispatch<Key, Mapped, _ATraits, Node_Update, _Alloc>::type metadata_type;$/;"	t	struct:__gnu_pbds::detail::trie_traits
metadata_type	5/ext/pb_ds/detail/pat_trie_/traits.hpp	/^      typedef typename trie_node_metadata_dispatch<Key, null_type, _ATraits, Node_Update, _Alloc>::type metadata_type;$/;"	t	struct:__gnu_pbds::detail::trie_traits
metadata_type	5/ext/pb_ds/detail/rb_tree_map_/node.hpp	/^      typedef Metadata 			metadata_type;$/;"	t	struct:__gnu_pbds::detail::rb_tree_node_
metadata_type	5/ext/pb_ds/detail/rb_tree_map_/node.hpp	/^      typedef null_type 	metadata_type;$/;"	t	struct:__gnu_pbds::detail::rb_tree_node_
metadata_type	5/ext/pb_ds/detail/splay_tree_/node.hpp	/^      typedef Metadata metadata_type;$/;"	t	struct:__gnu_pbds::detail::splay_tree_node_
metadata_type	5/ext/pb_ds/detail/splay_tree_/node.hpp	/^      typedef null_type metadata_type;$/;"	t	struct:__gnu_pbds::detail::splay_tree_node_
metadata_type	5/ext/pb_ds/detail/tree_policy/sample_tree_node_update.hpp	/^    typedef std::size_t metadata_type;$/;"	t	class:__gnu_pbds::sample_tree_node_update
metadata_type	5/ext/pb_ds/detail/trie_policy/sample_trie_node_update.hpp	/^    typedef std::size_t 		metadata_type;$/;"	t	class:__gnu_pbds::sample_trie_node_update
metadata_type	5/ext/pb_ds/detail/trie_policy/trie_policy_base.hpp	/^      typedef null_type 				metadata_type;$/;"	t	class:__gnu_pbds::detail::trie_policy_base
metadata_type	5/ext/pb_ds/list_update_policy.hpp	/^      typedef detail::lu_counter_metadata<size_type> 	metadata_type;$/;"	t	class:__gnu_pbds::lu_counter_policy
metadata_type	5/ext/pb_ds/list_update_policy.hpp	/^     typedef null_type 					metadata_type;$/;"	t	class:__gnu_pbds::lu_move_to_front_policy
metadata_type	5/ext/pb_ds/tree_policy.hpp	/^    typedef size_type 					metadata_type;$/;"	t	class:__gnu_pbds::tree_order_statistics_node_update
metadata_type	5/ext/pb_ds/trie_policy.hpp	/^    typedef null_type 					metadata_type;$/;"	t	class:__gnu_pbds::trie_prefix_search_node_update
metadata_type	5/ext/pb_ds/trie_policy.hpp	/^    typedef size_type 					metadata_type;$/;"	t	class:__gnu_pbds::trie_order_statistics_node_update
method_	opencv2/videostab/inpainting.hpp	/^    int method_;$/;"	m	class:cv::videostab::ColorInpainter
mid_pointer	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	/^      mid_pointer(Ptr p_begin, Ptr p_end)$/;"	f	class:__gnu_pbds::detail::ov_tree_node_const_it_
mid_pointer	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      mid_pointer(Ptr p_begin, Ptr p_end)$/;"	f	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
middleSplit	opencv2/flann/kdtree_single_index.h	/^    void middleSplit(int* ind, int count, int& index, int& cutfeat, DistanceType& cutval, const BoundingBox& bbox)$/;"	f	class:cvflann::KDTreeSingleIndex
middleSplit_	opencv2/flann/kdtree_single_index.h	/^    void middleSplit_(int* ind, int count, int& index, int& cutfeat, DistanceType& cutval, const BoundingBox& bbox)$/;"	f	class:cvflann::KDTreeSingleIndex
min	5/parallel/base.h	/^    min(const _Tp& __a, const _Tp& __b)$/;"	f	namespace:__gnu_parallel
min	cpp_src/stl_algobase.h	/^    min(const _Tp& __a, const _Tp& __b)$/;"	f	namespace:std
min	cpp_src/stl_algobase.h	/^    min(const _Tp& __a, const _Tp& __b, _Compare __comp)$/;"	f	namespace:std
min	cpp_src/valarray_after.h	/^    _Expr<_Clos, _Tp>::min() const$/;"	f	class:std::_Expr
min	opencv2/core/cuda/limits.hpp	/^    __device__ __forceinline__ static bool min() { return false; }$/;"	f	struct:cv::cuda::device::numeric_limits
min	opencv2/core/cuda/limits.hpp	/^    __device__ __forceinline__ static double min() { return DBL_MIN; }$/;"	f	struct:cv::cuda::device::numeric_limits
min	opencv2/core/cuda/limits.hpp	/^    __device__ __forceinline__ static float min() { return FLT_MIN; }$/;"	f	struct:cv::cuda::device::numeric_limits
min	opencv2/core/cuda/limits.hpp	/^    __device__ __forceinline__ static int min() { return INT_MIN; }$/;"	f	struct:cv::cuda::device::numeric_limits
min	opencv2/core/cuda/limits.hpp	/^    __device__ __forceinline__ static short min() { return SHRT_MIN; }$/;"	f	struct:cv::cuda::device::numeric_limits
min	opencv2/core/cuda/limits.hpp	/^    __device__ __forceinline__ static signed char min() { return SCHAR_MIN; }$/;"	f	struct:cv::cuda::device::numeric_limits
min	opencv2/core/cuda/limits.hpp	/^    __device__ __forceinline__ static unsigned char min() { return 0; }$/;"	f	struct:cv::cuda::device::numeric_limits
min	opencv2/core/cuda/limits.hpp	/^    __device__ __forceinline__ static unsigned int min() { return 0; }$/;"	f	struct:cv::cuda::device::numeric_limits
min	opencv2/core/cuda/limits.hpp	/^    __device__ __forceinline__ static unsigned short min() { return 0; }$/;"	f	struct:cv::cuda::device::numeric_limits
min	opencv2/core/cvdef.h	57;"	d
min	opencv2/core/mat.inl.hpp	/^MatExpr min(const Mat_<_Tp>& a, const Mat_<_Tp>& b)$/;"	f	namespace:cv
min	opencv2/core/mat.inl.hpp	/^MatExpr min(const Mat_<_Tp>& a, double s)$/;"	f	namespace:cv
min	opencv2/core/mat.inl.hpp	/^MatExpr min(double s, const Mat_<_Tp>& a)$/;"	f	namespace:cv
min	opencv2/core/private.hpp	65;"	d
min	opencv2/cudev/grid/detail/reduce.hpp	/^        __device__ __forceinline__ static void min(R* ptr, R val)$/;"	f	struct:cv::cudev::grid_reduce_detail::AtomicUnroll
min	opencv2/cudev/grid/detail/reduce.hpp	/^        __device__ __forceinline__ static void min(R* ptr, val_type val)$/;"	f	struct:cv::cudev::grid_reduce_detail::AtomicUnroll
min	opencv2/cudev/util/limits.hpp	/^    __device__ __forceinline__ static bool min() { return false; }$/;"	f	struct:cv::cudev::numeric_limits
min	opencv2/cudev/util/limits.hpp	/^    __device__ __forceinline__ static double min() { return DBL_MIN; }$/;"	f	struct:cv::cudev::numeric_limits
min	opencv2/cudev/util/limits.hpp	/^    __device__ __forceinline__ static float min() { return FLT_MIN; }$/;"	f	struct:cv::cudev::numeric_limits
min	opencv2/cudev/util/limits.hpp	/^    __device__ __forceinline__ static int min() { return INT_MIN; }$/;"	f	struct:cv::cudev::numeric_limits
min	opencv2/cudev/util/limits.hpp	/^    __device__ __forceinline__ static schar min() { return SCHAR_MIN; }$/;"	f	struct:cv::cudev::numeric_limits
min	opencv2/cudev/util/limits.hpp	/^    __device__ __forceinline__ static short min() { return SHRT_MIN; }$/;"	f	struct:cv::cudev::numeric_limits
min	opencv2/cudev/util/limits.hpp	/^    __device__ __forceinline__ static uchar min() { return 0; }$/;"	f	struct:cv::cudev::numeric_limits
min	opencv2/cudev/util/limits.hpp	/^    __device__ __forceinline__ static uint min() { return 0; }$/;"	f	struct:cv::cudev::numeric_limits
min	opencv2/cudev/util/limits.hpp	/^    __device__ __forceinline__ static ushort min() { return 0; }$/;"	f	struct:cv::cudev::numeric_limits
minArea	opencv2/cudalegacy.hpp	/^    float minArea; \/\/!< Discard foreground blobs whose bounding box is smaller than this threshold.$/;"	m	struct:cv::cuda::FGDParams
minArea	opencv2/features2d.hpp	/^      CV_PROP_RW float minArea, maxArea;$/;"	m	struct:cv::SimpleBlobDetector::Params
minCircularity	opencv2/features2d.hpp	/^      CV_PROP_RW float minCircularity, maxCircularity;$/;"	m	struct:cv::SimpleBlobDetector::Params
minConvexity	opencv2/features2d.hpp	/^      CV_PROP_RW float minConvexity, maxConvexity;$/;"	m	struct:cv::SimpleBlobDetector::Params
minDetectionPeriod	opencv2/objdetect/detection_based_tracker.hpp	/^            int minDetectionPeriod; \/\/the minimal time between run of the big object detector (on the whole frame) in ms (1000 mean 1 sec), default=0$/;"	m	struct:cv::DetectionBasedTracker::Parameters
minDisparity	opencv2/calib3d/calib3d_c.h	/^    int minDisparity;  \/\/ minimum disparity (can be negative)$/;"	m	struct:CvStereoBMState
minDistBetweenBlobs	opencv2/features2d.hpp	/^      CV_PROP_RW float minDistBetweenBlobs;$/;"	m	struct:cv::SimpleBlobDetector::Params
minDist_	opencv2/stitching/detail/seam_finders.hpp	/^        int minDist_;$/;"	m	class:cv::detail::DpSeamFinder::ClosePoints
minInertiaRatio	opencv2/features2d.hpp	/^      CV_PROP_RW float minInertiaRatio, maxInertiaRatio;$/;"	m	struct:cv::SimpleBlobDetector::Params
minInlierRatio	opencv2/videostab/global_motion.hpp	/^    float minInlierRatio() const { return minInlierRatio_; }$/;"	f	class:cv::videostab::MotionEstimatorRansacL2
minInlierRatio_	opencv2/videostab/global_motion.hpp	/^    float minInlierRatio_;$/;"	m	class:cv::videostab::MotionEstimatorRansacL2
minMaxLoc	opencv2/cudev/grid/detail/minmaxloc.hpp	/^    __host__ void minMaxLoc(const SrcPtr& src, ResType* minVal, ResType* maxVal, int* minLoc, int* maxLoc, const MaskPtr& mask, int rows, int cols, cudaStream_t stream)$/;"	f	namespace:cv::cudev::grid_minmaxloc_detail
minMaxLoc_pass_1	opencv2/cudev/grid/detail/minmaxloc.hpp	/^    __global__ void minMaxLoc_pass_1(const SrcPtr src, ResType* minVal, ResType* maxVal, int* minLoc, int* maxLoc, const MaskPtr mask, const int rows, const int cols, const int patch_y, const int patch_x)$/;"	f	namespace:cv::cudev::grid_minmaxloc_detail
minMaxLoc_pass_2	opencv2/cudev/grid/detail/minmaxloc.hpp	/^    __global__ void minMaxLoc_pass_2(T* minMal, T* maxVal, int* minLoc, int* maxLoc, int count)$/;"	f	namespace:cv::cudev::grid_minmaxloc_detail
minMaxVal	opencv2/cudev/grid/detail/reduce.hpp	/^    __host__ void minMaxVal(const SrcPtr& src, ResType* result, const MaskPtr& mask, int rows, int cols, cudaStream_t stream)$/;"	f	namespace:cv::cudev::grid_reduce_detail
minMaxVal_	opencv2/cudev/expr/reduction.hpp	/^minMaxVal_(const SrcPtr& src)$/;"	f	namespace:cv::cudev
minNeighbours	opencv2/objdetect/detection_based_tracker.hpp	/^                int minNeighbours;$/;"	m	class:cv::DetectionBasedTracker::IDetector
minObjSize	opencv2/objdetect/detection_based_tracker.hpp	/^                cv::Size minObjSize;$/;"	m	class:cv::DetectionBasedTracker::IDetector
minRepeatability	opencv2/features2d.hpp	/^      CV_PROP_RW size_t minRepeatability;$/;"	m	struct:cv::SimpleBlobDetector::Params
minThreshold	opencv2/features2d.hpp	/^      CV_PROP_RW float minThreshold;$/;"	m	struct:cv::SimpleBlobDetector::Params
minVal	opencv2/cudev/grid/detail/reduce.hpp	/^    __host__ void minVal(const SrcPtr& src, ResType* result, const MaskPtr& mask, int rows, int cols, cudaStream_t stream)$/;"	f	namespace:cv::cudev::grid_reduce_detail
minVal	opencv2/ml.hpp	/^    double minVal; \/\/!< Minimum value of the statmodel parameter. Default value is 0.$/;"	m	class:cv::ml::ParamGrid
minVal_	opencv2/cudev/expr/reduction.hpp	/^minVal_(const SrcPtr& src)$/;"	f	namespace:cv::cudev
min_	opencv2/cudev/expr/per_element_func.hpp	/^min_(const SrcPtr1& src1, const SrcPtr2& src2)$/;"	f	namespace:cv::cudev
min_e_val	5/ext/pb_ds/trie_policy.hpp	/^	min_e_val = Min_E_Val,$/;"	e	enum:__gnu_pbds::trie_string_access_traits::__anon12
min_element	cpp_src/stl_algo.h	/^    min_element(_ForwardIterator __first, _ForwardIterator __last)$/;"	f	namespace:std
min_element	cpp_src/stl_algo.h	/^    min_element(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std
min_element_minimal_n	5/parallel/settings.h	/^    _SequenceIndex              min_element_minimal_n;$/;"	m	struct:__gnu_parallel::_Settings
min_size	5/ext/pb_ds/detail/binary_heap_/resize_policy.hpp	/^      const _Tp resize_policy<_Tp>::min_size;$/;"	m	class:__gnu_pbds::detail::resize_policy
min_size	5/ext/pb_ds/detail/binary_heap_/resize_policy.hpp	/^      static const _Tp	min_size = 16;$/;"	m	class:__gnu_pbds::detail::resize_policy
mindist	opencv2/flann/result_set.h	/^    DistanceType mindist;     \/* Minimum distance to query for all nodes below. *\/$/;"	m	struct:cvflann::BranchStruct
minimum	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ minimum() {}$/;"	f	struct:cv::cuda::device::minimum
minimum	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ minimum(const minimum&) {}$/;"	f	struct:cv::cuda::device::minimum
minimum	opencv2/core/cuda/functional.hpp	/^    template <typename T> struct minimum : binary_function<T, T, T>$/;"	s	namespace:cv::cuda::device
minimum	opencv2/cudev/functional/functional.hpp	/^template <typename T> struct minimum : binary_function<T, T, T>$/;"	s	namespace:cv::cudev
minop	opencv2/cudev/grid/detail/reduce.hpp	/^    template <typename T> struct minop : minimum<T>$/;"	s	namespace:cv::cudev::grid_reduce_detail
minus	cpp_src/stl_function.h	/^    struct minus : public binary_function<_Tp, _Tp, _Tp>$/;"	s	namespace:std
minus	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ minus() {}$/;"	f	struct:cv::cuda::device::minus
minus	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ minus(const minus&) {}$/;"	f	struct:cv::cuda::device::minus
minus	opencv2/core/cuda/functional.hpp	/^    template <typename T> struct minus : binary_function<T, T, T>$/;"	s	namespace:cv::cuda::device
minus	opencv2/cudev/functional/functional.hpp	/^template <typename T> struct minus : binary_function<T, T, T>$/;"	s	namespace:cv::cudev
minusDelta	opencv2/imgproc.hpp	/^    int minusDelta, plusDelta;$/;"	m	class:cv::LineIterator
minusStep	opencv2/imgproc.hpp	/^    int minusStep, plusStep;$/;"	m	class:cv::LineIterator
minus_delta	opencv2/core/types_c.h	/^    int  minus_delta;$/;"	m	struct:CvLineIterator
minus_step	opencv2/core/types_c.h	/^    int  minus_step;$/;"	m	struct:CvLineIterator
misc	5/sun/misc/Service.h	/^    namespace misc$/;"	n	namespace:sun
misc	5/sun/misc/ServiceConfigurationError.h	/^    namespace misc$/;"	n	namespace:sun
misc	5/sun/misc/Unsafe.h	/^    namespace misc$/;"	n	namespace:sun
misc	5/sun/reflect/misc/ReflectUtil.h	/^      namespace misc$/;"	n	namespace:sun::reflect
mismatch	cpp_src/stl_algobase.h	/^    mismatch(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	namespace:std
missingValue	opencv2/ml.hpp	/^    static inline float missingValue() { return FLT_MAX; }$/;"	f	class:cv::ml::TrainData
ml	opencv2/ml.hpp	/^namespace ml$/;"	n	namespace:cv
mod_based_base	5/ext/pb_ds/hash_policy.hpp	/^    typedef detail::mod_based_range_hashing<size_type> mod_based_base;$/;"	t	class:__gnu_pbds::direct_mod_range_hashing
mod_based_range_hashing	5/ext/pb_ds/detail/hash_fn/mod_based_range_hashing.hpp	/^    class mod_based_range_hashing$/;"	c	namespace:__gnu_pbds::detail
model_	opencv2/videostab/motion_stabilizing.hpp	/^    MotionModel model_;$/;"	m	class:cv::videostab::LpMotionStabilizer
modify	5/ext/pb_ds/detail/binary_heap_/insert_fn_imps.hpp	/^modify(point_iterator it, const_reference r_new_val)$/;"	f	class:PB_DS_CLASS_C_DEC
modify	5/ext/pb_ds/detail/binomial_heap_base_/insert_fn_imps.hpp	/^modify(point_iterator it, const_reference r_new_val)$/;"	f	class:PB_DS_CLASS_C_DEC
modify	5/ext/pb_ds/detail/pairing_heap_/insert_fn_imps.hpp	/^modify(point_iterator it, const_reference r_new_val)$/;"	f	class:PB_DS_CLASS_C_DEC
modify	5/ext/pb_ds/detail/rc_binomial_heap_/insert_fn_imps.hpp	/^modify(point_iterator it, const_reference r_new_val)$/;"	f	class:PB_DS_CLASS_C_DEC
modify	5/ext/pb_ds/detail/thin_heap_/insert_fn_imps.hpp	/^modify(point_iterator it, const_reference r_new_val)$/;"	f	class:PB_DS_CLASS_C_DEC
modulus	cpp_src/stl_function.h	/^    struct modulus : public binary_function<_Tp, _Tp, _Tp>$/;"	s	namespace:std
modulus	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ modulus() {}$/;"	f	struct:cv::cuda::device::modulus
modulus	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ modulus(const modulus&) {}$/;"	f	struct:cv::cuda::device::modulus
modulus	opencv2/core/cuda/functional.hpp	/^    template <typename T> struct modulus : binary_function<T, T, T>$/;"	s	namespace:cv::cuda::device
modulus	opencv2/cudev/functional/functional.hpp	/^template <typename T> struct modulus : binary_function<T, T, T>$/;"	s	namespace:cv::cudev
monetary	cpp_src/locale_classes.h	/^    static const category monetary	= 1L << 4;$/;"	m	class:std::locale
money_base	cpp_src/locale_facets.h	/^  class money_base$/;"	c	namespace:std
money_get	cpp_src/locale_facets.h	/^      money_get(size_t __refs = 0) : facet(__refs) { }$/;"	f	class:std::money_get
money_get	cpp_src/locale_facets.h	/^    class money_get : public locale::facet$/;"	c	namespace:std
money_put	cpp_src/locale_facets.h	/^      money_put(size_t __refs = 0) : facet(__refs) { }$/;"	f	class:std::money_put
money_put	cpp_src/locale_facets.h	/^    class money_put : public locale::facet$/;"	c	namespace:std
moneypunct	cpp_src/locale_facets.h	/^      moneypunct(__c_locale __cloc, const char* __s, size_t __refs = 0)$/;"	f	class:std::moneypunct
moneypunct	cpp_src/locale_facets.h	/^      moneypunct(__cache_type* __cache, size_t __refs = 0)$/;"	f	class:std::moneypunct
moneypunct	cpp_src/locale_facets.h	/^      moneypunct(size_t __refs = 0) : facet(__refs), _M_data(NULL)$/;"	f	class:std::moneypunct
moneypunct	cpp_src/locale_facets.h	/^    class moneypunct : public locale::facet, public money_base$/;"	c	namespace:std
moneypunct_byname	cpp_src/locale_facets.h	/^      moneypunct_byname(const char* __s, size_t __refs = 0)$/;"	f	class:std::moneypunct_byname
moneypunct_byname	cpp_src/locale_facets.h	/^    class moneypunct_byname : public moneypunct<_CharT, _Intl>$/;"	c	namespace:std
morphologyDefaultBorderValue	opencv2/imgproc.hpp	/^static inline Scalar morphologyDefaultBorderValue() { return Scalar::all(DBL_MAX); }$/;"	f	namespace:cv
motionEstimator	opencv2/videostab/stabilizer.hpp	/^    Ptr<ImageMotionEstimatorBase> motionEstimator() const { return motionEstimator_; }$/;"	f	class:cv::videostab::StabilizerBase
motionEstimator	opencv2/videostab/wobble_suppression.hpp	/^    Ptr<ImageMotionEstimatorBase> motionEstimator() const { return motionEstimator_; }$/;"	f	class:cv::videostab::WobbleSuppressorBase
motionEstimator_	opencv2/videostab/global_motion.hpp	/^    Ptr<ImageMotionEstimatorBase> motionEstimator_;$/;"	m	class:cv::videostab::ToFileMotionWriter
motionEstimator_	opencv2/videostab/global_motion.hpp	/^    Ptr<MotionEstimatorBase> motionEstimator_;$/;"	m	class:cv::videostab::KeypointBasedMotionEstimator
motionEstimator_	opencv2/videostab/global_motion.hpp	/^    Ptr<MotionEstimatorBase> motionEstimator_;$/;"	m	class:cv::videostab::KeypointBasedMotionEstimatorGpu
motionEstimator_	opencv2/videostab/stabilizer.hpp	/^    Ptr<ImageMotionEstimatorBase> motionEstimator_;$/;"	m	class:cv::videostab::StabilizerBase
motionEstimator_	opencv2/videostab/wobble_suppression.hpp	/^    Ptr<ImageMotionEstimatorBase> motionEstimator_;$/;"	m	class:cv::videostab::WobbleSuppressorBase
motionFilter	opencv2/videostab/stabilizer.hpp	/^    Ptr<MotionFilterBase> motionFilter() const { return motionFilter_; }$/;"	f	class:cv::videostab::OnePassStabilizer
motionFilter_	opencv2/videostab/stabilizer.hpp	/^    Ptr<MotionFilterBase> motionFilter_;$/;"	m	class:cv::videostab::OnePassStabilizer
motionModel	opencv2/videostab/global_motion.hpp	/^    virtual MotionModel motionModel() const { return motionEstimator_->motionModel(); }$/;"	f	class:cv::videostab::KeypointBasedMotionEstimator
motionModel	opencv2/videostab/global_motion.hpp	/^    virtual MotionModel motionModel() const { return motionEstimator_->motionModel(); }$/;"	f	class:cv::videostab::KeypointBasedMotionEstimatorGpu
motionModel	opencv2/videostab/global_motion.hpp	/^    virtual MotionModel motionModel() const { return motionEstimator_->motionModel(); }$/;"	f	class:cv::videostab::ToFileMotionWriter
motionModel	opencv2/videostab/global_motion.hpp	/^    virtual MotionModel motionModel() const { return motionModel_; }$/;"	f	class:cv::videostab::ImageMotionEstimatorBase
motionModel	opencv2/videostab/global_motion.hpp	/^    virtual MotionModel motionModel() const { return motionModel_; }$/;"	f	class:cv::videostab::MotionEstimatorBase
motionModel	opencv2/videostab/inpainting.hpp	/^    virtual MotionModel motionModel() const { return motionModel_; }$/;"	f	class:cv::videostab::InpainterBase
motionModel	opencv2/videostab/motion_stabilizing.hpp	/^    MotionModel motionModel() const { return model_; }$/;"	f	class:cv::videostab::LpMotionStabilizer
motionModel_	opencv2/videostab/global_motion.hpp	/^    MotionModel motionModel_;$/;"	m	class:cv::videostab::ImageMotionEstimatorBase
motionModel_	opencv2/videostab/global_motion.hpp	/^    MotionModel motionModel_;$/;"	m	class:cv::videostab::MotionEstimatorBase
motionModel_	opencv2/videostab/inpainting.hpp	/^    MotionModel motionModel_;$/;"	m	class:cv::videostab::InpainterBase
motionStabilizer	opencv2/videostab/stabilizer.hpp	/^    Ptr<IMotionStabilizer> motionStabilizer() const { return motionStabilizer_; }$/;"	f	class:cv::videostab::TwoPassStabilizer
motionStabilizer_	opencv2/videostab/stabilizer.hpp	/^    Ptr<IMotionStabilizer> motionStabilizer_;$/;"	m	class:cv::videostab::TwoPassStabilizer
motions	opencv2/videostab/deblurring.hpp	/^    virtual const std::vector<Mat>& motions() const { return *motions_; }$/;"	f	class:cv::videostab::DeblurerBase
motions	opencv2/videostab/inpainting.hpp	/^    virtual const std::vector<Mat>& motions() const { return *motions_; }$/;"	f	class:cv::videostab::InpainterBase
motions	opencv2/videostab/wobble_suppression.hpp	/^    virtual const std::vector<Mat>& motions() const { return *motions_; }$/;"	f	class:cv::videostab::WobbleSuppressorBase
motions2	opencv2/videostab/wobble_suppression.hpp	/^    virtual const std::vector<Mat>& motions2() const { return *motions2_; }$/;"	f	class:cv::videostab::WobbleSuppressorBase
motions2_	opencv2/videostab/stabilizer.hpp	/^    std::vector<Mat> motions2_;$/;"	m	class:cv::videostab::TwoPassStabilizer
motions2_	opencv2/videostab/wobble_suppression.hpp	/^    const std::vector<Mat> *motions2_;$/;"	m	class:cv::videostab::WobbleSuppressorBase
motions_	opencv2/videostab/deblurring.hpp	/^    const std::vector<Mat> *motions_;$/;"	m	class:cv::videostab::DeblurerBase
motions_	opencv2/videostab/inpainting.hpp	/^    const std::vector<Mat> *motions_;$/;"	m	class:cv::videostab::InpainterBase
motions_	opencv2/videostab/stabilizer.hpp	/^    std::vector<Mat> motions_; \/\/ motions_[i] is the motion from i-th to i+1-th frame$/;"	m	class:cv::videostab::StabilizerBase
motions_	opencv2/videostab/wobble_suppression.hpp	/^    const std::vector<Mat> *motions_;$/;"	m	class:cv::videostab::WobbleSuppressorBase
move	cpp_src/char_traits.h	/^    move(char_type* __s1, const char_type* __s2, std::size_t __n)$/;"	f	class:char_traits
move	opencv2/flann/any.h	/^    virtual void move(void* const* src, void** dest) { *dest = *src; }$/;"	f	struct:cvflann::anyimpl::small_any_policy
move	opencv2/flann/any.h	/^    virtual void move(void* const* src, void** dest)$/;"	f	struct:cvflann::anyimpl::big_any_policy
mpi	opencv2/flann/hdf5.h	/^namespace mpi$/;"	n	namespace:cvflann
msg	opencv2/core.hpp	/^    String msg; \/\/\/< the formatted error message$/;"	m	class:cv::Exception
mti	opencv2/core.hpp	/^    int mti;$/;"	m	class:cv::RNG_MT19937
mtx	opencv2/flann/kmeans_index.h	/^        cv::Mutex& mtx;$/;"	m	class:cvflann::KMeansIndex::KMeansDistanceComputer
mu02	opencv2/core/types.hpp	/^    CV_PROP_RW double  mu20, mu11, mu02, mu30, mu21, mu12, mu03;$/;"	m	class:cv::Moments
mu02	opencv2/imgproc/types_c.h	/^    double  mu20, mu11, mu02, mu30, mu21, mu12, mu03; \/**< central moments *\/$/;"	m	struct:CvMoments
mu03	opencv2/core/types.hpp	/^    CV_PROP_RW double  mu20, mu11, mu02, mu30, mu21, mu12, mu03;$/;"	m	class:cv::Moments
mu03	opencv2/imgproc/types_c.h	/^    double  mu20, mu11, mu02, mu30, mu21, mu12, mu03; \/**< central moments *\/$/;"	m	struct:CvMoments
mu11	opencv2/core/types.hpp	/^    CV_PROP_RW double  mu20, mu11, mu02, mu30, mu21, mu12, mu03;$/;"	m	class:cv::Moments
mu11	opencv2/imgproc/types_c.h	/^    double  mu20, mu11, mu02, mu30, mu21, mu12, mu03; \/**< central moments *\/$/;"	m	struct:CvMoments
mu12	opencv2/core/types.hpp	/^    CV_PROP_RW double  mu20, mu11, mu02, mu30, mu21, mu12, mu03;$/;"	m	class:cv::Moments
mu12	opencv2/imgproc/types_c.h	/^    double  mu20, mu11, mu02, mu30, mu21, mu12, mu03; \/**< central moments *\/$/;"	m	struct:CvMoments
mu20	opencv2/core/types.hpp	/^    CV_PROP_RW double  mu20, mu11, mu02, mu30, mu21, mu12, mu03;$/;"	m	class:cv::Moments
mu20	opencv2/imgproc/types_c.h	/^    double  mu20, mu11, mu02, mu30, mu21, mu12, mu03; \/**< central moments *\/$/;"	m	struct:CvMoments
mu21	opencv2/core/types.hpp	/^    CV_PROP_RW double  mu20, mu11, mu02, mu30, mu21, mu12, mu03;$/;"	m	class:cv::Moments
mu21	opencv2/imgproc/types_c.h	/^    double  mu20, mu11, mu02, mu30, mu21, mu12, mu03; \/**< central moments *\/$/;"	m	struct:CvMoments
mu30	opencv2/core/types.hpp	/^    CV_PROP_RW double  mu20, mu11, mu02, mu30, mu21, mu12, mu03;$/;"	m	class:cv::Moments
mu30	opencv2/imgproc/types_c.h	/^    double  mu20, mu11, mu02, mu30, mu21, mu12, mu03; \/**< central moments *\/$/;"	m	struct:CvMoments
mul	opencv2/core/matx.hpp	/^Matx<_Tp, m, n> Matx<_Tp, m, n>::mul(const Matx<_Tp, m, n>& a) const$/;"	f	class:cv::Matx
mul	opencv2/core/matx.hpp	/^Vec<_Tp, cn> Vec<_Tp, cn>::mul(const Vec<_Tp, cn>& v) const$/;"	f	class:cv::Vec
mul	opencv2/core/types.hpp	/^Scalar_<_Tp> Scalar_<_Tp>::mul(const Scalar_<_Tp>& a, double scale ) const$/;"	f	class:cv::Scalar_
multi_probe_level_	opencv2/flann/lsh_index.h	/^    unsigned int multi_probe_level_;$/;"	m	class:cvflann::LshIndex
multimap	cpp_src/stl_multimap.h	/^        multimap(_InputIterator __first, _InputIterator __last)$/;"	f	class:std::multimap
multimap	cpp_src/stl_multimap.h	/^        multimap(_InputIterator __first, _InputIterator __last,$/;"	f	class:std::multimap
multimap	cpp_src/stl_multimap.h	/^      multimap()$/;"	f	class:std::multimap
multimap	cpp_src/stl_multimap.h	/^      multimap(const _Compare& __comp,$/;"	f	class:std::multimap
multimap	cpp_src/stl_multimap.h	/^      multimap(const multimap& __x)$/;"	f	class:std::multimap
multimap	cpp_src/stl_multimap.h	/^    class multimap$/;"	c	namespace:std
multiplies	cpp_src/stl_function.h	/^    struct multiplies : public binary_function<_Tp, _Tp, _Tp>$/;"	s	namespace:std
multiplies	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ multiplies() {}$/;"	f	struct:cv::cuda::device::multiplies
multiplies	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ multiplies(const multiplies&) {}$/;"	f	struct:cv::cuda::device::multiplies
multiplies	opencv2/core/cuda/functional.hpp	/^    template <typename T> struct multiplies : binary_function<T, T, T>$/;"	s	namespace:cv::cuda::device
multiplies	opencv2/cudev/functional/functional.hpp	/^template <typename T> struct multiplies : binary_function<T, T, T>$/;"	s	namespace:cv::cudev
multiseq_partition	5/parallel/multiseq_selection.h	/^    multiseq_partition(_RanSeqs __begin_seqs, _RanSeqs __end_seqs,$/;"	f	namespace:__gnu_parallel
multiseq_selection	5/parallel/multiseq_selection.h	/^    multiseq_selection(_RanSeqs __begin_seqs, _RanSeqs __end_seqs,$/;"	f	namespace:__gnu_parallel
multiset	cpp_src/stl_multiset.h	/^        multiset(_InputIterator __first, _InputIterator __last)$/;"	f	class:std::multiset
multiset	cpp_src/stl_multiset.h	/^        multiset(_InputIterator __first, _InputIterator __last,$/;"	f	class:std::multiset
multiset	cpp_src/stl_multiset.h	/^      multiset()$/;"	f	class:std::multiset
multiset	cpp_src/stl_multiset.h	/^      multiset(const _Compare& __comp,$/;"	f	class:std::multiset
multiset	cpp_src/stl_multiset.h	/^      multiset(const multiset<_Key,_Compare,_Alloc>& __x)$/;"	f	class:std::multiset
multiset	cpp_src/stl_multiset.h	/^    class multiset$/;"	c	namespace:std
multiway_merge	5/parallel/multiway_merge.h	/^    multiway_merge(_RAIterPairIterator __seqs_begin,$/;"	f	namespace:__gnu_parallel
multiway_merge_3_variant	5/parallel/multiway_merge.h	/^    multiway_merge_3_variant(_RAIterIterator __seqs_begin,$/;"	f	namespace:__gnu_parallel
multiway_merge_4_variant	5/parallel/multiway_merge.h	/^    multiway_merge_4_variant(_RAIterIterator __seqs_begin,$/;"	f	namespace:__gnu_parallel
multiway_merge_algorithm	5/parallel/settings.h	/^    _MultiwayMergeAlgorithm     multiway_merge_algorithm;$/;"	m	struct:__gnu_parallel::_Settings
multiway_merge_exact_splitting	5/parallel/multiway_merge.h	/^    multiway_merge_exact_splitting(_RAIterIterator __seqs_begin,$/;"	f	namespace:__gnu_parallel
multiway_merge_loser_tree	5/parallel/multiway_merge.h	/^    multiway_merge_loser_tree(_RAIterIterator __seqs_begin,$/;"	f	namespace:__gnu_parallel
multiway_merge_loser_tree_sentinel	5/parallel/multiway_merge.h	/^    multiway_merge_loser_tree_sentinel(_RAIterIterator __seqs_begin,$/;"	f	namespace:__gnu_parallel
multiway_merge_loser_tree_unguarded	5/parallel/multiway_merge.h	/^    multiway_merge_loser_tree_unguarded(_RAIterIterator __seqs_begin,$/;"	f	namespace:__gnu_parallel
multiway_merge_minimal_k	5/parallel/settings.h	/^    int                         multiway_merge_minimal_k;$/;"	m	struct:__gnu_parallel::_Settings
multiway_merge_minimal_n	5/parallel/settings.h	/^    _SequenceIndex              multiway_merge_minimal_n;$/;"	m	struct:__gnu_parallel::_Settings
multiway_merge_oversampling	5/parallel/settings.h	/^    unsigned int                multiway_merge_oversampling;$/;"	m	struct:__gnu_parallel::_Settings
multiway_merge_sampling_splitting	5/parallel/multiway_merge.h	/^    multiway_merge_sampling_splitting(_RAIterIterator __seqs_begin,$/;"	f	namespace:__gnu_parallel
multiway_merge_sentinels	5/parallel/multiway_merge.h	/^    multiway_merge_sentinels(_RAIterPairIterator __seqs_begin,$/;"	f	namespace:__gnu_parallel
multiway_merge_splitting	5/parallel/settings.h	/^    _SplittingAlgorithm         multiway_merge_splitting;$/;"	m	struct:__gnu_parallel::_Settings
multiway_mergesort_exact_tag	5/parallel/tags.h	/^    multiway_mergesort_exact_tag() { }$/;"	f	struct:__gnu_parallel::multiway_mergesort_exact_tag
multiway_mergesort_exact_tag	5/parallel/tags.h	/^    multiway_mergesort_exact_tag(_ThreadIndex __num_threads)$/;"	f	struct:__gnu_parallel::multiway_mergesort_exact_tag
multiway_mergesort_exact_tag	5/parallel/tags.h	/^  struct multiway_mergesort_exact_tag : public parallel_tag$/;"	s	namespace:__gnu_parallel
multiway_mergesort_sampling_tag	5/parallel/tags.h	/^    multiway_mergesort_sampling_tag() { }$/;"	f	struct:__gnu_parallel::multiway_mergesort_sampling_tag
multiway_mergesort_sampling_tag	5/parallel/tags.h	/^    multiway_mergesort_sampling_tag(_ThreadIndex __num_threads)$/;"	f	struct:__gnu_parallel::multiway_mergesort_sampling_tag
multiway_mergesort_sampling_tag	5/parallel/tags.h	/^  struct multiway_mergesort_sampling_tag : public parallel_tag$/;"	s	namespace:__gnu_parallel
multiway_mergesort_tag	5/parallel/tags.h	/^    multiway_mergesort_tag() { }$/;"	f	struct:__gnu_parallel::multiway_mergesort_tag
multiway_mergesort_tag	5/parallel/tags.h	/^    multiway_mergesort_tag(_ThreadIndex __num_threads)$/;"	f	struct:__gnu_parallel::multiway_mergesort_tag
multiway_mergesort_tag	5/parallel/tags.h	/^  struct multiway_mergesort_tag : public parallel_tag$/;"	s	namespace:__gnu_parallel
mustEstTrimRatio_	opencv2/videostab/stabilizer.hpp	/^    bool mustEstTrimRatio_;$/;"	m	class:cv::videostab::TwoPassStabilizer
mustEstimateTrimaRatio	opencv2/videostab/stabilizer.hpp	/^    bool mustEstimateTrimaRatio() const { return mustEstTrimRatio_; }$/;"	f	class:cv::videostab::TwoPassStabilizer
mutex	opencv2/core/utility.hpp	/^    Mutex* mutex;$/;"	m	class:cv::AutoLock
mutexCount	opencv2/core/private.hpp	/^    Mutex mutexCount;$/;"	m	class:cv::instr::InstrStruct
mutexCreate	opencv2/core/private.hpp	/^    Mutex mutexCreate;$/;"	m	class:cv::instr::InstrStruct
mySum	opencv2/core/cuda/vec_distance.hpp	/^        float mySum;$/;"	m	struct:cv::cuda::device::L1Dist
mySum	opencv2/core/cuda/vec_distance.hpp	/^        float mySum;$/;"	m	struct:cv::cuda::device::L2Dist
mySum	opencv2/core/cuda/vec_distance.hpp	/^        int mySum;$/;"	m	struct:cv::cuda::device::HammingDist
mySum	opencv2/core/cuda/vec_distance.hpp	/^        int mySum;$/;"	m	struct:cv::cuda::device::L1Dist
mySum	opencv2/cudev/block/vec_distance.hpp	/^    result_type mySum;$/;"	m	struct:cv::cudev::NormHamming
mySum	opencv2/cudev/block/vec_distance.hpp	/^    result_type mySum;$/;"	m	struct:cv::cudev::NormL1
mySum	opencv2/cudev/block/vec_distance.hpp	/^    result_type mySum;$/;"	m	struct:cv::cudev::NormL2
mymax	opencv2/cudev/grid/detail/reduce.hpp	/^        work_type mymax;$/;"	m	struct:cv::cudev::grid_reduce_detail::MinMaxReductor
mymin	opencv2/cudev/grid/detail/reduce.hpp	/^        work_type mymin;$/;"	m	struct:cv::cudev::grid_reduce_detail::MinMaxReductor
myval	opencv2/cudev/grid/detail/reduce.hpp	/^        work_type myval;$/;"	m	struct:cv::cudev::grid_reduce_detail::MinMaxReductor
nChannels	opencv2/core/types_c.h	/^    int  nChannels;         \/**< Most of OpenCV functions support 1,2,3 or 4 channels *\/$/;"	m	struct:_IplImage
nCols	opencv2/core/types_c.h	/^    int  nCols;$/;"	m	struct:_IplConvKernel
nCols	opencv2/core/types_c.h	/^    int  nCols;$/;"	m	struct:_IplConvKernelFP
nRows	opencv2/core/types_c.h	/^    int  nRows;$/;"	m	struct:_IplConvKernel
nRows	opencv2/core/types_c.h	/^    int  nRows;$/;"	m	struct:_IplConvKernelFP
nShiftR	opencv2/core/types_c.h	/^    int  nShiftR;$/;"	m	struct:_IplConvKernel
nSize	opencv2/core/types_c.h	/^    int  nSize;             \/**< sizeof(IplImage) *\/$/;"	m	struct:_IplImage
nStep	opencv2/cudalegacy/NPP_staging.hpp	/^    Ncv32u nStep;         \/\/\/< pitch$/;"	m	struct:NppStInterpolationState
n_buckets_	opencv2/flann/lsh_table.h	/^    size_t n_buckets_;$/;"	m	struct:cvflann::lsh::LshStats
n_type	opencv2/core/hal/intrin.hpp	/^    typedef schar n_type;$/;"	t	struct:cv::V_TypeTraits
n_type	opencv2/core/hal/intrin.hpp	/^    typedef short n_type;$/;"	t	struct:cv::V_TypeTraits
name	opencv2/core/ocl_genbase.hpp	/^    const char* name;$/;"	m	struct:cv::ocl::ProgramEntry
name	opencv2/core/types_c.h	/^    const char* name;$/;"	m	struct:CvModuleInfo
nameFont	opencv2/highgui.hpp	/^    const char* nameFont;  \/\/!< Name of the font$/;"	m	struct:cv::QtFont
nameFont	opencv2/imgproc/imgproc_c.h	/^  const char* nameFont;   \/\/Qt:nameFont$/;"	m	struct:CvFont
narrays	opencv2/core/mat.hpp	/^    int narrays;$/;"	m	class:cv::NAryMatIterator
narrow	cpp_src/locale_facets.h	/^      narrow(char_type __c, char __dfault) const$/;"	f	class:std::__ctype_abstract_base
narrow	cpp_src/locale_facets.h	/^      narrow(char_type __c, char __dfault) const$/;"	f	class:std::ctype
narrow	cpp_src/locale_facets.h	/^      narrow(const char_type* __lo, const char_type* __hi,$/;"	f	class:std::__ctype_abstract_base
narrow	cpp_src/locale_facets.h	/^      narrow(const char_type* __lo, const char_type* __hi,$/;"	f	class:std::ctype
narrowBand_	opencv2/videostab/fast_marching.hpp	/^    std::vector<DXY> narrowBand_; \/\/ narrow band heap$/;"	m	class:cv::videostab::FastMarchingMethod
nbins	opencv2/objdetect.hpp	/^    CV_PROP int nbins;$/;"	m	struct:cv::HOGDescriptor
ncomps_	opencv2/stitching/detail/seam_finders.hpp	/^    int ncomps_;$/;"	m	class:cv::detail::DpSeamFinder
ncvAssertCUDALastErrorReturn	opencv2/cudalegacy/NCV.hpp	301;"	d
ncvAssertCUDAReturn	opencv2/cudalegacy/NCV.hpp	292;"	d
ncvAssertPrintCheck	opencv2/cudalegacy/NCV.hpp	256;"	d
ncvAssertPrintReturn	opencv2/cudalegacy/NCV.hpp	267;"	d
ncvAssertReturn	opencv2/cudalegacy/NCV.hpp	275;"	d
ncvAssertReturnNcvStat	opencv2/cudalegacy/NCV.hpp	283;"	d
ncvSafeCall	opencv2/cudalegacy/private.hpp	92;"	d
ncvSafeMatAlloc	opencv2/cudalegacy/NCV.hpp	1026;"	d
neg_format	cpp_src/locale_facets.h	/^      neg_format() const$/;"	f	class:std::moneypunct
negate	cpp_src/stl_function.h	/^    struct negate : public unary_function<_Tp, _Tp>$/;"	s	namespace:std
negate	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ negate() {}$/;"	f	struct:cv::cuda::device::negate
negate	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ negate(const negate&) {}$/;"	f	struct:cv::cuda::device::negate
negate	opencv2/core/cuda/functional.hpp	/^    template <typename T> struct negate : unary_function<T, T>$/;"	s	namespace:cv::cuda::device
negate	opencv2/cudev/functional/functional.hpp	/^template <typename T> struct negate : unary_function<T, T>$/;"	s	namespace:cv::cudev
negative_sign	cpp_src/locale_facets.h	/^      negative_sign() const$/;"	f	class:std::moneypunct
neighbors	opencv2/objdetect/objdetect_c.h	/^    int neighbors;$/;"	m	struct:CvAvgComp
nested_exception	5/bits/nested_exception.h	/^  class nested_exception$/;"	c	namespace:std
next	opencv2/core/cuda/utility.hpp	/^        __device__ __forceinline__ void next() const$/;"	f	struct:cv::cuda::device::WithOutMask
next	opencv2/core/cuda/utility.hpp	/^        __device__ __forceinline__ void next()$/;"	f	struct:cv::cuda::device::MaskCollection
next	opencv2/core/mat.hpp	/^        size_t next;$/;"	m	struct:cv::SparseMat::Node
next	opencv2/core/operations.hpp	/^inline unsigned RNG::next()$/;"	f	class:cv::RNG
next	opencv2/core/types_c.h	/^    struct CvAttrList* next;   \/**< Pointer to next chunk of the attributes list.                    *\/$/;"	m	struct:CvAttrList	typeref:struct:CvAttrList::CvAttrList
next	opencv2/core/types_c.h	/^    struct CvMemBlock*  next;$/;"	m	struct:CvMemBlock	typeref:struct:CvMemBlock::CvMemBlock
next	opencv2/core/types_c.h	/^    struct CvModuleInfo* next;$/;"	m	struct:CvModuleInfo	typeref:struct:CvModuleInfo::CvModuleInfo
next	opencv2/core/types_c.h	/^    struct CvSeqBlock*  next; \/**< Next sequence block.                       *\/$/;"	m	struct:CvSeqBlock	typeref:struct:CvSeqBlock::CvSeqBlock
next	opencv2/core/types_c.h	/^    struct CvSparseNode* next;$/;"	m	struct:CvSparseNode	typeref:struct:CvSparseNode::CvSparseNode
next	opencv2/core/types_c.h	/^    struct CvStringHashNode* next;$/;"	m	struct:CvStringHashNode	typeref:struct:CvStringHashNode::CvStringHashNode
next	opencv2/core/types_c.h	/^    struct CvTypeInfo* next; \/**< next registered type in the list *\/$/;"	m	struct:CvTypeInfo	typeref:struct:CvTypeInfo::CvTypeInfo
next	opencv2/flann/random.h	/^    int next()$/;"	f	class:cvflann::UniqueRandom
next	opencv2/imgproc.hpp	/^        int next[4];$/;"	m	struct:cv::Subdiv2D::QuadEdge
next	opencv2/ml.hpp	/^        int next; \/\/!< Index of the next split in the list of splits for the node$/;"	m	class:cv::ml::DTrees::Split
next	opencv2/objdetect/objdetect_c.h	/^    int next;$/;"	m	struct:CvHaarStageClassifier
nextFrame	opencv2/videostab/frame_source.hpp	/^    virtual Mat nextFrame() { return Mat(); }$/;"	f	class:cv::videostab::NullFrameSource
nextFrame	opencv2/videostab/stabilizer.hpp	/^    virtual Mat nextFrame() { return nextStabilizedFrame(); }$/;"	f	class:cv::videostab::OnePassStabilizer
next_2_pointer	5/ext/pb_ds/detail/rc_binomial_heap_/debug_fn_imps.hpp	/^next_2_pointer(node_const_pointer p_nd)$/;"	f	class:PB_DS_CLASS_C_DEC
next_after_0_pointer	5/ext/pb_ds/detail/rc_binomial_heap_/debug_fn_imps.hpp	/^next_after_0_pointer(node_const_pointer p_nd)$/;"	f	class:PB_DS_CLASS_C_DEC
next_child	5/ext/pb_ds/detail/trie_policy/prefix_search_node_update_imp.hpp	/^next_child(node_iterator nd_it, typename access_traits::const_iterator b,$/;"	f	class:PB_DS_CLASS_C_DEC
next_permutation	cpp_src/stl_algo.h	/^    next_permutation(_BidirectionalIterator __first,$/;"	f	namespace:std
niters	opencv2/videostab/motion_core.hpp	/^    int niters() const$/;"	f	struct:cv::videostab::RansacParams
nlanes	opencv2/core/hal/intrin.hpp	/^    enum { nlanes = 16 \/ sizeof(T) };$/;"	e	enum:cv::V_SIMD128Traits::__anon154
nlanes	opencv2/core/hal/intrin_cpp.hpp	/^    enum { nlanes = n };$/;"	e	enum:cv::v_reg::__anon155
nlanes	opencv2/core/hal/intrin_neon.hpp	/^    enum { nlanes = 16 };$/;"	e	enum:cv::v_int8x16::__anon128
nlanes	opencv2/core/hal/intrin_neon.hpp	/^    enum { nlanes = 16 };$/;"	e	enum:cv::v_uint8x16::__anon127
nlanes	opencv2/core/hal/intrin_neon.hpp	/^    enum { nlanes = 2 };$/;"	e	enum:cv::v_float64x2::__anon136
nlanes	opencv2/core/hal/intrin_neon.hpp	/^    enum { nlanes = 2 };$/;"	e	enum:cv::v_int64x2::__anon135
nlanes	opencv2/core/hal/intrin_neon.hpp	/^    enum { nlanes = 2 };$/;"	e	enum:cv::v_uint64x2::__anon134
nlanes	opencv2/core/hal/intrin_neon.hpp	/^    enum { nlanes = 4 };$/;"	e	enum:cv::v_float16x4::__anon137
nlanes	opencv2/core/hal/intrin_neon.hpp	/^    enum { nlanes = 4 };$/;"	e	enum:cv::v_float32x4::__anon133
nlanes	opencv2/core/hal/intrin_neon.hpp	/^    enum { nlanes = 4 };$/;"	e	enum:cv::v_int32x4::__anon132
nlanes	opencv2/core/hal/intrin_neon.hpp	/^    enum { nlanes = 4 };$/;"	e	enum:cv::v_uint32x4::__anon131
nlanes	opencv2/core/hal/intrin_neon.hpp	/^    enum { nlanes = 8 };$/;"	e	enum:cv::v_int16x8::__anon130
nlanes	opencv2/core/hal/intrin_neon.hpp	/^    enum { nlanes = 8 };$/;"	e	enum:cv::v_uint16x8::__anon129
nlanes	opencv2/core/hal/intrin_sse.hpp	/^    enum { nlanes = 16 };$/;"	e	enum:cv::v_int8x16::__anon139
nlanes	opencv2/core/hal/intrin_sse.hpp	/^    enum { nlanes = 16 };$/;"	e	enum:cv::v_uint8x16::__anon138
nlanes	opencv2/core/hal/intrin_sse.hpp	/^    enum { nlanes = 2 };$/;"	e	enum:cv::v_float64x2::__anon147
nlanes	opencv2/core/hal/intrin_sse.hpp	/^    enum { nlanes = 2 };$/;"	e	enum:cv::v_int64x2::__anon146
nlanes	opencv2/core/hal/intrin_sse.hpp	/^    enum { nlanes = 2 };$/;"	e	enum:cv::v_uint64x2::__anon145
nlanes	opencv2/core/hal/intrin_sse.hpp	/^    enum { nlanes = 4 };$/;"	e	enum:cv::v_float16x4::__anon148
nlanes	opencv2/core/hal/intrin_sse.hpp	/^    enum { nlanes = 4 };$/;"	e	enum:cv::v_float32x4::__anon144
nlanes	opencv2/core/hal/intrin_sse.hpp	/^    enum { nlanes = 4 };$/;"	e	enum:cv::v_int32x4::__anon143
nlanes	opencv2/core/hal/intrin_sse.hpp	/^    enum { nlanes = 4 };$/;"	e	enum:cv::v_uint32x4::__anon142
nlanes	opencv2/core/hal/intrin_sse.hpp	/^    enum { nlanes = 8 };$/;"	e	enum:cv::v_int16x8::__anon141
nlanes	opencv2/core/hal/intrin_sse.hpp	/^    enum { nlanes = 8 };$/;"	e	enum:cv::v_uint16x8::__anon140
nlevels	opencv2/objdetect.hpp	/^    CV_PROP int nlevels;$/;"	m	struct:cv::HOGDescriptor
nnIndex	opencv2/flann.hpp	/^        ::cvflann::Index<Distance>* nnIndex;$/;"	m	class:cv::flann::GenericIndex
nnIndex_	opencv2/flann/flann_base.hpp	/^    NNIndex<Distance>* nnIndex_;$/;"	m	class:cvflann::Index
nnIndex_L1	opencv2/flann.hpp	/^    ::cvflann::Index< L1<ElementType> >* nnIndex_L1;$/;"	m	class:cv::flann::Index_
nnIndex_L2	opencv2/flann.hpp	/^    ::cvflann::Index< L2<ElementType> >* nnIndex_L2;$/;"	m	class:cv::flann::Index_
no_order	cpp_src/locale_facets.h	/^    enum dateorder { no_order, dmy, mdy, ymd, ydm };$/;"	e	enum:std::time_base::dateorder
no_throw_copies	5/ext/pb_ds/detail/types_traits.hpp	/^      struct no_throw_copies$/;"	s	namespace:__gnu_pbds::detail
no_throw_copies	5/ext/pb_ds/detail/types_traits.hpp	/^      struct no_throw_copies<Key, null_type>$/;"	s	namespace:__gnu_pbds::detail
no_throw_copies_t	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	/^      typedef integral_constant<int, simple_value> 	no_throw_copies_t;$/;"	t	class:__gnu_pbds::detail::binary_heap
no_throw_copies_t	5/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp	/^      typedef integral_constant<int, simple_value> 	no_throw_copies_t;$/;"	t	class:__gnu_pbds::detail::left_child_next_sibling_heap
no_throw_indicator	5/ext/pb_ds/detail/types_traits.hpp	/^	typedef typename __nothrowcopy::indicator 	no_throw_indicator;$/;"	t	struct:__gnu_pbds::detail::types_traits
noboolalpha	cpp_src/ios_base.h	/^  noboolalpha(ios_base& __base)$/;"	f	namespace:std
noconv	cpp_src/codecvt.h	/^      noconv$/;"	e	enum:std::codecvt_base::result
node	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	/^      typedef typename node_allocator::value_type 	node;$/;"	t	class:__gnu_pbds::detail::PB_DS_BIN_TREE_NAME
node	5/ext/pb_ds/detail/bin_search_tree_/traits.hpp	/^      typedef Node node;$/;"	t	struct:__gnu_pbds::detail::bin_search_tree_traits
node	5/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp	/^      typedef typename base_type::node 			node;$/;"	t	class:__gnu_pbds::detail::binomial_heap_base
node	5/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp	/^      typedef typename node_allocator::value_type     	node;$/;"	t	class:__gnu_pbds::detail::left_child_next_sibling_heap
node	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename traits_type::node 		node;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
node	5/ext/pb_ds/detail/pat_trie_/traits.hpp	/^      typedef base_type::_Node_base<synth_access_traits, metadata>     	node;$/;"	t	struct:__gnu_pbds::detail::trie_traits
node	5/ext/pb_ds/detail/rc_binomial_heap_/rc.hpp	/^      typedef _Node 					 node;$/;"	t	class:__gnu_pbds::detail::rc
node	5/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp	/^      typedef typename base_type::node 			node;$/;"	t	class:__gnu_pbds::detail::thin_heap
node	opencv2/core/core_c.h	/^    const void* node;$/;"	m	struct:CvTreeNodeIterator
node	opencv2/core/core_c.h	/^CVAPI(const char*) cvGetFileNodeName( const CvFileNode* node );$/;"	v
node	opencv2/core/mat.inl.hpp	/^SparseMat::Node* SparseMat::node(size_t nidx)$/;"	f	class:cv::SparseMat
node	opencv2/core/mat.inl.hpp	/^SparseMat::Node* SparseMatIterator::node() const$/;"	f	class:cv::SparseMatIterator
node	opencv2/core/mat.inl.hpp	/^const SparseMat::Node* SparseMat::node(size_t nidx) const$/;"	f	class:cv::SparseMat
node	opencv2/core/mat.inl.hpp	/^const SparseMat::Node* SparseMatConstIterator::node() const$/;"	f	class:cv::SparseMatConstIterator
node	opencv2/core/persistence.hpp	/^    const CvFileNode* node;$/;"	m	class:cv::FileNode
node	opencv2/core/types_c.h	/^    CvSparseNode* node;$/;"	m	struct:CvSparseMatIterator
node	opencv2/flann/result_set.h	/^    T node;           \/* Tree node at which search resumes *\/$/;"	m	struct:cvflann::BranchStruct
nodeCount	opencv2/core/mat.hpp	/^        size_t nodeCount;$/;"	m	struct:cv::SparseMat::Hdr
nodeSize	opencv2/core/mat.hpp	/^        size_t nodeSize;$/;"	m	struct:cv::SparseMat::Hdr
node_allocator	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	/^      node_allocator;$/;"	t	class:__gnu_pbds::detail::PB_DS_BIN_TREE_NAME
node_allocator	5/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp	/^      node_allocator;$/;"	t	class:__gnu_pbds::detail::left_child_next_sibling_heap
node_begin	5/ext/pb_ds/detail/bin_search_tree_/iterators_fn_imps.hpp	/^node_begin() const$/;"	f	class:PB_DS_CLASS_C_DEC
node_begin	5/ext/pb_ds/detail/bin_search_tree_/iterators_fn_imps.hpp	/^node_begin()$/;"	f	class:PB_DS_CLASS_C_DEC
node_begin	5/ext/pb_ds/detail/ov_tree_map_/iterators_fn_imps.hpp	/^node_begin() const$/;"	f	class:PB_DS_CLASS_C_DEC
node_begin	5/ext/pb_ds/detail/ov_tree_map_/iterators_fn_imps.hpp	/^node_begin()$/;"	f	class:PB_DS_CLASS_C_DEC
node_begin	5/ext/pb_ds/detail/pat_trie_/iterators_fn_imps.hpp	/^node_begin() const$/;"	f	class:PB_DS_CLASS_C_DEC
node_begin	5/ext/pb_ds/detail/pat_trie_/iterators_fn_imps.hpp	/^node_begin()$/;"	f	class:PB_DS_CLASS_C_DEC
node_consistent_t	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	/^      typedef std::pair<const_pointer, const_pointer> node_consistent_t;$/;"	t	class:__gnu_pbds::detail::PB_DS_BIN_TREE_NAME
node_const_iterator	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	/^      typedef typename traits_type::node_const_iterator node_const_iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_BIN_TREE_NAME
node_const_iterator	5/ext/pb_ds/detail/bin_search_tree_/traits.hpp	/^      node_const_iterator;$/;"	t	struct:__gnu_pbds::detail::bin_search_tree_traits
node_const_iterator	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      typedef typename traits_type::node_const_iterator	node_const_iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
node_const_iterator	5/ext/pb_ds/detail/ov_tree_map_/traits.hpp	/^      node_const_iterator;$/;"	t	struct:__gnu_pbds::detail::tree_traits
node_const_iterator	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename traits_type::node_const_iterator node_const_iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
node_const_iterator	5/ext/pb_ds/detail/pat_trie_/traits.hpp	/^      typedef base_type::_Node_citer<node, leaf, head, inode, const_iterator, iterator, _Alloc> node_const_iterator;$/;"	t	struct:__gnu_pbds::detail::trie_traits
node_const_iterator	5/ext/pb_ds/detail/tree_trace_base.hpp	/^      typedef Node_CItr 		node_const_iterator;$/;"	t	class:__gnu_pbds::detail::tree_trace_base
node_const_iterator	5/ext/pb_ds/detail/trie_policy/trie_policy_base.hpp	/^      typedef Node_CItr 				node_const_iterator;$/;"	t	class:__gnu_pbds::detail::trie_policy_base
node_const_iterator	5/ext/pb_ds/tree_policy.hpp	/^    typedef Node_CItr 	       			node_const_iterator;$/;"	t	class:__gnu_pbds::tree_order_statistics_node_update
node_const_iterator	5/ext/pb_ds/trie_policy.hpp	/^    typedef Node_CItr 					node_const_iterator;$/;"	t	class:__gnu_pbds::trie_order_statistics_node_update
node_const_iterator	5/ext/pb_ds/trie_policy.hpp	/^    typedef Node_CItr 					node_const_iterator;$/;"	t	class:__gnu_pbds::trie_prefix_search_node_update
node_const_pointer	5/ext/pb_ds/detail/binomial_heap_/binomial_heap_.hpp	/^      typedef typename base_type::node_const_pointer 	node_const_pointer;$/;"	t	class:__gnu_pbds::detail::binomial_heap
node_const_pointer	5/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp	/^      typedef typename base_type::node_const_pointer 	node_const_pointer;$/;"	t	class:__gnu_pbds::detail::binomial_heap_base
node_const_pointer	5/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp	/^      typedef typename node_allocator::const_pointer	node_const_pointer;$/;"	t	class:__gnu_pbds::detail::left_child_next_sibling_heap
node_const_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename __rebind_n::other::const_pointer node_const_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
node_const_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename __rebind_n::other::const_pointer      node_const_pointer;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Inode
node_const_pointer	5/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp	/^      typedef typename base_type::node_const_pointer 	node_const_pointer;$/;"	t	class:__gnu_pbds::detail::rc_binomial_heap
node_const_pointer	5/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp	/^      typedef typename base_type::node_const_pointer 	node_const_pointer;$/;"	t	class:__gnu_pbds::detail::thin_heap
node_debug_info	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	typedef std::pair<a_const_iterator, a_const_iterator> node_debug_info;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Node_base
node_debug_info	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename base_type::node_debug_info 	       node_debug_info;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Inode
node_debug_info	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename base_type::node_debug_info      		node_debug_info;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Leaf
node_debug_info	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename base_type::node_debug_info      	       node_debug_info;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Head
node_end	5/ext/pb_ds/detail/bin_search_tree_/iterators_fn_imps.hpp	/^node_end() const$/;"	f	class:PB_DS_CLASS_C_DEC
node_end	5/ext/pb_ds/detail/bin_search_tree_/iterators_fn_imps.hpp	/^node_end()$/;"	f	class:PB_DS_CLASS_C_DEC
node_end	5/ext/pb_ds/detail/ov_tree_map_/iterators_fn_imps.hpp	/^node_end() const$/;"	f	class:PB_DS_CLASS_C_DEC
node_end	5/ext/pb_ds/detail/ov_tree_map_/iterators_fn_imps.hpp	/^node_end()$/;"	f	class:PB_DS_CLASS_C_DEC
node_end	5/ext/pb_ds/detail/pat_trie_/iterators_fn_imps.hpp	/^node_end() const$/;"	f	class:PB_DS_CLASS_C_DEC
node_end	5/ext/pb_ds/detail/pat_trie_/iterators_fn_imps.hpp	/^node_end()$/;"	f	class:PB_DS_CLASS_C_DEC
node_iterator	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	/^      typedef typename traits_type::node_iterator 	node_iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_BIN_TREE_NAME
node_iterator	5/ext/pb_ds/detail/bin_search_tree_/traits.hpp	/^      node_iterator;$/;"	t	struct:__gnu_pbds::detail::bin_search_tree_traits
node_iterator	5/ext/pb_ds/detail/bin_search_tree_/traits.hpp	/^      typedef node_const_iterator node_iterator;$/;"	t	struct:__gnu_pbds::detail::bin_search_tree_traits
node_iterator	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      typedef typename traits_type::node_iterator 	node_iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
node_iterator	5/ext/pb_ds/detail/ov_tree_map_/traits.hpp	/^      node_iterator;$/;"	t	struct:__gnu_pbds::detail::tree_traits
node_iterator	5/ext/pb_ds/detail/ov_tree_map_/traits.hpp	/^      typedef node_const_iterator node_iterator;$/;"	t	struct:__gnu_pbds::detail::tree_traits
node_iterator	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename traits_type::node_iterator 	node_iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
node_iterator	5/ext/pb_ds/detail/pat_trie_/traits.hpp	/^      typedef base_type::_Node_iter<node, leaf, head, inode, const_iterator, iterator, _Alloc> node_iterator;$/;"	t	struct:__gnu_pbds::detail::trie_traits
node_iterator	5/ext/pb_ds/detail/pat_trie_/traits.hpp	/^      typedef node_const_iterator 								node_iterator;$/;"	t	struct:__gnu_pbds::detail::trie_traits
node_iterator	5/ext/pb_ds/detail/trie_policy/trie_policy_base.hpp	/^      typedef Node_Itr 					node_iterator;$/;"	t	class:__gnu_pbds::detail::trie_policy_base
node_iterator	5/ext/pb_ds/tree_policy.hpp	/^    typedef Node_Itr 					node_iterator;$/;"	t	class:__gnu_pbds::tree_order_statistics_node_update
node_iterator	5/ext/pb_ds/trie_policy.hpp	/^    typedef Node_Itr 					node_iterator;$/;"	t	class:__gnu_pbds::trie_order_statistics_node_update
node_iterator	5/ext/pb_ds/trie_policy.hpp	/^    typedef Node_Itr 					node_iterator;$/;"	t	class:__gnu_pbds::trie_prefix_search_node_update
node_metadata	5/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp	/^      typedef Node_Metadata node_metadata;$/;"	t	class:__gnu_pbds::detail::left_child_next_sibling_heap
node_pointer	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	/^      typedef typename node_allocator::pointer 		node_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_BIN_TREE_NAME
node_pointer	5/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp	/^      node_pointer;$/;"	t	class:__gnu_pbds::detail::bin_search_tree_const_node_it_
node_pointer	5/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp	/^      node_pointer;$/;"	t	class:__gnu_pbds::detail::bin_search_tree_node_it_
node_pointer	5/ext/pb_ds/detail/binomial_heap_/binomial_heap_.hpp	/^      typedef typename base_type::node_pointer 		node_pointer;$/;"	t	class:__gnu_pbds::detail::binomial_heap
node_pointer	5/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp	/^      typedef typename base_type::node_pointer 		node_pointer;$/;"	t	class:__gnu_pbds::detail::binomial_heap_base
node_pointer	5/ext/pb_ds/detail/left_child_next_sibling_heap_/const_iterator.hpp	/^      typedef typename base_type::node_pointer		node_pointer;$/;"	t	class:__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_
node_pointer	5/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp	/^      typedef typename node_allocator::pointer 		node_pointer;$/;"	t	class:__gnu_pbds::detail::left_child_next_sibling_heap
node_pointer	5/ext/pb_ds/detail/left_child_next_sibling_heap_/node.hpp	/^      typedef typename _Alloc::template rebind<this_type>::other::pointer node_pointer;$/;"	t	struct:__gnu_pbds::detail::left_child_next_sibling_heap_node_
node_pointer	5/ext/pb_ds/detail/left_child_next_sibling_heap_/point_const_iterator.hpp	/^      typedef typename _Alloc::template rebind<Node>::other::pointer node_pointer;$/;"	t	class:__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_
node_pointer	5/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp	/^      typedef typename base_type::node_pointer 		node_pointer;$/;"	t	class:__gnu_pbds::detail::pairing_heap
node_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename __rebind_n::other::pointer 	node_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
node_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	typedef typename __rebind_n::other::pointer 		node_pointer;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Node_base
node_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename __rebind_n::other::pointer	node_pointer;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_CIter
node_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename __rebind_n::other::pointer	node_pointer;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_Node_citer
node_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename __rebind_n::other::pointer	node_pointer;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_Node_iter
node_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename base_type::node_pointer			node_pointer;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Head
node_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename base_type::node_pointer			node_pointer;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Inode
node_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename base_type::node_pointer		node_pointer;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_Iter
node_pointer	5/ext/pb_ds/detail/rb_tree_map_/node.hpp	/^      node_pointer;$/;"	t	struct:__gnu_pbds::detail::rb_tree_node_
node_pointer	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	/^      typedef typename base_type::node_pointer 		 node_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_RB_TREE_NAME
node_pointer	5/ext/pb_ds/detail/rc_binomial_heap_/rc.hpp	/^      typedef typename __rebind_n::other::pointer      	 node_pointer;$/;"	t	class:__gnu_pbds::detail::rc
node_pointer	5/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp	/^      typedef typename base_type::node_pointer 		node_pointer;$/;"	t	class:__gnu_pbds::detail::rc_binomial_heap
node_pointer	5/ext/pb_ds/detail/splay_tree_/node.hpp	/^      node_pointer;$/;"	t	struct:__gnu_pbds::detail::splay_tree_node_
node_pointer	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	/^      typedef typename base_type::node_pointer 		 node_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_S_TREE_NAME
node_pointer	5/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp	/^      typedef typename base_type::node_pointer 		node_pointer;$/;"	t	class:__gnu_pbds::detail::thin_heap
node_pointer_pair	5/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp	/^      typedef std::pair< node_pointer, node_pointer> 	node_pointer_pair;$/;"	t	class:__gnu_pbds::detail::left_child_next_sibling_heap
node_pointer_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename __rebind_np::pointer 		node_pointer_pointer;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Inode
node_pointer_reference	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename __rebind_np::reference 		node_pointer_reference;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Inode
node_type	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      enum node_type$/;"	g	struct:__gnu_pbds::detail::pat_trie_base
node_update	5/ext/pb_ds/assoc_container.hpp	/^    typedef Node_Update 			node_update;$/;"	t	class:__gnu_pbds::basic_branch
node_update	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	/^      typedef typename traits_type::node_update 	node_update;$/;"	t	class:__gnu_pbds::detail::PB_DS_BIN_TREE_NAME
node_update	5/ext/pb_ds/detail/bin_search_tree_/traits.hpp	/^      node_update;$/;"	t	struct:__gnu_pbds::detail::bin_search_tree_traits
node_update	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      typedef typename traits_type::node_update 	node_update;$/;"	t	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
node_update	5/ext/pb_ds/detail/ov_tree_map_/traits.hpp	/^      node_update;$/;"	t	struct:__gnu_pbds::detail::tree_traits
node_update	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename traits_type::node_update 	node_update;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
node_update	5/ext/pb_ds/detail/pat_trie_/traits.hpp	/^      typedef Node_Update<node_const_iterator, node_iterator, _ATraits, _Alloc> 		node_update;$/;"	t	struct:__gnu_pbds::detail::trie_traits
node_update	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	/^      typedef typename base_type::node_update 		 node_update;$/;"	t	class:__gnu_pbds::detail::PB_DS_RB_TREE_NAME
node_update	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	/^      typedef typename base_type::node_update 		 node_update;$/;"	t	class:__gnu_pbds::detail::PB_DS_S_TREE_NAME
noexcept	5/bits/nested_exception.h	/^    nested_exception& operator=(const nested_exception&) noexcept = default;$/;"	m	class:std::nested_exception
noexcept	5/bits/nested_exception.h	/^    nested_exception(const nested_exception&) noexcept = default;$/;"	m	class:std::nested_exception
noexcept	5/bits/nested_exception.h	/^    virtual ~nested_exception() noexcept;$/;"	m	class:std::nested_exception
noexcept	5/debug/safe_unordered_base.h	/^    _M_get_container() const noexcept;$/;"	m	class:__gnu_debug::_Safe_local_iterator_base
noexcept	5/debug/safe_unordered_base.h	/^    _M_swap(_Safe_unordered_container_base& __x) noexcept;$/;"	m	class:__gnu_debug::_Safe_unordered_container_base
non_const_type	opencv2/cudev/util/type_traits.hpp	/^    typedef typename type_traits_detail::UnConst<T>::type                                                non_const_type;$/;"	t	struct:cv::cudev::TypeTraits
non_const_value_type	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      typedef typename remove_const<typename traits_base::value_type>::type non_const_value_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
non_volatile_type	opencv2/cudev/util/type_traits.hpp	/^    typedef typename type_traits_detail::UnVolatile<T>::type                                             non_volatile_type;$/;"	t	struct:cv::cudev::TypeTraits
none	cpp_src/locale_classes.h	/^    static const category none		= 0;$/;"	m	class:std::locale
none	cpp_src/locale_facets.h	/^    enum part { none, space, symbol, sign, value };$/;"	e	enum:std::money_base::part
norm	opencv2/core/matx.hpp	/^double norm(const Matx<_Tp, m, n>& M)$/;"	f	namespace:cv
norm	opencv2/core/matx.hpp	/^double norm(const Matx<_Tp, m, n>& M, int normType)$/;"	f	namespace:cv
norm	opencv2/core/types.hpp	/^double norm(const Point3_<_Tp>& pt)$/;"	f	namespace:cv
norm	opencv2/core/types.hpp	/^double norm(const Point_<_Tp>& pt)$/;"	f	namespace:cv
normInf	opencv2/core/base.hpp	/^_AccTp normInf(const _Tp* a, const _Tp* b, int n)$/;"	f	namespace:cv
normInf	opencv2/core/base.hpp	/^_AccTp normInf(const _Tp* a, int n)$/;"	f	namespace:cv
normL1	opencv2/core/base.hpp	/^_AccTp normL1(const _Tp* a, const _Tp* b, int n)$/;"	f	namespace:cv
normL1	opencv2/core/base.hpp	/^_AccTp normL1(const _Tp* a, int n)$/;"	f	namespace:cv
normL1	opencv2/core/base.hpp	/^inline float normL1(const float* a, const float* b, int n)$/;"	f	namespace:cv
normL1	opencv2/core/base.hpp	/^inline int normL1(const uchar* a, const uchar* b, int n)$/;"	f	namespace:cv
normL2	opencv2/stitching/detail/util_inl.hpp	/^float normL2(const Point3f& a)$/;"	f	namespace:cv::detail
normL2	opencv2/stitching/detail/util_inl.hpp	/^float normL2(const Point3f& a, const Point3f& b)$/;"	f	namespace:cv::detail
normL2Sqr	opencv2/core/base.hpp	/^_AccTp normL2Sqr(const _Tp* a, const _Tp* b, int n)$/;"	f	namespace:cv
normL2Sqr	opencv2/core/base.hpp	/^_AccTp normL2Sqr(const _Tp* a, int n)$/;"	f	namespace:cv
normL2Sqr	opencv2/core/base.hpp	/^static inline float normL2Sqr(const float* a, const float* b, int n)$/;"	f	namespace:cv
normL2sq	opencv2/stitching/detail/util_inl.hpp	/^double normL2sq(const Mat &r)$/;"	f	namespace:cv::detail
normType	opencv2/core/base.hpp	/^    enum { normType = NORM_HAMMING };$/;"	e	enum:cv::Hamming::__anon315
normType	opencv2/features2d.hpp	/^    enum { normType = NORM_L1 };$/;"	e	enum:cv::L1::__anon383
normType	opencv2/features2d.hpp	/^    enum { normType = NORM_L2 };$/;"	e	enum:cv::L2::__anon382
normType	opencv2/features2d.hpp	/^    enum { normType = NORM_L2SQR };$/;"	e	enum:cv::SL2::__anon381
normType	opencv2/features2d.hpp	/^    int normType;$/;"	m	class:cv::BFMatcher
normal_	opencv2/core/opengl.hpp	/^    Buffer normal_;$/;"	m	class:cv::ogl::Arrays
normalize	opencv2/core/matx.hpp	/^Vec<_Tp, cn> normalize(const Vec<_Tp, cn>& v)$/;"	f	namespace:cv
noshowbase	cpp_src/ios_base.h	/^  noshowbase(ios_base& __base)$/;"	f	namespace:std
noshowpoint	cpp_src/ios_base.h	/^  noshowpoint(ios_base& __base)$/;"	f	namespace:std
noshowpos	cpp_src/ios_base.h	/^  noshowpos(ios_base& __base)$/;"	f	namespace:std
noskipws	cpp_src/ios_base.h	/^  noskipws(ios_base& __base)$/;"	f	namespace:std
not1	cpp_src/stl_function.h	/^    not1(const _Predicate& __pred)$/;"	f	namespace:std
not1	opencv2/core/cuda/functional.hpp	/^    template <typename Predicate> __host__ __device__ __forceinline__ unary_negate<Predicate> not1(const Predicate& pred)$/;"	f	namespace:cv::cuda::device
not1	opencv2/cudev/functional/functional.hpp	/^__host__ __device__ UnaryNegate<Predicate> not1(const Predicate& pred)$/;"	f	namespace:cv::cudev
not2	cpp_src/stl_function.h	/^    not2(const _Predicate& __pred)$/;"	f	namespace:std
not2	opencv2/core/cuda/functional.hpp	/^    template <typename BinaryPredicate> __host__ __device__ __forceinline__ binary_negate<BinaryPredicate> not2(const BinaryPredicate& pred)$/;"	f	namespace:cv::cuda::device
not2	opencv2/cudev/functional/functional.hpp	/^__host__ __device__ BinaryNegate<Predicate> not2(const Predicate& pred)$/;"	f	namespace:cv::cudev
not_eof	cpp_src/char_traits.h	/^      not_eof(const int_type& __c)$/;"	f	struct:char_traits
not_equal_to	cpp_src/stl_function.h	/^    struct not_equal_to : public binary_function<_Tp, _Tp, bool>$/;"	s	namespace:std
not_equal_to	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ not_equal_to() {}$/;"	f	struct:cv::cuda::device::not_equal_to
not_equal_to	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ not_equal_to(const not_equal_to&) {}$/;"	f	struct:cv::cuda::device::not_equal_to
not_equal_to	opencv2/core/cuda/functional.hpp	/^    template <typename T> struct not_equal_to : binary_function<T, T, bool>$/;"	s	namespace:cv::cuda::device
not_equal_to	opencv2/cudev/functional/functional.hpp	/^template <typename T> struct not_equal_to : binary_function<T, T, typename MakeVec<uchar, VecTraits<T>::cn>::type>$/;"	s	namespace:cv::cudev
notify_arbitrary	5/ext/pb_ds/detail/binary_heap_/resize_policy.hpp	/^    notify_arbitrary(size_type actual_size)$/;"	f	class:__gnu_pbds::detail::resize_policy
notify_cleared	5/ext/pb_ds/detail/resize_policy/cc_hash_max_collision_check_resize_trigger_imp.hpp	/^notify_cleared()$/;"	f	class:PB_DS_CLASS_C_DEC
notify_cleared	5/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_imp.hpp	/^notify_cleared()$/;"	f	class:PB_DS_CLASS_C_DEC
notify_cleared	5/ext/pb_ds/detail/resize_policy/hash_standard_resize_policy_imp.hpp	/^notify_cleared()$/;"	f	class:PB_DS_CLASS_C_DEC
notify_erase_search_collision	5/ext/pb_ds/detail/resize_policy/cc_hash_max_collision_check_resize_trigger_imp.hpp	/^notify_erase_search_collision()$/;"	f	class:PB_DS_CLASS_C_DEC
notify_erase_search_collision	5/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_imp.hpp	/^notify_erase_search_collision()$/;"	f	class:PB_DS_CLASS_C_DEC
notify_erase_search_collision	5/ext/pb_ds/detail/resize_policy/hash_standard_resize_policy_imp.hpp	/^notify_erase_search_collision()$/;"	f	class:PB_DS_CLASS_C_DEC
notify_erase_search_end	5/ext/pb_ds/detail/resize_policy/cc_hash_max_collision_check_resize_trigger_imp.hpp	/^notify_erase_search_end()$/;"	f	class:PB_DS_CLASS_C_DEC
notify_erase_search_end	5/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_imp.hpp	/^notify_erase_search_end()$/;"	f	class:PB_DS_CLASS_C_DEC
notify_erase_search_end	5/ext/pb_ds/detail/resize_policy/hash_standard_resize_policy_imp.hpp	/^notify_erase_search_end()$/;"	f	class:PB_DS_CLASS_C_DEC
notify_erase_search_start	5/ext/pb_ds/detail/resize_policy/cc_hash_max_collision_check_resize_trigger_imp.hpp	/^notify_erase_search_start()$/;"	f	class:PB_DS_CLASS_C_DEC
notify_erase_search_start	5/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_imp.hpp	/^notify_erase_search_start()$/;"	f	class:PB_DS_CLASS_C_DEC
notify_erase_search_start	5/ext/pb_ds/detail/resize_policy/hash_standard_resize_policy_imp.hpp	/^notify_erase_search_start()$/;"	f	class:PB_DS_CLASS_C_DEC
notify_erased	5/ext/pb_ds/detail/resize_policy/cc_hash_max_collision_check_resize_trigger_imp.hpp	/^notify_erased(size_type)$/;"	f	class:PB_DS_CLASS_C_DEC
notify_erased	5/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_imp.hpp	/^notify_erased(size_type num_entries)$/;"	f	class:PB_DS_CLASS_C_DEC
notify_erased	5/ext/pb_ds/detail/resize_policy/hash_standard_resize_policy_imp.hpp	/^notify_erased(size_type num_e)$/;"	f	class:PB_DS_CLASS_C_DEC
notify_externally_resized	5/ext/pb_ds/detail/resize_policy/cc_hash_max_collision_check_resize_trigger_imp.hpp	/^notify_externally_resized(size_type new_size)$/;"	f	class:PB_DS_CLASS_C_DEC
notify_externally_resized	5/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_imp.hpp	/^notify_externally_resized(size_type new_size)$/;"	f	class:PB_DS_CLASS_C_DEC
notify_find_search_collision	5/ext/pb_ds/detail/resize_policy/cc_hash_max_collision_check_resize_trigger_imp.hpp	/^notify_find_search_collision()$/;"	f	class:PB_DS_CLASS_C_DEC
notify_find_search_collision	5/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_imp.hpp	/^notify_find_search_collision()$/;"	f	class:PB_DS_CLASS_C_DEC
notify_find_search_collision	5/ext/pb_ds/detail/resize_policy/hash_standard_resize_policy_imp.hpp	/^notify_find_search_collision()$/;"	f	class:PB_DS_CLASS_C_DEC
notify_find_search_end	5/ext/pb_ds/detail/resize_policy/cc_hash_max_collision_check_resize_trigger_imp.hpp	/^notify_find_search_end()$/;"	f	class:PB_DS_CLASS_C_DEC
notify_find_search_end	5/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_imp.hpp	/^notify_find_search_end()$/;"	f	class:PB_DS_CLASS_C_DEC
notify_find_search_end	5/ext/pb_ds/detail/resize_policy/hash_standard_resize_policy_imp.hpp	/^notify_find_search_end()$/;"	f	class:PB_DS_CLASS_C_DEC
notify_find_search_start	5/ext/pb_ds/detail/resize_policy/cc_hash_max_collision_check_resize_trigger_imp.hpp	/^notify_find_search_start()$/;"	f	class:PB_DS_CLASS_C_DEC
notify_find_search_start	5/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_imp.hpp	/^notify_find_search_start()$/;"	f	class:PB_DS_CLASS_C_DEC
notify_find_search_start	5/ext/pb_ds/detail/resize_policy/hash_standard_resize_policy_imp.hpp	/^notify_find_search_start()$/;"	f	class:PB_DS_CLASS_C_DEC
notify_grow_resize	5/ext/pb_ds/detail/binary_heap_/resize_policy.hpp	/^    notify_grow_resize()$/;"	f	class:__gnu_pbds::detail::resize_policy
notify_insert_search_collision	5/ext/pb_ds/detail/resize_policy/cc_hash_max_collision_check_resize_trigger_imp.hpp	/^notify_insert_search_collision()$/;"	f	class:PB_DS_CLASS_C_DEC
notify_insert_search_collision	5/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_imp.hpp	/^notify_insert_search_collision()$/;"	f	class:PB_DS_CLASS_C_DEC
notify_insert_search_collision	5/ext/pb_ds/detail/resize_policy/hash_standard_resize_policy_imp.hpp	/^notify_insert_search_collision()$/;"	f	class:PB_DS_CLASS_C_DEC
notify_insert_search_end	5/ext/pb_ds/detail/resize_policy/cc_hash_max_collision_check_resize_trigger_imp.hpp	/^notify_insert_search_end()$/;"	f	class:PB_DS_CLASS_C_DEC
notify_insert_search_end	5/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_imp.hpp	/^notify_insert_search_end()$/;"	f	class:PB_DS_CLASS_C_DEC
notify_insert_search_end	5/ext/pb_ds/detail/resize_policy/hash_standard_resize_policy_imp.hpp	/^notify_insert_search_end()$/;"	f	class:PB_DS_CLASS_C_DEC
notify_insert_search_start	5/ext/pb_ds/detail/resize_policy/cc_hash_max_collision_check_resize_trigger_imp.hpp	/^notify_insert_search_start()$/;"	f	class:PB_DS_CLASS_C_DEC
notify_insert_search_start	5/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_imp.hpp	/^notify_insert_search_start()$/;"	f	class:PB_DS_CLASS_C_DEC
notify_insert_search_start	5/ext/pb_ds/detail/resize_policy/hash_standard_resize_policy_imp.hpp	/^notify_insert_search_start()$/;"	f	class:PB_DS_CLASS_C_DEC
notify_inserted	5/ext/pb_ds/detail/resize_policy/cc_hash_max_collision_check_resize_trigger_imp.hpp	/^notify_inserted(size_type)$/;"	f	class:PB_DS_CLASS_C_DEC
notify_inserted	5/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_imp.hpp	/^notify_inserted(size_type num_entries)$/;"	f	class:PB_DS_CLASS_C_DEC
notify_inserted	5/ext/pb_ds/detail/resize_policy/hash_standard_resize_policy_imp.hpp	/^notify_inserted(size_type num_e)$/;"	f	class:PB_DS_CLASS_C_DEC
notify_resized	5/ext/pb_ds/detail/hash_fn/direct_mask_range_hashing_imp.hpp	/^notify_resized(size_type size)$/;"	f	class:PB_DS_CLASS_C_DEC
notify_resized	5/ext/pb_ds/detail/hash_fn/direct_mod_range_hashing_imp.hpp	/^notify_resized(size_type n)$/;"	f	class:PB_DS_CLASS_C_DEC
notify_resized	5/ext/pb_ds/detail/hash_fn/mask_based_range_hashing.hpp	/^    notify_resized(size_type size)$/;"	f	class:__gnu_pbds::detail::mask_based_range_hashing
notify_resized	5/ext/pb_ds/detail/hash_fn/mod_based_range_hashing.hpp	/^      notify_resized(size_type s)$/;"	f	class:__gnu_pbds::detail::mod_based_range_hashing
notify_resized	5/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp	/^    notify_resized(size_type size)$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
notify_resized	5/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp	/^    notify_resized(size_type size)$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
notify_resized	5/ext/pb_ds/detail/resize_policy/cc_hash_max_collision_check_resize_trigger_imp.hpp	/^notify_resized(size_type new_size)$/;"	f	class:PB_DS_CLASS_C_DEC
notify_resized	5/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_imp.hpp	/^notify_resized(size_type new_size)$/;"	f	class:PB_DS_CLASS_C_DEC
notify_resized	5/ext/pb_ds/detail/resize_policy/hash_standard_resize_policy_imp.hpp	/^notify_resized(size_type new_size)$/;"	f	class:PB_DS_CLASS_C_DEC
notify_shrink_resize	5/ext/pb_ds/detail/binary_heap_/resize_policy.hpp	/^    notify_shrink_resize()$/;"	f	class:__gnu_pbds::detail::resize_policy
nounitbuf	cpp_src/ios_base.h	/^  nounitbuf(ios_base& __base)$/;"	f	namespace:std
nouppercase	cpp_src/ios_base.h	/^  nouppercase(ios_base& __base)$/;"	f	namespace:std
nplanes	opencv2/core/mat.hpp	/^    size_t nplanes;$/;"	m	class:cv::NAryMatIterator
npos	cpp_src/basic_string.h	/^      static const size_type	npos = static_cast<size_type>(-1);$/;"	m	class:std::basic_string
npos	opencv2/core/cvstd.hpp	/^    static const size_t npos = size_t(-1);$/;"	m	class:cv::String
nppStBicubic	opencv2/cudalegacy/NPP_staging.hpp	/^    nppStBicubic      \/\/\/< Bicubic convolution filter, a = -0.5 (cubic Hermite spline)$/;"	e	enum:NppStInterpMode
nppStBorderClamp	opencv2/cudalegacy/NPP_staging.hpp	/^    nppStBorderClamp  = 1, \/\/\/< Clamp out of range position to borders$/;"	e	enum:NppStBorderType
nppStBorderMirror	opencv2/cudalegacy/NPP_staging.hpp	/^    nppStBorderMirror = 3  \/\/\/< reflect out of range position across borders$/;"	e	enum:NppStBorderType
nppStBorderNone	opencv2/cudalegacy/NPP_staging.hpp	/^    nppStBorderNone   = 0, \/\/\/< There is no need to define additional pixels, image is extended already$/;"	e	enum:NppStBorderType
nppStBorderWrap	opencv2/cudalegacy/NPP_staging.hpp	/^    nppStBorderWrap   = 2, \/\/\/< Wrap out of range position. Image becomes periodic.$/;"	e	enum:NppStBorderType
nppStSupersample	opencv2/cudalegacy/NPP_staging.hpp	/^    nppStSupersample, \/\/\/< Supersampling. For downscaling only$/;"	e	enum:NppStInterpMode
nth_element	cpp_src/stl_algo.h	/^    nth_element(_RandomAccessIterator __first, _RandomAccessIterator __nth,$/;"	f	namespace:std
nth_element_minimal_n	5/parallel/settings.h	/^    _SequenceIndex              nth_element_minimal_n;$/;"	m	struct:__gnu_parallel::_Settings
nu02	opencv2/core/types.hpp	/^    CV_PROP_RW double  nu20, nu11, nu02, nu30, nu21, nu12, nu03;$/;"	m	class:cv::Moments
nu03	opencv2/core/types.hpp	/^    CV_PROP_RW double  nu20, nu11, nu02, nu30, nu21, nu12, nu03;$/;"	m	class:cv::Moments
nu11	opencv2/core/types.hpp	/^    CV_PROP_RW double  nu20, nu11, nu02, nu30, nu21, nu12, nu03;$/;"	m	class:cv::Moments
nu12	opencv2/core/types.hpp	/^    CV_PROP_RW double  nu20, nu11, nu02, nu30, nu21, nu12, nu03;$/;"	m	class:cv::Moments
nu20	opencv2/core/types.hpp	/^    CV_PROP_RW double  nu20, nu11, nu02, nu30, nu21, nu12, nu03;$/;"	m	class:cv::Moments
nu21	opencv2/core/types.hpp	/^    CV_PROP_RW double  nu20, nu11, nu02, nu30, nu21, nu12, nu03;$/;"	m	class:cv::Moments
nu30	opencv2/core/types.hpp	/^    CV_PROP_RW double  nu20, nu11, nu02, nu30, nu21, nu12, nu03;$/;"	m	class:cv::Moments
nu_type	opencv2/core/hal/intrin.hpp	/^    typedef int nu_type;$/;"	t	struct:cv::V_TypeTraits
nu_type	opencv2/core/hal/intrin.hpp	/^    typedef uchar nu_type;$/;"	t	struct:cv::V_TypeTraits
nu_type	opencv2/core/hal/intrin.hpp	/^    typedef unsigned nu_type;$/;"	t	struct:cv::V_TypeTraits
nu_type	opencv2/core/hal/intrin.hpp	/^    typedef ushort nu_type;$/;"	t	struct:cv::V_TypeTraits
null_node_update	5/ext/pb_ds/tag_and_trait.hpp	/^    struct null_node_update : public null_type$/;"	s	namespace:__gnu_pbds
null_node_update_pointer	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	/^      null_node_update_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_BIN_TREE_NAME
null_node_update_pointer	5/ext/pb_ds/detail/bin_search_tree_/traits.hpp	/^      null_node_update_pointer;$/;"	t	struct:__gnu_pbds::detail::bin_search_tree_traits
null_node_update_pointer	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      null_node_update_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
null_node_update_pointer	5/ext/pb_ds/detail/ov_tree_map_/traits.hpp	/^      null_node_update_pointer;$/;"	t	struct:__gnu_pbds::detail::tree_traits
null_node_update_pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename traits_type::null_node_update_pointer null_node_update_pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
null_node_update_pointer	5/ext/pb_ds/detail/pat_trie_/traits.hpp	/^      typedef null_node_update<node_const_iterator, node_const_iterator, _ATraits, _Alloc>* 	null_node_update_pointer;$/;"	t	struct:__gnu_pbds::detail::trie_traits
null_node_update_pointer	5/ext/pb_ds/detail/pat_trie_/traits.hpp	/^      typedef null_node_update<node_const_iterator, node_iterator, _ATraits, _Alloc>* 		null_node_update_pointer;$/;"	t	struct:__gnu_pbds::detail::trie_traits
null_type	5/ext/pb_ds/tag_and_trait.hpp	/^  struct null_type { };$/;"	s	namespace:__gnu_pbds
null_update	5/ext/pb_ds/detail/tree_policy/node_metadata_selector.hpp	/^	  null_update = is_same<__node_u, __nnode_u>::value$/;"	e	enum:__gnu_pbds::detail::tree_node_metadata_dispatch::__anon29
null_update	5/ext/pb_ds/detail/trie_policy/node_metadata_selector.hpp	/^	  null_update = is_same<__node_u, __nnode_u>::value$/;"	e	enum:__gnu_pbds::detail::trie_node_metadata_dispatch::__anon39
numBands	opencv2/stitching/detail/blenders.hpp	/^    int numBands() const { return actual_num_bands_; }$/;"	f	class:cv::detail::MultiBandBlender
numDetectedFrames	opencv2/objdetect/detection_based_tracker.hpp	/^            int numDetectedFrames;$/;"	m	struct:cv::DetectionBasedTracker::TrackedObject
numFramesNotDetected	opencv2/objdetect/detection_based_tracker.hpp	/^            int numFramesNotDetected;$/;"	m	struct:cv::DetectionBasedTracker::TrackedObject
numLastPositionsToTrack	opencv2/objdetect/detection_based_tracker.hpp	/^            int numLastPositionsToTrack;$/;"	m	struct:cv::DetectionBasedTracker::InnerParameters
numStepsToShowWithoutDetecting	opencv2/objdetect/detection_based_tracker.hpp	/^            int numStepsToShowWithoutDetecting;$/;"	m	struct:cv::DetectionBasedTracker::InnerParameters
numStepsToTrackWithoutDetectingIfObjectHasNotBeenShown	opencv2/objdetect/detection_based_tracker.hpp	/^            int numStepsToTrackWithoutDetectingIfObjectHasNotBeenShown;$/;"	m	struct:cv::DetectionBasedTracker::InnerParameters
numStepsToWaitBeforeFirstShow	opencv2/objdetect/detection_based_tracker.hpp	/^            int numStepsToWaitBeforeFirstShow;$/;"	m	struct:cv::DetectionBasedTracker::InnerParameters
numTrackedSteps	opencv2/objdetect/detection_based_tracker.hpp	/^        int numTrackedSteps;$/;"	m	class:cv::DetectionBasedTracker
numVertices	opencv2/stitching/detail/util.hpp	/^    int numVertices() const { return static_cast<int>(edges_.size()); }$/;"	f	class:cv::detail::Graph
num_bands_	opencv2/stitching/detail/blenders.hpp	/^    int actual_num_bands_, num_bands_;$/;"	m	class:cv::detail::MultiBandBlender
num_children	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      num_children() const$/;"	f	class:__gnu_pbds::detail::pat_trie_base::_Node_citer
num_distinct_rank_bounds	5/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp	/^	num_distinct_rank_bounds = 48$/;"	e	enum:__gnu_pbds::detail::__anon35
num_distinct_sizes	5/ext/pb_ds/detail/resize_policy/hash_prime_size_policy_imp.hpp	/^      num_distinct_sizes = sizeof(std::size_t) != 8 ? $/;"	e	enum:detail::__anon51
num_distinct_sizes_32_bit	5/ext/pb_ds/detail/resize_policy/hash_prime_size_policy_imp.hpp	/^      num_distinct_sizes_32_bit = 30,$/;"	e	enum:detail::__anon51
num_distinct_sizes_64_bit	5/ext/pb_ds/detail/resize_policy/hash_prime_size_policy_imp.hpp	/^      num_distinct_sizes_64_bit = 62,$/;"	e	enum:detail::__anon51
num_errs_per_measurement_	opencv2/stitching/detail/motion_estimators.hpp	/^    int num_errs_per_measurement_;$/;"	m	class:cv::detail::BundleAdjusterBase
num_get	cpp_src/locale_facets.h	/^      num_get(size_t __refs = 0) : facet(__refs) { }$/;"	f	class:std::num_get
num_get	cpp_src/locale_facets.h	/^    class num_get : public locale::facet$/;"	c	namespace:std
num_images_	opencv2/stitching/detail/motion_estimators.hpp	/^    int num_images_;$/;"	m	class:cv::detail::BundleAdjusterBase
num_inliers	opencv2/stitching/detail/matchers.hpp	/^    int num_inliers;                    \/\/!< Number of geometrically consistent matches$/;"	m	struct:cv::detail::MatchesInfo
num_layers_	opencv2/stitching/detail/matchers.hpp	/^    int num_octaves_, num_layers_;$/;"	m	class:cv::detail::SurfFeaturesFinderGpu
num_layers_descr_	opencv2/stitching/detail/matchers.hpp	/^    int num_octaves_descr_, num_layers_descr_;$/;"	m	class:cv::detail::SurfFeaturesFinderGpu
num_matches_thresh1_	opencv2/stitching/detail/matchers.hpp	/^    int num_matches_thresh1_;$/;"	m	class:cv::detail::BestOf2NearestMatcher
num_matches_thresh2_	opencv2/stitching/detail/matchers.hpp	/^    int num_matches_thresh2_;$/;"	m	class:cv::detail::BestOf2NearestMatcher
num_octaves_	opencv2/stitching/detail/matchers.hpp	/^    int num_octaves_, num_layers_;$/;"	m	class:cv::detail::SurfFeaturesFinderGpu
num_octaves_descr_	opencv2/stitching/detail/matchers.hpp	/^    int num_octaves_descr_, num_layers_descr_;$/;"	m	class:cv::detail::SurfFeaturesFinderGpu
num_params_per_cam_	opencv2/stitching/detail/motion_estimators.hpp	/^    int num_params_per_cam_;$/;"	m	class:cv::detail::BundleAdjusterBase
num_put	cpp_src/locale_facets.h	/^      num_put(size_t __refs = 0) : facet(__refs) { }$/;"	f	class:std::num_put
num_put	cpp_src/locale_facets.h	/^    class num_put : public locale::facet$/;"	c	namespace:std
numberOfDisparities	opencv2/calib3d/calib3d_c.h	/^    int numberOfDisparities; \/\/ maximum disparity - minimum disparity (> 0)$/;"	m	struct:CvStereoBMState
number_of_inner_iterations	opencv2/cudalegacy/NCVBroxOpticalFlow.hpp	/^    Ncv32u number_of_inner_iterations;$/;"	m	struct:NCVBroxOpticalFlowDescriptor
number_of_outer_iterations	opencv2/cudalegacy/NCVBroxOpticalFlow.hpp	/^    Ncv32u number_of_outer_iterations;$/;"	m	struct:NCVBroxOpticalFlowDescriptor
number_of_solver_iterations	opencv2/cudalegacy/NCVBroxOpticalFlow.hpp	/^    Ncv32u number_of_solver_iterations;$/;"	m	struct:NCVBroxOpticalFlowDescriptor
numeric	cpp_src/locale_classes.h	/^    static const category numeric	= 1L << 1;$/;"	m	class:std::locale
numeric_limits	opencv2/core/cuda/limits.hpp	/^template <> struct numeric_limits<bool>$/;"	s	namespace:cv::cuda::device
numeric_limits	opencv2/core/cuda/limits.hpp	/^template <> struct numeric_limits<double>$/;"	s	namespace:cv::cuda::device
numeric_limits	opencv2/core/cuda/limits.hpp	/^template <> struct numeric_limits<float>$/;"	s	namespace:cv::cuda::device
numeric_limits	opencv2/core/cuda/limits.hpp	/^template <> struct numeric_limits<int>$/;"	s	namespace:cv::cuda::device
numeric_limits	opencv2/core/cuda/limits.hpp	/^template <> struct numeric_limits<short>$/;"	s	namespace:cv::cuda::device
numeric_limits	opencv2/core/cuda/limits.hpp	/^template <> struct numeric_limits<signed char>$/;"	s	namespace:cv::cuda::device
numeric_limits	opencv2/core/cuda/limits.hpp	/^template <> struct numeric_limits<unsigned char>$/;"	s	namespace:cv::cuda::device
numeric_limits	opencv2/core/cuda/limits.hpp	/^template <> struct numeric_limits<unsigned int>$/;"	s	namespace:cv::cuda::device
numeric_limits	opencv2/core/cuda/limits.hpp	/^template <> struct numeric_limits<unsigned short>$/;"	s	namespace:cv::cuda::device
numeric_limits	opencv2/cudev/util/limits.hpp	/^template <> struct numeric_limits<bool>$/;"	s	namespace:cv::cudev
numeric_limits	opencv2/cudev/util/limits.hpp	/^template <> struct numeric_limits<double>$/;"	s	namespace:cv::cudev
numeric_limits	opencv2/cudev/util/limits.hpp	/^template <> struct numeric_limits<float>$/;"	s	namespace:cv::cudev
numeric_limits	opencv2/cudev/util/limits.hpp	/^template <> struct numeric_limits<int>$/;"	s	namespace:cv::cudev
numeric_limits	opencv2/cudev/util/limits.hpp	/^template <> struct numeric_limits<schar>$/;"	s	namespace:cv::cudev
numeric_limits	opencv2/cudev/util/limits.hpp	/^template <> struct numeric_limits<short>$/;"	s	namespace:cv::cudev
numeric_limits	opencv2/cudev/util/limits.hpp	/^template <> struct numeric_limits<uchar>$/;"	s	namespace:cv::cudev
numeric_limits	opencv2/cudev/util/limits.hpp	/^template <> struct numeric_limits<uint>$/;"	s	namespace:cv::cudev
numeric_limits	opencv2/cudev/util/limits.hpp	/^template <> struct numeric_limits<ushort>$/;"	s	namespace:cv::cudev
numpunct	cpp_src/locale_facets.h	/^      numpunct(__c_locale __cloc, size_t __refs = 0)$/;"	f	class:std::numpunct
numpunct	cpp_src/locale_facets.h	/^      numpunct(__cache_type* __cache, size_t __refs = 0)$/;"	f	class:std::numpunct
numpunct	cpp_src/locale_facets.h	/^      numpunct(size_t __refs = 0) : facet(__refs), _M_data(NULL)$/;"	f	class:std::numpunct
numpunct	cpp_src/locale_facets.h	/^    class numpunct : public locale::facet$/;"	c	namespace:std
numpunct_byname	cpp_src/locale_facets.h	/^      numpunct_byname(const char* __s, size_t __refs = 0)$/;"	f	class:std::numpunct_byname
numpunct_byname	cpp_src/locale_facets.h	/^    class numpunct_byname : public numpunct<_CharT>$/;"	c	namespace:std
nzcount	opencv2/core/mat.inl.hpp	/^size_t SparseMat::nzcount() const$/;"	f	class:cv::SparseMat
obj	opencv2/core/mat.hpp	/^    void* obj;$/;"	m	class:cv::_InputArray
obj	opencv2/core/ocl.hpp	/^    const void* obj;$/;"	m	class:cv::ocl::KernelArg
obj_	opencv2/videostab/global_motion.hpp	/^    std::vector<double> obj_, collb_, colub_;$/;"	m	class:cv::videostab::MotionEstimatorL1
obj_	opencv2/videostab/motion_stabilizing.hpp	/^    std::vector<double> obj_, collb_, colub_;$/;"	m	class:cv::videostab::LpMotionStabilizer
object	opencv2/flann/any.h	/^    void* object;$/;"	m	struct:cvflann::any
object_registry	opencv2/flann/object_factory.h	/^    ObjectRegistry object_registry;$/;"	m	class:cvflann::ObjectFactory
obtainRefinedCameraParams	opencv2/stitching/detail/motion_estimators.hpp	/^    void obtainRefinedCameraParams(std::vector<CameraParams> &) const {}$/;"	f	class:cv::detail::NoBundleAdjuster
ocl	opencv2/core/directx.hpp	/^namespace ocl {$/;"	n	namespace:cv::directx
ocl	opencv2/core/ocl.hpp	/^namespace cv { namespace ocl {$/;"	n	namespace:cv
ocl	opencv2/core/ocl_genbase.hpp	/^namespace ocl$/;"	n	namespace:cv
ocl	opencv2/core/opengl.hpp	/^namespace ocl {$/;"	n	namespace:cv::ogl
ocl	opencv2/core/va_intel.hpp	/^namespace ocl {$/;"	n	namespace:cv::va_intel
oclSvmDetector	opencv2/objdetect.hpp	/^    UMat oclSvmDetector;$/;"	m	struct:cv::HOGDescriptor
oct	cpp_src/ios_base.h	/^    static const fmtflags oct =         _S_oct;$/;"	m	class:std::ios_base
oct	cpp_src/ios_base.h	/^  oct(ios_base& __base)$/;"	f	namespace:std
octave	opencv2/core/types.hpp	/^    CV_PROP_RW int octave; \/\/!< octave (pyramid layer) from which the keypoint has been extracted$/;"	m	class:cv::KeyPoint
off_type	cpp_src/basic_ios.h	/^      typedef typename _Traits::off_type             off_type;$/;"	t	class:std::basic_ios
off_type	cpp_src/char_traits.h	/^      typedef std::streamoff  off_type;$/;"	t	struct:_Char_types
off_type	cpp_src/char_traits.h	/^      typedef typename _Char_types<_CharT>::off_type    off_type;$/;"	t	struct:char_traits
offset	opencv2/core/mat.hpp	/^    size_t offset;$/;"	m	class:cv::UMat
ogl	opencv2/core/base.hpp	/^namespace ogl$/;"	n	namespace:cv
ogl	opencv2/core/opengl.hpp	/^namespace cv { namespace ogl {$/;"	n	namespace:cv
ok	cpp_src/codecvt.h	/^      ok,$/;"	e	enum:std::codecvt_base::result
oldStream	opencv2/cudalegacy/private.hpp	/^        cudaStream_t oldStream;$/;"	m	class:cv::cuda::NppStStreamHandler
omp_loop_static_tag	5/parallel/tags.h	/^  struct omp_loop_static_tag : public parallel_tag { };$/;"	s	namespace:__gnu_parallel
omp_loop_tag	5/parallel/tags.h	/^  struct omp_loop_tag : public parallel_tag { };$/;"	s	namespace:__gnu_parallel
ones	opencv2/core/mat.inl.hpp	/^MatExpr Mat_<_Tp>::ones(Size sz)$/;"	f	class:cv::Mat_
ones	opencv2/core/mat.inl.hpp	/^MatExpr Mat_<_Tp>::ones(int rows, int cols)$/;"	f	class:cv::Mat_
ones	opencv2/core/matx.hpp	/^Matx<_Tp,m,n> Matx<_Tp,m,n>::ones()$/;"	f	class:cv::Matx
op	cpp_src/stl_function.h	/^      _Operation op;$/;"	m	class:std::binder1st
op	cpp_src/stl_function.h	/^      _Operation op;$/;"	m	class:std::binder2nd
op	opencv2/core/cuda/functional.hpp	/^        Op op;$/;"	m	struct:cv::cuda::device::binder1st
op	opencv2/core/cuda/functional.hpp	/^        Op op;$/;"	m	struct:cv::cuda::device::binder2nd
op	opencv2/core/mat.hpp	/^    const MatOp* op;$/;"	m	class:cv::MatExpr
op	opencv2/cudev/functional/functional.hpp	/^    Op op;$/;"	m	struct:cv::cudev::Binder1st
op	opencv2/cudev/functional/functional.hpp	/^    Op op;$/;"	m	struct:cv::cudev::Binder2nd
op	opencv2/cudev/functional/tuple_adapter.hpp	/^    Op op;$/;"	m	struct:cv::cudev::BinaryTupleAdapter
op	opencv2/cudev/functional/tuple_adapter.hpp	/^    Op op;$/;"	m	struct:cv::cudev::UnaryTupleAdapter
op	opencv2/cudev/grid/detail/reduce.hpp	/^        __device__ __forceinline__ static const Op& op(const Op& aop)$/;"	f	struct:cv::cudev::grid_reduce_detail::Unroll
op	opencv2/cudev/grid/detail/reduce.hpp	/^        __device__ __forceinline__ static tuple<Op, Op, Op, Op> op(const Op& aop)$/;"	f	struct:cv::cudev::grid_reduce_detail::Unroll
op	opencv2/cudev/grid/detail/reduce.hpp	/^        __device__ __forceinline__ static tuple<Op, Op, Op> op(const Op& aop)$/;"	f	struct:cv::cudev::grid_reduce_detail::Unroll
op	opencv2/cudev/grid/detail/reduce.hpp	/^        __device__ __forceinline__ static tuple<Op, Op> op(const Op& aop)$/;"	f	struct:cv::cudev::grid_reduce_detail::Unroll
op	opencv2/cudev/ptr2d/transform.hpp	/^    Op op;$/;"	m	struct:cv::cudev::BinaryTransformPtr
op	opencv2/cudev/ptr2d/transform.hpp	/^    Op op;$/;"	m	struct:cv::cudev::UnaryTransformPtr
open	cpp_src/locale_facets.h	/^      open(const basic_string<char>& __s, const locale& __loc) const$/;"	f	class:std::messages
open_mode	cpp_src/ios_base.h	/^    typedef int open_mode;$/;"	t	class:std::ios_base
openmode	cpp_src/ios_base.h	/^    typedef _Ios_Openmode openmode;$/;"	t	class:std::ios_base
operator !	cpp_src/basic_ios.h	/^      operator!() const$/;"	f	class:std::basic_ios
operator !	cpp_src/valarray_after.h	/^    _Expr<_Dom, _Tp>::operator!() const$/;"	f	class:std::_Expr
operator !	opencv2/core/types.hpp	/^bool operator !(const Range& r)$/;"	f	namespace:cv
operator !=	5/debug/safe_local_iterator.h	/^    operator!=(const _Safe_local_iterator<_Iterator, _Sequence>& __lhs,$/;"	f	namespace:__gnu_debug
operator !=	5/debug/safe_local_iterator.h	/^    operator!=(const _Safe_local_iterator<_IteratorL, _Sequence>& __lhs,$/;"	f	namespace:__gnu_debug
operator !=	5/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp	/^      operator!=(const PB_DS_TREE_CONST_NODE_ITERATOR_CLASS_C_DEC& other) const$/;"	f	class:__gnu_pbds::detail::bin_search_tree_const_node_it_
operator !=	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	/^      operator!=(const PB_DS_TREE_CONST_IT_C_DEC& other) const$/;"	f	class:__gnu_pbds::detail::bin_search_tree_const_it_
operator !=	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	/^      operator!=(const PB_DS_TREE_CONST_ODIR_IT_C_DEC& other) const$/;"	f	class:__gnu_pbds::detail::bin_search_tree_const_it_
operator !=	5/ext/pb_ds/detail/binary_heap_/const_iterator.hpp	/^      operator!=(const binary_heap_const_iterator_& other) const$/;"	f	class:__gnu_pbds::detail::binary_heap_const_iterator_
operator !=	5/ext/pb_ds/detail/binary_heap_/point_const_iterator.hpp	/^      operator!=(const binary_heap_point_const_iterator_& other) const$/;"	f	class:__gnu_pbds::detail::binary_heap_point_const_iterator_
operator !=	5/ext/pb_ds/detail/cc_hash_table_map_/cmp_fn_imps.hpp	/^operator!=(const Other_HT_Map_Type& other) const$/;"	f	class:PB_DS_CLASS_C_DEC
operator !=	5/ext/pb_ds/detail/cc_hash_table_map_/info_fn_imps.hpp	/^operator!=(const Other_HT_Map_Type& other) const$/;"	f	class:PB_DS_CLASS_C_DEC
operator !=	5/ext/pb_ds/detail/left_child_next_sibling_heap_/const_iterator.hpp	/^      operator!=(const PB_DS_CLASS_C_DEC& other) const$/;"	f	class:__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_
operator !=	5/ext/pb_ds/detail/left_child_next_sibling_heap_/point_const_iterator.hpp	/^      operator!=(const PB_DS_CLASS_C_DEC& other) const$/;"	f	class:__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_
operator !=	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	/^      operator!=(const this_type& other) const$/;"	f	class:__gnu_pbds::detail::ov_tree_node_const_it_
operator !=	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	operator!=(const const_iterator& other) const$/;"	f	struct:__gnu_pbds::detail::pat_trie_base::_Inode::const_iterator
operator !=	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	operator!=(const iterator& other) const$/;"	f	struct:__gnu_pbds::detail::pat_trie_base::_Inode::iterator
operator !=	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      operator!=(const PB_DS_CONST_ODIR_IT_C_DEC& other) const$/;"	f	class:__gnu_pbds::detail::pat_trie_base::_CIter
operator !=	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      operator!=(const _CIter& other) const$/;"	f	class:__gnu_pbds::detail::pat_trie_base::_CIter
operator !=	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      operator!=(const _Node_citer& other) const$/;"	f	class:__gnu_pbds::detail::pat_trie_base::_Node_citer
operator !=	5/ext/pb_ds/detail/unordered_iterator/point_const_iterator.hpp	/^  operator!=(const point_const_iterator_& other) const$/;"	f	class:point_const_iterator_
operator !=	5/ext/pb_ds/detail/unordered_iterator/point_const_iterator.hpp	/^  operator!=(const point_iterator_& other) const$/;"	f	class:point_const_iterator_
operator !=	5/ext/pb_ds/detail/unordered_iterator/point_iterator.hpp	/^  operator!=(const point_const_iterator_& other) const$/;"	f	class:point_iterator_
operator !=	5/ext/pb_ds/detail/unordered_iterator/point_iterator.hpp	/^  operator!=(const point_iterator_& other) const$/;"	f	class:point_iterator_
operator !=	5/parallel/base.h	/^      operator!=(const _PseudoSequenceIterator& __i2)$/;"	f	class:__gnu_parallel::_PseudoSequenceIterator
operator !=	cpp_src/allocator.h	/^    operator!=(const allocator<_T1>&, const allocator<_T2>&)$/;"	f	namespace:std
operator !=	cpp_src/allocator.h	/^    operator!=(const allocator<_Tp>&, const allocator<_Tp>&)$/;"	f	namespace:std
operator !=	cpp_src/basic_string.h	/^    operator!=(const _CharT* __lhs,$/;"	f	namespace:std
operator !=	cpp_src/basic_string.h	/^    operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	namespace:std
operator !=	cpp_src/locale_classes.h	/^    operator!=(const locale& __other) const throw ()$/;"	f	class:std::locale
operator !=	cpp_src/postypes.h	/^    operator!=(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)$/;"	f	namespace:std
operator !=	cpp_src/stl_bvector.h	/^    operator!=(const _Bit_iterator_base& __i) const$/;"	f	struct:std::_Bit_iterator_base
operator !=	cpp_src/stl_deque.h	/^    operator!=(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x,$/;"	f	namespace:std
operator !=	cpp_src/stl_deque.h	/^    operator!=(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x,$/;"	f	namespace:std
operator !=	cpp_src/stl_deque.h	/^    operator!=(const deque<_Tp, _Alloc>& __x,$/;"	f	namespace:std
operator !=	cpp_src/stl_iterator.h	/^    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,$/;"	f
operator !=	cpp_src/stl_iterator.h	/^    operator!=(const __normal_iterator<_IteratorL, _Container>& __lhs,$/;"	f
operator !=	cpp_src/stl_iterator.h	/^    operator!=(const reverse_iterator<_Iterator>& __x,$/;"	f	namespace:std
operator !=	cpp_src/stl_iterator.h	/^    operator!=(const reverse_iterator<_IteratorL>& __x,$/;"	f	namespace:std
operator !=	cpp_src/stl_list.h	/^      operator!=(const _Self& __x) const$/;"	f	struct:std::_List_const_iterator
operator !=	cpp_src/stl_list.h	/^      operator!=(const _Self& __x) const$/;"	f	struct:std::_List_iterator
operator !=	cpp_src/stl_list.h	/^    operator!=(const _List_iterator<_Val>& __x,$/;"	f	namespace:std
operator !=	cpp_src/stl_list.h	/^    operator!=(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>& __y)$/;"	f	namespace:std
operator !=	cpp_src/stl_map.h	/^    operator!=(const map<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	namespace:std
operator !=	cpp_src/stl_multimap.h	/^    operator!=(const multimap<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	namespace:std
operator !=	cpp_src/stl_multiset.h	/^    operator!=(const multiset<_Key, _Compare, _Alloc>& __x,$/;"	f	namespace:std
operator !=	cpp_src/stl_pair.h	/^    operator!=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)$/;"	f	namespace:std
operator !=	cpp_src/stl_queue.h	/^    operator!=(const queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)$/;"	f	namespace:std
operator !=	cpp_src/stl_relops.h	/^      operator!=(const _Tp& __x, const _Tp& __y)$/;"	f	namespace:std::rel_ops
operator !=	cpp_src/stl_set.h	/^    operator!=(const set<_Key, _Compare, _Alloc>& __x,$/;"	f	namespace:std
operator !=	cpp_src/stl_stack.h	/^    operator!=(const stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)$/;"	f	namespace:std
operator !=	cpp_src/stl_tree.h	/^      operator!=(const _Self& __x) const$/;"	f	struct:std::_Rb_tree_const_iterator
operator !=	cpp_src/stl_tree.h	/^      operator!=(const _Self& __x) const$/;"	f	struct:std::_Rb_tree_iterator
operator !=	cpp_src/stl_tree.h	/^    operator!=(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,$/;"	f	namespace:std
operator !=	cpp_src/stl_tree.h	/^    operator!=(const _Rb_tree_iterator<_Val>& __x,$/;"	f	namespace:std
operator !=	cpp_src/stl_vector.h	/^    operator!=(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)$/;"	f	namespace:std
operator !=	cpp_src/stream_iterator.h	/^    operator!=(const istream_iterator<_Tp, _CharT, _Traits, _Dist>& __x,$/;"	f	namespace:std
operator !=	cpp_src/streambuf_iterator.h	/^    operator!=(const istreambuf_iterator<_CharT, _Traits>& __a,$/;"	f	namespace:std
operator !=	opencv2/core/core_c.h	/^template<typename _Tp> inline bool operator != (const SeqIterator<_Tp>& a,$/;"	f	namespace:cv
operator !=	opencv2/core/cvstd.hpp	/^static inline bool operator!= (const String& lhs, const String& rhs) { return 0 != lhs.compare(rhs); }$/;"	f	namespace:cv
operator !=	opencv2/core/cvstd.hpp	/^static inline bool operator!= (const String& lhs, const char*   rhs) { return 0 != lhs.compare(rhs); }$/;"	f	namespace:cv
operator !=	opencv2/core/cvstd.hpp	/^static inline bool operator!= (const char*   lhs, const String& rhs) { return 0 != rhs.compare(lhs); }$/;"	f	namespace:cv
operator !=	opencv2/core/mat.inl.hpp	/^bool MatSize::operator != (const MatSize& sz) const$/;"	f	class:cv::MatSize
operator !=	opencv2/core/mat.inl.hpp	/^bool operator != (const MatConstIterator& a, const MatConstIterator& b)$/;"	f	namespace:cv
operator !=	opencv2/core/mat.inl.hpp	/^bool operator != (const MatConstIterator_<_Tp>& a, const MatConstIterator_<_Tp>& b)$/;"	f	namespace:cv
operator !=	opencv2/core/mat.inl.hpp	/^bool operator != (const MatIterator_<_Tp>& a, const MatIterator_<_Tp>& b)$/;"	f	namespace:cv
operator !=	opencv2/core/mat.inl.hpp	/^bool operator != (const SparseMatConstIterator& it1, const SparseMatConstIterator& it2)$/;"	f	namespace:cv
operator !=	opencv2/core/matx.hpp	/^bool operator != (const Matx<_Tp, m, n>& a, const Matx<_Tp, m, n>& b)$/;"	f	namespace:cv
operator !=	opencv2/core/persistence.hpp	/^bool operator != (const FileNodeIterator& it1, const FileNodeIterator& it2)$/;"	f	namespace:cv
operator !=	opencv2/core/ptr.inl.hpp	/^bool operator != (const Ptr<T>& ptr1, const Ptr<T>& ptr2)$/;"	f	namespace:cv
operator !=	opencv2/core/types.hpp	/^bool operator != ( const Scalar_<_Tp>& a, const Scalar_<_Tp>& b )$/;"	f	namespace:cv
operator !=	opencv2/core/types.hpp	/^bool operator != (const Complex<_Tp>& a, const Complex<_Tp>& b)$/;"	f	namespace:cv
operator !=	opencv2/core/types.hpp	/^bool operator != (const Point3_<_Tp>& a, const Point3_<_Tp>& b)$/;"	f	namespace:cv
operator !=	opencv2/core/types.hpp	/^bool operator != (const Point_<_Tp>& a, const Point_<_Tp>& b)$/;"	f	namespace:cv
operator !=	opencv2/core/types.hpp	/^bool operator != (const Range& r1, const Range& r2)$/;"	f	namespace:cv
operator !=	opencv2/core/types.hpp	/^bool operator != (const Rect_<_Tp>& a, const Rect_<_Tp>& b)$/;"	f	namespace:cv
operator !=	opencv2/core/types.hpp	/^bool operator != (const Size_<_Tp>& a, const Size_<_Tp>& b)$/;"	f	namespace:cv
operator &	cpp_src/ios_base.h	/^  operator&(_Ios_Fmtflags __a, _Ios_Fmtflags __b)$/;"	f	namespace:std
operator &	cpp_src/ios_base.h	/^  operator&(_Ios_Iostate __a, _Ios_Iostate __b)$/;"	f	namespace:std
operator &	cpp_src/ios_base.h	/^  operator&(_Ios_Openmode __a, _Ios_Openmode __b)$/;"	f	namespace:std
operator &	opencv2/core/types.hpp	/^Range operator & (const Range& r1, const Range& r2)$/;"	f	namespace:cv
operator &	opencv2/core/types.hpp	/^Rect_<_Tp> operator & (const Rect_<_Tp>& a, const Rect_<_Tp>& b)$/;"	f	namespace:cv
operator &=	cpp_src/ios_base.h	/^  operator&=(_Ios_Fmtflags& __a, _Ios_Fmtflags __b)$/;"	f	namespace:std
operator &=	cpp_src/ios_base.h	/^  operator&=(_Ios_Iostate& __a, _Ios_Iostate __b)$/;"	f	namespace:std
operator &=	cpp_src/ios_base.h	/^  operator&=(_Ios_Openmode& __a, _Ios_Openmode __b)$/;"	f	namespace:std
operator &=	opencv2/core/types.hpp	/^Range& operator &= (Range& r1, const Range& r2)$/;"	f	namespace:cv
operator &=	opencv2/core/types.hpp	/^Rect_<_Tp>& operator &= ( Rect_<_Tp>& a, const Rect_<_Tp>& b )$/;"	f	namespace:cv
operator ()	5/bits/predefined_ops.h	/^	operator()(_Iterator __it)$/;"	f	struct:__gnu_cxx::__ops::_Iter_comp_to_val
operator ()	5/bits/predefined_ops.h	/^	operator()(_Iterator __it)$/;"	f	struct:__gnu_cxx::__ops::_Iter_equals_val
operator ()	5/bits/predefined_ops.h	/^	operator()(_Iterator __it)$/;"	f	struct:__gnu_cxx::__ops::_Iter_negate
operator ()	5/bits/predefined_ops.h	/^	operator()(_Iterator __it)$/;"	f	struct:__gnu_cxx::__ops::_Iter_pred
operator ()	5/bits/predefined_ops.h	/^	operator()(_Iterator __it, _Value& __val)$/;"	f	struct:__gnu_cxx::__ops::_Iter_comp_val
operator ()	5/bits/predefined_ops.h	/^	operator()(_Iterator2 __it2)$/;"	f	struct:__gnu_cxx::__ops::_Iter_comp_to_iter
operator ()	5/bits/predefined_ops.h	/^	operator()(_Iterator2 __it2)$/;"	f	struct:__gnu_cxx::__ops::_Iter_equals_iter
operator ()	5/bits/predefined_ops.h	/^	operator()(_Value& __val, _Iterator __it)$/;"	f	struct:__gnu_cxx::__ops::_Val_comp_iter
operator ()	5/bits/predefined_ops.h	/^        operator()(_Iterator1 __it1, _Iterator2 __it2)$/;"	f	struct:__gnu_cxx::__ops::_Iter_comp_iter
operator ()	5/bits/predefined_ops.h	/^      operator()(_Iterator __it, _Value& __val) const$/;"	f	struct:__gnu_cxx::__ops::_Iter_equal_to_val
operator ()	5/bits/predefined_ops.h	/^      operator()(_Iterator __it, _Value& __val) const$/;"	f	struct:__gnu_cxx::__ops::_Iter_less_val
operator ()	5/bits/predefined_ops.h	/^      operator()(_Iterator1 __it1, _Iterator2 __it2) const$/;"	f	struct:__gnu_cxx::__ops::_Iter_equal_to_iter
operator ()	5/bits/predefined_ops.h	/^      operator()(_Iterator1 __it1, _Iterator2 __it2) const$/;"	f	struct:__gnu_cxx::__ops::_Iter_less_iter
operator ()	5/bits/predefined_ops.h	/^      operator()(_Value& __val, _Iterator __it) const$/;"	f	struct:__gnu_cxx::__ops::_Val_less_iter
operator ()	5/debug/safe_sequence.h	/^      operator()(const _Iterator& __x) const$/;"	f	class:__gnu_debug::_After_nth_from
operator ()	5/debug/safe_sequence.h	/^      operator()(const _Type& __x) const$/;"	f	class:__gnu_debug::_Equal_to
operator ()	5/debug/safe_sequence.h	/^      operator()(const _Type& __x) const$/;"	f	class:__gnu_debug::_Not_equal_to
operator ()	5/ext/pb_ds/detail/binary_heap_/entry_cmp.hpp	/^	  operator()(entry lhs, entry rhs) const$/;"	f	struct:__gnu_pbds::detail::entry_cmp::type
operator ()	5/ext/pb_ds/detail/binary_heap_/entry_pred.hpp	/^	  operator()(entry p_v) const$/;"	f	struct:__gnu_pbds::detail::entry_pred::type
operator ()	5/ext/pb_ds/detail/eq_fn/eq_by_less.hpp	/^      operator()(const Key& r_lhs, const Key& r_rhs) const$/;"	f	struct:__gnu_pbds::detail::eq_by_less
operator ()	5/ext/pb_ds/detail/eq_fn/hash_eq_fn.hpp	/^      operator()(key_const_reference r_lhs_key, $/;"	f	struct:__gnu_pbds::detail::hash_eq_fn
operator ()	5/ext/pb_ds/detail/eq_fn/hash_eq_fn.hpp	/^      operator()(key_const_reference r_lhs_key, size_type lhs_hash, $/;"	f	struct:__gnu_pbds::detail::hash_eq_fn
operator ()	5/ext/pb_ds/detail/hash_fn/direct_mask_range_hashing_imp.hpp	/^operator()(size_type hash) const$/;"	f	class:PB_DS_CLASS_C_DEC
operator ()	5/ext/pb_ds/detail/hash_fn/direct_mod_range_hashing_imp.hpp	/^operator()(size_type hash) const$/;"	f	class:PB_DS_CLASS_C_DEC
operator ()	5/ext/pb_ds/detail/hash_fn/linear_probe_fn_imp.hpp	/^operator()(size_type i) const$/;"	f	class:PB_DS_CLASS_C_DEC
operator ()	5/ext/pb_ds/detail/hash_fn/quadratic_probe_fn_imp.hpp	/^operator()(size_type i) const$/;"	f	class:PB_DS_CLASS_C_DEC
operator ()	5/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp	/^    operator()$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
operator ()	5/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp	/^    operator()(key_const_reference r_key) const$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
operator ()	5/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp	/^    operator()$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
operator ()	5/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp	/^    operator()(key_const_reference r_key) const$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
operator ()	5/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp	/^    operator()(key_const_reference, size_type hash, size_type i) const$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
operator ()	5/ext/pb_ds/detail/list_update_policy/lu_counter_metadata.hpp	/^	operator()(Metadata_Reference r_data, size_type m_max_count) const$/;"	f	class:__gnu_pbds::detail::lu_counter_policy_base
operator ()	5/ext/pb_ds/detail/list_update_policy/lu_counter_metadata.hpp	/^	operator()(size_type max_size) const$/;"	f	class:__gnu_pbds::detail::lu_counter_policy_base
operator ()	5/ext/pb_ds/detail/pat_trie_/synth_access_traits.hpp	/^    operator()(key_const_reference r_lhs, key_const_reference r_rhs)$/;"	f	class:__gnu_pbds::detail::PB_DS_SYNTH_E_ACCESS_TRAITS_C_DEC
operator ()	5/ext/pb_ds/detail/tree_policy/order_statistics_imp.hpp	/^operator()(node_iterator node_it, node_const_iterator end_nd_it) const$/;"	f	class:PB_DS_CLASS_C_DEC
operator ()	5/ext/pb_ds/detail/trie_policy/order_statistics_imp.hpp	/^operator()(node_iterator nd_it, node_const_iterator \/*end_nd_it*\/) const$/;"	f	class:PB_DS_CLASS_C_DEC
operator ()	5/ext/pb_ds/detail/trie_policy/prefix_search_node_update_imp.hpp	/^operator()(node_iterator \/*nd_it*\/, node_const_iterator \/*end_nd_it*\/) const$/;"	f	class:PB_DS_CLASS_C_DEC
operator ()	5/ext/pb_ds/list_update_policy.hpp	/^      operator()() const$/;"	f	class:__gnu_pbds::lu_counter_policy
operator ()	5/ext/pb_ds/list_update_policy.hpp	/^      operator()(metadata_reference r_data) const$/;"	f	class:__gnu_pbds::lu_counter_policy
operator ()	5/ext/pb_ds/list_update_policy.hpp	/^     operator()() const$/;"	f	class:__gnu_pbds::lu_move_to_front_policy
operator ()	5/ext/pb_ds/list_update_policy.hpp	/^     operator()(metadata_reference r_metadata) const$/;"	f	class:__gnu_pbds::lu_move_to_front_policy
operator ()	5/parallel/base.h	/^      bool operator()(const _T1& __a, const _T2& __b)$/;"	f	class:__gnu_parallel::_EqualFromLess
operator ()	5/parallel/base.h	/^      bool operator()(const _T1& __t1, const _T2& __t2) const$/;"	f	struct:__gnu_parallel::_EqualTo
operator ()	5/parallel/base.h	/^      operator()(_FirstArgumentType& __x)$/;"	f	class:__gnu_parallel::__binder2nd
operator ()	5/parallel/base.h	/^      operator()(_SecondArgumentType& __x) const$/;"	f	class:__gnu_parallel::__binder1st
operator ()	5/parallel/base.h	/^      operator()(const _FirstArgumentType& __x) const$/;"	f	class:__gnu_parallel::__binder2nd
operator ()	5/parallel/base.h	/^      operator()(const _SecondArgumentType& __x)$/;"	f	class:__gnu_parallel::__binder1st
operator ()	5/parallel/base.h	/^      operator()(const _T1& __t1, const _T2& __t2) const$/;"	f	struct:__gnu_parallel::_Less
operator ()	5/parallel/base.h	/^      operator()(const _T2& __t2, const _T1& __t1) const$/;"	f	struct:__gnu_parallel::_Less
operator ()	5/parallel/base.h	/^      operator()(const _Tp1& __x, const _Tp2& __y) const$/;"	f	struct:__gnu_parallel::_Multiplies
operator ()	5/parallel/base.h	/^      operator()(const _Tp1& __x, const _Tp2& __y) const$/;"	f	struct:__gnu_parallel::_Plus
operator ()	5/parallel/base.h	/^      operator()(const argument_type& __x)$/;"	f	class:__gnu_parallel::__unary_negate
operator ()	5/parallel/find_selectors.h	/^        operator()(_RAIter1 __i1, _RAIter2 __i2, _Pred __pred)$/;"	f	struct:__gnu_parallel::__find_first_of_selector
operator ()	5/parallel/find_selectors.h	/^      operator()(_RAIter1 __i1, _RAIter2 __i2, _Pred __pred)$/;"	f	struct:__gnu_parallel::__adjacent_find_selector
operator ()	5/parallel/find_selectors.h	/^      operator()(_RAIter1 __i1, _RAIter2 __i2, _Pred __pred)$/;"	f	struct:__gnu_parallel::__find_if_selector
operator ()	5/parallel/find_selectors.h	/^      operator()(_RAIter1 __i1, _RAIter2 __i2, _Pred __pred)$/;"	f	struct:__gnu_parallel::__mismatch_selector
operator ()	5/parallel/for_each_selectors.h	/^        operator()(_Op __mult, _It __current)$/;"	f	struct:__gnu_parallel::__inner_product_selector
operator ()	5/parallel/for_each_selectors.h	/^        operator()(_Op __o, _It __i)$/;"	f	struct:__gnu_parallel::__accumulate_selector
operator ()	5/parallel/for_each_selectors.h	/^        operator()(_Op __o, _It __i)$/;"	f	struct:__gnu_parallel::__identity_selector
operator ()	5/parallel/for_each_selectors.h	/^        operator()(_Op& __o, _It __i)$/;"	f	struct:__gnu_parallel::__adjacent_difference_selector
operator ()	5/parallel/for_each_selectors.h	/^        operator()(_Op& __o, _It __i)$/;"	f	struct:__gnu_parallel::__count_if_selector
operator ()	5/parallel/for_each_selectors.h	/^        operator()(_Op& __o, _It __i)$/;"	f	struct:__gnu_parallel::__for_each_selector
operator ()	5/parallel/for_each_selectors.h	/^        operator()(_Op& __o, _It __i)$/;"	f	struct:__gnu_parallel::__generate_selector
operator ()	5/parallel/for_each_selectors.h	/^        operator()(_Op& __o, _It __i)$/;"	f	struct:__gnu_parallel::__transform1_selector
operator ()	5/parallel/for_each_selectors.h	/^        operator()(_Op& __o, _It __i)$/;"	f	struct:__gnu_parallel::__transform2_selector
operator ()	5/parallel/for_each_selectors.h	/^        operator()(_ValueType& __v, _It __i)$/;"	f	struct:__gnu_parallel::__count_selector
operator ()	5/parallel/for_each_selectors.h	/^        operator()(_ValueType& __v, _It __i)$/;"	f	struct:__gnu_parallel::__fill_selector
operator ()	5/parallel/for_each_selectors.h	/^        operator()(const _Result& __x, const _Addend& __y)$/;"	f	struct:__gnu_parallel::__accumulate_binop_reduct
operator ()	5/parallel/for_each_selectors.h	/^      operator()(_It __i) { }$/;"	f	struct:__gnu_parallel::_Nothing
operator ()	5/parallel/for_each_selectors.h	/^      operator()(_It __x, _It __y)$/;"	f	struct:__gnu_parallel::__max_element_reduct
operator ()	5/parallel/for_each_selectors.h	/^      operator()(_It __x, _It __y)$/;"	f	struct:__gnu_parallel::__min_element_reduct
operator ()	5/parallel/for_each_selectors.h	/^      operator()(_Op& __o, _It __i)$/;"	f	struct:__gnu_parallel::__replace_if_selector
operator ()	5/parallel/for_each_selectors.h	/^      operator()(_Tp& __v, _It __i)$/;"	f	struct:__gnu_parallel::__replace_selector
operator ()	5/parallel/for_each_selectors.h	/^    operator()(bool, bool) const$/;"	f	struct:__gnu_parallel::_DummyReduct
operator ()	5/parallel/multiseq_selection.h	/^      operator()(const std::pair<_T1, _T2>& __p1,$/;"	f	class:__gnu_parallel::_Lexicographic
operator ()	5/parallel/multiseq_selection.h	/^      operator()(const std::pair<_T1, _T2>& __p1,$/;"	f	class:__gnu_parallel::_LexicographicReverse
operator ()	5/parallel/multiway_merge.h	/^      operator()(_RAIter __first, _RAIter __last, _StrictWeakOrdering __comp)$/;"	f	struct:__gnu_parallel::_SamplingSorter
operator ()	5/parallel/multiway_merge.h	/^      operator()(_RAIterIterator __seqs_begin,$/;"	f	struct:__gnu_parallel::__multiway_merge_3_variant_sentinel_switch
operator ()	5/parallel/multiway_merge.h	/^      operator()(_RAIterIterator __seqs_begin,$/;"	f	struct:__gnu_parallel::__multiway_merge_4_variant_sentinel_switch
operator ()	5/parallel/multiway_merge.h	/^      operator()(_RAIterIterator __seqs_begin,$/;"	f	struct:__gnu_parallel::__multiway_merge_k_variant_sentinel_switch
operator ()	5/parallel/multiway_mergesort.h	/^      operator()(const _ThreadIndex __iam,$/;"	f	struct:__gnu_parallel::_SplitConsistently
operator ()	5/parallel/multiway_mergesort.h	/^      void operator()(const Seq_RAIter& __seqs_begin,$/;"	f	struct:__gnu_parallel::__possibly_stable_multiway_merge
operator ()	5/parallel/multiway_mergesort.h	/^      void operator()(const _RAIter __begin,$/;"	f	struct:__gnu_parallel::__possibly_stable_sort
operator ()	5/parallel/multiway_mergesort.h	/^      void operator()(const _RAIter& __begin,$/;"	f	struct:__gnu_parallel::__possibly_stable_sort
operator ()	5/parallel/random_number.h	/^    operator()()$/;"	f	class:__gnu_parallel::_RandomNumber
operator ()	5/parallel/random_number.h	/^    operator()(uint64_t local_supremum)$/;"	f	class:__gnu_parallel::_RandomNumber
operator ()	5/profile/impl/profiler_node.h	/^    bool operator() (__stack_t __stack1, __stack_t __stack2) const$/;"	f	class:__gnu_profile::__stack_hash
operator ()	5/profile/impl/profiler_node.h	/^    operator()(__stack_t __s) const$/;"	f	class:__gnu_profile::__stack_hash
operator ()	5/profile/impl/profiler_trace.h	/^    operator() (const __cost_factor* __factor)$/;"	f	struct:__gnu_profile::__cost_factor_writer
operator ()	5/profile/impl/profiler_trace.h	/^    operator()(__cost_factor* __factor)$/;"	f	struct:__gnu_profile::__cost_factor_setter
operator ()	5/profile/impl/profiler_trace.h	/^    operator()(const __warning_data& __info)$/;"	f	struct:__gnu_profile::__warn
operator ()	cpp_src/stl_function.h	/^      operator()(_Arg __x) const$/;"	f	class:std::pointer_to_unary_function
operator ()	cpp_src/stl_function.h	/^      operator()(_Arg1 __x, _Arg2 __y) const$/;"	f	class:std::pointer_to_binary_function
operator ()	cpp_src/stl_function.h	/^      operator()(_Pair& __x) const$/;"	f	struct:std::_Select1st
operator ()	cpp_src/stl_function.h	/^      operator()(_Pair& __x) const$/;"	f	struct:std::_Select2nd
operator ()	cpp_src/stl_function.h	/^      operator()(_Tp& __r) const$/;"	f	class:std::mem_fun_ref_t
operator ()	cpp_src/stl_function.h	/^      operator()(_Tp& __r, _Arg __x) const$/;"	f	class:std::mem_fun1_ref_t
operator ()	cpp_src/stl_function.h	/^      operator()(_Tp& __x) const$/;"	f	struct:std::_Identity
operator ()	cpp_src/stl_function.h	/^      operator()(_Tp* __p) const$/;"	f	class:std::mem_fun_t
operator ()	cpp_src/stl_function.h	/^      operator()(_Tp* __p, _Arg __x) const$/;"	f	class:std::mem_fun1_t
operator ()	cpp_src/stl_function.h	/^      operator()(const _Pair& __x) const$/;"	f	struct:std::_Select1st
operator ()	cpp_src/stl_function.h	/^      operator()(const _Pair& __x) const$/;"	f	struct:std::_Select2nd
operator ()	cpp_src/stl_function.h	/^      operator()(const _Tp& __r) const$/;"	f	class:std::const_mem_fun_ref_t
operator ()	cpp_src/stl_function.h	/^      operator()(const _Tp& __r, _Arg __x) const$/;"	f	class:std::const_mem_fun1_ref_t
operator ()	cpp_src/stl_function.h	/^      operator()(const _Tp& __x) const$/;"	f	struct:std::_Identity
operator ()	cpp_src/stl_function.h	/^      operator()(const _Tp& __x) const$/;"	f	struct:std::logical_not
operator ()	cpp_src/stl_function.h	/^      operator()(const _Tp& __x) const$/;"	f	struct:std::negate
operator ()	cpp_src/stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::divides
operator ()	cpp_src/stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::equal_to
operator ()	cpp_src/stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::greater
operator ()	cpp_src/stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::greater_equal
operator ()	cpp_src/stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::less
operator ()	cpp_src/stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::less_equal
operator ()	cpp_src/stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::logical_and
operator ()	cpp_src/stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::logical_or
operator ()	cpp_src/stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::minus
operator ()	cpp_src/stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::modulus
operator ()	cpp_src/stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::multiplies
operator ()	cpp_src/stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::not_equal_to
operator ()	cpp_src/stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::plus
operator ()	cpp_src/stl_function.h	/^      operator()(const _Tp* __p) const$/;"	f	class:std::const_mem_fun_t
operator ()	cpp_src/stl_function.h	/^      operator()(const _Tp* __p, _Arg __x) const$/;"	f	class:std::const_mem_fun1_t
operator ()	cpp_src/stl_function.h	/^      operator()(const typename _Operation::first_argument_type& __x) const$/;"	f	class:std::binder2nd
operator ()	cpp_src/stl_function.h	/^      operator()(const typename _Operation::second_argument_type& __x) const$/;"	f	class:std::binder1st
operator ()	cpp_src/stl_function.h	/^      operator()(const typename _Predicate::argument_type& __x) const$/;"	f	class:std::unary_negate
operator ()	cpp_src/stl_function.h	/^      operator()(const typename _Predicate::first_argument_type& __x,$/;"	f	class:std::binary_negate
operator ()	cpp_src/stl_function.h	/^      operator()(typename _Operation::first_argument_type& __x) const$/;"	f	class:std::binder2nd
operator ()	cpp_src/stl_function.h	/^      operator()(typename _Operation::second_argument_type& __x) const$/;"	f	class:std::binder1st
operator ()	cpp_src/stl_map.h	/^	bool operator()(const value_type& __x, const value_type& __y) const$/;"	f	class:std::map::value_compare
operator ()	cpp_src/stl_multimap.h	/^	bool operator()(const value_type& __x, const value_type& __y) const$/;"	f	class:std::multimap::value_compare
operator ()	cpp_src/valarray_after.h	/^    _Expr<_Clos, _Tp>::operator()() const$/;"	f	class:std::_Expr
operator ()	cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	struct:std::__abs
operator ()	cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	struct:std::__acos
operator ()	cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	struct:std::__asin
operator ()	cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	struct:std::__atan
operator ()	cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	struct:std::__bitwise_not
operator ()	cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	struct:std::__cos
operator ()	cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	struct:std::__cosh
operator ()	cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	struct:std::__exp
operator ()	cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	struct:std::__log
operator ()	cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	struct:std::__log10
operator ()	cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	struct:std::__negate
operator ()	cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	struct:std::__sin
operator ()	cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	struct:std::__sinh
operator ()	cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	struct:std::__sqrt
operator ()	cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	struct:std::__tan
operator ()	cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	struct:std::__tanh
operator ()	cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	struct:std::__unary_plus
operator ()	cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::__atan2
operator ()	cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::__bitwise_and
operator ()	cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::__bitwise_or
operator ()	cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::__bitwise_xor
operator ()	cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::__divides
operator ()	cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::__minus
operator ()	cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::__modulus
operator ()	cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::__multiplies
operator ()	cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::__plus
operator ()	cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::__pow
operator ()	cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::__shift_left
operator ()	cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::__shift_right
operator ()	cpp_src/valarray_before.h	/^      bool operator()(const _Tp& __x) const { return !__x; }$/;"	f	struct:std::__logical_not
operator ()	cpp_src/valarray_before.h	/^      bool operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::__equal_to
operator ()	cpp_src/valarray_before.h	/^      bool operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::__greater
operator ()	cpp_src/valarray_before.h	/^      bool operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::__greater_equal
operator ()	cpp_src/valarray_before.h	/^      bool operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::__less
operator ()	cpp_src/valarray_before.h	/^      bool operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::__less_equal
operator ()	cpp_src/valarray_before.h	/^      bool operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::__logical_and
operator ()	cpp_src/valarray_before.h	/^      bool operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::__logical_or
operator ()	cpp_src/valarray_before.h	/^      bool operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	struct:std::__not_equal_to
operator ()	opencv2/core/cuda.inl.hpp	/^GpuMat GpuMat::operator ()(Range rowRange_, Range colRange_) const$/;"	f	class:cv::cuda::GpuMat
operator ()	opencv2/core/cuda.inl.hpp	/^GpuMat GpuMat::operator ()(Rect roi) const$/;"	f	class:cv::cuda::GpuMat
operator ()	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ D operator ()(index_type y, index_type x) const$/;"	f	struct:cv::cuda::device::BorderReader
operator ()	opencv2/core/cuda/border_interpolate.hpp	/^        __device__ __forceinline__ elem_type operator ()(index_type y, index_type x) const$/;"	f	struct:cv::cuda::device::BorderReader
operator ()	opencv2/core/cuda/detail/color_detail.hpp	/^            __device__ __forceinline__ T operator()(const typename TypeVec<T, scn>::vec_type& src) const$/;"	f	struct:cv::cuda::device::color_detail::RGB2Gray
operator ()	opencv2/core/cuda/detail/color_detail.hpp	/^            __device__ __forceinline__ typename TypeVec<T, dcn>::vec_type operator ()(const typename TypeVec<T, scn>::vec_type& src) const$/;"	f	struct:cv::cuda::device::color_detail::RGB2YCrCb
operator ()	opencv2/core/cuda/detail/color_detail.hpp	/^            __device__ __forceinline__ typename TypeVec<T, dcn>::vec_type operator ()(const typename TypeVec<T, scn>::vec_type& src) const$/;"	f	struct:cv::cuda::device::color_detail::RGB2YUV
operator ()	opencv2/core/cuda/detail/color_detail.hpp	/^            __device__ __forceinline__ typename TypeVec<T, dcn>::vec_type operator ()(const typename TypeVec<T, scn>::vec_type& src) const$/;"	f	struct:cv::cuda::device::color_detail::YCrCb2RGB
operator ()	opencv2/core/cuda/detail/color_detail.hpp	/^            __device__ __forceinline__ typename TypeVec<T, dcn>::vec_type operator ()(const typename TypeVec<T, scn>::vec_type& src) const$/;"	f	struct:cv::cuda::device::color_detail::YUV2RGB
operator ()	opencv2/core/cuda/detail/color_detail.hpp	/^            __device__ __forceinline__ typename TypeVec<T, dcn>::vec_type operator()(T src) const$/;"	f	struct:cv::cuda::device::color_detail::Gray2RGB
operator ()	opencv2/core/cuda/detail/color_detail.hpp	/^            __device__ __forceinline__ typename TypeVec<T, dcn>::vec_type operator()(const typename TypeVec<T, scn>::vec_type& src) const$/;"	f	struct:cv::cuda::device::color_detail::HLS2RGB
operator ()	opencv2/core/cuda/detail/color_detail.hpp	/^            __device__ __forceinline__ typename TypeVec<T, dcn>::vec_type operator()(const typename TypeVec<T, scn>::vec_type& src) const$/;"	f	struct:cv::cuda::device::color_detail::HSV2RGB
operator ()	opencv2/core/cuda/detail/color_detail.hpp	/^            __device__ __forceinline__ typename TypeVec<T, dcn>::vec_type operator()(const typename TypeVec<T, scn>::vec_type& src) const$/;"	f	struct:cv::cuda::device::color_detail::RGB2HLS
operator ()	opencv2/core/cuda/detail/color_detail.hpp	/^            __device__ __forceinline__ typename TypeVec<T, dcn>::vec_type operator()(const typename TypeVec<T, scn>::vec_type& src) const$/;"	f	struct:cv::cuda::device::color_detail::RGB2HSV
operator ()	opencv2/core/cuda/detail/color_detail.hpp	/^            __device__ __forceinline__ typename TypeVec<T, dcn>::vec_type operator()(const typename TypeVec<T, scn>::vec_type& src) const$/;"	f	struct:cv::cuda::device::color_detail::RGB2XYZ
operator ()	opencv2/core/cuda/detail/color_detail.hpp	/^            __device__ __forceinline__ typename TypeVec<T, dcn>::vec_type operator()(const typename TypeVec<T, scn>::vec_type& src) const$/;"	f	struct:cv::cuda::device::color_detail::XYZ2RGB
operator ()	opencv2/core/cuda/detail/color_detail.hpp	/^            __device__ __forceinline__ typename TypeVec<float, dcn>::vec_type operator ()(const typename TypeVec<float, scn>::vec_type& src) const$/;"	f	struct:cv::cuda::device::color_detail::Lab2RGB
operator ()	opencv2/core/cuda/detail/color_detail.hpp	/^            __device__ __forceinline__ typename TypeVec<float, dcn>::vec_type operator ()(const typename TypeVec<float, scn>::vec_type& src) const$/;"	f	struct:cv::cuda::device::color_detail::Luv2RGB
operator ()	opencv2/core/cuda/detail/color_detail.hpp	/^            __device__ __forceinline__ typename TypeVec<float, dcn>::vec_type operator ()(const typename TypeVec<float, scn>::vec_type& src) const$/;"	f	struct:cv::cuda::device::color_detail::RGB2Lab
operator ()	opencv2/core/cuda/detail/color_detail.hpp	/^            __device__ __forceinline__ typename TypeVec<float, dcn>::vec_type operator ()(const typename TypeVec<float, scn>::vec_type& src) const$/;"	f	struct:cv::cuda::device::color_detail::RGB2Luv
operator ()	opencv2/core/cuda/detail/color_detail.hpp	/^            __device__ __forceinline__ typename TypeVec<uchar, dcn>::vec_type operator ()(const typename TypeVec<uchar, scn>::vec_type& src) const$/;"	f	struct:cv::cuda::device::color_detail::Lab2RGB
operator ()	opencv2/core/cuda/detail/color_detail.hpp	/^            __device__ __forceinline__ typename TypeVec<uchar, dcn>::vec_type operator ()(const typename TypeVec<uchar, scn>::vec_type& src) const$/;"	f	struct:cv::cuda::device::color_detail::Luv2RGB
operator ()	opencv2/core/cuda/detail/color_detail.hpp	/^            __device__ __forceinline__ typename TypeVec<uchar, dcn>::vec_type operator ()(const typename TypeVec<uchar, scn>::vec_type& src) const$/;"	f	struct:cv::cuda::device::color_detail::RGB2Lab
operator ()	opencv2/core/cuda/detail/color_detail.hpp	/^            __device__ __forceinline__ typename TypeVec<uchar, dcn>::vec_type operator ()(const typename TypeVec<uchar, scn>::vec_type& src) const$/;"	f	struct:cv::cuda::device::color_detail::RGB2Luv
operator ()	opencv2/core/cuda/detail/color_detail.hpp	/^            __device__ __forceinline__ uchar operator()(uint src) const$/;"	f	struct:cv::cuda::device::color_detail::RGB2Gray
operator ()	opencv2/core/cuda/detail/color_detail.hpp	/^            __device__ __forceinline__ uchar operator()(uint src) const$/;"	f	struct:cv::cuda::device::color_detail::RGB5x52Gray
operator ()	opencv2/core/cuda/detail/color_detail.hpp	/^            __device__ __forceinline__ uchar3 operator()(ushort src) const$/;"	f	struct:cv::cuda::device::color_detail::RGB5x52RGB
operator ()	opencv2/core/cuda/detail/color_detail.hpp	/^            __device__ __forceinline__ uint operator ()(uint src) const$/;"	f	struct:cv::cuda::device::color_detail::RGB2YCrCb
operator ()	opencv2/core/cuda/detail/color_detail.hpp	/^            __device__ __forceinline__ uint operator ()(uint src) const$/;"	f	struct:cv::cuda::device::color_detail::YCrCb2RGB
operator ()	opencv2/core/cuda/detail/color_detail.hpp	/^            __device__ __forceinline__ uint operator ()(uint src) const$/;"	f	struct:cv::cuda::device::color_detail::YUV2RGB
operator ()	opencv2/core/cuda/detail/color_detail.hpp	/^            __device__ __forceinline__ uint operator()(uint src) const$/;"	f	struct:cv::cuda::device::color_detail::Gray2RGB
operator ()	opencv2/core/cuda/detail/color_detail.hpp	/^            __device__ __forceinline__ uint operator()(uint src) const$/;"	f	struct:cv::cuda::device::color_detail::HLS2RGB
operator ()	opencv2/core/cuda/detail/color_detail.hpp	/^            __device__ __forceinline__ uint operator()(uint src) const$/;"	f	struct:cv::cuda::device::color_detail::HSV2RGB
operator ()	opencv2/core/cuda/detail/color_detail.hpp	/^            __device__ __forceinline__ uint operator()(uint src) const$/;"	f	struct:cv::cuda::device::color_detail::RGB2HLS
operator ()	opencv2/core/cuda/detail/color_detail.hpp	/^            __device__ __forceinline__ uint operator()(uint src) const$/;"	f	struct:cv::cuda::device::color_detail::RGB2HSV
operator ()	opencv2/core/cuda/detail/color_detail.hpp	/^            __device__ __forceinline__ uint operator()(uint src) const$/;"	f	struct:cv::cuda::device::color_detail::RGB2XYZ
operator ()	opencv2/core/cuda/detail/color_detail.hpp	/^            __device__ __forceinline__ uint operator()(uint src) const$/;"	f	struct:cv::cuda::device::color_detail::XYZ2RGB
operator ()	opencv2/core/cuda/detail/color_detail.hpp	/^            __device__ __forceinline__ uint operator()(ushort src) const$/;"	f	struct:cv::cuda::device::color_detail::RGB5x52RGB
operator ()	opencv2/core/cuda/detail/color_detail.hpp	/^            __device__ __forceinline__ ushort operator()(const uchar3& src) const$/;"	f	struct:cv::cuda::device::color_detail::RGB2RGB5x5
operator ()	opencv2/core/cuda/detail/color_detail.hpp	/^            __device__ __forceinline__ ushort operator()(uint src) const$/;"	f	struct:cv::cuda::device::color_detail::Gray2RGB5x5
operator ()	opencv2/core/cuda/detail/color_detail.hpp	/^            __device__ __forceinline__ ushort operator()(uint src) const$/;"	f	struct:cv::cuda::device::color_detail::RGB2RGB5x5
operator ()	opencv2/core/cuda/detail/color_detail.hpp	/^            __device__ typename TypeVec<T, dcn>::vec_type operator()(const typename TypeVec<T, scn>::vec_type& src) const$/;"	f	struct:cv::cuda::device::color_detail::RGB2RGB
operator ()	opencv2/core/cuda/detail/color_detail.hpp	/^            __device__ uint operator()(uint src) const$/;"	f	struct:cv::cuda::device::color_detail::RGB2RGB
operator ()	opencv2/core/cuda/filters.hpp	/^        __device__ __forceinline__ elem_type operator ()(float y, float x) const$/;"	f	struct:cv::cuda::device::AreaFilter
operator ()	opencv2/core/cuda/filters.hpp	/^        __device__ __forceinline__ elem_type operator ()(float y, float x) const$/;"	f	struct:cv::cuda::device::IntegerAreaFilter
operator ()	opencv2/core/cuda/filters.hpp	/^        __device__ __forceinline__ elem_type operator ()(float y, float x) const$/;"	f	struct:cv::cuda::device::LinearFilter
operator ()	opencv2/core/cuda/filters.hpp	/^        __device__ __forceinline__ elem_type operator ()(float y, float x) const$/;"	f	struct:cv::cuda::device::PointFilter
operator ()	opencv2/core/cuda/filters.hpp	/^        __device__ elem_type operator ()(float y, float x) const$/;"	f	struct:cv::cuda::device::CubicFilter
operator ()	opencv2/core/cuda/functional.hpp	/^        __device__ __forceinline__ D operator ()(typename TypeTraits<T>::ParameterType v) const$/;"	f	struct:cv::cuda::device::saturate_cast_func
operator ()	opencv2/core/cuda/functional.hpp	/^        __device__ __forceinline__ T operator ()(typename TypeTraits<T>::ParameterType a) const$/;"	f	struct:cv::cuda::device::negate
operator ()	opencv2/core/cuda/functional.hpp	/^        __device__ __forceinline__ T operator ()(typename TypeTraits<T>::ParameterType a,$/;"	f	struct:cv::cuda::device::bit_and
operator ()	opencv2/core/cuda/functional.hpp	/^        __device__ __forceinline__ T operator ()(typename TypeTraits<T>::ParameterType a,$/;"	f	struct:cv::cuda::device::bit_or
operator ()	opencv2/core/cuda/functional.hpp	/^        __device__ __forceinline__ T operator ()(typename TypeTraits<T>::ParameterType a,$/;"	f	struct:cv::cuda::device::bit_xor
operator ()	opencv2/core/cuda/functional.hpp	/^        __device__ __forceinline__ T operator ()(typename TypeTraits<T>::ParameterType a,$/;"	f	struct:cv::cuda::device::divides
operator ()	opencv2/core/cuda/functional.hpp	/^        __device__ __forceinline__ T operator ()(typename TypeTraits<T>::ParameterType a,$/;"	f	struct:cv::cuda::device::minus
operator ()	opencv2/core/cuda/functional.hpp	/^        __device__ __forceinline__ T operator ()(typename TypeTraits<T>::ParameterType a,$/;"	f	struct:cv::cuda::device::modulus
operator ()	opencv2/core/cuda/functional.hpp	/^        __device__ __forceinline__ T operator ()(typename TypeTraits<T>::ParameterType a,$/;"	f	struct:cv::cuda::device::multiplies
operator ()	opencv2/core/cuda/functional.hpp	/^        __device__ __forceinline__ T operator ()(typename TypeTraits<T>::ParameterType a,$/;"	f	struct:cv::cuda::device::plus
operator ()	opencv2/core/cuda/functional.hpp	/^        __device__ __forceinline__ T operator ()(typename TypeTraits<T>::ParameterType src1, typename TypeTraits<T>::ParameterType src2) const$/;"	f	struct:cv::cuda::device::hypot_sqr_func
operator ()	opencv2/core/cuda/functional.hpp	/^        __device__ __forceinline__ T operator ()(typename TypeTraits<T>::ParameterType v) const$/;"	f	struct:cv::cuda::device::bit_not
operator ()	opencv2/core/cuda/functional.hpp	/^        __device__ __forceinline__ T operator ()(typename TypeTraits<T>::ParameterType x) const$/;"	f	struct:cv::cuda::device::abs_func
operator ()	opencv2/core/cuda/functional.hpp	/^        __device__ __forceinline__ T operator()(typename TypeTraits<T>::ParameterType lhs, typename TypeTraits<T>::ParameterType rhs) const$/;"	f	struct:cv::cuda::device::maximum
operator ()	opencv2/core/cuda/functional.hpp	/^        __device__ __forceinline__ T operator()(typename TypeTraits<T>::ParameterType lhs, typename TypeTraits<T>::ParameterType rhs) const$/;"	f	struct:cv::cuda::device::minimum
operator ()	opencv2/core/cuda/functional.hpp	/^        __device__ __forceinline__ T operator()(typename TypeTraits<T>::ParameterType src) const$/;"	f	struct:cv::cuda::device::thresh_binary_func
operator ()	opencv2/core/cuda/functional.hpp	/^        __device__ __forceinline__ T operator()(typename TypeTraits<T>::ParameterType src) const$/;"	f	struct:cv::cuda::device::thresh_binary_inv_func
operator ()	opencv2/core/cuda/functional.hpp	/^        __device__ __forceinline__ T operator()(typename TypeTraits<T>::ParameterType src) const$/;"	f	struct:cv::cuda::device::thresh_to_zero_func
operator ()	opencv2/core/cuda/functional.hpp	/^        __device__ __forceinline__ T operator()(typename TypeTraits<T>::ParameterType src) const$/;"	f	struct:cv::cuda::device::thresh_to_zero_inv_func
operator ()	opencv2/core/cuda/functional.hpp	/^        __device__ __forceinline__ T operator()(typename TypeTraits<T>::ParameterType src) const$/;"	f	struct:cv::cuda::device::thresh_trunc_func
operator ()	opencv2/core/cuda/functional.hpp	/^        __device__ __forceinline__ bool operator ()(typename TypeTraits<T>::ParameterType a) const$/;"	f	struct:cv::cuda::device::logical_not
operator ()	opencv2/core/cuda/functional.hpp	/^        __device__ __forceinline__ bool operator ()(typename TypeTraits<T>::ParameterType a,$/;"	f	struct:cv::cuda::device::equal_to
operator ()	opencv2/core/cuda/functional.hpp	/^        __device__ __forceinline__ bool operator ()(typename TypeTraits<T>::ParameterType a,$/;"	f	struct:cv::cuda::device::greater
operator ()	opencv2/core/cuda/functional.hpp	/^        __device__ __forceinline__ bool operator ()(typename TypeTraits<T>::ParameterType a,$/;"	f	struct:cv::cuda::device::greater_equal
operator ()	opencv2/core/cuda/functional.hpp	/^        __device__ __forceinline__ bool operator ()(typename TypeTraits<T>::ParameterType a,$/;"	f	struct:cv::cuda::device::less
operator ()	opencv2/core/cuda/functional.hpp	/^        __device__ __forceinline__ bool operator ()(typename TypeTraits<T>::ParameterType a,$/;"	f	struct:cv::cuda::device::less_equal
operator ()	opencv2/core/cuda/functional.hpp	/^        __device__ __forceinline__ bool operator ()(typename TypeTraits<T>::ParameterType a,$/;"	f	struct:cv::cuda::device::logical_and
operator ()	opencv2/core/cuda/functional.hpp	/^        __device__ __forceinline__ bool operator ()(typename TypeTraits<T>::ParameterType a,$/;"	f	struct:cv::cuda::device::logical_or
operator ()	opencv2/core/cuda/functional.hpp	/^        __device__ __forceinline__ bool operator ()(typename TypeTraits<T>::ParameterType a,$/;"	f	struct:cv::cuda::device::not_equal_to
operator ()	opencv2/core/cuda/functional.hpp	/^        __device__ __forceinline__ bool operator()(typename TypeTraits<typename Predicate::first_argument_type>::ParameterType x,$/;"	f	struct:cv::cuda::device::binary_negate
operator ()	opencv2/core/cuda/functional.hpp	/^        __device__ __forceinline__ char operator ()(char x) const$/;"	f	struct:cv::cuda::device::abs_func
operator ()	opencv2/core/cuda/functional.hpp	/^        __device__ __forceinline__ double operator ()(double x) const$/;"	f	struct:cv::cuda::device::abs_func
operator ()	opencv2/core/cuda/functional.hpp	/^        __device__ __forceinline__ float operator ()(float x) const$/;"	f	struct:cv::cuda::device::abs_func
operator ()	opencv2/core/cuda/functional.hpp	/^        __device__ __forceinline__ int operator ()(int x) const$/;"	f	struct:cv::cuda::device::abs_func
operator ()	opencv2/core/cuda/functional.hpp	/^        __device__ __forceinline__ short operator ()(short x) const$/;"	f	struct:cv::cuda::device::abs_func
operator ()	opencv2/core/cuda/functional.hpp	/^        __device__ __forceinline__ signed char operator ()(signed char x) const$/;"	f	struct:cv::cuda::device::abs_func
operator ()	opencv2/core/cuda/functional.hpp	/^        __device__ __forceinline__ typename Op::result_type operator ()(typename TypeTraits<typename Op::second_argument_type>::ParameterType a) const$/;"	f	struct:cv::cuda::device::binder1st
operator ()	opencv2/core/cuda/functional.hpp	/^        __device__ __forceinline__ typename TypeTraits<T1>::ParameterType operator()(typename TypeTraits<T1>::ParameterType lhs, typename TypeTraits<T2>::ParameterType rhs) const$/;"	f	struct:cv::cuda::device::project1st
operator ()	opencv2/core/cuda/functional.hpp	/^        __device__ __forceinline__ typename TypeTraits<T2>::ParameterType operator()(typename TypeTraits<T1>::ParameterType lhs, typename TypeTraits<T2>::ParameterType rhs) const$/;"	f	struct:cv::cuda::device::project2nd
operator ()	opencv2/core/cuda/functional.hpp	/^        __device__ __forceinline__ typename TypeTraits<T>::ParameterType operator()(typename TypeTraits<T>::ParameterType x) const$/;"	f	struct:cv::cuda::device::identity
operator ()	opencv2/core/cuda/functional.hpp	/^        __device__ __forceinline__ unsigned char operator ()(unsigned char x) const$/;"	f	struct:cv::cuda::device::abs_func
operator ()	opencv2/core/cuda/functional.hpp	/^        __device__ __forceinline__ unsigned int operator ()(unsigned int x) const$/;"	f	struct:cv::cuda::device::abs_func
operator ()	opencv2/core/cuda/functional.hpp	/^        __device__ __forceinline__ unsigned short operator ()(unsigned short x) const$/;"	f	struct:cv::cuda::device::abs_func
operator ()	opencv2/core/cuda/functional.hpp	/^        __forceinline__ __device__ typename Op::result_type operator ()(typename TypeTraits<typename Op::first_argument_type>::ParameterType a) const$/;"	f	struct:cv::cuda::device::binder2nd
operator ()	opencv2/core/cuda/functional.hpp	/^      __device__ __forceinline__ bool operator()(typename TypeTraits<typename Predicate::argument_type>::ParameterType x) const$/;"	f	struct:cv::cuda::device::unary_negate
operator ()	opencv2/core/cuda/scan.hpp	/^        __device__ __forceinline__ T operator()( volatile T *ptr , const unsigned int idx)$/;"	f	struct:cv::cuda::device::WarpScan
operator ()	opencv2/core/cuda/scan.hpp	/^        __device__ __forceinline__ T operator()( volatile T *ptr , const unsigned int idx)$/;"	f	struct:cv::cuda::device::WarpScanNoComp
operator ()	opencv2/core/cuda/scan.hpp	/^        __device__ __forceinline__ T operator()(volatile T *ptr)$/;"	f	struct:cv::cuda::device::BlockScan
operator ()	opencv2/core/cuda/utility.hpp	/^        __device__ __forceinline__ bool operator()(int y, int x) const$/;"	f	struct:cv::cuda::device::MaskCollection
operator ()	opencv2/core/cuda/utility.hpp	/^        __device__ __forceinline__ bool operator()(int y, int x) const$/;"	f	struct:cv::cuda::device::SingleMask
operator ()	opencv2/core/cuda/utility.hpp	/^        __device__ __forceinline__ bool operator()(int y, int x) const$/;"	f	struct:cv::cuda::device::SingleMaskChannels
operator ()	opencv2/core/cuda/utility.hpp	/^        __device__ __forceinline__ bool operator()(int, int) const$/;"	f	struct:cv::cuda::device::WithOutMask
operator ()	opencv2/core/cuda/utility.hpp	/^        __device__ __forceinline__ bool operator()(int, int, int) const$/;"	f	struct:cv::cuda::device::WithOutMask
operator ()	opencv2/core/cuda_types.hpp	/^            __CV_CUDA_HOST_DEVICE__       T& operator ()(int y, int x)       { return ptr(y)[x]; }$/;"	f	struct:cv::cuda::PtrStep
operator ()	opencv2/core/cuda_types.hpp	/^            __CV_CUDA_HOST_DEVICE__ const T& operator ()(int y, int x) const { return ptr(y)[x]; }$/;"	f	struct:cv::cuda::PtrStep
operator ()	opencv2/core/mat.inl.hpp	/^Mat Mat::operator()( Range _rowRange, Range _colRange ) const$/;"	f	class:cv::Mat
operator ()	opencv2/core/mat.inl.hpp	/^Mat Mat::operator()( const Rect& roi ) const$/;"	f	class:cv::Mat
operator ()	opencv2/core/mat.inl.hpp	/^Mat Mat::operator()(const Range* ranges) const$/;"	f	class:cv::Mat
operator ()	opencv2/core/mat.inl.hpp	/^Mat Mat::operator()(const std::vector<Range>& ranges) const$/;"	f	class:cv::Mat
operator ()	opencv2/core/mat.inl.hpp	/^Mat_<_Tp> Mat_<_Tp>::operator()( const Range& _rowRange, const Range& _colRange ) const$/;"	f	class:cv::Mat_
operator ()	opencv2/core/mat.inl.hpp	/^Mat_<_Tp> Mat_<_Tp>::operator()( const Range* ranges ) const$/;"	f	class:cv::Mat_
operator ()	opencv2/core/mat.inl.hpp	/^Mat_<_Tp> Mat_<_Tp>::operator()( const Rect& roi ) const$/;"	f	class:cv::Mat_
operator ()	opencv2/core/mat.inl.hpp	/^Mat_<_Tp> Mat_<_Tp>::operator()(const std::vector<Range>& ranges) const$/;"	f	class:cv::Mat_
operator ()	opencv2/core/mat.inl.hpp	/^Size MatSize::operator()() const$/;"	f	class:cv::MatSize
operator ()	opencv2/core/mat.inl.hpp	/^UMat UMat::operator()( Range _rowRange, Range _colRange ) const$/;"	f	class:cv::UMat
operator ()	opencv2/core/mat.inl.hpp	/^UMat UMat::operator()( const Rect& roi ) const$/;"	f	class:cv::UMat
operator ()	opencv2/core/mat.inl.hpp	/^UMat UMat::operator()(const Range* ranges) const$/;"	f	class:cv::UMat
operator ()	opencv2/core/mat.inl.hpp	/^UMat UMat::operator()(const std::vector<Range>& ranges) const$/;"	f	class:cv::UMat
operator ()	opencv2/core/mat.inl.hpp	/^_Tp SparseMat_<_Tp>::operator()(const int* idx, size_t* hashval) const$/;"	f	class:cv::SparseMat_
operator ()	opencv2/core/mat.inl.hpp	/^_Tp SparseMat_<_Tp>::operator()(int i0, int i1, int i2, size_t* hashval) const$/;"	f	class:cv::SparseMat_
operator ()	opencv2/core/mat.inl.hpp	/^_Tp SparseMat_<_Tp>::operator()(int i0, int i1, size_t* hashval) const$/;"	f	class:cv::SparseMat_
operator ()	opencv2/core/mat.inl.hpp	/^_Tp SparseMat_<_Tp>::operator()(int i0, size_t* hashval) const$/;"	f	class:cv::SparseMat_
operator ()	opencv2/core/mat.inl.hpp	/^_Tp& Mat_<_Tp>::operator ()(Point pt)$/;"	f	class:cv::Mat_
operator ()	opencv2/core/mat.inl.hpp	/^_Tp& Mat_<_Tp>::operator ()(const Vec<int, n>& idx)$/;"	f	class:cv::Mat_
operator ()	opencv2/core/mat.inl.hpp	/^_Tp& Mat_<_Tp>::operator ()(const int* idx)$/;"	f	class:cv::Mat_
operator ()	opencv2/core/mat.inl.hpp	/^_Tp& Mat_<_Tp>::operator ()(int i0)$/;"	f	class:cv::Mat_
operator ()	opencv2/core/mat.inl.hpp	/^_Tp& Mat_<_Tp>::operator ()(int i0, int i1)$/;"	f	class:cv::Mat_
operator ()	opencv2/core/mat.inl.hpp	/^_Tp& Mat_<_Tp>::operator ()(int i0, int i1, int i2)$/;"	f	class:cv::Mat_
operator ()	opencv2/core/mat.inl.hpp	/^const _Tp& Mat_<_Tp>::operator ()(Point pt) const$/;"	f	class:cv::Mat_
operator ()	opencv2/core/mat.inl.hpp	/^const _Tp& Mat_<_Tp>::operator ()(const Vec<int, n>& idx) const$/;"	f	class:cv::Mat_
operator ()	opencv2/core/mat.inl.hpp	/^const _Tp& Mat_<_Tp>::operator ()(const int* idx) const$/;"	f	class:cv::Mat_
operator ()	opencv2/core/mat.inl.hpp	/^const _Tp& Mat_<_Tp>::operator ()(int i0) const$/;"	f	class:cv::Mat_
operator ()	opencv2/core/mat.inl.hpp	/^const _Tp& Mat_<_Tp>::operator ()(int i0, int i1) const$/;"	f	class:cv::Mat_
operator ()	opencv2/core/mat.inl.hpp	/^const _Tp& Mat_<_Tp>::operator ()(int i0, int i1, int i2) const$/;"	f	class:cv::Mat_
operator ()	opencv2/core/matx.hpp	/^    double operator ()(const Matx<_Tp, 1, 1>& a) const$/;"	f	struct:cv::internal::Matx_DetOp
operator ()	opencv2/core/matx.hpp	/^    double operator ()(const Matx<_Tp, 2, 2>& a) const$/;"	f	struct:cv::internal::Matx_DetOp
operator ()	opencv2/core/matx.hpp	/^    double operator ()(const Matx<_Tp, 3, 3>& a) const$/;"	f	struct:cv::internal::Matx_DetOp
operator ()	opencv2/core/matx.hpp	/^    double operator ()(const Matx<_Tp, m, m>& a) const$/;"	f	struct:cv::internal::Matx_DetOp
operator ()	opencv2/core/matx.hpp	/^_Tp& Matx<_Tp, m, n>::operator ()(int i)$/;"	f	class:cv::Matx
operator ()	opencv2/core/matx.hpp	/^_Tp& Matx<_Tp, m, n>::operator ()(int i, int j)$/;"	f	class:cv::Matx
operator ()	opencv2/core/matx.hpp	/^_Tp& Vec<_Tp, cn>::operator ()(int i)$/;"	f	class:cv::Vec
operator ()	opencv2/core/matx.hpp	/^const _Tp& Matx<_Tp, m, n>::operator ()(int i) const$/;"	f	class:cv::Matx
operator ()	opencv2/core/matx.hpp	/^const _Tp& Matx<_Tp, m, n>::operator()(int i, int j) const$/;"	f	class:cv::Matx
operator ()	opencv2/core/matx.hpp	/^const _Tp& Vec<_Tp, cn>::operator ()(int i) const$/;"	f	class:cv::Vec
operator ()	opencv2/core/operations.hpp	/^    bool operator()(const Matx<_Tp, 2, 2>& a, Matx<_Tp, 2, 2>& b, int) const$/;"	f	struct:cv::internal::Matx_FastInvOp
operator ()	opencv2/core/operations.hpp	/^    bool operator()(const Matx<_Tp, 2, 2>& a, const Matx<_Tp, 2, 1>& b,$/;"	f	struct:cv::internal::Matx_FastSolveOp
operator ()	opencv2/core/operations.hpp	/^    bool operator()(const Matx<_Tp, 3, 3>& a, Matx<_Tp, 3, 3>& b, int) const$/;"	f	struct:cv::internal::Matx_FastInvOp
operator ()	opencv2/core/operations.hpp	/^    bool operator()(const Matx<_Tp, 3, 3>& a, const Matx<_Tp, 3, 1>& b,$/;"	f	struct:cv::internal::Matx_FastSolveOp
operator ()	opencv2/core/operations.hpp	/^    bool operator()(const Matx<_Tp, m, m>& a, Matx<_Tp, m, m>& b, int method) const$/;"	f	struct:cv::internal::Matx_FastInvOp
operator ()	opencv2/core/operations.hpp	/^    bool operator()(const Matx<_Tp, m, m>& a, const Matx<_Tp, m, n>& b,$/;"	f	struct:cv::internal::Matx_FastSolveOp
operator ()	opencv2/core/operations.hpp	/^inline unsigned RNG::operator ()()           { return next(); }$/;"	f	class:cv::RNG
operator ()	opencv2/core/operations.hpp	/^inline unsigned RNG::operator ()(unsigned N) { return (unsigned)uniform(0,N); }$/;"	f	class:cv::RNG
operator ()	opencv2/core/persistence.hpp	/^        void operator()(const std::vector<_Tp>& vec) const$/;"	f	class:cv::internal::VecWriterProxy
operator ()	opencv2/core/persistence.hpp	/^        void operator()(std::vector<_Tp>& vec, size_t count) const$/;"	f	class:cv::internal::VecReaderProxy
operator ()	opencv2/core/ptr.inl.hpp	/^void DefaultDeleter<Y>::operator () (Y* p) const$/;"	f	class:cv::DefaultDeleter
operator ()	opencv2/core/wimage.hpp	/^    inline T* operator() (int c, int r)  {$/;"	f	class:cv::WImage
operator ()	opencv2/core/wimage.hpp	/^    inline const T* operator() (int c, int r) const  {$/;"	f	class:cv::WImage
operator ()	opencv2/cudev/functional/detail/color_cvt.hpp	/^        __device__ T operator ()(const typename MakeVec<T, scn>::type& src) const$/;"	f	struct:cv::cudev::color_cvt_detail::RGB2Gray
operator ()	opencv2/cudev/functional/detail/color_cvt.hpp	/^        __device__ float operator ()(const typename MakeVec<float, scn>::type& src) const$/;"	f	struct:cv::cudev::color_cvt_detail::RGB2Gray
operator ()	opencv2/cudev/functional/detail/color_cvt.hpp	/^        __device__ typename MakeVec<T, dcn>::type operator ()(T src) const$/;"	f	struct:cv::cudev::color_cvt_detail::Gray2RGB
operator ()	opencv2/cudev/functional/detail/color_cvt.hpp	/^        __device__ typename MakeVec<T, dcn>::type operator ()(const typename MakeVec<T, scn>::type& src) const$/;"	f	struct:cv::cudev::color_cvt_detail::RGB2RGB
operator ()	opencv2/cudev/functional/detail/color_cvt.hpp	/^        __device__ typename MakeVec<T, dcn>::type operator ()(const typename MakeVec<T, scn>::type& src) const$/;"	f	struct:cv::cudev::color_cvt_detail::RGB2XYZ
operator ()	opencv2/cudev/functional/detail/color_cvt.hpp	/^        __device__ typename MakeVec<T, dcn>::type operator ()(const typename MakeVec<T, scn>::type& src) const$/;"	f	struct:cv::cudev::color_cvt_detail::RGB2YCrCb
operator ()	opencv2/cudev/functional/detail/color_cvt.hpp	/^        __device__ typename MakeVec<T, dcn>::type operator ()(const typename MakeVec<T, scn>::type& src) const$/;"	f	struct:cv::cudev::color_cvt_detail::RGB2YUV
operator ()	opencv2/cudev/functional/detail/color_cvt.hpp	/^        __device__ typename MakeVec<T, dcn>::type operator ()(const typename MakeVec<T, scn>::type& src) const$/;"	f	struct:cv::cudev::color_cvt_detail::XYZ2RGB
operator ()	opencv2/cudev/functional/detail/color_cvt.hpp	/^        __device__ typename MakeVec<T, dcn>::type operator ()(const typename MakeVec<T, scn>::type& src) const$/;"	f	struct:cv::cudev::color_cvt_detail::YCrCb2RGB
operator ()	opencv2/cudev/functional/detail/color_cvt.hpp	/^        __device__ typename MakeVec<T, dcn>::type operator ()(const typename MakeVec<T, scn>::type& src) const$/;"	f	struct:cv::cudev::color_cvt_detail::YUV2RGB
operator ()	opencv2/cudev/functional/detail/color_cvt.hpp	/^        __device__ typename MakeVec<float, dcn>::type operator ()(const typename MakeVec<float, scn>::type& src) const$/;"	f	struct:cv::cudev::color_cvt_detail::HLS2RGB
operator ()	opencv2/cudev/functional/detail/color_cvt.hpp	/^        __device__ typename MakeVec<float, dcn>::type operator ()(const typename MakeVec<float, scn>::type& src) const$/;"	f	struct:cv::cudev::color_cvt_detail::HSV2RGB
operator ()	opencv2/cudev/functional/detail/color_cvt.hpp	/^        __device__ typename MakeVec<float, dcn>::type operator ()(const typename MakeVec<float, scn>::type& src) const$/;"	f	struct:cv::cudev::color_cvt_detail::Lab2RGB
operator ()	opencv2/cudev/functional/detail/color_cvt.hpp	/^        __device__ typename MakeVec<float, dcn>::type operator ()(const typename MakeVec<float, scn>::type& src) const$/;"	f	struct:cv::cudev::color_cvt_detail::Luv2RGB
operator ()	opencv2/cudev/functional/detail/color_cvt.hpp	/^        __device__ typename MakeVec<float, dcn>::type operator ()(const typename MakeVec<float, scn>::type& src) const$/;"	f	struct:cv::cudev::color_cvt_detail::RGB2HLS
operator ()	opencv2/cudev/functional/detail/color_cvt.hpp	/^        __device__ typename MakeVec<float, dcn>::type operator ()(const typename MakeVec<float, scn>::type& src) const$/;"	f	struct:cv::cudev::color_cvt_detail::RGB2HSV
operator ()	opencv2/cudev/functional/detail/color_cvt.hpp	/^        __device__ typename MakeVec<float, dcn>::type operator ()(const typename MakeVec<float, scn>::type& src) const$/;"	f	struct:cv::cudev::color_cvt_detail::RGB2Lab
operator ()	opencv2/cudev/functional/detail/color_cvt.hpp	/^        __device__ typename MakeVec<float, dcn>::type operator ()(const typename MakeVec<float, scn>::type& src) const$/;"	f	struct:cv::cudev::color_cvt_detail::RGB2Luv
operator ()	opencv2/cudev/functional/detail/color_cvt.hpp	/^        __device__ typename MakeVec<float, dcn>::type operator ()(const typename MakeVec<float, scn>::type& src) const$/;"	f	struct:cv::cudev::color_cvt_detail::RGB2XYZ
operator ()	opencv2/cudev/functional/detail/color_cvt.hpp	/^        __device__ typename MakeVec<float, dcn>::type operator ()(const typename MakeVec<float, scn>::type& src) const$/;"	f	struct:cv::cudev::color_cvt_detail::RGB2YCrCb
operator ()	opencv2/cudev/functional/detail/color_cvt.hpp	/^        __device__ typename MakeVec<float, dcn>::type operator ()(const typename MakeVec<float, scn>::type& src) const$/;"	f	struct:cv::cudev::color_cvt_detail::RGB2YUV
operator ()	opencv2/cudev/functional/detail/color_cvt.hpp	/^        __device__ typename MakeVec<float, dcn>::type operator ()(const typename MakeVec<float, scn>::type& src) const$/;"	f	struct:cv::cudev::color_cvt_detail::XYZ2RGB
operator ()	opencv2/cudev/functional/detail/color_cvt.hpp	/^        __device__ typename MakeVec<float, dcn>::type operator ()(const typename MakeVec<float, scn>::type& src) const$/;"	f	struct:cv::cudev::color_cvt_detail::YCrCb2RGB
operator ()	opencv2/cudev/functional/detail/color_cvt.hpp	/^        __device__ typename MakeVec<float, dcn>::type operator ()(const typename MakeVec<float, scn>::type& src) const$/;"	f	struct:cv::cudev::color_cvt_detail::YUV2RGB
operator ()	opencv2/cudev/functional/detail/color_cvt.hpp	/^        __device__ typename MakeVec<uchar, dcn>::type operator ()(const typename MakeVec<uchar, scn>::type& src) const$/;"	f	struct:cv::cudev::color_cvt_detail::HLS2RGB
operator ()	opencv2/cudev/functional/detail/color_cvt.hpp	/^        __device__ typename MakeVec<uchar, dcn>::type operator ()(const typename MakeVec<uchar, scn>::type& src) const$/;"	f	struct:cv::cudev::color_cvt_detail::HSV2RGB
operator ()	opencv2/cudev/functional/detail/color_cvt.hpp	/^        __device__ typename MakeVec<uchar, dcn>::type operator ()(const typename MakeVec<uchar, scn>::type& src) const$/;"	f	struct:cv::cudev::color_cvt_detail::Lab2RGB
operator ()	opencv2/cudev/functional/detail/color_cvt.hpp	/^        __device__ typename MakeVec<uchar, dcn>::type operator ()(const typename MakeVec<uchar, scn>::type& src) const$/;"	f	struct:cv::cudev::color_cvt_detail::Luv2RGB
operator ()	opencv2/cudev/functional/detail/color_cvt.hpp	/^        __device__ typename MakeVec<uchar, dcn>::type operator ()(const typename MakeVec<uchar, scn>::type& src) const$/;"	f	struct:cv::cudev::color_cvt_detail::RGB2HLS
operator ()	opencv2/cudev/functional/detail/color_cvt.hpp	/^        __device__ typename MakeVec<uchar, dcn>::type operator ()(const typename MakeVec<uchar, scn>::type& src) const$/;"	f	struct:cv::cudev::color_cvt_detail::RGB2HSV
operator ()	opencv2/cudev/functional/detail/color_cvt.hpp	/^        __device__ typename MakeVec<uchar, dcn>::type operator ()(const typename MakeVec<uchar, scn>::type& src) const$/;"	f	struct:cv::cudev::color_cvt_detail::RGB2Lab
operator ()	opencv2/cudev/functional/detail/color_cvt.hpp	/^        __device__ typename MakeVec<uchar, dcn>::type operator ()(const typename MakeVec<uchar, scn>::type& src) const$/;"	f	struct:cv::cudev::color_cvt_detail::RGB2Luv
operator ()	opencv2/cudev/functional/detail/color_cvt.hpp	/^        __device__ uchar operator ()(ushort src) const$/;"	f	struct:cv::cudev::color_cvt_detail::RGB5x52Gray
operator ()	opencv2/cudev/functional/detail/color_cvt.hpp	/^        __device__ uchar3 operator ()(ushort src) const$/;"	f	struct:cv::cudev::color_cvt_detail::RGB5x52RGB
operator ()	opencv2/cudev/functional/detail/color_cvt.hpp	/^        __device__ uchar4 operator ()(ushort src) const$/;"	f	struct:cv::cudev::color_cvt_detail::RGB5x52RGB
operator ()	opencv2/cudev/functional/detail/color_cvt.hpp	/^        __device__ ushort operator ()(const typename MakeVec<uchar, scn>::type& src) const$/;"	f	struct:cv::cudev::color_cvt_detail::RGB2RGB5x5
operator ()	opencv2/cudev/functional/detail/color_cvt.hpp	/^        __device__ ushort operator ()(const uchar3& src) const$/;"	f	struct:cv::cudev::color_cvt_detail::RGB2RGB5x5
operator ()	opencv2/cudev/functional/detail/color_cvt.hpp	/^        __device__ ushort operator ()(const uchar4& src) const$/;"	f	struct:cv::cudev::color_cvt_detail::RGB2RGB5x5
operator ()	opencv2/cudev/functional/detail/color_cvt.hpp	/^        __device__ ushort operator ()(uchar src) const$/;"	f	struct:cv::cudev::color_cvt_detail::Gray2RGB5x5
operator ()	opencv2/cudev/functional/functional.hpp	/^                                    operator ()(typename TypeTraits<T>::parameter_type a) const$/;"	f	struct:cv::cudev::logical_not
operator ()	opencv2/cudev/functional/functional.hpp	/^                                    operator ()(typename TypeTraits<T>::parameter_type a,$/;"	f	struct:cv::cudev::equal_to
operator ()	opencv2/cudev/functional/functional.hpp	/^                                    operator ()(typename TypeTraits<T>::parameter_type a,$/;"	f	struct:cv::cudev::greater
operator ()	opencv2/cudev/functional/functional.hpp	/^                                    operator ()(typename TypeTraits<T>::parameter_type a,$/;"	f	struct:cv::cudev::greater_equal
operator ()	opencv2/cudev/functional/functional.hpp	/^                                    operator ()(typename TypeTraits<T>::parameter_type a,$/;"	f	struct:cv::cudev::less
operator ()	opencv2/cudev/functional/functional.hpp	/^                                    operator ()(typename TypeTraits<T>::parameter_type a,$/;"	f	struct:cv::cudev::less_equal
operator ()	opencv2/cudev/functional/functional.hpp	/^                                    operator ()(typename TypeTraits<T>::parameter_type a,$/;"	f	struct:cv::cudev::logical_and
operator ()	opencv2/cudev/functional/functional.hpp	/^                                    operator ()(typename TypeTraits<T>::parameter_type a,$/;"	f	struct:cv::cudev::logical_or
operator ()	opencv2/cudev/functional/functional.hpp	/^                                    operator ()(typename TypeTraits<T>::parameter_type a,$/;"	f	struct:cv::cudev::not_equal_to
operator ()	opencv2/cudev/functional/functional.hpp	/^                    operator ()(typename TypeTraits<T1>::parameter_type lhs,$/;"	f	struct:cv::cudev::project1st
operator ()	opencv2/cudev/functional/functional.hpp	/^                    operator ()(typename TypeTraits<T1>::parameter_type,$/;"	f	struct:cv::cudev::project2nd
operator ()	opencv2/cudev/functional/functional.hpp	/^    __device__ T operator ()(T x, T y) const$/;"	f	struct:cv::cudev::direction_func
operator ()	opencv2/cudev/functional/functional.hpp	/^    __device__ __forceinline__ D operator ()(typename TypeTraits<T>::parameter_type v) const$/;"	f	struct:cv::cudev::saturate_cast_func
operator ()	opencv2/cudev/functional/functional.hpp	/^    __device__ __forceinline__ T operator ()(typename TypeTraits<T>::parameter_type a) const$/;"	f	struct:cv::cudev::negate
operator ()	opencv2/cudev/functional/functional.hpp	/^    __device__ __forceinline__ T operator ()(typename TypeTraits<T>::parameter_type a, typename TypeTraits<T>::parameter_type b) const$/;"	f	struct:cv::cudev::absdiff_func
operator ()	opencv2/cudev/functional/functional.hpp	/^    __device__ __forceinline__ T operator ()(typename TypeTraits<T>::parameter_type a,$/;"	f	struct:cv::cudev::bit_and
operator ()	opencv2/cudev/functional/functional.hpp	/^    __device__ __forceinline__ T operator ()(typename TypeTraits<T>::parameter_type a,$/;"	f	struct:cv::cudev::bit_lshift
operator ()	opencv2/cudev/functional/functional.hpp	/^    __device__ __forceinline__ T operator ()(typename TypeTraits<T>::parameter_type a,$/;"	f	struct:cv::cudev::bit_or
operator ()	opencv2/cudev/functional/functional.hpp	/^    __device__ __forceinline__ T operator ()(typename TypeTraits<T>::parameter_type a,$/;"	f	struct:cv::cudev::bit_rshift
operator ()	opencv2/cudev/functional/functional.hpp	/^    __device__ __forceinline__ T operator ()(typename TypeTraits<T>::parameter_type a,$/;"	f	struct:cv::cudev::bit_xor
operator ()	opencv2/cudev/functional/functional.hpp	/^    __device__ __forceinline__ T operator ()(typename TypeTraits<T>::parameter_type a,$/;"	f	struct:cv::cudev::divides
operator ()	opencv2/cudev/functional/functional.hpp	/^    __device__ __forceinline__ T operator ()(typename TypeTraits<T>::parameter_type a,$/;"	f	struct:cv::cudev::maximum
operator ()	opencv2/cudev/functional/functional.hpp	/^    __device__ __forceinline__ T operator ()(typename TypeTraits<T>::parameter_type a,$/;"	f	struct:cv::cudev::minimum
operator ()	opencv2/cudev/functional/functional.hpp	/^    __device__ __forceinline__ T operator ()(typename TypeTraits<T>::parameter_type a,$/;"	f	struct:cv::cudev::minus
operator ()	opencv2/cudev/functional/functional.hpp	/^    __device__ __forceinline__ T operator ()(typename TypeTraits<T>::parameter_type a,$/;"	f	struct:cv::cudev::modulus
operator ()	opencv2/cudev/functional/functional.hpp	/^    __device__ __forceinline__ T operator ()(typename TypeTraits<T>::parameter_type a,$/;"	f	struct:cv::cudev::multiplies
operator ()	opencv2/cudev/functional/functional.hpp	/^    __device__ __forceinline__ T operator ()(typename TypeTraits<T>::parameter_type a,$/;"	f	struct:cv::cudev::plus
operator ()	opencv2/cudev/functional/functional.hpp	/^    __device__ __forceinline__ T operator ()(typename TypeTraits<T>::parameter_type src) const$/;"	f	struct:cv::cudev::ThreshBinaryFunc
operator ()	opencv2/cudev/functional/functional.hpp	/^    __device__ __forceinline__ T operator ()(typename TypeTraits<T>::parameter_type src) const$/;"	f	struct:cv::cudev::ThreshBinaryInvFunc
operator ()	opencv2/cudev/functional/functional.hpp	/^    __device__ __forceinline__ T operator ()(typename TypeTraits<T>::parameter_type src) const$/;"	f	struct:cv::cudev::ThreshToZeroFunc
operator ()	opencv2/cudev/functional/functional.hpp	/^    __device__ __forceinline__ T operator ()(typename TypeTraits<T>::parameter_type src) const$/;"	f	struct:cv::cudev::ThreshToZeroInvFunc
operator ()	opencv2/cudev/functional/functional.hpp	/^    __device__ __forceinline__ T operator ()(typename TypeTraits<T>::parameter_type src) const$/;"	f	struct:cv::cudev::ThreshTruncFunc
operator ()	opencv2/cudev/functional/functional.hpp	/^    __device__ __forceinline__ T operator ()(typename TypeTraits<T>::parameter_type v) const$/;"	f	struct:cv::cudev::bit_not
operator ()	opencv2/cudev/functional/functional.hpp	/^    __device__ __forceinline__ T operator ()(typename TypeTraits<T>::parameter_type x) const$/;"	f	struct:cv::cudev::abs_func
operator ()	opencv2/cudev/functional/functional.hpp	/^    __device__ __forceinline__ T operator ()(typename TypeTraits<T>::parameter_type x) const$/;"	f	struct:cv::cudev::identity
operator ()	opencv2/cudev/functional/functional.hpp	/^    __device__ __forceinline__ T operator ()(typename TypeTraits<T>::parameter_type x) const$/;"	f	struct:cv::cudev::sqr_func
operator ()	opencv2/cudev/functional/functional.hpp	/^    __device__ __forceinline__ double operator ()(double val, double power) const$/;"	f	struct:cv::cudev::pow_func
operator ()	opencv2/cudev/functional/functional.hpp	/^    __device__ __forceinline__ double operator ()(double x) const$/;"	f	struct:cv::cudev::abs_func
operator ()	opencv2/cudev/functional/functional.hpp	/^    __device__ __forceinline__ float operator ()(T val, float power) const$/;"	f	struct:cv::cudev::pow_func
operator ()	opencv2/cudev/functional/functional.hpp	/^    __device__ __forceinline__ float operator ()(float x) const$/;"	f	struct:cv::cudev::abs_func
operator ()	opencv2/cudev/functional/functional.hpp	/^    __device__ __forceinline__ float operator ()(short v) const$/;"	f	struct:cv::cudev::saturate_cast_fp16_func
operator ()	opencv2/cudev/functional/functional.hpp	/^    __device__ __forceinline__ int operator ()(int x) const$/;"	f	struct:cv::cudev::abs_func
operator ()	opencv2/cudev/functional/functional.hpp	/^    __device__ __forceinline__ schar operator ()(schar x) const$/;"	f	struct:cv::cudev::abs_func
operator ()	opencv2/cudev/functional/functional.hpp	/^    __device__ __forceinline__ short operator ()(float v) const$/;"	f	struct:cv::cudev::saturate_cast_fp16_func
operator ()	opencv2/cudev/functional/functional.hpp	/^    __device__ __forceinline__ short operator ()(short x) const$/;"	f	struct:cv::cudev::abs_func
operator ()	opencv2/cudev/functional/functional.hpp	/^    __device__ __forceinline__ typename Op::result_type operator ()($/;"	f	struct:cv::cudev::Binder1st
operator ()	opencv2/cudev/functional/functional.hpp	/^    __device__ __forceinline__ typename Op::result_type operator ()($/;"	f	struct:cv::cudev::Binder2nd
operator ()	opencv2/cudev/functional/functional.hpp	/^    __device__ __forceinline__ typename Predicate::result_type operator ()($/;"	f	struct:cv::cudev::BinaryNegate
operator ()	opencv2/cudev/functional/functional.hpp	/^    __device__ __forceinline__ typename Predicate::result_type operator ()($/;"	f	struct:cv::cudev::UnaryNegate
operator ()	opencv2/cudev/functional/functional.hpp	/^    __device__ __forceinline__ typename functional_detail::FloatType<T>::type operator ()(typename TypeTraits<T>::parameter_type a, typename TypeTraits<T>::parameter_type b) const$/;"	f	struct:cv::cudev::magnitude_func
operator ()	opencv2/cudev/functional/functional.hpp	/^    __device__ __forceinline__ typename functional_detail::FloatType<T>::type operator ()(typename TypeTraits<T>::parameter_type a, typename TypeTraits<T>::parameter_type b) const$/;"	f	struct:cv::cudev::magnitude_sqr_func
operator ()	opencv2/cudev/functional/functional.hpp	/^    __device__ __forceinline__ uchar operator ()(uchar x) const$/;"	f	struct:cv::cudev::abs_func
operator ()	opencv2/cudev/functional/functional.hpp	/^    __device__ __forceinline__ uint operator ()(uint x) const$/;"	f	struct:cv::cudev::abs_func
operator ()	opencv2/cudev/functional/functional.hpp	/^    __device__ __forceinline__ ushort operator ()(ushort x) const$/;"	f	struct:cv::cudev::abs_func
operator ()	opencv2/cudev/functional/tuple_adapter.hpp	/^    __device__ __forceinline__ typename Op::result_type operator ()(const Tuple& t) const$/;"	f	struct:cv::cudev::BinaryTupleAdapter
operator ()	opencv2/cudev/functional/tuple_adapter.hpp	/^    __device__ __forceinline__ typename Op::result_type operator ()(const Tuple& t) const$/;"	f	struct:cv::cudev::UnaryTupleAdapter
operator ()	opencv2/cudev/ptr2d/constant.hpp	/^    __device__ __forceinline__ T operator ()(int, int) const { return value; }$/;"	f	struct:cv::cudev::ConstantPtr
operator ()	opencv2/cudev/ptr2d/deriv.hpp	/^    __device__ __forceinline__ typename PtrTraits<SrcPtr>::value_type operator ()(int y, int x) const$/;"	f	struct:cv::cudev::DerivXPtr
operator ()	opencv2/cudev/ptr2d/deriv.hpp	/^    __device__ __forceinline__ typename PtrTraits<SrcPtr>::value_type operator ()(int y, int x) const$/;"	f	struct:cv::cudev::DerivYPtr
operator ()	opencv2/cudev/ptr2d/deriv.hpp	/^    __device__ typename PtrTraits<SrcPtr>::value_type operator ()(int y, int x) const$/;"	f	struct:cv::cudev::LaplacianPtr
operator ()	opencv2/cudev/ptr2d/deriv.hpp	/^    __device__ typename PtrTraits<SrcPtr>::value_type operator ()(int y, int x) const$/;"	f	struct:cv::cudev::ScharrXPtr
operator ()	opencv2/cudev/ptr2d/deriv.hpp	/^    __device__ typename PtrTraits<SrcPtr>::value_type operator ()(int y, int x) const$/;"	f	struct:cv::cudev::ScharrYPtr
operator ()	opencv2/cudev/ptr2d/deriv.hpp	/^    __device__ typename PtrTraits<SrcPtr>::value_type operator ()(int y, int x) const$/;"	f	struct:cv::cudev::SobelXPtr
operator ()	opencv2/cudev/ptr2d/deriv.hpp	/^    __device__ typename PtrTraits<SrcPtr>::value_type operator ()(int y, int x) const$/;"	f	struct:cv::cudev::SobelYPtr
operator ()	opencv2/cudev/ptr2d/deriv.hpp	/^   __device__ typename PtrTraits<SrcPtr>::value_type operator ()(int y, int x) const$/;"	f	struct:cv::cudev::LaplacianPtr
operator ()	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^__host__ GpuMat_<T> GpuMat_<T>::operator ()(Range _rowRange, Range _colRange) const$/;"	f	class:cv::cudev::GpuMat_
operator ()	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^__host__ GpuMat_<T> GpuMat_<T>::operator ()(Rect roi) const$/;"	f	class:cv::cudev::GpuMat_
operator ()	opencv2/cudev/ptr2d/extrapolation.hpp	/^    __device__ __forceinline__ typename PtrTraits<SrcPtr>::value_type operator ()(int y, int x) const$/;"	f	struct:cv::cudev::BrdBase
operator ()	opencv2/cudev/ptr2d/extrapolation.hpp	/^    __device__ __forceinline__ typename PtrTraits<SrcPtr>::value_type operator ()(int y, int x) const$/;"	f	struct:cv::cudev::BrdConstant
operator ()	opencv2/cudev/ptr2d/glob.hpp	/^    __device__ __forceinline__       T& operator ()(int y, int x)       { return row(y)[x]; }$/;"	f	struct:cv::cudev::GlobPtr
operator ()	opencv2/cudev/ptr2d/glob.hpp	/^    __device__ __forceinline__ const T& operator ()(int y, int x) const { return row(y)[x]; }$/;"	f	struct:cv::cudev::GlobPtr
operator ()	opencv2/cudev/ptr2d/interpolation.hpp	/^    __device__ __forceinline__ typename PtrTraits<SrcPtr>::value_type operator ()(float y, float x) const$/;"	f	struct:cv::cudev::NearestInterPtr
operator ()	opencv2/cudev/ptr2d/interpolation.hpp	/^    __device__ typename PtrTraits<SrcPtr>::value_type operator ()(float y, float x) const$/;"	f	struct:cv::cudev::CommonAreaInterPtr
operator ()	opencv2/cudev/ptr2d/interpolation.hpp	/^    __device__ typename PtrTraits<SrcPtr>::value_type operator ()(float y, float x) const$/;"	f	struct:cv::cudev::CubicInterPtr
operator ()	opencv2/cudev/ptr2d/interpolation.hpp	/^    __device__ typename PtrTraits<SrcPtr>::value_type operator ()(float y, float x) const$/;"	f	struct:cv::cudev::IntegerAreaInterPtr
operator ()	opencv2/cudev/ptr2d/interpolation.hpp	/^    __device__ typename PtrTraits<SrcPtr>::value_type operator ()(float y, float x) const$/;"	f	struct:cv::cudev::LinearInterPtr
operator ()	opencv2/cudev/ptr2d/lut.hpp	/^    __device__ __forceinline__ typename PtrTraits<TablePtr>::value_type operator ()(typename PtrTraits<SrcPtr>::index_type y, typename PtrTraits<SrcPtr>::index_type x) const$/;"	f	struct:cv::cudev::LutPtr
operator ()	opencv2/cudev/ptr2d/mask.hpp	/^    __device__ __forceinline__ bool operator ()(int, int) const$/;"	f	struct:cv::cudev::WithOutMask
operator ()	opencv2/cudev/ptr2d/mask.hpp	/^    __device__ __forceinline__ value_type operator()(index_type y, index_type x) const$/;"	f	struct:cv::cudev::SingleMaskChannels
operator ()	opencv2/cudev/ptr2d/remap.hpp	/^    __device__ __forceinline__ typename PtrTraits<SrcPtr>::value_type operator ()(typename PtrTraits<MapPtr>::index_type y, typename PtrTraits<MapPtr>::index_type x) const$/;"	f	struct:cv::cudev::RemapPtr1
operator ()	opencv2/cudev/ptr2d/remap.hpp	/^    __device__ __forceinline__ typename PtrTraits<SrcPtr>::value_type operator ()(typename PtrTraits<MapXPtr>::index_type y, typename PtrTraits<MapXPtr>::index_type x) const$/;"	f	struct:cv::cudev::RemapPtr2
operator ()	opencv2/cudev/ptr2d/resize.hpp	/^    __device__ __forceinline__ typename PtrTraits<SrcPtr>::value_type operator ()(typename PtrTraits<SrcPtr>::index_type y, typename PtrTraits<SrcPtr>::index_type x) const$/;"	f	struct:cv::cudev::ResizePtr
operator ()	opencv2/cudev/ptr2d/texture.hpp	/^    __device__ __forceinline__ T operator ()(float y, float x) const$/;"	f	struct:cv::cudev::TexturePtr
operator ()	opencv2/cudev/ptr2d/transform.hpp	/^    __device__ __forceinline__ typename Op::result_type operator ()(typename PtrTraits<Src1Ptr>::index_type y, typename PtrTraits<Src1Ptr>::index_type x) const$/;"	f	struct:cv::cudev::BinaryTransformPtr
operator ()	opencv2/cudev/ptr2d/transform.hpp	/^    __device__ __forceinline__ typename Op::result_type operator ()(typename PtrTraits<SrcPtr>::index_type y, typename PtrTraits<SrcPtr>::index_type x) const$/;"	f	struct:cv::cudev::UnaryTransformPtr
operator ()	opencv2/cudev/ptr2d/warping.hpp	/^    __device__ __forceinline__ float2 operator ()(float y, float x) const$/;"	f	struct:cv::cudev::AffineMapPtr
operator ()	opencv2/cudev/ptr2d/warping.hpp	/^    __device__ __forceinline__ float2 operator ()(float y, float x) const$/;"	f	struct:cv::cudev::PerspectiveMapPtr
operator ()	opencv2/cudev/ptr2d/zip.hpp	/^    __device__ __forceinline__ value_type operator ()(index_type y, index_type x) const$/;"	f	struct:cv::cudev::ZipPtr
operator ()	opencv2/features2d.hpp	/^    ResultType operator()( const T* a, const T* b, int size ) const$/;"	f	struct:cv::L1
operator ()	opencv2/features2d.hpp	/^    ResultType operator()( const T* a, const T* b, int size ) const$/;"	f	struct:cv::L2
operator ()	opencv2/features2d.hpp	/^    ResultType operator()( const T* a, const T* b, int size ) const$/;"	f	struct:cv::SL2
operator ()	opencv2/flann/dist.h	/^    ResultType operator()( ResultType dist ) { return dist*dist; }$/;"	f	struct:cvflann::squareDistance
operator ()	opencv2/flann/dist.h	/^    ResultType operator()( ResultType dist ) { return dist; }$/;"	f	struct:cvflann::simpleDistance
operator ()	opencv2/flann/dist.h	/^    ResultType operator()( ResultType dist ) { return dist; }$/;"	f	struct:cvflann::squareDistance
operator ()	opencv2/flann/dist.h	/^    ResultType operator()( ResultType dist ) { return sqrt(dist); }$/;"	f	struct:cvflann::simpleDistance
operator ()	opencv2/flann/dist.h	/^    ResultType operator()(Iterator1 a, Iterator2 b, size_t size, ResultType \/*worst_dist*\/ = -1) const$/;"	f	struct:cvflann::Hamming
operator ()	opencv2/flann/dist.h	/^    ResultType operator()(Iterator1 a, Iterator2 b, size_t size, ResultType \/*worst_dist*\/ = -1) const$/;"	f	struct:cvflann::Hamming2
operator ()	opencv2/flann/dist.h	/^    ResultType operator()(Iterator1 a, Iterator2 b, size_t size, ResultType \/*worst_dist*\/ = -1) const$/;"	f	struct:cvflann::HellingerDistance
operator ()	opencv2/flann/dist.h	/^    ResultType operator()(Iterator1 a, Iterator2 b, size_t size, ResultType \/*worst_dist*\/ = -1) const$/;"	f	struct:cvflann::L2_Simple
operator ()	opencv2/flann/dist.h	/^    ResultType operator()(Iterator1 a, Iterator2 b, size_t size, ResultType worst_dist = -1) const$/;"	f	struct:cvflann::ChiSquareDistance
operator ()	opencv2/flann/dist.h	/^    ResultType operator()(Iterator1 a, Iterator2 b, size_t size, ResultType worst_dist = -1) const$/;"	f	struct:cvflann::HistIntersectionDistance
operator ()	opencv2/flann/dist.h	/^    ResultType operator()(Iterator1 a, Iterator2 b, size_t size, ResultType worst_dist = -1) const$/;"	f	struct:cvflann::KL_Divergence
operator ()	opencv2/flann/dist.h	/^    ResultType operator()(Iterator1 a, Iterator2 b, size_t size, ResultType worst_dist = -1) const$/;"	f	struct:cvflann::L1
operator ()	opencv2/flann/dist.h	/^    ResultType operator()(Iterator1 a, Iterator2 b, size_t size, ResultType worst_dist = -1) const$/;"	f	struct:cvflann::L2
operator ()	opencv2/flann/dist.h	/^    ResultType operator()(Iterator1 a, Iterator2 b, size_t size, ResultType worst_dist = -1) const$/;"	f	struct:cvflann::MaxDistance
operator ()	opencv2/flann/dist.h	/^    ResultType operator()(Iterator1 a, Iterator2 b, size_t size, ResultType worst_dist = -1) const$/;"	f	struct:cvflann::MinkowskiDistance
operator ()	opencv2/flann/dist.h	/^    ResultType operator()(const unsigned char* a, const unsigned char* b, size_t size) const$/;"	f	struct:cvflann::HammingLUT
operator ()	opencv2/flann/heap.h	/^        bool operator()(const T& t_1, const T& t_2) const$/;"	f	struct:cvflann::Heap::CompareT
operator ()	opencv2/flann/kmeans_index.h	/^        void operator()(const cv::Range& range) const$/;"	f	class:cvflann::KMeansIndex::KMeansDistanceComputer
operator ()	opencv2/flann/lsh_index.h	/^        bool operator()(const ScoreIndexPair& left, const ScoreIndexPair& right) const$/;"	f	struct:cvflann::LshIndex::SortScoreIndexPairOnSecond
operator ()	opencv2/objdetect.hpp	/^    inline bool operator()(const Rect& r1, const Rect& r2) const$/;"	f	class:cv::SimilarRects
operator ()	opencv2/stitching/detail/matchers.hpp	/^    void operator ()(const ImageFeatures &features1, const ImageFeatures &features2,$/;"	f	class:cv::detail::FeaturesMatcher
operator ()	opencv2/stitching/detail/motion_estimators.hpp	/^    bool operator ()(const std::vector<ImageFeatures> &features,$/;"	f	class:cv::detail::Estimator
operator ()	opencv2/stitching/detail/seam_finders.hpp	/^        bool operator() (const Point &p1, const Point &p2) const$/;"	f	class:cv::detail::DpSeamFinder::ClosePoints
operator ()	opencv2/stitching/detail/seam_finders.hpp	/^        bool operator() (const std::pair<size_t, size_t> &l, const std::pair<size_t, size_t> &r) const$/;"	f	class:cv::detail::DpSeamFinder::ImagePairLess
operator *	5/debug/safe_local_iterator.h	/^      operator*() const$/;"	f	class:__gnu_debug::_Safe_local_iterator
operator *	5/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp	/^      operator*() const$/;"	f	class:__gnu_pbds::detail::bin_search_tree_const_node_it_
operator *	5/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp	/^      operator*() const$/;"	f	class:__gnu_pbds::detail::bin_search_tree_node_it_
operator *	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	/^      operator*() const$/;"	f	class:__gnu_pbds::detail::bin_search_tree_const_it_
operator *	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	/^      operator*() const$/;"	f	class:__gnu_pbds::detail::bin_search_tree_it_
operator *	5/ext/pb_ds/detail/binary_heap_/point_const_iterator.hpp	/^      operator*() const$/;"	f	class:__gnu_pbds::detail::binary_heap_point_const_iterator_
operator *	5/ext/pb_ds/detail/left_child_next_sibling_heap_/point_const_iterator.hpp	/^      operator*() const$/;"	f	class:__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_
operator *	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	/^      operator*() const$/;"	f	class:__gnu_pbds::detail::ov_tree_node_const_it_
operator *	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	/^      operator*() const$/;"	f	class:__gnu_pbds::detail::ov_tree_node_it_
operator *	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	operator*() const$/;"	f	struct:__gnu_pbds::detail::pat_trie_base::_Inode::const_iterator
operator *	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	operator*()$/;"	f	struct:__gnu_pbds::detail::pat_trie_base::_Inode::iterator
operator *	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      operator*() const$/;"	f	class:__gnu_pbds::detail::pat_trie_base::_CIter
operator *	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      operator*() const$/;"	f	class:__gnu_pbds::detail::pat_trie_base::_Iter
operator *	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      operator*() const$/;"	f	class:__gnu_pbds::detail::pat_trie_base::_Node_citer
operator *	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      operator*() const$/;"	f	class:__gnu_pbds::detail::pat_trie_base::_Node_iter
operator *	5/ext/pb_ds/detail/unordered_iterator/iterator.hpp	/^  operator*() const$/;"	f	class:iterator_
operator *	5/ext/pb_ds/detail/unordered_iterator/point_const_iterator.hpp	/^  operator*() const$/;"	f	class:point_const_iterator_
operator *	5/ext/pb_ds/detail/unordered_iterator/point_iterator.hpp	/^  operator*() const$/;"	f	class:point_iterator_
operator *	5/parallel/base.h	/^      operator*() const$/;"	f	class:__gnu_parallel::_PseudoSequenceIterator
operator *	5/parallel/multiway_merge.h	/^      operator*()$/;"	f	class:__gnu_parallel::_GuardedIterator
operator *	5/parallel/multiway_merge.h	/^      operator*()$/;"	f	class:__gnu_parallel::_UnguardedIterator
operator *	cpp_src/stl_bvector.h	/^    operator*() const$/;"	f	struct:std::_Bit_const_iterator
operator *	cpp_src/stl_bvector.h	/^    operator*() const$/;"	f	struct:std::_Bit_iterator
operator *	cpp_src/stl_deque.h	/^      operator*() const$/;"	f	struct:std::_Deque_iterator
operator *	cpp_src/stl_iterator.h	/^      operator*() const$/;"	f	class:__normal_iterator
operator *	cpp_src/stl_iterator.h	/^      operator*() const$/;"	f	class:std::reverse_iterator
operator *	cpp_src/stl_iterator.h	/^      operator*()$/;"	f	class:std::back_insert_iterator
operator *	cpp_src/stl_iterator.h	/^      operator*()$/;"	f	class:std::front_insert_iterator
operator *	cpp_src/stl_iterator.h	/^      operator*()$/;"	f	class:std::insert_iterator
operator *	cpp_src/stl_list.h	/^      operator*() const$/;"	f	struct:std::_List_const_iterator
operator *	cpp_src/stl_list.h	/^      operator*() const$/;"	f	struct:std::_List_iterator
operator *	cpp_src/stl_raw_storage_iter.h	/^      operator*() { return *this; }$/;"	f	class:std::raw_storage_iterator
operator *	cpp_src/stl_tree.h	/^      operator*() const$/;"	f	struct:std::_Rb_tree_const_iterator
operator *	cpp_src/stl_tree.h	/^      operator*() const$/;"	f	struct:std::_Rb_tree_iterator
operator *	cpp_src/stream_iterator.h	/^      operator*() const$/;"	f	class:std::istream_iterator
operator *	cpp_src/stream_iterator.h	/^      operator*()$/;"	f	class:std::ostream_iterator
operator *	cpp_src/streambuf_iterator.h	/^      operator*() const$/;"	f	class:std::istreambuf_iterator
operator *	cpp_src/streambuf_iterator.h	/^      operator*()$/;"	f	class:std::ostreambuf_iterator
operator *	opencv2/core/affine.hpp	/^V cv::operator*(const cv::Affine3<T>& affine, const V& v)$/;"	f	class:cv
operator *	opencv2/core/affine.hpp	/^cv::Affine3<T> cv::operator*(const cv::Affine3<T>& affine1, const cv::Affine3<T>& affine2)$/;"	f	class:cv
operator *	opencv2/core/affine.hpp	/^cv::Vec3d cv::operator*(const cv::Affine3d& affine, const cv::Vec3d& v)$/;"	f	class:cv
operator *	opencv2/core/affine.hpp	/^cv::Vec3f cv::operator*(const cv::Affine3f& affine, const cv::Vec3f& v)$/;"	f	class:cv
operator *	opencv2/core/core_c.h	/^template<typename _Tp> inline _Tp& SeqIterator<_Tp>::operator *()$/;"	f	class:cv::SeqIterator
operator *	opencv2/core/core_c.h	/^template<typename _Tp> inline const _Tp& SeqIterator<_Tp>::operator *() const$/;"	f	class:cv::SeqIterator
operator *	opencv2/core/hal/intrin_sse.hpp	/^inline v_int32x4 operator * (const v_int32x4& a, const v_int32x4& b)$/;"	f	namespace:cv
operator *	opencv2/core/hal/intrin_sse.hpp	/^inline v_uint32x4 operator * (const v_uint32x4& a, const v_uint32x4& b)$/;"	f	namespace:cv
operator *	opencv2/core/mat.inl.hpp	/^_Tp& MatIterator_<_Tp>::operator *() const$/;"	f	class:cv::MatIterator_
operator *	opencv2/core/mat.inl.hpp	/^_Tp& SparseMatIterator_<_Tp>::operator *() const$/;"	f	class:cv::SparseMatIterator_
operator *	opencv2/core/mat.inl.hpp	/^const _Tp& MatConstIterator_<_Tp>::operator *() const$/;"	f	class:cv::MatConstIterator_
operator *	opencv2/core/mat.inl.hpp	/^const _Tp& SparseMatConstIterator_<_Tp>::operator *() const$/;"	f	class:cv::SparseMatConstIterator_
operator *	opencv2/core/mat.inl.hpp	/^const uchar* MatConstIterator::operator *() const$/;"	f	class:cv::MatConstIterator
operator *	opencv2/core/matx.hpp	/^Matx<_Tp, m, n> MatxCommaInitializer<_Tp, m, n>::operator *() const$/;"	f	class:cv::MatxCommaInitializer
operator *	opencv2/core/matx.hpp	/^Matx<_Tp, m, n> operator * (const Matx<_Tp, m, l>& a, const Matx<_Tp, l, n>& b)$/;"	f	namespace:cv
operator *	opencv2/core/matx.hpp	/^Matx<_Tp, m, n> operator * (const Matx<_Tp, m, n>& a, double alpha)$/;"	f	namespace:cv
operator *	opencv2/core/matx.hpp	/^Matx<_Tp, m, n> operator * (const Matx<_Tp, m, n>& a, float alpha)$/;"	f	namespace:cv
operator *	opencv2/core/matx.hpp	/^Matx<_Tp, m, n> operator * (const Matx<_Tp, m, n>& a, int alpha)$/;"	f	namespace:cv
operator *	opencv2/core/matx.hpp	/^Matx<_Tp, m, n> operator * (double alpha, const Matx<_Tp, m, n>& a)$/;"	f	namespace:cv
operator *	opencv2/core/matx.hpp	/^Matx<_Tp, m, n> operator * (float alpha, const Matx<_Tp, m, n>& a)$/;"	f	namespace:cv
operator *	opencv2/core/matx.hpp	/^Matx<_Tp, m, n> operator * (int alpha, const Matx<_Tp, m, n>& a)$/;"	f	namespace:cv
operator *	opencv2/core/matx.hpp	/^Vec<_Tp, cn> VecCommaInitializer<_Tp, cn>::operator *() const$/;"	f	class:cv::VecCommaInitializer
operator *	opencv2/core/matx.hpp	/^Vec<_Tp, cn> operator * (const Vec<_Tp, cn>& a, double alpha)$/;"	f	namespace:cv
operator *	opencv2/core/matx.hpp	/^Vec<_Tp, cn> operator * (const Vec<_Tp, cn>& a, float alpha)$/;"	f	namespace:cv
operator *	opencv2/core/matx.hpp	/^Vec<_Tp, cn> operator * (const Vec<_Tp, cn>& a, int alpha)$/;"	f	namespace:cv
operator *	opencv2/core/matx.hpp	/^Vec<_Tp, cn> operator * (double alpha, const Vec<_Tp, cn>& a)$/;"	f	namespace:cv
operator *	opencv2/core/matx.hpp	/^Vec<_Tp, cn> operator * (float alpha, const Vec<_Tp, cn>& a)$/;"	f	namespace:cv
operator *	opencv2/core/matx.hpp	/^Vec<_Tp, cn> operator * (int alpha, const Vec<_Tp, cn>& a)$/;"	f	namespace:cv
operator *	opencv2/core/matx.hpp	/^Vec<_Tp, m> operator * (const Matx<_Tp, m, n>& a, const Vec<_Tp, n>& b)$/;"	f	namespace:cv
operator *	opencv2/core/matx.hpp	/^template<typename _Tp> inline Vec<_Tp, 4> operator * (const Vec<_Tp, 4>& v1, const Vec<_Tp, 4>& v2)$/;"	f	namespace:cv
operator *	opencv2/core/persistence.hpp	/^    CvFileStorage* operator *() { return fs.get(); }$/;"	f	class:cv::FileStorage
operator *	opencv2/core/persistence.hpp	/^    const CvFileStorage* operator *() const { return fs.get(); }$/;"	f	class:cv::FileStorage
operator *	opencv2/core/persistence.hpp	/^inline CvFileNode* FileNode::operator *() { return (CvFileNode*)node; }$/;"	f	class:cv::FileNode
operator *	opencv2/core/persistence.hpp	/^inline FileNode FileNodeIterator::operator *() const  { return FileNode(fs, (const CvFileNode*)(const void*)reader.ptr); }$/;"	f	class:cv::FileNodeIterator
operator *	opencv2/core/persistence.hpp	/^inline const CvFileNode* FileNode::operator* () const { return node; }$/;"	f	class:cv::FileNode
operator *	opencv2/core/ptr.inl.hpp	/^typename detail::RefOrVoid<T>::type Ptr<T>::operator * () const$/;"	f	class:cv::Ptr
operator *	opencv2/core/types.hpp	/^Complex<_Tp> operator * (_Tp b, const Complex<_Tp>& a)$/;"	f	namespace:cv
operator *	opencv2/core/types.hpp	/^Complex<_Tp> operator * (const Complex<_Tp>& a, _Tp b)$/;"	f	namespace:cv
operator *	opencv2/core/types.hpp	/^Complex<_Tp> operator * (const Complex<_Tp>& a, const Complex<_Tp>& b)$/;"	f	namespace:cv
operator *	opencv2/core/types.hpp	/^Matx<_Tp, 4, 1> operator * (const Matx<_Tp, 4, 4>& a, const Point3_<_Tp>& b)$/;"	f	namespace:cv
operator *	opencv2/core/types.hpp	/^Point3_<_Tp> operator * (const Matx<_Tp, 3, 3>& a, const Point3_<_Tp>& b)$/;"	f	namespace:cv
operator *	opencv2/core/types.hpp	/^Point3_<_Tp> operator * (const Matx<_Tp, 3, 3>& a, const Point_<_Tp>& b)$/;"	f	namespace:cv
operator *	opencv2/core/types.hpp	/^Point3_<_Tp> operator * (const Point3_<_Tp>& a, double b)$/;"	f	namespace:cv
operator *	opencv2/core/types.hpp	/^Point3_<_Tp> operator * (const Point3_<_Tp>& a, float b)$/;"	f	namespace:cv
operator *	opencv2/core/types.hpp	/^Point3_<_Tp> operator * (const Point3_<_Tp>& a, int b)$/;"	f	namespace:cv
operator *	opencv2/core/types.hpp	/^Point3_<_Tp> operator * (double a, const Point3_<_Tp>& b)$/;"	f	namespace:cv
operator *	opencv2/core/types.hpp	/^Point3_<_Tp> operator * (float a, const Point3_<_Tp>& b)$/;"	f	namespace:cv
operator *	opencv2/core/types.hpp	/^Point3_<_Tp> operator * (int a, const Point3_<_Tp>& b)$/;"	f	namespace:cv
operator *	opencv2/core/types.hpp	/^Point_<_Tp> operator * (const Matx<_Tp, 2, 2>& a, const Point_<_Tp>& b)$/;"	f	namespace:cv
operator *	opencv2/core/types.hpp	/^Point_<_Tp> operator * (const Point_<_Tp>& a, double b)$/;"	f	namespace:cv
operator *	opencv2/core/types.hpp	/^Point_<_Tp> operator * (const Point_<_Tp>& a, float b)$/;"	f	namespace:cv
operator *	opencv2/core/types.hpp	/^Point_<_Tp> operator * (const Point_<_Tp>& a, int b)$/;"	f	namespace:cv
operator *	opencv2/core/types.hpp	/^Point_<_Tp> operator * (double a, const Point_<_Tp>& b)$/;"	f	namespace:cv
operator *	opencv2/core/types.hpp	/^Point_<_Tp> operator * (float a, const Point_<_Tp>& b)$/;"	f	namespace:cv
operator *	opencv2/core/types.hpp	/^Point_<_Tp> operator * (int a, const Point_<_Tp>& b)$/;"	f	namespace:cv
operator *	opencv2/core/types.hpp	/^Scalar operator * (const Matx<_Tp, 4, 4>& a, const Scalar& b)$/;"	f	namespace:cv
operator *	opencv2/core/types.hpp	/^Scalar operator * (const Matx<double, 4, 4>& a, const Scalar& b)$/;"	f	namespace:cv
operator *	opencv2/core/types.hpp	/^Scalar_<_Tp> operator * (_Tp alpha, const Scalar_<_Tp>& a)$/;"	f	namespace:cv
operator *	opencv2/core/types.hpp	/^Scalar_<_Tp> operator * (const Scalar_<_Tp>& a, _Tp alpha)$/;"	f	namespace:cv
operator *	opencv2/core/types.hpp	/^Scalar_<_Tp> operator * (const Scalar_<_Tp>& a, const Scalar_<_Tp>& b)$/;"	f	namespace:cv
operator *	opencv2/core/types.hpp	/^Size_<_Tp> operator * (const Size_<_Tp>& a, _Tp b)$/;"	f	namespace:cv
operator *	opencv2/flann/dist.h	/^    T operator*()$/;"	f	struct:cvflann::ZeroIterator
operator *	opencv2/imgproc.hpp	/^uchar* LineIterator::operator *()$/;"	f	class:cv::LineIterator
operator *=	opencv2/core/hal/intrin_sse.hpp	/^inline v_int32x4& operator *= (v_int32x4& a, const v_int32x4& b)$/;"	f	namespace:cv
operator *=	opencv2/core/hal/intrin_sse.hpp	/^inline v_uint32x4& operator *= (v_uint32x4& a, const v_uint32x4& b)$/;"	f	namespace:cv
operator *=	opencv2/core/mat.inl.hpp	/^Mat& operator *= (Mat& a, const MatExpr& b)$/;"	f	namespace:cv
operator *=	opencv2/core/mat.inl.hpp	/^Mat_<_Tp>& operator *= (Mat_<_Tp>& a, const MatExpr& b)$/;"	f	namespace:cv
operator *=	opencv2/core/mat.inl.hpp	/^const Mat& operator *= (const Mat& a, const MatExpr& b)$/;"	f	namespace:cv
operator *=	opencv2/core/mat.inl.hpp	/^const Mat_<_Tp>& operator *= (const Mat_<_Tp>& a, const MatExpr& b)$/;"	f	namespace:cv
operator *=	opencv2/core/matx.hpp	/^Matx<_Tp, m, n>& operator *= (Matx<_Tp, m, n>& a, double alpha)$/;"	f	namespace:cv
operator *=	opencv2/core/matx.hpp	/^Matx<_Tp, m, n>& operator *= (Matx<_Tp, m, n>& a, float alpha)$/;"	f	namespace:cv
operator *=	opencv2/core/matx.hpp	/^Matx<_Tp, m, n>& operator *= (Matx<_Tp, m, n>& a, int alpha)$/;"	f	namespace:cv
operator *=	opencv2/core/matx.hpp	/^Vec<_Tp, cn>& operator *= (Vec<_Tp, cn>& a, double alpha)$/;"	f	namespace:cv
operator *=	opencv2/core/matx.hpp	/^Vec<_Tp, cn>& operator *= (Vec<_Tp, cn>& a, float alpha)$/;"	f	namespace:cv
operator *=	opencv2/core/matx.hpp	/^Vec<_Tp, cn>& operator *= (Vec<_Tp, cn>& a, int alpha)$/;"	f	namespace:cv
operator *=	opencv2/core/matx.hpp	/^template<typename _Tp> inline Vec<_Tp, 4>& operator *= (Vec<_Tp, 4>& v1, const Vec<_Tp, 4>& v2)$/;"	f	namespace:cv
operator *=	opencv2/core/types.hpp	/^Complex<_Tp>& operator *= (Complex<_Tp>& a, _Tp b)$/;"	f	namespace:cv
operator *=	opencv2/core/types.hpp	/^Point3_<_Tp>& operator *= (Point3_<_Tp>& a, double b)$/;"	f	namespace:cv
operator *=	opencv2/core/types.hpp	/^Point3_<_Tp>& operator *= (Point3_<_Tp>& a, float b)$/;"	f	namespace:cv
operator *=	opencv2/core/types.hpp	/^Point3_<_Tp>& operator *= (Point3_<_Tp>& a, int b)$/;"	f	namespace:cv
operator *=	opencv2/core/types.hpp	/^Point_<_Tp>& operator *= (Point_<_Tp>& a, double b)$/;"	f	namespace:cv
operator *=	opencv2/core/types.hpp	/^Point_<_Tp>& operator *= (Point_<_Tp>& a, float b)$/;"	f	namespace:cv
operator *=	opencv2/core/types.hpp	/^Point_<_Tp>& operator *= (Point_<_Tp>& a, int b)$/;"	f	namespace:cv
operator *=	opencv2/core/types.hpp	/^Scalar_<_Tp>& operator *= ( Scalar_<_Tp>& a, _Tp v )$/;"	f	namespace:cv
operator *=	opencv2/core/types.hpp	/^Scalar_<_Tp>& operator *= (Scalar_<_Tp>& a, const Scalar_<_Tp>& b)$/;"	f	namespace:cv
operator *=	opencv2/core/types.hpp	/^Size_<_Tp>& operator *= (Size_<_Tp>& a, _Tp b)$/;"	f	namespace:cv
operator +	5/parallel/iterator.h	/^      operator+(difference_type __delta) const$/;"	f	class:__gnu_parallel::_IteratorPair
operator +	5/parallel/iterator.h	/^      operator+(difference_type __delta) const$/;"	f	class:__gnu_parallel::_IteratorTriple
operator +	cpp_src/basic_string.h	/^    operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)$/;"	f	namespace:std
operator +	cpp_src/basic_string.h	/^    operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	namespace:std
operator +	cpp_src/postypes.h	/^      operator+(streamoff __off) const$/;"	f	class:std::fpos
operator +	cpp_src/stl_bvector.h	/^    operator+(difference_type __i) const$/;"	f	struct:std::_Bit_const_iterator
operator +	cpp_src/stl_bvector.h	/^    operator+(difference_type __i) const$/;"	f	struct:std::_Bit_iterator
operator +	cpp_src/stl_bvector.h	/^  operator+(ptrdiff_t __n, const _Bit_const_iterator& __x)$/;"	f	namespace:std
operator +	cpp_src/stl_bvector.h	/^  operator+(ptrdiff_t __n, const _Bit_iterator& __x)$/;"	f	namespace:std
operator +	cpp_src/stl_deque.h	/^      operator+(difference_type __n) const$/;"	f	struct:std::_Deque_iterator
operator +	cpp_src/stl_deque.h	/^    operator+(ptrdiff_t __n, const _Deque_iterator<_Tp, _Ref, _Ptr>& __x)$/;"	f	namespace:std
operator +	cpp_src/stl_iterator.h	/^      operator+(const difference_type& __n) const$/;"	f	class:__normal_iterator
operator +	cpp_src/stl_iterator.h	/^      operator+(difference_type __n) const$/;"	f	class:std::reverse_iterator
operator +	cpp_src/stl_iterator.h	/^    operator+(typename __normal_iterator<_Iterator, _Container>::difference_type$/;"	f
operator +	cpp_src/stl_iterator.h	/^    operator+(typename reverse_iterator<_Iterator>::difference_type __n,$/;"	f	namespace:std
operator +	opencv2/core/cvstd.hpp	/^String operator + (char lhs, const String& rhs)$/;"	f	namespace:cv
operator +	opencv2/core/cvstd.hpp	/^String operator + (const String& lhs, char rhs)$/;"	f	namespace:cv
operator +	opencv2/core/cvstd.hpp	/^String operator + (const String& lhs, const String& rhs)$/;"	f	namespace:cv
operator +	opencv2/core/cvstd.hpp	/^String operator + (const String& lhs, const char* rhs)$/;"	f	namespace:cv
operator +	opencv2/core/cvstd.hpp	/^String operator + (const char* lhs, const String& rhs)$/;"	f	namespace:cv
operator +	opencv2/core/cvstd.inl.hpp	/^String operator + (const String& lhs, const std::string& rhs)$/;"	f	namespace:cv
operator +	opencv2/core/cvstd.inl.hpp	/^String operator + (const std::string& lhs, const String& rhs)$/;"	f	namespace:cv
operator +	opencv2/core/mat.inl.hpp	/^MatConstIterator operator + (const MatConstIterator& a, ptrdiff_t ofs)$/;"	f	namespace:cv
operator +	opencv2/core/mat.inl.hpp	/^MatConstIterator operator + (ptrdiff_t ofs, const MatConstIterator& a)$/;"	f	namespace:cv
operator +	opencv2/core/mat.inl.hpp	/^MatConstIterator_<_Tp> operator + (const MatConstIterator_<_Tp>& a, ptrdiff_t ofs)$/;"	f	namespace:cv
operator +	opencv2/core/mat.inl.hpp	/^MatConstIterator_<_Tp> operator + (ptrdiff_t ofs, const MatConstIterator_<_Tp>& a)$/;"	f	namespace:cv
operator +	opencv2/core/mat.inl.hpp	/^MatIterator_<_Tp> operator + (const MatIterator_<_Tp>& a, ptrdiff_t ofs)$/;"	f	namespace:cv
operator +	opencv2/core/mat.inl.hpp	/^MatIterator_<_Tp> operator + (ptrdiff_t ofs, const MatIterator_<_Tp>& a)$/;"	f	namespace:cv
operator +	opencv2/core/matx.hpp	/^Matx<_Tp, m, n> operator + (const Matx<_Tp, m, n>& a, const Matx<_Tp, m, n>& b)$/;"	f	namespace:cv
operator +	opencv2/core/matx.hpp	/^Vec<_Tp, cn> operator + (const Vec<_Tp, cn>& a, const Vec<_Tp, cn>& b)$/;"	f	namespace:cv
operator +	opencv2/core/types.hpp	/^Complex<_Tp> operator + (_Tp b, const Complex<_Tp>& a)$/;"	f	namespace:cv
operator +	opencv2/core/types.hpp	/^Complex<_Tp> operator + (const Complex<_Tp>& a, _Tp b)$/;"	f	namespace:cv
operator +	opencv2/core/types.hpp	/^Complex<_Tp> operator + (const Complex<_Tp>& a, const Complex<_Tp>& b)$/;"	f	namespace:cv
operator +	opencv2/core/types.hpp	/^Point3_<_Tp> operator + (const Point3_<_Tp>& a, const Point3_<_Tp>& b)$/;"	f	namespace:cv
operator +	opencv2/core/types.hpp	/^Point_<_Tp> operator + (const Point_<_Tp>& a, const Point_<_Tp>& b)$/;"	f	namespace:cv
operator +	opencv2/core/types.hpp	/^Range operator + (const Range& r1, int delta)$/;"	f	namespace:cv
operator +	opencv2/core/types.hpp	/^Range operator + (int delta, const Range& r1)$/;"	f	namespace:cv
operator +	opencv2/core/types.hpp	/^Rect_<_Tp> operator + (const Rect_<_Tp>& a, const Point_<_Tp>& b)$/;"	f	namespace:cv
operator +	opencv2/core/types.hpp	/^Rect_<_Tp> operator + (const Rect_<_Tp>& a, const Size_<_Tp>& b)$/;"	f	namespace:cv
operator +	opencv2/core/types.hpp	/^Scalar_<_Tp> operator + (const Scalar_<_Tp>& a, const Scalar_<_Tp>& b)$/;"	f	namespace:cv
operator +	opencv2/core/types.hpp	/^Size_<_Tp> operator + (const Size_<_Tp>& a, const Size_<_Tp>& b)$/;"	f	namespace:cv
operator ++	5/debug/safe_local_iterator.h	/^      operator++()$/;"	f	class:__gnu_debug::_Safe_local_iterator
operator ++	5/debug/safe_local_iterator.h	/^      operator++(int)$/;"	f	class:__gnu_debug::_Safe_local_iterator
operator ++	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	/^      operator++()$/;"	f	class:__gnu_pbds::detail::bin_search_tree_const_it_
operator ++	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	/^      operator++()$/;"	f	class:__gnu_pbds::detail::bin_search_tree_it_
operator ++	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	/^      operator++(int)$/;"	f	class:__gnu_pbds::detail::bin_search_tree_const_it_
operator ++	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	/^      operator++(int)$/;"	f	class:__gnu_pbds::detail::bin_search_tree_it_
operator ++	5/ext/pb_ds/detail/binary_heap_/const_iterator.hpp	/^      operator++()$/;"	f	class:__gnu_pbds::detail::binary_heap_const_iterator_
operator ++	5/ext/pb_ds/detail/binary_heap_/const_iterator.hpp	/^      operator++(int)$/;"	f	class:__gnu_pbds::detail::binary_heap_const_iterator_
operator ++	5/ext/pb_ds/detail/left_child_next_sibling_heap_/const_iterator.hpp	/^      operator++()$/;"	f	class:__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_
operator ++	5/ext/pb_ds/detail/left_child_next_sibling_heap_/const_iterator.hpp	/^      operator++(int)$/;"	f	class:__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_
operator ++	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	operator++()$/;"	f	struct:__gnu_pbds::detail::pat_trie_base::_Inode::const_iterator
operator ++	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	operator++()$/;"	f	struct:__gnu_pbds::detail::pat_trie_base::_Inode::iterator
operator ++	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	operator++(int)$/;"	f	struct:__gnu_pbds::detail::pat_trie_base::_Inode::const_iterator
operator ++	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	operator++(int)$/;"	f	struct:__gnu_pbds::detail::pat_trie_base::_Inode::iterator
operator ++	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      operator++()$/;"	f	class:__gnu_pbds::detail::pat_trie_base::_CIter
operator ++	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      operator++()$/;"	f	class:__gnu_pbds::detail::pat_trie_base::_Iter
operator ++	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      operator++(int)$/;"	f	class:__gnu_pbds::detail::pat_trie_base::_CIter
operator ++	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      operator++(int)$/;"	f	class:__gnu_pbds::detail::pat_trie_base::_Iter
operator ++	5/ext/pb_ds/detail/unordered_iterator/const_iterator.hpp	/^  operator++()$/;"	f	class:const_iterator_
operator ++	5/ext/pb_ds/detail/unordered_iterator/const_iterator.hpp	/^  operator++(int)$/;"	f	class:const_iterator_
operator ++	5/ext/pb_ds/detail/unordered_iterator/iterator.hpp	/^  operator++()$/;"	f	class:iterator_
operator ++	5/ext/pb_ds/detail/unordered_iterator/iterator.hpp	/^  operator++(int)$/;"	f	class:iterator_
operator ++	5/parallel/base.h	/^      operator++()$/;"	f	class:__gnu_parallel::_PseudoSequenceIterator
operator ++	5/parallel/base.h	/^      operator++(int)$/;"	f	class:__gnu_parallel::_PseudoSequenceIterator
operator ++	5/parallel/iterator.h	/^      operator++()$/;"	f	class:__gnu_parallel::_IteratorPair
operator ++	5/parallel/iterator.h	/^      operator++()$/;"	f	class:__gnu_parallel::_IteratorTriple
operator ++	5/parallel/iterator.h	/^      operator++(int)$/;"	f	class:__gnu_parallel::_IteratorPair
operator ++	5/parallel/iterator.h	/^      operator++(int)$/;"	f	class:__gnu_parallel::_IteratorTriple
operator ++	5/parallel/multiway_merge.h	/^      operator++()$/;"	f	class:__gnu_parallel::_GuardedIterator
operator ++	5/parallel/multiway_merge.h	/^      operator++()$/;"	f	class:__gnu_parallel::_UnguardedIterator
operator ++	cpp_src/stl_bvector.h	/^    operator++()$/;"	f	struct:std::_Bit_const_iterator
operator ++	cpp_src/stl_bvector.h	/^    operator++()$/;"	f	struct:std::_Bit_iterator
operator ++	cpp_src/stl_bvector.h	/^    operator++(int)$/;"	f	struct:std::_Bit_const_iterator
operator ++	cpp_src/stl_bvector.h	/^    operator++(int)$/;"	f	struct:std::_Bit_iterator
operator ++	cpp_src/stl_deque.h	/^      operator++()$/;"	f	struct:std::_Deque_iterator
operator ++	cpp_src/stl_deque.h	/^      operator++(int)$/;"	f	struct:std::_Deque_iterator
operator ++	cpp_src/stl_iterator.h	/^      operator++()$/;"	f	class:__normal_iterator
operator ++	cpp_src/stl_iterator.h	/^      operator++()$/;"	f	class:std::back_insert_iterator
operator ++	cpp_src/stl_iterator.h	/^      operator++()$/;"	f	class:std::front_insert_iterator
operator ++	cpp_src/stl_iterator.h	/^      operator++()$/;"	f	class:std::insert_iterator
operator ++	cpp_src/stl_iterator.h	/^      operator++()$/;"	f	class:std::reverse_iterator
operator ++	cpp_src/stl_iterator.h	/^      operator++(int)$/;"	f	class:__normal_iterator
operator ++	cpp_src/stl_iterator.h	/^      operator++(int)$/;"	f	class:std::back_insert_iterator
operator ++	cpp_src/stl_iterator.h	/^      operator++(int)$/;"	f	class:std::front_insert_iterator
operator ++	cpp_src/stl_iterator.h	/^      operator++(int)$/;"	f	class:std::insert_iterator
operator ++	cpp_src/stl_iterator.h	/^      operator++(int)$/;"	f	class:std::reverse_iterator
operator ++	cpp_src/stl_list.h	/^      operator++()$/;"	f	struct:std::_List_const_iterator
operator ++	cpp_src/stl_list.h	/^      operator++()$/;"	f	struct:std::_List_iterator
operator ++	cpp_src/stl_list.h	/^      operator++(int)$/;"	f	struct:std::_List_const_iterator
operator ++	cpp_src/stl_list.h	/^      operator++(int)$/;"	f	struct:std::_List_iterator
operator ++	cpp_src/stl_raw_storage_iter.h	/^      operator++()$/;"	f	class:std::raw_storage_iterator
operator ++	cpp_src/stl_raw_storage_iter.h	/^      operator++(int)$/;"	f	class:std::raw_storage_iterator
operator ++	cpp_src/stl_tree.h	/^      operator++()$/;"	f	struct:std::_Rb_tree_const_iterator
operator ++	cpp_src/stl_tree.h	/^      operator++()$/;"	f	struct:std::_Rb_tree_iterator
operator ++	cpp_src/stl_tree.h	/^      operator++(int)$/;"	f	struct:std::_Rb_tree_const_iterator
operator ++	cpp_src/stl_tree.h	/^      operator++(int)$/;"	f	struct:std::_Rb_tree_iterator
operator ++	cpp_src/stream_iterator.h	/^      operator++()$/;"	f	class:std::istream_iterator
operator ++	cpp_src/stream_iterator.h	/^      operator++()$/;"	f	class:std::ostream_iterator
operator ++	cpp_src/stream_iterator.h	/^      operator++(int)$/;"	f	class:std::istream_iterator
operator ++	cpp_src/stream_iterator.h	/^      operator++(int)$/;"	f	class:std::ostream_iterator
operator ++	cpp_src/streambuf_iterator.h	/^      operator++()$/;"	f	class:std::istreambuf_iterator
operator ++	cpp_src/streambuf_iterator.h	/^      operator++()$/;"	f	class:std::ostreambuf_iterator
operator ++	cpp_src/streambuf_iterator.h	/^      operator++(int)$/;"	f	class:std::istreambuf_iterator
operator ++	cpp_src/streambuf_iterator.h	/^      operator++(int)$/;"	f	class:std::ostreambuf_iterator
operator ++	opencv2/core/core_c.h	/^template<typename _Tp> inline SeqIterator<_Tp> SeqIterator<_Tp>::operator ++(int) const$/;"	f	class:cv::SeqIterator
operator ++	opencv2/core/core_c.h	/^template<typename _Tp> inline SeqIterator<_Tp>& SeqIterator<_Tp>::operator ++()$/;"	f	class:cv::SeqIterator
operator ++	opencv2/core/mat.inl.hpp	/^MatConstIterator& MatConstIterator::operator ++()$/;"	f	class:cv::MatConstIterator
operator ++	opencv2/core/mat.inl.hpp	/^MatConstIterator_<_Tp> MatConstIterator_<_Tp>::operator ++(int)$/;"	f	class:cv::MatConstIterator_
operator ++	opencv2/core/mat.inl.hpp	/^MatConstIterator_<_Tp>& MatConstIterator_<_Tp>::operator ++()$/;"	f	class:cv::MatConstIterator_
operator ++	opencv2/core/mat.inl.hpp	/^MatIterator_<_Tp> MatIterator_<_Tp>::operator ++(int)$/;"	f	class:cv::MatIterator_
operator ++	opencv2/core/mat.inl.hpp	/^MatIterator_<_Tp>& MatIterator_<_Tp>::operator ++()$/;"	f	class:cv::MatIterator_
operator ++	opencv2/core/mat.inl.hpp	/^SparseMatConstIterator SparseMatConstIterator::operator ++(int)$/;"	f	class:cv::SparseMatConstIterator
operator ++	opencv2/core/mat.inl.hpp	/^SparseMatConstIterator_<_Tp> SparseMatConstIterator_<_Tp>::operator ++(int)$/;"	f	class:cv::SparseMatConstIterator_
operator ++	opencv2/core/mat.inl.hpp	/^SparseMatConstIterator_<_Tp>& SparseMatConstIterator_<_Tp>::operator ++()$/;"	f	class:cv::SparseMatConstIterator_
operator ++	opencv2/core/mat.inl.hpp	/^SparseMatIterator SparseMatIterator::operator ++(int)$/;"	f	class:cv::SparseMatIterator
operator ++	opencv2/core/mat.inl.hpp	/^SparseMatIterator& SparseMatIterator::operator ++()$/;"	f	class:cv::SparseMatIterator
operator ++	opencv2/core/mat.inl.hpp	/^SparseMatIterator_<_Tp> SparseMatIterator_<_Tp>::operator ++(int)$/;"	f	class:cv::SparseMatIterator_
operator ++	opencv2/core/mat.inl.hpp	/^SparseMatIterator_<_Tp>& SparseMatIterator_<_Tp>::operator ++()$/;"	f	class:cv::SparseMatIterator_
operator ++	opencv2/core/mat.inl.hpp	/^inline MatConstIterator MatConstIterator::operator ++(int)$/;"	f	class:cv::MatConstIterator
operator ++	opencv2/flann/dist.h	/^    ZeroIterator<T> operator ++(int)$/;"	f	struct:cvflann::ZeroIterator
operator ++	opencv2/flann/dist.h	/^    const ZeroIterator<T>& operator ++()$/;"	f	struct:cvflann::ZeroIterator
operator ++	opencv2/imgproc.hpp	/^LineIterator LineIterator::operator ++(int)$/;"	f	class:cv::LineIterator
operator ++	opencv2/imgproc.hpp	/^LineIterator& LineIterator::operator ++()$/;"	f	class:cv::LineIterator
operator +=	cpp_src/basic_string.h	/^      operator+=(_CharT __c)$/;"	f	class:std::basic_string
operator +=	cpp_src/basic_string.h	/^      operator+=(const _CharT* __s)$/;"	f	class:std::basic_string
operator +=	cpp_src/basic_string.h	/^      operator+=(const basic_string& __str)$/;"	f	class:std::basic_string
operator +=	cpp_src/postypes.h	/^      operator+=(streamoff __off)$/;"	f	class:std::fpos
operator +=	cpp_src/stl_bvector.h	/^    operator+=(difference_type __i)$/;"	f	struct:std::_Bit_const_iterator
operator +=	cpp_src/stl_bvector.h	/^    operator+=(difference_type __i)$/;"	f	struct:std::_Bit_iterator
operator +=	cpp_src/stl_deque.h	/^      operator+=(difference_type __n)$/;"	f	struct:std::_Deque_iterator
operator +=	cpp_src/stl_iterator.h	/^      operator+=(const difference_type& __n)$/;"	f	class:__normal_iterator
operator +=	cpp_src/stl_iterator.h	/^      operator+=(difference_type __n)$/;"	f	class:std::reverse_iterator
operator +=	opencv2/core/core_c.h	/^template<typename _Tp> inline SeqIterator<_Tp>& SeqIterator<_Tp>::operator +=(int delta)$/;"	f	class:cv::SeqIterator
operator +=	opencv2/core/cvstd.hpp	/^String& String::operator+=(char c)$/;"	f	class:cv::String
operator +=	opencv2/core/cvstd.hpp	/^String& String::operator+=(const String& str)$/;"	f	class:cv::String
operator +=	opencv2/core/cvstd.hpp	/^String& String::operator+=(const char* s)$/;"	f	class:cv::String
operator +=	opencv2/core/cvstd.inl.hpp	/^String& String::operator += (const std::string& str)$/;"	f	class:cv::String
operator +=	opencv2/core/mat.inl.hpp	/^Mat& operator += (Mat& a, const MatExpr& b)$/;"	f	namespace:cv
operator +=	opencv2/core/mat.inl.hpp	/^MatConstIterator_<_Tp>& MatConstIterator_<_Tp>::operator += (ptrdiff_t ofs)$/;"	f	class:cv::MatConstIterator_
operator +=	opencv2/core/mat.inl.hpp	/^MatIterator_<_Tp>& MatIterator_<_Tp>::operator += (ptrdiff_t ofs)$/;"	f	class:cv::MatIterator_
operator +=	opencv2/core/mat.inl.hpp	/^Mat_<_Tp>& operator += (Mat_<_Tp>& a, const MatExpr& b)$/;"	f	namespace:cv
operator +=	opencv2/core/mat.inl.hpp	/^const Mat& operator += (const Mat& a, const MatExpr& b)$/;"	f	namespace:cv
operator +=	opencv2/core/mat.inl.hpp	/^const Mat_<_Tp>& operator += (const Mat_<_Tp>& a, const MatExpr& b)$/;"	f	namespace:cv
operator +=	opencv2/core/mat.inl.hpp	/^inline MatConstIterator& MatConstIterator::operator += (ptrdiff_t ofs)$/;"	f	class:cv::MatConstIterator
operator +=	opencv2/core/matx.hpp	/^Matx<_Tp1, m, n>& operator += (Matx<_Tp1, m, n>& a, const Matx<_Tp2, m, n>& b)$/;"	f	namespace:cv
operator +=	opencv2/core/matx.hpp	/^Vec<_Tp1, cn>& operator += (Vec<_Tp1, cn>& a, const Vec<_Tp2, cn>& b)$/;"	f	namespace:cv
operator +=	opencv2/core/types.hpp	/^Complex<_Tp>& operator += (Complex<_Tp>& a, _Tp b)$/;"	f	namespace:cv
operator +=	opencv2/core/types.hpp	/^Complex<_Tp>& operator += (Complex<_Tp>& a, const Complex<_Tp>& b)$/;"	f	namespace:cv
operator +=	opencv2/core/types.hpp	/^Point3_<_Tp>& operator += (Point3_<_Tp>& a, const Point3_<_Tp>& b)$/;"	f	namespace:cv
operator +=	opencv2/core/types.hpp	/^Point_<_Tp>& operator += (Point_<_Tp>& a, const Point_<_Tp>& b)$/;"	f	namespace:cv
operator +=	opencv2/core/types.hpp	/^Rect_<_Tp>& operator += ( Rect_<_Tp>& a, const Point_<_Tp>& b )$/;"	f	namespace:cv
operator +=	opencv2/core/types.hpp	/^Rect_<_Tp>& operator += ( Rect_<_Tp>& a, const Size_<_Tp>& b )$/;"	f	namespace:cv
operator +=	opencv2/core/types.hpp	/^Scalar_<_Tp>& operator += (Scalar_<_Tp>& a, const Scalar_<_Tp>& b)$/;"	f	namespace:cv
operator +=	opencv2/core/types.hpp	/^Size_<_Tp>& operator += (Size_<_Tp>& a, const Size_<_Tp>& b)$/;"	f	namespace:cv
operator +=	opencv2/flann/dist.h	/^    ZeroIterator<T>& operator+=(int)$/;"	f	struct:cvflann::ZeroIterator
operator ,	opencv2/core/mat.inl.hpp	/^MatCommaInitializer_<_Tp>& MatCommaInitializer_<_Tp>::operator , (T2 v)$/;"	f	class:cv::MatCommaInitializer_
operator ,	opencv2/core/matx.hpp	/^MatxCommaInitializer<_Tp, m, n>& MatxCommaInitializer<_Tp, m, n>::operator , (_T2 value)$/;"	f	class:cv::MatxCommaInitializer
operator ,	opencv2/core/matx.hpp	/^VecCommaInitializer<_Tp, cn>& VecCommaInitializer<_Tp, cn>::operator , (_T2 value)$/;"	f	class:cv::VecCommaInitializer
operator -	5/parallel/base.h	/^      operator-(const _PseudoSequenceIterator& __i2)$/;"	f	class:__gnu_parallel::_PseudoSequenceIterator
operator -	5/parallel/iterator.h	/^      operator-(const _IteratorPair& __other) const$/;"	f	class:__gnu_parallel::_IteratorPair
operator -	5/parallel/iterator.h	/^      operator-(const _IteratorTriple& __other) const$/;"	f	class:__gnu_parallel::_IteratorTriple
operator -	cpp_src/postypes.h	/^      operator-(const fpos& __other) const$/;"	f	class:std::fpos
operator -	cpp_src/postypes.h	/^      operator-(streamoff __off) const$/;"	f	class:std::fpos
operator -	cpp_src/stl_bvector.h	/^    operator-(difference_type __i) const$/;"	f	struct:std::_Bit_const_iterator
operator -	cpp_src/stl_bvector.h	/^    operator-(difference_type __i) const$/;"	f	struct:std::_Bit_iterator
operator -	cpp_src/stl_bvector.h	/^  operator-(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)$/;"	f	namespace:std
operator -	cpp_src/stl_deque.h	/^      operator-(difference_type __n) const$/;"	f	struct:std::_Deque_iterator
operator -	cpp_src/stl_deque.h	/^    operator-(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x,$/;"	f	namespace:std
operator -	cpp_src/stl_deque.h	/^    operator-(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x,$/;"	f	namespace:std
operator -	cpp_src/stl_iterator.h	/^      operator-(const difference_type& __n) const$/;"	f	class:__normal_iterator
operator -	cpp_src/stl_iterator.h	/^      operator-(difference_type __n) const$/;"	f	class:std::reverse_iterator
operator -	cpp_src/stl_iterator.h	/^    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,$/;"	f
operator -	cpp_src/stl_iterator.h	/^    operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,$/;"	f
operator -	cpp_src/stl_iterator.h	/^    operator-(const reverse_iterator<_Iterator>& __x,$/;"	f	namespace:std
operator -	cpp_src/stl_iterator.h	/^    operator-(const reverse_iterator<_IteratorL>& __x,$/;"	f	namespace:std
operator -	opencv2/core/core_c.h	/^template<typename _Tp> inline ptrdiff_t operator - (const SeqIterator<_Tp>& a,$/;"	f	namespace:cv
operator -	opencv2/core/mat.inl.hpp	/^MatConstIterator operator - (const MatConstIterator& a, ptrdiff_t ofs)$/;"	f	namespace:cv
operator -	opencv2/core/mat.inl.hpp	/^MatConstIterator_<_Tp> operator - (const MatConstIterator_<_Tp>& a, ptrdiff_t ofs)$/;"	f	namespace:cv
operator -	opencv2/core/mat.inl.hpp	/^MatIterator_<_Tp> operator - (const MatIterator_<_Tp>& a, ptrdiff_t ofs)$/;"	f	namespace:cv
operator -	opencv2/core/mat.inl.hpp	/^ptrdiff_t operator - (const MatConstIterator& b, const MatConstIterator& a)$/;"	f	namespace:cv
operator -	opencv2/core/matx.hpp	/^Matx<_Tp, m, n> operator - (const Matx<_Tp, m, n>& a)$/;"	f	namespace:cv
operator -	opencv2/core/matx.hpp	/^Matx<_Tp, m, n> operator - (const Matx<_Tp, m, n>& a, const Matx<_Tp, m, n>& b)$/;"	f	namespace:cv
operator -	opencv2/core/matx.hpp	/^Vec<_Tp, cn> operator - (const Vec<_Tp, cn>& a)$/;"	f	namespace:cv
operator -	opencv2/core/matx.hpp	/^Vec<_Tp, cn> operator - (const Vec<_Tp, cn>& a, const Vec<_Tp, cn>& b)$/;"	f	namespace:cv
operator -	opencv2/core/persistence.hpp	/^ptrdiff_t operator - (const FileNodeIterator& it1, const FileNodeIterator& it2)$/;"	f	namespace:cv
operator -	opencv2/core/types.hpp	/^Complex<_Tp> operator - (_Tp b, const Complex<_Tp>& a)$/;"	f	namespace:cv
operator -	opencv2/core/types.hpp	/^Complex<_Tp> operator - (const Complex<_Tp>& a)$/;"	f	namespace:cv
operator -	opencv2/core/types.hpp	/^Complex<_Tp> operator - (const Complex<_Tp>& a, _Tp b)$/;"	f	namespace:cv
operator -	opencv2/core/types.hpp	/^Complex<_Tp> operator - (const Complex<_Tp>& a, const Complex<_Tp>& b)$/;"	f	namespace:cv
operator -	opencv2/core/types.hpp	/^Point3_<_Tp> operator - (const Point3_<_Tp>& a)$/;"	f	namespace:cv
operator -	opencv2/core/types.hpp	/^Point3_<_Tp> operator - (const Point3_<_Tp>& a, const Point3_<_Tp>& b)$/;"	f	namespace:cv
operator -	opencv2/core/types.hpp	/^Point_<_Tp> operator - (const Point_<_Tp>& a)$/;"	f	namespace:cv
operator -	opencv2/core/types.hpp	/^Point_<_Tp> operator - (const Point_<_Tp>& a, const Point_<_Tp>& b)$/;"	f	namespace:cv
operator -	opencv2/core/types.hpp	/^Range operator - (const Range& r1, int delta)$/;"	f	namespace:cv
operator -	opencv2/core/types.hpp	/^Rect_<_Tp> operator - (const Rect_<_Tp>& a, const Point_<_Tp>& b)$/;"	f	namespace:cv
operator -	opencv2/core/types.hpp	/^Scalar_<_Tp> operator - (const Scalar_<_Tp>& a)$/;"	f	namespace:cv
operator -	opencv2/core/types.hpp	/^Scalar_<_Tp> operator - (const Scalar_<_Tp>& a, const Scalar_<_Tp>& b)$/;"	f	namespace:cv
operator -	opencv2/core/types.hpp	/^Size_<_Tp> operator - (const Size_<_Tp>& a, const Size_<_Tp>& b)$/;"	f	namespace:cv
operator --	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	/^      operator--()$/;"	f	class:__gnu_pbds::detail::bin_search_tree_const_it_
operator --	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	/^      operator--()$/;"	f	class:__gnu_pbds::detail::bin_search_tree_it_
operator --	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	/^      operator--(int)$/;"	f	class:__gnu_pbds::detail::bin_search_tree_const_it_
operator --	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	/^      operator--(int)$/;"	f	class:__gnu_pbds::detail::bin_search_tree_it_
operator --	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      operator--()$/;"	f	class:__gnu_pbds::detail::pat_trie_base::_CIter
operator --	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      operator--()$/;"	f	class:__gnu_pbds::detail::pat_trie_base::_Iter
operator --	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      operator--(int)$/;"	f	class:__gnu_pbds::detail::pat_trie_base::_CIter
operator --	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      operator--(int)$/;"	f	class:__gnu_pbds::detail::pat_trie_base::_Iter
operator --	5/parallel/iterator.h	/^      operator--()$/;"	f	class:__gnu_parallel::_IteratorPair
operator --	5/parallel/iterator.h	/^      operator--()$/;"	f	class:__gnu_parallel::_IteratorTriple
operator --	5/parallel/iterator.h	/^      operator--(int)$/;"	f	class:__gnu_parallel::_IteratorPair
operator --	5/parallel/iterator.h	/^      operator--(int)$/;"	f	class:__gnu_parallel::_IteratorTriple
operator --	cpp_src/stl_bvector.h	/^    operator--()$/;"	f	struct:std::_Bit_const_iterator
operator --	cpp_src/stl_bvector.h	/^    operator--()$/;"	f	struct:std::_Bit_iterator
operator --	cpp_src/stl_bvector.h	/^    operator--(int)$/;"	f	struct:std::_Bit_const_iterator
operator --	cpp_src/stl_bvector.h	/^    operator--(int)$/;"	f	struct:std::_Bit_iterator
operator --	cpp_src/stl_deque.h	/^      operator--()$/;"	f	struct:std::_Deque_iterator
operator --	cpp_src/stl_deque.h	/^      operator--(int)$/;"	f	struct:std::_Deque_iterator
operator --	cpp_src/stl_iterator.h	/^      operator--()$/;"	f	class:__normal_iterator
operator --	cpp_src/stl_iterator.h	/^      operator--()$/;"	f	class:std::reverse_iterator
operator --	cpp_src/stl_iterator.h	/^      operator--(int)$/;"	f	class:__normal_iterator
operator --	cpp_src/stl_iterator.h	/^      operator--(int)$/;"	f	class:std::reverse_iterator
operator --	cpp_src/stl_list.h	/^      operator--()$/;"	f	struct:std::_List_const_iterator
operator --	cpp_src/stl_list.h	/^      operator--()$/;"	f	struct:std::_List_iterator
operator --	cpp_src/stl_list.h	/^      operator--(int)$/;"	f	struct:std::_List_const_iterator
operator --	cpp_src/stl_list.h	/^      operator--(int)$/;"	f	struct:std::_List_iterator
operator --	cpp_src/stl_tree.h	/^      operator--()$/;"	f	struct:std::_Rb_tree_const_iterator
operator --	cpp_src/stl_tree.h	/^      operator--()$/;"	f	struct:std::_Rb_tree_iterator
operator --	cpp_src/stl_tree.h	/^      operator--(int)$/;"	f	struct:std::_Rb_tree_const_iterator
operator --	cpp_src/stl_tree.h	/^      operator--(int)$/;"	f	struct:std::_Rb_tree_iterator
operator --	opencv2/core/core_c.h	/^template<typename _Tp> inline SeqIterator<_Tp> SeqIterator<_Tp>::operator --(int) const$/;"	f	class:cv::SeqIterator
operator --	opencv2/core/core_c.h	/^template<typename _Tp> inline SeqIterator<_Tp>& SeqIterator<_Tp>::operator --()$/;"	f	class:cv::SeqIterator
operator --	opencv2/core/mat.inl.hpp	/^MatConstIterator MatConstIterator::operator --(int)$/;"	f	class:cv::MatConstIterator
operator --	opencv2/core/mat.inl.hpp	/^MatConstIterator& MatConstIterator::operator --()$/;"	f	class:cv::MatConstIterator
operator --	opencv2/core/mat.inl.hpp	/^MatConstIterator_<_Tp> MatConstIterator_<_Tp>::operator --(int)$/;"	f	class:cv::MatConstIterator_
operator --	opencv2/core/mat.inl.hpp	/^MatConstIterator_<_Tp>& MatConstIterator_<_Tp>::operator --()$/;"	f	class:cv::MatConstIterator_
operator --	opencv2/core/mat.inl.hpp	/^MatIterator_<_Tp> MatIterator_<_Tp>::operator --(int)$/;"	f	class:cv::MatIterator_
operator --	opencv2/core/mat.inl.hpp	/^MatIterator_<_Tp>& MatIterator_<_Tp>::operator --()$/;"	f	class:cv::MatIterator_
operator -=	cpp_src/postypes.h	/^      operator-=(streamoff __off)$/;"	f	class:std::fpos
operator -=	cpp_src/stl_bvector.h	/^    operator-=(difference_type __i)$/;"	f	struct:std::_Bit_const_iterator
operator -=	cpp_src/stl_bvector.h	/^    operator-=(difference_type __i)$/;"	f	struct:std::_Bit_iterator
operator -=	cpp_src/stl_deque.h	/^      operator-=(difference_type __n)$/;"	f	struct:std::_Deque_iterator
operator -=	cpp_src/stl_iterator.h	/^      operator-=(const difference_type& __n)$/;"	f	class:__normal_iterator
operator -=	cpp_src/stl_iterator.h	/^      operator-=(difference_type __n)$/;"	f	class:std::reverse_iterator
operator -=	opencv2/core/core_c.h	/^template<typename _Tp> inline SeqIterator<_Tp>& SeqIterator<_Tp>::operator -=(int delta)$/;"	f	class:cv::SeqIterator
operator -=	opencv2/core/mat.inl.hpp	/^Mat& operator -= (Mat& a, const MatExpr& b)$/;"	f	namespace:cv
operator -=	opencv2/core/mat.inl.hpp	/^MatConstIterator& MatConstIterator::operator -= (ptrdiff_t ofs)$/;"	f	class:cv::MatConstIterator
operator -=	opencv2/core/mat.inl.hpp	/^MatConstIterator_<_Tp>& MatConstIterator_<_Tp>::operator -= (ptrdiff_t ofs)$/;"	f	class:cv::MatConstIterator_
operator -=	opencv2/core/mat.inl.hpp	/^MatIterator_<_Tp>& MatIterator_<_Tp>::operator -= (ptrdiff_t ofs)$/;"	f	class:cv::MatIterator_
operator -=	opencv2/core/mat.inl.hpp	/^Mat_<_Tp>& operator -= (Mat_<_Tp>& a, const MatExpr& b)$/;"	f	namespace:cv
operator -=	opencv2/core/mat.inl.hpp	/^const Mat& operator -= (const Mat& a, const MatExpr& b)$/;"	f	namespace:cv
operator -=	opencv2/core/mat.inl.hpp	/^const Mat_<_Tp>& operator -= (const Mat_<_Tp>& a, const MatExpr& b)$/;"	f	namespace:cv
operator -=	opencv2/core/matx.hpp	/^Matx<_Tp1, m, n>& operator -= (Matx<_Tp1, m, n>& a, const Matx<_Tp2, m, n>& b)$/;"	f	namespace:cv
operator -=	opencv2/core/matx.hpp	/^Vec<_Tp1, cn>& operator -= (Vec<_Tp1, cn>& a, const Vec<_Tp2, cn>& b)$/;"	f	namespace:cv
operator -=	opencv2/core/types.hpp	/^Complex<_Tp>& operator -= (Complex<_Tp>& a, _Tp b)$/;"	f	namespace:cv
operator -=	opencv2/core/types.hpp	/^Complex<_Tp>& operator -= (Complex<_Tp>& a, const Complex<_Tp>& b)$/;"	f	namespace:cv
operator -=	opencv2/core/types.hpp	/^Point3_<_Tp>& operator -= (Point3_<_Tp>& a, const Point3_<_Tp>& b)$/;"	f	namespace:cv
operator -=	opencv2/core/types.hpp	/^Point_<_Tp>& operator -= (Point_<_Tp>& a, const Point_<_Tp>& b)$/;"	f	namespace:cv
operator -=	opencv2/core/types.hpp	/^Rect_<_Tp>& operator -= ( Rect_<_Tp>& a, const Point_<_Tp>& b )$/;"	f	namespace:cv
operator -=	opencv2/core/types.hpp	/^Rect_<_Tp>& operator -= ( Rect_<_Tp>& a, const Size_<_Tp>& b )$/;"	f	namespace:cv
operator -=	opencv2/core/types.hpp	/^Scalar_<_Tp>& operator -= (Scalar_<_Tp>& a, const Scalar_<_Tp>& b)$/;"	f	namespace:cv
operator -=	opencv2/core/types.hpp	/^Size_<_Tp>& operator -= (Size_<_Tp>& a, const Size_<_Tp>& b)$/;"	f	namespace:cv
operator ->	5/debug/safe_local_iterator.h	/^      operator->() const$/;"	f	class:__gnu_debug::_Safe_local_iterator
operator ->	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	/^      operator->() const$/;"	f	class:__gnu_pbds::detail::bin_search_tree_const_it_
operator ->	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	/^      operator->() const$/;"	f	class:__gnu_pbds::detail::bin_search_tree_it_
operator ->	5/ext/pb_ds/detail/binary_heap_/point_const_iterator.hpp	/^      operator->() const$/;"	f	class:__gnu_pbds::detail::binary_heap_point_const_iterator_
operator ->	5/ext/pb_ds/detail/left_child_next_sibling_heap_/point_const_iterator.hpp	/^      operator->() const$/;"	f	class:__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_
operator ->	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	operator->() const$/;"	f	struct:__gnu_pbds::detail::pat_trie_base::_Inode::const_iterator
operator ->	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	operator->()$/;"	f	struct:__gnu_pbds::detail::pat_trie_base::_Inode::iterator
operator ->	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      operator->() const$/;"	f	class:__gnu_pbds::detail::pat_trie_base::_CIter
operator ->	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      operator->() const$/;"	f	class:__gnu_pbds::detail::pat_trie_base::_Iter
operator ->	5/ext/pb_ds/detail/unordered_iterator/iterator.hpp	/^  operator->() const$/;"	f	class:iterator_
operator ->	5/ext/pb_ds/detail/unordered_iterator/point_const_iterator.hpp	/^  operator->() const$/;"	f	class:point_const_iterator_
operator ->	5/ext/pb_ds/detail/unordered_iterator/point_iterator.hpp	/^  operator->() const$/;"	f	class:point_iterator_
operator ->	cpp_src/stl_deque.h	/^      operator->() const$/;"	f	struct:std::_Deque_iterator
operator ->	cpp_src/stl_iterator.h	/^      operator->() const$/;"	f	class:__normal_iterator
operator ->	cpp_src/stl_iterator.h	/^      operator->() const$/;"	f	class:std::reverse_iterator
operator ->	cpp_src/stl_list.h	/^      operator->() const$/;"	f	struct:std::_List_const_iterator
operator ->	cpp_src/stl_list.h	/^      operator->() const$/;"	f	struct:std::_List_iterator
operator ->	cpp_src/stl_tree.h	/^      operator->() const$/;"	f	struct:std::_Rb_tree_const_iterator
operator ->	cpp_src/stl_tree.h	/^      operator->() const$/;"	f	struct:std::_Rb_tree_iterator
operator ->	cpp_src/stream_iterator.h	/^      operator->() const { return &(operator*()); }$/;"	f	class:std::istream_iterator
operator ->	opencv2/core/persistence.hpp	/^inline FileNode FileNodeIterator::operator ->() const { return FileNode(fs, (const CvFileNode*)(const void*)reader.ptr); }$/;"	f	class:cv::FileNodeIterator
operator ->	opencv2/core/ptr.inl.hpp	/^T* Ptr<T>::operator -> () const$/;"	f	class:cv::Ptr
operator /	opencv2/core/matx.hpp	/^Vec<_Tp, cn> operator \/ (const Vec<_Tp, cn>& a, double alpha)$/;"	f	namespace:cv
operator /	opencv2/core/matx.hpp	/^Vec<_Tp, cn> operator \/ (const Vec<_Tp, cn>& a, float alpha)$/;"	f	namespace:cv
operator /	opencv2/core/matx.hpp	/^Vec<_Tp, cn> operator \/ (const Vec<_Tp, cn>& a, int alpha)$/;"	f	namespace:cv
operator /	opencv2/core/types.hpp	/^Complex<_Tp> operator \/ (_Tp b, const Complex<_Tp>& a)$/;"	f	namespace:cv
operator /	opencv2/core/types.hpp	/^Complex<_Tp> operator \/ (const Complex<_Tp>& a, _Tp b)$/;"	f	namespace:cv
operator /	opencv2/core/types.hpp	/^Complex<_Tp> operator \/ (const Complex<_Tp>& a, const Complex<_Tp>& b)$/;"	f	namespace:cv
operator /	opencv2/core/types.hpp	/^Point3_<_Tp> operator \/ (const Point3_<_Tp>& a, double b)$/;"	f	namespace:cv
operator /	opencv2/core/types.hpp	/^Point3_<_Tp> operator \/ (const Point3_<_Tp>& a, float b)$/;"	f	namespace:cv
operator /	opencv2/core/types.hpp	/^Point3_<_Tp> operator \/ (const Point3_<_Tp>& a, int b)$/;"	f	namespace:cv
operator /	opencv2/core/types.hpp	/^Point_<_Tp> operator \/ (const Point_<_Tp>& a, double b)$/;"	f	namespace:cv
operator /	opencv2/core/types.hpp	/^Point_<_Tp> operator \/ (const Point_<_Tp>& a, float b)$/;"	f	namespace:cv
operator /	opencv2/core/types.hpp	/^Point_<_Tp> operator \/ (const Point_<_Tp>& a, int b)$/;"	f	namespace:cv
operator /	opencv2/core/types.hpp	/^Scalar_<_Tp> operator \/ (_Tp a, const Scalar_<_Tp>& b)$/;"	f	namespace:cv
operator /	opencv2/core/types.hpp	/^Scalar_<_Tp> operator \/ (const Scalar_<_Tp>& a, _Tp alpha)$/;"	f	namespace:cv
operator /	opencv2/core/types.hpp	/^Scalar_<_Tp> operator \/ (const Scalar_<_Tp>& a, const Scalar_<_Tp>& b)$/;"	f	namespace:cv
operator /	opencv2/core/types.hpp	/^Scalar_<double> operator \/ (const Scalar_<double>& a, double alpha)$/;"	f	namespace:cv
operator /	opencv2/core/types.hpp	/^Scalar_<float> operator \/ (const Scalar_<float>& a, float alpha)$/;"	f	namespace:cv
operator /	opencv2/core/types.hpp	/^Size_<_Tp> operator \/ (const Size_<_Tp>& a, _Tp b)$/;"	f	namespace:cv
operator /=	opencv2/core/mat.inl.hpp	/^Mat& operator \/= (Mat& a, const MatExpr& b)$/;"	f	namespace:cv
operator /=	opencv2/core/mat.inl.hpp	/^Mat_<_Tp>& operator \/= (Mat_<_Tp>& a, const MatExpr& b)$/;"	f	namespace:cv
operator /=	opencv2/core/mat.inl.hpp	/^const Mat& operator \/= (const Mat& a, const MatExpr& b)$/;"	f	namespace:cv
operator /=	opencv2/core/mat.inl.hpp	/^const Mat_<_Tp>& operator \/= (const Mat_<_Tp>& a, const MatExpr& b)$/;"	f	namespace:cv
operator /=	opencv2/core/matx.hpp	/^Vec<_Tp, cn>& operator \/= (Vec<_Tp, cn>& a, double alpha)$/;"	f	namespace:cv
operator /=	opencv2/core/matx.hpp	/^Vec<_Tp, cn>& operator \/= (Vec<_Tp, cn>& a, float alpha)$/;"	f	namespace:cv
operator /=	opencv2/core/matx.hpp	/^Vec<_Tp, cn>& operator \/= (Vec<_Tp, cn>& a, int alpha)$/;"	f	namespace:cv
operator /=	opencv2/core/types.hpp	/^Complex<_Tp> operator \/= (const Complex<_Tp>& a, _Tp b)$/;"	f	namespace:cv
operator /=	opencv2/core/types.hpp	/^Complex<_Tp>& operator \/= (Complex<_Tp>& a, const Complex<_Tp>& b)$/;"	f	namespace:cv
operator /=	opencv2/core/types.hpp	/^Point3_<_Tp>& operator \/= (Point3_<_Tp>& a, double b)$/;"	f	namespace:cv
operator /=	opencv2/core/types.hpp	/^Point3_<_Tp>& operator \/= (Point3_<_Tp>& a, float b)$/;"	f	namespace:cv
operator /=	opencv2/core/types.hpp	/^Point3_<_Tp>& operator \/= (Point3_<_Tp>& a, int b)$/;"	f	namespace:cv
operator /=	opencv2/core/types.hpp	/^Point_<_Tp>& operator \/= (Point_<_Tp>& a, double b)$/;"	f	namespace:cv
operator /=	opencv2/core/types.hpp	/^Point_<_Tp>& operator \/= (Point_<_Tp>& a, float b)$/;"	f	namespace:cv
operator /=	opencv2/core/types.hpp	/^Point_<_Tp>& operator \/= (Point_<_Tp>& a, int b)$/;"	f	namespace:cv
operator /=	opencv2/core/types.hpp	/^Scalar_<_Tp>& operator \/= (Scalar_<_Tp>& a, _Tp alpha)$/;"	f	namespace:cv
operator /=	opencv2/core/types.hpp	/^Scalar_<_Tp>& operator \/= (Scalar_<_Tp>& a, const Scalar_<_Tp>& b)$/;"	f	namespace:cv
operator /=	opencv2/core/types.hpp	/^Size_<_Tp>& operator \/= (Size_<_Tp>& a, _Tp b)$/;"	f	namespace:cv
operator <	5/parallel/multiway_merge.h	/^      operator<(_GuardedIterator<_RAIter, _Compare>& __bi1,$/;"	f	class:__gnu_parallel::_GuardedIterator
operator <	5/parallel/multiway_merge.h	/^      operator<(_UnguardedIterator<_RAIter, _Compare>& __bi1,$/;"	f	class:__gnu_parallel::_UnguardedIterator
operator <	5/profile/impl/profiler_trace.h	/^    operator<(const __warning_data& __other) const$/;"	f	struct:__gnu_profile::__warning_data
operator <	cpp_src/basic_string.h	/^    operator<(const _CharT* __lhs,$/;"	f	namespace:std
operator <	cpp_src/basic_string.h	/^    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	namespace:std
operator <	cpp_src/stl_bvector.h	/^    operator<(const _Bit_iterator_base& __i) const$/;"	f	struct:std::_Bit_iterator_base
operator <	cpp_src/stl_bvector.h	/^    operator<(const _Bit_reference& __x) const$/;"	f	struct:std::_Bit_reference
operator <	cpp_src/stl_deque.h	/^    operator<(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x,$/;"	f	namespace:std
operator <	cpp_src/stl_deque.h	/^    operator<(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x,$/;"	f	namespace:std
operator <	cpp_src/stl_deque.h	/^    operator<(const deque<_Tp, _Alloc>& __x,$/;"	f	namespace:std
operator <	cpp_src/stl_iterator.h	/^    operator<(const __normal_iterator<_Iterator, _Container>& __lhs,$/;"	f
operator <	cpp_src/stl_iterator.h	/^    operator<(const __normal_iterator<_IteratorL, _Container>& __lhs,$/;"	f
operator <	cpp_src/stl_iterator.h	/^    operator<(const reverse_iterator<_Iterator>& __x,$/;"	f	namespace:std
operator <	cpp_src/stl_iterator.h	/^    operator<(const reverse_iterator<_IteratorL>& __x,$/;"	f	namespace:std
operator <	cpp_src/stl_list.h	/^    operator<(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>& __y)$/;"	f	namespace:std
operator <	cpp_src/stl_map.h	/^    operator<(const map<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	namespace:std
operator <	cpp_src/stl_multimap.h	/^    operator<(const multimap<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	namespace:std
operator <	cpp_src/stl_multiset.h	/^    operator<(const multiset<_Key, _Compare, _Alloc>& __x,$/;"	f	namespace:std
operator <	cpp_src/stl_pair.h	/^    operator<(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)$/;"	f	namespace:std
operator <	cpp_src/stl_queue.h	/^    operator<(const queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)$/;"	f	namespace:std
operator <	cpp_src/stl_set.h	/^    operator<(const set<_Key, _Compare, _Alloc>& __x,$/;"	f	namespace:std
operator <	cpp_src/stl_stack.h	/^    operator<(const stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)$/;"	f	namespace:std
operator <	cpp_src/stl_tree.h	/^    operator<(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,$/;"	f	namespace:std
operator <	cpp_src/stl_vector.h	/^    operator<(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)$/;"	f	namespace:std
operator <	opencv2/core/cvstd.hpp	/^static inline bool operator<  (const String& lhs, const String& rhs) { return lhs.compare(rhs) <  0; }$/;"	f	namespace:cv
operator <	opencv2/core/cvstd.hpp	/^static inline bool operator<  (const String& lhs, const char*   rhs) { return lhs.compare(rhs) <  0; }$/;"	f	namespace:cv
operator <	opencv2/core/cvstd.hpp	/^static inline bool operator<  (const char*   lhs, const String& rhs) { return rhs.compare(lhs) >  0; }$/;"	f	namespace:cv
operator <	opencv2/core/mat.inl.hpp	/^bool operator < (const MatConstIterator& a, const MatConstIterator& b)$/;"	f	namespace:cv
operator <	opencv2/core/persistence.hpp	/^bool operator < (const FileNodeIterator& it1, const FileNodeIterator& it2)$/;"	f	namespace:cv
operator <	opencv2/core/types.hpp	/^bool DMatch::operator < (const DMatch &m) const$/;"	f	class:cv::DMatch
operator <	opencv2/flann/result_set.h	/^        bool operator<(const DistIndex dist_index) const$/;"	f	struct:cvflann::UniqueResultSet::DistIndex
operator <	opencv2/flann/result_set.h	/^    bool operator<(const BranchStruct<T, DistanceType>& rhs) const$/;"	f	struct:cvflann::BranchStruct
operator <	opencv2/stitching/detail/util.hpp	/^    bool operator <(const GraphEdge& other) const { return weight < other.weight; }$/;"	f	struct:cv::detail::GraphEdge
operator <	opencv2/videostab/fast_marching.hpp	/^        bool operator <(const DXY &dxy) const { return dist < dxy.dist; }$/;"	f	struct:cv::videostab::FastMarchingMethod::DXY
operator <<	5/ext/pb_ds/detail/debug_map_base.hpp	/^    operator<<(std::basic_ostream<_CharT, _Traits>& __out,$/;"	f	namespace:__gnu_pbds::detail
operator <<	cpp_src/basic_string.h	/^    operator<<(basic_ostream<_CharT, _Traits>& __os,$/;"	f	namespace:std
operator <<	opencv2/core.hpp	/^String& operator << (String& out, Ptr<Formatted> fmtd)$/;"	f	namespace:cv
operator <<	opencv2/core.hpp	/^String& operator << (String& out, const Mat& mtx)$/;"	f	namespace:cv
operator <<	opencv2/core/cvstd.inl.hpp	/^FileStorage& operator << (FileStorage& fs, const std::string& value)$/;"	f	namespace:cv
operator <<	opencv2/core/cvstd.inl.hpp	/^std::ostream& operator << (std::ostream& os, const String& str)$/;"	f	namespace:cv
operator <<	opencv2/core/cvstd.inl.hpp	/^std::ostream& operator << (std::ostream& out, Ptr<Formatted> fmtd)$/;"	f	namespace:cv
operator <<	opencv2/core/cvstd.inl.hpp	/^std::ostream& operator << (std::ostream& out, const Mat& mtx)$/;"	f	namespace:cv
operator <<	opencv2/core/cvstd.inl.hpp	/^std::ostream& operator << (std::ostream& out, const Matx<_Tp, m, n>& matx)$/;"	f	namespace:cv
operator <<	opencv2/core/cvstd.inl.hpp	/^std::ostream& operator << (std::ostream& out, const Point3_<_Tp>& p)$/;"	f	namespace:cv
operator <<	opencv2/core/cvstd.inl.hpp	/^std::ostream& operator << (std::ostream& out, const Point_<_Tp>& p)$/;"	f	namespace:cv
operator <<	opencv2/core/cvstd.inl.hpp	/^std::ostream& operator << (std::ostream& out, const Rect_<_Tp>& rect)$/;"	f	namespace:cv
operator <<	opencv2/core/cvstd.inl.hpp	/^std::ostream& operator << (std::ostream& out, const Size_<_Tp>& size)$/;"	f	namespace:cv
operator <<	opencv2/core/cvstd.inl.hpp	/^std::ostream& operator << (std::ostream& out, const Vec<_Tp, n>& vec)$/;"	f	namespace:cv
operator <<	opencv2/core/cvstd.inl.hpp	/^std::ostream& operator << (std::ostream& out, const std::vector<Point3_<_Tp> >& vec)$/;"	f	namespace:cv
operator <<	opencv2/core/cvstd.inl.hpp	/^std::ostream& operator << (std::ostream& out, const std::vector<Point_<_Tp> >& vec)$/;"	f	namespace:cv
operator <<	opencv2/core/mat.inl.hpp	/^MatCommaInitializer_<_Tp> operator << (const Mat_<_Tp>& m, T2 val)$/;"	f	namespace:cv
operator <<	opencv2/core/matx.hpp	/^MatxCommaInitializer<_Tp, m, n> operator << (const Matx<_Tp, m, n>& mtx, _T2 val)$/;"	f	namespace:cv
operator <<	opencv2/core/matx.hpp	/^VecCommaInitializer<_Tp, cn> operator << (const Vec<_Tp, cn>& vec, _T2 val)$/;"	f	namespace:cv
operator <<	opencv2/core/persistence.hpp	/^FileStorage& operator << (FileStorage& fs, char* value)$/;"	f	namespace:cv
operator <<	opencv2/core/persistence.hpp	/^FileStorage& operator << (FileStorage& fs, const _Tp& value)$/;"	f	namespace:cv
operator <<	opencv2/core/persistence.hpp	/^FileStorage& operator << (FileStorage& fs, const char* str)$/;"	f	namespace:cv
operator <<	opencv2/core/utility.hpp	/^std::ostream& operator << (std::ostream& out, const TickMeter& tm)$/;"	f	namespace:cv
operator <<	opencv2/flann/any.h	/^inline std::ostream& operator <<(std::ostream& out, const any& any_val)$/;"	f	namespace:cvflann
operator <<	opencv2/flann/any.h	/^inline std::ostream& operator <<(std::ostream& out, const empty_any&)$/;"	f	namespace:cvflann::anyimpl
operator <<	opencv2/flann/lsh_table.h	/^inline std::ostream& operator <<(std::ostream& out, const LshStats& stats)$/;"	f	namespace:cvflann::lsh
operator <=	5/parallel/multiway_merge.h	/^      operator<=(_GuardedIterator<_RAIter, _Compare>& __bi1,$/;"	f	class:__gnu_parallel::_GuardedIterator
operator <=	5/parallel/multiway_merge.h	/^      operator<=(_UnguardedIterator<_RAIter, _Compare>& __bi1,$/;"	f	class:__gnu_parallel::_UnguardedIterator
operator <=	cpp_src/basic_string.h	/^    operator<=(const _CharT* __lhs,$/;"	f	namespace:std
operator <=	cpp_src/basic_string.h	/^    operator<=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	namespace:std
operator <=	cpp_src/stl_bvector.h	/^    operator<=(const _Bit_iterator_base& __i) const$/;"	f	struct:std::_Bit_iterator_base
operator <=	cpp_src/stl_deque.h	/^    operator<=(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x,$/;"	f	namespace:std
operator <=	cpp_src/stl_deque.h	/^    operator<=(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x,$/;"	f	namespace:std
operator <=	cpp_src/stl_deque.h	/^    operator<=(const deque<_Tp, _Alloc>& __x,$/;"	f	namespace:std
operator <=	cpp_src/stl_iterator.h	/^    operator<=(const __normal_iterator<_Iterator, _Container>& __lhs,$/;"	f
operator <=	cpp_src/stl_iterator.h	/^    operator<=(const __normal_iterator<_IteratorL, _Container>& __lhs,$/;"	f
operator <=	cpp_src/stl_iterator.h	/^    operator<=(const reverse_iterator<_Iterator>& __x,$/;"	f	namespace:std
operator <=	cpp_src/stl_iterator.h	/^    operator<=(const reverse_iterator<_IteratorL>& __x,$/;"	f	namespace:std
operator <=	cpp_src/stl_list.h	/^    operator<=(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>& __y)$/;"	f	namespace:std
operator <=	cpp_src/stl_map.h	/^    operator<=(const map<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	namespace:std
operator <=	cpp_src/stl_multimap.h	/^    operator<=(const multimap<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	namespace:std
operator <=	cpp_src/stl_multiset.h	/^    operator<=(const multiset<_Key, _Compare, _Alloc>& __x,$/;"	f	namespace:std
operator <=	cpp_src/stl_pair.h	/^    operator<=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)$/;"	f	namespace:std
operator <=	cpp_src/stl_queue.h	/^    operator<=(const queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)$/;"	f	namespace:std
operator <=	cpp_src/stl_relops.h	/^      operator<=(const _Tp& __x, const _Tp& __y)$/;"	f	namespace:std::rel_ops
operator <=	cpp_src/stl_set.h	/^    operator<=(const set<_Key, _Compare, _Alloc>& __x,$/;"	f	namespace:std
operator <=	cpp_src/stl_stack.h	/^    operator<=(const stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)$/;"	f	namespace:std
operator <=	cpp_src/stl_tree.h	/^    operator<=(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,$/;"	f	namespace:std
operator <=	cpp_src/stl_vector.h	/^    operator<=(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)$/;"	f	namespace:std
operator <=	opencv2/core/cvstd.hpp	/^static inline bool operator<= (const String& lhs, const String& rhs) { return lhs.compare(rhs) <= 0; }$/;"	f	namespace:cv
operator <=	opencv2/core/cvstd.hpp	/^static inline bool operator<= (const String& lhs, const char*   rhs) { return lhs.compare(rhs) <= 0; }$/;"	f	namespace:cv
operator <=	opencv2/core/cvstd.hpp	/^static inline bool operator<= (const char*   lhs, const String& rhs) { return rhs.compare(lhs) >= 0; }$/;"	f	namespace:cv
operator <=	opencv2/core/mat.inl.hpp	/^bool operator <= (const MatConstIterator& a, const MatConstIterator& b)$/;"	f	namespace:cv
operator =	5/debug/safe_local_iterator.h	/^      operator=(const _Safe_local_iterator& __x)$/;"	f	class:__gnu_debug::_Safe_local_iterator
operator =	5/ext/pb_ds/assoc_container.hpp	/^    operator=(const cc_hash_table& other)$/;"	f	class:__gnu_pbds::cc_hash_table
operator =	5/ext/pb_ds/assoc_container.hpp	/^    operator=(const gp_hash_table& other)$/;"	f	class:__gnu_pbds::gp_hash_table
operator =	5/ext/pb_ds/assoc_container.hpp	/^    operator=(const list_update& other)$/;"	f	class:__gnu_pbds::list_update
operator =	5/ext/pb_ds/assoc_container.hpp	/^    operator=(const tree& other)$/;"	f	class:__gnu_pbds::tree
operator =	5/ext/pb_ds/assoc_container.hpp	/^    operator=(const trie& other)$/;"	f	class:__gnu_pbds::trie
operator =	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	/^      operator=(const PB_DS_TREE_CONST_IT_C_DEC& other)$/;"	f	class:__gnu_pbds::detail::bin_search_tree_const_it_
operator =	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	/^      operator=(const PB_DS_TREE_CONST_ODIR_IT_C_DEC& other)$/;"	f	class:__gnu_pbds::detail::bin_search_tree_const_it_
operator =	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	/^      operator=(const PB_DS_TREE_IT_C_DEC& other)$/;"	f	class:__gnu_pbds::detail::bin_search_tree_it_
operator =	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	/^      operator=(const PB_DS_TREE_ODIR_IT_C_DEC& other)$/;"	f	class:__gnu_pbds::detail::bin_search_tree_it_
operator =	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      operator=(const PB_DS_CONST_ODIR_IT_C_DEC& other)$/;"	f	class:__gnu_pbds::detail::pat_trie_base::_CIter
operator =	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      operator=(const PB_DS_ODIR_IT_C_DEC& other)$/;"	f	class:__gnu_pbds::detail::pat_trie_base::_Iter
operator =	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      operator=(const _CIter& other)$/;"	f	class:__gnu_pbds::detail::pat_trie_base::_CIter
operator =	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      operator=(const _Iter& other)$/;"	f	class:__gnu_pbds::detail::pat_trie_base::_Iter
operator =	5/ext/pb_ds/priority_queue.hpp	/^    operator=(const priority_queue& other)$/;"	f	class:__gnu_pbds::priority_queue
operator =	5/parallel/iterator.h	/^      operator=(const _IteratorPair& __other)$/;"	f	class:__gnu_parallel::_IteratorPair
operator =	5/parallel/iterator.h	/^      operator=(const _IteratorTriple& __other)$/;"	f	class:__gnu_parallel::_IteratorTriple
operator =	cpp_src/basic_string.h	/^      operator=(_CharT __c) $/;"	f	class:std::basic_string
operator =	cpp_src/basic_string.h	/^      operator=(const _CharT* __s) $/;"	f	class:std::basic_string
operator =	cpp_src/basic_string.h	/^      operator=(const basic_string& __str) $/;"	f	class:std::basic_string
operator =	cpp_src/gslice.h	/^  gslice::operator= (const gslice& __g)$/;"	f	class:std::gslice
operator =	cpp_src/gslice_array.h	/^      gslice_array<_Tp>::operator=(const _Expr<_Dom, _Tp>& __e) const$/;"	f	class:std::gslice_array
operator =	cpp_src/gslice_array.h	/^    gslice_array<_Tp>::operator=(const _Tp& __t) const$/;"	f	class:std::gslice_array
operator =	cpp_src/gslice_array.h	/^    gslice_array<_Tp>::operator=(const gslice_array<_Tp>& __a)$/;"	f	class:std::gslice_array
operator =	cpp_src/gslice_array.h	/^    gslice_array<_Tp>::operator=(const valarray<_Tp>& __v) const$/;"	f	class:std::gslice_array
operator =	cpp_src/indirect_array.h	/^      indirect_array<_Tp>::operator=(const _Expr<_Dom, _Tp>& __e) const$/;"	f	class:std::indirect_array
operator =	cpp_src/indirect_array.h	/^    indirect_array<_Tp>::operator=(const _Tp& __t) const$/;"	f	class:std::indirect_array
operator =	cpp_src/indirect_array.h	/^    indirect_array<_Tp>::operator=(const indirect_array<_Tp>& __a)$/;"	f	class:std::indirect_array
operator =	cpp_src/indirect_array.h	/^    indirect_array<_Tp>::operator=(const valarray<_Tp>& __v) const$/;"	f	class:std::indirect_array
operator =	cpp_src/mask_array.h	/^      mask_array<_Tp>::operator=(const _Expr<_Ex, _Tp>& __e) const$/;"	f	class:std::mask_array
operator =	cpp_src/mask_array.h	/^    mask_array<_Tp>::operator=(const _Tp& __t) const$/;"	f	class:std::mask_array
operator =	cpp_src/mask_array.h	/^    mask_array<_Tp>::operator=(const mask_array<_Tp>& __a)$/;"	f	class:std::mask_array
operator =	cpp_src/mask_array.h	/^    mask_array<_Tp>::operator=(const valarray<_Tp>& __v) const$/;"	f	class:std::mask_array
operator =	cpp_src/slice_array.h	/^    slice_array<_Tp>::operator=(const _Expr<_Dom,_Tp>& __e) const$/;"	f	class:std::slice_array
operator =	cpp_src/slice_array.h	/^    slice_array<_Tp>::operator=(const _Tp& __t) const$/;"	f	class:std::slice_array
operator =	cpp_src/slice_array.h	/^    slice_array<_Tp>::operator=(const slice_array<_Tp>& __a)$/;"	f	class:std::slice_array
operator =	cpp_src/slice_array.h	/^    slice_array<_Tp>::operator=(const valarray<_Tp>& __v) const$/;"	f	class:std::slice_array
operator =	cpp_src/stl_bvector.h	/^    operator=(bool __x)$/;"	f	struct:std::_Bit_reference
operator =	cpp_src/stl_bvector.h	/^    operator=(const _Bit_reference& __x)$/;"	f	struct:std::_Bit_reference
operator =	cpp_src/stl_bvector.h	/^    operator=(const vector& __x)$/;"	f	class:std::vector
operator =	cpp_src/stl_iterator.h	/^      operator=(const typename _Container::const_reference __value)$/;"	f	class:std::insert_iterator
operator =	cpp_src/stl_iterator.h	/^      operator=(typename _Container::const_reference __value)$/;"	f	class:std::back_insert_iterator
operator =	cpp_src/stl_iterator.h	/^      operator=(typename _Container::const_reference __value)$/;"	f	class:std::front_insert_iterator
operator =	cpp_src/stl_map.h	/^      operator=(const map& __x)$/;"	f	class:std::map
operator =	cpp_src/stl_multimap.h	/^      operator=(const multimap& __x)$/;"	f	class:std::multimap
operator =	cpp_src/stl_multiset.h	/^      operator=(const multiset<_Key,_Compare,_Alloc>& __x)$/;"	f	class:std::multiset
operator =	cpp_src/stl_raw_storage_iter.h	/^      operator=(const _Tp& __element)$/;"	f	class:std::raw_storage_iterator
operator =	cpp_src/stl_set.h	/^      operator=(const set<_Key, _Compare, _Alloc>& __x)$/;"	f	class:std::set
operator =	cpp_src/stl_tree.h	/^    operator=(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x)$/;"	f	class:std::_Rb_tree
operator =	cpp_src/stream_iterator.h	/^      operator=(const _Tp& __value)$/;"	f	class:std::ostream_iterator
operator =	cpp_src/streambuf_iterator.h	/^      operator=(_CharT __c)$/;"	f	class:std::ostreambuf_iterator
operator =	opencv2/core/cuda.inl.hpp	/^GpuMat& GpuMat::operator =(const GpuMat& m)$/;"	f	class:cv::cuda::GpuMat
operator =	opencv2/core/cuda.inl.hpp	/^HostMem& HostMem::operator =(const HostMem& m)$/;"	f	class:cv::cuda::HostMem
operator =	opencv2/core/cvstd.hpp	/^String& String::operator=(char c)$/;"	f	class:cv::String
operator =	opencv2/core/cvstd.hpp	/^String& String::operator=(const String& str)$/;"	f	class:cv::String
operator =	opencv2/core/cvstd.hpp	/^String& String::operator=(const char* s)$/;"	f	class:cv::String
operator =	opencv2/core/cvstd.inl.hpp	/^String& String::operator = (const std::string& str)$/;"	f	class:cv::String
operator =	opencv2/core/mat.inl.hpp	/^Mat& Mat::operator = (Mat&& m)$/;"	f	class:cv::Mat
operator =	opencv2/core/mat.inl.hpp	/^Mat& Mat::operator = (const Mat& m)$/;"	f	class:cv::Mat
operator =	opencv2/core/mat.inl.hpp	/^Mat& Mat::operator = (const MatExpr& e)$/;"	f	class:cv::Mat
operator =	opencv2/core/mat.inl.hpp	/^MatConstIterator& MatConstIterator::operator = (const MatConstIterator& it )$/;"	f	class:cv::MatConstIterator
operator =	opencv2/core/mat.inl.hpp	/^MatConstIterator_<_Tp>& MatConstIterator_<_Tp>::operator = (const MatConstIterator_& it )$/;"	f	class:cv::MatConstIterator_
operator =	opencv2/core/mat.inl.hpp	/^MatIterator_<_Tp>& MatIterator_<_Tp>::operator = (const MatIterator_<_Tp>& it )$/;"	f	class:cv::MatIterator_
operator =	opencv2/core/mat.inl.hpp	/^Mat_<_Tp>& Mat_<_Tp>::operator = (Mat&& m)$/;"	f	class:cv::Mat_
operator =	opencv2/core/mat.inl.hpp	/^Mat_<_Tp>& Mat_<_Tp>::operator = (Mat_&& m)$/;"	f	class:cv::Mat_
operator =	opencv2/core/mat.inl.hpp	/^Mat_<_Tp>& Mat_<_Tp>::operator = (const Mat& m)$/;"	f	class:cv::Mat_
operator =	opencv2/core/mat.inl.hpp	/^Mat_<_Tp>& Mat_<_Tp>::operator = (const MatExpr& e)$/;"	f	class:cv::Mat_
operator =	opencv2/core/mat.inl.hpp	/^Mat_<_Tp>& Mat_<_Tp>::operator = (const Mat_& m)$/;"	f	class:cv::Mat_
operator =	opencv2/core/mat.inl.hpp	/^Mat_<_Tp>& Mat_<_Tp>::operator = (const _Tp& s)$/;"	f	class:cv::Mat_
operator =	opencv2/core/mat.inl.hpp	/^SparseMat& SparseMat::operator = (const Mat& m)$/;"	f	class:cv::SparseMat
operator =	opencv2/core/mat.inl.hpp	/^SparseMat& SparseMat::operator = (const SparseMat& m)$/;"	f	class:cv::SparseMat
operator =	opencv2/core/mat.inl.hpp	/^SparseMatConstIterator_<_Tp>& SparseMatConstIterator_<_Tp>::operator = (const SparseMatConstIterator_<_Tp>& it)$/;"	f	class:cv::SparseMatConstIterator_
operator =	opencv2/core/mat.inl.hpp	/^SparseMatIterator& SparseMatIterator::operator = (const SparseMatIterator& it)$/;"	f	class:cv::SparseMatIterator
operator =	opencv2/core/mat.inl.hpp	/^SparseMatIterator_<_Tp>& SparseMatIterator_<_Tp>::operator = (const SparseMatIterator_<_Tp>& it)$/;"	f	class:cv::SparseMatIterator_
operator =	opencv2/core/mat.inl.hpp	/^SparseMat_<_Tp>& SparseMat_<_Tp>::operator = (const Mat& m)$/;"	f	class:cv::SparseMat_
operator =	opencv2/core/mat.inl.hpp	/^SparseMat_<_Tp>& SparseMat_<_Tp>::operator = (const SparseMat& m)$/;"	f	class:cv::SparseMat_
operator =	opencv2/core/mat.inl.hpp	/^SparseMat_<_Tp>& SparseMat_<_Tp>::operator = (const SparseMat_<_Tp>& m)$/;"	f	class:cv::SparseMat_
operator =	opencv2/core/mat.inl.hpp	/^UMat& UMat::operator = (UMat&& m)$/;"	f	class:cv::UMat
operator =	opencv2/core/mat.inl.hpp	/^UMat& UMat::operator = (const UMat& m)$/;"	f	class:cv::UMat
operator =	opencv2/core/mat.inl.hpp	/^inline MatStep& MatStep::operator = (size_t s)$/;"	f	class:cv::MatStep
operator =	opencv2/core/mat.inl.hpp	/^inline SparseMatConstIterator& SparseMatConstIterator::operator = (const SparseMatConstIterator& it)$/;"	f	class:cv::SparseMatConstIterator
operator =	opencv2/core/private.hpp	/^    IppAutoBuffer& operator =(const IppAutoBuffer &) {return *this;}$/;"	f	class:IppAutoBuffer
operator =	opencv2/core/ptr.inl.hpp	/^Ptr<T>& Ptr<T>::operator = (Ptr<T>&& o)$/;"	f	class:cv::Ptr
operator =	opencv2/core/ptr.inl.hpp	/^Ptr<T>& Ptr<T>::operator = (const Ptr<T>& o)$/;"	f	class:cv::Ptr
operator =	opencv2/core/ptr.inl.hpp	/^Ptr<T>& Ptr<T>::operator = (const Ptr<Y>& o)$/;"	f	class:cv::Ptr
operator =	opencv2/core/types.hpp	/^Point3_<_Tp>& Point3_<_Tp>::operator = (const Point3_& pt)$/;"	f	class:cv::Point3_
operator =	opencv2/core/types.hpp	/^Point_<_Tp>& Point_<_Tp>::operator = (const Point_& pt)$/;"	f	class:cv::Point_
operator =	opencv2/core/types.hpp	/^Rect_<_Tp>& Rect_<_Tp>::operator = ( const Rect_<_Tp>& r )$/;"	f	class:cv::Rect_
operator =	opencv2/core/types.hpp	/^Size_<_Tp>& Size_<_Tp>::operator = (const Size_<_Tp>& sz)$/;"	f	class:cv::Size_
operator =	opencv2/core/utility.hpp	/^    TLSData& operator =(const TLSData &) {return *this;}$/;"	f	class:cv::TLSData
operator =	opencv2/core/utility.hpp	/^AutoBuffer<_Tp, fixed_size>::operator = (const AutoBuffer<_Tp, fixed_size>& abuf)$/;"	f	class:cv::AutoBuffer
operator =	opencv2/core/wimage.hpp	/^    WImageView& operator=(const WImage<T>& img) {$/;"	f	class:cv::WImageView
operator =	opencv2/core/wimage.hpp	/^    WImageViewC& operator=(const WImageC<T, C>& img) {$/;"	f	class:cv::WImageViewC
operator =	opencv2/core/wimage.hpp	/^    WImageViewC& operator=(const WImageViewC<T, C>& img) {$/;"	f	class:cv::WImageViewC
operator =	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^__host__ GpuMat_<T>& GpuMat_<T>::operator =(const Expr<Body>& expr)$/;"	f	class:cv::cudev::GpuMat_
operator =	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^__host__ GpuMat_<T>& GpuMat_<T>::operator =(const GpuMat_& m)$/;"	f	class:cv::cudev::GpuMat_
operator =	opencv2/flann/any.h	/^    any& operator=(const T& x)$/;"	f	struct:cvflann::any
operator =	opencv2/flann/any.h	/^    any& operator=(const char* x)$/;"	f	struct:cvflann::any
operator =	opencv2/flann/kmeans_index.h	/^        KMeansDistanceComputer& operator=( const KMeansDistanceComputer & ) { return *this; }$/;"	f	class:cvflann::KMeansIndex::KMeansDistanceComputer
operator ==	5/debug/safe_local_iterator.h	/^    operator==(const _Safe_local_iterator<_Iterator, _Sequence>& __lhs,$/;"	f	namespace:__gnu_debug
operator ==	5/debug/safe_local_iterator.h	/^    operator==(const _Safe_local_iterator<_IteratorL, _Sequence>& __lhs,$/;"	f	namespace:__gnu_debug
operator ==	5/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp	/^      operator==(const PB_DS_TREE_CONST_NODE_ITERATOR_CLASS_C_DEC& other) const$/;"	f	class:__gnu_pbds::detail::bin_search_tree_const_node_it_
operator ==	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	/^      operator==(const PB_DS_TREE_CONST_IT_C_DEC & other) const$/;"	f	class:__gnu_pbds::detail::bin_search_tree_const_it_
operator ==	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	/^      operator==(const PB_DS_TREE_CONST_ODIR_IT_C_DEC & other) const$/;"	f	class:__gnu_pbds::detail::bin_search_tree_const_it_
operator ==	5/ext/pb_ds/detail/binary_heap_/const_iterator.hpp	/^      operator==(const binary_heap_const_iterator_& other) const$/;"	f	class:__gnu_pbds::detail::binary_heap_const_iterator_
operator ==	5/ext/pb_ds/detail/binary_heap_/point_const_iterator.hpp	/^      operator==(const binary_heap_point_const_iterator_& other) const$/;"	f	class:__gnu_pbds::detail::binary_heap_point_const_iterator_
operator ==	5/ext/pb_ds/detail/cc_hash_table_map_/cmp_fn_imps.hpp	/^operator==(const Other_HT_Map_Type& other) const$/;"	f	class:PB_DS_CLASS_C_DEC
operator ==	5/ext/pb_ds/detail/cc_hash_table_map_/info_fn_imps.hpp	/^operator==(const Other_HT_Map_Type& other) const$/;"	f	class:PB_DS_CLASS_C_DEC
operator ==	5/ext/pb_ds/detail/left_child_next_sibling_heap_/const_iterator.hpp	/^      operator==(const PB_DS_CLASS_C_DEC& other) const$/;"	f	class:__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_
operator ==	5/ext/pb_ds/detail/left_child_next_sibling_heap_/point_const_iterator.hpp	/^      operator==(const PB_DS_CLASS_C_DEC& other) const$/;"	f	class:__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_
operator ==	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	/^      operator==(const this_type& other) const$/;"	f	class:__gnu_pbds::detail::ov_tree_node_const_it_
operator ==	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	operator==(const const_iterator& other) const$/;"	f	struct:__gnu_pbds::detail::pat_trie_base::_Inode::const_iterator
operator ==	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	operator==(const iterator& other) const$/;"	f	struct:__gnu_pbds::detail::pat_trie_base::_Inode::iterator
operator ==	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      operator==(const PB_DS_CONST_ODIR_IT_C_DEC& other) const$/;"	f	class:__gnu_pbds::detail::pat_trie_base::_CIter
operator ==	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      operator==(const _CIter& other) const$/;"	f	class:__gnu_pbds::detail::pat_trie_base::_CIter
operator ==	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      operator==(const _Node_citer& other) const$/;"	f	class:__gnu_pbds::detail::pat_trie_base::_Node_citer
operator ==	5/ext/pb_ds/detail/unordered_iterator/point_const_iterator.hpp	/^  operator==(const point_const_iterator_& other) const$/;"	f	class:point_const_iterator_
operator ==	5/ext/pb_ds/detail/unordered_iterator/point_const_iterator.hpp	/^  operator==(const point_iterator_& other) const$/;"	f	class:point_const_iterator_
operator ==	5/ext/pb_ds/detail/unordered_iterator/point_iterator.hpp	/^  operator==(const point_const_iterator_& other) const$/;"	f	class:point_iterator_
operator ==	5/ext/pb_ds/detail/unordered_iterator/point_iterator.hpp	/^  operator==(const point_iterator_& other) const$/;"	f	class:point_iterator_
operator ==	5/parallel/base.h	/^      operator==(const _PseudoSequenceIterator& __i2)$/;"	f	class:__gnu_parallel::_PseudoSequenceIterator
operator ==	cpp_src/allocator.h	/^    operator==(const allocator<_T1>&, const allocator<_T2>&)$/;"	f	namespace:std
operator ==	cpp_src/allocator.h	/^    operator==(const allocator<_Tp>&, const allocator<_Tp>&)$/;"	f	namespace:std
operator ==	cpp_src/basic_string.h	/^    operator==(const _CharT* __lhs,$/;"	f	namespace:std
operator ==	cpp_src/basic_string.h	/^    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	namespace:std
operator ==	cpp_src/postypes.h	/^    operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)$/;"	f	namespace:std
operator ==	cpp_src/stl_bvector.h	/^    operator==(const _Bit_iterator_base& __i) const$/;"	f	struct:std::_Bit_iterator_base
operator ==	cpp_src/stl_bvector.h	/^    operator==(const _Bit_reference& __x) const$/;"	f	struct:std::_Bit_reference
operator ==	cpp_src/stl_deque.h	/^    operator==(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x,$/;"	f	namespace:std
operator ==	cpp_src/stl_deque.h	/^    operator==(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x,$/;"	f	namespace:std
operator ==	cpp_src/stl_deque.h	/^    operator==(const deque<_Tp, _Alloc>& __x,$/;"	f	namespace:std
operator ==	cpp_src/stl_iterator.h	/^    operator==(const __normal_iterator<_Iterator, _Container>& __lhs,$/;"	f
operator ==	cpp_src/stl_iterator.h	/^    operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,$/;"	f
operator ==	cpp_src/stl_iterator.h	/^    operator==(const reverse_iterator<_Iterator>& __x,$/;"	f	namespace:std
operator ==	cpp_src/stl_iterator.h	/^    operator==(const reverse_iterator<_IteratorL>& __x,$/;"	f	namespace:std
operator ==	cpp_src/stl_list.h	/^      operator==(const _Self& __x) const$/;"	f	struct:std::_List_const_iterator
operator ==	cpp_src/stl_list.h	/^      operator==(const _Self& __x) const$/;"	f	struct:std::_List_iterator
operator ==	cpp_src/stl_list.h	/^    operator==(const _List_iterator<_Val>& __x,$/;"	f	namespace:std
operator ==	cpp_src/stl_list.h	/^    operator==(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>& __y)$/;"	f	namespace:std
operator ==	cpp_src/stl_map.h	/^    operator==(const map<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	namespace:std
operator ==	cpp_src/stl_multimap.h	/^    operator==(const multimap<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	namespace:std
operator ==	cpp_src/stl_multiset.h	/^    operator==(const multiset<_Key, _Compare, _Alloc>& __x,$/;"	f	namespace:std
operator ==	cpp_src/stl_pair.h	/^    operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)$/;"	f	namespace:std
operator ==	cpp_src/stl_queue.h	/^    operator==(const queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)$/;"	f	namespace:std
operator ==	cpp_src/stl_set.h	/^    operator==(const set<_Key, _Compare, _Alloc>& __x,$/;"	f	namespace:std
operator ==	cpp_src/stl_stack.h	/^    operator==(const stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)$/;"	f	namespace:std
operator ==	cpp_src/stl_tree.h	/^      operator==(const _Self& __x) const$/;"	f	struct:std::_Rb_tree_const_iterator
operator ==	cpp_src/stl_tree.h	/^      operator==(const _Self& __x) const$/;"	f	struct:std::_Rb_tree_iterator
operator ==	cpp_src/stl_tree.h	/^    operator==(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,$/;"	f	namespace:std
operator ==	cpp_src/stl_tree.h	/^    operator==(const _Rb_tree_iterator<_Val>& __x,$/;"	f	namespace:std
operator ==	cpp_src/stl_vector.h	/^    operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)$/;"	f	namespace:std
operator ==	cpp_src/stream_iterator.h	/^    operator==(const istream_iterator<_Tp, _CharT, _Traits, _Dist>& __x,$/;"	f	namespace:std
operator ==	cpp_src/streambuf_iterator.h	/^    operator==(const istreambuf_iterator<_CharT, _Traits>& __a,$/;"	f	namespace:std
operator ==	opencv2/core/core_c.h	/^template<typename _Tp> inline bool operator == (const SeqIterator<_Tp>& a,$/;"	f	namespace:cv
operator ==	opencv2/core/cvstd.hpp	/^static inline bool operator== (const String& lhs, const String& rhs) { return 0 == lhs.compare(rhs); }$/;"	f	namespace:cv
operator ==	opencv2/core/cvstd.hpp	/^static inline bool operator== (const String& lhs, const char*   rhs) { return 0 == lhs.compare(rhs); }$/;"	f	namespace:cv
operator ==	opencv2/core/cvstd.hpp	/^static inline bool operator== (const char*   lhs, const String& rhs) { return 0 == rhs.compare(lhs); }$/;"	f	namespace:cv
operator ==	opencv2/core/mat.inl.hpp	/^bool MatSize::operator == (const MatSize& sz) const$/;"	f	class:cv::MatSize
operator ==	opencv2/core/mat.inl.hpp	/^bool operator == (const MatConstIterator& a, const MatConstIterator& b)$/;"	f	namespace:cv
operator ==	opencv2/core/mat.inl.hpp	/^bool operator == (const MatConstIterator_<_Tp>& a, const MatConstIterator_<_Tp>& b)$/;"	f	namespace:cv
operator ==	opencv2/core/mat.inl.hpp	/^bool operator == (const MatIterator_<_Tp>& a, const MatIterator_<_Tp>& b)$/;"	f	namespace:cv
operator ==	opencv2/core/mat.inl.hpp	/^bool operator == (const SparseMatConstIterator& it1, const SparseMatConstIterator& it2)$/;"	f	namespace:cv
operator ==	opencv2/core/matx.hpp	/^bool operator == (const Matx<_Tp, m, n>& a, const Matx<_Tp, m, n>& b)$/;"	f	namespace:cv
operator ==	opencv2/core/persistence.hpp	/^bool operator == (const FileNodeIterator& it1, const FileNodeIterator& it2)$/;"	f	namespace:cv
operator ==	opencv2/core/ptr.inl.hpp	/^bool operator == (const Ptr<T>& ptr1, const Ptr<T>& ptr2)$/;"	f	namespace:cv
operator ==	opencv2/core/types.hpp	/^bool operator == ( const Scalar_<_Tp>& a, const Scalar_<_Tp>& b )$/;"	f	namespace:cv
operator ==	opencv2/core/types.hpp	/^bool operator == (const Complex<_Tp>& a, const Complex<_Tp>& b)$/;"	f	namespace:cv
operator ==	opencv2/core/types.hpp	/^bool operator == (const Point3_<_Tp>& a, const Point3_<_Tp>& b)$/;"	f	namespace:cv
operator ==	opencv2/core/types.hpp	/^bool operator == (const Point_<_Tp>& a, const Point_<_Tp>& b)$/;"	f	namespace:cv
operator ==	opencv2/core/types.hpp	/^bool operator == (const Range& r1, const Range& r2)$/;"	f	namespace:cv
operator ==	opencv2/core/types.hpp	/^bool operator == (const Rect_<_Tp>& a, const Rect_<_Tp>& b)$/;"	f	namespace:cv
operator ==	opencv2/core/types.hpp	/^bool operator == (const Size_<_Tp>& a, const Size_<_Tp>& b)$/;"	f	namespace:cv
operator ==	opencv2/cudalegacy/NCV.hpp	/^    __host__ __device__ bool operator == (const NcvSize32u &another) const {return this->width == another.width && this->height == another.height;}$/;"	f	struct:NcvSize32u
operator >	cpp_src/basic_string.h	/^    operator>(const _CharT* __lhs,$/;"	f	namespace:std
operator >	cpp_src/basic_string.h	/^    operator>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	namespace:std
operator >	cpp_src/stl_bvector.h	/^    operator>(const _Bit_iterator_base& __i) const$/;"	f	struct:std::_Bit_iterator_base
operator >	cpp_src/stl_deque.h	/^    operator>(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x,$/;"	f	namespace:std
operator >	cpp_src/stl_deque.h	/^    operator>(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x,$/;"	f	namespace:std
operator >	cpp_src/stl_deque.h	/^    operator>(const deque<_Tp, _Alloc>& __x,$/;"	f	namespace:std
operator >	cpp_src/stl_iterator.h	/^    operator>(const __normal_iterator<_Iterator, _Container>& __lhs,$/;"	f
operator >	cpp_src/stl_iterator.h	/^    operator>(const __normal_iterator<_IteratorL, _Container>& __lhs,$/;"	f
operator >	cpp_src/stl_iterator.h	/^    operator>(const reverse_iterator<_Iterator>& __x,$/;"	f	namespace:std
operator >	cpp_src/stl_iterator.h	/^    operator>(const reverse_iterator<_IteratorL>& __x,$/;"	f	namespace:std
operator >	cpp_src/stl_list.h	/^    operator>(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>& __y)$/;"	f	namespace:std
operator >	cpp_src/stl_map.h	/^    operator>(const map<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	namespace:std
operator >	cpp_src/stl_multimap.h	/^    operator>(const multimap<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	namespace:std
operator >	cpp_src/stl_multiset.h	/^    operator>(const multiset<_Key,_Compare,_Alloc>& __x,$/;"	f	namespace:std
operator >	cpp_src/stl_pair.h	/^    operator>(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)$/;"	f	namespace:std
operator >	cpp_src/stl_queue.h	/^    operator>(const queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)$/;"	f	namespace:std
operator >	cpp_src/stl_relops.h	/^      operator>(const _Tp& __x, const _Tp& __y)$/;"	f	namespace:std::rel_ops
operator >	cpp_src/stl_set.h	/^    operator>(const set<_Key, _Compare, _Alloc>& __x,$/;"	f	namespace:std
operator >	cpp_src/stl_stack.h	/^    operator>(const stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)$/;"	f	namespace:std
operator >	cpp_src/stl_tree.h	/^    operator>(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,$/;"	f	namespace:std
operator >	cpp_src/stl_vector.h	/^    operator>(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)$/;"	f	namespace:std
operator >	opencv2/core/cvstd.hpp	/^static inline bool operator>  (const String& lhs, const String& rhs) { return lhs.compare(rhs) >  0; }$/;"	f	namespace:cv
operator >	opencv2/core/cvstd.hpp	/^static inline bool operator>  (const String& lhs, const char*   rhs) { return lhs.compare(rhs) >  0; }$/;"	f	namespace:cv
operator >	opencv2/core/cvstd.hpp	/^static inline bool operator>  (const char*   lhs, const String& rhs) { return rhs.compare(lhs) <  0; }$/;"	f	namespace:cv
operator >	opencv2/core/mat.inl.hpp	/^bool operator > (const MatConstIterator& a, const MatConstIterator& b)$/;"	f	namespace:cv
operator >	opencv2/stitching/detail/util.hpp	/^    bool operator >(const GraphEdge& other) const { return weight > other.weight; }$/;"	f	struct:cv::detail::GraphEdge
operator >=	cpp_src/basic_string.h	/^    operator>=(const _CharT* __lhs,$/;"	f	namespace:std
operator >=	cpp_src/basic_string.h	/^    operator>=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	namespace:std
operator >=	cpp_src/stl_bvector.h	/^    operator>=(const _Bit_iterator_base& __i) const$/;"	f	struct:std::_Bit_iterator_base
operator >=	cpp_src/stl_deque.h	/^    operator>=(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x,$/;"	f	namespace:std
operator >=	cpp_src/stl_deque.h	/^    operator>=(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x,$/;"	f	namespace:std
operator >=	cpp_src/stl_deque.h	/^    operator>=(const deque<_Tp, _Alloc>& __x,$/;"	f	namespace:std
operator >=	cpp_src/stl_iterator.h	/^    operator>=(const __normal_iterator<_Iterator, _Container>& __lhs,$/;"	f
operator >=	cpp_src/stl_iterator.h	/^    operator>=(const __normal_iterator<_IteratorL, _Container>& __lhs,$/;"	f
operator >=	cpp_src/stl_iterator.h	/^    operator>=(const reverse_iterator<_Iterator>& __x,$/;"	f	namespace:std
operator >=	cpp_src/stl_iterator.h	/^    operator>=(const reverse_iterator<_IteratorL>& __x,$/;"	f	namespace:std
operator >=	cpp_src/stl_list.h	/^    operator>=(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>& __y)$/;"	f	namespace:std
operator >=	cpp_src/stl_map.h	/^    operator>=(const map<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	namespace:std
operator >=	cpp_src/stl_multimap.h	/^    operator>=(const multimap<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	namespace:std
operator >=	cpp_src/stl_multiset.h	/^    operator>=(const multiset<_Key, _Compare, _Alloc>& __x,$/;"	f	namespace:std
operator >=	cpp_src/stl_pair.h	/^    operator>=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)$/;"	f	namespace:std
operator >=	cpp_src/stl_queue.h	/^    operator>=(const queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)$/;"	f	namespace:std
operator >=	cpp_src/stl_relops.h	/^      operator>=(const _Tp& __x, const _Tp& __y)$/;"	f	namespace:std::rel_ops
operator >=	cpp_src/stl_set.h	/^    operator>=(const set<_Key, _Compare, _Alloc>& __x,$/;"	f	namespace:std
operator >=	cpp_src/stl_stack.h	/^    operator>=(const stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)$/;"	f	namespace:std
operator >=	cpp_src/stl_tree.h	/^    operator>=(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,$/;"	f	namespace:std
operator >=	cpp_src/stl_vector.h	/^    operator>=(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)$/;"	f	namespace:std
operator >=	opencv2/core/cvstd.hpp	/^static inline bool operator>= (const String& lhs, const String& rhs) { return lhs.compare(rhs) >= 0; }$/;"	f	namespace:cv
operator >=	opencv2/core/cvstd.hpp	/^static inline bool operator>= (const String& lhs, const char*   rhs) { return lhs.compare(rhs) >= 0; }$/;"	f	namespace:cv
operator >=	opencv2/core/cvstd.hpp	/^static inline bool operator>= (const char*   lhs, const String& rhs) { return rhs.compare(lhs) <= 0; }$/;"	f	namespace:cv
operator >=	opencv2/core/mat.inl.hpp	/^bool operator >= (const MatConstIterator& a, const MatConstIterator& b)$/;"	f	namespace:cv
operator >>	opencv2/core/cvstd.inl.hpp	/^void operator >> (const FileNode& n, std::string& value)$/;"	f	namespace:cv
operator >>	opencv2/core/persistence.hpp	/^FileNodeIterator& operator >> (FileNodeIterator& it, _Tp& value)$/;"	f	namespace:cv
operator >>	opencv2/core/persistence.hpp	/^FileNodeIterator& operator >> (FileNodeIterator& it, std::vector<_Tp>& vec)$/;"	f	namespace:cv
operator >>	opencv2/core/persistence.hpp	/^void operator >> (const FileNode& n, _Tp& value)$/;"	f	namespace:cv
operator >>	opencv2/core/persistence.hpp	/^void operator >> (const FileNode& n, std::vector<DMatch>& vec)$/;"	f	namespace:cv
operator >>	opencv2/core/persistence.hpp	/^void operator >> (const FileNode& n, std::vector<KeyPoint>& vec)$/;"	f	namespace:cv
operator >>	opencv2/core/persistence.hpp	/^void operator >> (const FileNode& n, std::vector<_Tp>& vec)$/;"	f	namespace:cv
operator Affine3<Y>	opencv2/core/affine.hpp	/^cv::Affine3<T>::operator Affine3<Y>() const$/;"	f	class:cv::Affine3
operator Complex<T2>	opencv2/core/types.hpp	/^Complex<_Tp>::operator Complex<T2>() const$/;"	f	class:cv::Complex
operator Eigen::Transform<T, 3, Eigen::Affine,	opencv2/core/affine.hpp	/^cv::Affine3<T>::operator Eigen::Transform<T, 3, Eigen::Affine, (Eigen::RowMajor)>() const$/;"	f	class:cv::Affine3
operator Eigen::Transform<T, 3, Eigen::Affine>	opencv2/core/affine.hpp	/^cv::Affine3<T>::operator Eigen::Transform<T, 3, Eigen::Affine>() const$/;"	f	class:cv::Affine3
operator GlobPtr<T>	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^__host__ GpuMat_<T>::operator GlobPtr<T>() const$/;"	f	class:cv::cudev::GpuMat_
operator GlobPtrSz<T>	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^__host__ GpuMat_<T>::operator GlobPtrSz<T>() const$/;"	f	class:cv::cudev::GpuMat_
operator Mat	opencv2/core/mat.inl.hpp	/^MatExpr::operator Mat() const$/;"	f	class:cv::MatExpr
operator Mat_<T2>	opencv2/core/mat.inl.hpp	/^Mat_<_Tp>::operator Mat_<T2>() const$/;"	f	class:cv::Mat_
operator Mat_<_Tp>	opencv2/core/mat.inl.hpp	/^MatCommaInitializer_<_Tp>::operator Mat_<_Tp>() const$/;"	f	class:cv::MatCommaInitializer_
operator Mat_<_Tp>	opencv2/core/mat.inl.hpp	/^MatExpr::operator Mat_<_Tp>() const$/;"	f	class:cv::MatExpr
operator Matx<T2, m, n>	opencv2/core/matx.hpp	/^inline Matx<_Tp, m, n>::operator Matx<T2, m, n>() const$/;"	f	class:cv::Matx
operator Matx<_Tp, m, n>	opencv2/core/mat.inl.hpp	/^Mat::operator Matx<_Tp, m, n>() const$/;"	f	class:cv::Mat
operator Matx<typename DataType<_Tp>::channel_type, m, n>	opencv2/core/mat.inl.hpp	/^Mat_<_Tp>::operator Matx<typename DataType<_Tp>::channel_type, m, n>() const$/;"	f	class:cv::Mat_
operator Point3_<_Tp2>	opencv2/core/types.hpp	/^Point3_<_Tp>::operator Point3_<_Tp2>() const$/;"	f	class:cv::Point3_
operator Point_<_Tp2>	opencv2/core/types.hpp	/^Point_<_Tp>::operator Point_<_Tp2>() const$/;"	f	class:cv::Point_
operator PtrStep<T>	opencv2/core/cuda.inl.hpp	/^GpuMat::operator PtrStep<T>() const$/;"	f	class:cv::cuda::GpuMat
operator PtrStepSz<T>	opencv2/core/cuda.inl.hpp	/^GpuMat::operator PtrStepSz<T>() const$/;"	f	class:cv::cuda::GpuMat
operator Rect_<_Tp2>	opencv2/core/types.hpp	/^Rect_<_Tp>::operator Rect_<_Tp2>() const$/;"	f	class:cv::Rect_
operator Scalar_<T2>	opencv2/core/types.hpp	/^Scalar_<_Tp>::operator Scalar_<T2>() const$/;"	f	class:cv::Scalar_
operator Size_<_Tp2>	opencv2/core/types.hpp	/^Size_<_Tp>::operator Size_<_Tp2>() const$/;"	f	class:cv::Size_
operator String	opencv2/core/persistence.hpp	/^inline FileNode::operator String() const { String value; read(*this, value, value); return value; }$/;"	f	class:cv::FileNode
operator T*	opencv2/core/cuda/dynamic_smem.hpp	/^        __device__ __forceinline__ operator T*()$/;"	f	struct:cv::cuda::device::DynamicSharedMem
operator T*	opencv2/core/cuda_types.hpp	/^            __CV_CUDA_HOST_DEVICE__ operator       T*()       { return data; }$/;"	f	struct:cv::cuda::DevPtr
operator T*	opencv2/core/private.hpp	/^    inline operator T* () { return (T*)m_pBuffer;}$/;"	f	class:IppAutoBuffer
operator T*	opencv2/core/ptr.inl.hpp	/^Ptr<T>::operator T* () const$/;"	f	class:cv::Ptr
operator T*	opencv2/cudev/block/dynamic_smem.hpp	/^    __device__ __forceinline__ operator T*()$/;"	f	struct:cv::cudev::DynamicSharedMem
operator Vec<T2, cn>	opencv2/core/matx.hpp	/^Vec<_Tp, cn>::operator Vec<T2, cn>() const$/;"	f	class:cv::Vec
operator Vec<_Tp, 2>	opencv2/core/types.hpp	/^Point_<_Tp>::operator Vec<_Tp, 2>() const$/;"	f	class:cv::Point_
operator Vec<_Tp, 3>	opencv2/core/types.hpp	/^Point3_<_Tp>::operator Vec<_Tp, 3>() const$/;"	f	class:cv::Point3_
operator Vec<_Tp, n>	opencv2/core/mat.inl.hpp	/^Mat::operator Vec<_Tp, n>() const$/;"	f	class:cv::Mat
operator Vec<_Tp2, 3>	opencv2/core/types.hpp	/^Point3_<_Tp>::operator Vec<_Tp2, 3>() const$/;"	f	class:cv::Point3_
operator Vec<typename DataType<_Tp>::channel_type, n>	opencv2/core/mat.inl.hpp	/^Mat_<_Tp>::operator Vec<typename DataType<_Tp>::channel_type, n>() const$/;"	f	class:cv::Mat_
operator []	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      operator[](key_const_reference r_key)$/;"	f	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
operator []	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      operator[](key_const_reference r_key)$/;"	f	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
operator []	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      operator[](key_const_reference r_key)$/;"	f	class:__gnu_pbds::detail::PB_DS_LU_NAME
operator []	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      operator[](key_const_reference r_key)$/;"	f	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
operator []	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      operator[](key_const_reference r_key)$/;"	f	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
operator []	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	/^      operator[](key_const_reference r_key)$/;"	f	class:__gnu_pbds::detail::PB_DS_RB_TREE_NAME
operator []	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	/^      operator[](key_const_reference r_key)$/;"	f	class:__gnu_pbds::detail::PB_DS_S_TREE_NAME
operator []	5/parallel/base.h	/^      operator[](_DifferenceType) const$/;"	f	class:__gnu_parallel::_PseudoSequenceIterator
operator []	cpp_src/basic_string.h	/^      operator[] (size_type __pos) const$/;"	f	class:std::basic_string
operator []	cpp_src/basic_string.h	/^      operator[](size_type __pos)$/;"	f	class:std::basic_string
operator []	cpp_src/stl_bvector.h	/^    operator[](difference_type __i) const$/;"	f	struct:std::_Bit_const_iterator
operator []	cpp_src/stl_bvector.h	/^    operator[](difference_type __i) const$/;"	f	struct:std::_Bit_iterator
operator []	cpp_src/stl_bvector.h	/^    operator[](size_type __n) const$/;"	f	class:std::vector
operator []	cpp_src/stl_bvector.h	/^    operator[](size_type __n)$/;"	f	class:std::vector
operator []	cpp_src/stl_deque.h	/^      operator[](difference_type __n) const$/;"	f	struct:std::_Deque_iterator
operator []	cpp_src/stl_deque.h	/^      operator[](size_type __n) const$/;"	f	class:std::deque
operator []	cpp_src/stl_deque.h	/^      operator[](size_type __n)$/;"	f	class:std::deque
operator []	cpp_src/stl_iterator.h	/^      operator[](const difference_type& __n) const$/;"	f	class:__normal_iterator
operator []	cpp_src/stl_iterator.h	/^      operator[](difference_type __n) const$/;"	f	class:std::reverse_iterator
operator []	cpp_src/stl_map.h	/^      operator[](const key_type& __k)$/;"	f	class:std::map
operator []	cpp_src/stl_vector.h	/^      operator[](size_type __n) const$/;"	f	class:std::vector
operator []	cpp_src/stl_vector.h	/^      operator[](size_type __n)$/;"	f	class:std::vector
operator []	cpp_src/valarray_after.h	/^      operator[] (size_t __i) const$/;"	f	class:std::_GBase
operator []	cpp_src/valarray_after.h	/^      operator[] (size_t __i) const$/;"	f	class:std::_IBase
operator []	cpp_src/valarray_after.h	/^    _Expr<_Clos, _Tp>::operator[](const gslice& __gs) const$/;"	f	class:std::_Expr
operator []	cpp_src/valarray_after.h	/^    _Expr<_Clos, _Tp>::operator[](const valarray<bool>& __m) const$/;"	f	class:std::_Expr
operator []	cpp_src/valarray_after.h	/^    _Expr<_Clos, _Tp>::operator[](const valarray<size_t>& __i) const$/;"	f	class:std::_Expr
operator []	cpp_src/valarray_after.h	/^    _Expr<_Clos, _Tp>::operator[](size_t __i) const$/;"	f	class:std::_Expr
operator []	cpp_src/valarray_after.h	/^    _Expr<_Clos, _Tp>::operator[](slice __s) const$/;"	f	class:std::_Expr
operator []	cpp_src/valarray_before.h	/^      operator[] (size_t __i) const$/;"	f	class:std::_SBase
operator []	cpp_src/valarray_before.h	/^      value_type operator[](size_t __i) const$/;"	f	class:std::_BinBase
operator []	cpp_src/valarray_before.h	/^      value_type operator[](size_t __i) const$/;"	f	class:std::_BinBase1
operator []	cpp_src/valarray_before.h	/^      value_type operator[](size_t __i) const$/;"	f	class:std::_BinBase2
operator []	cpp_src/valarray_before.h	/^      value_type operator[](size_t __i) const$/;"	f	class:std::_FunBase
operator []	cpp_src/valarray_before.h	/^      value_type operator[](size_t __i) const$/;"	f	class:std::_UnBase
operator []	opencv2/core/core_c.h	/^template<typename _Tp> inline _Tp& Seq<_Tp>::operator [](int idx)$/;"	f	class:cv::Seq
operator []	opencv2/core/core_c.h	/^template<typename _Tp> inline const _Tp& Seq<_Tp>::operator [](int idx) const$/;"	f	class:cv::Seq
operator []	opencv2/core/cvstd.hpp	/^char String::operator[](int idx) const$/;"	f	class:cv::String
operator []	opencv2/core/cvstd.hpp	/^char String::operator[](size_t idx) const$/;"	f	class:cv::String
operator []	opencv2/core/mat.inl.hpp	/^_Tp& MatIterator_<_Tp>::operator [](ptrdiff_t i) const$/;"	f	class:cv::MatIterator_
operator []	opencv2/core/mat.inl.hpp	/^_Tp* Mat_<_Tp>::operator [](int y)$/;"	f	class:cv::Mat_
operator []	opencv2/core/mat.inl.hpp	/^const _Tp& MatConstIterator_<_Tp>::operator [](ptrdiff_t i) const$/;"	f	class:cv::MatConstIterator_
operator []	opencv2/core/mat.inl.hpp	/^const _Tp* Mat_<_Tp>::operator [](int y) const$/;"	f	class:cv::Mat_
operator []	opencv2/core/mat.inl.hpp	/^const int& MatSize::operator[](int i) const$/;"	f	class:cv::MatSize
operator []	opencv2/core/mat.inl.hpp	/^const size_t& MatStep::operator[](int i) const$/;"	f	class:cv::MatStep
operator []	opencv2/core/mat.inl.hpp	/^const uchar* MatConstIterator::operator [](ptrdiff_t i) const$/;"	f	class:cv::MatConstIterator
operator []	opencv2/core/mat.inl.hpp	/^int& MatSize::operator[](int i)$/;"	f	class:cv::MatSize
operator []	opencv2/core/mat.inl.hpp	/^size_t& MatStep::operator[](int i)$/;"	f	class:cv::MatStep
operator []	opencv2/core/matx.hpp	/^_Tp& Vec<_Tp, cn>::operator [](int i)$/;"	f	class:cv::Vec
operator []	opencv2/core/matx.hpp	/^const _Tp& Vec<_Tp, cn>::operator [](int i) const$/;"	f	class:cv::Vec
operator []	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^__host__ T* GpuMat_<T>::operator [](int y)$/;"	f	class:cv::cudev::GpuMat_
operator []	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^__host__ const T* GpuMat_<T>::operator [](int y) const$/;"	f	class:cv::cudev::GpuMat_
operator []	opencv2/flann/dist.h	/^    T operator[](int)$/;"	f	struct:cvflann::ZeroIterator
operator []	opencv2/flann/matrix.h	/^    T* operator[](size_t index) const$/;"	f	class:cvflann::Matrix
operator ^	cpp_src/ios_base.h	/^  operator^(_Ios_Fmtflags __a, _Ios_Fmtflags __b)$/;"	f	namespace:std
operator ^	cpp_src/ios_base.h	/^  operator^(_Ios_Iostate __a, _Ios_Iostate __b)$/;"	f	namespace:std
operator ^	cpp_src/ios_base.h	/^  operator^(_Ios_Openmode __a, _Ios_Openmode __b)$/;"	f	namespace:std
operator ^=	cpp_src/ios_base.h	/^  operator^=(_Ios_Fmtflags& __a, _Ios_Fmtflags __b)$/;"	f	namespace:std
operator ^=	cpp_src/ios_base.h	/^  operator^=(_Ios_Iostate& __a, _Ios_Iostate __b)$/;"	f	namespace:std
operator ^=	cpp_src/ios_base.h	/^  operator^=(_Ios_Openmode& __a, _Ios_Openmode __b)$/;"	f	namespace:std
operator _Iterator	5/debug/safe_local_iterator.h	/^      operator _Iterator() const { return *this; }$/;"	f	class:__gnu_debug::_Safe_local_iterator
operator _Iterator2	5/parallel/iterator.h	/^      operator _Iterator2() const$/;"	f	class:__gnu_parallel::_IteratorPair
operator _Iterator3	5/parallel/iterator.h	/^      operator _Iterator3() const$/;"	f	class:__gnu_parallel::_IteratorTriple
operator _RAIter	5/parallel/multiway_merge.h	/^      operator _RAIter()$/;"	f	class:__gnu_parallel::_GuardedIterator
operator _RAIter	5/parallel/multiway_merge.h	/^      operator _RAIter()$/;"	f	class:__gnu_parallel::_UnguardedIterator
operator _Tp*	opencv2/core/utility.hpp	/^AutoBuffer<_Tp, fixed_size>::operator _Tp* ()$/;"	f	class:cv::AutoBuffer
operator bool	5/bits/exception_ptr.h	/^      explicit operator bool() const$/;"	f	class:std::__exception_ptr::exception_ptr
operator bool	cpp_src/stl_bvector.h	/^    operator bool() const$/;"	f	struct:std::_Bit_reference
operator const T*	opencv2/core/cuda/dynamic_smem.hpp	/^        __device__ __forceinline__ operator const T*() const$/;"	f	struct:cv::cuda::device::DynamicSharedMem
operator const T*	opencv2/core/cuda_types.hpp	/^            __CV_CUDA_HOST_DEVICE__ operator const T*() const { return data; }$/;"	f	struct:cv::cuda::DevPtr
operator const T*	opencv2/core/private.hpp	/^    inline operator const T* () const { return (const T*)m_pBuffer;}$/;"	f	class:IppAutoBuffer
operator const T*	opencv2/cudev/block/dynamic_smem.hpp	/^    __device__ __forceinline__ operator const T*() const$/;"	f	struct:cv::cudev::DynamicSharedMem
operator const _Tp*	opencv2/core/utility.hpp	/^AutoBuffer<_Tp, fixed_size>::operator const _Tp* () const$/;"	f	class:cv::AutoBuffer
operator const double*	opencv2/core/cuda/dynamic_smem.hpp	/^        __device__ __forceinline__ operator const double*() const$/;"	f	struct:cv::cuda::device::DynamicSharedMem
operator const double*	opencv2/cudev/block/dynamic_smem.hpp	/^    __device__ __forceinline__ operator const double*() const$/;"	f	struct:cv::cudev::DynamicSharedMem
operator const int*	opencv2/core/mat.inl.hpp	/^MatSize::operator const int*() const$/;"	f	class:cv::MatSize
operator const point_iterator_	5/ext/pb_ds/detail/unordered_iterator/iterator.hpp	/^  operator const point_iterator_() const$/;"	f	class:iterator_
operator cv::Moments	opencv2/imgproc/types_c.h	/^    operator cv::Moments() const$/;"	f	struct:CvMoments
operator cv::Point3_<_Tp>	opencv2/core/types_c.h	/^    operator cv::Point3_<_Tp>() const { return cv::Point3_<_Tp>(cv::saturate_cast<_Tp>(x), cv::saturate_cast<_Tp>(y), cv::saturate_cast<_Tp>(z)); }$/;"	f	struct:CvPoint3D32f
operator cv::Point_<_Tp>	opencv2/core/types_c.h	/^    operator cv::Point_<_Tp>() const { return cv::Point_<_Tp>(cv::saturate_cast<_Tp>(x), cv::saturate_cast<_Tp>(y)); }$/;"	f	struct:CvPoint
operator cv::Point_<_Tp>	opencv2/core/types_c.h	/^    operator cv::Point_<_Tp>() const { return cv::Point_<_Tp>(cv::saturate_cast<_Tp>(x), cv::saturate_cast<_Tp>(y)); }$/;"	f	struct:CvPoint2D32f
operator cv::Range	opencv2/core/types_c.h	/^    operator cv::Range() const { return (start_index == 0 && end_index == CV_WHOLE_SEQ_END_INDEX ) ? cv::Range::all() : cv::Range(start_index, end_index); }$/;"	f	struct:CvSlice
operator cv::Rect_<_Tp>	opencv2/core/types_c.h	/^    operator cv::Rect_<_Tp>() const { return cv::Rect_<_Tp>((_Tp)x, (_Tp)y, (_Tp)width, (_Tp)height); }$/;"	f	struct:CvRect
operator cv::RotatedRect	opencv2/core/types_c.h	/^    operator cv::RotatedRect() const { return cv::RotatedRect(center, size, angle); }$/;"	f	struct:CvBox2D
operator cv::Scalar_<_Tp>	opencv2/core/types_c.h	/^    operator cv::Scalar_<_Tp>() const { return cv::Scalar_<_Tp>(cv::saturate_cast<_Tp>(val[0]), cv::saturate_cast<_Tp>(val[1]), cv::saturate_cast<_Tp>(val[2]), cv::saturate_cast<_Tp>(val[3])); }$/;"	f	struct:CvScalar
operator cv::Size_<_Tp>	opencv2/core/types_c.h	/^    operator cv::Size_<_Tp>() const { return cv::Size_<_Tp>(cv::saturate_cast<_Tp>(width), cv::saturate_cast<_Tp>(height)); }$/;"	f	struct:CvSize
operator cv::Size_<_Tp>	opencv2/core/types_c.h	/^    operator cv::Size_<_Tp>() const { return cv::Size_<_Tp>(cv::saturate_cast<_Tp>(width), cv::saturate_cast<_Tp>(height)); }$/;"	f	struct:CvSize2D32f
operator cv::TermCriteria	opencv2/core/types_c.h	/^    operator cv::TermCriteria() const { return cv::TermCriteria(type, max_iter, epsilon); }$/;"	f	struct:CvTermCriteria
operator double	opencv2/core/operations.hpp	/^inline RNG::operator double()   { unsigned t = next(); return (((uint64)t << 32) | next()) * 5.4210108624275221700372640043497e-20; }$/;"	f	class:cv::RNG
operator double	opencv2/core/persistence.hpp	/^inline FileNode::operator double() const { double value; read(*this, value, 0.);    return value; }$/;"	f	class:cv::FileNode
operator double*	opencv2/core/cuda/dynamic_smem.hpp	/^        __device__ __forceinline__ operator double*()$/;"	f	struct:cv::cuda::device::DynamicSharedMem
operator double*	opencv2/cudev/block/dynamic_smem.hpp	/^    __device__ __forceinline__ operator double*()$/;"	f	struct:cv::cudev::DynamicSharedMem
operator float	opencv2/core/cuda/vec_distance.hpp	/^        __device__ __forceinline__ operator float() const$/;"	f	struct:cv::cuda::device::L1Dist
operator float	opencv2/core/cuda/vec_distance.hpp	/^        __device__ __forceinline__ operator float() const$/;"	f	struct:cv::cuda::device::L2Dist
operator float	opencv2/core/operations.hpp	/^inline RNG::operator float()    { return next()*2.3283064365386962890625e-10f; }$/;"	f	class:cv::RNG
operator float	opencv2/core/persistence.hpp	/^inline FileNode::operator float() const  { float value;  read(*this, value, 0.f);   return value; }$/;"	f	class:cv::FileNode
operator int	opencv2/core/cuda/vec_distance.hpp	/^        __device__ __forceinline__ operator int() const$/;"	f	struct:cv::cuda::device::HammingDist
operator int	opencv2/core/cuda/vec_distance.hpp	/^        __device__ __forceinline__ operator int() const$/;"	f	struct:cv::cuda::device::L1Dist
operator int	opencv2/core/operations.hpp	/^inline RNG::operator int()      { return (int)next(); }$/;"	f	class:cv::RNG
operator int	opencv2/core/persistence.hpp	/^inline FileNode::operator int() const    { int value;    read(*this, value, 0);     return value; }$/;"	f	class:cv::FileNode
operator point_iterator_	5/ext/pb_ds/detail/unordered_iterator/iterator.hpp	/^  operator point_iterator_()$/;"	f	class:iterator_
operator result_type	opencv2/cudev/block/vec_distance.hpp	/^    __device__ __forceinline__ operator result_type() const$/;"	f	struct:cv::cudev::NormHamming
operator result_type	opencv2/cudev/block/vec_distance.hpp	/^    __device__ __forceinline__ operator result_type() const$/;"	f	struct:cv::cudev::NormL1
operator result_type	opencv2/cudev/block/vec_distance.hpp	/^    __device__ __forceinline__ operator result_type() const$/;"	f	struct:cv::cudev::NormL2
operator schar	opencv2/core/operations.hpp	/^inline RNG::operator schar()    { return (schar)next(); }$/;"	f	class:cv::RNG
operator short	opencv2/core/operations.hpp	/^inline RNG::operator short()    { return (short)next(); }$/;"	f	class:cv::RNG
operator size_t	opencv2/core/mat.inl.hpp	/^inline MatStep::operator size_t() const$/;"	f	class:cv::MatStep
operator std::string	opencv2/core/cvstd.inl.hpp	/^FileNode::operator std::string() const$/;"	f	class:cv::FileNode
operator std::string	opencv2/core/cvstd.inl.hpp	/^String::operator std::string() const$/;"	f	class:cv::String
operator std::vector<_Tp>	opencv2/core/core_c.h	/^template<typename _Tp> inline Seq<_Tp>::operator std::vector<_Tp>() const$/;"	f	class:cv::Seq
operator std::vector<_Tp>	opencv2/core/mat.inl.hpp	/^Mat::operator std::vector<_Tp>() const$/;"	f	class:cv::Mat
operator std::vector<_Tp>	opencv2/core/mat.inl.hpp	/^Mat_<_Tp>::operator std::vector<_Tp>() const$/;"	f	class:cv::Mat_
operator streamoff	cpp_src/postypes.h	/^      operator streamoff() const { return _M_off; }$/;"	f	class:std::fpos
operator uchar	opencv2/core/operations.hpp	/^inline RNG::operator uchar()    { return (uchar)next(); }$/;"	f	class:cv::RNG
operator unsigned	opencv2/core/operations.hpp	/^inline RNG::operator unsigned() { return next(); }$/;"	f	class:cv::RNG
operator ushort	opencv2/core/operations.hpp	/^inline RNG::operator ushort()   { return (ushort)next(); }$/;"	f	class:cv::RNG
operator void*	cpp_src/basic_ios.h	/^      operator void*() const$/;"	f	class:std::basic_ios
operator |	cpp_src/ios_base.h	/^  operator|(_Ios_Fmtflags __a, _Ios_Fmtflags __b)$/;"	f	namespace:std
operator |	cpp_src/ios_base.h	/^  operator|(_Ios_Iostate __a, _Ios_Iostate __b)$/;"	f	namespace:std
operator |	cpp_src/ios_base.h	/^  operator|(_Ios_Openmode __a, _Ios_Openmode __b)$/;"	f	namespace:std
operator |	opencv2/core/types.hpp	/^Rect_<_Tp> operator | (const Rect_<_Tp>& a, const Rect_<_Tp>& b)$/;"	f	namespace:cv
operator |=	cpp_src/ios_base.h	/^  operator|=(_Ios_Fmtflags& __a, _Ios_Fmtflags __b)$/;"	f	namespace:std
operator |=	cpp_src/ios_base.h	/^  operator|=(_Ios_Iostate& __a, _Ios_Iostate __b)$/;"	f	namespace:std
operator |=	cpp_src/ios_base.h	/^  operator|=(_Ios_Openmode& __a, _Ios_Openmode __b)$/;"	f	namespace:std
operator |=	opencv2/core/types.hpp	/^Rect_<_Tp>& operator |= ( Rect_<_Tp>& a, const Rect_<_Tp>& b )$/;"	f	namespace:cv
operator ~	cpp_src/ios_base.h	/^  operator~(_Ios_Fmtflags __a)$/;"	f	namespace:std
operator ~	cpp_src/ios_base.h	/^  operator~(_Ios_Iostate __a)$/;"	f	namespace:std
operator ~	cpp_src/ios_base.h	/^  operator~(_Ios_Openmode __a)$/;"	f	namespace:std
operator ~	opencv2/core/hal/intrin_cpp.hpp	/^template<typename _Tp, int n> inline v_reg<_Tp, n> operator ~ (const v_reg<_Tp, n>& a)$/;"	f	namespace:cv
operator ~	opencv2/core/hal/intrin_neon.hpp	/^inline v_float32x4 operator ~ (const v_float32x4& a)$/;"	f	namespace:cv
operator ~	opencv2/core/hal/intrin_neon.hpp	/^inline v_float64x2 operator ~ (const v_float64x2& a)$/;"	f	namespace:cv
optFlowEstimator	opencv2/videostab/inpainting.hpp	/^    Ptr<IDenseOptFlowEstimator> optFlowEstimator() const { return optFlowEstimator_; }$/;"	f	class:cv::videostab::MotionInpainter
optFlowEstimator_	opencv2/videostab/global_motion.hpp	/^    Ptr<ISparseOptFlowEstimator> optFlowEstimator_;$/;"	m	class:cv::videostab::KeypointBasedMotionEstimator
optFlowEstimator_	opencv2/videostab/global_motion.hpp	/^    SparsePyrLkOptFlowEstimatorGpu optFlowEstimator_;$/;"	m	class:cv::videostab::KeypointBasedMotionEstimatorGpu
optFlowEstimator_	opencv2/videostab/inpainting.hpp	/^    Ptr<IDenseOptFlowEstimator> optFlowEstimator_;$/;"	m	class:cv::videostab::MotionInpainter
optFlowEstimator_	opencv2/videostab/optical_flow.hpp	/^    Ptr<cuda::DensePyrLKOpticalFlow> optFlowEstimator_;$/;"	m	class:cv::videostab::DensePyrLkOptFlowEstimatorGpu
optFlowEstimator_	opencv2/videostab/optical_flow.hpp	/^    Ptr<cuda::SparsePyrLKOpticalFlow> optFlowEstimator_;$/;"	m	class:cv::videostab::SparsePyrLkOptFlowEstimatorGpu
opticalFlowEstimator	opencv2/videostab/global_motion.hpp	/^    Ptr<ISparseOptFlowEstimator> opticalFlowEstimator() const { return optFlowEstimator_; }$/;"	f	class:cv::videostab::KeypointBasedMotionEstimator
optimize	opencv2/flann/lsh_table.h	/^    void optimize()$/;"	f	class:cvflann::lsh::LshTable
optimizeKDTree	opencv2/flann/autotuned_index.h	/^    void optimizeKDTree(std::vector<CostData>& costs)$/;"	f	class:cvflann::AutotunedIndex
optimizeKMeans	opencv2/flann/autotuned_index.h	/^    void optimizeKMeans(std::vector<CostData>& costs)$/;"	f	class:cvflann::AutotunedIndex
optimizeSimplexDownhill	opencv2/flann/simplex_downhill.h	/^float optimizeSimplexDownhill(T* points, int n, F func, float* vals = NULL )$/;"	f	namespace:cvflann
orb	opencv2/stitching/detail/matchers.hpp	/^    Ptr<ORB> orb;$/;"	m	class:cv::detail::OrbFeaturesFinder
order	opencv2/flann/dist.h	/^    int order;$/;"	m	struct:cvflann::MinkowskiDistance
order_of_key	5/ext/pb_ds/detail/tree_policy/order_statistics_imp.hpp	/^order_of_key(key_const_reference r_key) const$/;"	f	class:PB_DS_CLASS_C_DEC
order_of_key	5/ext/pb_ds/detail/trie_policy/order_statistics_imp.hpp	/^order_of_key(key_const_reference r_key) const$/;"	f	class:PB_DS_CLASS_C_DEC
order_of_prefix	5/ext/pb_ds/detail/trie_policy/order_statistics_imp.hpp	/^order_of_prefix(typename access_traits::const_iterator b,$/;"	f	class:PB_DS_CLASS_C_DEC
order_preserving	5/ext/pb_ds/tag_and_trait.hpp	/^	order_preserving = base_type::order_preserving,$/;"	e	enum:__gnu_pbds::container_traits::__anon25
order_preserving	5/ext/pb_ds/tag_and_trait.hpp	/^	order_preserving = false,$/;"	e	enum:__gnu_pbds::container_traits_base::__anon13
order_preserving	5/ext/pb_ds/tag_and_trait.hpp	/^	order_preserving = false,$/;"	e	enum:__gnu_pbds::container_traits_base::__anon14
order_preserving	5/ext/pb_ds/tag_and_trait.hpp	/^	order_preserving = false,$/;"	e	enum:__gnu_pbds::container_traits_base::__anon19
order_preserving	5/ext/pb_ds/tag_and_trait.hpp	/^	order_preserving = false,$/;"	e	enum:__gnu_pbds::container_traits_base::__anon20
order_preserving	5/ext/pb_ds/tag_and_trait.hpp	/^	order_preserving = false,$/;"	e	enum:__gnu_pbds::container_traits_base::__anon21
order_preserving	5/ext/pb_ds/tag_and_trait.hpp	/^	order_preserving = false,$/;"	e	enum:__gnu_pbds::container_traits_base::__anon22
order_preserving	5/ext/pb_ds/tag_and_trait.hpp	/^	order_preserving = false,$/;"	e	enum:__gnu_pbds::container_traits_base::__anon23
order_preserving	5/ext/pb_ds/tag_and_trait.hpp	/^	order_preserving = false,$/;"	e	enum:__gnu_pbds::container_traits_base::__anon24
order_preserving	5/ext/pb_ds/tag_and_trait.hpp	/^	order_preserving = true,$/;"	e	enum:__gnu_pbds::container_traits_base::__anon15
order_preserving	5/ext/pb_ds/tag_and_trait.hpp	/^	order_preserving = true,$/;"	e	enum:__gnu_pbds::container_traits_base::__anon16
order_preserving	5/ext/pb_ds/tag_and_trait.hpp	/^	order_preserving = true,$/;"	e	enum:__gnu_pbds::container_traits_base::__anon17
order_preserving	5/ext/pb_ds/tag_and_trait.hpp	/^	order_preserving = true,$/;"	e	enum:__gnu_pbds::container_traits_base::__anon18
orig_window_size	opencv2/objdetect/objdetect_c.h	/^    CvSize orig_window_size;$/;"	m	struct:CvHaarClassifierCascade
origdata	opencv2/core/mat.hpp	/^    uchar* origdata;$/;"	m	struct:cv::UMatData
origin	opencv2/core/types_c.h	/^    CvPoint  origin;$/;"	m	struct:CvChain
origin	opencv2/core/types_c.h	/^    int  origin;            \/**< 0 - top-left origin,$/;"	m	struct:_IplImage
originalUMatData	opencv2/core/mat.hpp	/^    UMatData* originalUMatData;$/;"	m	struct:cv::UMatData
ostream_iterator	cpp_src/stream_iterator.h	/^      ostream_iterator(const ostream_iterator& __obj)$/;"	f	class:std::ostream_iterator
ostream_iterator	cpp_src/stream_iterator.h	/^      ostream_iterator(ostream_type& __s) : _M_stream(&__s), _M_string(0) {}$/;"	f	class:std::ostream_iterator
ostream_iterator	cpp_src/stream_iterator.h	/^      ostream_iterator(ostream_type& __s, const _CharT* __c)$/;"	f	class:std::ostream_iterator
ostream_iterator	cpp_src/stream_iterator.h	/^    class ostream_iterator$/;"	c	namespace:std
ostream_type	cpp_src/stream_iterator.h	/^      typedef basic_ostream<_CharT, _Traits> ostream_type;$/;"	t	class:std::ostream_iterator
ostream_type	cpp_src/streambuf_iterator.h	/^      typedef basic_ostream<_CharT, _Traits>   ostream_type;$/;"	t	class:std::ostreambuf_iterator
ostreambuf_iterator	cpp_src/streambuf_iterator.h	/^      ostreambuf_iterator(ostream_type& __s) throw ()$/;"	f	class:std::ostreambuf_iterator
ostreambuf_iterator	cpp_src/streambuf_iterator.h	/^      ostreambuf_iterator(streambuf_type* __s) throw ()$/;"	f	class:std::ostreambuf_iterator
ostreambuf_iterator	cpp_src/streambuf_iterator.h	/^    class ostreambuf_iterator$/;"	c	namespace:std
other	cpp_src/allocator.h	/^        { typedef allocator<_Tp1> other; };$/;"	t	struct:std::allocator::rebind
other	opencv2/core/cvstd.hpp	/^    template<typename U> class rebind { typedef Allocator<U> other; };$/;"	t	class:cv::Allocator::rebind
other	opencv2/cudev/grid/reduce_to_vec.hpp	/^        typedef Avg<U> other;$/;"	t	struct:cv::cudev::Avg::rebind
other	opencv2/cudev/grid/reduce_to_vec.hpp	/^        typedef Max<U> other;$/;"	t	struct:cv::cudev::Max::rebind
other	opencv2/cudev/grid/reduce_to_vec.hpp	/^        typedef Min<U> other;$/;"	t	struct:cv::cudev::Min::rebind
other	opencv2/cudev/grid/reduce_to_vec.hpp	/^        typedef Sum<U> other;$/;"	t	struct:cv::cudev::Sum::rebind
out	cpp_src/codecvt.h	/^      out(state_type& __state, const intern_type* __from,$/;"	f	class:std::__codecvt_abstract_base
out	cpp_src/ios_base.h	/^    static const openmode out =		_S_out;$/;"	m	class:std::ios_base
outlierRejector	opencv2/videostab/global_motion.hpp	/^    Ptr<IOutlierRejector> outlierRejector() const { return outlierRejector_; }$/;"	f	class:cv::videostab::KeypointBasedMotionEstimator
outlierRejector	opencv2/videostab/global_motion.hpp	/^    Ptr<IOutlierRejector> outlierRejector() const { return outlierRejector_; }$/;"	f	class:cv::videostab::KeypointBasedMotionEstimatorGpu
outlierRejector_	opencv2/videostab/global_motion.hpp	/^    Ptr<IOutlierRejector> outlierRejector_;$/;"	m	class:cv::videostab::KeypointBasedMotionEstimator
outlierRejector_	opencv2/videostab/global_motion.hpp	/^    Ptr<IOutlierRejector> outlierRejector_;$/;"	m	class:cv::videostab::KeypointBasedMotionEstimatorGpu
output_iterator_tag	cpp_src/stl_iterator_base_types.h	/^  struct output_iterator_tag {};$/;"	s	namespace:std
ov_tree_node_const_it_	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	/^      ov_tree_node_const_it_(const_pointer p_nd = 0,  const_pointer p_begin_nd = 0,  const_pointer p_end_nd = 0,  const_metadata_pointer p_metadata = 0) : m_p_value(const_cast<pointer>(p_nd)), m_p_begin_value(const_cast<pointer>(p_begin_nd)), m_p_end_value(const_cast<pointer>(p_end_nd)), m_p_metadata(p_metadata)$/;"	f	class:__gnu_pbds::detail::ov_tree_node_const_it_
ov_tree_node_const_it_	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	/^    class ov_tree_node_const_it_$/;"	c	namespace:__gnu_pbds::detail
ov_tree_node_it_	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	/^      ov_tree_node_it_(const_pointer p_nd = 0,  const_pointer p_begin_nd = 0,  const_pointer p_end_nd = 0,  const_metadata_pointer p_metadata = 0) : base_type(p_nd,  p_begin_nd,  p_end_nd,  p_metadata)$/;"	f	class:__gnu_pbds::detail::ov_tree_node_it_
ov_tree_node_it_	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	/^    class ov_tree_node_it_ : public PB_DS_OV_TREE_CONST_NODE_ITERATOR_C_DEC$/;"	c	namespace:__gnu_pbds::detail
ov_tree_tag	5/ext/pb_ds/tag_and_trait.hpp	/^  struct ov_tree_tag : public tree_tag { };$/;"	s	namespace:__gnu_pbds
owned	opencv2/core/ptr.inl.hpp	/^    Y* owned;$/;"	m	struct:cv::detail::PtrOwnerImpl
owner	opencv2/core/cvstd.hpp	/^    detail::PtrOwner* owner;$/;"	m	struct:cv::Ptr
p	opencv2/core/mat.hpp	/^    int* p;$/;"	m	struct:cv::MatSize
p	opencv2/core/mat.hpp	/^    size_t* p;$/;"	m	struct:cv::MatStep
p	opencv2/core/ocl.hpp	/^    Impl* p;$/;"	m	class:cv::ocl::Context
p	opencv2/core/ocl.hpp	/^    Impl* p;$/;"	m	class:cv::ocl::Device
p	opencv2/core/ocl.hpp	/^    Impl* p;$/;"	m	class:cv::ocl::Image2D
p	opencv2/core/ocl.hpp	/^    Impl* p;$/;"	m	class:cv::ocl::Kernel
p	opencv2/core/ocl.hpp	/^    Impl* p;$/;"	m	class:cv::ocl::Platform
p	opencv2/core/ocl.hpp	/^    Impl* p;$/;"	m	class:cv::ocl::PlatformInfo
p	opencv2/core/ocl.hpp	/^    Impl* p;$/;"	m	class:cv::ocl::Program
p	opencv2/core/ocl.hpp	/^    Impl* p;$/;"	m	class:cv::ocl::ProgramSource
p	opencv2/core/ocl.hpp	/^    Impl* p;$/;"	m	class:cv::ocl::Queue
pBU	opencv2/cudalegacy/NPP_staging.hpp	/^    Ncv32f *pBU;          \/\/\/< backward horizontal displacement$/;"	m	struct:NppStInterpolationState
pBV	opencv2/cudalegacy/NPP_staging.hpp	/^    Ncv32f *pBV;          \/\/\/< backward vertical displacement$/;"	m	struct:NppStInterpolationState
pCurrentNode	opencv2/core/private.hpp	/^    InstrNode* pCurrentNode;$/;"	m	struct:cv::instr::InstrTLSStruct
pFU	opencv2/cudalegacy/NPP_staging.hpp	/^    Ncv32f *pFU;          \/\/\/< forward horizontal displacement$/;"	m	struct:NppStInterpolationState
pFV	opencv2/cudalegacy/NPP_staging.hpp	/^    Ncv32f *pFV;          \/\/\/< forward vertical displacement$/;"	m	struct:NppStInterpolationState
pNewFrame	opencv2/cudalegacy/NPP_staging.hpp	/^    Ncv32f *pNewFrame;    \/\/\/< new frame$/;"	m	struct:NppStInterpolationState
pSrcFrame0	opencv2/cudalegacy/NPP_staging.hpp	/^    Ncv32f *pSrcFrame0;   \/\/\/< frame 0$/;"	m	struct:NppStInterpolationState
pSrcFrame1	opencv2/cudalegacy/NPP_staging.hpp	/^    Ncv32f *pSrcFrame1;   \/\/\/< frame 1$/;"	m	struct:NppStInterpolationState
pair	cpp_src/stl_pair.h	/^        pair(const pair<_U1, _U2>& __p)$/;"	f	struct:std::pair
pair	cpp_src/stl_pair.h	/^      pair()$/;"	f	struct:std::pair
pair	cpp_src/stl_pair.h	/^      pair(const _T1& __a, const _T2& __b)$/;"	f	struct:std::pair
pair	cpp_src/stl_pair.h	/^    struct pair$/;"	s	namespace:std
pairing_heap	5/ext/pb_ds/detail/pairing_heap_/constructors_destructor_fn_imps.hpp	/^pairing_heap()$/;"	f	class:PB_DS_CLASS_C_DEC
pairing_heap	5/ext/pb_ds/detail/pairing_heap_/constructors_destructor_fn_imps.hpp	/^pairing_heap(const Cmp_Fn& r_cmp_fn)$/;"	f	class:PB_DS_CLASS_C_DEC
pairing_heap	5/ext/pb_ds/detail/pairing_heap_/constructors_destructor_fn_imps.hpp	/^pairing_heap(const PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
pairing_heap	5/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp	/^    class pairing_heap : public PB_DS_P_HEAP_BASE$/;"	c	namespace:__gnu_pbds::detail
pairing_heap_tag	5/ext/pb_ds/tag_and_trait.hpp	/^  struct pairing_heap_tag : public priority_queue_tag { };$/;"	s	namespace:__gnu_pbds
pairwise_matches_	opencv2/stitching.hpp	/^    std::vector<detail::MatchesInfo> pairwise_matches_;$/;"	m	class:cv::Stitcher
pairwise_matches_	opencv2/stitching/detail/motion_estimators.hpp	/^    const MatchesInfo *pairwise_matches_;$/;"	m	class:cv::detail::BundleAdjusterBase
panoConfidenceThresh	opencv2/stitching.hpp	/^    CV_WRAP double panoConfidenceThresh() const { return conf_thresh_; }$/;"	f	class:cv::Stitcher
parallel_balanced	5/parallel/types.h	/^      parallel_balanced,$/;"	e	enum:__gnu_parallel::_Parallelism
parallel_for	opencv2/core/private.hpp	/^    void parallel_for( const BlockedRange& range, const Body& body )$/;"	f	namespace:cv
parallel_multiway_merge	5/parallel/multiway_merge.h	/^    parallel_multiway_merge(_RAIterIterator __seqs_begin,$/;"	f	namespace:__gnu_parallel
parallel_omp_loop	5/parallel/types.h	/^      parallel_omp_loop,$/;"	e	enum:__gnu_parallel::_Parallelism
parallel_omp_loop_static	5/parallel/types.h	/^      parallel_omp_loop_static,$/;"	e	enum:__gnu_parallel::_Parallelism
parallel_reduce	opencv2/core/private.hpp	/^    void parallel_reduce( const BlockedRange& range, Body& body )$/;"	f	namespace:cv
parallel_sort_mwms	5/parallel/multiway_mergesort.h	/^    parallel_sort_mwms(_RAIter __begin, _RAIter __end,$/;"	f	namespace:__gnu_parallel
parallel_sort_mwms_pu	5/parallel/multiway_mergesort.h	/^    parallel_sort_mwms_pu(_PMWMSSortingData<_RAIter>* __sd,$/;"	f	namespace:__gnu_parallel
parallel_tag	5/parallel/tags.h	/^      parallel_tag()$/;"	f	struct:__gnu_parallel::parallel_tag
parallel_tag	5/parallel/tags.h	/^      parallel_tag(_ThreadIndex __num_threads)$/;"	f	struct:__gnu_parallel::parallel_tag
parallel_tag	5/parallel/tags.h	/^  struct parallel_tag$/;"	s	namespace:__gnu_parallel
parallel_taskqueue	5/parallel/types.h	/^      parallel_taskqueue$/;"	e	enum:__gnu_parallel::_Parallelism
parallel_unbalanced	5/parallel/types.h	/^      parallel_unbalanced,$/;"	e	enum:__gnu_parallel::_Parallelism
param	opencv2/calib3d/calib3d_c.h	/^    cv::Ptr<CvMat> param;$/;"	m	class:CvLevMarq
parameter_type	opencv2/cudev/util/type_traits.hpp	/^        T, typename type_traits_detail::AddParameterType<T>::type>::type parameter_type;$/;"	t	struct:cv::cudev::TypeTraits
parameters	opencv2/objdetect/detection_based_tracker.hpp	/^        Parameters parameters;$/;"	m	class:cv::DetectionBasedTracker
params	opencv2/flann/autotuned_index.h	/^        IndexParams params;$/;"	m	struct:cvflann::AutotunedIndex::CostData
params	opencv2/flann/hierarchical_clustering_index.h	/^    IndexParams params;$/;"	m	class:cvflann::HierarchicalClusteringIndex
params	opencv2/flann/miniflann.hpp	/^    void* params;$/;"	m	struct:cv::flann::IndexParams
parent	5/ext/pb_ds/detail/binary_heap_/find_fn_imps.hpp	/^parent(size_type i)$/;"	f	class:PB_DS_CLASS_C_DEC
parent	5/ext/pb_ds/detail/left_child_next_sibling_heap_/insert_fn_imps.hpp	/^parent(node_pointer p_nd)$/;"	f	class:PB_DS_CLASS_C_DEC
parent	opencv2/core/core_c.h	/^CVAPI(CvMemStorage*)  cvCreateChildMemStorage( CvMemStorage* parent );$/;"	v
parent	opencv2/core/types_c.h	/^    struct  CvMemStorage* parent; \/**< We get new blocks from parent as needed. *\/$/;"	m	struct:CvMemStorage	typeref:struct:CvMemStorage::CvMemStorage
parent	opencv2/ml.hpp	/^        int parent; \/\/!< Index of the parent node$/;"	m	class:cv::ml::DTrees::Node
parent	opencv2/objdetect/objdetect_c.h	/^    int parent;$/;"	m	struct:CvHaarStageClassifier
parent	opencv2/stitching/detail/util.hpp	/^    std::vector<int> parent;$/;"	m	class:cv::detail::DisjointSets
parentView	opencv2/videoio/cap_ios.h	/^@property (nonatomic, strong) UIView* parentView;$/;"	v
part	cpp_src/locale_facets.h	/^    enum part { none, space, symbol, sign, value };$/;"	g	class:std::money_base
partial	cpp_src/codecvt.h	/^      partial,$/;"	e	enum:std::codecvt_base::result
partial_sort	cpp_src/stl_algo.h	/^    partial_sort(_RandomAccessIterator __first,$/;"	f	namespace:std
partial_sort_copy	cpp_src/stl_algo.h	/^    partial_sort_copy(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std
partial_sort_minimal_n	5/parallel/settings.h	/^    _SequenceIndex              partial_sort_minimal_n;$/;"	m	struct:__gnu_parallel::_Settings
partial_sum	cpp_src/stl_numeric.h	/^    partial_sum(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std
partial_sum_algorithm	5/parallel/settings.h	/^    _PartialSumAlgorithm        partial_sum_algorithm;$/;"	m	struct:__gnu_parallel::_Settings
partial_sum_dilation	5/parallel/settings.h	/^    float                       partial_sum_dilation;$/;"	m	struct:__gnu_parallel::_Settings
partial_sum_minimal_n	5/parallel/settings.h	/^    unsigned int                partial_sum_minimal_n;$/;"	m	struct:__gnu_parallel::_Settings
partition	5/ext/pb_ds/detail/binary_heap_/erase_fn_imps.hpp	/^partition(Pred pred)$/;"	f	class:PB_DS_CLASS_C_DEC
partition	cpp_src/stl_algo.h	/^    partition(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std
partition	opencv2/core/operations.hpp	/^partition( const std::vector<_Tp>& _vec, std::vector<int>& labels,$/;"	f	namespace:cv
partition_chunk_share	5/parallel/settings.h	/^    double                      partition_chunk_share;$/;"	m	struct:__gnu_parallel::_Settings
partition_chunk_size	5/parallel/settings.h	/^    _SequenceIndex              partition_chunk_size;$/;"	m	struct:__gnu_parallel::_Settings
partition_minimal_n	5/parallel/settings.h	/^    _SequenceIndex              partition_minimal_n;$/;"	m	struct:__gnu_parallel::_Settings
pat_trie_base	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^    struct pat_trie_base$/;"	s	namespace:__gnu_pbds::detail
pat_trie_tag	5/ext/pb_ds/tag_and_trait.hpp	/^  struct pat_trie_tag : public trie_tag { };$/;"	s	namespace:__gnu_pbds
patch_size_x	opencv2/cudev/grid/reduce.hpp	/^        patch_size_x = 4,$/;"	e	enum:cv::cudev::DefaultGlobReducePolicy::__anon402
patch_size_y	opencv2/cudev/grid/reduce.hpp	/^        patch_size_y = 4$/;"	e	enum:cv::cudev::DefaultGlobReducePolicy::__anon402
pattern	cpp_src/locale_facets.h	/^    struct pattern { char field[4]; };$/;"	s	class:std::money_base
perform_morphing	opencv2/cudalegacy.hpp	/^    int perform_morphing;     \/\/!< Number of erode-dilate-erode foreground-blob cleanup iterations.$/;"	m	struct:cv::cuda::FGDParams
period	opencv2/videostab/wobble_suppression.hpp	/^    virtual int period() const { return period_; }$/;"	f	class:cv::videostab::MoreAccurateMotionWobbleSuppressorBase
period_	opencv2/videostab/wobble_suppression.hpp	/^    int period_;$/;"	m	class:cv::videostab::MoreAccurateMotionWobbleSuppressorBase
perspectiveMap	opencv2/cudev/ptr2d/warping.hpp	/^__host__ static PerspectiveMapPtrSz perspectiveMap(Size dstSize, const GpuMat_<float>& warpMat)$/;"	f	namespace:cv::cudev
pitch	opencv2/cudalegacy/NCV.hpp	/^    Ncv32u pitch() const {return this->_pitch;}$/;"	f	class:NCVMatrix
pivot	opencv2/flann/hierarchical_clustering_index.h	/^        int pivot;$/;"	m	struct:cvflann::HierarchicalClusteringIndex::Node
pivot	opencv2/flann/kmeans_index.h	/^        DistanceType* pivot;$/;"	m	struct:cvflann::KMeansIndex::KMeansNode
planeSplit	opencv2/flann/kdtree_index.h	/^    void planeSplit(int* ind, int count, int cutfeat, DistanceType cutval, int& lim1, int& lim2)$/;"	f	class:cvflann::KDTreeIndex
planeSplit	opencv2/flann/kdtree_single_index.h	/^    void planeSplit(int* ind, int count, int cutfeat, DistanceType cutval, int& lim1, int& lim2)$/;"	f	class:cvflann::KDTreeSingleIndex
planes	opencv2/core/mat.hpp	/^    Mat* planes;$/;"	m	class:cv::NAryMatIterator
plus	cpp_src/stl_function.h	/^    struct plus : public binary_function<_Tp, _Tp, _Tp>$/;"	s	namespace:std
plus	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ plus() {}$/;"	f	struct:cv::cuda::device::plus
plus	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ plus(const plus&) {}$/;"	f	struct:cv::cuda::device::plus
plus	opencv2/core/cuda/functional.hpp	/^    template <typename T> struct plus : binary_function<T, T, T>$/;"	s	namespace:cv::cuda::device
plus	opencv2/cudev/functional/functional.hpp	/^template <typename T> struct plus : binary_function<T, T, T>$/;"	s	namespace:cv::cudev
plusDelta	opencv2/imgproc.hpp	/^    int minusDelta, plusDelta;$/;"	m	class:cv::LineIterator
plusStep	opencv2/imgproc.hpp	/^    int minusStep, plusStep;$/;"	m	class:cv::LineIterator
plus_delta	opencv2/core/types_c.h	/^    int  plus_delta;$/;"	m	struct:CvLineIterator
plus_step	opencv2/core/types_c.h	/^    int  plus_step;$/;"	m	struct:CvLineIterator
point_const_iterator	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	/^      typedef typename traits_type::point_const_iterator point_const_iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_BIN_TREE_NAME
point_const_iterator	5/ext/pb_ds/detail/bin_search_tree_/traits.hpp	/^      point_const_iterator;$/;"	t	struct:__gnu_pbds::detail::bin_search_tree_traits
point_const_iterator	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	/^      							point_const_iterator;$/;"	t	class:__gnu_pbds::detail::binary_heap
point_const_iterator	5/ext/pb_ds/detail/binomial_heap_/binomial_heap_.hpp	/^      typedef typename base_type::point_const_iterator 	point_const_iterator;$/;"	t	class:__gnu_pbds::detail::binomial_heap
point_const_iterator	5/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp	/^      typedef typename base_type::point_const_iterator 	point_const_iterator;$/;"	t	class:__gnu_pbds::detail::binomial_heap_base
point_const_iterator	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef point_const_iterator_ 		point_const_iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
point_const_iterator	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef point_const_iterator_ 		point_const_iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
point_const_iterator	5/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp	/^      point_const_iterator;$/;"	t	class:__gnu_pbds::detail::left_child_next_sibling_heap
point_const_iterator	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      typedef point_const_iterator_ 		point_const_iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_LU_NAME
point_const_iterator	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      typedef const_pointer 				point_const_iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
point_const_iterator	5/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp	/^      typedef typename base_type::point_const_iterator	point_const_iterator;$/;"	t	class:__gnu_pbds::detail::pairing_heap
point_const_iterator	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename traits_type::const_iterator 	point_const_iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
point_const_iterator	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	/^      typedef typename base_type::const_iterator 	 point_const_iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_RB_TREE_NAME
point_const_iterator	5/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp	/^      typedef typename base_type::point_const_iterator 	point_const_iterator;$/;"	t	class:__gnu_pbds::detail::rc_binomial_heap
point_const_iterator	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	/^      typedef typename base_type::const_iterator 	 point_const_iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_S_TREE_NAME
point_const_iterator	5/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp	/^      typedef typename base_type::point_const_iterator 	point_const_iterator;$/;"	t	class:__gnu_pbds::detail::thin_heap
point_const_iterator	5/ext/pb_ds/priority_queue.hpp	/^    typedef typename base_type::point_const_iterator 	point_const_iterator;$/;"	t	class:__gnu_pbds::priority_queue
point_const_iterator_	5/ext/pb_ds/detail/unordered_iterator/point_const_iterator.hpp	/^  point_const_iterator_() : m_p_value(0)$/;"	f	class:point_const_iterator_
point_const_iterator_	5/ext/pb_ds/detail/unordered_iterator/point_const_iterator.hpp	/^  point_const_iterator_(const point_const_iterator_& other)$/;"	f	class:point_const_iterator_
point_const_iterator_	5/ext/pb_ds/detail/unordered_iterator/point_const_iterator.hpp	/^  point_const_iterator_(const point_iterator_& other)$/;"	f	class:point_const_iterator_
point_const_iterator_	5/ext/pb_ds/detail/unordered_iterator/point_const_iterator.hpp	/^  point_const_iterator_(const_pointer p_value) : m_p_value(p_value)$/;"	f	class:point_const_iterator_
point_const_iterator_	5/ext/pb_ds/detail/unordered_iterator/point_const_iterator.hpp	/^class point_const_iterator_$/;"	c
point_invalidation_guarantee	5/ext/pb_ds/tag_and_trait.hpp	/^  struct point_invalidation_guarantee : public basic_invalidation_guarantee$/;"	s	namespace:__gnu_pbds
point_iterator	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	/^      typedef typename traits_type::point_iterator 	point_iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_BIN_TREE_NAME
point_iterator	5/ext/pb_ds/detail/bin_search_tree_/traits.hpp	/^      point_iterator;$/;"	t	struct:__gnu_pbds::detail::bin_search_tree_traits
point_iterator	5/ext/pb_ds/detail/bin_search_tree_/traits.hpp	/^      typedef point_const_iterator point_iterator;$/;"	t	struct:__gnu_pbds::detail::bin_search_tree_traits
point_iterator	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	/^      typedef point_const_iterator 			point_iterator;$/;"	t	class:__gnu_pbds::detail::binary_heap
point_iterator	5/ext/pb_ds/detail/binomial_heap_/binomial_heap_.hpp	/^      typedef typename base_type::point_iterator 	point_iterator;$/;"	t	class:__gnu_pbds::detail::binomial_heap
point_iterator	5/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp	/^      typedef typename base_type::point_iterator 	point_iterator;$/;"	t	class:__gnu_pbds::detail::binomial_heap_base
point_iterator	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef point_const_iterator_ 		point_iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
point_iterator	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef point_iterator_ 			point_iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
point_iterator	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef point_const_iterator_ 		point_iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
point_iterator	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef point_iterator_ 			point_iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
point_iterator	5/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp	/^      typedef point_const_iterator 			point_iterator;$/;"	t	class:__gnu_pbds::detail::left_child_next_sibling_heap
point_iterator	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      typedef point_const_iterator_ 		point_iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_LU_NAME
point_iterator	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      typedef point_iterator_ 			point_iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_LU_NAME
point_iterator	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      typedef point_const_iterator 			point_iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
point_iterator	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      typedef pointer 					point_iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
point_iterator	5/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp	/^      typedef typename base_type::point_iterator 	point_iterator;$/;"	t	class:__gnu_pbds::detail::pairing_heap
point_iterator	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename traits_type::iterator 		point_iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
point_iterator	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	/^      typedef typename base_type::point_iterator 	 point_iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_RB_TREE_NAME
point_iterator	5/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp	/^      typedef typename base_type::point_iterator 	point_iterator;$/;"	t	class:__gnu_pbds::detail::rc_binomial_heap
point_iterator	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	/^      typedef typename base_type::point_iterator 	 point_iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_S_TREE_NAME
point_iterator	5/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp	/^      typedef typename base_type::point_iterator 	point_iterator;$/;"	t	class:__gnu_pbds::detail::thin_heap
point_iterator	5/ext/pb_ds/priority_queue.hpp	/^    typedef typename base_type::point_iterator 		point_iterator;$/;"	t	class:__gnu_pbds::priority_queue
point_iterator_	5/ext/pb_ds/detail/unordered_iterator/point_iterator.hpp	/^  point_iterator_()$/;"	f	class:point_iterator_
point_iterator_	5/ext/pb_ds/detail/unordered_iterator/point_iterator.hpp	/^  point_iterator_(const point_iterator_& other)$/;"	f	class:point_iterator_
point_iterator_	5/ext/pb_ds/detail/unordered_iterator/point_iterator.hpp	/^  point_iterator_(pointer p_value) : m_p_value(p_value)$/;"	f	class:point_iterator_
point_iterator_	5/ext/pb_ds/detail/unordered_iterator/point_iterator.hpp	/^class point_iterator_$/;"	c
pointee_type	opencv2/cudev/util/type_traits.hpp	/^    typedef typename type_traits_detail::PointerTraits<unqualified_type>::type                           pointee_type;$/;"	t	struct:cv::cudev::TypeTraits
pointer	5/debug/safe_iterator.h	/^      typedef typename _Traits::pointer			pointer;$/;"	t	class:__gnu_debug::_Safe_iterator
pointer	5/debug/safe_local_iterator.h	/^      typedef typename _Traits::pointer			pointer;$/;"	t	class:__gnu_debug::_Safe_local_iterator
pointer	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	/^      typedef typename traits_base::pointer 		pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_BIN_TREE_NAME
pointer	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	/^      typedef Pointer 					pointer;$/;"	t	class:__gnu_pbds::detail::bin_search_tree_const_it_
pointer	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	/^      typedef typename value_allocator::pointer		pointer;$/;"	t	class:__gnu_pbds::detail::binary_heap
pointer	5/ext/pb_ds/detail/binary_heap_/const_iterator.hpp	/^      typedef typename base_type::pointer 		pointer;$/;"	t	class:__gnu_pbds::detail::binary_heap_const_iterator_
pointer	5/ext/pb_ds/detail/binary_heap_/point_const_iterator.hpp	/^      pointer;$/;"	t	class:__gnu_pbds::detail::binary_heap_point_const_iterator_
pointer	5/ext/pb_ds/detail/binomial_heap_/binomial_heap_.hpp	/^      typedef typename base_type::pointer 		pointer;$/;"	t	class:__gnu_pbds::detail::binomial_heap
pointer	5/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp	/^      typedef typename __rebind_v::pointer 		pointer;$/;"	t	class:__gnu_pbds::detail::binomial_heap_base
pointer	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef typename traits_base::pointer 	pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
pointer	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef typename traits_base::pointer pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
pointer	5/ext/pb_ds/detail/left_child_next_sibling_heap_/const_iterator.hpp	/^      typedef typename base_type::pointer 		pointer;$/;"	t	class:__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_
pointer	5/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp	/^      typedef typename __rebind_v::other::pointer 	pointer;$/;"	t	class:__gnu_pbds::detail::left_child_next_sibling_heap
pointer	5/ext/pb_ds/detail/left_child_next_sibling_heap_/point_const_iterator.hpp	/^      pointer;$/;"	t	class:__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_
pointer	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      typedef typename traits_base::pointer pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_LU_NAME
pointer	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	/^      pointer;$/;"	t	class:__gnu_pbds::detail::ov_tree_node_const_it_
pointer	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	/^      typedef typename base_type::pointer pointer;$/;"	t	class:__gnu_pbds::detail::ov_tree_node_it_
pointer	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      typedef typename traits_base::pointer 		pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
pointer	5/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp	/^      typedef typename __rebind_a::pointer 		pointer;$/;"	t	class:__gnu_pbds::detail::pairing_heap
pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename traits_base::pointer 		pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	typedef node_pointer_pointer 			pointer;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Inode::const_iterator
pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	typedef node_pointer_pointer 			pointer;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Inode::iterator
pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename type_traits::pointer 		pointer;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_CIter
pointer	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename type_traits::pointer 		pointer;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_Iter
pointer	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	/^      typedef typename base_type::pointer 		 pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_RB_TREE_NAME
pointer	5/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp	/^      typedef typename base_type::pointer 		pointer;$/;"	t	class:__gnu_pbds::detail::rc_binomial_heap
pointer	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	/^      typedef typename base_type::pointer 		 pointer;$/;"	t	class:__gnu_pbds::detail::PB_DS_S_TREE_NAME
pointer	5/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp	/^      typedef typename __rebind_a::pointer		pointer;$/;"	t	class:__gnu_pbds::detail::thin_heap
pointer	5/ext/pb_ds/detail/types_traits.hpp	/^	typedef typename __rebind_va::pointer 		pointer;$/;"	t	struct:__gnu_pbds::detail::type_base
pointer	5/ext/pb_ds/detail/unordered_iterator/const_iterator.hpp	/^  typedef pointer_ pointer;$/;"	t	class:const_iterator_
pointer	5/ext/pb_ds/detail/unordered_iterator/iterator.hpp	/^  typedef pointer_ pointer;$/;"	t	class:iterator_
pointer	5/ext/pb_ds/detail/unordered_iterator/point_const_iterator.hpp	/^  typedef pointer_ pointer;$/;"	t	class:point_const_iterator_
pointer	5/ext/pb_ds/detail/unordered_iterator/point_iterator.hpp	/^  typedef pointer_ pointer;$/;"	t	class:point_iterator_
pointer	5/ext/pb_ds/priority_queue.hpp	/^    typedef typename __rebind_va::pointer 	   	pointer;$/;"	t	class:__gnu_pbds::priority_queue
pointer	5/parallel/iterator.h	/^      typedef _IteratorPair* pointer;$/;"	t	class:__gnu_parallel::_IteratorPair
pointer	5/parallel/iterator.h	/^      typedef _IteratorTriple* pointer;$/;"	t	class:__gnu_parallel::_IteratorTriple
pointer	cpp_src/allocator.h	/^      typedef _Tp*       pointer;$/;"	t	class:std::allocator
pointer	cpp_src/allocator.h	/^      typedef void*       pointer;$/;"	t	class:std::allocator
pointer	cpp_src/basic_string.h	/^      typedef typename _CharT_alloc_type::pointer	    pointer;$/;"	t	class:std::basic_string
pointer	cpp_src/stl_bvector.h	/^    typedef _Bit_reference*                              pointer;$/;"	t	class:std::vector
pointer	cpp_src/stl_bvector.h	/^    typedef _Bit_reference* pointer;$/;"	t	struct:std::_Bit_iterator
pointer	cpp_src/stl_bvector.h	/^    typedef const bool*          pointer;$/;"	t	struct:std::_Bit_const_iterator
pointer	cpp_src/stl_deque.h	/^      typedef _Ptr                            pointer;$/;"	t	struct:std::_Deque_iterator
pointer	cpp_src/stl_deque.h	/^      typedef typename _Tp_alloc_type::pointer           pointer;$/;"	t	class:std::deque
pointer	cpp_src/stl_iterator.h	/^      typedef typename iterator_traits<_Iterator>::pointer     pointer;$/;"	t	class:std::reverse_iterator
pointer	cpp_src/stl_iterator.h	/^      typedef typename iterator_traits<_Iterator>::pointer   pointer;$/;"	t	class:__normal_iterator
pointer	cpp_src/stl_iterator_base_types.h	/^      typedef _Pointer   pointer;$/;"	t	struct:std::iterator
pointer	cpp_src/stl_iterator_base_types.h	/^      typedef _Tp*                        pointer;$/;"	t	struct:std::iterator_traits
pointer	cpp_src/stl_iterator_base_types.h	/^      typedef const _Tp*                  pointer;$/;"	t	struct:std::iterator_traits
pointer	cpp_src/stl_iterator_base_types.h	/^      typedef typename _Iterator::pointer           pointer;$/;"	t	struct:std::iterator_traits
pointer	cpp_src/stl_list.h	/^      typedef _Tp*                               pointer;$/;"	t	struct:std::_List_iterator
pointer	cpp_src/stl_list.h	/^      typedef const _Tp*                         pointer;$/;"	t	struct:std::_List_const_iterator
pointer	cpp_src/stl_list.h	/^      typedef typename _Tp_alloc_type::pointer           pointer;$/;"	t	class:std::list
pointer	cpp_src/stl_map.h	/^      typedef typename _Pair_alloc_type::pointer         pointer;$/;"	t	class:std::map
pointer	cpp_src/stl_multimap.h	/^      typedef typename _Pair_alloc_type::pointer         pointer;$/;"	t	class:std::multimap
pointer	cpp_src/stl_multiset.h	/^      typedef typename _Key_alloc_type::pointer             pointer;$/;"	t	class:std::multiset
pointer	cpp_src/stl_set.h	/^      typedef typename _Key_alloc_type::pointer             pointer;$/;"	t	class:std::set
pointer	cpp_src/stl_tempbuf.h	/^      typedef value_type* pointer;$/;"	t	class:std::_Temporary_buffer
pointer	cpp_src/stl_tree.h	/^      typedef _Tp* pointer;$/;"	t	struct:std::_Rb_tree_iterator
pointer	cpp_src/stl_tree.h	/^      typedef const _Tp* pointer;$/;"	t	struct:std::_Rb_tree_const_iterator
pointer	cpp_src/stl_tree.h	/^      typedef value_type* pointer;$/;"	t	class:std::_Rb_tree
pointer	cpp_src/stl_vector.h	/^      typedef typename _Tp_alloc_type::pointer           pointer;$/;"	t	class:std::vector
pointer	opencv2/core/cvstd.hpp	/^    typedef char* pointer;$/;"	t	class:cv::String
pointer	opencv2/core/cvstd.hpp	/^    typedef value_type* pointer;$/;"	t	class:cv::Allocator
pointer	opencv2/core/mat.hpp	/^    typedef _Tp* pointer;$/;"	t	class:cv::MatIterator_
pointer	opencv2/core/mat.hpp	/^    typedef const _Tp* pointer;$/;"	t	class:cv::MatConstIterator_
pointer	opencv2/core/mat.hpp	/^    typedef const uchar** pointer;$/;"	t	class:cv::MatConstIterator
pointer_	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef typename traits_base::pointer 	pointer_;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
pointer_	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef typename traits_base::pointer 	pointer_;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
pointer_	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      typedef typename traits_base::pointer pointer_;$/;"	t	class:__gnu_pbds::detail::PB_DS_LU_NAME
pointer_to_binary_function	cpp_src/stl_function.h	/^      pointer_to_binary_function() {}$/;"	f	class:std::pointer_to_binary_function
pointer_to_binary_function	cpp_src/stl_function.h	/^      pointer_to_binary_function(_Result (*__x)(_Arg1, _Arg2))$/;"	f	class:std::pointer_to_binary_function
pointer_to_binary_function	cpp_src/stl_function.h	/^    class pointer_to_binary_function$/;"	c	namespace:std
pointer_to_unary_function	cpp_src/stl_function.h	/^      pointer_to_unary_function() {}$/;"	f	class:std::pointer_to_unary_function
pointer_to_unary_function	cpp_src/stl_function.h	/^      pointer_to_unary_function(_Result (*__x)(_Arg))$/;"	f	class:std::pointer_to_unary_function
pointer_to_unary_function	cpp_src/stl_function.h	/^    class pointer_to_unary_function : public unary_function<_Arg, _Result>$/;"	c	namespace:std
points	opencv2/imgproc/imgproc_c.h	/^CVAPI(CvBox2D) cvFitEllipse2( const CvArr* points );$/;"	v
points0_	opencv2/videostab/optical_flow.hpp	/^    cuda::GpuMat frame0_, frame1_, points0_, points1_, status_, errors_;$/;"	m	class:cv::videostab::SparsePyrLkOptFlowEstimatorGpu
points1_	opencv2/videostab/optical_flow.hpp	/^    cuda::GpuMat frame0_, frame1_, points0_, points1_, status_, errors_;$/;"	m	class:cv::videostab::SparsePyrLkOptFlowEstimatorGpu
pointsGood_	opencv2/videostab/global_motion.hpp	/^    std::vector<Point2f> pointsPrevGood_, pointsGood_;$/;"	m	class:cv::videostab::KeypointBasedMotionEstimator
pointsPrevGood_	opencv2/videostab/global_motion.hpp	/^    std::vector<Point2f> pointsPrevGood_, pointsGood_;$/;"	m	class:cv::videostab::KeypointBasedMotionEstimator
pointsPrev_	opencv2/videostab/global_motion.hpp	/^    cuda::GpuMat pointsPrev_, points_;$/;"	m	class:cv::videostab::KeypointBasedMotionEstimatorGpu
pointsPrev_	opencv2/videostab/global_motion.hpp	/^    std::vector<Point2f> pointsPrev_, points_;$/;"	m	class:cv::videostab::KeypointBasedMotionEstimator
points_	opencv2/videostab/global_motion.hpp	/^    cuda::GpuMat pointsPrev_, points_;$/;"	m	class:cv::videostab::KeypointBasedMotionEstimatorGpu
points_	opencv2/videostab/global_motion.hpp	/^    std::vector<Point2f> pointsPrev_, points_;$/;"	m	class:cv::videostab::KeypointBasedMotionEstimator
policy	opencv2/flann/any.h	/^    anyimpl::base_any_policy* policy;$/;"	m	struct:cvflann::any
policy	opencv2/flann/any.h	/^    static typename choose_policy<T>::type policy;$/;"	m	class:cvflann::anyimpl::SinglePolicy
policy	opencv2/flann/any.h	/^typename choose_policy<T>::type SinglePolicy<T>::policy;$/;"	m	class:cvflann::anyimpl::SinglePolicy
pool	opencv2/core/mat.hpp	/^        std::vector<uchar> pool;$/;"	m	struct:cv::SparseMat::Hdr
pool	opencv2/flann/hierarchical_clustering_index.h	/^    PooledAllocator pool;$/;"	m	class:cvflann::HierarchicalClusteringIndex
pool_	opencv2/flann/kdtree_index.h	/^    PooledAllocator pool_;$/;"	m	class:cvflann::KDTreeIndex
pool_	opencv2/flann/kdtree_single_index.h	/^    PooledAllocator pool_;$/;"	m	class:cvflann::KDTreeSingleIndex
pool_	opencv2/flann/kmeans_index.h	/^    PooledAllocator pool_;$/;"	m	class:cvflann::KMeansIndex
pop	5/ext/pb_ds/detail/binary_heap_/erase_fn_imps.hpp	/^pop()$/;"	f	class:PB_DS_CLASS_C_DEC
pop	5/ext/pb_ds/detail/binomial_heap_base_/erase_fn_imps.hpp	/^pop()$/;"	f	class:PB_DS_CLASS_C_DEC
pop	5/ext/pb_ds/detail/pairing_heap_/erase_fn_imps.hpp	/^pop()$/;"	f	class:PB_DS_CLASS_C_DEC
pop	5/ext/pb_ds/detail/rc_binomial_heap_/erase_fn_imps.hpp	/^pop()$/;"	f	class:PB_DS_CLASS_C_DEC
pop	5/ext/pb_ds/detail/rc_binomial_heap_/rc.hpp	/^    pop()$/;"	f	class:__gnu_pbds::detail::rc
pop	5/ext/pb_ds/detail/thin_heap_/erase_fn_imps.hpp	/^pop()$/;"	f	class:PB_DS_CLASS_C_DEC
pop	cpp_src/stl_queue.h	/^      pop()$/;"	f	class:std::priority_queue
pop	cpp_src/stl_queue.h	/^      pop()$/;"	f	class:std::queue
pop	cpp_src/stl_stack.h	/^      pop()$/;"	f	class:std::stack
popMin	opencv2/flann/heap.h	/^    bool popMin(T& value)$/;"	f	class:cvflann::Heap
pop_back	5/parallel/queue.h	/^      pop_back(_Tp& __t)        \/\/queue behavior$/;"	f	class:__gnu_parallel::_RestrictedBoundedConcurrentQueue
pop_back	cpp_src/stl_bvector.h	/^    pop_back()$/;"	f	class:std::vector
pop_back	cpp_src/stl_deque.h	/^      pop_back()$/;"	f	class:std::deque
pop_back	cpp_src/stl_list.h	/^      pop_back()$/;"	f	class:std::list
pop_back	cpp_src/stl_vector.h	/^      pop_back()$/;"	f	class:std::vector
pop_back	opencv2/core/core_c.h	/^template<typename _Tp> inline void Seq<_Tp>::pop_back()$/;"	f	class:cv::Seq
pop_back	opencv2/core/core_c.h	/^template<typename _Tp> inline void Seq<_Tp>::pop_back(_Tp* elem, size_t count)$/;"	f	class:cv::Seq
pop_front	5/parallel/queue.h	/^      pop_front(_Tp& __t)$/;"	f	class:__gnu_parallel::_RestrictedBoundedConcurrentQueue
pop_front	cpp_src/stl_deque.h	/^      pop_front()$/;"	f	class:std::deque
pop_front	cpp_src/stl_list.h	/^      pop_front()$/;"	f	class:std::list
pop_front	opencv2/core/core_c.h	/^template<typename _Tp> inline void Seq<_Tp>::pop_front()$/;"	f	class:cv::Seq
pop_front	opencv2/core/core_c.h	/^template<typename _Tp> inline void Seq<_Tp>::pop_front(_Tp* elem, size_t count)$/;"	f	class:cv::Seq
pop_heap	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	/^      pop_heap()$/;"	f	class:__gnu_pbds::detail::binary_heap
pop_heap	cpp_src/stl_heap.h	/^    pop_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)$/;"	f	namespace:std
pop_heap	cpp_src/stl_heap.h	/^    pop_heap(_RandomAccessIterator __first,$/;"	f	namespace:std
popcnt32	opencv2/flann/dist.h	/^    unsigned int popcnt32(uint32_t n) const$/;"	f	struct:cvflann::Hamming2
popcnt64	opencv2/flann/dist.h	/^    unsigned int popcnt64(uint64_t n) const$/;"	f	struct:cvflann::Hamming2
pos	opencv2/core/mat.inl.hpp	/^Point MatConstIterator_<_Tp>::pos() const$/;"	f	class:cv::MatConstIterator_
pos	opencv2/cudalegacy/NPP_staging.hpp	/^    Ncv32f pos;           \/\/\/< new frame position$/;"	m	struct:NppStInterpolationState
pos	opencv2/imgproc.hpp	/^Point LineIterator::pos() const$/;"	f	class:cv::LineIterator
pos_format	cpp_src/locale_facets.h	/^      pos_format() const$/;"	f	class:std::moneypunct
pos_type	cpp_src/basic_ios.h	/^      typedef typename _Traits::pos_type             pos_type;$/;"	t	class:std::basic_ios
pos_type	cpp_src/char_traits.h	/^      typedef std::streampos  pos_type;$/;"	t	struct:_Char_types
pos_type	cpp_src/char_traits.h	/^      typedef typename _Char_types<_CharT>::pos_type    pos_type;$/;"	t	struct:char_traits
posit_object	opencv2/calib3d/calib3d_c.h	/^CVAPI(void)  cvReleasePOSITObject( CvPOSITObject**  posit_object );$/;"	v
positive_sign	cpp_src/locale_facets.h	/^      positive_sign() const$/;"	f	class:std::moneypunct
pow_	opencv2/cudev/expr/unary_func.hpp	/^pow_(const SrcPtr& src, float power)$/;"	f	namespace:cv::cudev
pow_func	opencv2/cudev/functional/functional.hpp	/^template <> struct pow_func<double> : binary_function<double, double, double>$/;"	s	namespace:cv::cudev
pow_func	opencv2/cudev/functional/functional.hpp	/^template <typename T> struct pow_func : binary_function<T, float, float>$/;"	s	namespace:cv::cudev
ppBuffers	opencv2/cudalegacy/NPP_staging.hpp	/^    Ncv32f *ppBuffers[6]; \/\/\/< temporary buffers$/;"	m	struct:NppStInterpolationState
ppx	opencv2/stitching/detail/camera.hpp	/^    double ppx; \/\/ Principal point X$/;"	m	struct:cv::detail::CameraParams
ppy	opencv2/stitching/detail/camera.hpp	/^    double ppy; \/\/ Principal point Y$/;"	m	struct:cv::detail::CameraParams
preFilterCap	opencv2/calib3d/calib3d_c.h	/^    int preFilterCap; \/\/ the output of pre-filtering is clipped by [-preFilterCap,preFilterCap]$/;"	m	struct:CvStereoBMState
preFilterSize	opencv2/calib3d/calib3d_c.h	/^    int preFilterSize; \/\/ averaging window size: ~5x5..21x21$/;"	m	struct:CvStereoBMState
preFilterType	opencv2/calib3d/calib3d_c.h	/^    int preFilterType; \/\/ =CV_STEREO_BM_NORMALIZED_RESPONSE now$/;"	m	struct:CvStereoBMState
preFilteredImg0	opencv2/calib3d/calib3d_c.h	/^    CvMat* preFilteredImg0;$/;"	m	struct:CvStereoBMState
preFilteredImg1	opencv2/calib3d/calib3d_c.h	/^    CvMat* preFilteredImg1;$/;"	m	struct:CvStereoBMState
preProcessedFrame_	opencv2/videostab/stabilizer.hpp	/^    Mat preProcessedFrame_;$/;"	m	class:cv::videostab::StabilizerBase
precision	cpp_src/ios_base.h	/^    precision() const { return _M_precision; }$/;"	f	class:std::ios_base
precision	cpp_src/ios_base.h	/^    precision(streamsize __prec)$/;"	f	class:std::ios_base
pred	opencv2/core/cuda/functional.hpp	/^        Predicate pred;$/;"	m	struct:cv::cuda::device::binary_negate
pred	opencv2/core/cuda/functional.hpp	/^      Predicate pred;$/;"	m	struct:cv::cuda::device::unary_negate
pred	opencv2/cudev/functional/functional.hpp	/^    Predicate pred;$/;"	m	struct:cv::cudev::BinaryNegate
pred	opencv2/cudev/functional/functional.hpp	/^    Predicate pred;$/;"	m	struct:cv::cudev::UnaryNegate
pref_b_it	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^    pref_b_it() const$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
pref_begin	5/ext/pb_ds/detail/pat_trie_/find_fn_imps.hpp	/^pref_begin(node_const_pointer p_nd)$/;"	f	class:PB_DS_CLASS_C_DEC
pref_begin	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      pref_begin() const$/;"	f	class:__gnu_pbds::detail::pat_trie_base::_Node_citer
pref_e_it	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^    pref_e_it() const$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
pref_end	5/ext/pb_ds/detail/pat_trie_/find_fn_imps.hpp	/^pref_end(node_const_pointer p_nd)$/;"	f	class:PB_DS_CLASS_C_DEC
pref_end	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      pref_end() const$/;"	f	class:__gnu_pbds::detail::pat_trie_base::_Node_citer
prefix_range	5/ext/pb_ds/detail/trie_policy/prefix_search_node_update_imp.hpp	/^prefix_range(key_const_reference r_key) const$/;"	f	class:PB_DS_CLASS_C_DEC
prefix_range	5/ext/pb_ds/detail/trie_policy/prefix_search_node_update_imp.hpp	/^prefix_range(key_const_reference r_key)$/;"	f	class:PB_DS_CLASS_C_DEC
prefix_range	5/ext/pb_ds/detail/trie_policy/prefix_search_node_update_imp.hpp	/^prefix_range(typename access_traits::const_iterator b,$/;"	f	class:PB_DS_CLASS_C_DEC
prefix_range_t	5/ext/pb_ds/detail/trie_policy/trie_policy_base.hpp	/^      typedef std::pair<e_const_iterator, e_const_iterator> prefix_range_t;$/;"	t	class:__gnu_pbds::detail::trie_policy_base
prev	opencv2/core/types_c.h	/^    struct CvMemBlock*  prev;$/;"	m	struct:CvMemBlock	typeref:struct:CvMemBlock::CvMemBlock
prev	opencv2/core/types_c.h	/^    struct CvSeqBlock*  prev; \/**< Previous sequence block.                   *\/$/;"	m	struct:CvSeqBlock	typeref:struct:CvSeqBlock::CvSeqBlock
prev	opencv2/core/types_c.h	/^    struct CvTypeInfo* prev; \/**< previous registered type in the list *\/$/;"	m	struct:CvTypeInfo	typeref:struct:CvTypeInfo::CvTypeInfo
prevAllocator	opencv2/core/mat.hpp	/^    const MatAllocator* prevAllocator;$/;"	m	struct:cv::UMatData
prevErrNorm	opencv2/calib3d/calib3d_c.h	/^    double prevErrNorm, errNorm;$/;"	m	class:CvLevMarq
prevParam	opencv2/calib3d/calib3d_c.h	/^    cv::Ptr<CvMat> prevParam;$/;"	m	class:CvLevMarq
prev_elem	opencv2/core/persistence.hpp	/^      schar*       prev_elem;  \/* pointer to previous element *\/$/;"	m	struct:cv::FileNodeIterator::SeqReader
prev_permutation	cpp_src/stl_algo.h	/^    prev_permutation(_BidirectionalIterator __first,$/;"	f	namespace:std
print	opencv2/core/operations.hpp	/^int print(Ptr<Formatted> fmtd, FILE* stream = stdout)$/;"	f	namespace:cv
print	opencv2/core/operations.hpp	/^int print(const Mat& mtx, FILE* stream = stdout)$/;"	f	namespace:cv
print	opencv2/core/operations.hpp	/^int print(const Matx<_Tp, m, n>& matx, FILE* stream = stdout)$/;"	f	namespace:cv
print	opencv2/core/operations.hpp	/^int print(const UMat& mtx, FILE* stream = stdout)$/;"	f	namespace:cv
print	opencv2/core/operations.hpp	/^int print(const std::vector<Point3_<_Tp> >& vec, FILE* stream = stdout)$/;"	f	namespace:cv
print	opencv2/core/operations.hpp	/^int print(const std::vector<Point_<_Tp> >& vec, FILE* stream = stdout)$/;"	f	namespace:cv
print	opencv2/flann/any.h	/^    virtual void print(std::ostream& out, void* const* src) { out << *reinterpret_cast<T const*>(*src); }$/;"	f	struct:cvflann::anyimpl::big_any_policy
print	opencv2/flann/any.h	/^    virtual void print(std::ostream& out, void* const* src) { out << *reinterpret_cast<T const*>(src); }$/;"	f	struct:cvflann::anyimpl::small_any_policy
print	opencv2/flann/any.h	/^template<> inline void big_any_policy<cv::String>::print(std::ostream& out, void* const* src)$/;"	f	class:cvflann::anyimpl::big_any_policy
print	opencv2/flann/any.h	/^template<> inline void big_any_policy<flann_algorithm_t>::print(std::ostream& out, void* const* src)$/;"	f	class:cvflann::anyimpl::big_any_policy
print	opencv2/flann/any.h	/^template<> inline void big_any_policy<flann_centers_init_t>::print(std::ostream& out, void* const* src)$/;"	f	class:cvflann::anyimpl::big_any_policy
print	opencv2/videostab/log.hpp	/^    virtual void print(const char * \/*format*\/, ...) {}$/;"	f	class:cv::videostab::NullLog
printFuncAttrib	opencv2/core/cuda/funcattrib.hpp	/^    void printFuncAttrib(Func& func)$/;"	f	namespace:cv::cuda::device
print_node_pointer	5/ext/pb_ds/detail/tree_trace_base.hpp	/^    print_node_pointer(Node_CItr nd_it, integral_constant<int,false>)$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
print_node_pointer	5/ext/pb_ds/detail/tree_trace_base.hpp	/^    print_node_pointer(Node_CItr nd_it, integral_constant<int,true>)$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
print_params	opencv2/flann/params.h	/^inline void print_params(const IndexParams& params)$/;"	f	namespace:cvflann
print_params	opencv2/flann/params.h	/^inline void print_params(const IndexParams& params, std::ostream& stream)$/;"	f	namespace:cvflann
priority_queue	5/ext/pb_ds/priority_queue.hpp	/^    priority_queue() { }$/;"	f	class:__gnu_pbds::priority_queue
priority_queue	5/ext/pb_ds/priority_queue.hpp	/^    priority_queue(It first_it, It last_it)$/;"	f	class:__gnu_pbds::priority_queue
priority_queue	5/ext/pb_ds/priority_queue.hpp	/^    priority_queue(It first_it, It last_it, const cmp_fn& r_cmp_fn)$/;"	f	class:__gnu_pbds::priority_queue
priority_queue	5/ext/pb_ds/priority_queue.hpp	/^    priority_queue(const cmp_fn& r_cmp_fn) : base_type(r_cmp_fn) { }$/;"	f	class:__gnu_pbds::priority_queue
priority_queue	5/ext/pb_ds/priority_queue.hpp	/^    priority_queue(const priority_queue& other)$/;"	f	class:__gnu_pbds::priority_queue
priority_queue	5/ext/pb_ds/priority_queue.hpp	/^  class priority_queue$/;"	c	namespace:__gnu_pbds
priority_queue	cpp_src/stl_queue.h	/^        priority_queue(_InputIterator __first, _InputIterator __last,$/;"	f	class:std::priority_queue
priority_queue	cpp_src/stl_queue.h	/^      priority_queue(const _Compare& __x = _Compare(),$/;"	f	class:std::priority_queue
priority_queue	cpp_src/stl_queue.h	/^    class priority_queue$/;"	c	namespace:std
priority_queue_tag	5/ext/pb_ds/tag_and_trait.hpp	/^  struct priority_queue_tag : public container_tag { };$/;"	s	namespace:__gnu_pbds
prob	opencv2/videostab/motion_core.hpp	/^    float prob; \/\/!< probability of success$/;"	m	struct:cv::videostab::RansacParams
probe_fn	5/ext/pb_ds/assoc_container.hpp	/^    typedef Probe_Fn 				probe_fn;$/;"	t	class:__gnu_pbds::gp_hash_table
probe_fn	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef Probe_Fn 				probe_fn;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
probe_fn_base	5/ext/pb_ds/detail/hash_fn/probe_fn_base.hpp	/^    class probe_fn_base$/;"	c	namespace:__gnu_pbds::detail
probe_fn_base	5/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp	/^      typedef Probe_Fn probe_fn_base;$/;"	t	class:__gnu_pbds::detail::ranged_probe_fn
processNoiseCov	opencv2/video/tracking.hpp	/^    CV_PROP_RW Mat processNoiseCov;    \/\/!< process noise covariance matrix (Q)$/;"	m	class:cv::KalmanFilter
process_noise_cov	opencv2/video/tracking_c.h	/^    CvMat* process_noise_cov;   \/* process noise covariance matrix (Q) *\/$/;"	m	struct:CvKalman
processingStartTime_	opencv2/videostab/stabilizer.hpp	/^    clock_t processingStartTime_;$/;"	m	class:cv::videostab::StabilizerBase
programHash	opencv2/core/ocl_genbase.hpp	/^    const char* programHash;$/;"	m	struct:cv::ocl::ProgramEntry
programStr	opencv2/core/ocl_genbase.hpp	/^    const char* programStr;$/;"	m	struct:cv::ocl::ProgramEntry
project1st	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ project1st() {}$/;"	f	struct:cv::cuda::device::project1st
project1st	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ project1st(const project1st&) {}$/;"	f	struct:cv::cuda::device::project1st
project1st	opencv2/core/cuda/functional.hpp	/^    template <typename T1, typename T2> struct project1st : binary_function<T1, T2, T1>$/;"	s	namespace:cv::cuda::device
project1st	opencv2/cudev/functional/functional.hpp	/^template <typename T1, typename T2> struct project1st : binary_function<T1, T2, T1>$/;"	s	namespace:cv::cudev
project2nd	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ project2nd() {}$/;"	f	struct:cv::cuda::device::project2nd
project2nd	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ project2nd(const project2nd&) {}$/;"	f	struct:cv::cuda::device::project2nd
project2nd	opencv2/core/cuda/functional.hpp	/^    template <typename T1, typename T2> struct project2nd : binary_function<T1, T2, T2>$/;"	s	namespace:cv::cuda::device
project2nd	opencv2/cudev/functional/functional.hpp	/^template <typename T1, typename T2> struct project2nd : binary_function<T1, T2, T2>$/;"	s	namespace:cv::cudev
projector_	opencv2/stitching/detail/warpers.hpp	/^    P projector_;$/;"	m	class:cv::detail::RotationWarperBase
prune	5/ext/pb_ds/detail/left_child_next_sibling_heap_/erase_fn_imps.hpp	/^prune(Pred pred)$/;"	f	class:PB_DS_CLASS_C_DEC
pt	opencv2/core/types.hpp	/^    CV_PROP_RW Point2f pt; \/\/!< coordinates of the keypoints$/;"	m	class:cv::KeyPoint
pt	opencv2/imgproc.hpp	/^        Point2f pt;$/;"	m	struct:cv::Subdiv2D::Vertex
pt	opencv2/imgproc.hpp	/^        int pt[4];$/;"	m	struct:cv::Subdiv2D::QuadEdge
pt	opencv2/imgproc/types_c.h	/^    CvPoint   pt;$/;"	m	struct:CvChainPtReader
ptr	opencv2/core/core_c.h	/^    uchar* ptr[CV_MAX_ARR]; \/**< pointers to the array slices *\/$/;"	m	struct:CvNArrayIterator
ptr	opencv2/core/cuda.inl.hpp	/^_Tp* GpuMat::ptr(int y)$/;"	f	class:cv::cuda::GpuMat
ptr	opencv2/core/cuda.inl.hpp	/^const _Tp* GpuMat::ptr(int y) const$/;"	f	class:cv::cuda::GpuMat
ptr	opencv2/core/cuda.inl.hpp	/^const uchar* GpuMat::ptr(int y) const$/;"	f	class:cv::cuda::GpuMat
ptr	opencv2/core/cuda.inl.hpp	/^uchar* GpuMat::ptr(int y)$/;"	f	class:cv::cuda::GpuMat
ptr	opencv2/core/cuda/border_interpolate.hpp	/^        Ptr2D ptr;$/;"	m	struct:cv::cuda::device::BorderReader
ptr	opencv2/core/cuda_types.hpp	/^            __CV_CUDA_HOST_DEVICE__       T* ptr(int y = 0)       { return (      T*)( (      char*)DevPtr<T>::data + y * step); }$/;"	f	struct:cv::cuda::PtrStep
ptr	opencv2/core/cuda_types.hpp	/^            __CV_CUDA_HOST_DEVICE__ const T* ptr(int y = 0) const { return (const T*)( (const char*)DevPtr<T>::data + y * step); }$/;"	f	struct:cv::cuda::PtrStep
ptr	opencv2/core/mat.hpp	/^    const uchar* ptr;$/;"	m	class:cv::MatConstIterator
ptr	opencv2/core/mat.hpp	/^    uchar* ptr;$/;"	m	class:cv::SparseMatConstIterator
ptr	opencv2/core/mat.inl.hpp	/^_Tp* Mat::ptr(int i0, int i1)$/;"	f	class:cv::Mat
ptr	opencv2/core/mat.inl.hpp	/^_Tp* Mat::ptr(int i0, int i1, int i2)$/;"	f	class:cv::Mat
ptr	opencv2/core/mat.inl.hpp	/^_Tp* Mat::ptr(int y)$/;"	f	class:cv::Mat
ptr	opencv2/core/mat.inl.hpp	/^const _Tp* Mat::ptr(int i0, int i1) const$/;"	f	class:cv::Mat
ptr	opencv2/core/mat.inl.hpp	/^const _Tp* Mat::ptr(int i0, int i1, int i2) const$/;"	f	class:cv::Mat
ptr	opencv2/core/mat.inl.hpp	/^const _Tp* Mat::ptr(int y) const$/;"	f	class:cv::Mat
ptr	opencv2/core/mat.inl.hpp	/^const uchar* Mat::ptr(const int* idx) const$/;"	f	class:cv::Mat
ptr	opencv2/core/mat.inl.hpp	/^const uchar* Mat::ptr(int i0, int i1) const$/;"	f	class:cv::Mat
ptr	opencv2/core/mat.inl.hpp	/^const uchar* Mat::ptr(int i0, int i1, int i2) const$/;"	f	class:cv::Mat
ptr	opencv2/core/mat.inl.hpp	/^const uchar* Mat::ptr(int y) const$/;"	f	class:cv::Mat
ptr	opencv2/core/mat.inl.hpp	/^uchar* Mat::ptr(const int* idx)$/;"	f	class:cv::Mat
ptr	opencv2/core/mat.inl.hpp	/^uchar* Mat::ptr(int i0, int i1)$/;"	f	class:cv::Mat
ptr	opencv2/core/mat.inl.hpp	/^uchar* Mat::ptr(int i0, int i1, int i2)$/;"	f	class:cv::Mat
ptr	opencv2/core/mat.inl.hpp	/^uchar* Mat::ptr(int y)$/;"	f	class:cv::Mat
ptr	opencv2/core/persistence.hpp	/^      schar*       ptr;        \/* pointer to element be read next *\/$/;"	m	struct:cv::FileNodeIterator::SeqReader
ptr	opencv2/core/types_c.h	/^        uchar* ptr;$/;"	m	union:CvMat::__anon325
ptr	opencv2/core/types_c.h	/^        uchar* ptr;$/;"	m	union:CvMatND::__anon328
ptr	opencv2/core/types_c.h	/^    CvPoint2D32f* ptr;$/;"	m	struct:CvGraphVtx2D
ptr	opencv2/core/types_c.h	/^    char* ptr;$/;"	m	struct:CvString
ptr	opencv2/core/types_c.h	/^    uchar* ptr;$/;"	m	struct:CvLineIterator
ptr	opencv2/core/utility.hpp	/^    _Tp* ptr;$/;"	m	class:cv::AutoBuffer
ptr	opencv2/cudalegacy/NCV.hpp	/^    T *ptr() const {return this->_ptr;}$/;"	f	class:NCVMatrix
ptr	opencv2/cudalegacy/NCV.hpp	/^    T *ptr() const {return this->_ptr;}$/;"	f	class:NCVVector
ptr	opencv2/cudalegacy/NCV.hpp	/^    void *ptr;$/;"	m	struct:NCVMemPtr
ptr	opencv2/imgproc.hpp	/^    uchar* ptr;$/;"	m	class:cv::LineIterator
ptr0	opencv2/imgproc.hpp	/^    const uchar* ptr0;$/;"	m	class:cv::LineIterator
ptr_fun	cpp_src/stl_function.h	/^    ptr_fun(_Result (*__x)(_Arg))$/;"	f	namespace:std
ptr_fun	cpp_src/stl_function.h	/^    ptr_fun(_Result (*__x)(_Arg1, _Arg2))$/;"	f	namespace:std
ptr_sz_type	opencv2/cudev/expr/expr.hpp	/^    typedef Expr<Body>                         ptr_sz_type;$/;"	t	struct:cv::cudev::PtrTraits
ptr_sz_type	opencv2/cudev/ptr2d/traits.hpp	/^    typedef Ptr2DSz ptr_sz_type;$/;"	t	struct:cv::cudev::PtrTraitsBase
ptr_type	opencv2/cudev/expr/expr.hpp	/^    typedef typename PtrTraits<Body>::ptr_type ptr_type;$/;"	t	struct:cv::cudev::PtrTraits
ptr_type	opencv2/cudev/ptr2d/traits.hpp	/^    typedef Ptr2D   ptr_type;$/;"	t	struct:cv::cudev::PtrTraitsBase
ptrs	opencv2/core/mat.hpp	/^    uchar** ptrs;$/;"	m	class:cv::NAryMatIterator
push	5/ext/pb_ds/detail/binary_heap_/insert_fn_imps.hpp	/^push(const_reference r_val)$/;"	f	class:PB_DS_CLASS_C_DEC
push	5/ext/pb_ds/detail/binomial_heap_base_/insert_fn_imps.hpp	/^push(const_reference r_val)$/;"	f	class:PB_DS_CLASS_C_DEC
push	5/ext/pb_ds/detail/pairing_heap_/insert_fn_imps.hpp	/^push(const_reference r_val)$/;"	f	class:PB_DS_CLASS_C_DEC
push	5/ext/pb_ds/detail/rc_binomial_heap_/insert_fn_imps.hpp	/^push(const_reference r_val)$/;"	f	class:PB_DS_CLASS_C_DEC
push	5/ext/pb_ds/detail/rc_binomial_heap_/rc.hpp	/^    push(entry p_nd)$/;"	f	class:__gnu_pbds::detail::rc
push	5/ext/pb_ds/detail/thin_heap_/insert_fn_imps.hpp	/^push(const_reference r_val)$/;"	f	class:PB_DS_CLASS_C_DEC
push	cpp_src/stl_queue.h	/^      push(const value_type& __x)$/;"	f	class:std::priority_queue
push	cpp_src/stl_queue.h	/^      push(const value_type& __x)$/;"	f	class:std::queue
push	cpp_src/stl_stack.h	/^      push(const value_type& __x)$/;"	f	class:std::stack
pushBack	opencv2/videostab/inpainting.hpp	/^    void pushBack(Ptr<InpainterBase> inpainter) { inpainters_.push_back(inpainter); }$/;"	f	class:cv::videostab::InpaintingPipeline
pushBack	opencv2/videostab/motion_stabilizing.hpp	/^    void pushBack(Ptr<IMotionStabilizer> stabilizer) { stabilizers_.push_back(stabilizer); }$/;"	f	class:cv::videostab::MotionStabilizationPipeline
push_back	cpp_src/basic_string.h	/^      push_back(_CharT __c)$/;"	f	class:std::basic_string
push_back	cpp_src/stl_bvector.h	/^    push_back(bool __x)$/;"	f	class:std::vector
push_back	cpp_src/stl_deque.h	/^      push_back(const value_type& __x)$/;"	f	class:std::deque
push_back	cpp_src/stl_list.h	/^      push_back(const value_type& __x)$/;"	f	class:std::list
push_back	cpp_src/stl_vector.h	/^      push_back(const value_type& __x)$/;"	f	class:std::vector
push_back	opencv2/core/core_c.h	/^template<typename _Tp> inline void Seq<_Tp>::push_back(const _Tp& elem)$/;"	f	class:cv::Seq
push_back	opencv2/core/core_c.h	/^template<typename _Tp> inline void Seq<_Tp>::push_back(const _Tp* elem, size_t count)$/;"	f	class:cv::Seq
push_back	opencv2/core/mat.inl.hpp	/^void Mat::push_back(const MatExpr& expr)$/;"	f	class:cv::Mat
push_back	opencv2/core/mat.inl.hpp	/^void Mat::push_back(const Mat_<_Tp>& m)$/;"	f	class:cv::Mat
push_back	opencv2/core/mat.inl.hpp	/^void Mat::push_back(const _Tp& elem)$/;"	f	class:cv::Mat
push_front	5/parallel/queue.h	/^      push_front(const _Tp& __t)$/;"	f	class:__gnu_parallel::_RestrictedBoundedConcurrentQueue
push_front	cpp_src/stl_deque.h	/^      push_front(const value_type& __x)$/;"	f	class:std::deque
push_front	cpp_src/stl_list.h	/^      push_front(const value_type& __x)$/;"	f	class:std::list
push_front	opencv2/core/core_c.h	/^template<typename _Tp> inline void Seq<_Tp>::push_front(const _Tp& elem)$/;"	f	class:cv::Seq
push_front	opencv2/core/core_c.h	/^template<typename _Tp> inline void Seq<_Tp>::push_front(const _Tp* elem, size_t count)$/;"	f	class:cv::Seq
push_heap	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	/^      push_heap()$/;"	f	class:__gnu_pbds::detail::binary_heap
push_heap	cpp_src/stl_heap.h	/^    push_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)$/;"	f	namespace:std
push_heap	cpp_src/stl_heap.h	/^    push_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	namespace:std
push_imp	5/ext/pb_ds/detail/pairing_heap_/insert_fn_imps.hpp	/^push_imp(node_pointer p_nd)$/;"	f	class:PB_DS_CLASS_C_DEC
put	cpp_src/locale_facets.h	/^      put(iter_type __s, bool __intl, ios_base& __io,$/;"	f	class:std::money_put
put	cpp_src/locale_facets.h	/^      put(iter_type __s, ios_base& __f, char_type __fill, bool __v) const$/;"	f	class:std::num_put
put	cpp_src/locale_facets.h	/^      put(iter_type __s, ios_base& __f, char_type __fill, double __v) const$/;"	f	class:std::num_put
put	cpp_src/locale_facets.h	/^      put(iter_type __s, ios_base& __f, char_type __fill, long __v) const$/;"	f	class:std::num_put
put	cpp_src/locale_facets.h	/^      put(iter_type __s, ios_base& __f, char_type __fill, long long __v) const$/;"	f	class:std::num_put
put	cpp_src/locale_facets.h	/^      put(iter_type __s, ios_base& __f, char_type __fill,$/;"	f	class:std::num_put
put	cpp_src/locale_facets.h	/^      put(iter_type __s, ios_base& __io, char_type __fill,$/;"	f	class:std::time_put
pword	cpp_src/ios_base.h	/^    pword(int __ix)$/;"	f	class:std::ios_base
pyrDown	opencv2/cudev/grid/detail/pyr_down.hpp	/^    __global__ void pyrDown(const SrcPtr src, GlobPtr<DstType> dst, const int src_rows, const int src_cols, const int dst_cols)$/;"	f	namespace:cv::cudev::pyramids_detail
pyrDown	opencv2/cudev/grid/detail/pyr_down.hpp	/^    __host__ void pyrDown(const SrcPtr& src, const GlobPtr<DstType>& dst, int src_rows, int src_cols, int dst_rows, int dst_cols, cudaStream_t stream)$/;"	f	namespace:cv::cudev::pyramids_detail
pyrDown_	opencv2/cudev/expr/warping.hpp	/^pyrDown_(const SrcPtr& src)$/;"	f	namespace:cv::cudev
pyrUp	opencv2/cudev/grid/detail/pyr_up.hpp	/^    __global__ void pyrUp(const SrcPtr src, GlobPtr<DstType> dst, const int src_rows, const int src_cols, const int dst_rows, const int dst_cols)$/;"	f	namespace:cv::cudev::pyramids_detail
pyrUp	opencv2/cudev/grid/detail/pyr_up.hpp	/^    __host__ void pyrUp(const SrcPtr& src, const GlobPtr<DstType>& dst, int src_rows, int src_cols, int dst_rows, int dst_cols, cudaStream_t stream)$/;"	f	namespace:cv::cudev::pyramids_detail
pyrUp_	opencv2/cudev/expr/warping.hpp	/^pyrUp_(const SrcPtr& src)$/;"	f	namespace:cv::cudev
pyramid	opencv2/cudalegacy/NCVPyramid.hpp	/^    namespace pyramid$/;"	n	namespace:cv::cuda::device
pyramids_detail	opencv2/cudev/grid/detail/pyr_down.hpp	/^namespace pyramids_detail$/;"	n	namespace:cv::cudev
pyramids_detail	opencv2/cudev/grid/detail/pyr_up.hpp	/^namespace pyramids_detail$/;"	n	namespace:cv::cudev
q_reg	opencv2/core/hal/intrin.hpp	/^    typedef v_int32x4 q_reg;$/;"	t	struct:cv::V_RegTrait128
q_reg	opencv2/core/hal/intrin.hpp	/^    typedef v_uint32x4 q_reg;$/;"	t	struct:cv::V_RegTrait128
q_type	opencv2/core/hal/intrin.hpp	/^    typedef int q_type;$/;"	t	struct:cv::V_TypeTraits
q_type	opencv2/core/hal/intrin.hpp	/^    typedef unsigned q_type;$/;"	t	struct:cv::V_TypeTraits
qedges	opencv2/imgproc.hpp	/^    std::vector<QuadEdge> qedges;$/;"	m	class:cv::Subdiv2D
qsb_steals	5/parallel/settings.h	/^    _SequenceIndex              qsb_steals;$/;"	m	struct:__gnu_parallel::_Settings
quadratic_probe_fn	5/ext/pb_ds/hash_policy.hpp	/^  class quadratic_probe_fn$/;"	c	namespace:__gnu_pbds
quality	opencv2/ml.hpp	/^        float quality; \/\/!< The split quality, a positive number. It is used to choose the best split.$/;"	m	class:cv::ml::DTrees::Split
queryIdx	opencv2/core/types.hpp	/^    CV_PROP_RW int queryIdx; \/\/ query descriptor index$/;"	m	class:cv::DMatch
queue	cpp_src/stl_queue.h	/^      queue(const _Sequence& __c = _Sequence()) : c(__c) {}$/;"	f	class:std::queue
queue	cpp_src/stl_queue.h	/^    class queue$/;"	c	namespace:std
quicksort_tag	5/parallel/tags.h	/^    quicksort_tag() { }$/;"	f	struct:__gnu_parallel::quicksort_tag
quicksort_tag	5/parallel/tags.h	/^    quicksort_tag(_ThreadIndex __num_threads)$/;"	f	struct:__gnu_parallel::quicksort_tag
quicksort_tag	5/parallel/tags.h	/^  struct quicksort_tag : public parallel_tag$/;"	s	namespace:__gnu_parallel
r	opencv2/objdetect/objdetect_c.h	/^        CvRect r;$/;"	m	struct:CvHaarFeature::__anon62
rSum_	opencv2/videostab/deblurring.hpp	/^    Mat_<float> bSum_, gSum_, rSum_, wSum_;$/;"	m	class:cv::videostab::WeightingDeblurer
r_kinv	opencv2/stitching/detail/warpers.hpp	/^    float r_kinv[9];$/;"	m	struct:cv::detail::ProjectorBase
radius	opencv2/flann/kmeans_index.h	/^        DistanceType radius;$/;"	m	struct:cvflann::KMeansIndex::KMeansNode
radius	opencv2/flann/result_set.h	/^    DistanceType radius;$/;"	m	class:cvflann::RadiusResultSet
radius	opencv2/videostab/deblurring.hpp	/^    virtual int radius() const { return radius_; }$/;"	f	class:cv::videostab::DeblurerBase
radius	opencv2/videostab/inpainting.hpp	/^    virtual int radius() const { return radius_; }$/;"	f	class:cv::videostab::InpainterBase
radius	opencv2/videostab/motion_stabilizing.hpp	/^    int radius() const { return radius_; }$/;"	f	class:cv::videostab::GaussianMotionFilter
radius	opencv2/videostab/stabilizer.hpp	/^    int radius() const { return radius_; }$/;"	f	class:cv::videostab::StabilizerBase
radiusSearch	opencv2/flann.hpp	/^    FLANN_DEPRECATED int radiusSearch(const Mat& query, Mat& indices, Mat& dists, DistanceType radius, const ::cvflann::SearchParams& searchParams)$/;"	f	class:cv::flann::Index_
radiusSearch	opencv2/flann.hpp	/^    FLANN_DEPRECATED int radiusSearch(const std::vector<ElementType>& query, std::vector<int>& indices, std::vector<DistanceType>& dists, DistanceType radius, const ::cvflann::SearchParams& searchParams)$/;"	f	class:cv::flann::Index_
radiusSearch	opencv2/flann.hpp	/^int GenericIndex<Distance>::radiusSearch(const Mat& query, Mat& indices, Mat& dists, DistanceType radius, const ::cvflann::SearchParams& searchParams)$/;"	f	class:cv::flann::GenericIndex
radiusSearch	opencv2/flann.hpp	/^int GenericIndex<Distance>::radiusSearch(const std::vector<ElementType>& query, std::vector<int>& indices, std::vector<DistanceType>& dists, DistanceType radius, const ::cvflann::SearchParams& searchParams)$/;"	f	class:cv::flann::GenericIndex
radiusSearch	opencv2/flann/flann_base.hpp	/^    int radiusSearch(const Matrix<ElementType>& query, Matrix<int>& indices, Matrix<DistanceType>& dists, float radius, const SearchParams& params)$/;"	f	class:cvflann::Index
radiusSearch	opencv2/flann/nn_index.h	/^    virtual int radiusSearch(const Matrix<ElementType>& query, Matrix<int>& indices, Matrix<DistanceType>& dists, float radius, const SearchParams& params)$/;"	f	class:cvflann::NNIndex
radius_	opencv2/flann/result_set.h	/^    DistanceType radius_;$/;"	m	class:cvflann::KNNRadiusUniqueResultSet
radius_	opencv2/videostab/deblurring.hpp	/^    int radius_;$/;"	m	class:cv::videostab::DeblurerBase
radius_	opencv2/videostab/inpainting.hpp	/^    double radius_;$/;"	m	class:cv::videostab::ColorInpainter
radius_	opencv2/videostab/inpainting.hpp	/^    int radius_;$/;"	m	class:cv::videostab::InpainterBase
radius_	opencv2/videostab/motion_stabilizing.hpp	/^    int radius_;$/;"	m	class:cv::videostab::GaussianMotionFilter
radius_	opencv2/videostab/stabilizer.hpp	/^    int radius_;$/;"	m	class:cv::videostab::StabilizerBase
radiuses	opencv2/flann/kmeans_index.h	/^        std::vector<DistanceType>& radiuses;$/;"	m	class:cvflann::KMeansIndex::KMeansDistanceComputer
rand_double	opencv2/flann/random.h	/^inline double rand_double(double high = 1.0, double low = 0)$/;"	f	namespace:cvflann
rand_int	opencv2/flann/random.h	/^inline int rand_int(int high = RAND_MAX, int low = 0)$/;"	f	namespace:cvflann
randn	opencv2/core/operations.hpp	/^Matx<_Tp,m,n> Matx<_Tp,m,n>::randn(_Tp a, _Tp b)$/;"	f	class:cv::Matx
random_access_iterator_tag	cpp_src/stl_iterator_base_types.h	/^  struct random_access_iterator_tag : public bidirectional_iterator_tag {};$/;"	s	namespace:std
random_sample	opencv2/flann/sampling.h	/^Matrix<T> random_sample(Matrix<T>& srcMatrix, long size, bool remove = false)$/;"	f	namespace:cvflann
random_sample	opencv2/flann/sampling.h	/^Matrix<T> random_sample(const Matrix<T>& srcMatrix, size_t size)$/;"	f	namespace:cvflann
random_shuffle	cpp_src/stl_algo.h	/^    random_shuffle(_RandomAccessIterator __first, _RandomAccessIterator __last)$/;"	f	namespace:std
random_shuffle	cpp_src/stl_algo.h	/^    random_shuffle(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	namespace:std
random_shuffle_minimal_n	5/parallel/settings.h	/^    unsigned int                random_shuffle_minimal_n;$/;"	m	struct:__gnu_parallel::_Settings
randu	opencv2/core/operations.hpp	/^Matx<_Tp,m,n> Matx<_Tp,m,n>::randu(_Tp a, _Tp b)$/;"	f	class:cv::Matx
randu	opencv2/core/operations.hpp	/^template<typename _Tp> static inline _Tp randu()$/;"	f	namespace:cv
range_hash	5/ext/pb_ds/detail/hash_fn/mask_based_range_hashing.hpp	/^      range_hash(size_type hash) const$/;"	f	class:__gnu_pbds::detail::mask_based_range_hashing
range_hash	5/ext/pb_ds/detail/hash_fn/mod_based_range_hashing.hpp	/^      range_hash(size_type s) const$/;"	f	class:__gnu_pbds::detail::mod_based_range_hashing
range_invalidation_guarantee	5/ext/pb_ds/tag_and_trait.hpp	/^  struct range_invalidation_guarantee : public point_invalidation_guarantee$/;"	s	namespace:__gnu_pbds
range_width_	opencv2/stitching/detail/matchers.hpp	/^    int range_width_;$/;"	m	class:cv::detail::BestOf2NearestRangeMatcher
ranged_hash_fn	5/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp	/^    class ranged_hash_fn< Key, Hash_Fn, _Alloc, Comb_Hash_Fn, false> $/;"	c	namespace:__gnu_pbds::detail
ranged_hash_fn	5/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp	/^    class ranged_hash_fn<Key, Hash_Fn, _Alloc, Comb_Hash_Fn, true> $/;"	c	namespace:__gnu_pbds::detail
ranged_hash_fn	5/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp	/^    class ranged_hash_fn<Key, null_type, _Alloc, Comb_Hash_Fn, false> $/;"	c	namespace:__gnu_pbds::detail
ranged_hash_fn	5/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp	/^    class ranged_hash_fn<Key, null_type, _Alloc, Comb_Hash_Fn, true> $/;"	c	namespace:__gnu_pbds::detail
ranged_hash_fn	5/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp	/^    ranged_hash_fn(size_type size)$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
ranged_hash_fn	5/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp	/^    ranged_hash_fn(size_type size, const Comb_Hash_Fn& r_comb_hash_fn) $/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
ranged_hash_fn	5/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp	/^    ranged_hash_fn(size_type size, const Comb_Hash_Fn& r_comb_hash_fn) :$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
ranged_hash_fn	5/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp	/^    ranged_hash_fn(size_type size, const Hash_Fn& r_hash_fn) $/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
ranged_hash_fn	5/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp	/^    ranged_hash_fn(size_type size, const Hash_Fn& r_hash_fn) :$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
ranged_hash_fn	5/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp	/^    ranged_hash_fn(size_type size, const Hash_Fn& r_hash_fn, $/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
ranged_hash_fn	5/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp	/^    ranged_hash_fn(size_type size, const null_type& r_null_type, $/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
ranged_hash_fn_base	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef PB_DS_RANGED_HASH_FN_C_DEC ranged_hash_fn_base;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
ranged_probe_fn	5/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp	/^      ranged_probe_fn(size_type size)$/;"	f	class:__gnu_pbds::detail::ranged_probe_fn
ranged_probe_fn	5/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp	/^      ranged_probe_fn(size_type, const Comb_Probe_Fn& r_comb_probe_fn)$/;"	f	class:__gnu_pbds::detail::ranged_probe_fn
ranged_probe_fn	5/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp	/^      ranged_probe_fn(size_type, const null_type&, $/;"	f	class:__gnu_pbds::detail::ranged_probe_fn
ranged_probe_fn	5/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp	/^    class ranged_probe_fn<Key, Hash_Fn, _Alloc, Comb_Probe_Fn, $/;"	c	namespace:__gnu_pbds::detail
ranged_probe_fn	5/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp	/^    class ranged_probe_fn<Key, Hash_Fn, _Alloc, Comb_Probe_Fn,$/;"	c	namespace:__gnu_pbds::detail
ranged_probe_fn	5/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp	/^    class ranged_probe_fn<Key, null_type, _Alloc, Comb_Probe_Fn, $/;"	c	namespace:__gnu_pbds::detail
ranged_probe_fn	5/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp	/^    ranged_probe_fn(size_type size)$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
ranged_probe_fn	5/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp	/^    ranged_probe_fn(size_type size, const Hash_Fn& r_hash_fn) $/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
ranged_probe_fn	5/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp	/^    ranged_probe_fn(size_type size, const Hash_Fn& r_hash_fn, $/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
ranged_probe_fn_base	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef PB_DS_RANGED_PROBE_FN_C_DEC 	ranged_probe_fn_base;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
rank_	opencv2/stitching/detail/util.hpp	/^    std::vector<int> rank_;$/;"	m	class:cv::detail::DisjointSets
rank_bound	5/ext/pb_ds/detail/thin_heap_/erase_fn_imps.hpp	/^rank_bound()$/;"	f	class:PB_DS_CLASS_C_DEC
ransacParams	opencv2/videostab/global_motion.hpp	/^    RansacParams ransacParams() const { return ransacParams_; }$/;"	f	class:cv::videostab::MotionEstimatorRansacL2
ransacParams	opencv2/videostab/outlier_rejection.hpp	/^    RansacParams ransacParams() const { return ransacParams_; }$/;"	f	class:cv::videostab::TranslationBasedLocalOutlierRejector
ransacParams_	opencv2/videostab/global_motion.hpp	/^    RansacParams ransacParams_;$/;"	m	class:cv::videostab::MotionEstimatorRansacL2
ransacParams_	opencv2/videostab/outlier_rejection.hpp	/^    RansacParams ransacParams_;$/;"	m	class:cv::videostab::TranslationBasedLocalOutlierRejector
ratio	5/ext/pb_ds/detail/binary_heap_/resize_policy.hpp	/^	  ratio = 8,$/;"	e	enum:__gnu_pbds::detail::resize_policy::__anon37
raw_storage_iterator	cpp_src/stl_raw_storage_iter.h	/^      raw_storage_iterator(_ForwardIterator __x)$/;"	f	class:std::raw_storage_iterator
raw_storage_iterator	cpp_src/stl_raw_storage_iter.h	/^    class raw_storage_iterator$/;"	c	namespace:std
rb_tree_node_	5/ext/pb_ds/detail/rb_tree_map_/node.hpp	/^    struct rb_tree_node_$/;"	s	namespace:__gnu_pbds::detail
rb_tree_node_	5/ext/pb_ds/detail/rb_tree_map_/node.hpp	/^    struct rb_tree_node_<Value_Type, null_type, _Alloc>$/;"	s	namespace:__gnu_pbds::detail
rb_tree_tag	5/ext/pb_ds/tag_and_trait.hpp	/^  struct rb_tree_tag : public tree_tag { };$/;"	s	namespace:__gnu_pbds
rbegin	5/ext/pb_ds/detail/bin_search_tree_/iterators_fn_imps.hpp	/^rbegin() const$/;"	f	class:PB_DS_CLASS_C_DEC
rbegin	5/ext/pb_ds/detail/bin_search_tree_/iterators_fn_imps.hpp	/^rbegin()$/;"	f	class:PB_DS_CLASS_C_DEC
rbegin	5/ext/pb_ds/detail/pat_trie_/iterators_fn_imps.hpp	/^rbegin() const$/;"	f	class:PB_DS_CLASS_C_DEC
rbegin	5/ext/pb_ds/detail/pat_trie_/iterators_fn_imps.hpp	/^rbegin()$/;"	f	class:PB_DS_CLASS_C_DEC
rbegin	cpp_src/basic_string.h	/^      rbegin() const$/;"	f	class:std::basic_string
rbegin	cpp_src/basic_string.h	/^      rbegin()$/;"	f	class:std::basic_string
rbegin	cpp_src/stl_bvector.h	/^    rbegin() const$/;"	f	class:std::vector
rbegin	cpp_src/stl_bvector.h	/^    rbegin()$/;"	f	class:std::vector
rbegin	cpp_src/stl_deque.h	/^      rbegin() const$/;"	f	class:std::deque
rbegin	cpp_src/stl_deque.h	/^      rbegin()$/;"	f	class:std::deque
rbegin	cpp_src/stl_list.h	/^      rbegin() const$/;"	f	class:std::list
rbegin	cpp_src/stl_list.h	/^      rbegin()$/;"	f	class:std::list
rbegin	cpp_src/stl_map.h	/^      rbegin() const$/;"	f	class:std::map
rbegin	cpp_src/stl_map.h	/^      rbegin()$/;"	f	class:std::map
rbegin	cpp_src/stl_multimap.h	/^      rbegin() const$/;"	f	class:std::multimap
rbegin	cpp_src/stl_multimap.h	/^      rbegin()$/;"	f	class:std::multimap
rbegin	cpp_src/stl_multiset.h	/^      rbegin() const$/;"	f	class:std::multiset
rbegin	cpp_src/stl_set.h	/^      rbegin() const$/;"	f	class:std::set
rbegin	cpp_src/stl_tree.h	/^      rbegin() const$/;"	f	class:std::_Rb_tree
rbegin	cpp_src/stl_tree.h	/^      rbegin()$/;"	f	class:std::_Rb_tree
rbegin	cpp_src/stl_vector.h	/^      rbegin() const$/;"	f	class:std::vector
rbegin	cpp_src/stl_vector.h	/^      rbegin()$/;"	f	class:std::vector
rc	5/ext/pb_ds/detail/rc_binomial_heap_/rc.hpp	/^    class rc$/;"	c	namespace:__gnu_pbds::detail
rc	5/ext/pb_ds/detail/rc_binomial_heap_/rc.hpp	/^    rc() : m_over_top(0)$/;"	f	class:__gnu_pbds::detail::rc
rc	5/ext/pb_ds/detail/rc_binomial_heap_/rc.hpp	/^    rc(const rc<_Node, _Alloc>& other) : m_over_top(0)$/;"	f	class:__gnu_pbds::detail::rc
rc_binomial_heap	5/ext/pb_ds/detail/rc_binomial_heap_/constructors_destructor_fn_imps.hpp	/^rc_binomial_heap()$/;"	f	class:PB_DS_CLASS_C_DEC
rc_binomial_heap	5/ext/pb_ds/detail/rc_binomial_heap_/constructors_destructor_fn_imps.hpp	/^rc_binomial_heap(const Cmp_Fn& r_cmp_fn) $/;"	f	class:PB_DS_CLASS_C_DEC
rc_binomial_heap	5/ext/pb_ds/detail/rc_binomial_heap_/constructors_destructor_fn_imps.hpp	/^rc_binomial_heap(const PB_DS_CLASS_C_DEC& other) $/;"	f	class:PB_DS_CLASS_C_DEC
rc_binomial_heap	5/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp	/^    class rc_binomial_heap$/;"	c	namespace:__gnu_pbds::detail
rc_binomial_heap_tag	5/ext/pb_ds/tag_and_trait.hpp	/^  struct rc_binomial_heap_tag : public priority_queue_tag { };$/;"	s	namespace:__gnu_pbds
rc_t	5/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp	/^      typedef PB_DS_RC_C_DEC 				rc_t;$/;"	t	class:__gnu_pbds::detail::rc_binomial_heap
rckey_type	5/ext/pb_ds/detail/branch_policy/branch_policy.hpp	/^	typedef typename remove_const<key_type>::type	rckey_type;$/;"	t	struct:__gnu_pbds::detail::branch_policy
rcvalue_type	5/ext/pb_ds/detail/branch_policy/branch_policy.hpp	/^	typedef typename remove_const<value_type>::type		   rcvalue_type;$/;"	t	struct:__gnu_pbds::detail::branch_policy
rcvalue_type	5/ext/pb_ds/detail/branch_policy/branch_policy.hpp	/^	typedef typename remove_const<value_type>::type	rcvalue_type;$/;"	t	struct:__gnu_pbds::detail::branch_policy
rdbuf	cpp_src/basic_ios.h	/^      rdbuf() const$/;"	f	class:std::basic_ios
rdstate	cpp_src/basic_ios.h	/^      rdstate() const$/;"	f	class:std::basic_ios
re	opencv2/core/types.hpp	/^    _Tp re, im; \/\/< the real and the imaginary parts$/;"	m	class:cv::Complex
read	opencv2/core.hpp	/^    template<typename _Tp> static Ptr<_Tp> read(const FileNode& fn)$/;"	f	class:cv::Algorithm
read	opencv2/core.hpp	/^    virtual void read(const FileNode& fn) { (void)fn; }$/;"	f	class:cv::Algorithm
read	opencv2/core/persistence.hpp	/^static inline void read(const FileNode& node, Range& value, const Range& default_value)$/;"	f	namespace:cv
read	opencv2/core/persistence.hpp	/^template<typename _Tp, int cn> static inline void read(const FileNode& node, Vec<_Tp, cn>& value, const Vec<_Tp, cn>& default_value)$/;"	f	namespace:cv
read	opencv2/core/persistence.hpp	/^template<typename _Tp> static inline void read(const FileNode& node, Complex<_Tp>& value, const Complex<_Tp>& default_value)$/;"	f	namespace:cv
read	opencv2/core/persistence.hpp	/^template<typename _Tp> static inline void read(const FileNode& node, Point3_<_Tp>& value, const Point3_<_Tp>& default_value)$/;"	f	namespace:cv
read	opencv2/core/persistence.hpp	/^template<typename _Tp> static inline void read(const FileNode& node, Point_<_Tp>& value, const Point_<_Tp>& default_value)$/;"	f	namespace:cv
read	opencv2/core/persistence.hpp	/^template<typename _Tp> static inline void read(const FileNode& node, Rect_<_Tp>& value, const Rect_<_Tp>& default_value)$/;"	f	namespace:cv
read	opencv2/core/persistence.hpp	/^template<typename _Tp> static inline void read(const FileNode& node, Scalar_<_Tp>& value, const Scalar_<_Tp>& default_value)$/;"	f	namespace:cv
read	opencv2/core/persistence.hpp	/^template<typename _Tp> static inline void read(const FileNode& node, Size_<_Tp>& value, const Size_<_Tp>& default_value)$/;"	f	namespace:cv
read	opencv2/core/persistence.hpp	/^void read( FileNodeIterator& it, std::vector<_Tp>& vec, size_t maxCount = (size_t)INT_MAX )$/;"	f	namespace:cv
read	opencv2/core/persistence.hpp	/^void read( const FileNode& node, std::vector<_Tp>& vec, const std::vector<_Tp>& default_value = std::vector<_Tp>() )$/;"	f	namespace:cv
read	opencv2/core/persistence.hpp	/^void read(const FileNode& node, bool& value, bool default_value)$/;"	f	namespace:cv
read	opencv2/core/persistence.hpp	/^void read(const FileNode& node, schar& value, schar default_value)$/;"	f	namespace:cv
read	opencv2/core/persistence.hpp	/^void read(const FileNode& node, short& value, short default_value)$/;"	f	namespace:cv
read	opencv2/core/persistence.hpp	/^void read(const FileNode& node, uchar& value, uchar default_value)$/;"	f	namespace:cv
read	opencv2/core/persistence.hpp	/^void read(const FileNode& node, ushort& value, ushort default_value)$/;"	f	namespace:cv
read	opencv2/core/types_c.h	/^    CvReadFunc read; \/**< reads object from file storage *\/$/;"	m	struct:CvTypeInfo
read	opencv2/features2d.hpp	/^    CV_WRAP void read( const String& fileName )$/;"	f	class:cv::DescriptorMatcher
readRaw	opencv2/core/persistence.hpp	/^inline void FileNode::readRaw( const String& fmt, uchar* vec, size_t len ) const { begin().readRaw( fmt, vec, len ); }$/;"	f	class:cv::FileNode
read_type	opencv2/core/cuda/detail/transform_detail.hpp	/^            typedef typename TypeVec<T, shift>::vec_type read_type;$/;"	t	struct:cv::cuda::device::transform_detail::UnaryReadWriteTraits
read_type1	opencv2/core/cuda/detail/transform_detail.hpp	/^            typedef typename TypeVec<T1, shift>::vec_type read_type1;$/;"	t	struct:cv::cuda::device::transform_detail::BinaryReadWriteTraits
read_type2	opencv2/core/cuda/detail/transform_detail.hpp	/^            typedef typename TypeVec<T2, shift>::vec_type read_type2;$/;"	t	struct:cv::cuda::device::transform_detail::BinaryReadWriteTraits
reader	opencv2/core/core_c.h	/^CVAPI(int)  cvGetSeqReaderPos( CvSeqReader* reader );$/;"	v
reader	opencv2/core/persistence.hpp	/^    SeqReader reader;$/;"	m	class:cv::FileNodeIterator
reader	opencv2/imgproc/imgproc_c.h	/^CVAPI(CvPoint) cvReadChainPoint( CvChainPtReader* reader );$/;"	v
real	opencv2/core/persistence.hpp	/^inline double FileNode::real() const  { return double(*this); }$/;"	f	class:cv::FileNode
real_window_size	opencv2/objdetect/objdetect_c.h	/^    CvSize real_window_size;$/;"	m	struct:CvHaarClassifierCascade
reallocate_metadata	5/ext/pb_ds/detail/ov_tree_map_/insert_fn_imps.hpp	/^reallocate_metadata(Node_Update_* , size_type new_size)$/;"	f	class:PB_DS_CLASS_C_DEC
reallocate_metadata	5/ext/pb_ds/detail/ov_tree_map_/insert_fn_imps.hpp	/^reallocate_metadata(null_node_update_pointer, size_type)$/;"	f	class:PB_DS_CLASS_C_DEC
rebind	cpp_src/allocator.h	/^        struct rebind$/;"	s	class:std::allocator
rebind	opencv2/core/cvstd.hpp	/^    template<typename U> class rebind { typedef Allocator<U> other; };$/;"	c	class:cv::Allocator
rebind	opencv2/cudev/grid/reduce_to_vec.hpp	/^    template <typename U> struct rebind$/;"	s	struct:cv::cudev::Avg
rebind	opencv2/cudev/grid/reduce_to_vec.hpp	/^    template <typename U> struct rebind$/;"	s	struct:cv::cudev::Max
rebind	opencv2/cudev/grid/reduce_to_vec.hpp	/^    template <typename U> struct rebind$/;"	s	struct:cv::cudev::Min
rebind	opencv2/cudev/grid/reduce_to_vec.hpp	/^    template <typename U> struct rebind$/;"	s	struct:cv::cudev::Sum
rebind_k	5/ext/pb_ds/detail/branch_policy/branch_policy.hpp	/^	typedef typename _Alloc::template rebind<rckey_type>::other   rebind_k;$/;"	t	struct:__gnu_pbds::detail::branch_policy
rebind_v	5/ext/pb_ds/detail/branch_policy/branch_policy.hpp	/^	typedef typename _Alloc::template rebind<rcvalue_type>::other rebind_v;$/;"	t	struct:__gnu_pbds::detail::branch_policy
rec_join	5/ext/pb_ds/detail/pat_trie_/insert_join_fn_imps.hpp	/^rec_join(inode_pointer p_l, inode_pointer p_r, $/;"	f	class:PB_DS_CLASS_C_DEC
rec_join	5/ext/pb_ds/detail/pat_trie_/insert_join_fn_imps.hpp	/^rec_join(inode_pointer p_l, leaf_pointer p_r, size_type checked_ind, branch_bag& r_bag)$/;"	f	class:PB_DS_CLASS_C_DEC
rec_join	5/ext/pb_ds/detail/pat_trie_/insert_join_fn_imps.hpp	/^rec_join(leaf_pointer p_l, inode_pointer p_r, size_type checked_ind,$/;"	f	class:PB_DS_CLASS_C_DEC
rec_join	5/ext/pb_ds/detail/pat_trie_/insert_join_fn_imps.hpp	/^rec_join(leaf_pointer p_l, leaf_pointer p_r, branch_bag& r_bag)$/;"	f	class:PB_DS_CLASS_C_DEC
rec_join	5/ext/pb_ds/detail/pat_trie_/insert_join_fn_imps.hpp	/^rec_join(node_pointer p_l, node_pointer p_r, size_type checked_ind, $/;"	f	class:PB_DS_CLASS_C_DEC
rec_join_prep	5/ext/pb_ds/detail/pat_trie_/insert_join_fn_imps.hpp	/^rec_join_prep(inode_const_pointer \/*p_l*\/, leaf_const_pointer \/*p_r*\/,$/;"	f	class:PB_DS_CLASS_C_DEC
rec_join_prep	5/ext/pb_ds/detail/pat_trie_/insert_join_fn_imps.hpp	/^rec_join_prep(inode_const_pointer p_l, inode_const_pointer p_r,$/;"	f	class:PB_DS_CLASS_C_DEC
rec_join_prep	5/ext/pb_ds/detail/pat_trie_/insert_join_fn_imps.hpp	/^rec_join_prep(leaf_const_pointer \/*p_l*\/, inode_const_pointer \/*p_r*\/,$/;"	f	class:PB_DS_CLASS_C_DEC
rec_join_prep	5/ext/pb_ds/detail/pat_trie_/insert_join_fn_imps.hpp	/^rec_join_prep(leaf_const_pointer \/*p_l*\/, leaf_const_pointer \/*p_r*\/,$/;"	f	class:PB_DS_CLASS_C_DEC
rec_join_prep	5/ext/pb_ds/detail/pat_trie_/insert_join_fn_imps.hpp	/^rec_join_prep(node_const_pointer p_l, node_const_pointer p_r, $/;"	f	class:PB_DS_CLASS_C_DEC
rec_split	5/ext/pb_ds/detail/pat_trie_/split_fn_imps.hpp	/^rec_split(node_pointer p_nd, a_const_iterator b_it, a_const_iterator e_it,$/;"	f	class:PB_DS_CLASS_C_DEC
recentEdge	opencv2/imgproc.hpp	/^    int recentEdge;$/;"	m	class:cv::Subdiv2D
recordAssetWriter	opencv2/videoio/cap_ios.h	/^@property (nonatomic, strong) AVAssetWriter* recordAssetWriter;$/;"	v
recordAssetWriterInput	opencv2/videoio/cap_ios.h	/^@property (nonatomic, strong) AVAssetWriterInput* recordAssetWriterInput;$/;"	v
recordPixelBufferAdaptor	opencv2/videoio/cap_ios.h	/^@property (nonatomic, strong) AVAssetWriterInputPixelBufferAdaptor* recordPixelBufferAdaptor;$/;"	v
recordVideo	opencv2/videoio/cap_ios.h	/^@property (nonatomic, assign) BOOL recordVideo;$/;"	v
rect	opencv2/imgproc/types_c.h	/^    CvRect rect;    \/**<ROI of the component  *\/$/;"	m	struct:CvConnectedComp
rect	opencv2/objdetect/objdetect_c.h	/^    CvRect rect;$/;"	m	struct:CvAvgComp
rect	opencv2/objdetect/objdetect_c.h	/^    } rect[CV_HAAR_FEATURE_MAX];$/;"	m	struct:CvHaarFeature	typeref:struct:CvHaarFeature::__anon62
recursive_copy_node	5/ext/pb_ds/detail/bin_search_tree_/constructors_destructor_fn_imps.hpp	/^recursive_copy_node(const node_pointer p_nd)$/;"	f	class:PB_DS_CLASS_C_DEC
recursive_copy_node	5/ext/pb_ds/detail/left_child_next_sibling_heap_/constructors_destructor_fn_imps.hpp	/^recursive_copy_node(node_const_pointer p_nd)$/;"	f	class:PB_DS_CLASS_C_DEC
recursive_copy_node	5/ext/pb_ds/detail/pat_trie_/constructors_destructor_fn_imps.hpp	/^recursive_copy_node(node_const_pointer p_ncp)$/;"	f	class:PB_DS_CLASS_C_DEC
recursive_count	5/ext/pb_ds/detail/bin_search_tree_/split_join_fn_imps.hpp	/^recursive_count(node_pointer p) const$/;"	f	class:PB_DS_CLASS_C_DEC
recursive_count_leafs	5/ext/pb_ds/detail/pat_trie_/debug_fn_imps.hpp	/^recursive_count_leafs(node_const_pointer p_nd, const char* __file, int __line)$/;"	f	class:PB_DS_CLASS_C_DEC
recursive_init_error	5/cxxabi.h	/^    recursive_init_error() throw() { }$/;"	f	class:__gnu_cxx::recursive_init_error
recursive_init_error	5/cxxabi.h	/^  class recursive_init_error: public std::exception$/;"	c	namespace:__gnu_cxx
reduce	opencv2/core/cuda/block.hpp	/^        static __device__ __forceinline__ T reduce(volatile T* buffer, T init, BinOp op)$/;"	f	struct:cv::cuda::device::Block
reduce	opencv2/core/cuda/block.hpp	/^        static __device__ __forceinline__ void reduce(volatile T* buffer, BinOp op)$/;"	f	struct:cv::cuda::device::Block
reduce	opencv2/core/cuda/detail/reduce.hpp	/^            static __device__ void reduce(Pointer smem, Reference val, unsigned int tid, Op op)$/;"	f	struct:cv::cuda::device::reduce_detail::Generic
reduce	opencv2/core/cuda/detail/reduce.hpp	/^            static __device__ void reduce(Pointer smem, Reference val, unsigned int tid, Op op)$/;"	f	struct:cv::cuda::device::reduce_detail::GenericOptimized32
reduce	opencv2/core/cuda/detail/reduce.hpp	/^            static __device__ void reduce(Pointer smem, Reference val, unsigned int tid, Op op)$/;"	f	struct:cv::cuda::device::reduce_detail::WarpOptimized
reduce	opencv2/core/cuda/detail/reduce_key_val.hpp	/^            static __device__ void reduce(KP skeys, KR key, VP svals, VR val, unsigned int tid, Cmp cmp)$/;"	f	struct:cv::cuda::device::reduce_key_val_detail::Generic
reduce	opencv2/core/cuda/detail/reduce_key_val.hpp	/^            static __device__ void reduce(KP skeys, KR key, VP svals, VR val, unsigned int tid, Cmp cmp)$/;"	f	struct:cv::cuda::device::reduce_key_val_detail::GenericOptimized32
reduce	opencv2/core/cuda/detail/reduce_key_val.hpp	/^            static __device__ void reduce(KP skeys, KR key, VP svals, VR val, unsigned int tid, Cmp cmp)$/;"	f	struct:cv::cuda::device::reduce_key_val_detail::WarpOptimized
reduce	opencv2/core/cuda/reduce.hpp	/^    __device__ __forceinline__ void reduce(const thrust::tuple<P0, P1, P2, P3, P4, P5, P6, P7, P8, P9>& smem,$/;"	f	namespace:cv::cuda::device
reduce	opencv2/core/cuda/reduce.hpp	/^    __device__ __forceinline__ void reduce(volatile T* smem, T& val, unsigned int tid, const Op& op)$/;"	f	namespace:cv::cuda::device
reduce	opencv2/core/cuda/warp.hpp	/^        static __device__ __forceinline__ T reduce(volatile T *ptr, BinOp op)$/;"	f	struct:cv::cuda::device::Warp
reduce	opencv2/cudev/block/detail/reduce.hpp	/^        __device__ static void reduce(Pointer smem, Reference val, uint tid, Op op)$/;"	f	struct:cv::cudev::block_reduce_detail::Generic
reduce	opencv2/cudev/block/detail/reduce.hpp	/^        __device__ static void reduce(Pointer smem, Reference val, uint tid, Op op)$/;"	f	struct:cv::cudev::block_reduce_detail::GenericOptimized32
reduce	opencv2/cudev/block/detail/reduce.hpp	/^        __device__ static void reduce(Pointer smem, Reference val, uint tid, Op op)$/;"	f	struct:cv::cudev::block_reduce_detail::WarpOptimized
reduce	opencv2/cudev/block/detail/reduce_key_val.hpp	/^        __device__ static void reduce(KP skeys, KR key, VP svals, VR val, uint tid, Cmp cmp)$/;"	f	struct:cv::cudev::block_reduce_key_val_detail::Generic
reduce	opencv2/cudev/block/detail/reduce_key_val.hpp	/^        __device__ static void reduce(KP skeys, KR key, VP svals, VR val, uint tid, Cmp cmp)$/;"	f	struct:cv::cudev::block_reduce_key_val_detail::GenericOptimized32
reduce	opencv2/cudev/block/detail/reduce_key_val.hpp	/^        __device__ static void reduce(KP skeys, KR key, VP svals, VR val, uint tid, Cmp cmp)$/;"	f	struct:cv::cudev::block_reduce_key_val_detail::WarpOptimized
reduce	opencv2/cudev/grid/detail/reduce.hpp	/^    __global__ void reduce(const SrcPtr src, ResType* result, const MaskPtr mask, const int rows, const int cols)$/;"	f	namespace:cv::cudev::grid_reduce_detail
reduce	opencv2/cudev/grid/detail/reduce.hpp	/^    __host__ void reduce(const SrcPtr& src, ResType* result, const MaskPtr& mask, int rows, int cols, cudaStream_t stream)$/;"	f	namespace:cv::cudev::grid_reduce_detail
reduce	opencv2/cudev/warp/detail/reduce.hpp	/^        __device__ static void reduce(Pointer smem, Reference val, uint tid, Op op)$/;"	f	struct:cv::cudev::warp_reduce_detail::WarpReductor
reduce	opencv2/cudev/warp/detail/reduce_key_val.hpp	/^        __device__ static void reduce(KP skeys, KR key, VP svals, VR val, uint tid, Cmp cmp)$/;"	f	struct:cv::cudev::warp_reduce_key_val_detail::WarpReductor
reduceAll	opencv2/core/cuda/vec_distance.hpp	/^        template <int THREAD_DIM> __device__ __forceinline__ void reduceAll(float* smem, int tid)$/;"	f	struct:cv::cuda::device::L1Dist
reduceAll	opencv2/core/cuda/vec_distance.hpp	/^        template <int THREAD_DIM> __device__ __forceinline__ void reduceAll(float* smem, int tid)$/;"	f	struct:cv::cuda::device::L2Dist
reduceAll	opencv2/core/cuda/vec_distance.hpp	/^        template <int THREAD_DIM> __device__ __forceinline__ void reduceAll(int* smem, int tid)$/;"	f	struct:cv::cuda::device::HammingDist
reduceAll	opencv2/core/cuda/vec_distance.hpp	/^        template <int THREAD_DIM> __device__ __forceinline__ void reduceAll(int* smem, int tid)$/;"	f	struct:cv::cuda::device::L1Dist
reduceBlock	opencv2/cudev/block/vec_distance.hpp	/^    template <int THREAD_DIM> __device__ __forceinline__ void reduceBlock(result_type* smem, uint tid)$/;"	f	struct:cv::cudev::NormHamming
reduceBlock	opencv2/cudev/block/vec_distance.hpp	/^    template <int THREAD_DIM> __device__ __forceinline__ void reduceBlock(result_type* smem, uint tid)$/;"	f	struct:cv::cudev::NormL1
reduceBlock	opencv2/cudev/block/vec_distance.hpp	/^    template <int THREAD_DIM> __device__ __forceinline__ void reduceBlock(result_type* smem, uint tid)$/;"	f	struct:cv::cudev::NormL2
reduceGrid	opencv2/cudev/grid/detail/reduce.hpp	/^        __device__ void reduceGrid(work_elem_type* result, int tid)$/;"	f	struct:cv::cudev::grid_reduce_detail::SumReductor
reduceGrid	opencv2/cudev/grid/detail/reduce.hpp	/^        __device__ void reduceGrid(work_type* result, int tid)$/;"	f	struct:cv::cudev::grid_reduce_detail::MinMaxReductor
reduceIter	opencv2/core/cuda/vec_distance.hpp	/^        __device__ __forceinline__ void reduceIter(float val1, float val2)$/;"	f	struct:cv::cuda::device::L1Dist
reduceIter	opencv2/core/cuda/vec_distance.hpp	/^        __device__ __forceinline__ void reduceIter(float val1, float val2)$/;"	f	struct:cv::cuda::device::L2Dist
reduceIter	opencv2/core/cuda/vec_distance.hpp	/^        __device__ __forceinline__ void reduceIter(int val1, int val2)$/;"	f	struct:cv::cuda::device::HammingDist
reduceIter	opencv2/core/cuda/vec_distance.hpp	/^        __device__ __forceinline__ void reduceIter(int val1, int val2)$/;"	f	struct:cv::cuda::device::L1Dist
reduceKeyVal	opencv2/core/cuda/reduce.hpp	/^    __device__ __forceinline__ void reduceKeyVal(const thrust::tuple<KP0, KP1, KP2, KP3, KP4, KP5, KP6, KP7, KP8, KP9>& skeys,$/;"	f	namespace:cv::cuda::device
reduceKeyVal	opencv2/core/cuda/reduce.hpp	/^    __device__ __forceinline__ void reduceKeyVal(volatile K* skeys, K& key, volatile V* svals, V& val, unsigned int tid, const Cmp& cmp)$/;"	f	namespace:cv::cuda::device
reduceKeyVal	opencv2/core/cuda/reduce.hpp	/^    __device__ __forceinline__ void reduceKeyVal(volatile K* skeys, K& key,$/;"	f	namespace:cv::cuda::device
reduceThread	opencv2/cudev/block/vec_distance.hpp	/^    __device__ __forceinline__ void reduceThread(value_type val1, value_type val2)$/;"	f	struct:cv::cudev::NormHamming
reduceThread	opencv2/cudev/block/vec_distance.hpp	/^    __device__ __forceinline__ void reduceThread(value_type val1, value_type val2)$/;"	f	struct:cv::cudev::NormL1
reduceThread	opencv2/cudev/block/vec_distance.hpp	/^    __device__ __forceinline__ void reduceThread(value_type val1, value_type val2)$/;"	f	struct:cv::cudev::NormL2
reduceToColumn	opencv2/cudev/grid/detail/reduce_to_column.hpp	/^    __global__ void reduceToColumn(const SrcPtr src, ResType* dst, const MaskPtr mask, const int cols)$/;"	f	namespace:cv::cudev::grid_reduce_to_vec_detail
reduceToColumn	opencv2/cudev/grid/detail/reduce_to_column.hpp	/^    __host__ void reduceToColumn(const SrcPtr& src, ResType* dst, const MaskPtr& mask, int rows, int cols, cudaStream_t stream)$/;"	f	namespace:cv::cudev::grid_reduce_to_vec_detail
reduceToColumn_	opencv2/cudev/expr/reduction.hpp	/^reduceToColumn_(const SrcPtr& src)$/;"	f	namespace:cv::cudev
reduceToRow	opencv2/cudev/grid/detail/reduce_to_row.hpp	/^    __global__ void reduceToRow(const SrcPtr src, ResType* dst, const MaskPtr mask, const int rows, const int cols)$/;"	f	namespace:cv::cudev::grid_reduce_to_vec_detail
reduceToRow	opencv2/cudev/grid/detail/reduce_to_row.hpp	/^    __host__ void reduceToRow(const SrcPtr& src, ResType* dst, const MaskPtr& mask, int rows, int cols, cudaStream_t stream)$/;"	f	namespace:cv::cudev::grid_reduce_to_vec_detail
reduceToRow_	opencv2/cudev/expr/reduction.hpp	/^reduceToRow_(const SrcPtr& src)$/;"	f	namespace:cv::cudev
reduceVal	opencv2/cudev/grid/detail/reduce.hpp	/^        __device__ __forceinline__ void reduceVal(typename TypeTraits<src_type>::parameter_type srcVal)$/;"	f	struct:cv::cudev::grid_reduce_detail::MinMaxReductor
reduceVal	opencv2/cudev/grid/detail/reduce.hpp	/^        __device__ __forceinline__ void reduceVal(typename TypeTraits<src_type>::parameter_type srcVal)$/;"	f	struct:cv::cudev::grid_reduce_detail::SumReductor
reduceWarp	opencv2/cudev/block/vec_distance.hpp	/^    __device__ __forceinline__ void reduceWarp(result_type* smem, uint tid)$/;"	f	struct:cv::cudev::NormHamming
reduceWarp	opencv2/cudev/block/vec_distance.hpp	/^    __device__ __forceinline__ void reduceWarp(result_type* smem, uint tid)$/;"	f	struct:cv::cudev::NormL1
reduceWarp	opencv2/cudev/block/vec_distance.hpp	/^    __device__ __forceinline__ void reduceWarp(result_type* smem, uint tid)$/;"	f	struct:cv::cudev::NormL2
reduce_detail	opencv2/core/cuda/detail/reduce.hpp	/^    namespace reduce_detail$/;"	n	namespace:cv::cuda::device
reduce_key_val_detail	opencv2/core/cuda/detail/reduce_key_val.hpp	/^    namespace reduce_key_val_detail$/;"	n	namespace:cv::cuda::device
reduce_n	opencv2/core/cuda/block.hpp	/^        static __device__ __forceinline__ void reduce_n(T* data, unsigned int n, BinOp op)$/;"	f	struct:cv::cuda::device::Block
ref	opencv2/core/mat.inl.hpp	/^_Tp& SparseMat::ref(const int* idx, size_t* hashval)$/;"	f	class:cv::SparseMat
ref	opencv2/core/mat.inl.hpp	/^_Tp& SparseMat::ref(int i0, int i1, int i2, size_t* hashval)$/;"	f	class:cv::SparseMat
ref	opencv2/core/mat.inl.hpp	/^_Tp& SparseMat::ref(int i0, int i1, size_t* hashval)$/;"	f	class:cv::SparseMat
ref	opencv2/core/mat.inl.hpp	/^_Tp& SparseMat::ref(int i0, size_t* hashval)$/;"	f	class:cv::SparseMat
ref	opencv2/core/mat.inl.hpp	/^_Tp& SparseMat_<_Tp>::ref(const int* idx, size_t* hashval)$/;"	f	class:cv::SparseMat_
ref	opencv2/core/mat.inl.hpp	/^_Tp& SparseMat_<_Tp>::ref(int i0, int i1, int i2, size_t* hashval)$/;"	f	class:cv::SparseMat_
ref	opencv2/core/mat.inl.hpp	/^_Tp& SparseMat_<_Tp>::ref(int i0, int i1, size_t* hashval)$/;"	f	class:cv::SparseMat_
ref	opencv2/core/mat.inl.hpp	/^_Tp& SparseMat_<_Tp>::ref(int i0, size_t* hashval)$/;"	f	class:cv::SparseMat_
ref	opencv2/cudev/ptr2d/texture.hpp	/^        static TexRef ref;$/;"	m	struct:__anon406::CvCudevTextureRef
ref	opencv2/cudev/ptr2d/texture.hpp	/^    typename CvCudevTextureRef<T>::TexRef CvCudevTextureRef<T>::ref;$/;"	m	class:__anon406::CvCudevTextureRef
refCount	opencv2/core/ptr.inl.hpp	/^    unsigned int refCount;$/;"	m	struct:cv::detail::PtrOwner
refcount	opencv2/core/cuda.hpp	/^    int* refcount;$/;"	m	class:cv::cuda::GpuMat
refcount	opencv2/core/cuda.hpp	/^    int* refcount;$/;"	m	class:cv::cuda::HostMem
refcount	opencv2/core/mat.hpp	/^        int refcount;$/;"	m	struct:cv::SparseMat::Hdr
refcount	opencv2/core/mat.hpp	/^    int refcount;$/;"	m	struct:cv::UMatData
refcount	opencv2/core/types_c.h	/^    int* refcount;$/;"	m	struct:CvMat
refcount	opencv2/core/types_c.h	/^    int* refcount;$/;"	m	struct:CvMatND
refcount	opencv2/core/types_c.h	/^    int* refcount;$/;"	m	struct:CvSparseMat
reference	5/debug/safe_iterator.h	/^      typedef typename _Traits::reference		reference;$/;"	t	class:__gnu_debug::_Safe_iterator
reference	5/debug/safe_local_iterator.h	/^      typedef typename _Traits::reference		reference;$/;"	t	class:__gnu_debug::_Safe_local_iterator
reference	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	/^      typedef typename traits_base::reference 		reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_BIN_TREE_NAME
reference	5/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp	/^      typedef Const_Iterator reference;$/;"	t	class:__gnu_pbds::detail::bin_search_tree_const_node_it_
reference	5/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp	/^      typedef Iterator reference;$/;"	t	class:__gnu_pbds::detail::bin_search_tree_node_it_
reference	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	/^      typedef Reference 				reference;$/;"	t	class:__gnu_pbds::detail::bin_search_tree_const_it_
reference	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	/^      typedef typename value_allocator::reference	reference;$/;"	t	class:__gnu_pbds::detail::binary_heap
reference	5/ext/pb_ds/detail/binary_heap_/const_iterator.hpp	/^      typedef typename base_type::reference 		reference;$/;"	t	class:__gnu_pbds::detail::binary_heap_const_iterator_
reference	5/ext/pb_ds/detail/binary_heap_/point_const_iterator.hpp	/^      reference;$/;"	t	class:__gnu_pbds::detail::binary_heap_point_const_iterator_
reference	5/ext/pb_ds/detail/binomial_heap_/binomial_heap_.hpp	/^      typedef typename base_type::reference 		reference;$/;"	t	class:__gnu_pbds::detail::binomial_heap
reference	5/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp	/^      typedef typename __rebind_v::reference 		reference;$/;"	t	class:__gnu_pbds::detail::binomial_heap_base
reference	5/ext/pb_ds/detail/branch_policy/branch_policy.hpp	/^	typedef	typename rebind_v::reference 		reference;$/;"	t	struct:__gnu_pbds::detail::branch_policy
reference	5/ext/pb_ds/detail/branch_policy/null_node_metadata.hpp	/^	typedef const_reference 	       		reference;$/;"	t	struct:__gnu_pbds::detail::dumnode_const_iterator
reference	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef typename traits_base::reference 	reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
reference	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef typename traits_base::reference reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
reference	5/ext/pb_ds/detail/left_child_next_sibling_heap_/const_iterator.hpp	/^      typedef typename base_type::reference 		reference;$/;"	t	class:__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_
reference	5/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp	/^      typedef typename __rebind_v::other::reference	reference;$/;"	t	class:__gnu_pbds::detail::left_child_next_sibling_heap
reference	5/ext/pb_ds/detail/left_child_next_sibling_heap_/point_const_iterator.hpp	/^      reference;$/;"	t	class:__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_
reference	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      typedef typename traits_base::reference reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_LU_NAME
reference	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	/^      reference;$/;"	t	class:__gnu_pbds::detail::ov_tree_node_const_it_
reference	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	/^      reference;$/;"	t	class:__gnu_pbds::detail::ov_tree_node_it_
reference	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      typedef typename traits_base::reference 		reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
reference	5/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp	/^      typedef typename __rebind_a::reference		reference;$/;"	t	class:__gnu_pbds::detail::pairing_heap
reference	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename traits_base::reference 		reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
reference	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	typedef node_pointer_reference 			reference;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Inode::const_iterator
reference	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	typedef node_pointer_reference 			reference;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Inode::iterator
reference	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename type_traits::reference			reference;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Leaf
reference	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename type_traits::reference 		reference;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_CIter
reference	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename type_traits::reference 		reference;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_Iter
reference	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef value_type 				reference;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_Node_citer
reference	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef value_type 				reference;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_Node_iter
reference	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	/^      typedef typename base_type::reference 		 reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_RB_TREE_NAME
reference	5/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp	/^      typedef typename base_type::reference 		reference;$/;"	t	class:__gnu_pbds::detail::rc_binomial_heap
reference	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	/^      typedef typename base_type::reference 	 	 reference;$/;"	t	class:__gnu_pbds::detail::PB_DS_S_TREE_NAME
reference	5/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp	/^      typedef typename __rebind_a::reference		reference;$/;"	t	class:__gnu_pbds::detail::thin_heap
reference	5/ext/pb_ds/detail/types_traits.hpp	/^	typedef typename __rebind_va::reference 	reference;$/;"	t	struct:__gnu_pbds::detail::type_base
reference	5/ext/pb_ds/detail/unordered_iterator/const_iterator.hpp	/^  typedef reference_ reference;$/;"	t	class:const_iterator_
reference	5/ext/pb_ds/detail/unordered_iterator/iterator.hpp	/^  typedef reference_ reference;$/;"	t	class:iterator_
reference	5/ext/pb_ds/detail/unordered_iterator/point_const_iterator.hpp	/^  typedef reference_ reference;$/;"	t	class:point_const_iterator_
reference	5/ext/pb_ds/detail/unordered_iterator/point_iterator.hpp	/^  typedef reference_ reference;$/;"	t	class:point_iterator_
reference	5/ext/pb_ds/priority_queue.hpp	/^    typedef typename __rebind_va::reference 		reference;$/;"	t	class:__gnu_pbds::priority_queue
reference	5/parallel/iterator.h	/^      typedef _IteratorPair& reference;$/;"	t	class:__gnu_parallel::_IteratorPair
reference	5/parallel/iterator.h	/^      typedef _IteratorTriple& reference;$/;"	t	class:__gnu_parallel::_IteratorTriple
reference	cpp_src/allocator.h	/^      typedef _Tp&       reference;$/;"	t	class:std::allocator
reference	cpp_src/basic_string.h	/^      typedef typename _CharT_alloc_type::reference	    reference;$/;"	t	class:std::basic_string
reference	cpp_src/stl_bvector.h	/^    typedef _Bit_reference                               reference;$/;"	t	class:std::vector
reference	cpp_src/stl_bvector.h	/^    typedef _Bit_reference  reference;$/;"	t	struct:std::_Bit_iterator
reference	cpp_src/stl_bvector.h	/^    typedef bool                 reference;$/;"	t	struct:std::_Bit_const_iterator
reference	cpp_src/stl_deque.h	/^      typedef _Ref                            reference;$/;"	t	struct:std::_Deque_iterator
reference	cpp_src/stl_deque.h	/^      typedef typename _Tp_alloc_type::reference         reference;$/;"	t	class:std::deque
reference	cpp_src/stl_iterator.h	/^      typedef typename iterator_traits<_Iterator>::reference   reference;$/;"	t	class:std::reverse_iterator
reference	cpp_src/stl_iterator.h	/^      typedef typename iterator_traits<_Iterator>::reference reference;$/;"	t	class:__normal_iterator
reference	cpp_src/stl_iterator_base_types.h	/^      typedef _Reference reference;$/;"	t	struct:std::iterator
reference	cpp_src/stl_iterator_base_types.h	/^      typedef _Tp&                        reference;$/;"	t	struct:std::iterator_traits
reference	cpp_src/stl_iterator_base_types.h	/^      typedef const _Tp&                  reference;$/;"	t	struct:std::iterator_traits
reference	cpp_src/stl_iterator_base_types.h	/^      typedef typename _Iterator::reference         reference;$/;"	t	struct:std::iterator_traits
reference	cpp_src/stl_list.h	/^      typedef _Tp&                               reference;$/;"	t	struct:std::_List_iterator
reference	cpp_src/stl_list.h	/^      typedef const _Tp&                         reference;$/;"	t	struct:std::_List_const_iterator
reference	cpp_src/stl_list.h	/^      typedef typename _Tp_alloc_type::reference         reference;$/;"	t	class:std::list
reference	cpp_src/stl_map.h	/^      typedef typename _Pair_alloc_type::reference       reference;$/;"	t	class:std::map
reference	cpp_src/stl_multimap.h	/^      typedef typename _Pair_alloc_type::reference       reference;$/;"	t	class:std::multimap
reference	cpp_src/stl_multiset.h	/^      typedef typename _Key_alloc_type::reference           reference;$/;"	t	class:std::multiset
reference	cpp_src/stl_queue.h	/^      typedef typename _Sequence::reference                 reference;$/;"	t	class:std::priority_queue
reference	cpp_src/stl_queue.h	/^      typedef typename _Sequence::reference                 reference;$/;"	t	class:std::queue
reference	cpp_src/stl_set.h	/^      typedef typename _Key_alloc_type::reference           reference;$/;"	t	class:std::set
reference	cpp_src/stl_stack.h	/^      typedef typename _Sequence::reference                 reference;$/;"	t	class:std::stack
reference	cpp_src/stl_tree.h	/^      typedef _Tp& reference;$/;"	t	struct:std::_Rb_tree_iterator
reference	cpp_src/stl_tree.h	/^      typedef const _Tp& reference;$/;"	t	struct:std::_Rb_tree_const_iterator
reference	cpp_src/stl_tree.h	/^      typedef value_type& reference;$/;"	t	class:std::_Rb_tree
reference	cpp_src/stl_vector.h	/^      typedef typename _Tp_alloc_type::reference         reference;$/;"	t	class:std::vector
reference	opencv2/core/cvstd.hpp	/^    typedef char& reference;$/;"	t	class:cv::String
reference	opencv2/core/cvstd.hpp	/^    typedef value_type& reference;$/;"	t	class:cv::Allocator
reference	opencv2/core/mat.hpp	/^    typedef _Tp& reference;$/;"	t	class:cv::MatIterator_
reference	opencv2/core/mat.hpp	/^    typedef const _Tp& reference;$/;"	t	class:cv::MatConstIterator_
reference	opencv2/core/mat.hpp	/^    typedef uchar* reference;$/;"	t	class:cv::MatConstIterator
reference_	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef typename traits_base::reference 	reference_;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
reference_	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef typename traits_base::reference 	reference_;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
reference_	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      typedef typename traits_base::reference reference_;$/;"	t	class:__gnu_pbds::detail::PB_DS_LU_NAME
referred_type	opencv2/cudev/util/type_traits.hpp	/^    typedef typename type_traits_detail::ReferenceTraits<T>::type                                        referred_type;$/;"	t	struct:cv::cudev::TypeTraits
refinementMask	opencv2/stitching/detail/motion_estimators.hpp	/^    const Mat refinementMask() const { return refinement_mask_.clone(); }$/;"	f	class:cv::detail::BundleAdjusterBase
refinement_mask_	opencv2/stitching/detail/motion_estimators.hpp	/^    Mat refinement_mask_;$/;"	m	class:cv::detail::BundleAdjusterBase
reflect	5/sun/reflect/Reflection.h	/^    namespace reflect$/;"	n	namespace:sun
reflect	5/sun/reflect/annotation/AnnotationInvocationHandler.h	/^    namespace reflect$/;"	n	namespace:sun
reflect	5/sun/reflect/annotation/AnnotationParser.h	/^    namespace reflect$/;"	n	namespace:sun
reflect	5/sun/reflect/annotation/AnnotationType.h	/^    namespace reflect$/;"	n	namespace:sun
reflect	5/sun/reflect/annotation/EnumConstantNotPresentExceptionProxy.h	/^    namespace reflect$/;"	n	namespace:sun
reflect	5/sun/reflect/annotation/ExceptionProxy.h	/^    namespace reflect$/;"	n	namespace:sun
reflect	5/sun/reflect/misc/ReflectUtil.h	/^    namespace reflect$/;"	n	namespace:sun
reg	opencv2/core/hal/intrin.hpp	/^    typedef v_float32x4 reg;$/;"	t	struct:cv::V_RegTrait128
reg	opencv2/core/hal/intrin.hpp	/^    typedef v_float64x2 reg;$/;"	t	struct:cv::V_RegTrait128
reg	opencv2/core/hal/intrin.hpp	/^    typedef v_int16x8 reg;$/;"	t	struct:cv::V_RegTrait128
reg	opencv2/core/hal/intrin.hpp	/^    typedef v_int32x4 reg;$/;"	t	struct:cv::V_RegTrait128
reg	opencv2/core/hal/intrin.hpp	/^    typedef v_int64x2 reg;$/;"	t	struct:cv::V_RegTrait128
reg	opencv2/core/hal/intrin.hpp	/^    typedef v_int8x16 reg;$/;"	t	struct:cv::V_RegTrait128
reg	opencv2/core/hal/intrin.hpp	/^    typedef v_uint16x8 reg;$/;"	t	struct:cv::V_RegTrait128
reg	opencv2/core/hal/intrin.hpp	/^    typedef v_uint32x4 reg;$/;"	t	struct:cv::V_RegTrait128
reg	opencv2/core/hal/intrin.hpp	/^    typedef v_uint64x2 reg;$/;"	t	struct:cv::V_RegTrait128
reg	opencv2/core/hal/intrin.hpp	/^    typedef v_uint8x16 reg;$/;"	t	struct:cv::V_RegTrait128
registr_resol_	opencv2/stitching.hpp	/^    double registr_resol_;$/;"	m	class:cv::Stitcher
registrationResol	opencv2/stitching.hpp	/^    CV_WRAP double registrationResol() const { return registr_resol_; }$/;"	f	class:cv::Stitcher
reinterpet_uint	opencv2/core/hal/intrin.hpp	/^    static uint_type reinterpet_uint(_Tp x) { return x; }$/;"	f	struct:cv::V_TypeTraits
reinterpet_uint	opencv2/core/hal/intrin.hpp	/^    static uint_type reinterpet_uint(value_type x)$/;"	f	struct:cv::V_TypeTraits
reinterpret_as	opencv2/core/hal/intrin_cpp.hpp	/^    template<typename _Tp2, int n2> v_reg<_Tp2, n2> reinterpret_as() const$/;"	f	struct:cv::v_reg
reinterpret_from_int	opencv2/core/hal/intrin.hpp	/^    static _Tp reinterpret_from_int(int_type x) { return (_Tp)x; }$/;"	f	struct:cv::V_TypeTraits
reinterpret_from_int	opencv2/core/hal/intrin.hpp	/^    static value_type reinterpret_from_int(int_type x) { return (value_type)x; }$/;"	f	struct:cv::V_TypeTraits
reinterpret_from_int	opencv2/core/hal/intrin.hpp	/^    static value_type reinterpret_from_int(int_type x)$/;"	f	struct:cv::V_TypeTraits
reinterpret_int	opencv2/core/hal/intrin.hpp	/^    static int_type reinterpret_int(_Tp x) { return x; }$/;"	f	struct:cv::V_TypeTraits
reinterpret_int	opencv2/core/hal/intrin.hpp	/^    static int_type reinterpret_int(value_type x) { return (int_type)x; }$/;"	f	struct:cv::V_TypeTraits
reinterpret_int	opencv2/core/hal/intrin.hpp	/^    static int_type reinterpret_int(value_type x)$/;"	f	struct:cv::V_TypeTraits
reinterpret_uint	opencv2/core/hal/intrin.hpp	/^    static uint_type reinterpret_uint(value_type x) { return (uint_type)x; }$/;"	f	struct:cv::V_TypeTraits
rejectionStatus_	opencv2/videostab/global_motion.hpp	/^    std::vector<uchar> rejectionStatus_;$/;"	m	class:cv::videostab::KeypointBasedMotionEstimatorGpu
rel_ops	cpp_src/stl_relops.h	/^  namespace rel_ops$/;"	n	namespace:std
release	opencv2/core/mat.inl.hpp	/^inline void UMat::release()$/;"	f	class:cv::UMat
release	opencv2/core/mat.inl.hpp	/^void Mat::release()$/;"	f	class:cv::Mat
release	opencv2/core/mat.inl.hpp	/^void SparseMat::release()$/;"	f	class:cv::SparseMat
release	opencv2/core/ptr.inl.hpp	/^void Ptr<T>::release()$/;"	f	class:cv::Ptr
release	opencv2/core/types_c.h	/^    CvReleaseFunc release; \/**< releases object (memory etc.) *\/$/;"	m	struct:CvTypeInfo
rels_entry	5/ext/pb_ds/detail/cc_hash_table_map_/entry_list_fn_imps.hpp	/^rels_entry(entry_pointer p_e)$/;"	f	class:PB_DS_CLASS_C_DEC
remaining	opencv2/core/persistence.hpp	/^    size_t remaining;$/;"	m	class:cv::FileNodeIterator
remaining	opencv2/flann/allocator.h	/^    int     remaining;  \/* Number of bytes left in current block of storage. *\/$/;"	m	class:cvflann::PooledAllocator
remapPtr	opencv2/cudev/ptr2d/remap.hpp	/^remapPtr(const SrcPtr& src, const MapPtr& map)$/;"	f	namespace:cv::cudev
remapPtr	opencv2/cudev/ptr2d/remap.hpp	/^remapPtr(const SrcPtr& src, const MapXPtr& mapx, const MapYPtr& mapy)$/;"	f	namespace:cv::cudev
remap_	opencv2/cudev/expr/warping.hpp	/^remap_(const SrcPtr& src, const MapPtr& map)$/;"	f	namespace:cv::cudev
remap_	opencv2/cudev/expr/warping.hpp	/^remap_(const SrcPtr& src, const MapXPtr& mapx, const MapYPtr& mapy)$/;"	f	namespace:cv::cudev
remove	cpp_src/stl_algo.h	/^    remove(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std
remove	opencv2/core/core_c.h	/^template<typename _Tp> inline void Seq<_Tp>::remove(const Range& r)$/;"	f	class:cv::Seq
remove	opencv2/core/core_c.h	/^template<typename _Tp> inline void Seq<_Tp>::remove(int idx)$/;"	f	class:cv::Seq
removeChilds	opencv2/core/utility.hpp	/^    void removeChilds()$/;"	f	class:cv::Node
remove_child	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^    remove_child(iterator it)$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
remove_child	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^    remove_child(node_pointer p_nd)$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
remove_copy	cpp_src/stl_algo.h	/^    remove_copy(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std
remove_copy_if	cpp_src/stl_algo.h	/^    remove_copy_if(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std
remove_fixup	5/ext/pb_ds/detail/rb_tree_map_/erase_fn_imps.hpp	/^remove_fixup(node_pointer p_x, node_pointer p_new_x_parent)$/;"	f	class:PB_DS_CLASS_C_DEC
remove_if	cpp_src/stl_algo.h	/^    remove_if(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std
remove_max_node	5/ext/pb_ds/detail/thin_heap_/erase_fn_imps.hpp	/^remove_max_node()$/;"	f	class:PB_DS_CLASS_C_DEC
remove_node	5/ext/pb_ds/detail/pairing_heap_/erase_fn_imps.hpp	/^remove_node(node_pointer p_nd)$/;"	f	class:PB_DS_CLASS_C_DEC
remove_node	5/ext/pb_ds/detail/rb_tree_map_/erase_fn_imps.hpp	/^remove_node(node_pointer p_z)$/;"	f	class:PB_DS_CLASS_C_DEC
remove_node	5/ext/pb_ds/detail/thin_heap_/erase_fn_imps.hpp	/^remove_node(node_pointer p_nd)$/;"	f	class:PB_DS_CLASS_C_DEC
remove_parentless_node	5/ext/pb_ds/detail/binomial_heap_base_/erase_fn_imps.hpp	/^remove_parentless_node(node_pointer p_nd)$/;"	f	class:PB_DS_CLASS_C_DEC
rend	5/ext/pb_ds/detail/bin_search_tree_/iterators_fn_imps.hpp	/^rend() const$/;"	f	class:PB_DS_CLASS_C_DEC
rend	5/ext/pb_ds/detail/bin_search_tree_/iterators_fn_imps.hpp	/^rend()$/;"	f	class:PB_DS_CLASS_C_DEC
rend	5/ext/pb_ds/detail/pat_trie_/iterators_fn_imps.hpp	/^rend() const$/;"	f	class:PB_DS_CLASS_C_DEC
rend	5/ext/pb_ds/detail/pat_trie_/iterators_fn_imps.hpp	/^rend()$/;"	f	class:PB_DS_CLASS_C_DEC
rend	cpp_src/basic_string.h	/^      rend() const$/;"	f	class:std::basic_string
rend	cpp_src/basic_string.h	/^      rend()$/;"	f	class:std::basic_string
rend	cpp_src/stl_bvector.h	/^    rend() const$/;"	f	class:std::vector
rend	cpp_src/stl_bvector.h	/^    rend()$/;"	f	class:std::vector
rend	cpp_src/stl_deque.h	/^      rend() const$/;"	f	class:std::deque
rend	cpp_src/stl_deque.h	/^      rend()$/;"	f	class:std::deque
rend	cpp_src/stl_list.h	/^      rend() const$/;"	f	class:std::list
rend	cpp_src/stl_list.h	/^      rend()$/;"	f	class:std::list
rend	cpp_src/stl_map.h	/^      rend() const$/;"	f	class:std::map
rend	cpp_src/stl_map.h	/^      rend()$/;"	f	class:std::map
rend	cpp_src/stl_multimap.h	/^      rend() const$/;"	f	class:std::multimap
rend	cpp_src/stl_multimap.h	/^      rend()$/;"	f	class:std::multimap
rend	cpp_src/stl_multiset.h	/^      rend() const$/;"	f	class:std::multiset
rend	cpp_src/stl_set.h	/^      rend() const$/;"	f	class:std::set
rend	cpp_src/stl_tree.h	/^      rend() const$/;"	f	class:std::_Rb_tree
rend	cpp_src/stl_tree.h	/^      rend()$/;"	f	class:std::_Rb_tree
rend	cpp_src/stl_vector.h	/^      rend() const$/;"	f	class:std::vector
rend	cpp_src/stl_vector.h	/^      rend()$/;"	f	class:std::vector
reorder_	opencv2/flann/kdtree_single_index.h	/^    bool reorder_;$/;"	m	class:cvflann::KDTreeSingleIndex
replace	cpp_src/basic_string.h	/^        replace(iterator __i1, iterator __i2,$/;"	f	class:std::basic_string
replace	cpp_src/basic_string.h	/^      replace(iterator __i1, iterator __i2, _CharT* __k1, _CharT* __k2)$/;"	f	class:std::basic_string
replace	cpp_src/basic_string.h	/^      replace(iterator __i1, iterator __i2, const _CharT* __s)$/;"	f	class:std::basic_string
replace	cpp_src/basic_string.h	/^      replace(iterator __i1, iterator __i2, const _CharT* __s, size_type __n)$/;"	f	class:std::basic_string
replace	cpp_src/basic_string.h	/^      replace(iterator __i1, iterator __i2, const basic_string& __str)$/;"	f	class:std::basic_string
replace	cpp_src/basic_string.h	/^      replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2)$/;"	f	class:std::basic_string
replace	cpp_src/basic_string.h	/^      replace(iterator __i1, iterator __i2, size_type __n, _CharT __c)$/;"	f	class:std::basic_string
replace	cpp_src/basic_string.h	/^      replace(iterator __i1, iterator __i2,$/;"	f	class:std::basic_string
replace	cpp_src/basic_string.h	/^      replace(size_type __pos, size_type __n, const basic_string& __str)$/;"	f	class:std::basic_string
replace	cpp_src/basic_string.h	/^      replace(size_type __pos, size_type __n1, const _CharT* __s)$/;"	f	class:std::basic_string
replace	cpp_src/basic_string.h	/^      replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)$/;"	f	class:std::basic_string
replace	cpp_src/basic_string.h	/^      replace(size_type __pos1, size_type __n1, const basic_string& __str,$/;"	f	class:std::basic_string
replace	cpp_src/stl_algo.h	/^    replace(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std
replace_child	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^    replace_child(node_pointer p_nd, a_const_iterator b_it,$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
replace_copy	cpp_src/stl_algo.h	/^    replace_copy(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std
replace_copy_if	cpp_src/stl_algo.h	/^    replace_copy_if(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std
replace_if	cpp_src/stl_algo.h	/^    replace_if(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std
replace_minimal_n	5/parallel/settings.h	/^    _SequenceIndex              replace_minimal_n;$/;"	m	struct:__gnu_parallel::_Settings
requested_size	cpp_src/stl_tempbuf.h	/^      requested_size() const$/;"	f	class:std::_Temporary_buffer
res	opencv2/cudev/grid/detail/reduce.hpp	/^                                                typename VecTraits<R>::elem_type&> res(R& val)$/;"	f	struct:cv::cudev::grid_reduce_detail::Unroll
res	opencv2/cudev/grid/detail/reduce.hpp	/^        __device__ __forceinline__ static R& res(R& val)$/;"	f	struct:cv::cudev::grid_reduce_detail::Unroll
res	opencv2/cudev/grid/detail/reduce.hpp	/^        __device__ __forceinline__ static tuple<typename VecTraits<R>::elem_type&, typename VecTraits<R>::elem_type&> res(R& val)$/;"	f	struct:cv::cudev::grid_reduce_detail::Unroll
reserve	cpp_src/stl_bvector.h	/^    reserve(size_type __n)$/;"	f	class:std::vector
reset	opencv2/core/ptr.inl.hpp	/^void Ptr<T>::reset(Y* p)$/;"	f	class:cv::Ptr
reset	opencv2/core/ptr.inl.hpp	/^void Ptr<T>::reset(Y* p, D d)$/;"	f	class:cv::Ptr
reset	opencv2/core/utility.hpp	/^    CV_WRAP void reset()$/;"	f	class:cv::TickMeter
reset	opencv2/flann/any.h	/^    void reset()$/;"	f	struct:cvflann::any
reset	opencv2/flann/dynamic_bitset.h	/^    void reset()$/;"	f	class:cvflann::DynamicBitset
reset	opencv2/flann/dynamic_bitset.h	/^    void reset(size_t index)$/;"	f	class:cvflann::DynamicBitset
reset	opencv2/flann/timer.h	/^    void reset()$/;"	f	class:cvflann::StartStopTimer
reset	opencv2/videostab/frame_source.hpp	/^    virtual void reset() {}$/;"	f	class:cv::videostab::NullFrameSource
reset_block	opencv2/flann/dynamic_bitset.h	/^    void reset_block(size_t index)$/;"	f	class:cvflann::DynamicBitset
reshape	opencv2/core/matx.hpp	/^Matx<_Tp, m1, n1> Matx<_Tp, m, n>::reshape() const$/;"	f	class:cv::Matx
reshape_	opencv2/cudev/ptr2d/gpumat.hpp	/^reshape_(const GpuMat_<T>& mat, int rows = 0)$/;"	f	namespace:cv::cudev
resize	5/ext/pb_ds/detail/resize_policy/hash_standard_resize_policy_imp.hpp	/^resize(size_type new_size)$/;"	f	class:PB_DS_CLASS_C_DEC
resize	cpp_src/basic_string.h	/^      resize(size_type __n)$/;"	f	class:std::basic_string
resize	cpp_src/stl_bvector.h	/^    resize(size_type __new_size, bool __x = bool())$/;"	f	class:std::vector
resize	cpp_src/stl_deque.h	/^      resize(size_type __new_size, value_type __x = value_type())$/;"	f	class:std::deque
resize	cpp_src/stl_vector.h	/^      resize(size_type __new_size, value_type __x = value_type())$/;"	f	class:std::vector
resize	opencv2/core/utility.hpp	/^AutoBuffer<_Tp, fixed_size>::resize(size_t _size)$/;"	f	class:cv::AutoBuffer
resize	opencv2/flann/dynamic_bitset.h	/^    void resize(size_t sz)$/;"	f	class:cvflann::DynamicBitset
resizePtr	opencv2/cudev/ptr2d/resize.hpp	/^__host__ ResizePtrSz<typename PtrTraits<SrcPtr>::ptr_type> resizePtr(const SrcPtr& src, float fx, float fy)$/;"	f	namespace:cv::cudev
resize_	opencv2/cudev/expr/warping.hpp	/^resize_(const SrcPtr& src, float fx, float fy)$/;"	f	namespace:cv::cudev
resize_base	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef Resize_Policy resize_base;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
resize_base	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef Resize_Policy 			resize_base;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
resize_error	5/ext/pb_ds/exception.hpp	/^  struct resize_error : public container_error { };$/;"	s	namespace:__gnu_pbds
resize_for_erase_if_needed	5/ext/pb_ds/detail/binary_heap_/erase_fn_imps.hpp	/^resize_for_erase_if_needed()$/;"	f	class:PB_DS_CLASS_C_DEC
resize_for_insert_if_needed	5/ext/pb_ds/detail/binary_heap_/insert_fn_imps.hpp	/^resize_for_insert_if_needed()$/;"	f	class:PB_DS_CLASS_C_DEC
resize_imp	5/ext/pb_ds/detail/cc_hash_table_map_/resize_fn_imps.hpp	/^resize_imp(size_type new_size)$/;"	f	class:PB_DS_CLASS_C_DEC
resize_imp	5/ext/pb_ds/detail/gp_hash_table_map_/resize_fn_imps.hpp	/^resize_imp(entry_array a_entries_resized, size_type old_size)$/;"	f	class:PB_DS_CLASS_C_DEC
resize_imp	5/ext/pb_ds/detail/gp_hash_table_map_/resize_fn_imps.hpp	/^resize_imp(size_type new_size)$/;"	f	class:PB_DS_CLASS_C_DEC
resize_imp_no_exceptions	5/ext/pb_ds/detail/cc_hash_table_map_/resize_fn_imps.hpp	/^resize_imp_no_exceptions(size_type new_size, entry_pointer_array a_p_entries_resized, size_type old_size)$/;"	f	class:PB_DS_CLASS_C_DEC
resize_imp_no_exceptions_reassign_pointer	5/ext/pb_ds/detail/cc_hash_table_map_/resize_no_store_hash_fn_imps.hpp	/^resize_imp_no_exceptions_reassign_pointer(entry_pointer p_e, entry_pointer_array a_p_entries_resized, false_type)$/;"	f	class:PB_DS_CLASS_C_DEC
resize_imp_no_exceptions_reassign_pointer	5/ext/pb_ds/detail/cc_hash_table_map_/resize_store_hash_fn_imps.hpp	/^resize_imp_no_exceptions_reassign_pointer(entry_pointer p_e, entry_pointer_array a_p_entries_resized, true_type)$/;"	f	class:PB_DS_CLASS_C_DEC
resize_imp_reassign	5/ext/pb_ds/detail/gp_hash_table_map_/resize_no_store_hash_fn_imps.hpp	/^resize_imp_reassign(entry_pointer p_e, entry_array a_entries_resized, $/;"	f	class:PB_DS_CLASS_C_DEC
resize_imp_reassign	5/ext/pb_ds/detail/gp_hash_table_map_/resize_store_hash_fn_imps.hpp	/^resize_imp_reassign(entry_pointer p_e, entry_array a_entries_resized, $/;"	f	class:PB_DS_CLASS_C_DEC
resize_needed_for_grow	5/ext/pb_ds/detail/binary_heap_/resize_policy.hpp	/^    resize_needed_for_grow(size_type size) const$/;"	f	class:__gnu_pbds::detail::resize_policy
resize_needed_for_shrink	5/ext/pb_ds/detail/binary_heap_/resize_policy.hpp	/^    resize_needed_for_shrink(size_type size) const$/;"	f	class:__gnu_pbds::detail::resize_policy
resize_policy	5/ext/pb_ds/assoc_container.hpp	/^    typedef Resize_Policy 			resize_policy;$/;"	t	class:__gnu_pbds::cc_hash_table
resize_policy	5/ext/pb_ds/assoc_container.hpp	/^    typedef Resize_Policy 			resize_policy;$/;"	t	class:__gnu_pbds::gp_hash_table
resize_policy	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	/^      typedef PB_DS_RESIZE_POLICY_DEC 			resize_policy;$/;"	t	class:__gnu_pbds::detail::binary_heap
resize_policy	5/ext/pb_ds/detail/binary_heap_/resize_policy.hpp	/^      resize_policy() : m_shrink_size(0), m_grow_size(min_size)$/;"	f	class:__gnu_pbds::detail::resize_policy
resize_policy	5/ext/pb_ds/detail/binary_heap_/resize_policy.hpp	/^      resize_policy(const resize_policy& other)$/;"	f	class:__gnu_pbds::detail::resize_policy
resize_policy	5/ext/pb_ds/detail/binary_heap_/resize_policy.hpp	/^    class resize_policy$/;"	c	namespace:__gnu_pbds::detail
resize_policy	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef Resize_Policy 			resize_policy;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
resize_policy	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef Resize_Policy 			resize_policy;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
response	opencv2/core/types.hpp	/^    CV_PROP_RW float response; \/\/!< the response by which the most strong keypoints have been selected. Can be used for the further sorting or subsampling$/;"	m	class:cv::KeyPoint
result	cpp_src/codecvt.h	/^      typedef codecvt_base::result	result;$/;"	t	class:std::__codecvt_abstract_base
result	cpp_src/codecvt.h	/^      typedef codecvt_base::result	result;$/;"	t	class:std::codecvt
result	cpp_src/codecvt.h	/^    enum result$/;"	g	class:std::codecvt_base
result	opencv2/cudev/grid/reduce_to_vec.hpp	/^    __device__ __forceinline__ static T result(T r, float sz)$/;"	f	struct:cv::cudev::Avg
result	opencv2/cudev/grid/reduce_to_vec.hpp	/^    __device__ __forceinline__ static T result(T r, int)$/;"	f	struct:cv::cudev::Max
result	opencv2/cudev/grid/reduce_to_vec.hpp	/^    __device__ __forceinline__ static T result(T r, int)$/;"	f	struct:cv::cudev::Min
result	opencv2/cudev/grid/reduce_to_vec.hpp	/^    __device__ __forceinline__ static T result(T r, int)$/;"	f	struct:cv::cudev::Sum
resultDevice_	opencv2/videostab/wobble_suppression.hpp	/^    cuda::GpuMat frameDevice_, resultDevice_;$/;"	m	class:cv::videostab::MoreAccurateMotionWobbleSuppressorGpu
result_type	cpp_src/stl_function.h	/^      typedef _Result result_type;         \/\/\/< type of the return type$/;"	t	struct:std::binary_function
result_type	cpp_src/stl_function.h	/^      typedef _Result result_type;  \/\/\/< @c result_type is the return type$/;"	t	struct:std::unary_function
result_type	cpp_src/valarray_before.h	/^      typedef _Tp result_type;$/;"	t	struct:std::__fun
result_type	cpp_src/valarray_before.h	/^      typedef bool result_type;$/;"	t	struct:std::__fun
result_type	opencv2/core/cuda/border_interpolate.hpp	/^        typedef D result_type;$/;"	t	struct:cv::cuda::device::BrdColConstant
result_type	opencv2/core/cuda/border_interpolate.hpp	/^        typedef D result_type;$/;"	t	struct:cv::cuda::device::BrdColReflect
result_type	opencv2/core/cuda/border_interpolate.hpp	/^        typedef D result_type;$/;"	t	struct:cv::cuda::device::BrdColReflect101
result_type	opencv2/core/cuda/border_interpolate.hpp	/^        typedef D result_type;$/;"	t	struct:cv::cuda::device::BrdColReplicate
result_type	opencv2/core/cuda/border_interpolate.hpp	/^        typedef D result_type;$/;"	t	struct:cv::cuda::device::BrdColWrap
result_type	opencv2/core/cuda/border_interpolate.hpp	/^        typedef D result_type;$/;"	t	struct:cv::cuda::device::BrdConstant
result_type	opencv2/core/cuda/border_interpolate.hpp	/^        typedef D result_type;$/;"	t	struct:cv::cuda::device::BrdReflect
result_type	opencv2/core/cuda/border_interpolate.hpp	/^        typedef D result_type;$/;"	t	struct:cv::cuda::device::BrdReflect101
result_type	opencv2/core/cuda/border_interpolate.hpp	/^        typedef D result_type;$/;"	t	struct:cv::cuda::device::BrdReplicate
result_type	opencv2/core/cuda/border_interpolate.hpp	/^        typedef D result_type;$/;"	t	struct:cv::cuda::device::BrdRowConstant
result_type	opencv2/core/cuda/border_interpolate.hpp	/^        typedef D result_type;$/;"	t	struct:cv::cuda::device::BrdRowReflect
result_type	opencv2/core/cuda/border_interpolate.hpp	/^        typedef D result_type;$/;"	t	struct:cv::cuda::device::BrdRowReflect101
result_type	opencv2/core/cuda/border_interpolate.hpp	/^        typedef D result_type;$/;"	t	struct:cv::cuda::device::BrdRowReplicate
result_type	opencv2/core/cuda/border_interpolate.hpp	/^        typedef D result_type;$/;"	t	struct:cv::cuda::device::BrdRowWrap
result_type	opencv2/core/cuda/border_interpolate.hpp	/^        typedef D result_type;$/;"	t	struct:cv::cuda::device::BrdWrap
result_type	opencv2/core/cuda/vec_distance.hpp	/^        typedef float result_type;$/;"	t	struct:cv::cuda::device::L1Dist
result_type	opencv2/core/cuda/vec_distance.hpp	/^        typedef float result_type;$/;"	t	struct:cv::cuda::device::L2Dist
result_type	opencv2/core/cuda/vec_distance.hpp	/^        typedef int result_type;$/;"	t	struct:cv::cuda::device::HammingDist
result_type	opencv2/core/cuda/vec_distance.hpp	/^        typedef int result_type;$/;"	t	struct:cv::cuda::device::L1Dist
result_type	opencv2/cudev/block/vec_distance.hpp	/^    typedef float result_type;$/;"	t	struct:cv::cudev::NormL1
result_type	opencv2/cudev/block/vec_distance.hpp	/^    typedef float result_type;$/;"	t	struct:cv::cudev::NormL2
result_type	opencv2/cudev/block/vec_distance.hpp	/^    typedef int result_type;$/;"	t	struct:cv::cudev::NormHamming
result_type	opencv2/cudev/block/vec_distance.hpp	/^    typedef uint result_type;$/;"	t	struct:cv::cudev::NormL1
result_type	opencv2/cudev/functional/functional.hpp	/^    typedef _Result result_type;$/;"	t	struct:cv::cudev::binary_function
result_type	opencv2/cudev/functional/functional.hpp	/^    typedef _Result result_type;$/;"	t	struct:cv::cudev::unary_function
result_type	opencv2/cudev/functional/tuple_adapter.hpp	/^    typedef typename Op::result_type result_type;$/;"	t	struct:cv::cudev::BinaryTupleAdapter
result_type	opencv2/cudev/functional/tuple_adapter.hpp	/^    typedef typename Op::result_type result_type;$/;"	t	struct:cv::cudev::UnaryTupleAdapter
rethrow_if_nested	5/bits/nested_exception.h	/^    rethrow_if_nested(const _Ex& __ex)$/;"	f	namespace:std
rethrow_nested	5/bits/nested_exception.h	/^    rethrow_nested() const$/;"	f	class:std::nested_exception
reverse	5/ext/pb_ds/trie_policy.hpp	/^	reverse = Reverse$/;"	e	enum:__gnu_pbds::trie_string_access_traits::__anon11
reverse	cpp_src/stl_algo.h	/^    reverse(_BidirectionalIterator __first, _BidirectionalIterator __last)$/;"	f	namespace:std
reverse	cpp_src/stl_list.h	/^      reverse()$/;"	f	class:std::list
reverse_copy	cpp_src/stl_algo.h	/^    reverse_copy(_BidirectionalIterator __first, _BidirectionalIterator __last,$/;"	f	namespace:std
reverse_iteration	5/ext/pb_ds/tag_and_trait.hpp	/^	reverse_iteration = base_type::reverse_iteration$/;"	e	enum:__gnu_pbds::container_traits::__anon25
reverse_iteration	5/ext/pb_ds/tag_and_trait.hpp	/^	reverse_iteration = false$/;"	e	enum:__gnu_pbds::container_traits_base::__anon13
reverse_iteration	5/ext/pb_ds/tag_and_trait.hpp	/^	reverse_iteration = false$/;"	e	enum:__gnu_pbds::container_traits_base::__anon14
reverse_iteration	5/ext/pb_ds/tag_and_trait.hpp	/^	reverse_iteration = false$/;"	e	enum:__gnu_pbds::container_traits_base::__anon17
reverse_iteration	5/ext/pb_ds/tag_and_trait.hpp	/^	reverse_iteration = false$/;"	e	enum:__gnu_pbds::container_traits_base::__anon19
reverse_iteration	5/ext/pb_ds/tag_and_trait.hpp	/^	reverse_iteration = false$/;"	e	enum:__gnu_pbds::container_traits_base::__anon20
reverse_iteration	5/ext/pb_ds/tag_and_trait.hpp	/^	reverse_iteration = false$/;"	e	enum:__gnu_pbds::container_traits_base::__anon21
reverse_iteration	5/ext/pb_ds/tag_and_trait.hpp	/^	reverse_iteration = false$/;"	e	enum:__gnu_pbds::container_traits_base::__anon22
reverse_iteration	5/ext/pb_ds/tag_and_trait.hpp	/^	reverse_iteration = false$/;"	e	enum:__gnu_pbds::container_traits_base::__anon23
reverse_iteration	5/ext/pb_ds/tag_and_trait.hpp	/^	reverse_iteration = false$/;"	e	enum:__gnu_pbds::container_traits_base::__anon24
reverse_iteration	5/ext/pb_ds/tag_and_trait.hpp	/^	reverse_iteration = true$/;"	e	enum:__gnu_pbds::container_traits_base::__anon15
reverse_iteration	5/ext/pb_ds/tag_and_trait.hpp	/^	reverse_iteration = true$/;"	e	enum:__gnu_pbds::container_traits_base::__anon16
reverse_iteration	5/ext/pb_ds/tag_and_trait.hpp	/^	reverse_iteration = true$/;"	e	enum:__gnu_pbds::container_traits_base::__anon18
reverse_iterator	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	/^      typedef typename traits_type::reverse_iterator 	reverse_iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_BIN_TREE_NAME
reverse_iterator	5/ext/pb_ds/detail/bin_search_tree_/traits.hpp	/^      reverse_iterator;$/;"	t	struct:__gnu_pbds::detail::bin_search_tree_traits
reverse_iterator	5/ext/pb_ds/detail/bin_search_tree_/traits.hpp	/^      typedef const_reverse_iterator reverse_iterator;$/;"	t	struct:__gnu_pbds::detail::bin_search_tree_traits
reverse_iterator	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename traits_type::reverse_iterator 	reverse_iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
reverse_iterator	5/ext/pb_ds/detail/pat_trie_/traits.hpp	/^      typedef base_type::_Iter<node, leaf, head, inode, false> 		reverse_iterator;$/;"	t	struct:__gnu_pbds::detail::trie_traits
reverse_iterator	5/ext/pb_ds/detail/pat_trie_/traits.hpp	/^      typedef const_reverse_iterator 			       		reverse_iterator;$/;"	t	struct:__gnu_pbds::detail::trie_traits
reverse_iterator	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	/^      typedef typename base_type::reverse_iterator 	 reverse_iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_RB_TREE_NAME
reverse_iterator	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	/^      typedef typename base_type::reverse_iterator 	 reverse_iterator;$/;"	t	class:__gnu_pbds::detail::PB_DS_S_TREE_NAME
reverse_iterator	cpp_src/basic_string.h	/^      typedef std::reverse_iterator<iterator>		    reverse_iterator;$/;"	t	class:std::basic_string
reverse_iterator	cpp_src/stl_bvector.h	/^    typedef std::reverse_iterator<iterator>              reverse_iterator;$/;"	t	class:std::vector
reverse_iterator	cpp_src/stl_deque.h	/^      typedef std::reverse_iterator<iterator>            reverse_iterator;$/;"	t	class:std::deque
reverse_iterator	cpp_src/stl_iterator.h	/^        reverse_iterator(const reverse_iterator<_Iter>& __x)$/;"	f	class:std::reverse_iterator
reverse_iterator	cpp_src/stl_iterator.h	/^      reverse_iterator() : current() { }$/;"	f	class:std::reverse_iterator
reverse_iterator	cpp_src/stl_iterator.h	/^      reverse_iterator(const reverse_iterator& __x)$/;"	f	class:std::reverse_iterator
reverse_iterator	cpp_src/stl_iterator.h	/^      reverse_iterator(iterator_type __x) : current(__x) { }$/;"	f	class:std::reverse_iterator
reverse_iterator	cpp_src/stl_iterator.h	/^    class reverse_iterator$/;"	c	namespace:std
reverse_iterator	cpp_src/stl_list.h	/^      typedef std::reverse_iterator<iterator>            reverse_iterator;$/;"	t	class:std::list
reverse_iterator	cpp_src/stl_map.h	/^      typedef typename _Rep_type::reverse_iterator       reverse_iterator;$/;"	t	class:std::map
reverse_iterator	cpp_src/stl_multimap.h	/^      typedef typename _Rep_type::reverse_iterator       reverse_iterator;$/;"	t	class:std::multimap
reverse_iterator	cpp_src/stl_multiset.h	/^      typedef typename _Rep_type::const_reverse_iterator    reverse_iterator;$/;"	t	class:std::multiset
reverse_iterator	cpp_src/stl_set.h	/^      typedef typename _Rep_type::const_reverse_iterator    reverse_iterator;$/;"	t	class:std::set
reverse_iterator	cpp_src/stl_tree.h	/^      typedef std::reverse_iterator<iterator>       reverse_iterator;$/;"	t	class:std::_Rb_tree
reverse_iterator	cpp_src/stl_vector.h	/^      typedef std::reverse_iterator<iterator>		 reverse_iterator;$/;"	t	class:std::vector
rfind	cpp_src/basic_string.h	/^      rfind(const _CharT* __s, size_type __pos = npos) const$/;"	f	class:std::basic_string
rfind	cpp_src/basic_string.h	/^      rfind(const basic_string& __str, size_type __pos = npos) const$/;"	f	class:std::basic_string
rfind	opencv2/core/cvstd.hpp	/^size_t String::rfind(char c, size_t pos) const$/;"	f	class:cv::String
rfind	opencv2/core/cvstd.hpp	/^size_t String::rfind(const String& str, size_t pos) const$/;"	f	class:cv::String
rfind	opencv2/core/cvstd.hpp	/^size_t String::rfind(const char* s, size_t pos) const$/;"	f	class:cv::String
rfind	opencv2/core/cvstd.hpp	/^size_t String::rfind(const char* s, size_t pos, size_t n) const$/;"	f	class:cv::String
right	cpp_src/ios_base.h	/^    static const fmtflags right =       _S_right;$/;"	m	class:std::ios_base
right	cpp_src/ios_base.h	/^  right(ios_base& __base)$/;"	f	namespace:std
right	opencv2/flann/kdtree_single_index.h	/^        int left, right;$/;"	m	struct:cvflann::KDTreeSingleIndex::Node
right	opencv2/ml.hpp	/^        int right; \/\/!< Index of right child node$/;"	m	class:cv::ml::DTrees::Node
right	opencv2/objdetect/objdetect_c.h	/^    int* right;$/;"	m	struct:CvHaarClassifier
right_child	5/ext/pb_ds/detail/binary_heap_/find_fn_imps.hpp	/^right_child(size_type i)$/;"	f	class:PB_DS_CLASS_C_DEC
rightmost_descendant	5/ext/pb_ds/detail/pat_trie_/find_fn_imps.hpp	/^rightmost_descendant(node_const_pointer p_nd)$/;"	f	class:PB_DS_CLASS_C_DEC
rightmost_descendant	5/ext/pb_ds/detail/pat_trie_/find_fn_imps.hpp	/^rightmost_descendant(node_pointer p_nd)$/;"	f	class:PB_DS_CLASS_C_DEC
rightmost_descendant	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      rightmost_descendant(node_pointer p_nd)$/;"	f	class:__gnu_pbds::detail::pat_trie_base::_CIter
rightmost_descendant	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^    rightmost_descendant() const$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
rightmost_descendant	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^    rightmost_descendant()$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
rightmost_it	5/ext/pb_ds/detail/trie_policy/trie_policy_base.hpp	/^    rightmost_it(node_iterator nd_it)$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
rinv	opencv2/stitching/detail/warpers.hpp	/^    float rinv[9];$/;"	m	struct:cv::detail::ProjectorBase
roi	opencv2/core/types_c.h	/^    struct _IplROI *roi;    \/**< Image ROI. If NULL, the whole image is selected. *\/$/;"	m	struct:_IplImage	typeref:struct:_IplImage::_IplROI
roi1	opencv2/calib3d/calib3d_c.h	/^    CvRect roi1, roi2;$/;"	m	struct:CvStereoBMState
roi2	opencv2/calib3d/calib3d_c.h	/^    CvRect roi1, roi2;$/;"	m	struct:CvStereoBMState
rois_	opencv2/stitching.hpp	/^    std::vector<std::vector<cv::Rect> > rois_;$/;"	m	class:cv::Stitcher
root	opencv2/flann/hierarchical_clustering_index.h	/^    NodePtr* root;$/;"	m	class:cvflann::HierarchicalClusteringIndex
rootNode	opencv2/core/private.hpp	/^    InstrNode  rootNode;$/;"	m	class:cv::instr::InstrStruct
root_	opencv2/flann/kmeans_index.h	/^    KMeansNodePtr root_;$/;"	m	class:cvflann::KMeansIndex
root_bbox_	opencv2/flann/kdtree_single_index.h	/^    BoundingBox root_bbox_;$/;"	m	class:cvflann::KDTreeSingleIndex
root_node_	opencv2/flann/kdtree_single_index.h	/^    NodePtr root_node_;$/;"	m	class:cvflann::KDTreeSingleIndex
rotate	cpp_src/stl_algo.h	/^    rotate(_ForwardIterator __first, _ForwardIterator __middle,$/;"	f	namespace:std
rotate	opencv2/core/affine.hpp	/^cv::Affine3<T> cv::Affine3<T>::rotate(const Mat3& R) const$/;"	f	class:cv::Affine3
rotate	opencv2/core/affine.hpp	/^cv::Affine3<T> cv::Affine3<T>::rotate(const Vec3& _rvec) const$/;"	f	class:cv::Affine3
rotateVideo	opencv2/videoio/cap_ios.h	/^@property (nonatomic, assign) BOOL rotateVideo;$/;"	v
rotate_copy	cpp_src/stl_algo.h	/^    rotate_copy(_ForwardIterator __first, _ForwardIterator __middle,$/;"	f	namespace:std
rotate_left	5/ext/pb_ds/detail/bin_search_tree_/rotate_fn_imps.hpp	/^rotate_left(node_pointer p_x)$/;"	f	class:PB_DS_CLASS_C_DEC
rotate_left	5/ext/pb_ds/detail/pat_trie_/rotate_fn_imps.hpp	/^rotate_left(node_pointer p_x)$/;"	f	class:PB_DS_CLASS_C_DEC
rotate_parent	5/ext/pb_ds/detail/bin_search_tree_/rotate_fn_imps.hpp	/^rotate_parent(node_pointer p_nd)$/;"	f	class:PB_DS_CLASS_C_DEC
rotate_parent	5/ext/pb_ds/detail/pat_trie_/rotate_fn_imps.hpp	/^rotate_parent(node_pointer p_nd)$/;"	f	class:PB_DS_CLASS_C_DEC
rotate_right	5/ext/pb_ds/detail/bin_search_tree_/rotate_fn_imps.hpp	/^rotate_right(node_pointer p_x)$/;"	f	class:PB_DS_CLASS_C_DEC
rotate_right	5/ext/pb_ds/detail/pat_trie_/rotate_fn_imps.hpp	/^rotate_right(node_pointer p_x)$/;"	f	class:PB_DS_CLASS_C_DEC
rotation	opencv2/core/affine.hpp	/^typename cv::Affine3<T>::Mat3 cv::Affine3<T>::rotation() const$/;"	f	class:cv::Affine3
rotation	opencv2/core/affine.hpp	/^void cv::Affine3<T>::rotation(const Mat3& R)$/;"	f	class:cv::Affine3
rotation	opencv2/core/affine.hpp	/^void cv::Affine3<T>::rotation(const Vec3& _rvec)$/;"	f	class:cv::Affine3
rotation	opencv2/core/affine.hpp	/^void cv::Affine3<T>::rotation(const cv::Mat& data)$/;"	f	class:cv::Affine3
row	opencv2/core/cuda.inl.hpp	/^GpuMat GpuMat::row(int y) const$/;"	f	class:cv::cuda::GpuMat
row	opencv2/core/mat.inl.hpp	/^Mat Mat::row(int y) const$/;"	f	class:cv::Mat
row	opencv2/core/mat.inl.hpp	/^Mat_<_Tp> Mat_<_Tp>::row(int y) const$/;"	f	class:cv::Mat_
row	opencv2/core/mat.inl.hpp	/^UMat UMat::row(int y) const$/;"	f	class:cv::UMat
row	opencv2/core/matx.hpp	/^Matx<_Tp, 1, n> Matx<_Tp, m, n>::row(int i) const$/;"	f	class:cv::Matx
row	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^__host__ GpuMat_<T> GpuMat_<T>::row(int y) const$/;"	f	class:cv::cudev::GpuMat_
row	opencv2/cudev/ptr2d/glob.hpp	/^    __device__ __forceinline__       T* row(int y)       { return (      T*)( (      uchar*)data + y * step); }$/;"	f	struct:cv::cudev::GlobPtr
row	opencv2/cudev/ptr2d/glob.hpp	/^    __device__ __forceinline__ const T* row(int y) const { return (const T*)( (const uchar*)data + y * step); }$/;"	f	struct:cv::cudev::GlobPtr
rowRange	opencv2/core/cuda.inl.hpp	/^GpuMat GpuMat::rowRange(Range r) const$/;"	f	class:cv::cuda::GpuMat
rowRange	opencv2/core/cuda.inl.hpp	/^GpuMat GpuMat::rowRange(int startrow, int endrow) const$/;"	f	class:cv::cuda::GpuMat
rowRange	opencv2/core/mat.inl.hpp	/^Mat Mat::rowRange(const Range& r) const$/;"	f	class:cv::Mat
rowRange	opencv2/core/mat.inl.hpp	/^Mat Mat::rowRange(int startrow, int endrow) const$/;"	f	class:cv::Mat
rowRange	opencv2/core/mat.inl.hpp	/^UMat UMat::rowRange(const Range& r) const$/;"	f	class:cv::UMat
rowRange	opencv2/core/mat.inl.hpp	/^UMat UMat::rowRange(int startrow, int endrow) const$/;"	f	class:cv::UMat
rowRange	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^__host__ GpuMat_<T> GpuMat_<T>::rowRange(Range r) const$/;"	f	class:cv::cudev::GpuMat_
rowRange	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^__host__ GpuMat_<T> GpuMat_<T>::rowRange(int startrow, int endrow) const$/;"	f	class:cv::cudev::GpuMat_
rowlb_	opencv2/videostab/global_motion.hpp	/^    std::vector<double> elems_, rowlb_, rowub_;$/;"	m	class:cv::videostab::MotionEstimatorL1
rowlb_	opencv2/videostab/motion_stabilizing.hpp	/^    std::vector<double> elems_, rowlb_, rowub_;$/;"	m	class:cv::videostab::LpMotionStabilizer
rows	opencv2/core/cuda.hpp	/^    int rows, cols;$/;"	m	class:cv::cuda::GpuMat
rows	opencv2/core/cuda.hpp	/^    int rows, cols;$/;"	m	class:cv::cuda::HostMem
rows	opencv2/core/cuda_types.hpp	/^            int rows;$/;"	m	struct:cv::cuda::PtrStepSz
rows	opencv2/core/mat.hpp	/^    int rows, cols;$/;"	m	class:cv::Mat
rows	opencv2/core/mat.hpp	/^    int rows, cols;$/;"	m	class:cv::UMat
rows	opencv2/core/matx.hpp	/^           rows     = m,$/;"	e	enum:cv::Matx::__anon120
rows	opencv2/core/opengl.hpp	/^int cv::ogl::Buffer::rows() const$/;"	f	class:cv::ogl::Buffer
rows	opencv2/core/opengl.hpp	/^int cv::ogl::Texture2D::rows() const$/;"	f	class:cv::ogl::Texture2D
rows	opencv2/core/types_c.h	/^        int rows;$/;"	m	union:CvMat::__anon326
rows	opencv2/core/types_c.h	/^    int rows;$/;"	m	struct:CvMat
rows	opencv2/cudev/ptr2d/constant.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::ConstantPtrSz
rows	opencv2/cudev/ptr2d/deriv.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::DerivXPtrSz
rows	opencv2/cudev/ptr2d/deriv.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::DerivYPtrSz
rows	opencv2/cudev/ptr2d/deriv.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::LaplacianPtrSz
rows	opencv2/cudev/ptr2d/deriv.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::ScharrXPtrSz
rows	opencv2/cudev/ptr2d/deriv.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::ScharrYPtrSz
rows	opencv2/cudev/ptr2d/deriv.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::SobelXPtrSz
rows	opencv2/cudev/ptr2d/deriv.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::SobelYPtrSz
rows	opencv2/cudev/ptr2d/extrapolation.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::BrdBase
rows	opencv2/cudev/ptr2d/extrapolation.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::BrdConstant
rows	opencv2/cudev/ptr2d/glob.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::GlobPtrSz
rows	opencv2/cudev/ptr2d/interpolation.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::CommonAreaInterPtrSz
rows	opencv2/cudev/ptr2d/interpolation.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::CubicInterPtrSz
rows	opencv2/cudev/ptr2d/interpolation.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::IntegerAreaInterPtrSz
rows	opencv2/cudev/ptr2d/interpolation.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::LinearInterPtrSz
rows	opencv2/cudev/ptr2d/interpolation.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::NearestInterPtrSz
rows	opencv2/cudev/ptr2d/lut.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::LutPtrSz
rows	opencv2/cudev/ptr2d/mask.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::SingleMaskChannelsSz
rows	opencv2/cudev/ptr2d/remap.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::RemapPtr1Sz
rows	opencv2/cudev/ptr2d/remap.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::RemapPtr2Sz
rows	opencv2/cudev/ptr2d/resize.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::ResizePtrSz
rows	opencv2/cudev/ptr2d/texture.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::Texture
rows	opencv2/cudev/ptr2d/transform.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::BinaryTransformPtrSz
rows	opencv2/cudev/ptr2d/transform.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::UnaryTransformPtrSz
rows	opencv2/cudev/ptr2d/warping.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::AffineMapPtrSz
rows	opencv2/cudev/ptr2d/warping.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::PerspectiveMapPtrSz
rows	opencv2/cudev/ptr2d/zip.hpp	/^    int rows, cols;$/;"	m	struct:cv::cudev::ZipPtrSz
rows	opencv2/flann/matrix.h	/^    size_t rows;$/;"	m	class:cvflann::Matrix
rows	opencv2/flann/matrix.h	/^    size_t rows;$/;"	m	class:cvflann::UntypedMatrix
rows	opencv2/flann/saving.h	/^    size_t rows;$/;"	m	struct:cvflann::IndexHeader
rows_	opencv2/core/opengl.hpp	/^    int rows_;$/;"	m	class:cv::ogl::Buffer
rows_	opencv2/core/opengl.hpp	/^    int rows_;$/;"	m	class:cv::ogl::Texture2D
rows_	opencv2/videostab/global_motion.hpp	/^    std::vector<int> rows_, cols_;$/;"	m	class:cv::videostab::MotionEstimatorL1
rows_	opencv2/videostab/motion_stabilizing.hpp	/^    std::vector<int> rows_, cols_;$/;"	m	class:cv::videostab::LpMotionStabilizer
rowub_	opencv2/videostab/global_motion.hpp	/^    std::vector<double> elems_, rowlb_, rowub_;$/;"	m	class:cv::videostab::MotionEstimatorL1
rowub_	opencv2/videostab/motion_stabilizing.hpp	/^    std::vector<double> elems_, rowlb_, rowub_;$/;"	m	class:cv::videostab::LpMotionStabilizer
run	opencv2/videostab/fast_marching_inl.hpp	/^Inpaint FastMarchingMethod::run(const cv::Mat &mask, Inpaint inpaint)$/;"	f	class:cv::videostab::FastMarchingMethod
running	opencv2/videoio/cap_ios.h	/^@property (nonatomic, readonly) BOOL running;$/;"	v
rvec	opencv2/core/affine.hpp	/^typename cv::Affine3<T>::Vec3 cv::Affine3<T>::rvec() const$/;"	f	class:cv::Affine3
s	opencv2/core/hal/intrin_cpp.hpp	/^    _Tp s[n];$/;"	m	struct:cv::v_reg
s	opencv2/core/mat.hpp	/^    Scalar s;$/;"	m	class:cv::MatExpr
s	opencv2/core/types_c.h	/^        short* s;$/;"	m	union:CvMat::__anon325
s	opencv2/core/types_c.h	/^        short* s;$/;"	m	union:CvMatND::__anon328
s_alloc	5/ext/pb_ds/detail/cond_dealtor.hpp	/^	static entry_allocator 	s_alloc;$/;"	m	class:__gnu_pbds::detail::cond_dealtor
s_alloc	5/ext/pb_ds/detail/cond_dealtor.hpp	/^      cond_dealtor<Entry, _Alloc>::s_alloc;$/;"	m	class:__gnu_pbds::detail::cond_dealtor
s_const_end_it	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      static const_iterator 		s_const_end_it;$/;"	m	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
s_const_end_it	5/ext/pb_ds/detail/cc_hash_table_map_/iterators_fn_imps.hpp	/^PB_DS_CLASS_C_DEC::s_const_end_it;$/;"	m	class:PB_DS_CLASS_C_DEC
s_const_end_it	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      static const_iterator 	s_const_end_it;$/;"	m	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
s_const_end_it	5/ext/pb_ds/detail/gp_hash_table_map_/iterator_fn_imps.hpp	/^PB_DS_CLASS_C_DEC::s_const_end_it;$/;"	m	class:PB_DS_CLASS_C_DEC
s_const_find_end_it	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      static point_const_iterator 	s_const_find_end_it;$/;"	m	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
s_end_it	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      static iterator 			s_end_it;$/;"	m	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
s_end_it	5/ext/pb_ds/detail/cc_hash_table_map_/iterators_fn_imps.hpp	/^PB_DS_CLASS_C_DEC::s_end_it;$/;"	m	class:PB_DS_CLASS_C_DEC
s_end_it	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      static iterator 		s_end_it;$/;"	m	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
s_end_it	5/ext/pb_ds/detail/gp_hash_table_map_/iterator_fn_imps.hpp	/^PB_DS_CLASS_C_DEC::s_end_it;$/;"	m	class:PB_DS_CLASS_C_DEC
s_entry_allocator	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	/^      static entry_allocator 	s_entry_allocator;$/;"	m	class:__gnu_pbds::detail::binary_heap
s_entry_allocator	5/ext/pb_ds/detail/binary_heap_/constructors_destructor_fn_imps.hpp	/^PB_DS_CLASS_C_DEC::s_entry_allocator;$/;"	m	class:PB_DS_CLASS_C_DEC
s_entry_allocator	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      static entry_allocator 		s_entry_allocator;$/;"	m	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
s_entry_allocator	5/ext/pb_ds/detail/cc_hash_table_map_/constructor_destructor_fn_imps.hpp	/^PB_DS_CLASS_C_DEC::s_entry_allocator;$/;"	m	class:PB_DS_CLASS_C_DEC
s_entry_allocator	5/ext/pb_ds/detail/gp_hash_table_map_/constructor_destructor_fn_imps.hpp	/^PB_DS_CLASS_C_DEC::s_entry_allocator;$/;"	m	class:PB_DS_CLASS_C_DEC
s_entry_allocator	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      static entry_allocator 	s_entry_allocator;$/;"	m	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
s_entry_allocator	5/ext/pb_ds/detail/list_update_map_/constructor_destructor_fn_imps.hpp	/^PB_DS_CLASS_C_DEC::s_entry_allocator;$/;"	m	class:PB_DS_CLASS_C_DEC
s_entry_allocator	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      static entry_allocator 			s_entry_allocator;$/;"	m	class:__gnu_pbds::detail::PB_DS_LU_NAME
s_entry_pointer_allocator	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      static entry_pointer_allocator 	s_entry_pointer_allocator;$/;"	m	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
s_entry_pointer_allocator	5/ext/pb_ds/detail/cc_hash_table_map_/constructor_destructor_fn_imps.hpp	/^PB_DS_CLASS_C_DEC::s_entry_pointer_allocator;$/;"	m	class:PB_DS_CLASS_C_DEC
s_eq_fn	5/ext/pb_ds/detail/list_update_map_/constructor_destructor_fn_imps.hpp	/^Eq_Fn PB_DS_CLASS_C_DEC::s_eq_fn;$/;"	m	class:PB_DS_CLASS_C_DEC
s_eq_fn	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      static Eq_Fn 				s_eq_fn;$/;"	m	class:__gnu_pbds::detail::PB_DS_LU_NAME
s_find_end_it	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      static point_iterator 		s_find_end_it;$/;"	m	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
s_head_allocator	5/ext/pb_ds/detail/pat_trie_/constructors_destructor_fn_imps.hpp	/^PB_DS_CLASS_C_DEC::s_head_allocator;$/;"	m	class:PB_DS_CLASS_C_DEC
s_head_allocator	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      static head_allocator 		s_head_allocator;$/;"	m	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
s_highest_bit_1	5/ext/pb_ds/detail/hash_fn/mask_based_range_hashing.hpp	/^      const static size_type 	s_highest_bit_1;$/;"	m	class:__gnu_pbds::detail::mask_based_range_hashing
s_highest_bit_1	5/ext/pb_ds/detail/hash_fn/mask_based_range_hashing.hpp	/^    const typename mask_based_range_hashing<Size_Type>::size_type mask_based_range_hashing<Size_Type>::s_highest_bit_1 = static_cast<typename mask_based_range_hashing<Size_Type>::size_type>(1) << (s_num_bits_in_size_type - 1);$/;"	m	class:__gnu_pbds::detail::mask_based_range_hashing
s_inode_alloc	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      static __rebind_in 		s_inode_alloc;$/;"	m	struct:__gnu_pbds::detail::pat_trie_base::_Inode
s_inode_alloc	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^    PB_DS_CLASS_C_DEC::s_inode_alloc;$/;"	m	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
s_inode_allocator	5/ext/pb_ds/detail/pat_trie_/constructors_destructor_fn_imps.hpp	/^PB_DS_CLASS_C_DEC::s_inode_allocator;$/;"	m	class:PB_DS_CLASS_C_DEC
s_inode_allocator	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      static inode_allocator 		s_inode_allocator;$/;"	m	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
s_leaf_alloc	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      static __rebind_l			s_leaf_alloc;$/;"	m	struct:__gnu_pbds::detail::pat_trie_base::_Inode
s_leaf_alloc	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^    PB_DS_CLASS_C_DEC::s_leaf_alloc;$/;"	m	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
s_leaf_allocator	5/ext/pb_ds/detail/pat_trie_/constructors_destructor_fn_imps.hpp	/^PB_DS_CLASS_C_DEC::s_leaf_allocator;$/;"	m	class:PB_DS_CLASS_C_DEC
s_leaf_allocator	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      static leaf_allocator 		s_leaf_allocator;$/;"	m	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
s_metadata	5/ext/pb_ds/list_update_policy.hpp	/^     static null_type 					s_metadata;$/;"	m	class:__gnu_pbds::lu_move_to_front_policy
s_metadata_alloc	5/ext/pb_ds/detail/ov_tree_map_/constructors_destructor_fn_imps.hpp	/^PB_DS_CLASS_C_DEC::s_metadata_alloc;$/;"	m	class:PB_DS_CLASS_C_DEC
s_metadata_alloc	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      static metadata_allocator s_metadata_alloc;$/;"	m	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
s_metadata_type_indicator	5/ext/pb_ds/detail/list_update_map_/constructor_destructor_fn_imps.hpp	/^  typename PB_DS_CLASS_C_DEC::update_metadata> PB_DS_CLASS_C_DEC::s_metadata_type_indicator;$/;"	m	class:PB_DS_CLASS_C_DEC
s_metadata_type_indicator	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      static type_to_type<update_metadata> 	s_metadata_type_indicator;$/;"	m	class:__gnu_pbds::detail::PB_DS_LU_NAME
s_no_throw_copies_ind	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	/^      static no_throw_copies_t 	s_no_throw_copies_ind;$/;"	m	class:__gnu_pbds::detail::binary_heap
s_no_throw_copies_ind	5/ext/pb_ds/detail/binary_heap_/constructors_destructor_fn_imps.hpp	/^PB_DS_CLASS_C_DEC::s_no_throw_copies_ind;$/;"	m	class:PB_DS_CLASS_C_DEC
s_no_throw_copies_ind	5/ext/pb_ds/detail/left_child_next_sibling_heap_/constructors_destructor_fn_imps.hpp	/^PB_DS_CLASS_C_DEC::s_no_throw_copies_ind;$/;"	m	class:PB_DS_CLASS_C_DEC
s_no_throw_copies_ind	5/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp	/^      static no_throw_copies_t 	s_no_throw_copies_ind;$/;"	m	class:__gnu_pbds::detail::left_child_next_sibling_heap
s_node_allocator	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	/^      static node_allocator 	s_node_allocator;$/;"	m	class:__gnu_pbds::detail::PB_DS_BIN_TREE_NAME
s_node_allocator	5/ext/pb_ds/detail/bin_search_tree_/constructors_destructor_fn_imps.hpp	/^PB_DS_CLASS_C_DEC::s_node_allocator;$/;"	m	class:PB_DS_CLASS_C_DEC
s_node_allocator	5/ext/pb_ds/detail/left_child_next_sibling_heap_/constructors_destructor_fn_imps.hpp	/^PB_DS_CLASS_C_DEC::s_node_allocator;$/;"	m	class:PB_DS_CLASS_C_DEC
s_node_allocator	5/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp	/^      static node_allocator 	s_node_allocator;$/;"	m	class:__gnu_pbds::detail::left_child_next_sibling_heap
s_null_type	5/ext/pb_ds/detail/list_update_map_/constructor_destructor_fn_imps.hpp	/^null_type PB_DS_CLASS_C_DEC::s_null_type;$/;"	m	class:PB_DS_CLASS_C_DEC
s_null_type	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      static null_type 				s_null_type;$/;"	m	class:__gnu_pbds::detail::PB_DS_LU_NAME
s_null_type	5/ext/pb_ds/detail/types_traits.hpp	/^	static null_type 			s_null_type;$/;"	m	struct:__gnu_pbds::detail::type_base
s_null_type	5/ext/pb_ds/detail/types_traits.hpp	/^	static null_type 		      	s_null_type;$/;"	m	struct:__gnu_pbds::detail::type_base
s_null_type	5/ext/pb_ds/detail/types_traits.hpp	/^      type_base<Key, null_type, _Alloc, false>::s_null_type;$/;"	m	class:__gnu_pbds::detail::type_base
s_null_type	5/ext/pb_ds/detail/types_traits.hpp	/^      type_base<Key, null_type, _Alloc, true>::s_null_type;$/;"	m	class:__gnu_pbds::detail::type_base
s_num_bits_in_size_type	5/ext/pb_ds/detail/hash_fn/mask_based_range_hashing.hpp	/^      const static size_type 	s_num_bits_in_size_type;$/;"	m	class:__gnu_pbds::detail::mask_based_range_hashing
s_num_bits_in_size_type	5/ext/pb_ds/detail/hash_fn/mask_based_range_hashing.hpp	/^    mask_based_range_hashing<Size_Type>::s_num_bits_in_size_type =$/;"	m	class:__gnu_pbds::detail::mask_based_range_hashing
s_rev_ind	5/ext/pb_ds/detail/trie_policy/trie_string_access_traits_imp.hpp	/^detail::integral_constant<int, Reverse> PB_DS_CLASS_C_DEC::s_rev_ind;$/;"	m	class:PB_DS_CLASS_C_DEC
s_rev_ind	5/ext/pb_ds/trie_policy.hpp	/^    static detail::integral_constant<int, Reverse> s_rev_ind;$/;"	m	struct:__gnu_pbds::trie_string_access_traits
s_set_ind	5/ext/pb_ds/detail/pat_trie_/synth_access_traits.hpp	/^      static integral_constant<int, Set> s_set_ind;$/;"	m	struct:__gnu_pbds::detail::synth_access_traits
s_set_ind	5/ext/pb_ds/detail/pat_trie_/synth_access_traits.hpp	/^    PB_DS_SYNTH_E_ACCESS_TRAITS_C_DEC::s_set_ind;$/;"	m	class:__gnu_pbds::detail::PB_DS_SYNTH_E_ACCESS_TRAITS_C_DEC
s_update_policy	5/ext/pb_ds/detail/list_update_map_/constructor_destructor_fn_imps.hpp	/^Update_Policy PB_DS_CLASS_C_DEC::s_update_policy;$/;"	m	class:PB_DS_CLASS_C_DEC
s_update_policy	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      static Update_Policy 			s_update_policy;$/;"	m	class:__gnu_pbds::detail::PB_DS_LU_NAME
s_value_alloc	5/ext/pb_ds/detail/ov_tree_map_/constructors_destructor_fn_imps.hpp	/^PB_DS_CLASS_C_DEC::s_value_alloc;$/;"	m	class:PB_DS_CLASS_C_DEC
s_value_alloc	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      static value_allocator 	s_value_alloc;$/;"	m	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
s_value_allocator	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	/^      static value_allocator 	s_value_allocator;$/;"	m	class:__gnu_pbds::detail::binary_heap
s_value_allocator	5/ext/pb_ds/detail/binary_heap_/constructors_destructor_fn_imps.hpp	/^PB_DS_CLASS_C_DEC::s_value_allocator;$/;"	m	class:PB_DS_CLASS_C_DEC
same_type	5/ext/pb_ds/detail/standard_policies.hpp	/^      typedef is_same<default_fn, Comb_Hash_Fn> 		same_type;$/;"	t	struct:__gnu_pbds::detail::default_resize_policy
same_type	5/ext/pb_ds/detail/standard_policies.hpp	/^      typedef is_same<default_fn, Comb_Probe_Fn> 		same_type;$/;"	t	struct:__gnu_pbds::detail::default_probe_fn
sample_fraction_	opencv2/flann/autotuned_index.h	/^    float sample_fraction_;$/;"	m	class:cvflann::AutotunedIndex
sample_probe_fn	5/ext/pb_ds/detail/hash_fn/sample_probe_fn.hpp	/^  class sample_probe_fn$/;"	c	namespace:__gnu_pbds
sample_range_hashing	5/ext/pb_ds/detail/hash_fn/sample_range_hashing.hpp	/^  class sample_range_hashing$/;"	c	namespace:__gnu_pbds
sample_ranged_hash_fn	5/ext/pb_ds/detail/hash_fn/sample_ranged_hash_fn.hpp	/^  class sample_ranged_hash_fn$/;"	c	namespace:__gnu_pbds
sample_ranged_probe_fn	5/ext/pb_ds/detail/hash_fn/sample_ranged_probe_fn.hpp	/^  class sample_ranged_probe_fn$/;"	c	namespace:__gnu_pbds
sample_resize_policy	5/ext/pb_ds/detail/resize_policy/sample_resize_policy.hpp	/^  class sample_resize_policy$/;"	c	namespace:__gnu_pbds
sample_resize_trigger	5/ext/pb_ds/detail/resize_policy/sample_resize_trigger.hpp	/^  class sample_resize_trigger$/;"	c	namespace:__gnu_pbds
sample_size_policy	5/ext/pb_ds/detail/resize_policy/sample_size_policy.hpp	/^  class sample_size_policy$/;"	c	namespace:__gnu_pbds
sample_tree_node_update	5/ext/pb_ds/detail/tree_policy/sample_tree_node_update.hpp	/^  class sample_tree_node_update$/;"	c	namespace:__gnu_pbds
sample_trie_access_traits	5/ext/pb_ds/detail/trie_policy/sample_trie_access_traits.hpp	/^  struct sample_trie_access_traits$/;"	s	namespace:__gnu_pbds
sample_trie_node_update	5/ext/pb_ds/detail/trie_policy/sample_trie_node_update.hpp	/^  class sample_trie_node_update$/;"	c	namespace:__gnu_pbds
sample_update_policy	5/ext/pb_ds/detail/list_update_policy/sample_update_policy.hpp	/^  struct sample_update_policy$/;"	s	namespace:__gnu_pbds
sampledDataset_	opencv2/flann/autotuned_index.h	/^    Matrix<ElementType> sampledDataset_;$/;"	m	class:cvflann::AutotunedIndex
sampling_tag	5/parallel/tags.h	/^    sampling_tag() { }$/;"	f	struct:__gnu_parallel::sampling_tag
sampling_tag	5/parallel/tags.h	/^    sampling_tag(_ThreadIndex __num_threads)$/;"	f	struct:__gnu_parallel::sampling_tag
sampling_tag	5/parallel/tags.h	/^  struct sampling_tag : public parallel_tag$/;"	s	namespace:__gnu_parallel
saturate_cast	opencv2/core/cuda/saturate_cast.hpp	/^    template<> __device__ __forceinline__ int saturate_cast<int>(double v)$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/saturate_cast.hpp	/^    template<> __device__ __forceinline__ int saturate_cast<int>(float v)$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/saturate_cast.hpp	/^    template<> __device__ __forceinline__ int saturate_cast<int>(uint v)$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/saturate_cast.hpp	/^    template<> __device__ __forceinline__ schar saturate_cast<schar>(double v)$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/saturate_cast.hpp	/^    template<> __device__ __forceinline__ schar saturate_cast<schar>(float v)$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/saturate_cast.hpp	/^    template<> __device__ __forceinline__ schar saturate_cast<schar>(int v)$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/saturate_cast.hpp	/^    template<> __device__ __forceinline__ schar saturate_cast<schar>(short v)$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/saturate_cast.hpp	/^    template<> __device__ __forceinline__ schar saturate_cast<schar>(uchar v)$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/saturate_cast.hpp	/^    template<> __device__ __forceinline__ schar saturate_cast<schar>(uint v)$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/saturate_cast.hpp	/^    template<> __device__ __forceinline__ schar saturate_cast<schar>(ushort v)$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/saturate_cast.hpp	/^    template<> __device__ __forceinline__ short saturate_cast<short>(double v)$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/saturate_cast.hpp	/^    template<> __device__ __forceinline__ short saturate_cast<short>(float v)$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/saturate_cast.hpp	/^    template<> __device__ __forceinline__ short saturate_cast<short>(int v)$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/saturate_cast.hpp	/^    template<> __device__ __forceinline__ short saturate_cast<short>(uint v)$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/saturate_cast.hpp	/^    template<> __device__ __forceinline__ short saturate_cast<short>(ushort v)$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/saturate_cast.hpp	/^    template<> __device__ __forceinline__ uchar saturate_cast<uchar>(double v)$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/saturate_cast.hpp	/^    template<> __device__ __forceinline__ uchar saturate_cast<uchar>(float v)$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/saturate_cast.hpp	/^    template<> __device__ __forceinline__ uchar saturate_cast<uchar>(int v)$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/saturate_cast.hpp	/^    template<> __device__ __forceinline__ uchar saturate_cast<uchar>(schar v)$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/saturate_cast.hpp	/^    template<> __device__ __forceinline__ uchar saturate_cast<uchar>(short v)$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/saturate_cast.hpp	/^    template<> __device__ __forceinline__ uchar saturate_cast<uchar>(uint v)$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/saturate_cast.hpp	/^    template<> __device__ __forceinline__ uchar saturate_cast<uchar>(ushort v)$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/saturate_cast.hpp	/^    template<> __device__ __forceinline__ uint saturate_cast<uint>(double v)$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/saturate_cast.hpp	/^    template<> __device__ __forceinline__ uint saturate_cast<uint>(float v)$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/saturate_cast.hpp	/^    template<> __device__ __forceinline__ uint saturate_cast<uint>(int v)$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/saturate_cast.hpp	/^    template<> __device__ __forceinline__ uint saturate_cast<uint>(schar v)$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/saturate_cast.hpp	/^    template<> __device__ __forceinline__ uint saturate_cast<uint>(short v)$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/saturate_cast.hpp	/^    template<> __device__ __forceinline__ ushort saturate_cast<ushort>(double v)$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/saturate_cast.hpp	/^    template<> __device__ __forceinline__ ushort saturate_cast<ushort>(float v)$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/saturate_cast.hpp	/^    template<> __device__ __forceinline__ ushort saturate_cast<ushort>(int v)$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/saturate_cast.hpp	/^    template<> __device__ __forceinline__ ushort saturate_cast<ushort>(schar v)$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/saturate_cast.hpp	/^    template<> __device__ __forceinline__ ushort saturate_cast<ushort>(short v)$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/saturate_cast.hpp	/^    template<> __device__ __forceinline__ ushort saturate_cast<ushort>(uint v)$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/saturate_cast.hpp	/^    template<typename _Tp> __device__ __forceinline__ _Tp saturate_cast(double v) { return _Tp(v); }$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/saturate_cast.hpp	/^    template<typename _Tp> __device__ __forceinline__ _Tp saturate_cast(float v) { return _Tp(v); }$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/saturate_cast.hpp	/^    template<typename _Tp> __device__ __forceinline__ _Tp saturate_cast(int v) { return _Tp(v); }$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/saturate_cast.hpp	/^    template<typename _Tp> __device__ __forceinline__ _Tp saturate_cast(schar v) { return _Tp(v); }$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/saturate_cast.hpp	/^    template<typename _Tp> __device__ __forceinline__ _Tp saturate_cast(short v) { return _Tp(v); }$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/saturate_cast.hpp	/^    template<typename _Tp> __device__ __forceinline__ _Tp saturate_cast(uchar v) { return _Tp(v); }$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/saturate_cast.hpp	/^    template<typename _Tp> __device__ __forceinline__ _Tp saturate_cast(uint v) { return _Tp(v); }$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/saturate_cast.hpp	/^    template<typename _Tp> __device__ __forceinline__ _Tp saturate_cast(ushort v) { return _Tp(v); }$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/vec_math.hpp	/^template<typename T> static __device__ __forceinline__ T saturate_cast(const char1& v) {return vec_math_detail::saturate_cast_helper<T>(v);}$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/vec_math.hpp	/^template<typename T> static __device__ __forceinline__ T saturate_cast(const char2& v) {return vec_math_detail::saturate_cast_helper<T>(v);}$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/vec_math.hpp	/^template<typename T> static __device__ __forceinline__ T saturate_cast(const char3& v) {return vec_math_detail::saturate_cast_helper<T>(v);}$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/vec_math.hpp	/^template<typename T> static __device__ __forceinline__ T saturate_cast(const char4& v) {return vec_math_detail::saturate_cast_helper<T>(v);}$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/vec_math.hpp	/^template<typename T> static __device__ __forceinline__ T saturate_cast(const double1& v) {return vec_math_detail::saturate_cast_helper<T>(v);}$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/vec_math.hpp	/^template<typename T> static __device__ __forceinline__ T saturate_cast(const double2& v) {return vec_math_detail::saturate_cast_helper<T>(v);}$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/vec_math.hpp	/^template<typename T> static __device__ __forceinline__ T saturate_cast(const double3& v) {return vec_math_detail::saturate_cast_helper<T>(v);}$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/vec_math.hpp	/^template<typename T> static __device__ __forceinline__ T saturate_cast(const double4& v) {return vec_math_detail::saturate_cast_helper<T>(v);}$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/vec_math.hpp	/^template<typename T> static __device__ __forceinline__ T saturate_cast(const float1& v) {return vec_math_detail::saturate_cast_helper<T>(v);}$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/vec_math.hpp	/^template<typename T> static __device__ __forceinline__ T saturate_cast(const float2& v) {return vec_math_detail::saturate_cast_helper<T>(v);}$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/vec_math.hpp	/^template<typename T> static __device__ __forceinline__ T saturate_cast(const float3& v) {return vec_math_detail::saturate_cast_helper<T>(v);}$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/vec_math.hpp	/^template<typename T> static __device__ __forceinline__ T saturate_cast(const float4& v) {return vec_math_detail::saturate_cast_helper<T>(v);}$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/vec_math.hpp	/^template<typename T> static __device__ __forceinline__ T saturate_cast(const int1& v) {return vec_math_detail::saturate_cast_helper<T>(v);}$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/vec_math.hpp	/^template<typename T> static __device__ __forceinline__ T saturate_cast(const int2& v) {return vec_math_detail::saturate_cast_helper<T>(v);}$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/vec_math.hpp	/^template<typename T> static __device__ __forceinline__ T saturate_cast(const int3& v) {return vec_math_detail::saturate_cast_helper<T>(v);}$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/vec_math.hpp	/^template<typename T> static __device__ __forceinline__ T saturate_cast(const int4& v) {return vec_math_detail::saturate_cast_helper<T>(v);}$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/vec_math.hpp	/^template<typename T> static __device__ __forceinline__ T saturate_cast(const short1& v) {return vec_math_detail::saturate_cast_helper<T>(v);}$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/vec_math.hpp	/^template<typename T> static __device__ __forceinline__ T saturate_cast(const short2& v) {return vec_math_detail::saturate_cast_helper<T>(v);}$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/vec_math.hpp	/^template<typename T> static __device__ __forceinline__ T saturate_cast(const short3& v) {return vec_math_detail::saturate_cast_helper<T>(v);}$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/vec_math.hpp	/^template<typename T> static __device__ __forceinline__ T saturate_cast(const short4& v) {return vec_math_detail::saturate_cast_helper<T>(v);}$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/vec_math.hpp	/^template<typename T> static __device__ __forceinline__ T saturate_cast(const uchar1& v) {return vec_math_detail::saturate_cast_helper<T>(v);}$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/vec_math.hpp	/^template<typename T> static __device__ __forceinline__ T saturate_cast(const uchar2& v) {return vec_math_detail::saturate_cast_helper<T>(v);}$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/vec_math.hpp	/^template<typename T> static __device__ __forceinline__ T saturate_cast(const uchar3& v) {return vec_math_detail::saturate_cast_helper<T>(v);}$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/vec_math.hpp	/^template<typename T> static __device__ __forceinline__ T saturate_cast(const uchar4& v) {return vec_math_detail::saturate_cast_helper<T>(v);}$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/vec_math.hpp	/^template<typename T> static __device__ __forceinline__ T saturate_cast(const uint1& v) {return vec_math_detail::saturate_cast_helper<T>(v);}$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/vec_math.hpp	/^template<typename T> static __device__ __forceinline__ T saturate_cast(const uint2& v) {return vec_math_detail::saturate_cast_helper<T>(v);}$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/vec_math.hpp	/^template<typename T> static __device__ __forceinline__ T saturate_cast(const uint3& v) {return vec_math_detail::saturate_cast_helper<T>(v);}$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/vec_math.hpp	/^template<typename T> static __device__ __forceinline__ T saturate_cast(const uint4& v) {return vec_math_detail::saturate_cast_helper<T>(v);}$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/vec_math.hpp	/^template<typename T> static __device__ __forceinline__ T saturate_cast(const ushort1& v) {return vec_math_detail::saturate_cast_helper<T>(v);}$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/vec_math.hpp	/^template<typename T> static __device__ __forceinline__ T saturate_cast(const ushort2& v) {return vec_math_detail::saturate_cast_helper<T>(v);}$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/vec_math.hpp	/^template<typename T> static __device__ __forceinline__ T saturate_cast(const ushort3& v) {return vec_math_detail::saturate_cast_helper<T>(v);}$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/cuda/vec_math.hpp	/^template<typename T> static __device__ __forceinline__ T saturate_cast(const ushort4& v) {return vec_math_detail::saturate_cast_helper<T>(v);}$/;"	f	namespace:cv::cuda::device
saturate_cast	opencv2/core/saturate.hpp	/^template<> inline int saturate_cast<int>(double v)           { return cvRound(v); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<> inline int saturate_cast<int>(float v)            { return cvRound(v); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<> inline schar saturate_cast<schar>(double v)       { int iv = cvRound(v); return saturate_cast<schar>(iv); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<> inline schar saturate_cast<schar>(float v)        { int iv = cvRound(v); return saturate_cast<schar>(iv); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<> inline schar saturate_cast<schar>(int v)          { return (schar)((unsigned)(v-SCHAR_MIN) <= (unsigned)UCHAR_MAX ? v : v > 0 ? SCHAR_MAX : SCHAR_MIN); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<> inline schar saturate_cast<schar>(int64 v)        { return (schar)((uint64)((int64)v-SCHAR_MIN) <= (uint64)UCHAR_MAX ? v : v > 0 ? SCHAR_MAX : SCHAR_MIN); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<> inline schar saturate_cast<schar>(short v)        { return saturate_cast<schar>((int)v); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<> inline schar saturate_cast<schar>(uchar v)        { return (schar)std::min((int)v, SCHAR_MAX); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<> inline schar saturate_cast<schar>(uint64 v)       { return (schar)std::min(v, (uint64)SCHAR_MAX); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<> inline schar saturate_cast<schar>(unsigned v)     { return (schar)std::min(v, (unsigned)SCHAR_MAX); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<> inline schar saturate_cast<schar>(ushort v)       { return (schar)std::min((unsigned)v, (unsigned)SCHAR_MAX); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<> inline short saturate_cast<short>(double v)       { int iv = cvRound(v); return saturate_cast<short>(iv); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<> inline short saturate_cast<short>(float v)        { int iv = cvRound(v); return saturate_cast<short>(iv); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<> inline short saturate_cast<short>(int v)          { return (short)((unsigned)(v - SHRT_MIN) <= (unsigned)USHRT_MAX ? v : v > 0 ? SHRT_MAX : SHRT_MIN); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<> inline short saturate_cast<short>(int64 v)        { return (short)((uint64)((int64)v - SHRT_MIN) <= (uint64)USHRT_MAX ? v : v > 0 ? SHRT_MAX : SHRT_MIN); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<> inline short saturate_cast<short>(uint64 v)       { return (short)std::min(v, (uint64)SHRT_MAX); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<> inline short saturate_cast<short>(unsigned v)     { return (short)std::min(v, (unsigned)SHRT_MAX); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<> inline short saturate_cast<short>(ushort v)       { return (short)std::min((int)v, SHRT_MAX); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<> inline uchar saturate_cast<uchar>(double v)       { int iv = cvRound(v); return saturate_cast<uchar>(iv); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<> inline uchar saturate_cast<uchar>(float v)        { int iv = cvRound(v); return saturate_cast<uchar>(iv); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<> inline uchar saturate_cast<uchar>(int v)          { return (uchar)((unsigned)v <= UCHAR_MAX ? v : v > 0 ? UCHAR_MAX : 0); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<> inline uchar saturate_cast<uchar>(int64 v)        { return (uchar)((uint64)v <= (uint64)UCHAR_MAX ? v : v > 0 ? UCHAR_MAX : 0); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<> inline uchar saturate_cast<uchar>(schar v)        { return (uchar)std::max((int)v, 0); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<> inline uchar saturate_cast<uchar>(short v)        { return saturate_cast<uchar>((int)v); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<> inline uchar saturate_cast<uchar>(uint64 v)       { return (uchar)std::min(v, (uint64)UCHAR_MAX); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<> inline uchar saturate_cast<uchar>(unsigned v)     { return (uchar)std::min(v, (unsigned)UCHAR_MAX); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<> inline uchar saturate_cast<uchar>(ushort v)       { return (uchar)std::min((unsigned)v, (unsigned)UCHAR_MAX); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<> inline unsigned saturate_cast<unsigned>(double v) { return cvRound(v); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<> inline unsigned saturate_cast<unsigned>(float v)  { return cvRound(v); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<> inline ushort saturate_cast<ushort>(double v)     { int iv = cvRound(v); return saturate_cast<ushort>(iv); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<> inline ushort saturate_cast<ushort>(float v)      { int iv = cvRound(v); return saturate_cast<ushort>(iv); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<> inline ushort saturate_cast<ushort>(int v)        { return (ushort)((unsigned)v <= (unsigned)USHRT_MAX ? v : v > 0 ? USHRT_MAX : 0); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<> inline ushort saturate_cast<ushort>(int64 v)      { return (ushort)((uint64)v <= (uint64)USHRT_MAX ? v : v > 0 ? USHRT_MAX : 0); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<> inline ushort saturate_cast<ushort>(schar v)      { return (ushort)std::max((int)v, 0); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<> inline ushort saturate_cast<ushort>(short v)      { return (ushort)std::max((int)v, 0); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<> inline ushort saturate_cast<ushort>(uint64 v)     { return (ushort)std::min(v, (uint64)USHRT_MAX); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<> inline ushort saturate_cast<ushort>(unsigned v)   { return (ushort)std::min(v, (unsigned)USHRT_MAX); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<typename _Tp> static inline _Tp saturate_cast(double v)   { return _Tp(v); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<typename _Tp> static inline _Tp saturate_cast(float v)    { return _Tp(v); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<typename _Tp> static inline _Tp saturate_cast(int v)      { return _Tp(v); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<typename _Tp> static inline _Tp saturate_cast(int64 v)    { return _Tp(v); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<typename _Tp> static inline _Tp saturate_cast(schar v)    { return _Tp(v); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<typename _Tp> static inline _Tp saturate_cast(short v)    { return _Tp(v); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<typename _Tp> static inline _Tp saturate_cast(uchar v)    { return _Tp(v); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<typename _Tp> static inline _Tp saturate_cast(uint64 v)   { return _Tp(v); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<typename _Tp> static inline _Tp saturate_cast(unsigned v) { return _Tp(v); }$/;"	f	namespace:cv
saturate_cast	opencv2/core/saturate.hpp	/^template<typename _Tp> static inline _Tp saturate_cast(ushort v)   { return _Tp(v); }$/;"	f	namespace:cv
saturate_cast	opencv2/cudev/util/saturate_cast.hpp	/^template <> __device__ __forceinline__ int saturate_cast<int>(double v)$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/saturate_cast.hpp	/^template <> __device__ __forceinline__ int saturate_cast<int>(float v)$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/saturate_cast.hpp	/^template <> __device__ __forceinline__ int saturate_cast<int>(uint v)$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/saturate_cast.hpp	/^template <> __device__ __forceinline__ schar saturate_cast<schar>(double v)$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/saturate_cast.hpp	/^template <> __device__ __forceinline__ schar saturate_cast<schar>(float v)$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/saturate_cast.hpp	/^template <> __device__ __forceinline__ schar saturate_cast<schar>(int v)$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/saturate_cast.hpp	/^template <> __device__ __forceinline__ schar saturate_cast<schar>(short v)$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/saturate_cast.hpp	/^template <> __device__ __forceinline__ schar saturate_cast<schar>(uchar v)$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/saturate_cast.hpp	/^template <> __device__ __forceinline__ schar saturate_cast<schar>(uint v)$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/saturate_cast.hpp	/^template <> __device__ __forceinline__ schar saturate_cast<schar>(ushort v)$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/saturate_cast.hpp	/^template <> __device__ __forceinline__ short saturate_cast<short>(double v)$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/saturate_cast.hpp	/^template <> __device__ __forceinline__ short saturate_cast<short>(float v)$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/saturate_cast.hpp	/^template <> __device__ __forceinline__ short saturate_cast<short>(int v)$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/saturate_cast.hpp	/^template <> __device__ __forceinline__ short saturate_cast<short>(uint v)$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/saturate_cast.hpp	/^template <> __device__ __forceinline__ short saturate_cast<short>(ushort v)$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/saturate_cast.hpp	/^template <> __device__ __forceinline__ uchar saturate_cast<uchar>(double v)$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/saturate_cast.hpp	/^template <> __device__ __forceinline__ uchar saturate_cast<uchar>(float v)$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/saturate_cast.hpp	/^template <> __device__ __forceinline__ uchar saturate_cast<uchar>(int v)$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/saturate_cast.hpp	/^template <> __device__ __forceinline__ uchar saturate_cast<uchar>(schar v)$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/saturate_cast.hpp	/^template <> __device__ __forceinline__ uchar saturate_cast<uchar>(short v)$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/saturate_cast.hpp	/^template <> __device__ __forceinline__ uchar saturate_cast<uchar>(uint v)$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/saturate_cast.hpp	/^template <> __device__ __forceinline__ uchar saturate_cast<uchar>(ushort v)$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/saturate_cast.hpp	/^template <> __device__ __forceinline__ uint saturate_cast<uint>(double v)$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/saturate_cast.hpp	/^template <> __device__ __forceinline__ uint saturate_cast<uint>(float v)$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/saturate_cast.hpp	/^template <> __device__ __forceinline__ uint saturate_cast<uint>(int v)$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/saturate_cast.hpp	/^template <> __device__ __forceinline__ uint saturate_cast<uint>(schar v)$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/saturate_cast.hpp	/^template <> __device__ __forceinline__ uint saturate_cast<uint>(short v)$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/saturate_cast.hpp	/^template <> __device__ __forceinline__ ushort saturate_cast<ushort>(double v)$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/saturate_cast.hpp	/^template <> __device__ __forceinline__ ushort saturate_cast<ushort>(float v)$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/saturate_cast.hpp	/^template <> __device__ __forceinline__ ushort saturate_cast<ushort>(int v)$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/saturate_cast.hpp	/^template <> __device__ __forceinline__ ushort saturate_cast<ushort>(schar v)$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/saturate_cast.hpp	/^template <> __device__ __forceinline__ ushort saturate_cast<ushort>(short v)$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/saturate_cast.hpp	/^template <> __device__ __forceinline__ ushort saturate_cast<ushort>(uint v)$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/saturate_cast.hpp	/^template <typename T> __device__ __forceinline__ T saturate_cast(double v) { return T(v); }$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/saturate_cast.hpp	/^template <typename T> __device__ __forceinline__ T saturate_cast(float v) { return T(v); }$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/saturate_cast.hpp	/^template <typename T> __device__ __forceinline__ T saturate_cast(int v) { return T(v); }$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/saturate_cast.hpp	/^template <typename T> __device__ __forceinline__ T saturate_cast(schar v) { return T(v); }$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/saturate_cast.hpp	/^template <typename T> __device__ __forceinline__ T saturate_cast(short v) { return T(v); }$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/saturate_cast.hpp	/^template <typename T> __device__ __forceinline__ T saturate_cast(uchar v) { return T(v); }$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/saturate_cast.hpp	/^template <typename T> __device__ __forceinline__ T saturate_cast(uint v) { return T(v); }$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/saturate_cast.hpp	/^template <typename T> __device__ __forceinline__ T saturate_cast(ushort v) { return T(v); }$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/vec_math.hpp	/^template<typename T> __device__ __forceinline__ T saturate_cast(const char1& v) { return vec_math_detail::SatCastHelper<VecTraits<T>::cn, T>::cast(v); }$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/vec_math.hpp	/^template<typename T> __device__ __forceinline__ T saturate_cast(const char2& v) { return vec_math_detail::SatCastHelper<VecTraits<T>::cn, T>::cast(v); }$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/vec_math.hpp	/^template<typename T> __device__ __forceinline__ T saturate_cast(const char3& v) { return vec_math_detail::SatCastHelper<VecTraits<T>::cn, T>::cast(v); }$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/vec_math.hpp	/^template<typename T> __device__ __forceinline__ T saturate_cast(const char4& v) { return vec_math_detail::SatCastHelper<VecTraits<T>::cn, T>::cast(v); }$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/vec_math.hpp	/^template<typename T> __device__ __forceinline__ T saturate_cast(const double1& v) { return vec_math_detail::SatCastHelper<VecTraits<T>::cn, T>::cast(v); }$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/vec_math.hpp	/^template<typename T> __device__ __forceinline__ T saturate_cast(const double2& v) { return vec_math_detail::SatCastHelper<VecTraits<T>::cn, T>::cast(v); }$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/vec_math.hpp	/^template<typename T> __device__ __forceinline__ T saturate_cast(const double3& v) { return vec_math_detail::SatCastHelper<VecTraits<T>::cn, T>::cast(v); }$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/vec_math.hpp	/^template<typename T> __device__ __forceinline__ T saturate_cast(const double4& v) { return vec_math_detail::SatCastHelper<VecTraits<T>::cn, T>::cast(v); }$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/vec_math.hpp	/^template<typename T> __device__ __forceinline__ T saturate_cast(const float1& v) { return vec_math_detail::SatCastHelper<VecTraits<T>::cn, T>::cast(v); }$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/vec_math.hpp	/^template<typename T> __device__ __forceinline__ T saturate_cast(const float2& v) { return vec_math_detail::SatCastHelper<VecTraits<T>::cn, T>::cast(v); }$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/vec_math.hpp	/^template<typename T> __device__ __forceinline__ T saturate_cast(const float3& v) { return vec_math_detail::SatCastHelper<VecTraits<T>::cn, T>::cast(v); }$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/vec_math.hpp	/^template<typename T> __device__ __forceinline__ T saturate_cast(const float4& v) { return vec_math_detail::SatCastHelper<VecTraits<T>::cn, T>::cast(v); }$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/vec_math.hpp	/^template<typename T> __device__ __forceinline__ T saturate_cast(const int1& v) { return vec_math_detail::SatCastHelper<VecTraits<T>::cn, T>::cast(v); }$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/vec_math.hpp	/^template<typename T> __device__ __forceinline__ T saturate_cast(const int2& v) { return vec_math_detail::SatCastHelper<VecTraits<T>::cn, T>::cast(v); }$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/vec_math.hpp	/^template<typename T> __device__ __forceinline__ T saturate_cast(const int3& v) { return vec_math_detail::SatCastHelper<VecTraits<T>::cn, T>::cast(v); }$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/vec_math.hpp	/^template<typename T> __device__ __forceinline__ T saturate_cast(const int4& v) { return vec_math_detail::SatCastHelper<VecTraits<T>::cn, T>::cast(v); }$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/vec_math.hpp	/^template<typename T> __device__ __forceinline__ T saturate_cast(const short1& v) { return vec_math_detail::SatCastHelper<VecTraits<T>::cn, T>::cast(v); }$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/vec_math.hpp	/^template<typename T> __device__ __forceinline__ T saturate_cast(const short2& v) { return vec_math_detail::SatCastHelper<VecTraits<T>::cn, T>::cast(v); }$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/vec_math.hpp	/^template<typename T> __device__ __forceinline__ T saturate_cast(const short3& v) { return vec_math_detail::SatCastHelper<VecTraits<T>::cn, T>::cast(v); }$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/vec_math.hpp	/^template<typename T> __device__ __forceinline__ T saturate_cast(const short4& v) { return vec_math_detail::SatCastHelper<VecTraits<T>::cn, T>::cast(v); }$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/vec_math.hpp	/^template<typename T> __device__ __forceinline__ T saturate_cast(const uchar1& v) { return vec_math_detail::SatCastHelper<VecTraits<T>::cn, T>::cast(v); }$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/vec_math.hpp	/^template<typename T> __device__ __forceinline__ T saturate_cast(const uchar2& v) { return vec_math_detail::SatCastHelper<VecTraits<T>::cn, T>::cast(v); }$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/vec_math.hpp	/^template<typename T> __device__ __forceinline__ T saturate_cast(const uchar3& v) { return vec_math_detail::SatCastHelper<VecTraits<T>::cn, T>::cast(v); }$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/vec_math.hpp	/^template<typename T> __device__ __forceinline__ T saturate_cast(const uchar4& v) { return vec_math_detail::SatCastHelper<VecTraits<T>::cn, T>::cast(v); }$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/vec_math.hpp	/^template<typename T> __device__ __forceinline__ T saturate_cast(const uint1& v) { return vec_math_detail::SatCastHelper<VecTraits<T>::cn, T>::cast(v); }$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/vec_math.hpp	/^template<typename T> __device__ __forceinline__ T saturate_cast(const uint2& v) { return vec_math_detail::SatCastHelper<VecTraits<T>::cn, T>::cast(v); }$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/vec_math.hpp	/^template<typename T> __device__ __forceinline__ T saturate_cast(const uint3& v) { return vec_math_detail::SatCastHelper<VecTraits<T>::cn, T>::cast(v); }$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/vec_math.hpp	/^template<typename T> __device__ __forceinline__ T saturate_cast(const uint4& v) { return vec_math_detail::SatCastHelper<VecTraits<T>::cn, T>::cast(v); }$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/vec_math.hpp	/^template<typename T> __device__ __forceinline__ T saturate_cast(const ushort1& v) { return vec_math_detail::SatCastHelper<VecTraits<T>::cn, T>::cast(v); }$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/vec_math.hpp	/^template<typename T> __device__ __forceinline__ T saturate_cast(const ushort2& v) { return vec_math_detail::SatCastHelper<VecTraits<T>::cn, T>::cast(v); }$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/vec_math.hpp	/^template<typename T> __device__ __forceinline__ T saturate_cast(const ushort3& v) { return vec_math_detail::SatCastHelper<VecTraits<T>::cn, T>::cast(v); }$/;"	f	namespace:cv::cudev
saturate_cast	opencv2/cudev/util/vec_math.hpp	/^template<typename T> __device__ __forceinline__ T saturate_cast(const ushort4& v) { return vec_math_detail::SatCastHelper<VecTraits<T>::cn, T>::cast(v); }$/;"	f	namespace:cv::cudev
saturate_cast_fp16_func	opencv2/cudev/functional/functional.hpp	/^template <> struct saturate_cast_fp16_func<float, short> : unary_function<float, short>$/;"	s	namespace:cv::cudev
saturate_cast_fp16_func	opencv2/cudev/functional/functional.hpp	/^template <> struct saturate_cast_fp16_func<short, float> : unary_function<short, float>$/;"	s	namespace:cv::cudev
saturate_cast_func	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ saturate_cast_func() {}$/;"	f	struct:cv::cuda::device::saturate_cast_func
saturate_cast_func	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ saturate_cast_func(const saturate_cast_func&) {}$/;"	f	struct:cv::cuda::device::saturate_cast_func
saturate_cast_func	opencv2/core/cuda/functional.hpp	/^    template <typename T, typename D> struct saturate_cast_func : unary_function<T, D>$/;"	s	namespace:cv::cuda::device
saturate_cast_func	opencv2/cudev/functional/functional.hpp	/^template <typename T, typename D> struct saturate_cast_func : unary_function<T, D>$/;"	s	namespace:cv::cudev
saturate_cast_helper	opencv2/core/cuda/vec_math.hpp	/^    template <typename VecD, typename VecS> static __device__ __forceinline__ VecD saturate_cast_helper(const VecS& v)$/;"	f	namespace:cv::cuda::device::vec_math_detail
save	opencv2/flann.hpp	/^        void save(String filename) { nnIndex->save(filename); }$/;"	f	class:cv::flann::GenericIndex
save	opencv2/flann.hpp	/^    FLANN_DEPRECATED void save(String filename)$/;"	f	class:cv::flann::Index_
save	opencv2/flann/flann_base.hpp	/^    void save(cv::String filename)$/;"	f	class:cvflann::Index
saveIndex	opencv2/flann/autotuned_index.h	/^    virtual void saveIndex(FILE* stream)$/;"	f	class:cvflann::AutotunedIndex
saveIndex	opencv2/flann/composite_index.h	/^    void saveIndex(FILE* stream)$/;"	f	class:cvflann::CompositeIndex
saveIndex	opencv2/flann/flann_base.hpp	/^    virtual void saveIndex(FILE* stream)$/;"	f	class:cvflann::Index
saveIndex	opencv2/flann/hierarchical_clustering_index.h	/^    void saveIndex(FILE* stream)$/;"	f	class:cvflann::HierarchicalClusteringIndex
saveIndex	opencv2/flann/kdtree_index.h	/^    void saveIndex(FILE* stream)$/;"	f	class:cvflann::KDTreeIndex
saveIndex	opencv2/flann/kdtree_single_index.h	/^    void saveIndex(FILE* stream)$/;"	f	class:cvflann::KDTreeSingleIndex
saveIndex	opencv2/flann/kmeans_index.h	/^    void saveIndex(FILE* stream)$/;"	f	class:cvflann::KMeansIndex
saveIndex	opencv2/flann/linear_index.h	/^    void saveIndex(FILE*)$/;"	f	class:cvflann::LinearIndex
saveIndex	opencv2/flann/lsh_index.h	/^    void saveIndex(FILE* stream)$/;"	f	class:cvflann::LshIndex
save_header	opencv2/flann/saving.h	/^void save_header(FILE* stream, const NNIndex<Distance>& index)$/;"	f	namespace:cvflann
save_to_file	opencv2/flann/hdf5.h	/^void save_to_file(const cvflann::Matrix<T>& dataset, const String& filename, const String& name)$/;"	f	namespace:cvflann
save_tree	opencv2/flann/hierarchical_clustering_index.h	/^    void save_tree(FILE* stream, NodePtr node, int num)$/;"	f	class:cvflann::HierarchicalClusteringIndex
save_tree	opencv2/flann/kdtree_index.h	/^    void save_tree(FILE* stream, NodePtr tree)$/;"	f	class:cvflann::KDTreeIndex
save_tree	opencv2/flann/kdtree_single_index.h	/^    void save_tree(FILE* stream, NodePtr tree)$/;"	f	class:cvflann::KDTreeSingleIndex
save_tree	opencv2/flann/kmeans_index.h	/^    void save_tree(FILE* stream, KMeansNodePtr node)$/;"	f	class:cvflann::KMeansIndex
save_value	opencv2/flann/saving.h	/^void save_value(FILE* stream, const T& value, size_t count = 1)$/;"	f	namespace:cvflann
save_value	opencv2/flann/saving.h	/^void save_value(FILE* stream, const cvflann::Matrix<T>& value)$/;"	f	namespace:cvflann
save_value	opencv2/flann/saving.h	/^void save_value(FILE* stream, const std::vector<T>& value)$/;"	f	namespace:cvflann
scale	opencv2/core/cuda/filters.hpp	/^        float scale_x, scale_y ,scale;$/;"	m	struct:cv::cuda::device::IntegerAreaFilter
scale	opencv2/objdetect.hpp	/^   double scale;$/;"	m	struct:cv::DetectionROI
scale	opencv2/objdetect/objdetect_c.h	/^    double scale;$/;"	m	struct:CvHaarClassifierCascade
scale	opencv2/stitching/detail/warpers.hpp	/^    float scale;$/;"	m	struct:cv::detail::ProjectorBase
scaleAdd	opencv2/cudaarithm.hpp	/^static inline void scaleAdd(InputArray src1, double alpha, InputArray src2, OutputArray dst, Stream& stream = Stream::Null())$/;"	f	namespace:cv::cuda
scaleFactor	opencv2/objdetect/detection_based_tracker.hpp	/^                float scaleFactor;$/;"	m	class:cv::DetectionBasedTracker::IDetector
scale_factor	opencv2/cudalegacy/NCVBroxOpticalFlow.hpp	/^    Ncv32f scale_factor;$/;"	m	struct:NCVBroxOpticalFlowDescriptor
scale_x	opencv2/core/cuda/filters.hpp	/^        float scale_x, scale_y ,scale;$/;"	m	struct:cv::cuda::device::IntegerAreaFilter
scale_x	opencv2/core/cuda/filters.hpp	/^        float scale_x, scale_y;$/;"	m	struct:cv::cuda::device::AreaFilter
scale_y	opencv2/core/cuda/filters.hpp	/^        float scale_x, scale_y ,scale;$/;"	m	struct:cv::cuda::device::IntegerAreaFilter
scale_y	opencv2/core/cuda/filters.hpp	/^        float scale_x, scale_y;$/;"	m	struct:cv::cuda::device::AreaFilter
scan_is	cpp_src/locale_facets.h	/^      scan_is(mask __m, const char_type* __lo, const char_type* __hi) const$/;"	f	class:std::__ctype_abstract_base
scan_not	cpp_src/locale_facets.h	/^      scan_not(mask __m, const char_type* __lo, const char_type* __hi) const$/;"	f	class:std::__ctype_abstract_base
scanner	opencv2/core/core_c.h	/^CVAPI(int)  cvNextGraphItem( CvGraphScanner* scanner );$/;"	v
scanner	opencv2/core/core_c.h	/^CVAPI(void) cvReleaseGraphScanner( CvGraphScanner** scanner );$/;"	v
scanner	opencv2/imgproc/imgproc_c.h	/^CVAPI(CvSeq*)  cvEndFindContours( CvContourScanner* scanner );$/;"	v
scanner	opencv2/imgproc/imgproc_c.h	/^CVAPI(CvSeq*)  cvFindNextContour( CvContourScanner scanner );$/;"	v
schar	opencv2/core/hal/interface.h	/^typedef signed char schar;$/;"	t
scharrXPtr	opencv2/cudev/ptr2d/deriv.hpp	/^__host__ ScharrXPtrSz<typename PtrTraits<SrcPtr>::ptr_type> scharrXPtr(const SrcPtr& src)$/;"	f	namespace:cv::cudev
scharrX_	opencv2/cudev/expr/deriv.hpp	/^scharrX_(const SrcPtr& src)$/;"	f	namespace:cv::cudev
scharrYPtr	opencv2/cudev/ptr2d/deriv.hpp	/^__host__ ScharrYPtrSz<typename PtrTraits<SrcPtr>::ptr_type> scharrYPtr(const SrcPtr& src)$/;"	f	namespace:cv::cudev
scharrY_	opencv2/cudev/expr/deriv.hpp	/^scharrY_(const SrcPtr& src)$/;"	f	namespace:cv::cudev
scientific	cpp_src/ios_base.h	/^    static const fmtflags scientific =  _S_scientific;$/;"	m	class:std::ios_base
scientific	cpp_src/ios_base.h	/^  scientific(ios_base& __base)$/;"	f	namespace:std
seamEstimationResol	opencv2/stitching.hpp	/^    CV_WRAP double seamEstimationResol() const { return seam_est_resol_; }$/;"	f	class:cv::Stitcher
seamFinder	opencv2/stitching.hpp	/^    Ptr<detail::SeamFinder> seamFinder() { return seam_finder_; }$/;"	f	class:cv::Stitcher
seamFinder	opencv2/stitching.hpp	/^    const Ptr<detail::SeamFinder> seamFinder() const { return seam_finder_; }$/;"	f	class:cv::Stitcher
seam_est_imgs_	opencv2/stitching.hpp	/^    std::vector<cv::UMat> seam_est_imgs_;$/;"	m	class:cv::Stitcher
seam_est_resol_	opencv2/stitching.hpp	/^    double seam_est_resol_;$/;"	m	class:cv::Stitcher
seam_finder_	opencv2/stitching.hpp	/^    Ptr<detail::SeamFinder> seam_finder_;$/;"	m	class:cv::Stitcher
seam_scale_	opencv2/stitching.hpp	/^    double seam_scale_;$/;"	m	class:cv::Stitcher
seam_work_aspect_	opencv2/stitching.hpp	/^    double seam_work_aspect_;$/;"	m	class:cv::Stitcher
search	cpp_src/stl_algo.h	/^    search(_ForwardIterator1 __first1, _ForwardIterator1 __last1,$/;"	f	namespace:std
searchLevel	opencv2/flann/kdtree_index.h	/^    void searchLevel(ResultSet<DistanceType>& result_set, const ElementType* vec, NodePtr node, DistanceType mindist, int& checkCount, int maxCheck,$/;"	f	class:cvflann::KDTreeIndex
searchLevel	opencv2/flann/kdtree_single_index.h	/^    void searchLevel(ResultSet<DistanceType>& result_set, const ElementType* vec, const NodePtr node, DistanceType mindistsq,$/;"	f	class:cvflann::KDTreeSingleIndex
searchLevelExact	opencv2/flann/kdtree_index.h	/^    void searchLevelExact(ResultSet<DistanceType>& result_set, const ElementType* vec, const NodePtr node, DistanceType mindist, const float epsError)$/;"	f	class:cvflann::KDTreeIndex
searchParams	opencv2/features2d.hpp	/^    Ptr<flann::SearchParams> searchParams;$/;"	m	class:cv::FlannBasedMatcher
searchTimeCost	opencv2/flann/autotuned_index.h	/^        float searchTimeCost;$/;"	m	struct:cvflann::AutotunedIndex::CostData
search_minimal_n	5/parallel/settings.h	/^    _SequenceIndex              search_minimal_n;$/;"	m	struct:__gnu_parallel::_Settings
search_modules	opencv2/core/types_c.h	/^    int search_modules;$/;"	m	struct:CvPluginFuncInfo
search_n	cpp_src/stl_algo.h	/^    search_n(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std
search_with_ground_truth	opencv2/flann/index_testing.h	/^float search_with_ground_truth(NNIndex<Distance>& index, const Matrix<typename Distance::ElementType>& inputData,$/;"	f	namespace:cvflann
second	cpp_src/stl_pair.h	/^      _T2 second;                \/\/\/< @c second is a copy of the second object$/;"	m	struct:std::pair
second_argument_type	cpp_src/stl_function.h	/^      typedef _Arg2 second_argument_type;  \/\/\/< the type of the second argument$/;"	t	struct:std::binary_function
second_argument_type	opencv2/cudev/functional/functional.hpp	/^    typedef _Arg2   second_argument_type;$/;"	t	struct:cv::cudev::binary_function
second_type	cpp_src/stl_pair.h	/^      typedef _T2 second_type;   \/\/\/<  @c second_type is the second bound type$/;"	t	struct:std::pair
seed_random	opencv2/flann/random.h	/^inline void seed_random(unsigned int seed)$/;"	f	namespace:cvflann
seek	opencv2/core/core_c.h	/^template<typename _Tp> inline void SeqIterator<_Tp>::seek(size_t pos)$/;"	f	class:cv::SeqIterator
seekEnd	opencv2/core/mat.inl.hpp	/^void SparseMatConstIterator::seekEnd()$/;"	f	class:cv::SparseMatConstIterator
seek_dir	cpp_src/ios_base.h	/^    typedef int seek_dir;$/;"	t	class:std::ios_base
seekdir	cpp_src/ios_base.h	/^    typedef _Ios_Seekdir seekdir;$/;"	t	class:std::ios_base
selectDivision	opencv2/flann/kdtree_index.h	/^    int selectDivision(DistanceType* v)$/;"	f	class:cvflann::KDTreeIndex
sensitivity	opencv2/videostab/deblurring.hpp	/^    float sensitivity() const { return sensitivity_; }$/;"	f	class:cv::videostab::WeightingDeblurer
sensitivity_	opencv2/videostab/deblurring.hpp	/^    float sensitivity_;$/;"	m	class:cv::videostab::WeightingDeblurer
separateDetectionWork	opencv2/objdetect/detection_based_tracker.hpp	/^        cv::Ptr<SeparateDetectionWork> separateDetectionWork;$/;"	m	class:cv::DetectionBasedTracker
seq	opencv2/core/core_c.h	/^    CvSeq* seq;$/;"	m	class:cv::Seq
seq	opencv2/core/core_c.h	/^CVAPI(void)  cvClearSeq( CvSeq* seq );$/;"	v
seq	opencv2/core/core_c.h	/^CVAPI(void) cvSeqInvert( CvSeq* seq );$/;"	v
seq	opencv2/core/persistence.hpp	/^      void*        seq;        \/* sequence, beign read; CvSeq      *\/$/;"	m	struct:cv::FileNodeIterator::SeqReader
seq	opencv2/core/types_c.h	/^        CvSeq* seq; \/**< sequence (ordered collection of file nodes) *\/$/;"	m	union:CvFileNode::__anon330
sequence_tag	5/ext/pb_ds/tag_and_trait.hpp	/^  struct sequence_tag : public container_tag { };$/;"	s	namespace:__gnu_pbds
sequential	5/parallel/types.h	/^      sequential,$/;"	e	enum:__gnu_parallel::_Parallelism
sequential_tag	5/parallel/tags.h	/^  struct sequential_tag { };$/;"	s	namespace:__gnu_parallel
serialVersionUID	5/sun/reflect/annotation/AnnotationInvocationHandler.h	/^  static const jlong serialVersionUID = 6182022883658399397LL;$/;"	m	class:sun::reflect::annotation::AnnotationInvocationHandler
set	cpp_src/stl_set.h	/^        set(_InputIterator __first, _InputIterator __last)$/;"	f	class:std::set
set	cpp_src/stl_set.h	/^        set(_InputIterator __first, _InputIterator __last,$/;"	f	class:std::set
set	cpp_src/stl_set.h	/^      set()$/;"	f	class:std::set
set	cpp_src/stl_set.h	/^      set(const _Compare& __comp,$/;"	f	class:std::set
set	cpp_src/stl_set.h	/^      set(const set<_Key,_Compare,_Alloc>& __x)$/;"	f	class:std::set
set	cpp_src/stl_set.h	/^    class set$/;"	c	namespace:std
set	opencv2/core/ocl.hpp	/^    template<typename _Tp> int set(int i, const _Tp& value)$/;"	f	class:cv::ocl::Kernel
set	opencv2/flann/dynamic_bitset.h	/^    void set(size_t index)$/;"	f	class:cvflann::DynamicBitset
set	opencv2/videostab/global_motion.hpp	/^    void set(int row, int col, double coef)$/;"	f	class:cv::videostab::MotionEstimatorL1
set	opencv2/videostab/motion_stabilizing.hpp	/^    void set(int row, int col, double coef)$/;"	f	class:cv::videostab::LpMotionStabilizer
setAlpha	opencv2/core/cuda/detail/color_detail.hpp	/^        template <typename T> static __device__ __forceinline__ void setAlpha(typename TypeVec<T, 3>::vec_type& vec, T val)$/;"	f	namespace:cv::cuda::device::color_detail
setAlpha	opencv2/core/cuda/detail/color_detail.hpp	/^        template <typename T> static __device__ __forceinline__ void setAlpha(typename TypeVec<T, 4>::vec_type& vec, T val)$/;"	f	namespace:cv::cuda::device::color_detail
setAlpha	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <typename T> __device__ __forceinline__ void setAlpha(typename MakeVec<T, 3>::type& vec, T val)$/;"	f	namespace:cv::cudev::color_cvt_detail
setAlpha	opencv2/cudev/functional/detail/color_cvt.hpp	/^    template <typename T> __device__ __forceinline__ void setAlpha(typename MakeVec<T, 4>::type& vec, T val)$/;"	f	namespace:cv::cudev::color_cvt_detail
setBlender	opencv2/stitching.hpp	/^    void setBlender(Ptr<detail::Blender> b) { blender_ = b; }$/;"	f	class:cv::Stitcher
setBlurrinessRates	opencv2/videostab/deblurring.hpp	/^    virtual void setBlurrinessRates(const std::vector<float> &val) { blurrinessRates_ = &val; }$/;"	f	class:cv::videostab::DeblurerBase
setBorderMode	opencv2/videostab/inpainting.hpp	/^    void setBorderMode(int val) { borderMode_ = val; }$/;"	f	class:cv::videostab::MotionInpainter
setBorderMode	opencv2/videostab/stabilizer.hpp	/^    void setBorderMode(int val) { borderMode_ = val; }$/;"	f	class:cv::videostab::StabilizerBase
setBundleAdjuster	opencv2/stitching.hpp	/^    void setBundleAdjuster(Ptr<detail::BundleAdjusterBase> bundle_adjuster)$/;"	f	class:cv::Stitcher
setCellSize	opencv2/videostab/outlier_rejection.hpp	/^    void setCellSize(Size val) { cellSize_ = val; }$/;"	f	class:cv::videostab::TranslationBasedLocalOutlierRejector
setCompositingResol	opencv2/stitching.hpp	/^    CV_WRAP void setCompositingResol(double resol_mpx) { compose_resol_ = resol_mpx; }$/;"	f	class:cv::Stitcher
setConfThresh	opencv2/stitching/detail/motion_estimators.hpp	/^    void setConfThresh(double conf_thresh) { conf_thresh_ = conf_thresh; }$/;"	f	class:cv::detail::BundleAdjusterBase
setCorrectionForInclusion	opencv2/videostab/stabilizer.hpp	/^    void setCorrectionForInclusion(bool val) { doCorrectionForInclusion_ = val; }$/;"	f	class:cv::videostab::StabilizerBase
setCostFunction	opencv2/stitching/detail/seam_finders.hpp	/^    void setCostFunction(CostFunction val) { costFunc_ = val; }$/;"	f	class:cv::detail::DpSeamFinder
setDeblurer	opencv2/videostab/stabilizer.hpp	/^    void setDeblurer(Ptr<DeblurerBase> val) { deblurer_ = val; }$/;"	f	class:cv::videostab::StabilizerBase
setDestination	opencv2/flann/logger.h	/^    static void setDestination(const char* name) { instance()._setDestination(name); }$/;"	f	class:cvflann::Logger
setDetector	opencv2/videostab/global_motion.hpp	/^    void setDetector(Ptr<FeatureDetector> val) { detector_ = val; }$/;"	f	class:cv::videostab::KeypointBasedMotionEstimator
setDistThreshold	opencv2/videostab/inpainting.hpp	/^    void setDistThreshold(float val) { distThresh_ = val; }$/;"	f	class:cv::videostab::MotionInpainter
setEstimateTrimRatio	opencv2/videostab/stabilizer.hpp	/^    void setEstimateTrimRatio(bool val) { mustEstTrimRatio_ = val; }$/;"	f	class:cv::videostab::TwoPassStabilizer
setExposureCompensator	opencv2/stitching.hpp	/^    void setExposureCompensator(Ptr<detail::ExposureCompensator> exposure_comp)$/;"	f	class:cv::Stitcher
setFeatureDesc	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^    __host__ NCVStatus setFeatureDesc(HaarFeatureDescriptor32 f)$/;"	f	struct:HaarClassifierNode128
setFeaturesFinder	opencv2/stitching.hpp	/^    void setFeaturesFinder(Ptr<detail::FeaturesFinder> features_finder)$/;"	f	class:cv::Stitcher
setFeaturesMatcher	opencv2/stitching.hpp	/^    void setFeaturesMatcher(Ptr<detail::FeaturesMatcher> features_matcher)$/;"	f	class:cv::Stitcher
setFlags	opencv2/core/utility.hpp	/^static inline void    setFlags(int modeFlags) { setFlags((FLAGS)modeFlags); }$/;"	f	namespace:cv::instr
setFlowErrorThreshold	opencv2/videostab/inpainting.hpp	/^    void setFlowErrorThreshold(float val) { flowErrorThreshold_ = val; }$/;"	f	class:cv::videostab::MotionInpainter
setFrameCount	opencv2/videostab/wobble_suppression.hpp	/^    virtual void setFrameCount(int val) { frameCount_ = val; }$/;"	f	class:cv::videostab::WobbleSuppressorBase
setFrameSize	opencv2/videostab/motion_stabilizing.hpp	/^    void setFrameSize(Size val) { frameSize_ = val; }$/;"	f	class:cv::videostab::LpMotionStabilizer
setFrameSource	opencv2/videostab/stabilizer.hpp	/^    void setFrameSource(Ptr<IFrameSource> val) { frameSource_ = val; }$/;"	f	class:cv::videostab::StabilizerBase
setFrames	opencv2/videostab/deblurring.hpp	/^    virtual void setFrames(const std::vector<Mat> &val) { frames_ = &val; }$/;"	f	class:cv::videostab::DeblurerBase
setFrames	opencv2/videostab/inpainting.hpp	/^    virtual void setFrames(const std::vector<Mat> &val) { frames_ = &val; }$/;"	f	class:cv::videostab::InpainterBase
setInpainter	opencv2/videostab/stabilizer.hpp	/^    void setInpainter(Ptr<InpainterBase> val) { inpainter_ = val; }$/;"	f	class:cv::videostab::StabilizerBase
setIppErrorStatus	opencv2/core/private.hpp	216;"	d
setLeftNodeDesc	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^    __host__ NCVStatus setLeftNodeDesc(HaarClassifierNodeDescriptor32 nl)$/;"	f	struct:HaarClassifierNode128
setLevel	opencv2/flann/logger.h	/^    static void setLevel(int level) { instance().logLevel = level; }$/;"	f	class:cvflann::Logger
setLog	opencv2/videostab/stabilizer.hpp	/^    void setLog(Ptr<ILog> ilog) { log_ = ilog; }$/;"	f	class:cv::videostab::StabilizerBase
setMask	opencv2/core/cuda/utility.hpp	/^        __device__ __forceinline__ void setMask(int z)$/;"	f	struct:cv::cuda::device::MaskCollection
setMask	opencv2/core/cuda/utility.hpp	/^        __device__ __forceinline__ void setMask(int) const$/;"	f	struct:cv::cuda::device::WithOutMask
setMatchingMask	opencv2/stitching.hpp	/^    void setMatchingMask(const cv::UMat &mask)$/;"	f	class:cv::Stitcher
setMaxLevel	opencv2/videostab/optical_flow.hpp	/^    virtual void setMaxLevel(int val) { maxLevel_ = val; }$/;"	f	class:cv::videostab::PyrLkOptFlowEstimatorBase
setMaxObjectSize	opencv2/objdetect/detection_based_tracker.hpp	/^                void setMaxObjectSize(const cv::Size& max)$/;"	f	class:cv::DetectionBasedTracker::IDetector
setMinInlierRatio	opencv2/videostab/global_motion.hpp	/^    void setMinInlierRatio(float val) { minInlierRatio_ = val; }$/;"	f	class:cv::videostab::MotionEstimatorRansacL2
setMinNeighbours	opencv2/objdetect/detection_based_tracker.hpp	/^                void setMinNeighbours(int value)$/;"	f	class:cv::DetectionBasedTracker::IDetector
setMinObjectSize	opencv2/objdetect/detection_based_tracker.hpp	/^                void setMinObjectSize(const cv::Size& min)$/;"	f	class:cv::DetectionBasedTracker::IDetector
setMotionEstimator	opencv2/videostab/stabilizer.hpp	/^    void setMotionEstimator(Ptr<ImageMotionEstimatorBase> val) { motionEstimator_ = val; }$/;"	f	class:cv::videostab::StabilizerBase
setMotionEstimator	opencv2/videostab/wobble_suppression.hpp	/^    void setMotionEstimator(Ptr<ImageMotionEstimatorBase> val) { motionEstimator_ = val; }$/;"	f	class:cv::videostab::WobbleSuppressorBase
setMotionFilter	opencv2/videostab/stabilizer.hpp	/^    void setMotionFilter(Ptr<MotionFilterBase> val) { motionFilter_ = val; }$/;"	f	class:cv::videostab::OnePassStabilizer
setMotionModel	opencv2/videostab/global_motion.hpp	/^    virtual void setMotionModel(MotionModel val) { motionEstimator_->setMotionModel(val); }$/;"	f	class:cv::videostab::KeypointBasedMotionEstimator
setMotionModel	opencv2/videostab/global_motion.hpp	/^    virtual void setMotionModel(MotionModel val) { motionEstimator_->setMotionModel(val); }$/;"	f	class:cv::videostab::KeypointBasedMotionEstimatorGpu
setMotionModel	opencv2/videostab/global_motion.hpp	/^    virtual void setMotionModel(MotionModel val) { motionEstimator_->setMotionModel(val); }$/;"	f	class:cv::videostab::ToFileMotionWriter
setMotionModel	opencv2/videostab/global_motion.hpp	/^    virtual void setMotionModel(MotionModel val) { motionModel_ = val; }$/;"	f	class:cv::videostab::ImageMotionEstimatorBase
setMotionModel	opencv2/videostab/global_motion.hpp	/^    virtual void setMotionModel(MotionModel val) { motionModel_ = val; }$/;"	f	class:cv::videostab::MotionEstimatorBase
setMotionModel	opencv2/videostab/inpainting.hpp	/^    virtual void setMotionModel(MotionModel val) { motionModel_ = val; }$/;"	f	class:cv::videostab::InpainterBase
setMotionModel	opencv2/videostab/motion_stabilizing.hpp	/^    void setMotionModel(MotionModel val) { model_ = val; }$/;"	f	class:cv::videostab::LpMotionStabilizer
setMotionStabilizer	opencv2/videostab/stabilizer.hpp	/^    void setMotionStabilizer(Ptr<IMotionStabilizer> val) { motionStabilizer_ = val; }$/;"	f	class:cv::videostab::TwoPassStabilizer
setMotions	opencv2/videostab/deblurring.hpp	/^    virtual void setMotions(const std::vector<Mat> &val) { motions_ = &val; }$/;"	f	class:cv::videostab::DeblurerBase
setMotions	opencv2/videostab/inpainting.hpp	/^    virtual void setMotions(const std::vector<Mat> &val) { motions_ = &val; }$/;"	f	class:cv::videostab::InpainterBase
setMotions	opencv2/videostab/wobble_suppression.hpp	/^    virtual void setMotions(const std::vector<Mat> &val) { motions_ = &val; }$/;"	f	class:cv::videostab::WobbleSuppressorBase
setMotions2	opencv2/videostab/wobble_suppression.hpp	/^    virtual void setMotions2(const std::vector<Mat> &val) { motions2_ = &val; }$/;"	f	class:cv::videostab::WobbleSuppressorBase
setNumBands	opencv2/stitching/detail/blenders.hpp	/^    void setNumBands(int val) { actual_num_bands_ = val; }$/;"	f	class:cv::detail::MultiBandBlender
setNumClassifierRootNodes	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^    __host__ NCVStatus setNumClassifierRootNodes(Ncv32u val)$/;"	f	struct:HaarStage64
setOptFlowEstimator	opencv2/videostab/inpainting.hpp	/^    void setOptFlowEstimator(Ptr<IDenseOptFlowEstimator> val) { optFlowEstimator_ = val; }$/;"	f	class:cv::videostab::MotionInpainter
setOpticalFlowEstimator	opencv2/videostab/global_motion.hpp	/^    void setOpticalFlowEstimator(Ptr<ISparseOptFlowEstimator> val) { optFlowEstimator_ = val; }$/;"	f	class:cv::videostab::KeypointBasedMotionEstimator
setOutlierRejector	opencv2/videostab/global_motion.hpp	/^    void setOutlierRejector(Ptr<IOutlierRejector> val) { outlierRejector_ = val; }$/;"	f	class:cv::videostab::KeypointBasedMotionEstimator
setOutlierRejector	opencv2/videostab/global_motion.hpp	/^    void setOutlierRejector(Ptr<IOutlierRejector> val) { outlierRejector_ = val; }$/;"	f	class:cv::videostab::KeypointBasedMotionEstimatorGpu
setPanoConfidenceThresh	opencv2/stitching.hpp	/^    CV_WRAP void setPanoConfidenceThresh(double conf_thresh) { conf_thresh_ = conf_thresh; }$/;"	f	class:cv::Stitcher
setPeriod	opencv2/videostab/wobble_suppression.hpp	/^    virtual void setPeriod(int val) { period_ = val; }$/;"	f	class:cv::videostab::MoreAccurateMotionWobbleSuppressorBase
setRadius	opencv2/videostab/deblurring.hpp	/^    virtual void setRadius(int val) { radius_ = val; }$/;"	f	class:cv::videostab::DeblurerBase
setRadius	opencv2/videostab/inpainting.hpp	/^    virtual void setRadius(int val) { radius_ = val; }$/;"	f	class:cv::videostab::InpainterBase
setRadius	opencv2/videostab/stabilizer.hpp	/^    void setRadius(int val) { radius_ = val; }$/;"	f	class:cv::videostab::StabilizerBase
setRansacParams	opencv2/videostab/global_motion.hpp	/^    void setRansacParams(const RansacParams &val) { ransacParams_ = val; }$/;"	f	class:cv::videostab::MotionEstimatorRansacL2
setRansacParams	opencv2/videostab/outlier_rejection.hpp	/^    void setRansacParams(RansacParams val) { ransacParams_ = val; }$/;"	f	class:cv::videostab::TranslationBasedLocalOutlierRejector
setRect	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^    __host__ NCVStatus setRect(Ncv32u rectX, Ncv32u rectY, Ncv32u rectWidth, Ncv32u rectHeight, Ncv32u \/*clsWidth*\/, Ncv32u \/*clsHeight*\/)$/;"	f	struct:HaarFeature64
setRefinementMask	opencv2/stitching/detail/motion_estimators.hpp	/^    void setRefinementMask(const Mat &mask)$/;"	f	class:cv::detail::BundleAdjusterBase
setRegistrationResol	opencv2/stitching.hpp	/^    CV_WRAP void setRegistrationResol(double resol_mpx) { registr_resol_ = resol_mpx; }$/;"	f	class:cv::Stitcher
setRightNodeDesc	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^    __host__ NCVStatus setRightNodeDesc(HaarClassifierNodeDescriptor32 nr)$/;"	f	struct:HaarClassifierNode128
setScale	opencv2/stitching/detail/warpers.hpp	/^    virtual void setScale(float) {}$/;"	f	class:cv::detail::RotationWarper
setScale	opencv2/stitching/detail/warpers.hpp	/^    void setScale(float val) { projector_.scale = val; }$/;"	f	class:cv::detail::RotationWarperBase
setScaleFactor	opencv2/objdetect/detection_based_tracker.hpp	/^                void setScaleFactor(float value)$/;"	f	class:cv::DetectionBasedTracker::IDetector
setSeamEstimationResol	opencv2/stitching.hpp	/^    CV_WRAP void setSeamEstimationResol(double resol_mpx) { seam_est_resol_ = resol_mpx; }$/;"	f	class:cv::Stitcher
setSeamFinder	opencv2/stitching.hpp	/^    void setSeamFinder(Ptr<detail::SeamFinder> seam_finder) { seam_finder_ = seam_finder; }$/;"	f	class:cv::Stitcher
setSensitivity	opencv2/videostab/deblurring.hpp	/^    void setSensitivity(float val) { sensitivity_ = val; }$/;"	f	class:cv::videostab::WeightingDeblurer
setSharpness	opencv2/stitching/detail/blenders.hpp	/^    void setSharpness(float val) { sharpness_ = val; }$/;"	f	class:cv::detail::FeatherBlender
setStabilizationMotions	opencv2/videostab/inpainting.hpp	/^    virtual void setStabilizationMotions(const std::vector<Mat> &val) { stabilizationMotions_ = &val; }$/;"	f	class:cv::videostab::InpainterBase
setStabilizationMotions	opencv2/videostab/wobble_suppression.hpp	/^    virtual void setStabilizationMotions(const std::vector<Mat> &val) { stabilizationMotions_ = &val; }$/;"	f	class:cv::videostab::WobbleSuppressorBase
setStabilizedFrames	opencv2/videostab/inpainting.hpp	/^    virtual void setStabilizedFrames(const std::vector<Mat> &val) { stabilizedFrames_ = &val; }$/;"	f	class:cv::videostab::InpainterBase
setStageThreshold	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^    __host__ NCVStatus setStageThreshold(Ncv32f t)$/;"	f	struct:HaarStage64
setStartClassifierRootNodeOffset	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^    __host__ NCVStatus setStartClassifierRootNodeOffset(Ncv32u val)$/;"	f	struct:HaarStage64
setStdevThresh	opencv2/videostab/inpainting.hpp	/^    void setStdevThresh(float val) { stdevThresh_ = val; }$/;"	f	class:cv::videostab::ConsistentMosaicInpainter
setTermCriteria	opencv2/stitching/detail/motion_estimators.hpp	/^    void setTermCriteria(const TermCriteria& term_criteria) { term_criteria_ = term_criteria; }$/;"	f	class:cv::detail::BundleAdjusterBase
setThreshold	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^    __host__ NCVStatus setThreshold(Ncv32f t)$/;"	f	struct:HaarClassifierNode128
setTo	opencv2/core/cuda.inl.hpp	/^GpuMat& GpuMat::setTo(Scalar s)$/;"	f	class:cv::cuda::GpuMat
setTo	opencv2/core/cuda.inl.hpp	/^GpuMat& GpuMat::setTo(Scalar s, InputArray mask)$/;"	f	class:cv::cuda::GpuMat
setTrimRatio	opencv2/videostab/motion_stabilizing.hpp	/^    void setTrimRatio(float val) { trimRatio_ = val; }$/;"	f	class:cv::videostab::LpMotionStabilizer
setTrimRatio	opencv2/videostab/stabilizer.hpp	/^    void setTrimRatio(float val) { trimRatio_ = val; }$/;"	f	class:cv::videostab::StabilizerBase
setUpInitialCameraParams	opencv2/stitching/detail/motion_estimators.hpp	/^    void setUpInitialCameraParams(const std::vector<CameraParams> &) {}$/;"	f	class:cv::detail::NoBundleAdjuster
setWarper	opencv2/stitching.hpp	/^    void setWarper(Ptr<WarperCreator> creator) { warper_ = creator; }$/;"	f	class:cv::Stitcher
setWaveCorrectKind	opencv2/stitching.hpp	/^    void setWaveCorrectKind(detail::WaveCorrectKind kind) { wave_correct_kind_ = kind; }$/;"	f	class:cv::Stitcher
setWaveCorrection	opencv2/stitching.hpp	/^    CV_WRAP void setWaveCorrection(bool flag) { do_wave_correct_ = flag; }$/;"	f	class:cv::Stitcher
setWeight	opencv2/cudalegacy/NCVHaarObjectDetection.hpp	/^    __host__ NCVStatus setWeight(Ncv32f weight)$/;"	f	struct:HaarFeature64
setWeight1	opencv2/videostab/motion_stabilizing.hpp	/^    void setWeight1(float val) { w1_ = val; }$/;"	f	class:cv::videostab::LpMotionStabilizer
setWeight2	opencv2/videostab/motion_stabilizing.hpp	/^    void setWeight2(float val) { w2_ = val; }$/;"	f	class:cv::videostab::LpMotionStabilizer
setWeight3	opencv2/videostab/motion_stabilizing.hpp	/^    void setWeight3(float val) { w3_ = val; }$/;"	f	class:cv::videostab::LpMotionStabilizer
setWeight4	opencv2/videostab/motion_stabilizing.hpp	/^    void setWeight4(float val) { w4_ = val; }$/;"	f	class:cv::videostab::LpMotionStabilizer
setWinSize	opencv2/videostab/optical_flow.hpp	/^    virtual void setWinSize(Size val) { winSize_ = val; }$/;"	f	class:cv::videostab::PyrLkOptFlowEstimatorBase
setWobbleSuppressor	opencv2/videostab/stabilizer.hpp	/^    void setWobbleSuppressor(Ptr<WobbleSuppressorBase> val) { wobbleSuppressor_ = val; }$/;"	f	class:cv::videostab::TwoPassStabilizer
set_call_destructor	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^	set_call_destructor()$/;"	f	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME::cond_dealtor
set_cb_index	opencv2/flann/kmeans_index.h	/^    void set_cb_index( float index)$/;"	f	class:cvflann::KMeansIndex
set_difference	cpp_src/stl_algo.h	/^    set_difference(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	namespace:std
set_difference_minimal_n	5/parallel/settings.h	/^    _SequenceIndex              set_difference_minimal_n;$/;"	m	struct:__gnu_parallel::_Settings
set_header	opencv2/core/core_c.h	/^CVAPI(void)  cvClearSet( CvSet* set_header );$/;"	v
set_intersection	cpp_src/stl_algo.h	/^    set_intersection(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	namespace:std
set_intersection_minimal_n	5/parallel/settings.h	/^    _SequenceIndex              set_intersection_minimal_n;$/;"	m	struct:__gnu_parallel::_Settings
set_key_destruct	5/ext/pb_ds/detail/cc_hash_table_map_/cond_key_dtor_entry_dealtor.hpp	/^      set_key_destruct()$/;"	f	class:__gnu_pbds::detail::cond_dealtor
set_load	5/ext/pb_ds/detail/resize_policy/cc_hash_max_collision_check_resize_trigger_imp.hpp	/^set_load(float load)$/;"	f	class:PB_DS_CLASS_C_DEC
set_loads	5/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_imp.hpp	/^set_loads(std::pair<float, float> load_pair)$/;"	f	class:PB_DS_CLASS_C_DEC
set_no_action	5/ext/pb_ds/detail/cond_dealtor.hpp	/^	set_no_action()$/;"	f	class:__gnu_pbds::detail::cond_dealtor
set_no_action	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^	  set_no_action()$/;"	f	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME::cond_dtor
set_no_action_destructor	5/ext/pb_ds/detail/cc_hash_table_map_/cond_key_dtor_entry_dealtor.hpp	/^      set_no_action_destructor()$/;"	f	class:__gnu_pbds::detail::cond_dealtor
set_no_action_dtor	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^	set_no_action_dtor()$/;"	f	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME::cond_dealtor
set_num_threads	5/parallel/tags.h	/^      void set_num_threads(_ThreadIndex __num_threads)$/;"	f	struct:__gnu_parallel::parallel_tag
set_postprocess_func	opencv2/highgui/highgui_c.h	240;"	d
set_preprocess_func	opencv2/highgui/highgui_c.h	239;"	d
set_size	5/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_size_base.hpp	/^      set_size(size_type size) { }$/;"	f	class:__gnu_pbds::detail::hash_load_check_resize_trigger_size_base
set_size	5/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_size_base.hpp	/^      set_size(size_type size)$/;"	f	class:__gnu_pbds::detail::hash_load_check_resize_trigger_size_base
set_symmetric_difference	cpp_src/stl_algo.h	/^    set_symmetric_difference(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	namespace:std
set_symmetric_difference_minimal_n	5/parallel/settings.h	/^    _SequenceIndex              set_symmetric_difference_minimal_n;$/;"	m	struct:__gnu_parallel::_Settings
set_union	cpp_src/stl_algo.h	/^    set_union(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	namespace:std
set_union_minimal_n	5/parallel/settings.h	/^    _SequenceIndex              set_union_minimal_n;$/;"	m	struct:__gnu_parallel::_Settings
setf	cpp_src/ios_base.h	/^    setf(fmtflags __fmtfl)$/;"	f	class:std::ios_base
setf	cpp_src/ios_base.h	/^    setf(fmtflags __fmtfl, fmtflags __mask)$/;"	f	class:std::ios_base
setstate	cpp_src/basic_ios.h	/^      setstate(iostate __state)$/;"	f	class:std::basic_ios
sharpness	opencv2/stitching/detail/blenders.hpp	/^    float sharpness() const { return sharpness_; }$/;"	f	class:cv::detail::FeatherBlender
sharpness_	opencv2/stitching/detail/blenders.hpp	/^    float sharpness_;$/;"	m	class:cv::detail::FeatherBlender
shear	opencv2/highgui.hpp	/^    float       shear;     \/\/!< slope coefficient: 0 - normal, >0 - italic$/;"	m	struct:cv::QtFont
shear	opencv2/imgproc/imgproc_c.h	/^    float       shear;      \/\/!< slope coefficient: 0 - normal, >0 - italic$/;"	m	struct:CvFont
shfl	opencv2/core/cuda/warp_shuffle.hpp	/^    __device__ __forceinline__ T shfl(T val, int srcLane, int width = warpSize)$/;"	f	namespace:cv::cuda::device
shfl	opencv2/core/cuda/warp_shuffle.hpp	/^    __device__ __forceinline__ double shfl(double val, int srcLane, int width = warpSize)$/;"	f	namespace:cv::cuda::device
shfl	opencv2/core/cuda/warp_shuffle.hpp	/^    __device__ __forceinline__ unsigned int shfl(unsigned int val, int srcLane, int width = warpSize)$/;"	f	namespace:cv::cuda::device
shfl	opencv2/cudev/warp/shuffle.hpp	/^__device__ __forceinline__ float shfl(float val, int srcLane, int width = warpSize)$/;"	f	namespace:cv::cudev
shfl	opencv2/cudev/warp/shuffle.hpp	/^__device__ __forceinline__ int shfl(int val, int srcLane, int width = warpSize)$/;"	f	namespace:cv::cudev
shfl	opencv2/cudev/warp/shuffle.hpp	/^__device__ __forceinline__ schar shfl(schar val, int srcLane, int width = warpSize)$/;"	f	namespace:cv::cudev
shfl	opencv2/cudev/warp/shuffle.hpp	/^__device__ __forceinline__ short shfl(short val, int srcLane, int width = warpSize)$/;"	f	namespace:cv::cudev
shfl	opencv2/cudev/warp/shuffle.hpp	/^__device__ __forceinline__ uchar shfl(uchar val, int srcLane, int width = warpSize)$/;"	f	namespace:cv::cudev
shfl	opencv2/cudev/warp/shuffle.hpp	/^__device__ __forceinline__ uint shfl(uint val, int srcLane, int width = warpSize)$/;"	f	namespace:cv::cudev
shfl	opencv2/cudev/warp/shuffle.hpp	/^__device__ __forceinline__ ushort shfl(ushort val, int srcLane, int width = warpSize)$/;"	f	namespace:cv::cudev
shfl	opencv2/cudev/warp/shuffle.hpp	/^__device__ double shfl(double val, int srcLane, int width = warpSize)$/;"	f	namespace:cv::cudev
shfl_down	opencv2/core/cuda/warp_shuffle.hpp	/^    __device__ __forceinline__ T shfl_down(T val, unsigned int delta, int width = warpSize)$/;"	f	namespace:cv::cuda::device
shfl_down	opencv2/core/cuda/warp_shuffle.hpp	/^    __device__ __forceinline__ double shfl_down(double val, unsigned int delta, int width = warpSize)$/;"	f	namespace:cv::cuda::device
shfl_down	opencv2/core/cuda/warp_shuffle.hpp	/^    __device__ __forceinline__ unsigned int shfl_down(unsigned int val, unsigned int delta, int width = warpSize)$/;"	f	namespace:cv::cuda::device
shfl_down	opencv2/cudev/warp/shuffle.hpp	/^__device__ __forceinline__ float shfl_down(float val, uint delta, int width = warpSize)$/;"	f	namespace:cv::cudev
shfl_down	opencv2/cudev/warp/shuffle.hpp	/^__device__ __forceinline__ int shfl_down(int val, uint delta, int width = warpSize)$/;"	f	namespace:cv::cudev
shfl_down	opencv2/cudev/warp/shuffle.hpp	/^__device__ __forceinline__ schar shfl_down(schar val, uint delta, int width = warpSize)$/;"	f	namespace:cv::cudev
shfl_down	opencv2/cudev/warp/shuffle.hpp	/^__device__ __forceinline__ short shfl_down(short val, uint delta, int width = warpSize)$/;"	f	namespace:cv::cudev
shfl_down	opencv2/cudev/warp/shuffle.hpp	/^__device__ __forceinline__ uchar shfl_down(uchar val, uint delta, int width = warpSize)$/;"	f	namespace:cv::cudev
shfl_down	opencv2/cudev/warp/shuffle.hpp	/^__device__ __forceinline__ uint shfl_down(uint val, uint delta, int width = warpSize)$/;"	f	namespace:cv::cudev
shfl_down	opencv2/cudev/warp/shuffle.hpp	/^__device__ __forceinline__ ushort shfl_down(ushort val, uint delta, int width = warpSize)$/;"	f	namespace:cv::cudev
shfl_down	opencv2/cudev/warp/shuffle.hpp	/^__device__ double shfl_down(double val, uint delta, int width = warpSize)$/;"	f	namespace:cv::cudev
shfl_up	opencv2/core/cuda/warp_shuffle.hpp	/^    __device__ __forceinline__ T shfl_up(T val, unsigned int delta, int width = warpSize)$/;"	f	namespace:cv::cuda::device
shfl_up	opencv2/core/cuda/warp_shuffle.hpp	/^    __device__ __forceinline__ double shfl_up(double val, unsigned int delta, int width = warpSize)$/;"	f	namespace:cv::cuda::device
shfl_up	opencv2/core/cuda/warp_shuffle.hpp	/^    __device__ __forceinline__ unsigned int shfl_up(unsigned int val, unsigned int delta, int width = warpSize)$/;"	f	namespace:cv::cuda::device
shfl_up	opencv2/cudev/warp/shuffle.hpp	/^__device__ __forceinline__ float shfl_up(float val, uint delta, int width = warpSize)$/;"	f	namespace:cv::cudev
shfl_up	opencv2/cudev/warp/shuffle.hpp	/^__device__ __forceinline__ int shfl_up(int val, uint delta, int width = warpSize)$/;"	f	namespace:cv::cudev
shfl_up	opencv2/cudev/warp/shuffle.hpp	/^__device__ __forceinline__ schar shfl_up(schar val, uint delta, int width = warpSize)$/;"	f	namespace:cv::cudev
shfl_up	opencv2/cudev/warp/shuffle.hpp	/^__device__ __forceinline__ short shfl_up(short val, uint delta, int width = warpSize)$/;"	f	namespace:cv::cudev
shfl_up	opencv2/cudev/warp/shuffle.hpp	/^__device__ __forceinline__ uchar shfl_up(uchar val, uint delta, int width = warpSize)$/;"	f	namespace:cv::cudev
shfl_up	opencv2/cudev/warp/shuffle.hpp	/^__device__ __forceinline__ uint shfl_up(uint val, uint delta, int width = warpSize)$/;"	f	namespace:cv::cudev
shfl_up	opencv2/cudev/warp/shuffle.hpp	/^__device__ __forceinline__ ushort shfl_up(ushort val, uint delta, int width = warpSize)$/;"	f	namespace:cv::cudev
shfl_up	opencv2/cudev/warp/shuffle.hpp	/^__device__ double shfl_up(double val, uint delta, int width = warpSize)$/;"	f	namespace:cv::cudev
shfl_xor	opencv2/cudev/warp/shuffle.hpp	/^__device__ __forceinline__ float shfl_xor(float val, int laneMask, int width = warpSize)$/;"	f	namespace:cv::cudev
shfl_xor	opencv2/cudev/warp/shuffle.hpp	/^__device__ __forceinline__ int shfl_xor(int val, int laneMask, int width = warpSize)$/;"	f	namespace:cv::cudev
shfl_xor	opencv2/cudev/warp/shuffle.hpp	/^__device__ __forceinline__ schar shfl_xor(schar val, int laneMask, int width = warpSize)$/;"	f	namespace:cv::cudev
shfl_xor	opencv2/cudev/warp/shuffle.hpp	/^__device__ __forceinline__ short shfl_xor(short val, int laneMask, int width = warpSize)$/;"	f	namespace:cv::cudev
shfl_xor	opencv2/cudev/warp/shuffle.hpp	/^__device__ __forceinline__ uchar shfl_xor(uchar val, int laneMask, int width = warpSize)$/;"	f	namespace:cv::cudev
shfl_xor	opencv2/cudev/warp/shuffle.hpp	/^__device__ __forceinline__ uint shfl_xor(uint val, int laneMask, int width = warpSize)$/;"	f	namespace:cv::cudev
shfl_xor	opencv2/cudev/warp/shuffle.hpp	/^__device__ __forceinline__ ushort shfl_xor(ushort val, int laneMask, int width = warpSize)$/;"	f	namespace:cv::cudev
shfl_xor	opencv2/cudev/warp/shuffle.hpp	/^__device__ double shfl_xor(double val, int laneMask, int width = warpSize)$/;"	f	namespace:cv::cudev
shift	cpp_src/valarray_after.h	/^    _Expr<_Clos, _Tp>::shift(int __n) const$/;"	f	class:std::_Expr
shift	opencv2/core/cuda/functional.hpp	/^            enum { shift = BinOpShift<sizeof(T1), sizeof(T2), sizeof(D)>::shift };$/;"	e	enum:cv::cuda::device::functional_detail::DefaultBinaryShift::__anon165
shift	opencv2/core/cuda/functional.hpp	/^            enum { shift = DefaultBinaryShift<typename Func::first_argument_type, typename Func::second_argument_type, typename Func::result_type>::shift };$/;"	e	enum:cv::cuda::device::functional_detail::ShiftDispatcher::__anon167
shift	opencv2/core/cuda/functional.hpp	/^            enum { shift = DefaultUnaryShift<typename Func::argument_type, typename Func::result_type>::shift };$/;"	e	enum:cv::cuda::device::functional_detail::ShiftDispatcher::__anon166
shift	opencv2/core/cuda/functional.hpp	/^            enum { shift = UnOpShift<sizeof(T), sizeof(D)>::shift };$/;"	e	enum:cv::cuda::device::functional_detail::DefaultUnaryShift::__anon161
shift	opencv2/core/cuda/functional.hpp	/^        enum { shift = functional_detail::ShiftDispatcher<Func>::shift };$/;"	e	enum:cv::cuda::device::DefaultTransformShift::__anon168
shift	opencv2/core/cuda/functional.hpp	/^        template <size_t src_elem_size, size_t dst_elem_size> struct UnOpShift { enum { shift = 1 }; };$/;"	e	enum:cv::cuda::device::functional_detail::UnOpShift::__anon158
shift	opencv2/core/cuda/functional.hpp	/^        template <size_t src_elem_size1, size_t src_elem_size2, size_t dst_elem_size> struct BinOpShift { enum { shift = 1 }; };$/;"	e	enum:cv::cuda::device::functional_detail::BinOpShift::__anon162
shift	opencv2/core/cuda/functional.hpp	/^        template <size_t src_elem_size1, size_t src_elem_size2> struct BinOpShift<src_elem_size1, src_elem_size2, 1> { enum { shift = 4 }; };$/;"	e	enum:cv::cuda::device::functional_detail::BinOpShift::__anon163
shift	opencv2/core/cuda/functional.hpp	/^        template <size_t src_elem_size1, size_t src_elem_size2> struct BinOpShift<src_elem_size1, src_elem_size2, 2> { enum { shift = 2 }; };$/;"	e	enum:cv::cuda::device::functional_detail::BinOpShift::__anon164
shift	opencv2/core/cuda/functional.hpp	/^        template <size_t src_elem_size> struct UnOpShift<src_elem_size, 1> { enum { shift = 4 }; };$/;"	e	enum:cv::cuda::device::functional_detail::UnOpShift::__anon159
shift	opencv2/core/cuda/functional.hpp	/^        template <size_t src_elem_size> struct UnOpShift<src_elem_size, 2> { enum { shift = 2 }; };$/;"	e	enum:cv::cuda::device::functional_detail::UnOpShift::__anon160
shift	opencv2/core/hal/intrin.hpp	/^    enum { delta = 0, shift = 0 };$/;"	e	enum:cv::V_TypeTraits::__anon149
shift	opencv2/core/hal/intrin.hpp	/^    enum { delta = 128, shift = 8 };$/;"	e	enum:cv::V_TypeTraits::__anon150
shift	opencv2/core/hal/intrin.hpp	/^    enum { delta = 128, shift = 8 };$/;"	e	enum:cv::V_TypeTraits::__anon151
shift	opencv2/core/hal/intrin.hpp	/^    enum { delta = 128, shift = 8 };$/;"	e	enum:cv::V_TypeTraits::__anon153
shift	opencv2/core/hal/intrin.hpp	/^    enum { delta = 32768, shift = 16 };$/;"	e	enum:cv::V_TypeTraits::__anon152
shift	opencv2/cudev/grid/transform.hpp	/^        shift = 4$/;"	e	enum:cv::cudev::DefaultTransformPolicy::__anon399
shortdim	opencv2/core/matx.hpp	/^           shortdim = (m < n ? m : n)$/;"	e	enum:cv::Matx::__anon120
should_be_mine	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^    should_be_mine(a_const_iterator b_it, a_const_iterator e_it,$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
showbase	cpp_src/ios_base.h	/^    static const fmtflags showbase =    _S_showbase;$/;"	m	class:std::ios_base
showbase	cpp_src/ios_base.h	/^  showbase(ios_base& __base)$/;"	f	namespace:std
showpoint	cpp_src/ios_base.h	/^    static const fmtflags showpoint =   _S_showpoint;$/;"	m	class:std::ios_base
showpoint	cpp_src/ios_base.h	/^  showpoint(ios_base& __base)$/;"	f	namespace:std
showpos	cpp_src/ios_base.h	/^    static const fmtflags showpos =     _S_showpos;$/;"	m	class:std::ios_base
showpos	cpp_src/ios_base.h	/^  showpos(ios_base& __base)$/;"	f	namespace:std
shrinkPtr	opencv2/cudev/expr/expr.hpp	/^    __host__ static ptr_type shrinkPtr(const Expr<Body>& expr)$/;"	f	struct:cv::cudev::PtrTraits
shrinkPtr	opencv2/cudev/ptr2d/traits.hpp	/^    __host__ static Ptr2D shrinkPtr(const Ptr2DSz& ptr)$/;"	f	struct:cv::cudev::PtrTraitsBase
shrinkPtr	opencv2/cudev/ptr2d/traits.hpp	/^__host__ typename PtrTraits<Ptr2DSz>::ptr_type shrinkPtr(const Ptr2DSz& ptr)$/;"	f	namespace:cv::cudev
sign	cpp_src/locale_facets.h	/^    enum part { none, space, symbol, sign, value };$/;"	e	enum:std::money_base::part
sign	opencv2/core/cvdef.h	/^        unsigned int sign        : 1;$/;"	m	struct:Cv16suf::_fp16Format
sign	opencv2/core/cvdef.h	/^        unsigned int sign        : 1;$/;"	m	struct:Cv32suf::_fp32Format
signature	opencv2/core/types_c.h	/^    int signature;$/;"	m	struct:CvMemStorage
signature	opencv2/flann/saving.h	/^    char signature[16];$/;"	m	struct:cvflann::IndexHeader
signedGradient	opencv2/objdetect.hpp	/^    CV_PROP bool signedGradient;$/;"	m	struct:cv::HOGDescriptor
significand	opencv2/core/cvdef.h	/^        unsigned int significand : 10;$/;"	m	struct:Cv16suf::_fp16Format
significand	opencv2/core/cvdef.h	/^        unsigned int significand : 23;$/;"	m	struct:Cv32suf::_fp32Format
simpleDistance	opencv2/flann/dist.h	/^struct simpleDistance$/;"	s	namespace:cvflann
simpleDistance	opencv2/flann/dist.h	/^struct simpleDistance<ChiSquareDistance<ElementType>, ElementType>$/;"	s	namespace:cvflann
simpleDistance	opencv2/flann/dist.h	/^struct simpleDistance<HellingerDistance<ElementType>, ElementType>$/;"	s	namespace:cvflann
simpleDistance	opencv2/flann/dist.h	/^struct simpleDistance<L2<ElementType>, ElementType>$/;"	s	namespace:cvflann
simpleDistance	opencv2/flann/dist.h	/^struct simpleDistance<L2_Simple<ElementType>, ElementType>$/;"	s	namespace:cvflann
simpleDistance	opencv2/flann/dist.h	/^struct simpleDistance<MinkowskiDistance<ElementType>, ElementType>$/;"	s	namespace:cvflann
simple_block_dim_x	opencv2/core/cuda/functional.hpp	/^        enum { simple_block_dim_x = 16 };$/;"	e	enum:cv::cuda::device::DefaultTransformFunctorTraits::__anon169
simple_block_dim_y	opencv2/core/cuda/functional.hpp	/^        enum { simple_block_dim_y = 16 };$/;"	e	enum:cv::cuda::device::DefaultTransformFunctorTraits::__anon170
simple_value	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	/^	  simple_value = is_simple<value_type>::value$/;"	e	enum:__gnu_pbds::detail::binary_heap::__anon36
simple_value	5/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp	/^	  simple_value = is_simple<Value_Type>::value$/;"	e	enum:__gnu_pbds::detail::left_child_next_sibling_heap::__anon30
singleMaskChannels	opencv2/cudev/ptr2d/mask.hpp	/^singleMaskChannels(const MaskPtr& mask, int channels)$/;"	f	namespace:cv::cudev
size	5/ext/pb_ds/detail/bin_search_tree_/info_fn_imps.hpp	/^size() const$/;"	f	class:PB_DS_CLASS_C_DEC
size	5/ext/pb_ds/detail/binary_heap_/info_fn_imps.hpp	/^size() const$/;"	f	class:PB_DS_CLASS_C_DEC
size	5/ext/pb_ds/detail/cc_hash_table_map_/info_fn_imps.hpp	/^size() const$/;"	f	class:PB_DS_CLASS_C_DEC
size	5/ext/pb_ds/detail/cc_hash_table_map_/size_fn_imps.hpp	/^size() const$/;"	f	class:PB_DS_CLASS_C_DEC
size	5/ext/pb_ds/detail/gp_hash_table_map_/info_fn_imps.hpp	/^size() const$/;"	f	class:PB_DS_CLASS_C_DEC
size	5/ext/pb_ds/detail/left_child_next_sibling_heap_/info_fn_imps.hpp	/^size() const$/;"	f	class:PB_DS_CLASS_C_DEC
size	5/ext/pb_ds/detail/list_update_map_/info_fn_imps.hpp	/^size() const$/;"	f	class:PB_DS_CLASS_C_DEC
size	5/ext/pb_ds/detail/ov_tree_map_/info_fn_imps.hpp	/^size() const$/;"	f	class:PB_DS_CLASS_C_DEC
size	5/ext/pb_ds/detail/pat_trie_/info_fn_imps.hpp	/^size() const$/;"	f	class:PB_DS_CLASS_C_DEC
size	5/ext/pb_ds/detail/rc_binomial_heap_/rc.hpp	/^    size() const$/;"	f	class:__gnu_pbds::detail::rc
size	cpp_src/basic_string.h	/^      size() const$/;"	f	class:std::basic_string
size	cpp_src/gslice.h	/^  gslice::size () const$/;"	f	class:std::gslice
size	cpp_src/slice_array.h	/^  slice::size() const$/;"	f	class:std::slice
size	cpp_src/stl_bvector.h	/^    size() const$/;"	f	class:std::vector
size	cpp_src/stl_deque.h	/^      size() const$/;"	f	class:std::deque
size	cpp_src/stl_list.h	/^      size() const$/;"	f	class:std::list
size	cpp_src/stl_map.h	/^      size() const$/;"	f	class:std::map
size	cpp_src/stl_multimap.h	/^      size() const$/;"	f	class:std::multimap
size	cpp_src/stl_multiset.h	/^      size() const$/;"	f	class:std::multiset
size	cpp_src/stl_queue.h	/^      size() const$/;"	f	class:std::priority_queue
size	cpp_src/stl_queue.h	/^      size() const$/;"	f	class:std::queue
size	cpp_src/stl_set.h	/^      size() const$/;"	f	class:std::set
size	cpp_src/stl_stack.h	/^      size() const$/;"	f	class:std::stack
size	cpp_src/stl_tempbuf.h	/^      size() const$/;"	f	class:std::_Temporary_buffer
size	cpp_src/stl_tree.h	/^      size() const$/;"	f	class:std::_Rb_tree
size	cpp_src/stl_vector.h	/^      size() const$/;"	f	class:std::vector
size	cpp_src/valarray_after.h	/^      size () const$/;"	f	class:std::_GBase
size	cpp_src/valarray_after.h	/^      size() const$/;"	f	class:std::_IBase
size	cpp_src/valarray_after.h	/^    _Expr<_Clos, _Tp>::size() const$/;"	f	class:std::_Expr
size	cpp_src/valarray_before.h	/^      size() const$/;"	f	class:std::_SBase
size	cpp_src/valarray_before.h	/^      size_t size() const { return _M_expr.size ();}$/;"	f	class:std::_FunBase
size	cpp_src/valarray_before.h	/^      size_t size() const { return _M_expr.size(); }$/;"	f	class:std::_UnBase
size	cpp_src/valarray_before.h	/^      size_t size() const { return _M_expr1.size(); }$/;"	f	class:std::_BinBase
size	cpp_src/valarray_before.h	/^      size_t size() const { return _M_expr1.size(); }$/;"	f	class:std::_BinBase2
size	cpp_src/valarray_before.h	/^      size_t size() const { return _M_expr2.size(); }$/;"	f	class:std::_BinBase1
size	opencv2/core/core_c.h	/^    CvSize size; \/**< maximal common linear size: { width = size, height = 1 } *\/$/;"	m	struct:CvNArrayIterator
size	opencv2/core/core_c.h	/^CVAPI(void*)  cvAlloc( size_t size );$/;"	v
size	opencv2/core/core_c.h	/^template<typename _Tp> inline size_t Seq<_Tp>::size() const$/;"	f	class:cv::Seq
size	opencv2/core/cuda.inl.hpp	/^Size GpuMat::size() const$/;"	f	class:cv::cuda::GpuMat
size	opencv2/core/cuda.inl.hpp	/^Size HostMem::size() const$/;"	f	class:cv::cuda::HostMem
size	opencv2/core/cuda_types.hpp	/^            size_t size;$/;"	m	struct:cv::cuda::PtrSz
size	opencv2/core/cvstd.hpp	/^size_t String::size() const$/;"	f	class:cv::String
size	opencv2/core/mat.hpp	/^        int size[MAX_DIM];$/;"	m	struct:cv::SparseMat::Hdr
size	opencv2/core/mat.hpp	/^    MatSize size;$/;"	m	class:cv::Mat
size	opencv2/core/mat.hpp	/^    MatSize size;$/;"	m	class:cv::UMat
size	opencv2/core/mat.hpp	/^    size_t size;$/;"	m	class:cv::NAryMatIterator
size	opencv2/core/mat.hpp	/^    size_t size;$/;"	m	struct:cv::UMatData
size	opencv2/core/mat.inl.hpp	/^const int* SparseMat::size() const$/;"	f	class:cv::SparseMat
size	opencv2/core/mat.inl.hpp	/^int SparseMat::size(int i) const$/;"	f	class:cv::SparseMat
size	opencv2/core/opengl.hpp	/^cv::Size cv::ogl::Buffer::size() const$/;"	f	class:cv::ogl::Buffer
size	opencv2/core/opengl.hpp	/^cv::Size cv::ogl::Texture2D::size() const$/;"	f	class:cv::ogl::Texture2D
size	opencv2/core/opengl.hpp	/^int cv::ogl::Arrays::size() const$/;"	f	class:cv::ogl::Arrays
size	opencv2/core/types.hpp	/^    CV_PROP_RW float size; \/\/!< diameter of the meaningful keypoint neighborhood$/;"	m	class:cv::KeyPoint
size	opencv2/core/types.hpp	/^    Size2f size;    \/\/< width and height of the rectangle$/;"	m	class:cv::RotatedRect
size	opencv2/core/types.hpp	/^Size_<_Tp> Rect_<_Tp>::size() const$/;"	f	class:cv::Rect_
size	opencv2/core/types.hpp	/^int Range::size() const$/;"	f	class:cv::Range
size	opencv2/core/types_c.h	/^        int size;$/;"	m	struct:CvMatND::__anon329
size	opencv2/core/types_c.h	/^    CvSize2D32f  size;    \/**< Box width and length.                       *\/$/;"	m	struct:CvBox2D
size	opencv2/core/types_c.h	/^    int size[CV_MAX_DIM];$/;"	m	struct:CvSparseMat
size	opencv2/core/utility.hpp	/^AutoBuffer<_Tp, fixed_size>::size() const$/;"	f	class:cv::AutoBuffer
size	opencv2/cudalegacy/NCV.hpp	/^    NcvSize32u size() const {return NcvSize32u(this->_width, this->_height);}$/;"	f	class:NCVMatrix
size	opencv2/cudalegacy/NCV.hpp	/^    size_t size;$/;"	m	struct:NCVMemSegment
size	opencv2/cudalegacy/NPP_staging.hpp	/^    NcvSize32u size;      \/\/\/< frame size$/;"	m	struct:NppStInterpolationState
size	opencv2/cudev/util/tuple.hpp	/^    enum { size = 1 };$/;"	e	enum:cv::cudev::TupleTraits::__anon408
size	opencv2/cudev/util/tuple.hpp	/^    enum { size = tuple_size< tuple<P0, P1, P2, P3, P4, P5, P6, P7, P8, P9> >::value };$/;"	e	enum:cv::cudev::TupleTraits::__anon410
size	opencv2/features2d.hpp	/^    int size;$/;"	m	class:cv::BOWTrainer
size	opencv2/flann.hpp	/^        int size() const { return nnIndex->size(); }$/;"	f	class:cv::flann::GenericIndex
size	opencv2/flann.hpp	/^    FLANN_DEPRECATED int size() const$/;"	f	class:cv::flann::Index_
size	opencv2/flann/autotuned_index.h	/^    virtual size_t size() const$/;"	f	class:cvflann::AutotunedIndex
size	opencv2/flann/composite_index.h	/^    size_t size() const$/;"	f	class:cvflann::CompositeIndex
size	opencv2/flann/dynamic_bitset.h	/^    size_t size() const$/;"	f	class:cvflann::DynamicBitset
size	opencv2/flann/flann_base.hpp	/^    size_t size() const$/;"	f	class:cvflann::Index
size	opencv2/flann/heap.h	/^    int size()$/;"	f	class:cvflann::Heap
size	opencv2/flann/hierarchical_clustering_index.h	/^        int size;$/;"	m	struct:cvflann::HierarchicalClusteringIndex::Node
size	opencv2/flann/hierarchical_clustering_index.h	/^    size_t size() const$/;"	f	class:cvflann::HierarchicalClusteringIndex
size	opencv2/flann/kdtree_index.h	/^    size_t size() const$/;"	f	class:cvflann::KDTreeIndex
size	opencv2/flann/kdtree_single_index.h	/^    size_t size() const$/;"	f	class:cvflann::KDTreeSingleIndex
size	opencv2/flann/kmeans_index.h	/^        int size;$/;"	m	struct:cvflann::KMeansIndex::KMeansNode
size	opencv2/flann/kmeans_index.h	/^    size_t size() const$/;"	f	class:cvflann::KMeansIndex
size	opencv2/flann/linear_index.h	/^    size_t size() const$/;"	f	class:cvflann::LinearIndex
size	opencv2/flann/lsh_index.h	/^    size_t size() const$/;"	f	class:cvflann::LshIndex
size	opencv2/flann/result_set.h	/^    size_t size() const$/;"	f	class:cvflann::KNNResultSet
size	opencv2/flann/result_set.h	/^    size_t size() const$/;"	f	class:cvflann::KNNSimpleResultSet
size	opencv2/flann/result_set.h	/^    size_t size() const$/;"	f	class:cvflann::RadiusResultSet
size	opencv2/flann/result_set.h	/^    size_t size() const$/;"	f	class:cvflann::UniqueResultSet
size	opencv2/stitching/detail/util.hpp	/^    std::vector<int> size;$/;"	m	class:cv::detail::DisjointSets
size	opencv2/videostab/motion_core.hpp	/^    int size; \/\/!< subset size$/;"	m	struct:cv::videostab::RansacParams
size_	opencv2/core/opengl.hpp	/^    int size_;$/;"	m	class:cv::ogl::Arrays
size_	opencv2/flann/dynamic_bitset.h	/^    size_t size_;$/;"	m	class:cvflann::DynamicBitset
size_	opencv2/flann/hierarchical_clustering_index.h	/^    size_t size_;$/;"	m	class:cvflann::HierarchicalClusteringIndex
size_	opencv2/flann/kdtree_index.h	/^    size_t size_;$/;"	m	class:cvflann::KDTreeIndex
size_	opencv2/flann/kdtree_single_index.h	/^    size_t size_;$/;"	m	class:cvflann::KDTreeSingleIndex
size_	opencv2/flann/kmeans_index.h	/^    size_t size_;$/;"	m	class:cvflann::KMeansIndex
size_	opencv2/flann/random.h	/^    int size_;$/;"	m	class:cvflann::UniqueRandom
size_	opencv2/videostab/fast_marching.hpp	/^    int size_; \/\/ narrow band size$/;"	m	class:cv::videostab::FastMarchingMethod
size_base	5/ext/pb_ds/hash_policy.hpp	/^    typedef PB_DS_SIZE_BASE_C_DEC size_base;$/;"	t	class:__gnu_pbds::hash_load_check_resize_trigger
size_from_node	5/ext/pb_ds/detail/left_child_next_sibling_heap_/debug_fn_imps.hpp	/^size_from_node(node_const_pointer p_nd)$/;"	f	class:PB_DS_CLASS_C_DEC
size_histogram_	opencv2/flann/lsh_table.h	/^    std::vector<std::vector<unsigned int> > size_histogram_;$/;"	m	struct:cvflann::lsh::LshStats
size_policy	5/ext/pb_ds/hash_policy.hpp	/^    typedef Size_Policy 	size_policy;$/;"	t	class:__gnu_pbds::hash_standard_resize_policy
size_policy_base	5/ext/pb_ds/hash_policy.hpp	/^    typedef Size_Policy size_policy_base;$/;"	t	class:__gnu_pbds::hash_standard_resize_policy
size_policy_type	5/ext/pb_ds/detail/standard_policies.hpp	/^      typedef typename cond_type::__type 		       size_policy_type;$/;"	t	struct:__gnu_pbds::detail::default_resize_policy
size_type	5/debug/safe_local_iterator.h	/^      typedef typename _Sequence::size_type size_type;$/;"	t	class:__gnu_debug::_Safe_local_iterator
size_type	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	/^      typedef typename _Alloc::size_type 		size_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_BIN_TREE_NAME
size_type	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	/^      typedef typename _Alloc::size_type 		size_type;$/;"	t	class:__gnu_pbds::detail::binary_heap
size_type	5/ext/pb_ds/detail/binary_heap_/resize_policy.hpp	/^      typedef _Tp	size_type;$/;"	t	class:__gnu_pbds::detail::resize_policy
size_type	5/ext/pb_ds/detail/binomial_heap_/binomial_heap_.hpp	/^      typedef typename _Alloc::size_type 		size_type;$/;"	t	class:__gnu_pbds::detail::binomial_heap
size_type	5/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp	/^      typedef typename _Alloc::size_type 		size_type;$/;"	t	class:__gnu_pbds::detail::binomial_heap_base
size_type	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef typename _Alloc::size_type 	size_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
size_type	5/ext/pb_ds/detail/debug_map_base.hpp	/^      typedef typename key_repository::size_type       	size_type;$/;"	t	class:__gnu_pbds::detail::debug_map_base
size_type	5/ext/pb_ds/detail/eq_fn/hash_eq_fn.hpp	/^      typedef typename _Alloc::size_type 		   size_type;$/;"	t	struct:__gnu_pbds::detail::hash_eq_fn
size_type	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef typename _Alloc::size_type 	size_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
size_type	5/ext/pb_ds/detail/hash_fn/mask_based_range_hashing.hpp	/^      typedef Size_Type 	size_type;$/;"	t	class:__gnu_pbds::detail::mask_based_range_hashing
size_type	5/ext/pb_ds/detail/hash_fn/mod_based_range_hashing.hpp	/^      typedef Size_Type 	size_type;$/;"	t	class:__gnu_pbds::detail::mod_based_range_hashing
size_type	5/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp	/^      typedef typename _Alloc::size_type size_type;$/;"	t	class:__gnu_pbds::detail::ranged_hash_fn
size_type	5/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp	/^      typedef typename _Alloc::size_type size_type;$/;"	t	class:__gnu_pbds::detail::ranged_probe_fn
size_type	5/ext/pb_ds/detail/hash_fn/sample_probe_fn.hpp	/^    typedef std::size_t size_type;$/;"	t	class:__gnu_pbds::sample_probe_fn
size_type	5/ext/pb_ds/detail/hash_fn/sample_range_hashing.hpp	/^    typedef std::size_t size_type;$/;"	t	class:__gnu_pbds::sample_range_hashing
size_type	5/ext/pb_ds/detail/hash_fn/sample_ranged_hash_fn.hpp	/^    typedef std::size_t size_type;$/;"	t	class:__gnu_pbds::sample_ranged_hash_fn
size_type	5/ext/pb_ds/detail/hash_fn/sample_ranged_probe_fn.hpp	/^    typedef std::size_t 	size_type;$/;"	t	class:__gnu_pbds::sample_ranged_probe_fn
size_type	5/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp	/^      typedef typename _Alloc::size_type 		size_type;$/;"	t	class:__gnu_pbds::detail::left_child_next_sibling_heap
size_type	5/ext/pb_ds/detail/left_child_next_sibling_heap_/node.hpp	/^      typedef typename _Alloc::size_type 	size_type;$/;"	t	struct:__gnu_pbds::detail::left_child_next_sibling_heap_node_
size_type	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      typedef typename _Alloc::size_type size_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_LU_NAME
size_type	5/ext/pb_ds/detail/list_update_policy/lu_counter_metadata.hpp	/^	typedef Size_Type 	size_type;$/;"	t	class:__gnu_pbds::detail::lu_counter_metadata
size_type	5/ext/pb_ds/detail/list_update_policy/lu_counter_metadata.hpp	/^	typedef Size_Type 	size_type;$/;"	t	class:__gnu_pbds::detail::lu_counter_policy_base
size_type	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      typedef typename _Alloc::size_type 		size_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
size_type	5/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp	/^      typedef typename _Alloc::size_type 		size_type;$/;"	t	class:__gnu_pbds::detail::pairing_heap
size_type	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename _Alloc::size_type 		size_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
size_type	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename _Alloc::size_type 			size_type;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Inode
size_type	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename _Alloc::size_type 		size_type;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_Node_citer
size_type	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename base_type::size_type 		size_type;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_Node_iter
size_type	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	/^      typedef typename _Alloc::size_type 		 size_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_RB_TREE_NAME
size_type	5/ext/pb_ds/detail/rc_binomial_heap_/rc.hpp	/^      typedef typename allocator_type::size_type 	 size_type;$/;"	t	class:__gnu_pbds::detail::rc
size_type	5/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp	/^      typedef typename _Alloc::size_type 		size_type;$/;"	t	class:__gnu_pbds::detail::rc_binomial_heap
size_type	5/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_size_base.hpp	/^      typedef Size_Type size_type;$/;"	t	class:__gnu_pbds::detail::hash_load_check_resize_trigger_size_base
size_type	5/ext/pb_ds/detail/resize_policy/sample_resize_policy.hpp	/^    typedef std::size_t size_type;$/;"	t	class:__gnu_pbds::sample_resize_policy
size_type	5/ext/pb_ds/detail/resize_policy/sample_resize_trigger.hpp	/^    typedef std::size_t size_type;$/;"	t	class:__gnu_pbds::sample_resize_trigger
size_type	5/ext/pb_ds/detail/resize_policy/sample_size_policy.hpp	/^    typedef std::size_t size_type;$/;"	t	class:__gnu_pbds::sample_size_policy
size_type	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	/^      typedef typename _Alloc::size_type 		 size_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_S_TREE_NAME
size_type	5/ext/pb_ds/detail/standard_policies.hpp	/^      typedef typename Comb_Hash_Fn::size_type 			size_type;$/;"	t	struct:__gnu_pbds::detail::default_resize_policy
size_type	5/ext/pb_ds/detail/standard_policies.hpp	/^      typedef typename Comb_Probe_Fn::size_type 		size_type;$/;"	t	struct:__gnu_pbds::detail::default_probe_fn
size_type	5/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp	/^      typedef typename _Alloc::size_type 		size_type;$/;"	t	class:__gnu_pbds::detail::thin_heap
size_type	5/ext/pb_ds/detail/tree_trace_base.hpp	/^      typedef typename _Alloc::size_type 	size_type;$/;"	t	class:__gnu_pbds::detail::tree_trace_base
size_type	5/ext/pb_ds/detail/trie_policy/sample_trie_access_traits.hpp	/^    typedef std::size_t 		       		size_type;$/;"	t	struct:__gnu_pbds::sample_trie_access_traits
size_type	5/ext/pb_ds/detail/trie_policy/trie_policy_base.hpp	/^      typedef typename allocator_type::size_type 	size_type;$/;"	t	class:__gnu_pbds::detail::trie_policy_base
size_type	5/ext/pb_ds/detail/types_traits.hpp	/^	typedef typename _Alloc::size_type 		size_type;$/;"	t	struct:__gnu_pbds::detail::type_base
size_type	5/ext/pb_ds/detail/types_traits.hpp	/^	typedef typename _Alloc::size_type 		size_type;$/;"	t	struct:__gnu_pbds::detail::types_traits
size_type	5/ext/pb_ds/hash_policy.hpp	/^    typedef Size_Type 		size_type;$/;"	t	class:__gnu_pbds::hash_standard_resize_policy
size_type	5/ext/pb_ds/hash_policy.hpp	/^    typedef Size_Type 	size_type;$/;"	t	class:__gnu_pbds::cc_hash_max_collision_check_resize_trigger
size_type	5/ext/pb_ds/hash_policy.hpp	/^    typedef Size_Type size_type;$/;"	t	class:__gnu_pbds::direct_mask_range_hashing
size_type	5/ext/pb_ds/hash_policy.hpp	/^    typedef Size_Type size_type;$/;"	t	class:__gnu_pbds::direct_mod_range_hashing
size_type	5/ext/pb_ds/hash_policy.hpp	/^    typedef Size_Type size_type;$/;"	t	class:__gnu_pbds::hash_exponential_size_policy
size_type	5/ext/pb_ds/hash_policy.hpp	/^    typedef Size_Type size_type;$/;"	t	class:__gnu_pbds::hash_load_check_resize_trigger
size_type	5/ext/pb_ds/hash_policy.hpp	/^    typedef Size_Type size_type;$/;"	t	class:__gnu_pbds::linear_probe_fn
size_type	5/ext/pb_ds/hash_policy.hpp	/^    typedef Size_Type size_type;$/;"	t	class:__gnu_pbds::quadratic_probe_fn
size_type	5/ext/pb_ds/hash_policy.hpp	/^    typedef std::size_t size_type;$/;"	t	class:__gnu_pbds::hash_prime_size_policy
size_type	5/ext/pb_ds/list_update_policy.hpp	/^      typedef typename allocator_type::size_type       	size_type;$/;"	t	class:__gnu_pbds::lu_counter_policy
size_type	5/ext/pb_ds/priority_queue.hpp	/^    typedef typename allocator_type::size_type 		size_type;$/;"	t	class:__gnu_pbds::priority_queue
size_type	5/ext/pb_ds/tree_policy.hpp	/^    typedef typename allocator_type::size_type 		size_type;$/;"	t	class:__gnu_pbds::tree_order_statistics_node_update
size_type	5/ext/pb_ds/trie_policy.hpp	/^    typedef typename _Alloc::size_type			  size_type;$/;"	t	struct:__gnu_pbds::trie_string_access_traits
size_type	5/ext/pb_ds/trie_policy.hpp	/^    typedef typename allocator_type::size_type 		size_type;$/;"	t	class:__gnu_pbds::trie_order_statistics_node_update
size_type	5/ext/pb_ds/trie_policy.hpp	/^    typedef typename allocator_type::size_type 		size_type;$/;"	t	class:__gnu_pbds::trie_prefix_search_node_update
size_type	cpp_src/allocator.h	/^      typedef size_t      size_type;$/;"	t	class:std::allocator
size_type	cpp_src/allocator.h	/^      typedef size_t     size_type;$/;"	t	class:std::allocator
size_type	cpp_src/basic_string.h	/^      typedef typename _CharT_alloc_type::size_type	    size_type;$/;"	t	class:std::basic_string
size_type	cpp_src/stl_bvector.h	/^    typedef size_t                                       size_type;$/;"	t	class:std::vector
size_type	cpp_src/stl_deque.h	/^      typedef size_t                             size_type;$/;"	t	class:std::deque
size_type	cpp_src/stl_deque.h	/^      typedef size_t                          size_type;$/;"	t	struct:std::_Deque_iterator
size_type	cpp_src/stl_list.h	/^      typedef size_t                                     size_type;$/;"	t	class:std::list
size_type	cpp_src/stl_map.h	/^      typedef typename _Rep_type::size_type              size_type;$/;"	t	class:std::map
size_type	cpp_src/stl_multimap.h	/^      typedef typename _Rep_type::size_type              size_type;$/;"	t	class:std::multimap
size_type	cpp_src/stl_multiset.h	/^      typedef typename _Rep_type::size_type                 size_type;$/;"	t	class:std::multiset
size_type	cpp_src/stl_queue.h	/^      typedef typename _Sequence::size_type                 size_type;$/;"	t	class:std::priority_queue
size_type	cpp_src/stl_queue.h	/^      typedef typename _Sequence::size_type                 size_type;$/;"	t	class:std::queue
size_type	cpp_src/stl_set.h	/^      typedef typename _Rep_type::size_type                 size_type;$/;"	t	class:std::set
size_type	cpp_src/stl_stack.h	/^      typedef typename _Sequence::size_type                 size_type;$/;"	t	class:std::stack
size_type	cpp_src/stl_tempbuf.h	/^      typedef ptrdiff_t   size_type;$/;"	t	class:std::_Temporary_buffer
size_type	cpp_src/stl_tree.h	/^      typedef size_t size_type;$/;"	t	class:std::_Rb_tree
size_type	cpp_src/stl_vector.h	/^      typedef size_t					 size_type;$/;"	t	class:std::vector
size_type	opencv2/core/cvstd.hpp	/^    typedef size_t size_type;$/;"	t	class:cv::Allocator
size_type	opencv2/core/cvstd.hpp	/^    typedef size_t size_type;$/;"	t	class:cv::String
size_under_node	5/ext/pb_ds/detail/left_child_next_sibling_heap_/debug_fn_imps.hpp	/^size_under_node(node_const_pointer p_nd)$/;"	f	class:PB_DS_CLASS_C_DEC
sizeof	opencv2/cudalegacy/NCV.hpp	/^NCV_CT_ASSERT(sizeof(NcvPoint2D32u) == 2 * sizeof(Ncv32u));$/;"	v
sizeof	opencv2/cudalegacy/NCV.hpp	/^NCV_CT_ASSERT(sizeof(NcvRect32s) == 4 * sizeof(Ncv32s));$/;"	v
sizeof	opencv2/cudalegacy/NCV.hpp	/^NCV_CT_ASSERT(sizeof(NcvRect32u) == 4 * sizeof(Ncv32u));$/;"	v
sizeof	opencv2/cudalegacy/NCV.hpp	/^NCV_CT_ASSERT(sizeof(NcvRect8u) == sizeof(Ncv32u));$/;"	v
sizeof	opencv2/cudalegacy/NCV.hpp	/^NCV_CT_ASSERT(sizeof(NcvSize32u) == 2 * sizeof(Ncv32u));$/;"	v
sizes_	opencv2/stitching/detail/seam_finders.hpp	/^    std::vector<Size> sizes_;$/;"	m	class:cv::detail::PairwiseSeamFinder
skipws	cpp_src/ios_base.h	/^    static const fmtflags skipws =      _S_skipws;$/;"	m	class:std::ios_base
skipws	cpp_src/ios_base.h	/^  skipws(ios_base& __base)$/;"	f	namespace:std
slice	cpp_src/slice_array.h	/^  class slice$/;"	c	namespace:std
slice	cpp_src/slice_array.h	/^  slice::slice() {}$/;"	f	class:std::slice
slice	cpp_src/slice_array.h	/^  slice::slice(size_t __o, size_t __d, size_t __s)$/;"	f	class:std::slice
sliceEnd	opencv2/core/mat.hpp	/^    const uchar* sliceEnd;$/;"	m	class:cv::MatConstIterator
sliceStart	opencv2/core/mat.hpp	/^    const uchar* sliceStart;$/;"	m	class:cv::MatConstIterator
slice_array	cpp_src/slice_array.h	/^    class slice_array$/;"	c	namespace:std
slice_array	cpp_src/slice_array.h	/^    slice_array<_Tp>::slice_array(_Array<_Tp> __a, const slice& __s)$/;"	f	class:std::slice_array
slice_array	cpp_src/slice_array.h	/^    slice_array<_Tp>::slice_array(const slice_array<_Tp>& a)$/;"	f	class:std::slice_array
slidingSumBuf	opencv2/calib3d/calib3d_c.h	/^    CvMat* slidingSumBuf;$/;"	m	struct:CvStereoBMState
small	opencv2/core/cvdef.h	56;"	d
small_any_policy	opencv2/flann/any.h	/^struct small_any_policy : typed_base_any_policy<T>$/;"	s	namespace:cvflann::anyimpl
smart_block_dim_x	opencv2/core/cuda/functional.hpp	/^        enum { smart_block_dim_x = 16 };$/;"	e	enum:cv::cuda::device::DefaultTransformFunctorTraits::__anon171
smart_block_dim_y	opencv2/core/cuda/functional.hpp	/^        enum { smart_block_dim_y = 16 };$/;"	e	enum:cv::cuda::device::DefaultTransformFunctorTraits::__anon172
smart_shift	opencv2/core/cuda/functional.hpp	/^        enum { smart_shift = DefaultTransformShift<Func>::shift };$/;"	e	enum:cv::cuda::device::DefaultTransformFunctorTraits::__anon173
smem	opencv2/core/cuda/emulation.hpp	/^        struct smem$/;"	s	struct:cv::cuda::device::Emulation
smem	opencv2/cudev/grid/detail/reduce.hpp	/^        __device__ __forceinline__ static tuple<volatile R*, volatile R*, volatile R*, volatile R*> smem(R* ptr)$/;"	f	struct:cv::cudev::grid_reduce_detail::Unroll
smem	opencv2/cudev/grid/detail/reduce.hpp	/^        __device__ __forceinline__ static tuple<volatile R*, volatile R*, volatile R*> smem(R* ptr)$/;"	f	struct:cv::cudev::grid_reduce_detail::Unroll
smem	opencv2/cudev/grid/detail/reduce.hpp	/^        __device__ __forceinline__ static tuple<volatile R*, volatile R*> smem(R* ptr)$/;"	f	struct:cv::cudev::grid_reduce_detail::Unroll
smem	opencv2/cudev/grid/detail/reduce.hpp	/^        __device__ __forceinline__ static volatile R* smem(R* ptr)$/;"	f	struct:cv::cudev::grid_reduce_detail::Unroll
smem_tuple	opencv2/core/cuda/reduce.hpp	/^    smem_tuple(T0* t0)$/;"	f	namespace:cv::cuda::device
smem_tuple	opencv2/core/cuda/reduce.hpp	/^    smem_tuple(T0* t0, T1* t1)$/;"	f	namespace:cv::cuda::device
smem_tuple	opencv2/core/cuda/reduce.hpp	/^    smem_tuple(T0* t0, T1* t1, T2* t2)$/;"	f	namespace:cv::cuda::device
smem_tuple	opencv2/core/cuda/reduce.hpp	/^    smem_tuple(T0* t0, T1* t1, T2* t2, T3* t3)$/;"	f	namespace:cv::cuda::device
smem_tuple	opencv2/core/cuda/reduce.hpp	/^    smem_tuple(T0* t0, T1* t1, T2* t2, T3* t3, T4* t4)$/;"	f	namespace:cv::cuda::device
smem_tuple	opencv2/core/cuda/reduce.hpp	/^    smem_tuple(T0* t0, T1* t1, T2* t2, T3* t3, T4* t4, T5* t5)$/;"	f	namespace:cv::cuda::device
smem_tuple	opencv2/core/cuda/reduce.hpp	/^    smem_tuple(T0* t0, T1* t1, T2* t2, T3* t3, T4* t4, T5* t5, T6* t6)$/;"	f	namespace:cv::cuda::device
smem_tuple	opencv2/core/cuda/reduce.hpp	/^    smem_tuple(T0* t0, T1* t1, T2* t2, T3* t3, T4* t4, T5* t5, T6* t6, T7* t7)$/;"	f	namespace:cv::cuda::device
smem_tuple	opencv2/core/cuda/reduce.hpp	/^    smem_tuple(T0* t0, T1* t1, T2* t2, T3* t3, T4* t4, T5* t5, T6* t6, T7* t7, T8* t8)$/;"	f	namespace:cv::cuda::device
smem_tuple	opencv2/core/cuda/reduce.hpp	/^    smem_tuple(T0* t0, T1* t1, T2* t2, T3* t3, T4* t4, T5* t5, T6* t6, T7* t7, T8* t8, T9* t9)$/;"	f	namespace:cv::cuda::device
smem_tuple	opencv2/cudev/warp/reduce.hpp	/^smem_tuple(T0* t0)$/;"	f	namespace:cv::cudev
smem_tuple	opencv2/cudev/warp/reduce.hpp	/^smem_tuple(T0* t0, T1* t1)$/;"	f	namespace:cv::cudev
smem_tuple	opencv2/cudev/warp/reduce.hpp	/^smem_tuple(T0* t0, T1* t1, T2* t2)$/;"	f	namespace:cv::cudev
smem_tuple	opencv2/cudev/warp/reduce.hpp	/^smem_tuple(T0* t0, T1* t1, T2* t2, T3* t3)$/;"	f	namespace:cv::cudev
smem_tuple	opencv2/cudev/warp/reduce.hpp	/^smem_tuple(T0* t0, T1* t1, T2* t2, T3* t3, T4* t4)$/;"	f	namespace:cv::cudev
smem_tuple	opencv2/cudev/warp/reduce.hpp	/^smem_tuple(T0* t0, T1* t1, T2* t2, T3* t3, T4* t4, T5* t5)$/;"	f	namespace:cv::cudev
smem_tuple	opencv2/cudev/warp/reduce.hpp	/^smem_tuple(T0* t0, T1* t1, T2* t2, T3* t3, T4* t4, T5* t5, T6* t6)$/;"	f	namespace:cv::cudev
smem_tuple	opencv2/cudev/warp/reduce.hpp	/^smem_tuple(T0* t0, T1* t1, T2* t2, T3* t3, T4* t4, T5* t5, T6* t6, T7* t7)$/;"	f	namespace:cv::cudev
smem_tuple	opencv2/cudev/warp/reduce.hpp	/^smem_tuple(T0* t0, T1* t1, T2* t2, T3* t3, T4* t4, T5* t5, T6* t6, T7* t7, T8* t8)$/;"	f	namespace:cv::cudev
smem_tuple	opencv2/cudev/warp/reduce.hpp	/^smem_tuple(T0* t0, T1* t1, T2* t2, T3* t3, T4* t4, T5* t5, T6* t6, T7* t7, T8* t8, T9* t9)$/;"	f	namespace:cv::cudev
sobelXPtr	opencv2/cudev/ptr2d/deriv.hpp	/^__host__ SobelXPtrSz<typename PtrTraits<SrcPtr>::ptr_type> sobelXPtr(const SrcPtr& src)$/;"	f	namespace:cv::cudev
sobelX_	opencv2/cudev/expr/deriv.hpp	/^sobelX_(const SrcPtr& src)$/;"	f	namespace:cv::cudev
sobelYPtr	opencv2/cudev/ptr2d/deriv.hpp	/^__host__ SobelYPtrSz<typename PtrTraits<SrcPtr>::ptr_type> sobelYPtr(const SrcPtr& src)$/;"	f	namespace:cv::cudev
sobelY_	opencv2/cudev/expr/deriv.hpp	/^sobelY_(const SrcPtr& src)$/;"	f	namespace:cv::cudev
solve	opencv2/core/matx.hpp	/^Vec<_Tp, n> Matx<_Tp, m, n>::solve(const Vec<_Tp, m>& rhs, int method) const$/;"	f	class:cv::Matx
solve	opencv2/core/operations.hpp	/^Matx<_Tp, n, l> Matx<_Tp, m, n>::solve(const Matx<_Tp, m, l>& rhs, int method) const$/;"	f	class:cv::Matx
solve2x2	opencv2/core/cuda/utility.hpp	/^    template <typename T> __device__ __forceinline__ bool solve2x2(const T A[2][2], const T b[2], T x[2])$/;"	f	namespace:cv::cuda::device
solve3x3	opencv2/core/cuda/utility.hpp	/^    template <typename T> __device__ __forceinline__ bool solve3x3(const T A[3][3], const T b[3], T x[3])$/;"	f	namespace:cv::cuda::device
solveMethod	opencv2/calib3d/calib3d_c.h	/^    int solveMethod;$/;"	m	class:CvLevMarq
solveZ	opencv2/core/operations.hpp	/^inline void SVD::solveZ( InputArray m, OutputArray _dst )$/;"	f	class:cv::SVD
sort	cpp_src/stl_algo.h	/^    sort(_RandomAccessIterator __first, _RandomAccessIterator __last)$/;"	f	namespace:std
sort	cpp_src/stl_algo.h	/^    sort(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	namespace:std
sortAndCopy	opencv2/flann/result_set.h	/^    virtual void sortAndCopy(int* indices, DistanceType* dist, int n_neighbors = -1) const$/;"	f	class:cvflann::UniqueResultSet
sort_algorithm	5/parallel/settings.h	/^    _SortAlgorithm              sort_algorithm;$/;"	m	struct:__gnu_parallel::_Settings
sort_heap	cpp_src/stl_heap.h	/^    sort_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)$/;"	f	namespace:std
sort_heap	cpp_src/stl_heap.h	/^    sort_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	namespace:std
sort_minimal_n	5/parallel/settings.h	/^    _SequenceIndex              sort_minimal_n;$/;"	m	struct:__gnu_parallel::_Settings
sort_mwms_oversampling	5/parallel/settings.h	/^    unsigned int                sort_mwms_oversampling;$/;"	m	struct:__gnu_parallel::_Settings
sort_qs_num_samples_preset	5/parallel/settings.h	/^    unsigned int                sort_qs_num_samples_preset;$/;"	m	struct:__gnu_parallel::_Settings
sort_qsb_base_case_maximal_n	5/parallel/settings.h	/^    _SequenceIndex              sort_qsb_base_case_maximal_n;$/;"	m	struct:__gnu_parallel::_Settings
sort_splitting	5/parallel/settings.h	/^    _SplittingAlgorithm         sort_splitting;$/;"	m	struct:__gnu_parallel::_Settings
space	cpp_src/locale_facets.h	/^    enum part { none, space, symbol, sign, value };$/;"	e	enum:std::money_base::part
special	5/ext/pb_ds/detail/rb_tree_map_/node.hpp	/^      special() const$/;"	f	struct:__gnu_pbds::detail::rb_tree_node_
special	5/ext/pb_ds/detail/splay_tree_/node.hpp	/^      special() const$/;"	f	struct:__gnu_pbds::detail::splay_tree_node_
speckleRange	opencv2/calib3d/calib3d_c.h	/^    int speckleRange; \/\/ acceptable range of variation in window$/;"	m	struct:CvStereoBMState
speckleWindowSize	opencv2/calib3d/calib3d_c.h	/^    int speckleWindowSize; \/\/ disparity variation window$/;"	m	struct:CvStereoBMState
speed_level_	opencv2/flann/lsh_table.h	/^    SpeedLevel speed_level_;$/;"	m	class:cvflann::lsh::LshTable
speedup_	opencv2/flann/autotuned_index.h	/^    float speedup_;$/;"	m	class:cvflann::AutotunedIndex
splay	5/ext/pb_ds/detail/splay_tree_/splay_fn_imps.hpp	/^splay(node_pointer p_nd)$/;"	f	class:PB_DS_CLASS_C_DEC
splay_tree_node_	5/ext/pb_ds/detail/splay_tree_/node.hpp	/^    struct splay_tree_node_$/;"	s	namespace:__gnu_pbds::detail
splay_tree_node_	5/ext/pb_ds/detail/splay_tree_/node.hpp	/^    struct splay_tree_node_<Value_Type, null_type, _Alloc>$/;"	s	namespace:__gnu_pbds::detail
splay_tree_tag	5/ext/pb_ds/tag_and_trait.hpp	/^  struct splay_tree_tag : public tree_tag { };$/;"	s	namespace:__gnu_pbds
splay_zig_zag_left	5/ext/pb_ds/detail/splay_tree_/splay_fn_imps.hpp	/^splay_zig_zag_left(node_pointer p_nd, node_pointer p_parent,$/;"	f	class:PB_DS_CLASS_C_DEC
splay_zig_zag_right	5/ext/pb_ds/detail/splay_tree_/splay_fn_imps.hpp	/^splay_zig_zag_right(node_pointer p_nd, node_pointer p_parent,$/;"	f	class:PB_DS_CLASS_C_DEC
splay_zig_zig_left	5/ext/pb_ds/detail/splay_tree_/splay_fn_imps.hpp	/^splay_zig_zig_left(node_pointer p_nd, node_pointer p_parent,$/;"	f	class:PB_DS_CLASS_C_DEC
splay_zig_zig_right	5/ext/pb_ds/detail/splay_tree_/splay_fn_imps.hpp	/^splay_zig_zig_right(node_pointer p_nd, node_pointer p_parent,$/;"	f	class:PB_DS_CLASS_C_DEC
splay_zz_end	5/ext/pb_ds/detail/splay_tree_/splay_fn_imps.hpp	/^splay_zz_end(node_pointer p_nd, node_pointer p_parent,$/;"	f	class:PB_DS_CLASS_C_DEC
splay_zz_start	5/ext/pb_ds/detail/splay_tree_/splay_fn_imps.hpp	/^splay_zz_start(node_pointer p_nd,$/;"	f	class:PB_DS_CLASS_C_DEC
splice	cpp_src/stl_list.h	/^      splice(iterator __position, list& __x)$/;"	f	class:std::list
splice	cpp_src/stl_list.h	/^      splice(iterator __position, list& __x, iterator __first, iterator __last)$/;"	f	class:std::list
splice	cpp_src/stl_list.h	/^      splice(iterator __position, list& __x, iterator __i)$/;"	f	class:std::list
splineInterpolate	opencv2/core/cuda/detail/color_detail.hpp	/^        __device__ __forceinline__ float splineInterpolate(float x, const float* tab, int n)$/;"	f	namespace:cv::cuda::device::color_detail
splineInterpolate	opencv2/cudev/functional/detail/color_cvt.hpp	/^    __device__ static float splineInterpolate(float x, const float* tab, int n)$/;"	f	namespace:cv::cudev::color_cvt_detail
split	5/ext/pb_ds/detail/binary_heap_/split_join_fn_imps.hpp	/^split(Pred pred, PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
split	5/ext/pb_ds/detail/binomial_heap_base_/split_join_fn_imps.hpp	/^split(Pred pred, PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
split	5/ext/pb_ds/detail/debug_map_base.hpp	/^    split(key_const_reference r_key, Cmp_Fn cmp_fn, PB_DS_CLASS_C_DEC& other)$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
split	5/ext/pb_ds/detail/ov_tree_map_/split_join_fn_imps.hpp	/^split(key_const_reference r_key, PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
split	5/ext/pb_ds/detail/pairing_heap_/split_join_fn_imps.hpp	/^split(Pred pred, PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
split	5/ext/pb_ds/detail/pat_trie_/split_fn_imps.hpp	/^split(key_const_reference r_key, PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
split	5/ext/pb_ds/detail/rb_tree_map_/split_join_fn_imps.hpp	/^split(key_const_reference r_key, PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
split	5/ext/pb_ds/detail/rc_binomial_heap_/split_join_fn_imps.hpp	/^split(Pred pred, PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
split	5/ext/pb_ds/detail/splay_tree_/split_join_fn_imps.hpp	/^split(key_const_reference r_key, PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
split	5/ext/pb_ds/detail/thin_heap_/split_join_fn_imps.hpp	/^split(Pred pred, PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
split	opencv2/cudev/grid/detail/split_merge.hpp	/^    __global__ void split(const SrcPtr src, GlobPtr<DstType> dst1, GlobPtr<DstType> dst2, GlobPtr<DstType> dst3, GlobPtr<DstType> dst4, const MaskPtr mask, const int rows, const int cols)$/;"	f	namespace:cv::cudev::grid_split_merge_detail
split	opencv2/cudev/grid/detail/split_merge.hpp	/^    __global__ void split(const SrcPtr src, GlobPtr<DstType> dst1, GlobPtr<DstType> dst2, GlobPtr<DstType> dst3, const MaskPtr mask, const int rows, const int cols)$/;"	f	namespace:cv::cudev::grid_split_merge_detail
split	opencv2/cudev/grid/detail/split_merge.hpp	/^    __global__ void split(const SrcPtr src, GlobPtr<DstType> dst1, GlobPtr<DstType> dst2, const MaskPtr mask, const int rows, const int cols)$/;"	f	namespace:cv::cudev::grid_split_merge_detail
split	opencv2/cudev/grid/detail/split_merge.hpp	/^    __host__ void split(const SrcPtr& src, const GlobPtr<DstType>& dst1, const GlobPtr<DstType>& dst2, const GlobPtr<DstType>& dst3, const GlobPtr<DstType>& dst4, const MaskPtr& mask, int rows, int cols, cudaStream_t stream)$/;"	f	namespace:cv::cudev::grid_split_merge_detail
split	opencv2/cudev/grid/detail/split_merge.hpp	/^    __host__ void split(const SrcPtr& src, const GlobPtr<DstType>& dst1, const GlobPtr<DstType>& dst2, const GlobPtr<DstType>& dst3, const MaskPtr& mask, int rows, int cols, cudaStream_t stream)$/;"	f	namespace:cv::cudev::grid_split_merge_detail
split	opencv2/cudev/grid/detail/split_merge.hpp	/^    __host__ void split(const SrcPtr& src, const GlobPtr<DstType>& dst1, const GlobPtr<DstType>& dst2, const MaskPtr& mask, int rows, int cols, cudaStream_t stream)$/;"	f	namespace:cv::cudev::grid_split_merge_detail
split	opencv2/ml.hpp	/^        int split; \/\/!< Index of the first split$/;"	m	class:cv::ml::DTrees::Node
split_at_node	5/ext/pb_ds/detail/rb_tree_map_/split_join_fn_imps.hpp	/^split_at_node(node_pointer p_nd, PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
split_finish	5/ext/pb_ds/detail/bin_search_tree_/split_join_fn_imps.hpp	/^split_finish(PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
split_insert_branch	5/ext/pb_ds/detail/pat_trie_/split_fn_imps.hpp	/^split_insert_branch(size_type e_ind, a_const_iterator b_it,$/;"	f	class:PB_DS_CLASS_C_DEC
split_join_can_throw	5/ext/pb_ds/tag_and_trait.hpp	/^	split_join_can_throw = base_type::split_join_can_throw,$/;"	e	enum:__gnu_pbds::container_traits::__anon25
split_join_can_throw	5/ext/pb_ds/tag_and_trait.hpp	/^	split_join_can_throw = false,$/;"	e	enum:__gnu_pbds::container_traits_base::__anon13
split_join_can_throw	5/ext/pb_ds/tag_and_trait.hpp	/^	split_join_can_throw = false,$/;"	e	enum:__gnu_pbds::container_traits_base::__anon14
split_join_can_throw	5/ext/pb_ds/tag_and_trait.hpp	/^	split_join_can_throw = false,$/;"	e	enum:__gnu_pbds::container_traits_base::__anon15
split_join_can_throw	5/ext/pb_ds/tag_and_trait.hpp	/^	split_join_can_throw = false,$/;"	e	enum:__gnu_pbds::container_traits_base::__anon16
split_join_can_throw	5/ext/pb_ds/tag_and_trait.hpp	/^	split_join_can_throw = false,$/;"	e	enum:__gnu_pbds::container_traits_base::__anon19
split_join_can_throw	5/ext/pb_ds/tag_and_trait.hpp	/^	split_join_can_throw = false,$/;"	e	enum:__gnu_pbds::container_traits_base::__anon20
split_join_can_throw	5/ext/pb_ds/tag_and_trait.hpp	/^	split_join_can_throw = false,$/;"	e	enum:__gnu_pbds::container_traits_base::__anon21
split_join_can_throw	5/ext/pb_ds/tag_and_trait.hpp	/^	split_join_can_throw = false,$/;"	e	enum:__gnu_pbds::container_traits_base::__anon22
split_join_can_throw	5/ext/pb_ds/tag_and_trait.hpp	/^	split_join_can_throw = false,$/;"	e	enum:__gnu_pbds::container_traits_base::__anon23
split_join_can_throw	5/ext/pb_ds/tag_and_trait.hpp	/^	split_join_can_throw = true,$/;"	e	enum:__gnu_pbds::container_traits_base::__anon17
split_join_can_throw	5/ext/pb_ds/tag_and_trait.hpp	/^	split_join_can_throw = true,$/;"	e	enum:__gnu_pbds::container_traits_base::__anon18
split_join_can_throw	5/ext/pb_ds/tag_and_trait.hpp	/^	split_join_can_throw = true,$/;"	e	enum:__gnu_pbds::container_traits_base::__anon24
split_min	5/ext/pb_ds/detail/rb_tree_map_/split_join_fn_imps.hpp	/^split_min()$/;"	f	class:PB_DS_CLASS_C_DEC
split_prep	5/ext/pb_ds/detail/bin_search_tree_/split_join_fn_imps.hpp	/^split_prep(key_const_reference r_key, PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
split_prep	5/ext/pb_ds/detail/pat_trie_/split_fn_imps.hpp	/^split_prep(key_const_reference r_key, PB_DS_CLASS_C_DEC& other,$/;"	f	class:PB_DS_CLASS_C_DEC
sqr	opencv2/stitching/detail/util_inl.hpp	/^static inline double sqr(double x) { return x * x; }$/;"	f	namespace:cv::detail
sqr	opencv2/stitching/detail/util_inl.hpp	/^static inline float sqr(float x) { return x * x; }$/;"	f	namespace:cv::detail
sqr	opencv2/stitching/detail/util_inl.hpp	/^static inline int sqr(int x) { return x * x; }$/;"	f	namespace:cv::detail
sqr_func	opencv2/cudev/functional/functional.hpp	/^template <typename T> struct sqr_func : unary_function<T, T>$/;"	s	namespace:cv::cudev
squareDistance	opencv2/flann/dist.h	/^struct squareDistance$/;"	s	namespace:cvflann
squareDistance	opencv2/flann/dist.h	/^struct squareDistance<ChiSquareDistance<ElementType>, ElementType>$/;"	s	namespace:cvflann
squareDistance	opencv2/flann/dist.h	/^struct squareDistance<HellingerDistance<ElementType>, ElementType>$/;"	s	namespace:cvflann
squareDistance	opencv2/flann/dist.h	/^struct squareDistance<L2<ElementType>, ElementType>$/;"	s	namespace:cvflann
squareDistance	opencv2/flann/dist.h	/^struct squareDistance<L2_Simple<ElementType>, ElementType>$/;"	s	namespace:cvflann
squareDistance	opencv2/flann/dist.h	/^struct squareDistance<MinkowskiDistance<ElementType>, ElementType>$/;"	s	namespace:cvflann
src	opencv2/core/cuda/border_interpolate.hpp	/^        Ptr2D src;$/;"	m	struct:cv::cuda::device::BorderReader
src	opencv2/core/cuda/filters.hpp	/^        Ptr2D src;$/;"	m	struct:cv::cuda::device::AreaFilter
src	opencv2/core/cuda/filters.hpp	/^        Ptr2D src;$/;"	m	struct:cv::cuda::device::CubicFilter
src	opencv2/core/cuda/filters.hpp	/^        Ptr2D src;$/;"	m	struct:cv::cuda::device::IntegerAreaFilter
src	opencv2/core/cuda/filters.hpp	/^        Ptr2D src;$/;"	m	struct:cv::cuda::device::LinearFilter
src	opencv2/core/cuda/filters.hpp	/^        Ptr2D src;$/;"	m	struct:cv::cuda::device::PointFilter
src	opencv2/cudev/expr/reduction.hpp	/^    SrcPtr src;$/;"	m	struct:cv::cudev::CountNonZeroExprBody
src	opencv2/cudev/expr/reduction.hpp	/^    SrcPtr src;$/;"	m	struct:cv::cudev::FindMaxValExprBody
src	opencv2/cudev/expr/reduction.hpp	/^    SrcPtr src;$/;"	m	struct:cv::cudev::FindMinMaxValExprBody
src	opencv2/cudev/expr/reduction.hpp	/^    SrcPtr src;$/;"	m	struct:cv::cudev::FindMinValExprBody
src	opencv2/cudev/expr/reduction.hpp	/^    SrcPtr src;$/;"	m	struct:cv::cudev::HistogramBody
src	opencv2/cudev/expr/reduction.hpp	/^    SrcPtr src;$/;"	m	struct:cv::cudev::IntegralBody
src	opencv2/cudev/expr/reduction.hpp	/^    SrcPtr src;$/;"	m	struct:cv::cudev::ReduceToColumnBody
src	opencv2/cudev/expr/reduction.hpp	/^    SrcPtr src;$/;"	m	struct:cv::cudev::ReduceToRowBody
src	opencv2/cudev/expr/reduction.hpp	/^    SrcPtr src;$/;"	m	struct:cv::cudev::SumExprBody
src	opencv2/cudev/expr/warping.hpp	/^    SrcPtr src;$/;"	m	struct:cv::cudev::PyrDownBody
src	opencv2/cudev/expr/warping.hpp	/^    SrcPtr src;$/;"	m	struct:cv::cudev::PyrUpBody
src	opencv2/cudev/expr/warping.hpp	/^    SrcPtr src;$/;"	m	struct:cv::cudev::TransposeBody
src	opencv2/cudev/ptr2d/deriv.hpp	/^    SrcPtr src;$/;"	m	struct:cv::cudev::DerivXPtr
src	opencv2/cudev/ptr2d/deriv.hpp	/^    SrcPtr src;$/;"	m	struct:cv::cudev::DerivYPtr
src	opencv2/cudev/ptr2d/deriv.hpp	/^    SrcPtr src;$/;"	m	struct:cv::cudev::LaplacianPtr
src	opencv2/cudev/ptr2d/deriv.hpp	/^    SrcPtr src;$/;"	m	struct:cv::cudev::ScharrXPtr
src	opencv2/cudev/ptr2d/deriv.hpp	/^    SrcPtr src;$/;"	m	struct:cv::cudev::ScharrYPtr
src	opencv2/cudev/ptr2d/deriv.hpp	/^    SrcPtr src;$/;"	m	struct:cv::cudev::SobelXPtr
src	opencv2/cudev/ptr2d/deriv.hpp	/^    SrcPtr src;$/;"	m	struct:cv::cudev::SobelYPtr
src	opencv2/cudev/ptr2d/deriv.hpp	/^   SrcPtr src;$/;"	m	struct:cv::cudev::LaplacianPtr
src	opencv2/cudev/ptr2d/extrapolation.hpp	/^    SrcPtr src;$/;"	m	struct:cv::cudev::BrdBase
src	opencv2/cudev/ptr2d/extrapolation.hpp	/^    SrcPtr src;$/;"	m	struct:cv::cudev::BrdConstant
src	opencv2/cudev/ptr2d/interpolation.hpp	/^    SrcPtr src;$/;"	m	struct:cv::cudev::CommonAreaInterPtr
src	opencv2/cudev/ptr2d/interpolation.hpp	/^    SrcPtr src;$/;"	m	struct:cv::cudev::CubicInterPtr
src	opencv2/cudev/ptr2d/interpolation.hpp	/^    SrcPtr src;$/;"	m	struct:cv::cudev::IntegerAreaInterPtr
src	opencv2/cudev/ptr2d/interpolation.hpp	/^    SrcPtr src;$/;"	m	struct:cv::cudev::LinearInterPtr
src	opencv2/cudev/ptr2d/interpolation.hpp	/^    SrcPtr src;$/;"	m	struct:cv::cudev::NearestInterPtr
src	opencv2/cudev/ptr2d/lut.hpp	/^    SrcPtr src;$/;"	m	struct:cv::cudev::LutPtr
src	opencv2/cudev/ptr2d/remap.hpp	/^    SrcPtr src;$/;"	m	struct:cv::cudev::RemapPtr1
src	opencv2/cudev/ptr2d/remap.hpp	/^    SrcPtr src;$/;"	m	struct:cv::cudev::RemapPtr2
src	opencv2/cudev/ptr2d/resize.hpp	/^    SrcPtr src;$/;"	m	struct:cv::cudev::ResizePtr
src	opencv2/cudev/ptr2d/transform.hpp	/^    SrcPtr src;$/;"	m	struct:cv::cudev::UnaryTransformPtr
src1	opencv2/cudev/ptr2d/transform.hpp	/^    Src1Ptr src1;$/;"	m	struct:cv::cudev::BinaryTransformPtr
src2	opencv2/cudev/ptr2d/transform.hpp	/^    Src2Ptr src2;$/;"	m	struct:cv::cudev::BinaryTransformPtr
src_	opencv2/stitching/detail/seam_finders.hpp	/^        const Mat *src_;$/;"	m	class:cv::detail::DpSeamFinder::ImagePairLess
src_img_idx	opencv2/stitching/detail/matchers.hpp	/^    int src_img_idx, dst_img_idx;       \/\/!< Images indices (optional)$/;"	m	struct:cv::detail::MatchesInfo
stabilizationMotions	opencv2/videostab/inpainting.hpp	/^    virtual const std::vector<Mat>& stabilizationMotions() const { return *stabilizationMotions_; }$/;"	f	class:cv::videostab::InpainterBase
stabilizationMotions	opencv2/videostab/wobble_suppression.hpp	/^    virtual const std::vector<Mat>& stabilizationMotions() const { return *stabilizationMotions_; }$/;"	f	class:cv::videostab::WobbleSuppressorBase
stabilizationMotions_	opencv2/videostab/inpainting.hpp	/^    const std::vector<Mat> *stabilizationMotions_;$/;"	m	class:cv::videostab::InpainterBase
stabilizationMotions_	opencv2/videostab/stabilizer.hpp	/^    std::vector<Mat> stabilizationMotions_;$/;"	m	class:cv::videostab::StabilizerBase
stabilizationMotions_	opencv2/videostab/wobble_suppression.hpp	/^    const std::vector<Mat> *stabilizationMotions_;$/;"	m	class:cv::videostab::WobbleSuppressorBase
stabilizedFrames	opencv2/videostab/inpainting.hpp	/^    virtual const std::vector<Mat>& stabilizedFrames() const { return *stabilizedFrames_; }$/;"	f	class:cv::videostab::InpainterBase
stabilizedFrames_	opencv2/videostab/inpainting.hpp	/^    const std::vector<Mat> *stabilizedFrames_;$/;"	m	class:cv::videostab::InpainterBase
stabilizedFrames_	opencv2/videostab/stabilizer.hpp	/^    std::vector<Mat> stabilizedFrames_;$/;"	m	class:cv::videostab::StabilizerBase
stabilizedMasks_	opencv2/videostab/stabilizer.hpp	/^    std::vector<Mat> stabilizedMasks_;$/;"	m	class:cv::videostab::StabilizerBase
stabilizers_	opencv2/videostab/motion_stabilizing.hpp	/^    std::vector<Ptr<IMotionStabilizer> > stabilizers_;$/;"	m	class:cv::videostab::MotionStabilizationPipeline
stable_multiway_merge	5/parallel/multiway_merge.h	/^    stable_multiway_merge(_RAIterPairIterator __seqs_begin,$/;"	f	namespace:__gnu_parallel
stable_multiway_merge_sentinels	5/parallel/multiway_merge.h	/^    stable_multiway_merge_sentinels(_RAIterPairIterator __seqs_begin,$/;"	f	namespace:__gnu_parallel
stable_partition	cpp_src/stl_algo.h	/^    stable_partition(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std
stable_sort	cpp_src/stl_algo.h	/^    stable_sort(_RandomAccessIterator __first, _RandomAccessIterator __last)$/;"	f	namespace:std
stable_sort	cpp_src/stl_algo.h	/^    stable_sort(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	namespace:std
stack	cpp_src/stl_stack.h	/^      stack(const _Sequence& __c = _Sequence())$/;"	f	class:std::stack
stack	cpp_src/stl_stack.h	/^    class stack$/;"	c	namespace:std
stack	opencv2/core/core_c.h	/^    CvSeq*   stack;        \/* the graph vertex stack *\/$/;"	m	struct:CvGraphScanner
stack	opencv2/core/core_c.h	/^    int stack[CV_MAX_DIM]; \/**< for internal use *\/$/;"	m	struct:CvNArrayIterator
stage_classifier	opencv2/objdetect/objdetect_c.h	/^    CvHaarStageClassifier* stage_classifier;$/;"	m	struct:CvHaarClassifierCascade
start	cpp_src/gslice.h	/^  gslice::start () const$/;"	f	class:std::gslice
start	cpp_src/slice_array.h	/^  slice::start() const$/;"	f	class:std::slice
start	opencv2/core/types.hpp	/^    int start, end;$/;"	m	class:cv::Range
start	opencv2/core/utility.hpp	/^    CV_WRAP void start()$/;"	f	class:cv::TickMeter
start	opencv2/flann/timer.h	/^    void start()$/;"	f	class:cvflann::StartStopTimer
start	opencv2/imgproc/types_c.h	/^    CvPoint* start; \/**< point of the contour where the defect begins *\/$/;"	m	struct:CvConvexityDefect
startIdxs	opencv2/features2d.hpp	/^        std::vector<int> startIdxs;$/;"	m	class:cv::DescriptorMatcher::DescriptorCollection
startTime	opencv2/core/utility.hpp	/^    int64 startTime;$/;"	m	class:cv::TickMeter
startTime	opencv2/flann/timer.h	/^    int64 startTime;$/;"	m	class:cvflann::StartStopTimer
start_index	opencv2/core/types_c.h	/^    int  start_index, end_index;$/;"	m	struct:CvSlice
start_index	opencv2/core/types_c.h	/^  int    start_index;         \/**< Index of the first element in the block +  *\/$/;"	m	struct:CvSeqBlock
state	cpp_src/postypes.h	/^      state() const$/;"	f	class:std::fpos
state	cpp_src/postypes.h	/^      state(_StateT __st)$/;"	f	class:std::fpos
state	opencv2/calib3d/calib3d_c.h	/^    int state;$/;"	m	class:CvLevMarq
state	opencv2/calib3d/calib3d_c.h	/^CVAPI(void) cvReleaseStereoBMState( CvStereoBMState** state );$/;"	v
state	opencv2/core.hpp	/^    uint64 state;$/;"	m	class:cv::RNG
state	opencv2/core.hpp	/^    unsigned state[N];$/;"	m	class:cv::RNG_MT19937
state	opencv2/core/persistence.hpp	/^    int state; \/\/!< the writer state$/;"	m	class:cv::FileStorage
statePost	opencv2/video/tracking.hpp	/^    CV_PROP_RW Mat statePost;          \/\/!< corrected state (x(k)): x(k)=x'(k)+K(k)*(z(k)-H*x'(k))$/;"	m	class:cv::KalmanFilter
statePre	opencv2/video/tracking.hpp	/^    CV_PROP_RW Mat statePre;           \/\/!< predicted state (x'(k)): x(k)=A*x(k-1)+B*u(k)$/;"	m	class:cv::KalmanFilter
state_post	opencv2/video/tracking_c.h	/^    CvMat* state_post;          \/* corrected state (x(k)):$/;"	m	struct:CvKalman
state_pre	opencv2/video/tracking_c.h	/^    CvMat* state_pre;           \/* predicted state (x'(k)):$/;"	m	struct:CvKalman
state_type	cpp_src/char_traits.h	/^      typedef std::mbstate_t  state_type;$/;"	t	struct:_Char_types
state_type	cpp_src/char_traits.h	/^      typedef typename _Char_types<_CharT>::state_type  state_type;$/;"	t	struct:char_traits
state_type	cpp_src/codecvt.h	/^      typedef _StateT			state_type;$/;"	t	class:std::__codecvt_abstract_base
state_type	cpp_src/codecvt.h	/^      typedef _StateT			state_type;$/;"	t	class:std::codecvt
state_type	cpp_src/codecvt.h	/^      typedef mbstate_t			state_type;$/;"	t	class:std::codecvt
states_	opencv2/stitching/detail/seam_finders.hpp	/^    std::vector<ComponentState> states_;$/;"	m	class:cv::detail::DpSeamFinder
staticCast	opencv2/core/ptr.inl.hpp	/^Ptr<Y> Ptr<T>::staticCast() const$/;"	f	class:cv::Ptr
static_delete	opencv2/flann/any.h	/^    virtual void static_delete(void** x)$/;"	f	struct:cvflann::anyimpl::big_any_policy
static_delete	opencv2/flann/any.h	/^    virtual void static_delete(void**) { }$/;"	f	struct:cvflann::anyimpl::small_any_policy
status	opencv2/objdetect/detection_based_tracker.hpp	/^            ObjectStatus status;$/;"	m	struct:cv::DetectionBasedTracker::ExtObject
status_	opencv2/videostab/global_motion.hpp	/^    cuda::GpuMat status_;$/;"	m	class:cv::videostab::KeypointBasedMotionEstimatorGpu
status_	opencv2/videostab/global_motion.hpp	/^    std::vector<uchar> status_;$/;"	m	class:cv::videostab::KeypointBasedMotionEstimator
status_	opencv2/videostab/optical_flow.hpp	/^    cuda::GpuMat frame0_, frame1_, points0_, points1_, status_, errors_;$/;"	m	class:cv::videostab::SparsePyrLkOptFlowEstimatorGpu
std	5/bits/exception_ptr.h	/^namespace std $/;"	n
std	5/bits/hash_bytes.h	/^namespace std$/;"	n
std	5/bits/nested_exception.h	/^namespace std$/;"	n
std	5/debug/debug.h	/^namespace std$/;"	n
std	5/fenv.h	/^namespace std$/;"	n
std	cpp_src/allocator.h	/^namespace std {$/;"	n
std	cpp_src/basic_ios.h	/^namespace std {$/;"	n
std	cpp_src/basic_string.h	/^namespace std {$/;"	n
std	cpp_src/codecvt.h	/^namespace std {$/;"	n
std	cpp_src/functexcept.h	/^namespace std {$/;"	n
std	cpp_src/gslice.h	/^namespace std {$/;"	n
std	cpp_src/gslice_array.h	/^namespace std {$/;"	n
std	cpp_src/indirect_array.h	/^namespace std {$/;"	n
std	cpp_src/ios_base.h	/^namespace std {$/;"	n
std	cpp_src/locale_classes.h	/^namespace std {$/;"	n
std	cpp_src/locale_facets.h	/^namespace std {$/;"	n
std	cpp_src/localefwd.h	/^namespace std {$/;"	n
std	cpp_src/mask_array.h	/^namespace std {$/;"	n
std	cpp_src/ostream_insert.h	/^namespace std {$/;"	n
std	cpp_src/postypes.h	/^namespace std {$/;"	n
std	cpp_src/slice_array.h	/^namespace std {$/;"	n
std	cpp_src/stl_algo.h	/^namespace std {$/;"	n
std	cpp_src/stl_algobase.h	/^namespace std {$/;"	n
std	cpp_src/stl_bvector.h	/^namespace std {$/;"	n
std	cpp_src/stl_construct.h	/^namespace std {$/;"	n
std	cpp_src/stl_deque.h	/^namespace std {$/;"	n
std	cpp_src/stl_function.h	/^namespace std {$/;"	n
std	cpp_src/stl_heap.h	/^namespace std {$/;"	n
std	cpp_src/stl_iterator.h	/^namespace std {$/;"	n
std	cpp_src/stl_iterator_base_funcs.h	/^namespace std {$/;"	n
std	cpp_src/stl_iterator_base_types.h	/^namespace std {$/;"	n
std	cpp_src/stl_list.h	/^namespace std {$/;"	n
std	cpp_src/stl_map.h	/^namespace std {$/;"	n
std	cpp_src/stl_multimap.h	/^namespace std {$/;"	n
std	cpp_src/stl_multiset.h	/^namespace std {$/;"	n
std	cpp_src/stl_numeric.h	/^namespace std {$/;"	n
std	cpp_src/stl_pair.h	/^namespace std {$/;"	n
std	cpp_src/stl_queue.h	/^namespace std {$/;"	n
std	cpp_src/stl_raw_storage_iter.h	/^namespace std {$/;"	n
std	cpp_src/stl_relops.h	/^namespace std {$/;"	n
std	cpp_src/stl_set.h	/^namespace std {$/;"	n
std	cpp_src/stl_stack.h	/^namespace std {$/;"	n
std	cpp_src/stl_tempbuf.h	/^namespace std {$/;"	n
std	cpp_src/stl_tree.h	/^namespace std {$/;"	n
std	cpp_src/stl_uninitialized.h	/^namespace std {$/;"	n
std	cpp_src/stl_vector.h	/^namespace std {$/;"	n
std	cpp_src/stream_iterator.h	/^namespace std {$/;"	n
std	cpp_src/streambuf_iterator.h	/^namespace std {$/;"	n
std	cpp_src/stringfwd.h	/^namespace std {$/;"	n
std	cpp_src/valarray_after.h	/^namespace std {$/;"	n
std	cpp_src/valarray_array.h	/^namespace std {$/;"	n
std	cpp_src/valarray_before.h	/^namespace std {$/;"	n
std	opencv2/core/cvstd.hpp	/^namespace std$/;"	n
stdev	opencv2/videostab/motion_stabilizing.hpp	/^    float stdev() const { return stdev_; }$/;"	f	class:cv::videostab::GaussianMotionFilter
stdevThresh	opencv2/videostab/inpainting.hpp	/^    float stdevThresh() const { return stdevThresh_; }$/;"	f	class:cv::videostab::ConsistentMosaicInpainter
stdevThresh_	opencv2/videostab/inpainting.hpp	/^    float stdevThresh_;$/;"	m	class:cv::videostab::ConsistentMosaicInpainter
stdev_	opencv2/videostab/motion_stabilizing.hpp	/^    float stdev_;$/;"	m	class:cv::videostab::GaussianMotionFilter
step	opencv2/core/cuda.hpp	/^    size_t step;$/;"	m	class:cv::cuda::GpuMat
step	opencv2/core/cuda.hpp	/^    size_t step;$/;"	m	class:cv::cuda::HostMem
step	opencv2/core/cuda_types.hpp	/^            size_t step;$/;"	m	struct:cv::cuda::PtrStep
step	opencv2/core/mat.hpp	/^    MatStep step;$/;"	m	class:cv::Mat
step	opencv2/core/mat.hpp	/^    MatStep step;$/;"	m	class:cv::UMat
step	opencv2/core/types_c.h	/^        int step;$/;"	m	struct:CvMatND::__anon329
step	opencv2/core/types_c.h	/^    int step;$/;"	m	struct:CvMat
step	opencv2/cudev/ptr2d/glob.hpp	/^    size_t step;$/;"	m	struct:cv::cudev::GlobPtr
step	opencv2/imgproc.hpp	/^    int step, elemSize;$/;"	m	class:cv::LineIterator
step1	opencv2/core/cuda.inl.hpp	/^size_t GpuMat::step1() const$/;"	f	class:cv::cuda::GpuMat
step1	opencv2/core/cuda.inl.hpp	/^size_t HostMem::step1() const$/;"	f	class:cv::cuda::HostMem
step1	opencv2/core/mat.inl.hpp	/^size_t Mat::step1(int i) const$/;"	f	class:cv::Mat
step1	opencv2/core/mat.inl.hpp	/^size_t Mat_<_Tp>::step1(int i) const$/;"	f	class:cv::Mat_
step1	opencv2/core/mat.inl.hpp	/^size_t UMat::step1(int i) const$/;"	f	class:cv::UMat
step1	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^__host__ size_t GpuMat_<T>::step1() const$/;"	f	class:cv::cudev::GpuMat_
stepT	opencv2/core/mat.inl.hpp	/^size_t Mat_<_Tp>::stepT(int i) const$/;"	f	class:cv::Mat_
stepT	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^__host__ size_t GpuMat_<T>::stepT() const$/;"	f	class:cv::cudev::GpuMat_
stop	opencv2/core/utility.hpp	/^    CV_WRAP void stop()$/;"	f	class:cv::TickMeter
stop	opencv2/flann/timer.h	/^    void stop()$/;"	f	class:cvflann::StartStopTimer
storage	opencv2/core/core_c.h	/^CVAPI(void)  cvClearMemStorage( CvMemStorage* storage );$/;"	v
storage	opencv2/core/core_c.h	/^CVAPI(void)  cvReleaseMemStorage( CvMemStorage** storage );$/;"	v
store_extra	5/ext/pb_ds/detail/types_traits.hpp	/^	typedef integral_constant<int, Store_Hash> 	store_extra;$/;"	t	struct:__gnu_pbds::detail::types_traits
store_hash	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^	  store_hash = Store_Hash$/;"	e	enum:__gnu_pbds::detail::PB_DS_CC_HASH_NAME::__anon32
store_hash	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^	  store_hash = Store_Hash$/;"	e	enum:__gnu_pbds::detail::PB_DS_GP_HASH_NAME::__anon49
store_hash_ok	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^	  store_hash_ok = !Store_Hash$/;"	e	enum:__gnu_pbds::detail::PB_DS_CC_HASH_NAME::__anon33
store_hash_ok	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^	  store_hash_ok = !Store_Hash$/;"	e	enum:__gnu_pbds::detail::PB_DS_GP_HASH_NAME::__anon50
stored	opencv2/core/cvstd.hpp	/^    T* stored;$/;"	m	struct:cv::Ptr
stored_data	5/ext/pb_ds/detail/types_traits.hpp	/^      struct stored_data$/;"	s	namespace:__gnu_pbds::detail
stored_data	5/ext/pb_ds/detail/types_traits.hpp	/^      struct stored_data<_Tv, null_type>$/;"	s	namespace:__gnu_pbds::detail
stored_data_type	5/ext/pb_ds/detail/types_traits.hpp	/^	typedef stored_data<value_type, null_type>	stored_data_type;$/;"	t	struct:__gnu_pbds::detail::type_base
stored_data_type	5/ext/pb_ds/detail/types_traits.hpp	/^	typedef stored_data<value_type, size_type>	stored_data_type;$/;"	t	struct:__gnu_pbds::detail::type_base
stored_hash	5/ext/pb_ds/detail/types_traits.hpp	/^      struct stored_hash$/;"	s	namespace:__gnu_pbds::detail
stored_value	5/ext/pb_ds/detail/types_traits.hpp	/^      struct stored_value$/;"	s	namespace:__gnu_pbds::detail
str	opencv2/core/types_c.h	/^        CvString str; \/**< text string *\/$/;"	m	union:CvFileNode::__anon330
str	opencv2/core/types_c.h	/^    CvString str;$/;"	m	struct:CvStringHashNode
stream	opencv2/flann/logger.h	/^    FILE* stream;$/;"	m	class:cvflann::Logger
streambuf_type	cpp_src/streambuf_iterator.h	/^      typedef basic_streambuf<_CharT, _Traits>		streambuf_type;$/;"	t	class:std::istreambuf_iterator
streambuf_type	cpp_src/streambuf_iterator.h	/^      typedef basic_streambuf<_CharT, _Traits> streambuf_type;$/;"	t	class:std::ostreambuf_iterator
streamoff	cpp_src/ios_base.h	/^    typedef std::streamoff streamoff;$/;"	t	class:std::ios_base
streamoff	cpp_src/postypes.h	/^  typedef int64_t       streamoff;$/;"	t	namespace:std
streampos	cpp_src/ios_base.h	/^    typedef std::streampos streampos;$/;"	t	class:std::ios_base
streampos	cpp_src/postypes.h	/^  typedef fpos<mbstate_t> streampos;$/;"	t	namespace:std
streamsize	cpp_src/postypes.h	/^  typedef ptrdiff_t	streamsize; \/\/ Signed integral type$/;"	t	namespace:std
stride	cpp_src/gslice.h	/^  gslice::stride () const$/;"	f	class:std::gslice
stride	cpp_src/slice_array.h	/^  slice::stride() const$/;"	f	class:std::slice
stride	opencv2/core/cuda/block.hpp	/^        static __device__ __forceinline__ unsigned int stride()$/;"	f	struct:cv::cuda::device::Block
stride	opencv2/cudalegacy/NCV.hpp	/^    Ncv32u stride() const$/;"	f	class:NCVMatrix
stride	opencv2/flann/matrix.h	/^    size_t stride;$/;"	m	class:cvflann::Matrix
string	cpp_src/stringfwd.h	/^  typedef basic_string<char>    string;$/;"	t	namespace:std
string	opencv2/core/persistence.hpp	/^inline String FileNode::string() const { return String(*this); }$/;"	f	class:cv::FileNode
string_tag	5/ext/pb_ds/tag_and_trait.hpp	/^  struct string_tag : public sequence_tag { };$/;"	s	namespace:__gnu_pbds
string_type	5/ext/pb_ds/detail/standard_policies.hpp	/^	typedef __dtrie_string					string_type;$/;"	t	struct:__gnu_pbds::detail::default_trie_access_traits
string_type	cpp_src/locale_facets.h	/^      typedef basic_string<_CharT>	string_type;$/;"	t	class:std::collate
string_type	cpp_src/locale_facets.h	/^      typedef basic_string<_CharT>	string_type;$/;"	t	class:std::messages
string_type	cpp_src/locale_facets.h	/^      typedef basic_string<_CharT>	string_type;$/;"	t	class:std::messages_byname
string_type	cpp_src/locale_facets.h	/^      typedef basic_string<_CharT>	string_type;$/;"	t	class:std::money_get
string_type	cpp_src/locale_facets.h	/^      typedef basic_string<_CharT>	string_type;$/;"	t	class:std::money_put
string_type	cpp_src/locale_facets.h	/^      typedef basic_string<_CharT>	string_type;$/;"	t	class:std::moneypunct
string_type	cpp_src/locale_facets.h	/^      typedef basic_string<_CharT>	string_type;$/;"	t	class:std::moneypunct_byname
string_type	cpp_src/locale_facets.h	/^      typedef basic_string<_CharT>	string_type;$/;"	t	class:std::numpunct
string_type	cpp_src/locale_facets.h	/^      typedef basic_string<_CharT>	string_type;$/;"	t	class:std::numpunct_byname
string_type	cpp_src/locale_facets.h	/^      typedef basic_string<_CharT> string_type;$/;"	t	class:std::collate_byname
structs	opencv2/core/persistence.hpp	/^    std::vector<char> structs; \/\/!< the stack of written structures$/;"	m	class:cv::FileStorage
structure_only_assert_valid	5/ext/pb_ds/detail/bin_search_tree_/debug_fn_imps.hpp	/^structure_only_assert_valid(const char* __file, int __line) const$/;"	f	class:PB_DS_CLASS_C_DEC
subscribe	opencv2/flann/object_factory.h	/^    bool subscribe(UniqueIdType id, ObjectCreator creator)$/;"	f	class:cvflann::ObjectFactory
subscript_imp	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      subscript_imp(key_const_reference r_key, false_type)$/;"	f	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
subscript_imp	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      subscript_imp(key_const_reference r_key, true_type)$/;"	f	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
subscript_imp	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      subscript_imp(key_const_reference key, false_type)$/;"	f	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
subscript_imp	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      subscript_imp(key_const_reference key, true_type)$/;"	f	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
subsetOfs	opencv2/ml.hpp	/^        int subsetOfs; \/**< Offset of the bitset used by the split on a categorical variable.$/;"	m	class:cv::ml::DTrees::Split
substr	cpp_src/basic_string.h	/^      substr(size_type __pos = 0, size_type __n = npos) const$/;"	f	class:std::basic_string
substr	opencv2/core/cvstd.hpp	/^String String::substr(size_t pos, size_t len) const$/;"	f	class:cv::String
sum	cpp_src/valarray_after.h	/^    _Expr<_Clos, _Tp>::sum() const$/;"	f	class:std::_Expr
sum	opencv2/cudev/grid/detail/reduce.hpp	/^        work_type sum;$/;"	m	struct:cv::cudev::grid_reduce_detail::SumReductor
sum	opencv2/cudev/grid/detail/reduce.hpp	/^    __host__ void sum(const SrcPtr& src, ResType* result, const MaskPtr& mask, int rows, int cols, cudaStream_t stream)$/;"	f	namespace:cv::cudev::grid_reduce_detail
sumTime	opencv2/core/utility.hpp	/^    int64 sumTime;$/;"	m	class:cv::TickMeter
sum_	opencv2/cudev/expr/reduction.hpp	/^sum_(const SrcPtr& src)$/;"	f	namespace:cv::cudev
sum_type	opencv2/core/hal/intrin.hpp	/^    typedef _Tp sum_type;$/;"	t	struct:cv::V_TypeTraits
sum_type	opencv2/core/hal/intrin.hpp	/^    typedef double sum_type;$/;"	t	struct:cv::V_TypeTraits
sum_type	opencv2/core/hal/intrin.hpp	/^    typedef float sum_type;$/;"	t	struct:cv::V_TypeTraits
sum_type	opencv2/core/hal/intrin.hpp	/^    typedef int sum_type;$/;"	t	struct:cv::V_TypeTraits
sum_type	opencv2/core/hal/intrin.hpp	/^    typedef int64 sum_type;$/;"	t	struct:cv::V_TypeTraits
sum_type	opencv2/core/hal/intrin.hpp	/^    typedef uint64 sum_type;$/;"	t	struct:cv::V_TypeTraits
sum_type	opencv2/core/hal/intrin.hpp	/^    typedef unsigned sum_type;$/;"	t	struct:cv::V_TypeTraits
sun	5/sun/awt/CausedFocusEvent.h	/^  namespace sun$/;"	n
sun	5/sun/misc/Service.h	/^  namespace sun$/;"	n
sun	5/sun/misc/ServiceConfigurationError.h	/^  namespace sun$/;"	n
sun	5/sun/misc/Unsafe.h	/^  namespace sun$/;"	n
sun	5/sun/reflect/Reflection.h	/^  namespace sun$/;"	n
sun	5/sun/reflect/annotation/AnnotationInvocationHandler.h	/^  namespace sun$/;"	n
sun	5/sun/reflect/annotation/AnnotationParser.h	/^  namespace sun$/;"	n
sun	5/sun/reflect/annotation/AnnotationType.h	/^  namespace sun$/;"	n
sun	5/sun/reflect/annotation/EnumConstantNotPresentExceptionProxy.h	/^  namespace sun$/;"	n
sun	5/sun/reflect/annotation/ExceptionProxy.h	/^  namespace sun$/;"	n
sun	5/sun/reflect/misc/ReflectUtil.h	/^  namespace sun$/;"	n
superres	opencv2/superres.hpp	/^    namespace superres$/;"	n	namespace:cv
superres	opencv2/superres/optical_flow.hpp	/^    namespace superres$/;"	n	namespace:cv
supports	opencv2/core/cuda.inl.hpp	/^bool DeviceInfo::supports(FeatureSet feature_set) const$/;"	f	class:cv::cuda::DeviceInfo
suppressedFrame_	opencv2/videostab/stabilizer.hpp	/^    Mat suppressedFrame_;$/;"	m	class:cv::videostab::TwoPassStabilizer
surf	opencv2/stitching/detail/matchers.hpp	/^    Ptr<Feature2D> surf;$/;"	m	class:cv::detail::SurfFeaturesFinder
surf_	opencv2/stitching/detail/matchers.hpp	/^    cuda::SURF_CUDA surf_;$/;"	m	class:cv::detail::SurfFeaturesFinderGpu
svmDetector	opencv2/objdetect.hpp	/^    CV_PROP std::vector<float> svmDetector;$/;"	m	struct:cv::HOGDescriptor
swap	5/bits/exception_ptr.h	/^    swap(exception_ptr& __lhs, exception_ptr& __rhs)$/;"	f	namespace:std::__exception_ptr
swap	5/ext/pb_ds/assoc_container.hpp	/^    swap(cc_hash_table& other)$/;"	f	class:__gnu_pbds::cc_hash_table
swap	5/ext/pb_ds/assoc_container.hpp	/^    swap(gp_hash_table& other)$/;"	f	class:__gnu_pbds::gp_hash_table
swap	5/ext/pb_ds/assoc_container.hpp	/^    swap(list_update& other)$/;"	f	class:__gnu_pbds::list_update
swap	5/ext/pb_ds/assoc_container.hpp	/^    swap(tree& other)$/;"	f	class:__gnu_pbds::tree
swap	5/ext/pb_ds/assoc_container.hpp	/^    swap(trie& other)$/;"	f	class:__gnu_pbds::trie
swap	5/ext/pb_ds/detail/bin_search_tree_/constructors_destructor_fn_imps.hpp	/^swap(PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
swap	5/ext/pb_ds/detail/binary_heap_/constructors_destructor_fn_imps.hpp	/^swap(PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
swap	5/ext/pb_ds/detail/binary_heap_/resize_policy.hpp	/^    swap(resize_policy<_Tp>& other)$/;"	f	class:__gnu_pbds::detail::resize_policy
swap	5/ext/pb_ds/detail/binomial_heap_base_/constructors_destructor_fn_imps.hpp	/^swap(PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
swap	5/ext/pb_ds/detail/cc_hash_table_map_/constructor_destructor_fn_imps.hpp	/^swap(PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
swap	5/ext/pb_ds/detail/debug_map_base.hpp	/^    swap(PB_DS_CLASS_C_DEC& other)$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
swap	5/ext/pb_ds/detail/eq_fn/hash_eq_fn.hpp	/^      swap(const hash_eq_fn& other)$/;"	f	struct:__gnu_pbds::detail::hash_eq_fn
swap	5/ext/pb_ds/detail/gp_hash_table_map_/constructor_destructor_fn_imps.hpp	/^swap(PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
swap	5/ext/pb_ds/detail/hash_fn/direct_mask_range_hashing_imp.hpp	/^swap(PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
swap	5/ext/pb_ds/detail/hash_fn/direct_mod_range_hashing_imp.hpp	/^swap(PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
swap	5/ext/pb_ds/detail/hash_fn/linear_probe_fn_imp.hpp	/^swap(PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
swap	5/ext/pb_ds/detail/hash_fn/mask_based_range_hashing.hpp	/^      swap(mask_based_range_hashing& other)$/;"	f	class:__gnu_pbds::detail::mask_based_range_hashing
swap	5/ext/pb_ds/detail/hash_fn/mod_based_range_hashing.hpp	/^      swap(mod_based_range_hashing& other)$/;"	f	class:__gnu_pbds::detail::mod_based_range_hashing
swap	5/ext/pb_ds/detail/hash_fn/quadratic_probe_fn_imp.hpp	/^swap(PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
swap	5/ext/pb_ds/detail/hash_fn/ranged_hash_fn.hpp	/^    swap(PB_DS_CLASS_C_DEC& other)$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
swap	5/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp	/^      swap(ranged_probe_fn& other)$/;"	f	class:__gnu_pbds::detail::ranged_probe_fn
swap	5/ext/pb_ds/detail/hash_fn/ranged_probe_fn.hpp	/^    swap(PB_DS_CLASS_C_DEC& other)$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
swap	5/ext/pb_ds/detail/left_child_next_sibling_heap_/constructors_destructor_fn_imps.hpp	/^swap(PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
swap	5/ext/pb_ds/detail/list_update_map_/constructor_destructor_fn_imps.hpp	/^swap(PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
swap	5/ext/pb_ds/detail/ov_tree_map_/constructors_destructor_fn_imps.hpp	/^swap(PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
swap	5/ext/pb_ds/detail/pairing_heap_/constructors_destructor_fn_imps.hpp	/^swap(PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
swap	5/ext/pb_ds/detail/pat_trie_/constructors_destructor_fn_imps.hpp	/^swap(PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
swap	5/ext/pb_ds/detail/rb_tree_map_/constructors_destructor_fn_imps.hpp	/^swap(PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
swap	5/ext/pb_ds/detail/rc_binomial_heap_/constructors_destructor_fn_imps.hpp	/^swap(PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
swap	5/ext/pb_ds/detail/rc_binomial_heap_/rc.hpp	/^    swap(rc<_Node, _Alloc>& other)$/;"	f	class:__gnu_pbds::detail::rc
swap	5/ext/pb_ds/detail/resize_policy/cc_hash_max_collision_check_resize_trigger_imp.hpp	/^swap(PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
swap	5/ext/pb_ds/detail/resize_policy/hash_exponential_size_policy_imp.hpp	/^swap(PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
swap	5/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_imp.hpp	/^swap(PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
swap	5/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_size_base.hpp	/^      swap(hash_load_check_resize_trigger_size_base& other) { }$/;"	f	class:__gnu_pbds::detail::hash_load_check_resize_trigger_size_base
swap	5/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_size_base.hpp	/^      swap(hash_load_check_resize_trigger_size_base& other)$/;"	f	class:__gnu_pbds::detail::hash_load_check_resize_trigger_size_base
swap	5/ext/pb_ds/detail/resize_policy/hash_prime_size_policy_imp.hpp	/^swap(PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
swap	5/ext/pb_ds/detail/resize_policy/hash_standard_resize_policy_imp.hpp	/^swap(PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
swap	5/ext/pb_ds/detail/splay_tree_/constructors_destructor_fn_imps.hpp	/^swap(PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
swap	5/ext/pb_ds/detail/thin_heap_/constructors_destructor_fn_imps.hpp	/^swap(PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
swap	5/ext/pb_ds/priority_queue.hpp	/^    swap(priority_queue& other)$/;"	f	class:__gnu_pbds::priority_queue
swap	cpp_src/basic_string.h	/^    swap(basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	namespace:std
swap	cpp_src/stl_algobase.h	/^    swap(_Tp& __a, _Tp& __b)$/;"	f	namespace:std
swap	cpp_src/stl_bvector.h	/^    swap(reference __x, reference __y)$/;"	f	class:std::vector
swap	cpp_src/stl_bvector.h	/^    swap(vector<bool, _Alloc>& __x)$/;"	f	class:std::vector
swap	cpp_src/stl_deque.h	/^      swap(deque& __x)$/;"	f	class:std::deque
swap	cpp_src/stl_deque.h	/^    swap(deque<_Tp,_Alloc>& __x, deque<_Tp,_Alloc>& __y)$/;"	f	namespace:std
swap	cpp_src/stl_list.h	/^      swap(list& __x)$/;"	f	class:std::list
swap	cpp_src/stl_list.h	/^    swap(list<_Tp, _Alloc>& __x, list<_Tp, _Alloc>& __y)$/;"	f	namespace:std
swap	cpp_src/stl_map.h	/^      swap(map& __x)$/;"	f	class:std::map
swap	cpp_src/stl_map.h	/^    swap(map<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	namespace:std
swap	cpp_src/stl_multimap.h	/^      swap(multimap& __x)$/;"	f	class:std::multimap
swap	cpp_src/stl_multimap.h	/^    swap(multimap<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	namespace:std
swap	cpp_src/stl_multiset.h	/^      swap(multiset<_Key, _Compare, _Alloc>& __x)$/;"	f	class:std::multiset
swap	cpp_src/stl_multiset.h	/^    swap(multiset<_Key, _Compare, _Alloc>& __x,$/;"	f	namespace:std
swap	cpp_src/stl_set.h	/^      swap(set<_Key,_Compare,_Alloc>& __x)$/;"	f	class:std::set
swap	cpp_src/stl_set.h	/^    swap(set<_Key, _Compare, _Alloc>& __x, set<_Key, _Compare, _Alloc>& __y)$/;"	f	namespace:std
swap	cpp_src/stl_tree.h	/^    swap(_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __t)$/;"	f	class:std::_Rb_tree
swap	cpp_src/stl_tree.h	/^    swap(_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,$/;"	f	namespace:std
swap	cpp_src/stl_vector.h	/^      swap(vector& __x)$/;"	f	class:std::vector
swap	cpp_src/stl_vector.h	/^    swap(vector<_Tp, _Alloc>& __x, vector<_Tp, _Alloc>& __y)$/;"	f	namespace:std
swap	opencv2/core/cuda.inl.hpp	/^void GpuMat::swap(GpuMat& b)$/;"	f	class:cv::cuda::GpuMat
swap	opencv2/core/cuda.inl.hpp	/^void HostMem::swap(HostMem& b)$/;"	f	class:cv::cuda::HostMem
swap	opencv2/core/cuda.inl.hpp	/^void swap(GpuMat& a, GpuMat& b)$/;"	f	namespace:cv::cuda
swap	opencv2/core/cuda.inl.hpp	/^void swap(HostMem& a, HostMem& b)$/;"	f	namespace:cv::cuda
swap	opencv2/core/cuda/utility.hpp	/^    template <typename T> void __device__ __host__ __forceinline__ swap(T& a, T& b)$/;"	f	namespace:cv::cuda::device
swap	opencv2/core/cvstd.hpp	/^    static inline void swap(cv::String& a, cv::String& b) { a.swap(b); }$/;"	f	namespace:std
swap	opencv2/core/cvstd.hpp	/^void String::swap(String& str)$/;"	f	class:cv::String
swap	opencv2/core/ptr.inl.hpp	/^void Ptr<T>::swap(Ptr<T>& o)$/;"	f	class:cv::Ptr
swap	opencv2/core/ptr.inl.hpp	/^void swap(Ptr<T>& ptr1, Ptr<T>& ptr2){$/;"	f	namespace:cv
swap	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^__host__ void GpuMat_<T>::swap(GpuMat_& mat)$/;"	f	class:cv::cudev::GpuMat_
swap	opencv2/flann/any.h	/^    any& swap(any& x)$/;"	f	struct:cvflann::any
swap_ranges	cpp_src/stl_algo.h	/^    swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,$/;"	f	namespace:std
swap_value_imp	5/ext/pb_ds/detail/binary_heap_/insert_fn_imps.hpp	/^swap_value_imp(entry_pointer p_e, const_reference r_new_val, false_type)$/;"	f	class:PB_DS_CLASS_C_DEC
swap_value_imp	5/ext/pb_ds/detail/binary_heap_/insert_fn_imps.hpp	/^swap_value_imp(entry_pointer p_e, value_type new_val, true_type)$/;"	f	class:PB_DS_CLASS_C_DEC
swap_with_parent	5/ext/pb_ds/detail/left_child_next_sibling_heap_/insert_fn_imps.hpp	/^swap_with_parent(node_pointer p_nd, node_pointer p_parent)$/;"	f	class:PB_DS_CLASS_C_DEC
symbol	cpp_src/locale_facets.h	/^    enum part { none, space, symbol, sign, value };$/;"	e	enum:std::money_base::part
sync	opencv2/core/cuda/block.hpp	/^        static __device__ __forceinline__ void sync()$/;"	f	struct:cv::cuda::device::Block
syncthreadsOr	opencv2/core/cuda/emulation.hpp	/^        static __device__ __forceinline__ int syncthreadsOr(int pred)$/;"	f	struct:cv::cuda::device::Emulation
synth_access_traits	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename traits_type::synth_access_traits synth_access_traits;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
synth_access_traits	5/ext/pb_ds/detail/pat_trie_/synth_access_traits.hpp	/^    struct synth_access_traits : public _ATraits$/;"	s	namespace:__gnu_pbds::detail
synth_access_traits	5/ext/pb_ds/detail/pat_trie_/synth_access_traits.hpp	/^    synth_access_traits()$/;"	f	class:__gnu_pbds::detail::PB_DS_SYNTH_E_ACCESS_TRAITS_C_DEC
synth_access_traits	5/ext/pb_ds/detail/pat_trie_/synth_access_traits.hpp	/^    synth_access_traits(const _ATraits& r_traits) $/;"	f	class:__gnu_pbds::detail::PB_DS_SYNTH_E_ACCESS_TRAITS_C_DEC
synth_access_traits	5/ext/pb_ds/detail/pat_trie_/traits.hpp	/^      typedef __gnu_pbds::detail::synth_access_traits<type_traits, false, access_traits>   synth_access_traits;$/;"	t	struct:__gnu_pbds::detail::trie_traits
synth_access_traits	5/ext/pb_ds/detail/pat_trie_/traits.hpp	/^      typedef __gnu_pbds::detail::synth_access_traits<type_traits, true, access_traits> synth_access_traits;$/;"	t	struct:__gnu_pbds::detail::trie_traits
sz	opencv2/core/mat.hpp	/^    Size sz;$/;"	m	class:cv::_InputArray
sz	opencv2/core/ocl.hpp	/^    size_t sz;$/;"	m	class:cv::ocl::KernelArg
sz	opencv2/core/utility.hpp	/^    size_t sz;$/;"	m	class:cv::AutoBuffer
t	opencv2/core/matx.hpp	/^Matx<_Tp, n, m> Matx<_Tp, m, n>::t() const$/;"	f	class:cv::Matx
t	opencv2/stitching/detail/camera.hpp	/^    Mat t; \/\/ Translation$/;"	m	struct:cv::detail::CameraParams
t	opencv2/stitching/detail/warpers.hpp	/^    float t[3];$/;"	m	struct:cv::detail::ProjectorBase
table	cpp_src/locale_facets.h	/^      table() const throw()$/;"	f	class:std::ctype
table_number_	opencv2/flann/lsh_index.h	/^    unsigned int table_number_;$/;"	m	class:cvflann::LshIndex
table_size	cpp_src/locale_facets.h	/^      static const size_t      table_size = 1 + static_cast<unsigned char>(-1);$/;"	m	class:std::ctype
tables_	opencv2/flann/lsh_index.h	/^    std::vector<lsh::LshTable<ElementType> > tables_;$/;"	m	class:cvflann::LshIndex
tag	opencv2/core/types_c.h	/^    int tag;$/;"	m	struct:CvFileNode
target_precision_	opencv2/flann/autotuned_index.h	/^    float target_precision_;$/;"	m	class:cvflann::AutotunedIndex
tbl	opencv2/cudev/ptr2d/lut.hpp	/^    TablePtr tbl;$/;"	m	struct:cv::cudev::LutPtr
tegra	opencv2/core/private.hpp	/^namespace tegra {$/;"	n
tell	opencv2/core/core_c.h	/^template<typename _Tp> inline size_t SeqIterator<_Tp>::tell() const$/;"	f	class:cv::SeqIterator
temp1	opencv2/video/tracking.hpp	/^    Mat temp1;$/;"	m	class:cv::KalmanFilter
temp1	opencv2/video/tracking_c.h	/^    CvMat* temp1;               \/* temporary matrices *\/$/;"	m	struct:CvKalman
temp2	opencv2/video/tracking.hpp	/^    Mat temp2;$/;"	m	class:cv::KalmanFilter
temp2	opencv2/video/tracking_c.h	/^    CvMat* temp2;$/;"	m	struct:CvKalman
temp3	opencv2/video/tracking.hpp	/^    Mat temp3;$/;"	m	class:cv::KalmanFilter
temp3	opencv2/video/tracking_c.h	/^    CvMat* temp3;$/;"	m	struct:CvKalman
temp4	opencv2/video/tracking.hpp	/^    Mat temp4;$/;"	m	class:cv::KalmanFilter
temp4	opencv2/video/tracking_c.h	/^    CvMat* temp4;$/;"	m	struct:CvKalman
temp5	opencv2/video/tracking.hpp	/^    Mat temp5;$/;"	m	class:cv::KalmanFilter
temp5	opencv2/video/tracking_c.h	/^    CvMat* temp5;$/;"	m	struct:CvKalman
tempCopiedUMat	opencv2/core/mat.inl.hpp	/^inline bool UMatData::tempCopiedUMat() const { return (flags & TEMP_COPIED_UMAT) == TEMP_COPIED_UMAT; }$/;"	f	class:cv::UMatData
tempUMat	opencv2/core/mat.inl.hpp	/^inline bool UMatData::tempUMat() const { return (flags & TEMP_UMAT) != 0; }$/;"	f	class:cv::UMatData
termCriteria	opencv2/stitching/detail/motion_estimators.hpp	/^    TermCriteria termCriteria() { return term_criteria_; }$/;"	f	class:cv::detail::BundleAdjusterBase
term_criteria_	opencv2/stitching/detail/motion_estimators.hpp	/^    TermCriteria term_criteria_;$/;"	m	class:cv::detail::BundleAdjusterBase
termcrit	opencv2/features2d.hpp	/^    TermCriteria termcrit;$/;"	m	class:cv::BOWKMeansTrainer
terminal_cost_	opencv2/stitching/detail/seam_finders.hpp	/^    float terminal_cost_;$/;"	m	class:cv::detail::GraphCutSeamFinderGpu
test	opencv2/flann/dynamic_bitset.h	/^    bool test(size_t index) const$/;"	f	class:cvflann::DynamicBitset
testDataset_	opencv2/flann/autotuned_index.h	/^    Matrix<ElementType> testDataset_;$/;"	m	class:cvflann::AutotunedIndex
test_index_checks	opencv2/flann/index_testing.h	/^float test_index_checks(NNIndex<Distance>& index, const Matrix<typename Distance::ElementType>& inputData,$/;"	f	namespace:cvflann
test_index_precision	opencv2/flann/index_testing.h	/^float test_index_precision(NNIndex<Distance>& index, const Matrix<typename Distance::ElementType>& inputData,$/;"	f	namespace:cvflann
test_index_precisions	opencv2/flann/index_testing.h	/^void test_index_precisions(NNIndex<Distance>& index, const Matrix<typename Distance::ElementType>& inputData,$/;"	f	namespace:cvflann
texCoord_	opencv2/core/opengl.hpp	/^    Buffer texCoord_;$/;"	m	class:cv::ogl::Arrays
texObj	opencv2/cudev/ptr2d/texture.hpp	/^    cudaTextureObject_t texObj;$/;"	m	struct:cv::cudev::TexturePtr
textureThreshold	opencv2/calib3d/calib3d_c.h	/^    int textureThreshold;  \/\/ the disparity is only computed for pixels$/;"	m	struct:CvStereoBMState
thickness	opencv2/highgui.hpp	/^    int         thickness; \/\/!< See cv::QtFontWeights$/;"	m	struct:cv::QtFont
thickness	opencv2/imgproc/imgproc_c.h	/^    int         thickness;    \/\/!< Qt: weight               \/** letters thickness *\/$/;"	m	struct:CvFont
thin_heap	5/ext/pb_ds/detail/thin_heap_/constructors_destructor_fn_imps.hpp	/^thin_heap() : m_p_max(0)$/;"	f	class:PB_DS_CLASS_C_DEC
thin_heap	5/ext/pb_ds/detail/thin_heap_/constructors_destructor_fn_imps.hpp	/^thin_heap(const Cmp_Fn& r_cmp_fn) $/;"	f	class:PB_DS_CLASS_C_DEC
thin_heap	5/ext/pb_ds/detail/thin_heap_/constructors_destructor_fn_imps.hpp	/^thin_heap(const PB_DS_CLASS_C_DEC& other) $/;"	f	class:PB_DS_CLASS_C_DEC
thin_heap	5/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp	/^    class thin_heap$/;"	c	namespace:__gnu_pbds::detail
thin_heap_tag	5/ext/pb_ds/tag_and_trait.hpp	/^  struct thin_heap_tag : public priority_queue_tag { };$/;"	s	namespace:__gnu_pbds
this_type	5/ext/pb_ds/detail/left_child_next_sibling_heap_/node.hpp	/^      typedef left_child_next_sibling_heap_node_<_Value, _Metadata, _Alloc> this_type;$/;"	t	struct:__gnu_pbds::detail::left_child_next_sibling_heap_node_
this_type	5/ext/pb_ds/detail/left_child_next_sibling_heap_/node.hpp	/^      typedef left_child_next_sibling_heap_node_<_Value, null_type, _Alloc> this_type;$/;"	t	struct:__gnu_pbds::detail::left_child_next_sibling_heap_node_
this_type	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	/^      typedef PB_DS_OV_TREE_CONST_NODE_ITERATOR_C_DEC this_type;$/;"	t	class:__gnu_pbds::detail::ov_tree_node_const_it_
this_type	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	/^      typedef PB_DS_OV_TREE_NODE_ITERATOR_C_DEC this_type;$/;"	t	class:__gnu_pbds::detail::ov_tree_node_it_
this_type_does_not_support_comparisons	opencv2/core/cuda.hpp	/^    void this_type_does_not_support_comparisons() const {}$/;"	f	class:cv::cuda::Stream
thousands_sep	cpp_src/locale_facets.h	/^      thousands_sep() const$/;"	f	class:std::moneypunct
thousands_sep	cpp_src/locale_facets.h	/^      thousands_sep() const$/;"	f	class:std::numpunct
threadLineId	opencv2/cudev/block/block.hpp	/^    __device__ __forceinline__ static uint threadLineId()$/;"	f	struct:cv::cudev::Block
thresh	opencv2/core/cuda/functional.hpp	/^        T thresh;$/;"	m	struct:cv::cuda::device::thresh_binary_func
thresh	opencv2/core/cuda/functional.hpp	/^        T thresh;$/;"	m	struct:cv::cuda::device::thresh_binary_inv_func
thresh	opencv2/core/cuda/functional.hpp	/^        T thresh;$/;"	m	struct:cv::cuda::device::thresh_to_zero_func
thresh	opencv2/core/cuda/functional.hpp	/^        T thresh;$/;"	m	struct:cv::cuda::device::thresh_to_zero_inv_func
thresh	opencv2/core/cuda/functional.hpp	/^        T thresh;$/;"	m	struct:cv::cuda::device::thresh_trunc_func
thresh	opencv2/core/types_c.h	/^    float   thresh[CV_MAX_DIM][2];  \/**< For uniform histograms.                      *\/$/;"	m	struct:CvHistogram
thresh	opencv2/cudev/functional/functional.hpp	/^    T thresh;$/;"	m	struct:cv::cudev::ThreshBinaryFunc
thresh	opencv2/cudev/functional/functional.hpp	/^    T thresh;$/;"	m	struct:cv::cudev::ThreshBinaryInvFunc
thresh	opencv2/cudev/functional/functional.hpp	/^    T thresh;$/;"	m	struct:cv::cudev::ThreshToZeroFunc
thresh	opencv2/cudev/functional/functional.hpp	/^    T thresh;$/;"	m	struct:cv::cudev::ThreshToZeroInvFunc
thresh	opencv2/cudev/functional/functional.hpp	/^    T thresh;$/;"	m	struct:cv::cudev::ThreshTruncFunc
thresh	opencv2/videostab/motion_core.hpp	/^    float thresh; \/\/!< max error to classify as inlier$/;"	m	struct:cv::videostab::RansacParams
thresh2	opencv2/core/types_c.h	/^    float** thresh2;                \/**< For non-uniform histograms.                  *\/$/;"	m	struct:CvHistogram
threshBinaryInv_	opencv2/cudev/expr/per_element_func.hpp	/^threshBinaryInv_(const SrcPtr& src, typename PtrTraits<SrcPtr>::value_type thresh, typename PtrTraits<SrcPtr>::value_type maxVal)$/;"	f	namespace:cv::cudev
threshBinary_	opencv2/cudev/expr/per_element_func.hpp	/^threshBinary_(const SrcPtr& src, typename PtrTraits<SrcPtr>::value_type thresh, typename PtrTraits<SrcPtr>::value_type maxVal)$/;"	f	namespace:cv::cudev
threshToZeroInv_	opencv2/cudev/expr/per_element_func.hpp	/^threshToZeroInv_(const SrcPtr& src, typename PtrTraits<SrcPtr>::value_type thresh)$/;"	f	namespace:cv::cudev
threshToZero_	opencv2/cudev/expr/per_element_func.hpp	/^threshToZero_(const SrcPtr& src, typename PtrTraits<SrcPtr>::value_type thresh)$/;"	f	namespace:cv::cudev
threshTrunc_	opencv2/cudev/expr/per_element_func.hpp	/^threshTrunc_(const SrcPtr& src, typename PtrTraits<SrcPtr>::value_type thresh)$/;"	f	namespace:cv::cudev
thresh_binary_func	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ thresh_binary_func() {}$/;"	f	struct:cv::cuda::device::thresh_binary_func
thresh_binary_func	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ thresh_binary_func(T thresh_, T maxVal_) : thresh(thresh_), maxVal(maxVal_) {}$/;"	f	struct:cv::cuda::device::thresh_binary_func
thresh_binary_func	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ thresh_binary_func(const thresh_binary_func& other)$/;"	f	struct:cv::cuda::device::thresh_binary_func
thresh_binary_func	opencv2/core/cuda/functional.hpp	/^    template <typename T> struct thresh_binary_func : unary_function<T, T>$/;"	s	namespace:cv::cuda::device
thresh_binary_func	opencv2/cudev/functional/functional.hpp	/^__host__ __device__ ThreshBinaryFunc<T> thresh_binary_func(T thresh, T maxVal)$/;"	f	namespace:cv::cudev
thresh_binary_inv_func	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ thresh_binary_inv_func() {}$/;"	f	struct:cv::cuda::device::thresh_binary_inv_func
thresh_binary_inv_func	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ thresh_binary_inv_func(T thresh_, T maxVal_) : thresh(thresh_), maxVal(maxVal_) {}$/;"	f	struct:cv::cuda::device::thresh_binary_inv_func
thresh_binary_inv_func	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ thresh_binary_inv_func(const thresh_binary_inv_func& other)$/;"	f	struct:cv::cuda::device::thresh_binary_inv_func
thresh_binary_inv_func	opencv2/core/cuda/functional.hpp	/^    template <typename T> struct thresh_binary_inv_func : unary_function<T, T>$/;"	s	namespace:cv::cuda::device
thresh_binary_inv_func	opencv2/cudev/functional/functional.hpp	/^__host__ __device__ ThreshBinaryInvFunc<T> thresh_binary_inv_func(T thresh, T maxVal)$/;"	f	namespace:cv::cudev
thresh_to_zero_func	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ thresh_to_zero_func() {}$/;"	f	struct:cv::cuda::device::thresh_to_zero_func
thresh_to_zero_func	opencv2/core/cuda/functional.hpp	/^        explicit __host__ __device__ __forceinline__ thresh_to_zero_func(T thresh_, T maxVal_ = 0) : thresh(thresh_) {(void)maxVal_;}$/;"	f	struct:cv::cuda::device::thresh_to_zero_func
thresh_to_zero_func	opencv2/core/cuda/functional.hpp	/^       __host__  __device__ __forceinline__ thresh_to_zero_func(const thresh_to_zero_func& other)$/;"	f	struct:cv::cuda::device::thresh_to_zero_func
thresh_to_zero_func	opencv2/core/cuda/functional.hpp	/^    template <typename T> struct thresh_to_zero_func : unary_function<T, T>$/;"	s	namespace:cv::cuda::device
thresh_to_zero_func	opencv2/cudev/functional/functional.hpp	/^__host__ __device__ ThreshToZeroFunc<T> thresh_to_zero_func(T thresh)$/;"	f	namespace:cv::cudev
thresh_to_zero_inv_func	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ thresh_to_zero_inv_func() {}$/;"	f	struct:cv::cuda::device::thresh_to_zero_inv_func
thresh_to_zero_inv_func	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ thresh_to_zero_inv_func(const thresh_to_zero_inv_func& other)$/;"	f	struct:cv::cuda::device::thresh_to_zero_inv_func
thresh_to_zero_inv_func	opencv2/core/cuda/functional.hpp	/^        explicit __host__ __device__ __forceinline__ thresh_to_zero_inv_func(T thresh_, T maxVal_ = 0) : thresh(thresh_) {(void)maxVal_;}$/;"	f	struct:cv::cuda::device::thresh_to_zero_inv_func
thresh_to_zero_inv_func	opencv2/core/cuda/functional.hpp	/^    template <typename T> struct thresh_to_zero_inv_func : unary_function<T, T>$/;"	s	namespace:cv::cuda::device
thresh_to_zero_inv_func	opencv2/cudev/functional/functional.hpp	/^__host__ __device__ ThreshToZeroInvFunc<T> thresh_to_zero_inv_func(T thresh)$/;"	f	namespace:cv::cudev
thresh_trunc_func	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ thresh_trunc_func() {}$/;"	f	struct:cv::cuda::device::thresh_trunc_func
thresh_trunc_func	opencv2/core/cuda/functional.hpp	/^        __host__ __device__ __forceinline__ thresh_trunc_func(const thresh_trunc_func& other)$/;"	f	struct:cv::cuda::device::thresh_trunc_func
thresh_trunc_func	opencv2/core/cuda/functional.hpp	/^        explicit __host__ __device__ __forceinline__ thresh_trunc_func(T thresh_, T maxVal_ = 0) : thresh(thresh_) {(void)maxVal_;}$/;"	f	struct:cv::cuda::device::thresh_trunc_func
thresh_trunc_func	opencv2/core/cuda/functional.hpp	/^    template <typename T> struct thresh_trunc_func : unary_function<T, T>$/;"	s	namespace:cv::cuda::device
thresh_trunc_func	opencv2/cudev/functional/functional.hpp	/^__host__ __device__ ThreshTruncFunc<T> thresh_trunc_func(T thresh)$/;"	f	namespace:cv::cudev
threshold	opencv2/objdetect/objdetect_c.h	/^    float threshold;$/;"	m	struct:CvHaarStageClassifier
threshold	opencv2/objdetect/objdetect_c.h	/^    float* threshold;$/;"	m	struct:CvHaarClassifier
thresholdStep	opencv2/features2d.hpp	/^      CV_PROP_RW float thresholdStep;$/;"	m	struct:cv::SimpleBlobDetector::Params
throw_no_cuda	opencv2/core/private.cuda.hpp	/^static inline void throw_no_cuda() { CV_Error(cv::Error::GpuNotSupported, "The library is compiled without CUDA support"); }$/;"	f
throw_with_nested	5/bits/nested_exception.h	/^    throw_with_nested(_Tp&& __t)$/;"	f	namespace:std
tie	cpp_src/basic_ios.h	/^      tie() const$/;"	f	class:std::basic_ios
tie	cpp_src/basic_ios.h	/^      tie(basic_ostream<_CharT, _Traits>* __tiestr)$/;"	f	class:std::basic_ios
tileInfo	opencv2/core/types_c.h	/^    struct _IplTileInfo *tileInfo;  \/**< "           " *\/$/;"	m	struct:_IplImage	typeref:struct:_IplImage::_IplTileInfo
tile_dim	opencv2/cudev/grid/transpose.hpp	/^        tile_dim    = 16,$/;"	e	enum:cv::cudev::DefaultTransposePolicy::__anon405
tilted	opencv2/objdetect/objdetect_c.h	/^    int tilted;$/;"	m	struct:CvHaarFeature
time	cpp_src/locale_classes.h	/^    static const category time		= 1L << 3;$/;"	m	class:std::locale
time_base	cpp_src/locale_facets.h	/^  class time_base$/;"	c	namespace:std
time_get	cpp_src/locale_facets.h	/^      time_get(size_t __refs = 0)$/;"	f	class:std::time_get
time_get	cpp_src/locale_facets.h	/^    class time_get : public locale::facet, public time_base$/;"	c	namespace:std
time_get_byname	cpp_src/locale_facets.h	/^      time_get_byname(const char*, size_t __refs = 0)$/;"	f	class:std::time_get_byname
time_get_byname	cpp_src/locale_facets.h	/^    class time_get_byname : public time_get<_CharT, _InIter>$/;"	c	namespace:std
time_put	cpp_src/locale_facets.h	/^      time_put(size_t __refs = 0)$/;"	f	class:std::time_put
time_put	cpp_src/locale_facets.h	/^    class time_put : public locale::facet$/;"	c	namespace:std
time_put_byname	cpp_src/locale_facets.h	/^      time_put_byname(const char*, size_t __refs = 0)$/;"	f	class:std::time_put_byname
time_put_byname	cpp_src/locale_facets.h	/^    class time_put_byname : public time_put<_CharT, _OutIter>$/;"	c	namespace:std
tl	opencv2/core/types.hpp	/^Point_<_Tp> Rect_<_Tp>::tl() const$/;"	f	class:cv::Rect_
tlsStruct	opencv2/core/private.hpp	/^    TLSData<InstrTLSStruct> tlsStruct;$/;"	m	class:cv::instr::InstrStruct
tls_	opencv2/stitching/detail/seam_finders.hpp	/^    std::vector<Point> tls_, brs_;$/;"	m	class:cv::detail::DpSeamFinder
to	opencv2/stitching/detail/util.hpp	/^    int from, to;$/;"	m	struct:cv::detail::GraphEdge
toCvType	opencv2/core/ippasync.hpp	/^    inline int toCvType(const int hppType)$/;"	f	namespace:cv::hpp
toHppType	opencv2/core/ippasync.hpp	/^    inline int toHppType(const int cvType)$/;"	f	namespace:cv::hpp
toLowerCase	opencv2/core/cvstd.hpp	/^String String::toLowerCase() const$/;"	f	class:cv::String
to_aux_except_max	5/ext/pb_ds/detail/thin_heap_/erase_fn_imps.hpp	/^to_aux_except_max()$/;"	f	class:PB_DS_CLASS_C_DEC
to_char_type	cpp_src/char_traits.h	/^      to_char_type(const int_type& __c)$/;"	f	struct:char_traits
to_int_type	cpp_src/char_traits.h	/^      to_int_type(const char_type& __c)$/;"	f	struct:char_traits
to_linked_list	5/ext/pb_ds/detail/left_child_next_sibling_heap_/erase_fn_imps.hpp	/^to_linked_list()$/;"	f	class:PB_DS_CLASS_C_DEC
to_ptr	5/ext/pb_ds/detail/binary_heap_/point_const_iterator.hpp	/^      to_ptr(false_type) const$/;"	f	class:__gnu_pbds::detail::binary_heap_point_const_iterator_
to_ptr	5/ext/pb_ds/detail/binary_heap_/point_const_iterator.hpp	/^      to_ptr(true_type) const$/;"	f	class:__gnu_pbds::detail::binary_heap_point_const_iterator_
tolower	cpp_src/locale_facets.h	/^      tolower(char_type __c) const$/;"	f	class:std::__ctype_abstract_base
tolower	cpp_src/locale_facets.h	/^      tolower(char_type __c) const$/;"	f	class:std::ctype
tolower	cpp_src/locale_facets.h	/^      tolower(char_type* __lo, const char_type* __hi) const$/;"	f	class:std::__ctype_abstract_base
tolower	cpp_src/locale_facets.h	/^      tolower(char_type* __lo, const char_type* __hi) const$/;"	f	class:std::ctype
tolower	cpp_src/locale_facets.h	/^    tolower(_CharT __c, const locale& __loc)$/;"	f	namespace:std
top	5/ext/pb_ds/detail/binary_heap_/find_fn_imps.hpp	/^top() const$/;"	f	class:PB_DS_CLASS_C_DEC
top	5/ext/pb_ds/detail/binomial_heap_base_/find_fn_imps.hpp	/^top() const$/;"	f	class:PB_DS_CLASS_C_DEC
top	5/ext/pb_ds/detail/pairing_heap_/find_fn_imps.hpp	/^top() const$/;"	f	class:PB_DS_CLASS_C_DEC
top	5/ext/pb_ds/detail/rc_binomial_heap_/rc.hpp	/^    top() const$/;"	f	class:__gnu_pbds::detail::rc
top	5/ext/pb_ds/detail/thin_heap_/find_fn_imps.hpp	/^top() const$/;"	f	class:PB_DS_CLASS_C_DEC
top	cpp_src/stl_queue.h	/^      top() const$/;"	f	class:std::priority_queue
top	cpp_src/stl_stack.h	/^      top() const$/;"	f	class:std::stack
top	cpp_src/stl_stack.h	/^      top()$/;"	f	class:std::stack
top	opencv2/core/types_c.h	/^    CvMemBlock* top;              \/**< Current memory block - top of the stack. *\/$/;"	m	struct:CvMemStorage
top	opencv2/core/types_c.h	/^    CvMemBlock* top;$/;"	m	struct:CvMemStoragePos
topLeft	opencv2/imgproc.hpp	/^    Point2f topLeft;$/;"	m	class:cv::Subdiv2D
top_imp	5/ext/pb_ds/detail/binary_heap_/find_fn_imps.hpp	/^top_imp(false_type) const$/;"	f	class:PB_DS_CLASS_C_DEC
top_imp	5/ext/pb_ds/detail/binary_heap_/find_fn_imps.hpp	/^top_imp(true_type) const$/;"	f	class:PB_DS_CLASS_C_DEC
total	opencv2/core/mat.inl.hpp	/^size_t Mat::total() const$/;"	f	class:cv::Mat
total	opencv2/core/mat.inl.hpp	/^size_t UMat::total() const$/;"	f	class:cv::UMat
totalCost	opencv2/flann/autotuned_index.h	/^        float totalCost;$/;"	m	struct:cvflann::AutotunedIndex::CostData
totalMemory	opencv2/core/cuda.inl.hpp	/^size_t DeviceInfo::totalMemory() const$/;"	f	class:cv::cuda::DeviceInfo
total_num_matches_	opencv2/stitching/detail/motion_estimators.hpp	/^    int total_num_matches_;$/;"	m	class:cv::detail::BundleAdjusterBase
toupper	cpp_src/locale_facets.h	/^      toupper(char_type *__lo, const char_type* __hi) const$/;"	f	class:std::__ctype_abstract_base
toupper	cpp_src/locale_facets.h	/^      toupper(char_type *__lo, const char_type* __hi) const$/;"	f	class:std::ctype
toupper	cpp_src/locale_facets.h	/^      toupper(char_type __c) const$/;"	f	class:std::__ctype_abstract_base
toupper	cpp_src/locale_facets.h	/^      toupper(char_type __c) const$/;"	f	class:std::ctype
toupper	cpp_src/locale_facets.h	/^    toupper(_CharT __c, const locale& __loc)$/;"	f	namespace:std
trace	5/ext/pb_ds/detail/binary_heap_/resize_policy.hpp	/^    trace() const$/;"	f	class:__gnu_pbds::detail::resize_policy
trace	5/ext/pb_ds/detail/binary_heap_/trace_fn_imps.hpp	/^trace() const$/;"	f	class:PB_DS_CLASS_C_DEC
trace	5/ext/pb_ds/detail/cc_hash_table_map_/trace_fn_imps.hpp	/^trace() const$/;"	f	class:PB_DS_CLASS_C_DEC
trace	5/ext/pb_ds/detail/gp_hash_table_map_/trace_fn_imps.hpp	/^trace() const$/;"	f	class:PB_DS_CLASS_C_DEC
trace	5/ext/pb_ds/detail/left_child_next_sibling_heap_/trace_fn_imps.hpp	/^trace() const$/;"	f	class:PB_DS_CLASS_C_DEC
trace	5/ext/pb_ds/detail/list_update_map_/trace_fn_imps.hpp	/^trace() const$/;"	f	class:PB_DS_CLASS_C_DEC
trace	5/ext/pb_ds/detail/pat_trie_/trace_fn_imps.hpp	/^trace() const$/;"	f	class:PB_DS_CLASS_C_DEC
trace	5/ext/pb_ds/detail/rb_tree_map_/node.hpp	/^      trace() const$/;"	f	struct:__gnu_pbds::detail::rb_tree_node_
trace	5/ext/pb_ds/detail/rc_binomial_heap_/rc.hpp	/^    trace() const$/;"	f	class:__gnu_pbds::detail::rc
trace	5/ext/pb_ds/detail/rc_binomial_heap_/trace_fn_imps.hpp	/^trace() const$/;"	f	class:PB_DS_CLASS_C_DEC
trace	5/ext/pb_ds/detail/splay_tree_/node.hpp	/^      trace() const$/;"	f	struct:__gnu_pbds::detail::splay_tree_node_
trace	5/ext/pb_ds/detail/thin_heap_/trace_fn_imps.hpp	/^trace() const$/;"	f	class:PB_DS_CLASS_C_DEC
trace	5/ext/pb_ds/detail/tree_trace_base.hpp	/^    trace() const$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
trace	opencv2/core/matx.hpp	/^double trace(const Matx<_Tp, m, n>& a)$/;"	f	namespace:cv
trace_base	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      typedef PB_DS_TREE_TRACE_BASE_C_DEC 		trace_base;$/;"	t	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
trace_entry	5/ext/pb_ds/detail/binary_heap_/trace_fn_imps.hpp	/^trace_entry(const entry& r_e, false_type) const$/;"	f	class:PB_DS_CLASS_C_DEC
trace_entry	5/ext/pb_ds/detail/binary_heap_/trace_fn_imps.hpp	/^trace_entry(const entry& r_e, true_type) const$/;"	f	class:PB_DS_CLASS_C_DEC
trace_it_metadata	5/ext/pb_ds/detail/tree_trace_base.hpp	/^    trace_it_metadata(Node_CItr nd_it, type_to_type<Metadata_>)$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
trace_it_metadata	5/ext/pb_ds/detail/tree_trace_base.hpp	/^    trace_it_metadata(Node_CItr, type_to_type<null_type>)$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
trace_list	5/ext/pb_ds/detail/cc_hash_table_map_/trace_fn_imps.hpp	/^trace_list(const_entry_pointer p_l) const$/;"	f	class:PB_DS_CLASS_C_DEC
trace_node	5/ext/pb_ds/detail/left_child_next_sibling_heap_/trace_fn_imps.hpp	/^trace_node(node_const_pointer p_nd, size_type level)$/;"	f	class:PB_DS_CLASS_C_DEC
trace_node	5/ext/pb_ds/detail/pat_trie_/trace_fn_imps.hpp	/^trace_node(node_const_pointer p_nd, size_type level)$/;"	f	class:PB_DS_CLASS_C_DEC
trace_node	5/ext/pb_ds/detail/tree_trace_base.hpp	/^    trace_node(node_const_iterator nd_it, size_type level) const$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
trace_node_metadata	5/ext/pb_ds/detail/left_child_next_sibling_heap_/trace_fn_imps.hpp	/^trace_node_metadata(node_const_pointer p_nd, type_to_type<Metadata_>)$/;"	f	class:PB_DS_CLASS_C_DEC
trace_node_metadata	5/ext/pb_ds/detail/left_child_next_sibling_heap_/trace_fn_imps.hpp	/^trace_node_metadata(node_const_pointer, type_to_type<null_type>)$/;"	f	class:PB_DS_CLASS_C_DEC
trace_node_metadata	5/ext/pb_ds/detail/pat_trie_/trace_fn_imps.hpp	/^trace_node_metadata(node_const_pointer p_nd, type_to_type<Metadata_>)$/;"	f	class:PB_DS_CLASS_C_DEC
trace_node_metadata	5/ext/pb_ds/detail/pat_trie_/trace_fn_imps.hpp	/^trace_node_metadata(node_const_pointer, type_to_type<null_type>)$/;"	f	class:PB_DS_CLASS_C_DEC
trackedObjects	opencv2/objdetect/detection_based_tracker.hpp	/^        std::vector<TrackedObject> trackedObjects;$/;"	m	class:cv::DetectionBasedTracker
train	opencv2/ml.hpp	/^    template<typename _Tp> static Ptr<_Tp> train(const Ptr<TrainData>& data, int flags=0)$/;"	f	class:cv::ml::StatModel
trainDescCollection	opencv2/features2d.hpp	/^    std::vector<Mat> trainDescCollection;$/;"	m	class:cv::DescriptorMatcher
trainIdx	opencv2/core/types.hpp	/^    CV_PROP_RW int trainIdx; \/\/ train descriptor index$/;"	m	class:cv::DMatch
traits_base	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	/^      typedef PB_DS_BIN_TREE_TRAITS_BASE 	       	traits_base;$/;"	t	class:__gnu_pbds::detail::PB_DS_BIN_TREE_NAME
traits_base	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef PB_DS_CC_HASH_TRAITS_BASE	       	traits_base;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
traits_base	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef PB_DS_GP_HASH_TRAITS_BASE	       	traits_base;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
traits_base	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      typedef PB_DS_LU_TRAITS_BASE 	       	traits_base;$/;"	t	class:__gnu_pbds::detail::PB_DS_LU_NAME
traits_base	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      typedef PB_DS_OV_TREE_TRAITS_BASE	       		traits_base;$/;"	t	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
traits_base	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef PB_DS_PAT_TRIE_TRAITS_BASE 	       	traits_base;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
traits_type	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	/^      typedef Node_And_It_Traits 			traits_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_BIN_TREE_NAME
traits_type	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      typedef Node_And_It_Traits			traits_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
traits_type	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef Node_And_It_Traits			traits_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
traits_type	cpp_src/basic_ios.h	/^      typedef _Traits                                traits_type;$/;"	t	class:std::basic_ios
traits_type	cpp_src/basic_string.h	/^      typedef _Traits					    traits_type;$/;"	t	class:std::basic_string
traits_type	cpp_src/stream_iterator.h	/^      typedef _Traits                        traits_type;$/;"	t	class:std::istream_iterator
traits_type	cpp_src/stream_iterator.h	/^      typedef _Traits                        traits_type;$/;"	t	class:std::ostream_iterator
traits_type	cpp_src/streambuf_iterator.h	/^      typedef _Traits					traits_type;$/;"	t	class:std::istreambuf_iterator
traits_type	cpp_src/streambuf_iterator.h	/^      typedef _Traits                          traits_type;$/;"	t	class:std::ostreambuf_iterator
transform	cpp_src/locale_facets.h	/^      transform(const _CharT* __lo, const _CharT* __hi) const$/;"	f	class:std::collate
transform	cpp_src/stl_algo.h	/^    transform(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std
transform	cpp_src/stl_algo.h	/^    transform(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	namespace:std
transform	opencv2/core/cuda/transform.hpp	/^    static inline void transform(PtrStepSz<T1> src1, PtrStepSz<T2> src2, PtrStepSz<D> dst, BinOp op, const Mask& mask, cudaStream_t stream)$/;"	f	namespace:cv::cuda::device
transform	opencv2/core/cuda/transform.hpp	/^    static inline void transform(PtrStepSz<T> src, PtrStepSz<D> dst, UnOp op, const Mask& mask, cudaStream_t stream)$/;"	f	namespace:cv::cuda::device
transform	opencv2/core/cuda/warp.hpp	/^        static __device__ __forceinline__ OutIt transform(InIt beg, InIt end, OutIt out, UnOp op)$/;"	f	struct:cv::cuda::device::Warp
transform	opencv2/core/cuda/warp.hpp	/^        static __device__ __forceinline__ OutIt transform(InIt1 beg1, InIt1 end1, InIt2 beg2, OutIt out, BinOp op)$/;"	f	struct:cv::cuda::device::Warp
transform	opencv2/cudev/grid/detail/transform.hpp	/^        __device__ __forceinline__ static void transform(const SrcVal&, DstPtrTuple&, const OpTuple&, int, int)$/;"	f	struct:cv::cudev::grid_transform_detail::Unroll
transform	opencv2/cudev/grid/detail/transform.hpp	/^        __device__ static void transform(const SrcVal& srcVal, DstPtrTuple& dst, const OpTuple& op, int y, int x)$/;"	f	struct:cv::cudev::grid_transform_detail::Unroll
transformPtr	opencv2/cudev/ptr2d/transform.hpp	/^transformPtr(const Src1Ptr& src1, const Src2Ptr& src2, const Op& op)$/;"	f	namespace:cv::cudev
transformPtr	opencv2/cudev/ptr2d/transform.hpp	/^transformPtr(const SrcPtr& src, const Op& op)$/;"	f	namespace:cv::cudev
transformSimple	opencv2/core/cuda/detail/transform_detail.hpp	/^        __global__ static void transformSimple(const PtrStepSz<T> src, PtrStep<D> dst, const Mask mask, const UnOp op)$/;"	f	namespace:cv::cuda::device::transform_detail
transformSimple	opencv2/core/cuda/detail/transform_detail.hpp	/^        static __global__ void transformSimple(const PtrStepSz<T1> src1, const PtrStep<T2> src2, PtrStep<D> dst,$/;"	f	namespace:cv::cuda::device::transform_detail
transformSimple	opencv2/cudev/grid/detail/transform.hpp	/^    __global__ void transformSimple(const SrcPtr src, GlobPtr<DstType> dst, const UnOp op, const MaskPtr mask, const int rows, const int cols)$/;"	f	namespace:cv::cudev::grid_transform_detail
transformSimple	opencv2/cudev/grid/detail/transform.hpp	/^    __global__ void transformSimple(const SrcPtr1 src1, const SrcPtr2 src2, GlobPtr<DstType> dst, const BinOp op, const MaskPtr mask, const int rows, const int cols)$/;"	f	namespace:cv::cudev::grid_transform_detail
transformSmart	opencv2/core/cuda/detail/transform_detail.hpp	/^        static __global__ void transformSmart(const PtrStepSz<T1> src1_, const PtrStep<T2> src2_, PtrStep<D> dst_,$/;"	f	namespace:cv::cuda::device::transform_detail
transformSmart	opencv2/core/cuda/detail/transform_detail.hpp	/^        static __global__ void transformSmart(const PtrStepSz<T> src_, PtrStep<D> dst_, const Mask mask, const UnOp op)$/;"	f	namespace:cv::cuda::device::transform_detail
transformSmart	opencv2/cudev/grid/detail/transform.hpp	/^    __global__ void transformSmart(const GlobPtr<SrcType1> src1_, const GlobPtr<SrcType2> src2_, GlobPtr<DstType> dst_, const BinOp op, const MaskPtr mask, const int rows, const int cols)$/;"	f	namespace:cv::cudev::grid_transform_detail
transformSmart	opencv2/cudev/grid/detail/transform.hpp	/^    __global__ void transformSmart(const GlobPtr<SrcType> src_, GlobPtr<DstType> dst_, const UnOp op, const MaskPtr mask, const int rows, const int cols)$/;"	f	namespace:cv::cudev::grid_transform_detail
transform_binary	opencv2/cudev/grid/detail/transform.hpp	/^    __host__ void transform_binary(const GlobPtr<SrcType1>& src1, const GlobPtr<SrcType2>& src2, const GlobPtr<DstType>& dst, const BinOp& op, const MaskPtr& mask, int rows, int cols, cudaStream_t stream)$/;"	f	namespace:cv::cudev::grid_transform_detail
transform_binary	opencv2/cudev/grid/detail/transform.hpp	/^    __host__ void transform_binary(const SrcPtr1& src1, const SrcPtr2& src2, const GlobPtr<DstType>& dst, const BinOp& op, const MaskPtr& mask, int rows, int cols, cudaStream_t stream)$/;"	f	namespace:cv::cudev::grid_transform_detail
transform_detail	opencv2/core/cuda/detail/transform_detail.hpp	/^    namespace transform_detail$/;"	n	namespace:cv::cuda::device
transform_minimal_n	5/parallel/settings.h	/^    _SequenceIndex              transform_minimal_n;$/;"	m	struct:__gnu_parallel::_Settings
transform_tuple	opencv2/cudev/grid/detail/transform.hpp	/^    __global__ void transform_tuple(const SrcPtr src, DstPtrTuple dst, const OpTuple op, const MaskPtr mask, const int rows, const int cols)$/;"	f	namespace:cv::cudev::grid_transform_detail
transform_tuple	opencv2/cudev/grid/detail/transform.hpp	/^    __host__ void transform_tuple(const SrcPtrTuple& src, const DstPtrTuple& dst, const OpTuple& op, const MaskPtr& mask, int rows, int cols, cudaStream_t stream)$/;"	f	namespace:cv::cudev::grid_transform_detail
transform_unary	opencv2/cudev/grid/detail/transform.hpp	/^    __host__ void transform_unary(const GlobPtr<SrcType>& src, const GlobPtr<DstType>& dst, const UnOp& op, const MaskPtr& mask, int rows, int cols, cudaStream_t stream)$/;"	f	namespace:cv::cudev::grid_transform_detail
transform_unary	opencv2/cudev/grid/detail/transform.hpp	/^    __host__ void transform_unary(const SrcPtr& src, const GlobPtr<DstType>& dst, const UnOp& op, const MaskPtr& mask, int rows, int cols, cudaStream_t stream)$/;"	f	namespace:cv::cudev::grid_transform_detail
transformedFrame1_	opencv2/videostab/inpainting.hpp	/^    Mat frame1_, transformedFrame1_;$/;"	m	class:cv::videostab::MotionInpainter
transformedGrayFrame1_	opencv2/videostab/inpainting.hpp	/^    Mat_<uchar> grayFrame_, transformedGrayFrame1_;$/;"	m	class:cv::videostab::MotionInpainter
transformedMask1_	opencv2/videostab/inpainting.hpp	/^    Mat_<uchar> mask1_, transformedMask1_;$/;"	m	class:cv::videostab::MotionInpainter
transfrom	opencv2/core/cuda/block.hpp	/^        static __device__ __forceinline__ void transfrom(InIt beg, InIt end, OutIt out, UnOp op)$/;"	f	struct:cv::cuda::device::Block
transfrom	opencv2/core/cuda/block.hpp	/^        static __device__ __forceinline__ void transfrom(InIt1 beg1, InIt1 end1, InIt2 beg2, OutIt out, BinOp op)$/;"	f	struct:cv::cuda::device::Block
transitionMatrix	opencv2/video/tracking.hpp	/^    CV_PROP_RW Mat transitionMatrix;   \/\/!< state transition matrix (A)$/;"	m	class:cv::KalmanFilter
transition_matrix	opencv2/video/tracking_c.h	/^    CvMat* transition_matrix;   \/* state transition matrix (A) *\/$/;"	m	struct:CvKalman
translate	opencv2/core/affine.hpp	/^cv::Affine3<T> cv::Affine3<T>::translate(const Vec3& t) const$/;"	f	class:cv::Affine3
translation	opencv2/core/affine.hpp	/^typename cv::Affine3<T>::Vec3 cv::Affine3<T>::translation() const$/;"	f	class:cv::Affine3
translation	opencv2/core/affine.hpp	/^void cv::Affine3<T>::translation(const Vec3& t)$/;"	f	class:cv::Affine3
transpose	opencv2/cudev/grid/detail/transpose.hpp	/^    __global__ void transpose(const SrcPtr src, GlobPtr<DstType> dst, const int rows, const int cols)$/;"	f	namespace:cv::cudev::transpose_detail
transpose	opencv2/cudev/grid/detail/transpose.hpp	/^    __host__ void transpose(const SrcPtr& src, const GlobPtr<DstType>& dst, int rows, int cols, cudaStream_t stream)$/;"	f	namespace:cv::cudev::transpose_detail
transpose_	opencv2/cudev/expr/warping.hpp	/^transpose_(const SrcPtr& src)$/;"	f	namespace:cv::cudev
transpose_detail	opencv2/cudev/grid/detail/transpose.hpp	/^namespace transpose_detail$/;"	n	namespace:cv::cudev
tree	5/ext/pb_ds/assoc_container.hpp	/^    tree() { }$/;"	f	class:__gnu_pbds::tree
tree	5/ext/pb_ds/assoc_container.hpp	/^    tree(It first, It last)$/;"	f	class:__gnu_pbds::tree
tree	5/ext/pb_ds/assoc_container.hpp	/^    tree(It first, It last, const cmp_fn& c)$/;"	f	class:__gnu_pbds::tree
tree	5/ext/pb_ds/assoc_container.hpp	/^    tree(const cmp_fn& c)$/;"	f	class:__gnu_pbds::tree
tree	5/ext/pb_ds/assoc_container.hpp	/^    tree(const tree& other)$/;"	f	class:__gnu_pbds::tree
tree	5/ext/pb_ds/assoc_container.hpp	/^  class tree : public PB_DS_TREE_BASE$/;"	c	namespace:__gnu_pbds
tree_iterator	opencv2/core/core_c.h	/^CVAPI(void*) cvNextTreeNode( CvTreeNodeIterator* tree_iterator );$/;"	v
tree_iterator	opencv2/core/core_c.h	/^CVAPI(void*) cvPrevTreeNode( CvTreeNodeIterator* tree_iterator );$/;"	v
tree_metadata_helper	5/ext/pb_ds/detail/tree_policy/node_metadata_selector.hpp	/^      struct tree_metadata_helper<Node_Update, false>$/;"	s	namespace:__gnu_pbds::detail
tree_metadata_helper	5/ext/pb_ds/detail/tree_policy/node_metadata_selector.hpp	/^      struct tree_metadata_helper<Node_Update, true>$/;"	s	namespace:__gnu_pbds::detail
tree_node_metadata_dispatch	5/ext/pb_ds/detail/tree_policy/node_metadata_selector.hpp	/^    struct tree_node_metadata_dispatch$/;"	s	namespace:__gnu_pbds::detail
tree_order_statistics_node_update	5/ext/pb_ds/tree_policy.hpp	/^  class tree_order_statistics_node_update : private PB_DS_BRANCH_POLICY_BASE$/;"	c	namespace:__gnu_pbds
tree_roots_	opencv2/flann/kdtree_index.h	/^    NodePtr* tree_roots_;$/;"	m	class:cvflann::KDTreeIndex
tree_tag	5/ext/pb_ds/tag_and_trait.hpp	/^  struct tree_tag : public basic_branch_tag { };$/;"	s	namespace:__gnu_pbds
tree_trace_base	5/ext/pb_ds/detail/tree_trace_base.hpp	/^    class tree_trace_base : private PB_DS_TRACE_BASE$/;"	c	namespace:__gnu_pbds::detail
tree_traits	5/ext/pb_ds/detail/ov_tree_map_/traits.hpp	/^    struct tree_traits<$/;"	s	namespace:__gnu_pbds::detail
tree_traits	5/ext/pb_ds/detail/rb_tree_map_/traits.hpp	/^    struct tree_traits<Key, Mapped, Cmp_Fn, Node_Update, rb_tree_tag,_Alloc> $/;"	s	namespace:__gnu_pbds::detail
tree_traits	5/ext/pb_ds/detail/rb_tree_map_/traits.hpp	/^    struct tree_traits<Key, null_type, Cmp_Fn, Node_Update, rb_tree_tag,_Alloc> $/;"	s	namespace:__gnu_pbds::detail
tree_traits	5/ext/pb_ds/detail/splay_tree_/traits.hpp	/^    struct tree_traits<Key, Mapped, Cmp_Fn, Node_Update, splay_tree_tag, _Alloc> $/;"	s	namespace:__gnu_pbds::detail
tree_traits	5/ext/pb_ds/detail/splay_tree_/traits.hpp	/^    struct tree_traits<Key, null_type, Cmp_Fn, Node_Update,$/;"	s	namespace:__gnu_pbds::detail
trees_	opencv2/flann/hierarchical_clustering_index.h	/^    int trees_;$/;"	m	class:cvflann::HierarchicalClusteringIndex
trees_	opencv2/flann/kdtree_index.h	/^    int trees_;$/;"	m	class:cvflann::KDTreeIndex
trie	5/ext/pb_ds/assoc_container.hpp	/^    trie() { }$/;"	f	class:__gnu_pbds::trie
trie	5/ext/pb_ds/assoc_container.hpp	/^    trie(It first, It last)$/;"	f	class:__gnu_pbds::trie
trie	5/ext/pb_ds/assoc_container.hpp	/^    trie(It first, It last, const access_traits& t)$/;"	f	class:__gnu_pbds::trie
trie	5/ext/pb_ds/assoc_container.hpp	/^    trie(const access_traits& t)$/;"	f	class:__gnu_pbds::trie
trie	5/ext/pb_ds/assoc_container.hpp	/^    trie(const trie& other)$/;"	f	class:__gnu_pbds::trie
trie	5/ext/pb_ds/assoc_container.hpp	/^  class trie : public PB_DS_TRIE_BASE$/;"	c	namespace:__gnu_pbds
trie_metadata_helper	5/ext/pb_ds/detail/trie_policy/node_metadata_selector.hpp	/^      struct trie_metadata_helper<Node_Update, false>$/;"	s	namespace:__gnu_pbds::detail
trie_metadata_helper	5/ext/pb_ds/detail/trie_policy/node_metadata_selector.hpp	/^      struct trie_metadata_helper<Node_Update, true>$/;"	s	namespace:__gnu_pbds::detail
trie_node_metadata_dispatch	5/ext/pb_ds/detail/trie_policy/node_metadata_selector.hpp	/^    struct trie_node_metadata_dispatch$/;"	s	namespace:__gnu_pbds::detail
trie_order_statistics_node_update	5/ext/pb_ds/trie_policy.hpp	/^  class trie_order_statistics_node_update : private PB_DS_TRIE_POLICY_BASE$/;"	c	namespace:__gnu_pbds
trie_policy_base	5/ext/pb_ds/detail/trie_policy/trie_policy_base.hpp	/^    class trie_policy_base$/;"	c	namespace:__gnu_pbds::detail
trie_prefix_search_node_update	5/ext/pb_ds/trie_policy.hpp	/^  class trie_prefix_search_node_update : private PB_DS_TRIE_POLICY_BASE$/;"	c	namespace:__gnu_pbds
trie_string_access_traits	5/ext/pb_ds/trie_policy.hpp	/^  struct trie_string_access_traits$/;"	s	namespace:__gnu_pbds
trie_tag	5/ext/pb_ds/tag_and_trait.hpp	/^  struct trie_tag : public basic_branch_tag { };$/;"	s	namespace:__gnu_pbds
trie_traits	5/ext/pb_ds/detail/pat_trie_/traits.hpp	/^    struct trie_traits<Key, Mapped, _ATraits, Node_Update, pat_trie_tag, _Alloc>$/;"	s	namespace:__gnu_pbds::detail
trie_traits	5/ext/pb_ds/detail/pat_trie_/traits.hpp	/^    struct trie_traits<Key, null_type, _ATraits, Node_Update, pat_trie_tag, _Alloc>$/;"	s	namespace:__gnu_pbds::detail
trigger	5/ext/pb_ds/detail/standard_policies.hpp	/^      typedef hash_load_check_resize_trigger<false, size_type> 	trigger;$/;"	t	struct:__gnu_pbds::detail::default_resize_policy
trigger_policy	5/ext/pb_ds/hash_policy.hpp	/^    typedef Trigger_Policy 	trigger_policy;$/;"	t	class:__gnu_pbds::hash_standard_resize_policy
trigger_policy_base	5/ext/pb_ds/hash_policy.hpp	/^    typedef Trigger_Policy trigger_policy_base;$/;"	t	class:__gnu_pbds::hash_standard_resize_policy
trimRatio	opencv2/videostab/motion_stabilizing.hpp	/^    float trimRatio() const { return trimRatio_; }$/;"	f	class:cv::videostab::LpMotionStabilizer
trimRatio	opencv2/videostab/stabilizer.hpp	/^    float trimRatio() const { return trimRatio_; }$/;"	f	class:cv::videostab::StabilizerBase
trimRatio_	opencv2/videostab/motion_stabilizing.hpp	/^    float trimRatio_;$/;"	m	class:cv::videostab::LpMotionStabilizer
trimRatio_	opencv2/videostab/stabilizer.hpp	/^    float trimRatio_;$/;"	m	class:cv::videostab::StabilizerBase
trivial_iterator_difference_type	5/ext/pb_ds/tag_and_trait.hpp	/^  typedef void trivial_iterator_difference_type;$/;"	t	namespace:__gnu_pbds
trivial_iterator_tag	5/ext/pb_ds/tag_and_trait.hpp	/^  struct trivial_iterator_tag$/;"	s	namespace:__gnu_pbds
true_type	5/ext/pb_ds/detail/type_utils.hpp	/^    typedef std::tr1::integral_constant<int, 1> true_type;$/;"	t	namespace:__gnu_pbds::detail
truename	cpp_src/locale_facets.h	/^      truename() const$/;"	f	class:std::numpunct
trunc	cpp_src/ios_base.h	/^    static const openmode trunc =	_S_trunc;$/;"	m	class:std::ios_base
try	cpp_src/exception_defines.h	43;"	d
trySmallerWindows	opencv2/calib3d/calib3d_c.h	/^    int trySmallerWindows; \/\/ if 1, the results may be more accurate,$/;"	m	struct:CvStereoBMState
tuple_detail	opencv2/cudev/util/detail/tuple.hpp	/^namespace tuple_detail$/;"	n	namespace:cv::cudev
type	5/ext/pb_ds/detail/binary_heap_/entry_cmp.hpp	/^	  type() { }$/;"	f	struct:__gnu_pbds::detail::entry_cmp::type
type	5/ext/pb_ds/detail/binary_heap_/entry_cmp.hpp	/^	  type(const Cmp_Fn& other) : Cmp_Fn(other) { }$/;"	f	struct:__gnu_pbds::detail::entry_cmp::type
type	5/ext/pb_ds/detail/binary_heap_/entry_cmp.hpp	/^	struct type : public Cmp_Fn$/;"	s	struct:__gnu_pbds::detail::entry_cmp
type	5/ext/pb_ds/detail/binary_heap_/entry_cmp.hpp	/^	typedef Cmp_Fn 						type;$/;"	t	struct:__gnu_pbds::detail::entry_cmp
type	5/ext/pb_ds/detail/binary_heap_/entry_pred.hpp	/^	  type() { }$/;"	f	struct:__gnu_pbds::detail::entry_pred::type
type	5/ext/pb_ds/detail/binary_heap_/entry_pred.hpp	/^	  type(const Pred& other) : Pred(other) { }$/;"	f	struct:__gnu_pbds::detail::entry_pred::type
type	5/ext/pb_ds/detail/binary_heap_/entry_pred.hpp	/^	struct type : public Pred$/;"	s	struct:__gnu_pbds::detail::entry_pred
type	5/ext/pb_ds/detail/binary_heap_/entry_pred.hpp	/^	typedef Pred 						type;$/;"	t	struct:__gnu_pbds::detail::entry_pred
type	5/ext/pb_ds/detail/container_base_dispatch.hpp	/^				 at3t::value, at4t, at2t>    	type;$/;"	t	struct:__gnu_pbds::detail::container_base_dispatch
type	5/ext/pb_ds/detail/container_base_dispatch.hpp	/^			at3t::value, at4t, at2t> 	       	type;$/;"	t	struct:__gnu_pbds::detail::container_base_dispatch
type	5/ext/pb_ds/detail/container_base_dispatch.hpp	/^			at3t::value, at4t, at5t, at2t>		type;$/;"	t	struct:__gnu_pbds::detail::container_base_dispatch
type	5/ext/pb_ds/detail/container_base_dispatch.hpp	/^			at3t::value, at4t, at5t, at2t> 		type;$/;"	t	struct:__gnu_pbds::detail::container_base_dispatch
type	5/ext/pb_ds/detail/container_base_dispatch.hpp	/^      typedef lu_map<Key, Mapped, at0t, _Alloc, at1t>	type;$/;"	t	struct:__gnu_pbds::detail::container_base_dispatch
type	5/ext/pb_ds/detail/container_base_dispatch.hpp	/^      typedef lu_set<Key, null_type, at0t, _Alloc, at1t> type;$/;"	t	struct:__gnu_pbds::detail::container_base_dispatch
type	5/ext/pb_ds/detail/container_base_dispatch.hpp	/^      typedef ov_tree_map<Key, Mapped, at0t, at1t, _Alloc> 	type;$/;"	t	struct:__gnu_pbds::detail::container_base_dispatch
type	5/ext/pb_ds/detail/container_base_dispatch.hpp	/^      typedef ov_tree_set<Key, null_type, at0t, at1t, _Alloc> type;$/;"	t	struct:__gnu_pbds::detail::container_base_dispatch
type	5/ext/pb_ds/detail/container_base_dispatch.hpp	/^      typedef pat_trie_map<Key, Mapped, at1t, _Alloc> 		type;$/;"	t	struct:__gnu_pbds::detail::container_base_dispatch
type	5/ext/pb_ds/detail/container_base_dispatch.hpp	/^      typedef pat_trie_set<Key, null_type, at1t, _Alloc> type;$/;"	t	struct:__gnu_pbds::detail::container_base_dispatch
type	5/ext/pb_ds/detail/container_base_dispatch.hpp	/^      typedef rb_tree_map<Key, Mapped, at0t, at1t, _Alloc> 	type;$/;"	t	struct:__gnu_pbds::detail::container_base_dispatch
type	5/ext/pb_ds/detail/container_base_dispatch.hpp	/^      typedef rb_tree_set<Key, null_type, at0t, at1t, _Alloc> type;$/;"	t	struct:__gnu_pbds::detail::container_base_dispatch
type	5/ext/pb_ds/detail/container_base_dispatch.hpp	/^      typedef splay_tree_map<Key, Mapped, at0t, at1t, _Alloc> 	type;$/;"	t	struct:__gnu_pbds::detail::container_base_dispatch
type	5/ext/pb_ds/detail/container_base_dispatch.hpp	/^      typedef splay_tree_set<Key, null_type, at0t, at1t, _Alloc> type;$/;"	t	struct:__gnu_pbds::detail::container_base_dispatch
type	5/ext/pb_ds/detail/priority_queue_base_dispatch.hpp	/^	typedef binary_heap<_VTp, Cmp_Fn, _Alloc> 		type;$/;"	t	struct:__gnu_pbds::detail::container_base_dispatch
type	5/ext/pb_ds/detail/priority_queue_base_dispatch.hpp	/^	typedef binomial_heap<_VTp, Cmp_Fn, _Alloc> 		type;$/;"	t	struct:__gnu_pbds::detail::container_base_dispatch
type	5/ext/pb_ds/detail/priority_queue_base_dispatch.hpp	/^	typedef pairing_heap<_VTp, Cmp_Fn, _Alloc> 		type;$/;"	t	struct:__gnu_pbds::detail::container_base_dispatch
type	5/ext/pb_ds/detail/priority_queue_base_dispatch.hpp	/^	typedef rc_binomial_heap<_VTp, Cmp_Fn, _Alloc>	       	type;$/;"	t	struct:__gnu_pbds::detail::container_base_dispatch
type	5/ext/pb_ds/detail/priority_queue_base_dispatch.hpp	/^	typedef thin_heap<_VTp, Cmp_Fn, _Alloc> 		type;$/;"	t	struct:__gnu_pbds::detail::container_base_dispatch
type	5/ext/pb_ds/detail/standard_policies.hpp	/^					  false, size_type> 	type;$/;"	t	struct:__gnu_pbds::detail::default_resize_policy
type	5/ext/pb_ds/detail/standard_policies.hpp	/^	typedef trie_string_access_traits<string_type> 		type;$/;"	t	struct:__gnu_pbds::detail::default_trie_access_traits
type	5/ext/pb_ds/detail/standard_policies.hpp	/^      typedef direct_mask_range_hashing<> 			type;$/;"	t	struct:__gnu_pbds::detail::default_comb_hash_fn
type	5/ext/pb_ds/detail/standard_policies.hpp	/^      typedef lu_move_to_front_policy<> 			type;$/;"	t	struct:__gnu_pbds::detail::default_update_policy
type	5/ext/pb_ds/detail/standard_policies.hpp	/^      typedef std::equal_to<Key> 				type;$/;"	t	struct:__gnu_pbds::detail::default_eq_fn
type	5/ext/pb_ds/detail/standard_policies.hpp	/^      typedef std::tr1::hash<Key> 				type;$/;"	t	struct:__gnu_pbds::detail::default_hash_fn
type	5/ext/pb_ds/detail/standard_policies.hpp	/^      typedef typename cond_type::__type 			type;$/;"	t	struct:__gnu_pbds::detail::default_probe_fn
type	5/ext/pb_ds/detail/tree_policy/node_metadata_selector.hpp	/^	typedef null_type 				type;$/;"	t	struct:__gnu_pbds::detail::tree_metadata_helper
type	5/ext/pb_ds/detail/tree_policy/node_metadata_selector.hpp	/^	typedef typename Node_Update::metadata_type 	type;$/;"	t	struct:__gnu_pbds::detail::tree_metadata_helper
type	5/ext/pb_ds/detail/tree_policy/node_metadata_selector.hpp	/^      typedef typename tree_metadata_helper<__node_u, null_update>::type type;$/;"	t	struct:__gnu_pbds::detail::tree_node_metadata_dispatch
type	5/ext/pb_ds/detail/trie_policy/node_metadata_selector.hpp	/^	typedef null_type 				type;$/;"	t	struct:__gnu_pbds::detail::trie_metadata_helper
type	5/ext/pb_ds/detail/trie_policy/node_metadata_selector.hpp	/^	typedef typename Node_Update::metadata_type 	type;$/;"	t	struct:__gnu_pbds::detail::trie_metadata_helper
type	5/ext/pb_ds/detail/trie_policy/node_metadata_selector.hpp	/^      typedef typename trie_metadata_helper<__node_u, null_update>::type type;$/;"	t	struct:__gnu_pbds::detail::trie_node_metadata_dispatch
type	5/ext/pb_ds/detail/type_utils.hpp	/^      typedef Type type;$/;"	t	struct:__gnu_pbds::detail::type_to_type
type	5/ext/pb_ds/detail/types_traits.hpp	/^	typedef type_base<Key, Mapped, _Alloc, Store_Hash> type;$/;"	t	struct:__gnu_pbds::detail::type_dispatch
type	5/sun/reflect/annotation/AnnotationInvocationHandler.h	/^  ::java::lang::Class * __attribute__((aligned(__alignof__( ::java::lang::Object)))) type;$/;"	m	class:sun::reflect::annotation::AnnotationInvocationHandler
type	opencv2/core.hpp	/^    enum { type = Param::ALGORITHM };$/;"	e	enum:cv::ParamType::__anon351
type	opencv2/core.hpp	/^    enum { type = Param::BOOLEAN };$/;"	e	enum:cv::ParamType::__anon345
type	opencv2/core.hpp	/^    enum { type = Param::FLOAT };$/;"	e	enum:cv::ParamType::__anon352
type	opencv2/core.hpp	/^    enum { type = Param::INT };$/;"	e	enum:cv::ParamType::__anon346
type	opencv2/core.hpp	/^    enum { type = Param::MAT };$/;"	e	enum:cv::ParamType::__anon349
type	opencv2/core.hpp	/^    enum { type = Param::MAT_VECTOR };$/;"	e	enum:cv::ParamType::__anon350
type	opencv2/core.hpp	/^    enum { type = Param::REAL };$/;"	e	enum:cv::ParamType::__anon347
type	opencv2/core.hpp	/^    enum { type = Param::STRING };$/;"	e	enum:cv::ParamType::__anon348
type	opencv2/core.hpp	/^    enum { type = Param::UCHAR };$/;"	e	enum:cv::ParamType::__anon355
type	opencv2/core.hpp	/^    enum { type = Param::UINT64 };$/;"	e	enum:cv::ParamType::__anon354
type	opencv2/core.hpp	/^    enum { type = Param::UNSIGNED_INT };$/;"	e	enum:cv::ParamType::__anon353
type	opencv2/core/affine.hpp	/^               type         = CV_MAKETYPE(depth, channels)$/;"	e	enum:cv::DataType::__anon316
type	opencv2/core/core_c.h	/^template<typename _Tp> inline int Seq<_Tp>::type() const$/;"	f	class:cv::Seq
type	opencv2/core/cuda.inl.hpp	/^int GpuMat::type() const$/;"	f	class:cv::cuda::GpuMat
type	opencv2/core/cuda.inl.hpp	/^int HostMem::type() const$/;"	f	class:cv::cuda::HostMem
type	opencv2/core/cuda/detail/reduce.hpp	/^            typedef T type;$/;"	t	struct:cv::cuda::device::reduce_detail::GetType
type	opencv2/core/cuda/detail/reduce.hpp	/^            typedef T1 type;$/;"	t	struct:cv::cuda::device::reduce_detail::StaticIf
type	opencv2/core/cuda/detail/reduce.hpp	/^            typedef T2 type;$/;"	t	struct:cv::cuda::device::reduce_detail::StaticIf
type	opencv2/core/cuda/detail/reduce_key_val.hpp	/^            typedef T type;$/;"	t	struct:cv::cuda::device::reduce_key_val_detail::GetType
type	opencv2/core/cuda/detail/reduce_key_val.hpp	/^            typedef T1 type;$/;"	t	struct:cv::cuda::device::reduce_key_val_detail::StaticIf
type	opencv2/core/cuda/detail/reduce_key_val.hpp	/^            typedef T2 type;$/;"	t	struct:cv::cuda::device::reduce_key_val_detail::StaticIf
type	opencv2/core/cuda/detail/type_traits_detail.hpp	/^            typedef U type;$/;"	t	struct:cv::cuda::device::type_traits_detail::PointerTraits
type	opencv2/core/cuda/detail/type_traits_detail.hpp	/^            typedef U type;$/;"	t	struct:cv::cuda::device::type_traits_detail::ReferenceTraits
type	opencv2/core/cuda/detail/type_traits_detail.hpp	/^            typedef U type;$/;"	t	struct:cv::cuda::device::type_traits_detail::UnConst
type	opencv2/core/cuda/detail/type_traits_detail.hpp	/^            typedef U type;$/;"	t	struct:cv::cuda::device::type_traits_detail::UnVolatile
type	opencv2/core/cuda/detail/type_traits_detail.hpp	/^            typedef U& type;$/;"	t	struct:cv::cuda::device::type_traits_detail::UnConst
type	opencv2/core/cuda/detail/type_traits_detail.hpp	/^            typedef U& type;$/;"	t	struct:cv::cuda::device::type_traits_detail::UnVolatile
type	opencv2/core/cuda/detail/type_traits_detail.hpp	/^            typedef void type;$/;"	t	struct:cv::cuda::device::type_traits_detail::PointerTraits
type	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct AddParameterType<void> { typedef void type; };$/;"	t	struct:cv::cuda::device::type_traits_detail::AddParameterType
type	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <bool, typename T1, typename T2> struct Select { typedef T1 type; };$/;"	t	struct:cv::cuda::device::type_traits_detail::Select
type	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <class U> struct AddParameterType { typedef const U& type; };$/;"	t	struct:cv::cuda::device::type_traits_detail::AddParameterType
type	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <class U> struct AddParameterType<U&> { typedef U& type; };$/;"	t	struct:cv::cuda::device::type_traits_detail::AddParameterType
type	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <typename T1, typename T2> struct Select<false, T1, T2> { typedef T2 type; };$/;"	t	struct:cv::cuda::device::type_traits_detail::Select
type	opencv2/core/cvstd.hpp	/^struct RefOrVoid { typedef T& type; };$/;"	t	struct:cv::detail::RefOrVoid
type	opencv2/core/cvstd.hpp	/^struct RefOrVoid<const void>{ typedef const void type; };$/;"	t	struct:cv::detail::RefOrVoid
type	opencv2/core/cvstd.hpp	/^struct RefOrVoid<const volatile void>{ typedef const volatile void type; };$/;"	t	struct:cv::detail::RefOrVoid
type	opencv2/core/cvstd.hpp	/^struct RefOrVoid<void>{ typedef void type; };$/;"	t	struct:cv::detail::RefOrVoid
type	opencv2/core/cvstd.hpp	/^struct RefOrVoid<volatile void>{ typedef volatile void type; };$/;"	t	struct:cv::detail::RefOrVoid
type	opencv2/core/cvstd.inl.hpp	/^           type         = CV_MAKETYPE(depth, channels) };$/;"	e	enum:cv::DataType::__anon301
type	opencv2/core/mat.inl.hpp	/^int Mat::type() const$/;"	f	class:cv::Mat
type	opencv2/core/mat.inl.hpp	/^int Mat_<_Tp>::type() const$/;"	f	class:cv::Mat_
type	opencv2/core/mat.inl.hpp	/^int SparseMat::type() const$/;"	f	class:cv::SparseMat
type	opencv2/core/mat.inl.hpp	/^int SparseMat_<_Tp>::type() const$/;"	f	class:cv::SparseMat_
type	opencv2/core/mat.inl.hpp	/^int UMat::type() const$/;"	f	class:cv::UMat
type	opencv2/core/matx.hpp	/^           type         = CV_MAKETYPE(depth, channels)$/;"	e	enum:cv::DataType::__anon121
type	opencv2/core/matx.hpp	/^           type         = CV_MAKETYPE(depth, channels)$/;"	e	enum:cv::DataType::__anon123
type	opencv2/core/matx.hpp	/^           type     = CV_MAKETYPE(depth, channels)$/;"	e	enum:cv::Vec::__anon122
type	opencv2/core/matx.hpp	/^           type     = CV_MAKETYPE(depth, channels),$/;"	e	enum:cv::Matx::__anon120
type	opencv2/core/opengl.hpp	/^int cv::ogl::Buffer::type() const$/;"	f	class:cv::ogl::Buffer
type	opencv2/core/traits.hpp	/^           type         = CV_MAKETYPE(depth, channels)$/;"	e	enum:cv::DataType::__anon283
type	opencv2/core/traits.hpp	/^           type         = CV_MAKETYPE(depth, channels)$/;"	e	enum:cv::DataType::__anon284
type	opencv2/core/traits.hpp	/^           type         = CV_MAKETYPE(depth, channels)$/;"	e	enum:cv::DataType::__anon285
type	opencv2/core/traits.hpp	/^           type         = CV_MAKETYPE(depth, channels)$/;"	e	enum:cv::DataType::__anon286
type	opencv2/core/traits.hpp	/^           type         = CV_MAKETYPE(depth, channels)$/;"	e	enum:cv::DataType::__anon287
type	opencv2/core/traits.hpp	/^           type         = CV_MAKETYPE(depth, channels)$/;"	e	enum:cv::DataType::__anon288
type	opencv2/core/traits.hpp	/^           type         = CV_MAKETYPE(depth, channels)$/;"	e	enum:cv::DataType::__anon289
type	opencv2/core/traits.hpp	/^           type         = CV_MAKETYPE(depth, channels)$/;"	e	enum:cv::DataType::__anon290
type	opencv2/core/traits.hpp	/^           type         = CV_MAKETYPE(depth, channels)$/;"	e	enum:cv::DataType::__anon291
type	opencv2/core/traits.hpp	/^           type = CV_MAKETYPE(depth, channels)$/;"	e	enum:cv::DataType::__anon282
type	opencv2/core/types.hpp	/^           type         = CV_MAKETYPE(depth, channels) };$/;"	e	enum:cv::DataType::__anon302
type	opencv2/core/types.hpp	/^           type         = CV_MAKETYPE(depth, channels)$/;"	e	enum:cv::DataType::__anon303
type	opencv2/core/types.hpp	/^           type         = CV_MAKETYPE(depth, channels)$/;"	e	enum:cv::DataType::__anon304
type	opencv2/core/types.hpp	/^           type         = CV_MAKETYPE(depth, channels)$/;"	e	enum:cv::DataType::__anon305
type	opencv2/core/types.hpp	/^           type         = CV_MAKETYPE(depth, channels)$/;"	e	enum:cv::DataType::__anon306
type	opencv2/core/types.hpp	/^           type         = CV_MAKETYPE(depth, channels)$/;"	e	enum:cv::DataType::__anon307
type	opencv2/core/types.hpp	/^           type         = CV_MAKETYPE(depth, channels)$/;"	e	enum:cv::DataType::__anon308
type	opencv2/core/types.hpp	/^           type         = CV_MAKETYPE(depth, channels)$/;"	e	enum:cv::DataType::__anon309
type	opencv2/core/types.hpp	/^           type         = CV_MAKETYPE(depth, channels)$/;"	e	enum:cv::DataType::__anon310
type	opencv2/core/types.hpp	/^           type         = CV_MAKETYPE(depth, channels)$/;"	e	enum:cv::DataType::__anon311
type	opencv2/core/types.hpp	/^           type         = CV_MAKETYPE(depth, channels)$/;"	e	enum:cv::DataType::__anon312
type	opencv2/core/types.hpp	/^    int type; \/\/!< the type of termination criteria: COUNT, EPS or COUNT + EPS$/;"	m	class:cv::TermCriteria
type	opencv2/core/types_c.h	/^    int     type;$/;"	m	struct:CvHistogram
type	opencv2/core/types_c.h	/^    int    type;  \/**< may be combination of$/;"	m	struct:CvTermCriteria
type	opencv2/core/types_c.h	/^    int type;$/;"	m	struct:CvMat
type	opencv2/core/types_c.h	/^    int type;$/;"	m	struct:CvMatND
type	opencv2/core/types_c.h	/^    int type;$/;"	m	struct:CvSparseMat
type	opencv2/cudev/block/detail/reduce.hpp	/^        typedef T type;$/;"	t	struct:cv::cudev::block_reduce_detail::GetType
type	opencv2/cudev/block/detail/reduce_key_val.hpp	/^        typedef T type;$/;"	t	struct:cv::cudev::block_reduce_key_val_detail::GetType
type	opencv2/cudev/functional/functional.hpp	/^        >::type type;$/;"	t	struct:cv::cudev::functional_detail::FloatType
type	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^__host__ int GpuMat_<T>::type() const$/;"	f	class:cv::cudev::GpuMat_
type	opencv2/cudev/util/detail/tuple.hpp	/^        > type;$/;"	t	struct:cv::cudev::tuple_detail::ConvertTuple
type	opencv2/cudev/util/detail/type_traits.hpp	/^        typedef ElseType type;$/;"	t	struct:cv::cudev::type_traits_detail::SelectIf
type	opencv2/cudev/util/detail/type_traits.hpp	/^        typedef ThenType type;$/;"	t	struct:cv::cudev::type_traits_detail::SelectIf
type	opencv2/cudev/util/detail/type_traits.hpp	/^        typedef U type;$/;"	t	struct:cv::cudev::type_traits_detail::PointerTraits
type	opencv2/cudev/util/detail/type_traits.hpp	/^        typedef U type;$/;"	t	struct:cv::cudev::type_traits_detail::ReferenceTraits
type	opencv2/cudev/util/detail/type_traits.hpp	/^        typedef U type;$/;"	t	struct:cv::cudev::type_traits_detail::UnConst
type	opencv2/cudev/util/detail/type_traits.hpp	/^        typedef U type;$/;"	t	struct:cv::cudev::type_traits_detail::UnVolatile
type	opencv2/cudev/util/detail/type_traits.hpp	/^        typedef U& type;$/;"	t	struct:cv::cudev::type_traits_detail::UnConst
type	opencv2/cudev/util/detail/type_traits.hpp	/^        typedef U& type;$/;"	t	struct:cv::cudev::type_traits_detail::UnVolatile
type	opencv2/cudev/util/detail/type_traits.hpp	/^        typedef double type;$/;"	t	struct:cv::cudev::type_traits_detail::LargerDepth
type	opencv2/cudev/util/detail/type_traits.hpp	/^        typedef float type;$/;"	t	struct:cv::cudev::type_traits_detail::LargerDepth
type	opencv2/cudev/util/detail/type_traits.hpp	/^        typedef typename SelectIf<sizeof(A) >= sizeof(B), A, B>::type type;$/;"	t	struct:cv::cudev::type_traits_detail::LargerDepth
type	opencv2/cudev/util/detail/type_traits.hpp	/^        typedef void type;$/;"	t	struct:cv::cudev::type_traits_detail::PointerTraits
type	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct AddParameterType<void> { typedef void type; };$/;"	t	struct:cv::cudev::type_traits_detail::AddParameterType
type	opencv2/cudev/util/detail/type_traits.hpp	/^    template <class U> struct AddParameterType { typedef const U& type; };$/;"	t	struct:cv::cudev::type_traits_detail::AddParameterType
type	opencv2/cudev/util/detail/type_traits.hpp	/^    template <class U> struct AddParameterType<U&> { typedef U& type; };$/;"	t	struct:cv::cudev::type_traits_detail::AddParameterType
type	opencv2/cudev/util/tuple.hpp	/^    typedef typename tuple_detail::ConvertTuple<Tuple, tuple_size<Tuple>::value, CvtOp>::type type;$/;"	t	struct:cv::cudev::ConvertTuple
type	opencv2/cudev/util/type_traits.hpp	/^    >::type type;$/;"	t	struct:cv::cudev::LargerType
type	opencv2/cudev/util/type_traits.hpp	/^    typedef ElseType type;$/;"	t	struct:cv::cudev::SelectIf
type	opencv2/cudev/util/type_traits.hpp	/^    typedef ThenType type;$/;"	t	struct:cv::cudev::SelectIf
type	opencv2/cudev/util/type_traits.hpp	/^template <typename T> struct DisableIf<false, T> { typedef T type; };$/;"	t	struct:cv::cudev::DisableIf
type	opencv2/cudev/util/type_traits.hpp	/^template <typename T> struct EnableIf<true, T> { typedef T type; };$/;"	t	struct:cv::cudev::EnableIf
type	opencv2/cudev/util/vec_traits.hpp	/^           type         = CV_MAKE_TYPE(depth, channels)$/;"	e	enum:cv::DataType::__anon475
type	opencv2/cudev/util/vec_traits.hpp	/^           type         = CV_MAKE_TYPE(depth, channels)$/;"	e	enum:cv::DataType::__anon476
type	opencv2/cudev/util/vec_traits.hpp	/^           type         = CV_MAKE_TYPE(depth, channels)$/;"	e	enum:cv::DataType::__anon477
type	opencv2/cudev/util/vec_traits.hpp	/^           type         = CV_MAKE_TYPE(depth, channels)$/;"	e	enum:cv::DataType::__anon478
type	opencv2/cudev/util/vec_traits.hpp	/^           type         = CV_MAKE_TYPE(depth, channels)$/;"	e	enum:cv::DataType::__anon479
type	opencv2/cudev/util/vec_traits.hpp	/^template<> struct MakeVec<bool, 1> { typedef uchar  type; };$/;"	t	struct:cv::cudev::MakeVec
type	opencv2/cudev/util/vec_traits.hpp	/^template<> struct MakeVec<bool, 2> { typedef uchar2 type; };$/;"	t	struct:cv::cudev::MakeVec
type	opencv2/cudev/util/vec_traits.hpp	/^template<> struct MakeVec<bool, 3> { typedef uchar3 type; };$/;"	t	struct:cv::cudev::MakeVec
type	opencv2/cudev/util/vec_traits.hpp	/^template<> struct MakeVec<bool, 4> { typedef uchar4 type; };$/;"	t	struct:cv::cudev::MakeVec
type	opencv2/cudev/util/vec_traits.hpp	/^template<> struct MakeVec<schar, 1> { typedef schar type; };$/;"	t	struct:cv::cudev::MakeVec
type	opencv2/cudev/util/vec_traits.hpp	/^template<> struct MakeVec<schar, 2> { typedef char2 type; };$/;"	t	struct:cv::cudev::MakeVec
type	opencv2/cudev/util/vec_traits.hpp	/^template<> struct MakeVec<schar, 3> { typedef char3 type; };$/;"	t	struct:cv::cudev::MakeVec
type	opencv2/cudev/util/vec_traits.hpp	/^template<> struct MakeVec<schar, 4> { typedef char4 type; };$/;"	t	struct:cv::cudev::MakeVec
type	opencv2/cudev/warp/detail/reduce.hpp	/^        typedef T type;$/;"	t	struct:cv::cudev::warp_reduce_detail::GetType
type	opencv2/cudev/warp/detail/reduce_key_val.hpp	/^        typedef T type;$/;"	t	struct:cv::cudev::warp_reduce_key_val_detail::GetType
type	opencv2/flann.hpp	/^template <> struct CvType<char> { static int type() { return CV_8S; } };$/;"	f	struct:cv::flann::CvType
type	opencv2/flann.hpp	/^template <> struct CvType<double> { static int type() { return CV_64F; } };$/;"	f	struct:cv::flann::CvType
type	opencv2/flann.hpp	/^template <> struct CvType<float> { static int type() { return CV_32F; } };$/;"	f	struct:cv::flann::CvType
type	opencv2/flann.hpp	/^template <> struct CvType<int> { static int type() { return CV_32S; } };$/;"	f	struct:cv::flann::CvType
type	opencv2/flann.hpp	/^template <> struct CvType<short> { static int type() { return CV_16S; } };$/;"	f	struct:cv::flann::CvType
type	opencv2/flann.hpp	/^template <> struct CvType<unsigned char> { static int type() { return CV_8U; } };$/;"	f	struct:cv::flann::CvType
type	opencv2/flann.hpp	/^template <> struct CvType<unsigned short> { static int type() { return CV_16U; } };$/;"	f	struct:cv::flann::CvType
type	opencv2/flann/any.h	/^    const std::type_info& type() const$/;"	f	struct:cvflann::any
type	opencv2/flann/any.h	/^    typedef big_any_policy<T> type;$/;"	t	struct:cvflann::anyimpl::choose_policy
type	opencv2/flann/any.h	/^    typedef small_any_policy<T*> type;$/;"	t	struct:cvflann::anyimpl::choose_policy
type	opencv2/flann/any.h	/^    typedef void type;$/;"	t	struct:cvflann::anyimpl::choose_policy
type	opencv2/flann/any.h	/^    virtual const std::type_info& type() { return typeid(T); }$/;"	f	struct:cvflann::anyimpl::typed_base_any_policy
type	opencv2/flann/matrix.h	/^    flann_datatype_t type;$/;"	m	class:cvflann::UntypedMatrix
type	opencv2/flann/matrix.h	/^    typedef T type;$/;"	t	class:cvflann::Matrix
type	opencv2/flann/saving.h	/^struct Datatype<char> { static flann_datatype_t type() { return FLANN_INT8; } };$/;"	f	struct:cvflann::Datatype
type	opencv2/flann/saving.h	/^struct Datatype<double> { static flann_datatype_t type() { return FLANN_FLOAT64; } };$/;"	f	struct:cvflann::Datatype
type	opencv2/flann/saving.h	/^struct Datatype<float> { static flann_datatype_t type() { return FLANN_FLOAT32; } };$/;"	f	struct:cvflann::Datatype
type	opencv2/flann/saving.h	/^struct Datatype<int> { static flann_datatype_t type() { return FLANN_INT32; } };$/;"	f	struct:cvflann::Datatype
type	opencv2/flann/saving.h	/^struct Datatype<short> { static flann_datatype_t type() { return FLANN_INT16; } };$/;"	f	struct:cvflann::Datatype
type	opencv2/flann/saving.h	/^struct Datatype<unsigned char> { static flann_datatype_t type() { return FLANN_UINT8; } };$/;"	f	struct:cvflann::Datatype
type	opencv2/flann/saving.h	/^struct Datatype<unsigned int> { static flann_datatype_t type() { return FLANN_UINT32; } };$/;"	f	struct:cvflann::Datatype
type	opencv2/flann/saving.h	/^struct Datatype<unsigned short> { static flann_datatype_t type() { return FLANN_UINT16; } };$/;"	f	struct:cvflann::Datatype
type	opencv2/imgproc.hpp	/^        int type;$/;"	m	struct:cv::Subdiv2D::Vertex
type_	opencv2/core/opengl.hpp	/^    int type_;$/;"	m	class:cv::ogl::Buffer
type_base	5/ext/pb_ds/detail/types_traits.hpp	/^      struct type_base<Key, Mapped, _Alloc, false>$/;"	s	namespace:__gnu_pbds::detail
type_base	5/ext/pb_ds/detail/types_traits.hpp	/^      struct type_base<Key, Mapped, _Alloc, true>$/;"	s	namespace:__gnu_pbds::detail
type_base	5/ext/pb_ds/detail/types_traits.hpp	/^      struct type_base<Key, null_type, _Alloc, false>$/;"	s	namespace:__gnu_pbds::detail
type_base	5/ext/pb_ds/detail/types_traits.hpp	/^      struct type_base<Key, null_type, _Alloc, true>$/;"	s	namespace:__gnu_pbds::detail
type_dispatch	5/ext/pb_ds/detail/types_traits.hpp	/^      struct type_dispatch$/;"	s	namespace:__gnu_pbds::detail
type_name	opencv2/core/types_c.h	/^    const char* type_name; \/**< type name, written to file storage *\/$/;"	m	struct:CvTypeInfo
type_to_type	5/ext/pb_ds/detail/type_utils.hpp	/^    struct type_to_type$/;"	s	namespace:__gnu_pbds::detail
type_traits	5/ext/pb_ds/detail/bin_search_tree_/traits.hpp	/^      typedef types_traits<Key, Mapped, _Alloc, false> type_traits;$/;"	t	struct:__gnu_pbds::detail::bin_search_tree_traits
type_traits	5/ext/pb_ds/detail/bin_search_tree_/traits.hpp	/^      typedef types_traits<Key, null_type, _Alloc, false> type_traits;$/;"	t	struct:__gnu_pbds::detail::bin_search_tree_traits
type_traits	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	typedef typename _ATraits::type_traits			type_traits;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Node_base
type_traits	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename Node::type_traits		type_traits;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_CIter
type_traits	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename base_type::type_traits			type_traits;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Head
type_traits	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename base_type::type_traits			type_traits;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Inode
type_traits	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename base_type::type_traits			type_traits;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Leaf
type_traits	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename base_type::type_traits		type_traits;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_Iter
type_traits	5/ext/pb_ds/detail/pat_trie_/synth_access_traits.hpp	/^      typedef Type_Traits 				type_traits;$/;"	t	struct:__gnu_pbds::detail::synth_access_traits
type_traits	5/ext/pb_ds/detail/pat_trie_/traits.hpp	/^      typedef types_traits<Key, Mapped, _Alloc, false> 		type_traits;$/;"	t	struct:__gnu_pbds::detail::trie_traits
type_traits	5/ext/pb_ds/detail/pat_trie_/traits.hpp	/^      typedef types_traits<Key, null_type, _Alloc, false> 	type_traits;$/;"	t	struct:__gnu_pbds::detail::trie_traits
type_traits_detail	opencv2/core/cuda/detail/type_traits_detail.hpp	/^    namespace type_traits_detail$/;"	n	namespace:cv::cuda::device
type_traits_detail	opencv2/cudev/util/detail/type_traits.hpp	/^namespace type_traits_detail$/;"	n	namespace:cv::cudev
typed_base_any_policy	opencv2/flann/any.h	/^struct typed_base_any_policy : base_any_policy$/;"	s	namespace:cvflann::anyimpl
types_traits	5/ext/pb_ds/detail/types_traits.hpp	/^      struct types_traits$/;"	s	namespace:__gnu_pbds::detail
u	opencv2/core.hpp	/^    Mat u, w, vt;$/;"	m	class:cv::SVD
u	opencv2/core/cvdef.h	/^    uint64 u;$/;"	m	union:Cv64suf
u	opencv2/core/cvdef.h	/^    unsigned u;$/;"	m	union:Cv32suf
u	opencv2/core/mat.hpp	/^    UMatData* u;$/;"	m	class:cv::Mat
u	opencv2/core/mat.hpp	/^    UMatData* u;$/;"	m	class:cv::UMat
u	opencv2/core/mat.hpp	/^    UMatData* u;$/;"	m	struct:cv::UMatDataAutoLock
u_reg	opencv2/core/hal/intrin.hpp	/^    typedef v_float32x4 u_reg;$/;"	t	struct:cv::V_RegTrait128
u_reg	opencv2/core/hal/intrin.hpp	/^    typedef v_float64x2 u_reg;$/;"	t	struct:cv::V_RegTrait128
u_reg	opencv2/core/hal/intrin.hpp	/^    typedef v_uint16x8 u_reg;$/;"	t	struct:cv::V_RegTrait128
u_reg	opencv2/core/hal/intrin.hpp	/^    typedef v_uint32x4 u_reg;$/;"	t	struct:cv::V_RegTrait128
u_reg	opencv2/core/hal/intrin.hpp	/^    typedef v_uint8x16 u_reg;$/;"	t	struct:cv::V_RegTrait128
uchar	opencv2/core/hal/interface.h	/^   typedef unsigned char uchar;$/;"	t
uint	opencv2/core/hal/interface.h	/^     typedef std::uint32_t uint;$/;"	t
uint	opencv2/core/hal/interface.h	/^     typedef uint32_t uint;$/;"	t
uint	opencv2/core/hal/interface.h	/^   typedef unsigned uint;$/;"	t
uint32_t	opencv2/flann/dist.h	/^typedef unsigned __int32 uint32_t;$/;"	t
uint64	opencv2/core/hal/interface.h	/^   typedef uint64_t uint64;$/;"	t
uint64	opencv2/core/hal/interface.h	/^   typedef unsigned __int64 uint64;$/;"	t
uint64_t	opencv2/flann/dist.h	/^typedef unsigned __int64 uint64_t;$/;"	t
uint_type	opencv2/core/hal/intrin.hpp	/^    typedef _Tp uint_type;$/;"	t	struct:cv::V_TypeTraits
uint_type	opencv2/core/hal/intrin.hpp	/^    typedef uchar uint_type;$/;"	t	struct:cv::V_TypeTraits
uint_type	opencv2/core/hal/intrin.hpp	/^    typedef uint64 uint_type;$/;"	t	struct:cv::V_TypeTraits
uint_type	opencv2/core/hal/intrin.hpp	/^    typedef unsigned uint_type;$/;"	t	struct:cv::V_TypeTraits
uint_type	opencv2/core/hal/intrin.hpp	/^    typedef ushort uint_type;$/;"	t	struct:cv::V_TypeTraits
unaryTupleAdapter	opencv2/cudev/functional/tuple_adapter.hpp	/^__host__ __device__ UnaryTupleAdapter<Op, n> unaryTupleAdapter(const Op& op)$/;"	f	namespace:cv::cudev
unary_function	cpp_src/stl_function.h	/^    struct unary_function$/;"	s	namespace:std
unary_function	opencv2/core/cuda/functional.hpp	/^    template<typename Argument, typename Result> struct unary_function : public std::unary_function<Argument, Result> {};$/;"	s	namespace:cv::cuda::device
unary_function	opencv2/cudev/functional/functional.hpp	/^template <typename _Arg, typename _Result> struct unary_function$/;"	s	namespace:cv::cudev
unary_negate	cpp_src/stl_function.h	/^      unary_negate(const _Predicate& __x) : _M_pred(__x) {}$/;"	f	class:std::unary_negate
unary_negate	cpp_src/stl_function.h	/^    class unary_negate$/;"	c	namespace:std
unary_negate	opencv2/core/cuda/functional.hpp	/^      __host__ __device__ __forceinline__ unary_negate() {}$/;"	f	struct:cv::cuda::device::unary_negate
unary_negate	opencv2/core/cuda/functional.hpp	/^      __host__ __device__ __forceinline__ unary_negate(const unary_negate& other) : pred(other.pred) {}$/;"	f	struct:cv::cuda::device::unary_negate
unary_negate	opencv2/core/cuda/functional.hpp	/^      explicit __host__ __device__ __forceinline__ unary_negate(const Predicate& p) : pred(p) {}$/;"	f	struct:cv::cuda::device::unary_negate
unary_negate	opencv2/core/cuda/functional.hpp	/^    template <typename Predicate> struct unary_negate : unary_function<typename Predicate::argument_type, bool>$/;"	s	namespace:cv::cuda::device
unbalanced_tag	5/parallel/tags.h	/^  struct unbalanced_tag : public parallel_tag { };$/;"	s	namespace:__gnu_parallel
unbind	opencv2/cudev/ptr2d/texture.hpp	/^        __host__ static void unbind()$/;"	f	struct:__anon406::CvCudevTextureRef
uniform	opencv2/core/operations.hpp	/^inline double RNG::uniform(double a, double b) { return ((double)*this)*(b - a) + a; }$/;"	f	class:cv::RNG
uniform	opencv2/core/operations.hpp	/^inline float  RNG::uniform(float a, float b)   { return ((float)*this)*(b - a) + a; }$/;"	f	class:cv::RNG
uniform	opencv2/core/operations.hpp	/^inline int    RNG::uniform(int a, int b)       { return a == b ? a : (int)(next() % (b - a) + a); }$/;"	f	class:cv::RNG
uninitialized_copy	cpp_src/stl_uninitialized.h	/^    uninitialized_copy(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std
uninitialized_copy	cpp_src/stl_uninitialized.h	/^  uninitialized_copy(const char* __first, const char* __last, char* __result)$/;"	f	namespace:std
uninitialized_copy	cpp_src/stl_uninitialized.h	/^  uninitialized_copy(const wchar_t* __first, const wchar_t* __last,$/;"	f	namespace:std
uninitialized_fill	cpp_src/stl_uninitialized.h	/^    uninitialized_fill(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std
uninitialized_fill_n	cpp_src/stl_uninitialized.h	/^    uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp& __x)$/;"	f	namespace:std
unionBr_	opencv2/stitching/detail/seam_finders.hpp	/^    Point unionTl_, unionBr_;$/;"	m	class:cv::detail::DpSeamFinder
unionSize_	opencv2/stitching/detail/seam_finders.hpp	/^    Size unionSize_;$/;"	m	class:cv::detail::DpSeamFinder
unionTl_	opencv2/stitching/detail/seam_finders.hpp	/^    Point unionTl_, unionBr_;$/;"	m	class:cv::detail::DpSeamFinder
unique	cpp_src/stl_algo.h	/^    unique(_ForwardIterator __first, _ForwardIterator __last)$/;"	f	namespace:std
unique	cpp_src/stl_algo.h	/^    unique(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std
unique_copy	cpp_src/stl_algo.h	/^    unique_copy(_InputIterator __first, _InputIterator __last,$/;"	f	namespace:std
unique_copy_minimal_n	5/parallel/settings.h	/^    _SequenceIndex              unique_copy_minimal_n;$/;"	m	struct:__gnu_parallel::_Settings
uniquenessRatio	opencv2/calib3d/calib3d_c.h	/^    int uniquenessRatio;   \/\/ accept the computed disparity d* only if$/;"	m	struct:CvStereoBMState
unitbuf	cpp_src/ios_base.h	/^    static const fmtflags unitbuf =     _S_unitbuf;$/;"	m	class:std::ios_base
unitbuf	cpp_src/ios_base.h	/^  unitbuf(ios_base& __base)$/;"	f	namespace:std
unqualified_type	opencv2/cudev/util/type_traits.hpp	/^    typedef typename type_traits_detail::UnVolatile<typename type_traits_detail::UnConst<T>::type>::type unqualified_type;$/;"	t	struct:cv::cudev::TypeTraits
unregister	opencv2/flann/object_factory.h	/^    bool unregister(UniqueIdType id)$/;"	f	class:cvflann::ObjectFactory
unroll	opencv2/core/cuda/detail/transform_detail.hpp	/^            static __device__ __forceinline__ void unroll(const T& src, D& dst, const Mask& mask, UnOp& op, int x_shifted, int y)$/;"	f	struct:cv::cuda::device::transform_detail::OpUnroller
unroll	opencv2/core/cuda/detail/transform_detail.hpp	/^            static __device__ __forceinline__ void unroll(const T& src, D& dst, const Mask& mask, const UnOp& op, int x_shifted, int y)$/;"	f	struct:cv::cuda::device::transform_detail::OpUnroller
unroll	opencv2/core/cuda/detail/transform_detail.hpp	/^            static __device__ __forceinline__ void unroll(const T1& src1, const T2& src2, D& dst, const Mask& mask, BinOp& op, int x_shifted, int y)$/;"	f	struct:cv::cuda::device::transform_detail::OpUnroller
unroll	opencv2/core/cuda/detail/transform_detail.hpp	/^            static __device__ __forceinline__ void unroll(const T1& src1, const T2& src2, D& dst, const Mask& mask, const BinOp& op, int x_shifted, int y)$/;"	f	struct:cv::cuda::device::transform_detail::OpUnroller
unroll	opencv2/cudev/grid/detail/transform.hpp	/^        __device__ __forceinline__ static void unroll(const T& src, D& dst, const UnOp& op, const MaskPtr& mask, int x_shifted, int y)$/;"	f	struct:cv::cudev::grid_transform_detail::OpUnroller
unroll	opencv2/cudev/grid/detail/transform.hpp	/^        __device__ __forceinline__ static void unroll(const T1& src1, const T2& src2, D& dst, const BinOp& op, const MaskPtr& mask, int x_shifted, int y)$/;"	f	struct:cv::cudev::grid_transform_detail::OpUnroller
unsafe	5/sun/misc/Unsafe.h	/^  static ::sun::misc::Unsafe * unsafe;$/;"	m	class:sun::misc::Unsafe
unsetf	cpp_src/ios_base.h	/^    unsetf(fmtflags __mask) { _M_flags &= ~__mask; }$/;"	f	class:std::ios_base
unshift	cpp_src/codecvt.h	/^      unshift(state_type& __state, extern_type* __to, extern_type* __to_end,$/;"	f	class:std::__codecvt_abstract_base
update	5/ext/pb_ds/detail/ov_tree_map_/constructors_destructor_fn_imps.hpp	/^update(node_iterator nd_it, Node_Update* p_update)$/;"	f	class:PB_DS_CLASS_C_DEC
update	5/ext/pb_ds/detail/ov_tree_map_/constructors_destructor_fn_imps.hpp	/^update(node_iterator, null_node_update_pointer)$/;"	f	class:PB_DS_CLASS_C_DEC
update_max	5/ext/pb_ds/detail/thin_heap_/insert_fn_imps.hpp	/^update_max(node_pointer p_nd)$/;"	f	class:PB_DS_CLASS_C_DEC
update_metadata	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      typedef typename Update_Policy::metadata_type update_metadata;$/;"	t	class:__gnu_pbds::detail::PB_DS_LU_NAME
update_min_max_for_erased_leaf	5/ext/pb_ds/detail/pat_trie_/erase_fn_imps.hpp	/^update_min_max_for_erased_leaf(leaf_pointer p_l)$/;"	f	class:PB_DS_CLASS_C_DEC
update_min_max_for_erased_node	5/ext/pb_ds/detail/bin_search_tree_/erase_fn_imps.hpp	/^update_min_max_for_erased_node(node_pointer p_z)$/;"	f	class:PB_DS_CLASS_C_DEC
update_min_max_for_erased_node	5/ext/pb_ds/detail/bin_search_tree_/r_erase_fn_imps.hpp	/^update_min_max_for_erased_node(node_pointer p_z)$/;"	f	class:PB_DS_CLASS_C_DEC
update_min_max_for_erased_node	5/ext/pb_ds/detail/pat_trie_/r_erase_fn_imps.hpp	/^update_min_max_for_erased_node(node_pointer p_z)$/;"	f	class:PB_DS_CLASS_C_DEC
update_min_max_for_inserted_leaf	5/ext/pb_ds/detail/pat_trie_/insert_join_fn_imps.hpp	/^update_min_max_for_inserted_leaf(leaf_pointer p_new_lf)$/;"	f	class:PB_DS_CLASS_C_DEC
update_policy	5/ext/pb_ds/assoc_container.hpp	/^    typedef Update_Policy 			update_policy;$/;"	t	class:__gnu_pbds::list_update
update_policy	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      typedef Update_Policy update_policy;$/;"	t	class:__gnu_pbds::detail::PB_DS_LU_NAME
update_prefixes	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^    update_prefixes(a_const_pointer p_traits)$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
update_to_top	5/ext/pb_ds/detail/bin_search_tree_/rotate_fn_imps.hpp	/^update_to_top(node_pointer \/*p_nd*\/, null_node_update_pointer \/*p_update*\/)$/;"	f	class:PB_DS_CLASS_C_DEC
update_to_top	5/ext/pb_ds/detail/bin_search_tree_/rotate_fn_imps.hpp	/^update_to_top(node_pointer p_nd, Node_Update_* p_update)$/;"	f	class:PB_DS_CLASS_C_DEC
update_to_top	5/ext/pb_ds/detail/pat_trie_/rotate_fn_imps.hpp	/^update_to_top(node_pointer \/*p_nd*\/, __gnu_pbds::null_node_update*  \/*p_update*\/)$/;"	f	class:PB_DS_CLASS_C_DEC
update_to_top	5/ext/pb_ds/detail/pat_trie_/rotate_fn_imps.hpp	/^update_to_top(node_pointer p_nd, Node_Update_* p_update)$/;"	f	class:PB_DS_CLASS_C_DEC
upload	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^__host__ void GpuMat_<T>::upload(InputArray arr)$/;"	f	class:cv::cudev::GpuMat_
upload	opencv2/cudev/ptr2d/detail/gpumat.hpp	/^__host__ void GpuMat_<T>::upload(InputArray arr, Stream& stream)$/;"	f	class:cv::cudev::GpuMat_
upper_bound	5/ext/pb_ds/detail/bin_search_tree_/find_fn_imps.hpp	/^upper_bound(key_const_reference r_key) const$/;"	f	class:PB_DS_CLASS_C_DEC
upper_bound	5/ext/pb_ds/detail/bin_search_tree_/find_fn_imps.hpp	/^upper_bound(key_const_reference r_key)$/;"	f	class:PB_DS_CLASS_C_DEC
upper_bound	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      upper_bound(key_const_reference r_key) const$/;"	f	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
upper_bound	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      upper_bound(key_const_reference r_key)$/;"	f	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
upper_bound	5/ext/pb_ds/detail/pat_trie_/find_fn_imps.hpp	/^upper_bound(key_const_reference r_key) const$/;"	f	class:PB_DS_CLASS_C_DEC
upper_bound	5/ext/pb_ds/detail/pat_trie_/find_fn_imps.hpp	/^upper_bound(key_const_reference r_key)$/;"	f	class:PB_DS_CLASS_C_DEC
upper_bound	cpp_src/stl_algo.h	/^    upper_bound(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	namespace:std
upper_bound	cpp_src/stl_map.h	/^      upper_bound(const key_type& __x) const$/;"	f	class:std::map
upper_bound	cpp_src/stl_map.h	/^      upper_bound(const key_type& __x)$/;"	f	class:std::map
upper_bound	cpp_src/stl_multimap.h	/^      upper_bound(const key_type& __x) const$/;"	f	class:std::multimap
upper_bound	cpp_src/stl_multimap.h	/^      upper_bound(const key_type& __x)$/;"	f	class:std::multimap
upper_bound	cpp_src/stl_multiset.h	/^      upper_bound(const key_type& __x) const$/;"	f	class:std::multiset
upper_bound	cpp_src/stl_multiset.h	/^      upper_bound(const key_type& __x)$/;"	f	class:std::multiset
upper_bound	cpp_src/stl_set.h	/^      upper_bound(const key_type& __x) const$/;"	f	class:std::set
upper_bound	cpp_src/stl_set.h	/^      upper_bound(const key_type& __x)$/;"	f	class:std::set
upper_bound	cpp_src/stl_tree.h	/^    upper_bound(const _Key& __k) const$/;"	f	class:std::_Rb_tree
upper_bound	cpp_src/stl_tree.h	/^    upper_bound(const _Key& __k)$/;"	f	class:std::_Rb_tree
uppercase	cpp_src/ios_base.h	/^    static const fmtflags uppercase =   _S_uppercase;$/;"	m	class:std::ios_base
uppercase	cpp_src/ios_base.h	/^  uppercase(ios_base& __base)$/;"	f	namespace:std
urefcount	opencv2/core/mat.hpp	/^    int urefcount;$/;"	m	struct:cv::UMatData
usageFlags	opencv2/core/mat.hpp	/^    UMatUsageFlags usageFlags; \/\/ usage flags for allocator$/;"	m	class:cv::UMat
useAVCaptureVideoPreviewLayer	opencv2/videoio/cap_ios.h	/^@property (nonatomic, assign) BOOL useAVCaptureVideoPreviewLayer;$/;"	v
useInstr	opencv2/core/private.hpp	/^    bool       useInstr;$/;"	m	class:cv::instr::InstrStruct
usedMemory	opencv2/flann/allocator.h	/^    int     usedMemory;$/;"	m	class:cvflann::PooledAllocator
usedMemory	opencv2/flann/autotuned_index.h	/^    virtual int usedMemory() const$/;"	f	class:cvflann::AutotunedIndex
usedMemory	opencv2/flann/composite_index.h	/^    int usedMemory() const$/;"	f	class:cvflann::CompositeIndex
usedMemory	opencv2/flann/flann_base.hpp	/^    virtual int usedMemory() const$/;"	f	class:cvflann::Index
usedMemory	opencv2/flann/hierarchical_clustering_index.h	/^    int usedMemory() const$/;"	f	class:cvflann::HierarchicalClusteringIndex
usedMemory	opencv2/flann/kdtree_index.h	/^    int usedMemory() const$/;"	f	class:cvflann::KDTreeIndex
usedMemory	opencv2/flann/kdtree_single_index.h	/^    int usedMemory() const$/;"	f	class:cvflann::KDTreeSingleIndex
usedMemory	opencv2/flann/kmeans_index.h	/^    int usedMemory() const$/;"	f	class:cvflann::KMeansIndex
usedMemory	opencv2/flann/linear_index.h	/^    int usedMemory() const$/;"	f	class:cvflann::LinearIndex
usedMemory	opencv2/flann/lsh_index.h	/^    int usedMemory() const$/;"	f	class:cvflann::LshIndex
userdata	opencv2/core/mat.hpp	/^    void* userdata;$/;"	m	struct:cv::UMatData
ushort	opencv2/core/hal/interface.h	/^   typedef unsigned short ushort;$/;"	t
utrainDescCollection	opencv2/features2d.hpp	/^    std::vector<UMat> utrainDescCollection;$/;"	m	class:cv::DescriptorMatcher
v	5/ext/pb_ds/detail/type_utils.hpp	/^	  v = 1$/;"	e	enum:__gnu_pbds::detail::__static_assert_dumclass::__anon47
v_abs	opencv2/core/hal/intrin_neon.hpp	/^inline v_float32x4 v_abs(v_float32x4 x)$/;"	f	namespace:cv
v_abs	opencv2/core/hal/intrin_neon.hpp	/^inline v_float64x2 v_abs(v_float64x2 x)$/;"	f	namespace:cv
v_abs	opencv2/core/hal/intrin_sse.hpp	/^inline v_float32x4 v_abs(const v_float32x4& x)$/;"	f	namespace:cv
v_abs	opencv2/core/hal/intrin_sse.hpp	/^inline v_float64x2 v_abs(const v_float64x2& x)$/;"	f	namespace:cv
v_abs	opencv2/core/hal/intrin_sse.hpp	/^inline v_uint32x4 v_abs(const v_int32x4& x)$/;"	f	namespace:cv
v_absdiff	opencv2/core/hal/intrin_cpp.hpp	/^inline v_float32x4 v_absdiff(const v_float32x4& a, const v_float32x4& b)$/;"	f	namespace:cv
v_absdiff	opencv2/core/hal/intrin_cpp.hpp	/^inline v_float64x2 v_absdiff(const v_float64x2& a, const v_float64x2& b)$/;"	f	namespace:cv
v_absdiff	opencv2/core/hal/intrin_cpp.hpp	/^inline v_reg<typename V_TypeTraits<_Tp>::abs_type, n> v_absdiff(const v_reg<_Tp, n>& a, const v_reg<_Tp, n> & b)$/;"	f	namespace:cv
v_absdiff	opencv2/core/hal/intrin_sse.hpp	/^inline v_uint32x4 v_absdiff(const v_int32x4& a, const v_int32x4& b)$/;"	f	namespace:cv
v_absdiff	opencv2/core/hal/intrin_sse.hpp	/^inline v_uint32x4 v_absdiff(const v_uint32x4& a, const v_uint32x4& b)$/;"	f	namespace:cv
v_ceil	opencv2/core/hal/intrin_cpp.hpp	/^template<int n> inline v_reg<int, n*2> v_ceil(const v_reg<double, n>& a)$/;"	f	namespace:cv
v_ceil	opencv2/core/hal/intrin_cpp.hpp	/^template<int n> inline v_reg<int, n> v_ceil(const v_reg<float, n>& a)$/;"	f	namespace:cv
v_ceil	opencv2/core/hal/intrin_neon.hpp	/^inline v_int32x4 v_ceil(const v_float32x4& a)$/;"	f	namespace:cv
v_ceil	opencv2/core/hal/intrin_neon.hpp	/^inline v_int32x4 v_ceil(const v_float64x2& a)$/;"	f	namespace:cv
v_ceil	opencv2/core/hal/intrin_sse.hpp	/^inline v_int32x4 v_ceil(const v_float32x4& a)$/;"	f	namespace:cv
v_ceil	opencv2/core/hal/intrin_sse.hpp	/^inline v_int32x4 v_ceil(const v_float64x2& a)$/;"	f	namespace:cv
v_check_all	opencv2/core/hal/intrin_cpp.hpp	/^template<typename _Tp, int n> inline bool v_check_all(const v_reg<_Tp, n>& a)$/;"	f	namespace:cv
v_check_all	opencv2/core/hal/intrin_neon.hpp	/^inline bool v_check_all(const v_float32x4& a)$/;"	f	namespace:cv
v_check_all	opencv2/core/hal/intrin_neon.hpp	/^inline bool v_check_all(const v_float64x2& a)$/;"	f	namespace:cv
v_check_all	opencv2/core/hal/intrin_neon.hpp	/^inline bool v_check_all(const v_int16x8& a)$/;"	f	namespace:cv
v_check_all	opencv2/core/hal/intrin_neon.hpp	/^inline bool v_check_all(const v_int32x4& a)$/;"	f	namespace:cv
v_check_all	opencv2/core/hal/intrin_neon.hpp	/^inline bool v_check_all(const v_int64x2& a)$/;"	f	namespace:cv
v_check_all	opencv2/core/hal/intrin_neon.hpp	/^inline bool v_check_all(const v_int8x16& a)$/;"	f	namespace:cv
v_check_any	opencv2/core/hal/intrin_cpp.hpp	/^template<typename _Tp, int n> inline bool v_check_any(const v_reg<_Tp, n>& a)$/;"	f	namespace:cv
v_check_any	opencv2/core/hal/intrin_neon.hpp	/^inline bool v_check_any(const v_float32x4& a)$/;"	f	namespace:cv
v_check_any	opencv2/core/hal/intrin_neon.hpp	/^inline bool v_check_any(const v_float64x2& a)$/;"	f	namespace:cv
v_check_any	opencv2/core/hal/intrin_neon.hpp	/^inline bool v_check_any(const v_int16x8& a)$/;"	f	namespace:cv
v_check_any	opencv2/core/hal/intrin_neon.hpp	/^inline bool v_check_any(const v_int32x4& a)$/;"	f	namespace:cv
v_check_any	opencv2/core/hal/intrin_neon.hpp	/^inline bool v_check_any(const v_int64x2& a)$/;"	f	namespace:cv
v_check_any	opencv2/core/hal/intrin_neon.hpp	/^inline bool v_check_any(const v_int8x16& a)$/;"	f	namespace:cv
v_combine_high	opencv2/core/hal/intrin_cpp.hpp	/^inline v_reg<_Tp, n> v_combine_high(const v_reg<_Tp, n>& a, const v_reg<_Tp, n>& b)$/;"	f	namespace:cv
v_combine_low	opencv2/core/hal/intrin_cpp.hpp	/^inline v_reg<_Tp, n> v_combine_low(const v_reg<_Tp, n>& a, const v_reg<_Tp, n>& b)$/;"	f	namespace:cv
v_cvt_f16	opencv2/core/hal/intrin_neon.hpp	/^inline v_float16x4 v_cvt_f16(const v_float32x4& a)$/;"	f	namespace:cv
v_cvt_f16	opencv2/core/hal/intrin_sse.hpp	/^inline v_float16x4 v_cvt_f16(const v_float32x4& a)$/;"	f	namespace:cv
v_cvt_f32	opencv2/core/hal/intrin_cpp.hpp	/^template<int n> inline v_reg<float, n> v_cvt_f32(const v_reg<int, n>& a)$/;"	f	namespace:cv
v_cvt_f32	opencv2/core/hal/intrin_neon.hpp	/^inline v_float32x4 v_cvt_f32(const v_float16x4& a)$/;"	f	namespace:cv
v_cvt_f32	opencv2/core/hal/intrin_neon.hpp	/^inline v_float32x4 v_cvt_f32(const v_float64x2& a)$/;"	f	namespace:cv
v_cvt_f32	opencv2/core/hal/intrin_neon.hpp	/^inline v_float32x4 v_cvt_f32(const v_int32x4& a)$/;"	f	namespace:cv
v_cvt_f32	opencv2/core/hal/intrin_sse.hpp	/^inline v_float32x4 v_cvt_f32(const v_float16x4& a)$/;"	f	namespace:cv
v_cvt_f32	opencv2/core/hal/intrin_sse.hpp	/^inline v_float32x4 v_cvt_f32(const v_float64x2& a)$/;"	f	namespace:cv
v_cvt_f32	opencv2/core/hal/intrin_sse.hpp	/^inline v_float32x4 v_cvt_f32(const v_int32x4& a)$/;"	f	namespace:cv
v_cvt_f64	opencv2/core/hal/intrin_cpp.hpp	/^template<int n> inline v_reg<double, n> v_cvt_f64(const v_reg<float, n*2>& a)$/;"	f	namespace:cv
v_cvt_f64	opencv2/core/hal/intrin_cpp.hpp	/^template<int n> inline v_reg<double, n> v_cvt_f64(const v_reg<int, n*2>& a)$/;"	f	namespace:cv
v_cvt_f64	opencv2/core/hal/intrin_neon.hpp	/^inline v_float64x2 v_cvt_f64(const v_float32x4& a)$/;"	f	namespace:cv
v_cvt_f64	opencv2/core/hal/intrin_neon.hpp	/^inline v_float64x2 v_cvt_f64(const v_int32x4& a)$/;"	f	namespace:cv
v_cvt_f64	opencv2/core/hal/intrin_sse.hpp	/^inline v_float64x2 v_cvt_f64(const v_float32x4& a)$/;"	f	namespace:cv
v_cvt_f64	opencv2/core/hal/intrin_sse.hpp	/^inline v_float64x2 v_cvt_f64(const v_int32x4& a)$/;"	f	namespace:cv
v_cvt_f64_high	opencv2/core/hal/intrin_neon.hpp	/^inline v_float64x2 v_cvt_f64_high(const v_float32x4& a)$/;"	f	namespace:cv
v_cvt_f64_high	opencv2/core/hal/intrin_neon.hpp	/^inline v_float64x2 v_cvt_f64_high(const v_int32x4& a)$/;"	f	namespace:cv
v_cvt_f64_high	opencv2/core/hal/intrin_sse.hpp	/^inline v_float64x2 v_cvt_f64_high(const v_float32x4& a)$/;"	f	namespace:cv
v_cvt_f64_high	opencv2/core/hal/intrin_sse.hpp	/^inline v_float64x2 v_cvt_f64_high(const v_int32x4& a)$/;"	f	namespace:cv
v_dotprod	opencv2/core/hal/intrin_cpp.hpp	/^    v_dotprod(const v_reg<_Tp, n>& a, const v_reg<_Tp, n>& b)$/;"	f	namespace:cv
v_dotprod	opencv2/core/hal/intrin_neon.hpp	/^inline v_int32x4 v_dotprod(const v_int16x8& a, const v_int16x8& b)$/;"	f	namespace:cv
v_dotprod	opencv2/core/hal/intrin_sse.hpp	/^inline v_int32x4 v_dotprod(const v_int16x8& a, const v_int16x8& b)$/;"	f	namespace:cv
v_expand	opencv2/core/hal/intrin_cpp.hpp	/^template<typename _Tp, int n> inline void v_expand(const v_reg<_Tp, n>& a,$/;"	f	namespace:cv
v_expand	opencv2/core/hal/intrin_sse.hpp	/^inline void v_expand(const v_int32x4& a, v_int64x2& b0, v_int64x2& b1)$/;"	f	namespace:cv
v_expand	opencv2/core/hal/intrin_sse.hpp	/^inline void v_expand(const v_uint32x4& a, v_uint64x2& b0, v_uint64x2& b1)$/;"	f	namespace:cv
v_extract	opencv2/core/hal/intrin_cpp.hpp	/^inline v_reg<_Tp, n> v_extract(const v_reg<_Tp, n>& a, const v_reg<_Tp, n>& b)$/;"	f	namespace:cv
v_extract	opencv2/core/hal/intrin_sse.hpp	/^inline _Tpvec v_extract(const _Tpvec& a, const _Tpvec& b)$/;"	f	namespace:cv
v_float16x4	opencv2/core/hal/intrin_neon.hpp	/^    explicit v_float16x4(float16x4_t v) : val(v) {}$/;"	f	struct:cv::v_float16x4
v_float16x4	opencv2/core/hal/intrin_neon.hpp	/^    v_float16x4() {}$/;"	f	struct:cv::v_float16x4
v_float16x4	opencv2/core/hal/intrin_neon.hpp	/^    v_float16x4(short v0, short v1, short v2, short v3)$/;"	f	struct:cv::v_float16x4
v_float16x4	opencv2/core/hal/intrin_neon.hpp	/^struct v_float16x4$/;"	s	namespace:cv
v_float16x4	opencv2/core/hal/intrin_sse.hpp	/^    explicit v_float16x4(__m128i v) : val(v) {}$/;"	f	struct:cv::v_float16x4
v_float16x4	opencv2/core/hal/intrin_sse.hpp	/^    v_float16x4() {}$/;"	f	struct:cv::v_float16x4
v_float16x4	opencv2/core/hal/intrin_sse.hpp	/^    v_float16x4(short v0, short v1, short v2, short v3)$/;"	f	struct:cv::v_float16x4
v_float16x4	opencv2/core/hal/intrin_sse.hpp	/^struct v_float16x4$/;"	s	namespace:cv
v_float32x4	opencv2/core/hal/intrin_cpp.hpp	/^typedef v_reg<float, 4> v_float32x4;$/;"	t	namespace:cv
v_float32x4	opencv2/core/hal/intrin_neon.hpp	/^    explicit v_float32x4(float32x4_t v) : val(v) {}$/;"	f	struct:cv::v_float32x4
v_float32x4	opencv2/core/hal/intrin_neon.hpp	/^    v_float32x4() {}$/;"	f	struct:cv::v_float32x4
v_float32x4	opencv2/core/hal/intrin_neon.hpp	/^    v_float32x4(float v0, float v1, float v2, float v3)$/;"	f	struct:cv::v_float32x4
v_float32x4	opencv2/core/hal/intrin_neon.hpp	/^struct v_float32x4$/;"	s	namespace:cv
v_float32x4	opencv2/core/hal/intrin_sse.hpp	/^    explicit v_float32x4(__m128 v) : val(v) {}$/;"	f	struct:cv::v_float32x4
v_float32x4	opencv2/core/hal/intrin_sse.hpp	/^    v_float32x4() {}$/;"	f	struct:cv::v_float32x4
v_float32x4	opencv2/core/hal/intrin_sse.hpp	/^    v_float32x4(float v0, float v1, float v2, float v3)$/;"	f	struct:cv::v_float32x4
v_float32x4	opencv2/core/hal/intrin_sse.hpp	/^struct v_float32x4$/;"	s	namespace:cv
v_float64x2	opencv2/core/hal/intrin_cpp.hpp	/^typedef v_reg<double, 2> v_float64x2;$/;"	t	namespace:cv
v_float64x2	opencv2/core/hal/intrin_neon.hpp	/^    explicit v_float64x2(float64x2_t v) : val(v) {}$/;"	f	struct:cv::v_float64x2
v_float64x2	opencv2/core/hal/intrin_neon.hpp	/^    v_float64x2() {}$/;"	f	struct:cv::v_float64x2
v_float64x2	opencv2/core/hal/intrin_neon.hpp	/^    v_float64x2(double v0, double v1)$/;"	f	struct:cv::v_float64x2
v_float64x2	opencv2/core/hal/intrin_neon.hpp	/^struct v_float64x2$/;"	s	namespace:cv
v_float64x2	opencv2/core/hal/intrin_sse.hpp	/^    explicit v_float64x2(__m128d v) : val(v) {}$/;"	f	struct:cv::v_float64x2
v_float64x2	opencv2/core/hal/intrin_sse.hpp	/^    v_float64x2() {}$/;"	f	struct:cv::v_float64x2
v_float64x2	opencv2/core/hal/intrin_sse.hpp	/^    v_float64x2(double v0, double v1)$/;"	f	struct:cv::v_float64x2
v_float64x2	opencv2/core/hal/intrin_sse.hpp	/^struct v_float64x2$/;"	s	namespace:cv
v_floor	opencv2/core/hal/intrin_cpp.hpp	/^template<int n> inline v_reg<int, n*2> v_floor(const v_reg<double, n>& a)$/;"	f	namespace:cv
v_floor	opencv2/core/hal/intrin_cpp.hpp	/^template<int n> inline v_reg<int, n> v_floor(const v_reg<float, n>& a)$/;"	f	namespace:cv
v_floor	opencv2/core/hal/intrin_neon.hpp	/^inline v_int32x4 v_floor(const v_float32x4& a)$/;"	f	namespace:cv
v_floor	opencv2/core/hal/intrin_neon.hpp	/^inline v_int32x4 v_floor(const v_float64x2& a)$/;"	f	namespace:cv
v_floor	opencv2/core/hal/intrin_sse.hpp	/^inline v_int32x4 v_floor(const v_float32x4& a)$/;"	f	namespace:cv
v_floor	opencv2/core/hal/intrin_sse.hpp	/^inline v_int32x4 v_floor(const v_float64x2& a)$/;"	f	namespace:cv
v_hsum	opencv2/core/hal/intrin_cpp.hpp	/^template<typename _Tp, int n> inline void v_hsum(const v_reg<_Tp, n>& a,$/;"	f	namespace:cv
v_int16x8	opencv2/core/hal/intrin_cpp.hpp	/^typedef v_reg<short, 8> v_int16x8;$/;"	t	namespace:cv
v_int16x8	opencv2/core/hal/intrin_neon.hpp	/^    explicit v_int16x8(int16x8_t v) : val(v) {}$/;"	f	struct:cv::v_int16x8
v_int16x8	opencv2/core/hal/intrin_neon.hpp	/^    v_int16x8() {}$/;"	f	struct:cv::v_int16x8
v_int16x8	opencv2/core/hal/intrin_neon.hpp	/^    v_int16x8(short v0, short v1, short v2, short v3, short v4, short v5, short v6, short v7)$/;"	f	struct:cv::v_int16x8
v_int16x8	opencv2/core/hal/intrin_neon.hpp	/^struct v_int16x8$/;"	s	namespace:cv
v_int16x8	opencv2/core/hal/intrin_sse.hpp	/^    explicit v_int16x8(__m128i v) : val(v) {}$/;"	f	struct:cv::v_int16x8
v_int16x8	opencv2/core/hal/intrin_sse.hpp	/^    v_int16x8() {}$/;"	f	struct:cv::v_int16x8
v_int16x8	opencv2/core/hal/intrin_sse.hpp	/^    v_int16x8(short v0, short v1, short v2, short v3, short v4, short v5, short v6, short v7)$/;"	f	struct:cv::v_int16x8
v_int16x8	opencv2/core/hal/intrin_sse.hpp	/^struct v_int16x8$/;"	s	namespace:cv
v_int32x4	opencv2/core/hal/intrin_cpp.hpp	/^typedef v_reg<int, 4> v_int32x4;$/;"	t	namespace:cv
v_int32x4	opencv2/core/hal/intrin_neon.hpp	/^    explicit v_int32x4(int32x4_t v) : val(v) {}$/;"	f	struct:cv::v_int32x4
v_int32x4	opencv2/core/hal/intrin_neon.hpp	/^    v_int32x4() {}$/;"	f	struct:cv::v_int32x4
v_int32x4	opencv2/core/hal/intrin_neon.hpp	/^    v_int32x4(int v0, int v1, int v2, int v3)$/;"	f	struct:cv::v_int32x4
v_int32x4	opencv2/core/hal/intrin_neon.hpp	/^struct v_int32x4$/;"	s	namespace:cv
v_int32x4	opencv2/core/hal/intrin_sse.hpp	/^    explicit v_int32x4(__m128i v) : val(v) {}$/;"	f	struct:cv::v_int32x4
v_int32x4	opencv2/core/hal/intrin_sse.hpp	/^    v_int32x4() {}$/;"	f	struct:cv::v_int32x4
v_int32x4	opencv2/core/hal/intrin_sse.hpp	/^    v_int32x4(int v0, int v1, int v2, int v3)$/;"	f	struct:cv::v_int32x4
v_int32x4	opencv2/core/hal/intrin_sse.hpp	/^struct v_int32x4$/;"	s	namespace:cv
v_int64x2	opencv2/core/hal/intrin_cpp.hpp	/^typedef v_reg<int64, 2> v_int64x2;$/;"	t	namespace:cv
v_int64x2	opencv2/core/hal/intrin_neon.hpp	/^    explicit v_int64x2(int64x2_t v) : val(v) {}$/;"	f	struct:cv::v_int64x2
v_int64x2	opencv2/core/hal/intrin_neon.hpp	/^    v_int64x2() {}$/;"	f	struct:cv::v_int64x2
v_int64x2	opencv2/core/hal/intrin_neon.hpp	/^    v_int64x2(int v0, int v1)$/;"	f	struct:cv::v_int64x2
v_int64x2	opencv2/core/hal/intrin_neon.hpp	/^struct v_int64x2$/;"	s	namespace:cv
v_int64x2	opencv2/core/hal/intrin_sse.hpp	/^    explicit v_int64x2(__m128i v) : val(v) {}$/;"	f	struct:cv::v_int64x2
v_int64x2	opencv2/core/hal/intrin_sse.hpp	/^    v_int64x2() {}$/;"	f	struct:cv::v_int64x2
v_int64x2	opencv2/core/hal/intrin_sse.hpp	/^    v_int64x2(int64 v0, int64 v1)$/;"	f	struct:cv::v_int64x2
v_int64x2	opencv2/core/hal/intrin_sse.hpp	/^struct v_int64x2$/;"	s	namespace:cv
v_int8x16	opencv2/core/hal/intrin_cpp.hpp	/^typedef v_reg<schar, 16> v_int8x16;$/;"	t	namespace:cv
v_int8x16	opencv2/core/hal/intrin_neon.hpp	/^    explicit v_int8x16(int8x16_t v) : val(v) {}$/;"	f	struct:cv::v_int8x16
v_int8x16	opencv2/core/hal/intrin_neon.hpp	/^    v_int8x16() {}$/;"	f	struct:cv::v_int8x16
v_int8x16	opencv2/core/hal/intrin_neon.hpp	/^    v_int8x16(schar v0, schar v1, schar v2, schar v3, schar v4, schar v5, schar v6, schar v7,$/;"	f	struct:cv::v_int8x16
v_int8x16	opencv2/core/hal/intrin_neon.hpp	/^struct v_int8x16$/;"	s	namespace:cv
v_int8x16	opencv2/core/hal/intrin_sse.hpp	/^    explicit v_int8x16(__m128i v) : val(v) {}$/;"	f	struct:cv::v_int8x16
v_int8x16	opencv2/core/hal/intrin_sse.hpp	/^    v_int8x16() {}$/;"	f	struct:cv::v_int8x16
v_int8x16	opencv2/core/hal/intrin_sse.hpp	/^    v_int8x16(schar v0, schar v1, schar v2, schar v3, schar v4, schar v5, schar v6, schar v7,$/;"	f	struct:cv::v_int8x16
v_int8x16	opencv2/core/hal/intrin_sse.hpp	/^struct v_int8x16$/;"	s	namespace:cv
v_invsqrt	opencv2/core/hal/intrin_cpp.hpp	/^inline v_reg<_Tp, n> v_invsqrt(const v_reg<_Tp, n>& a)$/;"	f	namespace:cv
v_invsqrt	opencv2/core/hal/intrin_neon.hpp	/^inline v_float32x4 v_invsqrt(const v_float32x4& x)$/;"	f	namespace:cv
v_invsqrt	opencv2/core/hal/intrin_neon.hpp	/^inline v_float64x2 v_invsqrt(const v_float64x2& x)$/;"	f	namespace:cv
v_invsqrt	opencv2/core/hal/intrin_sse.hpp	/^inline v_float32x4 v_invsqrt(const v_float32x4& x)$/;"	f	namespace:cv
v_invsqrt	opencv2/core/hal/intrin_sse.hpp	/^inline v_float64x2 v_invsqrt(const v_float64x2& x)$/;"	f	namespace:cv
v_load	opencv2/core/hal/intrin_cpp.hpp	/^inline v_reg<_Tp, V_SIMD128Traits<_Tp>::nlanes> v_load(const _Tp* ptr)$/;"	f	namespace:cv
v_load_aligned	opencv2/core/hal/intrin_cpp.hpp	/^inline v_reg<_Tp, V_SIMD128Traits<_Tp>::nlanes> v_load_aligned(const _Tp* ptr)$/;"	f	namespace:cv
v_load_deinterleave	opencv2/core/hal/intrin_cpp.hpp	/^inline void v_load_deinterleave(const _Tp* ptr, v_reg<_Tp, n>& a,$/;"	f	namespace:cv
v_load_deinterleave	opencv2/core/hal/intrin_cpp.hpp	/^template<typename _Tp, int n> inline void v_load_deinterleave(const _Tp* ptr, v_reg<_Tp, n>& a,$/;"	f	namespace:cv
v_load_deinterleave	opencv2/core/hal/intrin_sse.hpp	/^inline void v_load_deinterleave(const float* ptr, v_float32x4& a, v_float32x4& b)$/;"	f	namespace:cv
v_load_deinterleave	opencv2/core/hal/intrin_sse.hpp	/^inline void v_load_deinterleave(const uchar* ptr, v_uint8x16& a, v_uint8x16& b, v_uint8x16& c)$/;"	f	namespace:cv
v_load_deinterleave	opencv2/core/hal/intrin_sse.hpp	/^inline void v_load_deinterleave(const uchar* ptr, v_uint8x16& a, v_uint8x16& b, v_uint8x16& c, v_uint8x16& d)$/;"	f	namespace:cv
v_load_deinterleave	opencv2/core/hal/intrin_sse.hpp	/^inline void v_load_deinterleave(const unsigned* ptr, v_uint32x4& a, v_uint32x4& b, v_uint32x4& c)$/;"	f	namespace:cv
v_load_deinterleave	opencv2/core/hal/intrin_sse.hpp	/^inline void v_load_deinterleave(const unsigned* ptr, v_uint32x4& a, v_uint32x4& b, v_uint32x4& c, v_uint32x4& d)$/;"	f	namespace:cv
v_load_deinterleave	opencv2/core/hal/intrin_sse.hpp	/^inline void v_load_deinterleave(const ushort* ptr, v_uint16x8& a, v_uint16x8& b, v_uint16x8& c)$/;"	f	namespace:cv
v_load_deinterleave	opencv2/core/hal/intrin_sse.hpp	/^inline void v_load_deinterleave(const ushort* ptr, v_uint16x8& a, v_uint16x8& b, v_uint16x8& c, v_uint16x8& d)$/;"	f	namespace:cv
v_load_expand	opencv2/core/hal/intrin_cpp.hpp	/^v_load_expand(const _Tp* ptr)$/;"	f	namespace:cv
v_load_expand	opencv2/core/hal/intrin_sse.hpp	/^inline v_int64x2 v_load_expand(const int* ptr)$/;"	f	namespace:cv
v_load_expand	opencv2/core/hal/intrin_sse.hpp	/^inline v_uint64x2 v_load_expand(const unsigned* ptr)$/;"	f	namespace:cv
v_load_expand_q	opencv2/core/hal/intrin_cpp.hpp	/^v_load_expand_q(const _Tp* ptr)$/;"	f	namespace:cv
v_load_expand_q	opencv2/core/hal/intrin_neon.hpp	/^inline v_int32x4 v_load_expand_q(const schar* ptr)$/;"	f	namespace:cv
v_load_expand_q	opencv2/core/hal/intrin_neon.hpp	/^inline v_uint32x4 v_load_expand_q(const uchar* ptr)$/;"	f	namespace:cv
v_load_expand_q	opencv2/core/hal/intrin_sse.hpp	/^inline v_int32x4 v_load_expand_q(const schar* ptr)$/;"	f	namespace:cv
v_load_expand_q	opencv2/core/hal/intrin_sse.hpp	/^inline v_uint32x4 v_load_expand_q(const uchar* ptr)$/;"	f	namespace:cv
v_load_f16	opencv2/core/hal/intrin_neon.hpp	/^inline v_float16x4 v_load_f16(const short* ptr)$/;"	f	namespace:cv
v_load_f16	opencv2/core/hal/intrin_sse.hpp	/^inline v_float16x4 v_load_f16(const short* ptr)$/;"	f	namespace:cv
v_load_halves	opencv2/core/hal/intrin_cpp.hpp	/^inline v_reg<_Tp, V_SIMD128Traits<_Tp>::nlanes> v_load_halves(const _Tp* loptr, const _Tp* hiptr)$/;"	f	namespace:cv
v_magnitude	opencv2/core/hal/intrin_cpp.hpp	/^inline v_reg<_Tp, n> v_magnitude(const v_reg<_Tp, n>& a, const v_reg<_Tp, n>& b)$/;"	f	namespace:cv
v_magnitude	opencv2/core/hal/intrin_neon.hpp	/^inline v_float32x4 v_magnitude(const v_float32x4& a, const v_float32x4& b)$/;"	f	namespace:cv
v_magnitude	opencv2/core/hal/intrin_neon.hpp	/^inline v_float64x2 v_magnitude(const v_float64x2& a, const v_float64x2& b)$/;"	f	namespace:cv
v_matmul	opencv2/core/hal/intrin_cpp.hpp	/^inline v_float32x4 v_matmul(const v_float32x4& v, const v_float32x4& m0,$/;"	f	namespace:cv
v_matmul	opencv2/core/hal/intrin_neon.hpp	/^inline v_float32x4 v_matmul(const v_float32x4& v, const v_float32x4& m0,$/;"	f	namespace:cv
v_matmul	opencv2/core/hal/intrin_sse.hpp	/^inline v_float32x4 v_matmul(const v_float32x4& v, const v_float32x4& m0,$/;"	f	namespace:cv
v_max	opencv2/core/hal/intrin_sse.hpp	/^inline v_int32x4 v_max(const v_int32x4& a, const v_int32x4& b)$/;"	f	namespace:cv
v_max	opencv2/core/hal/intrin_sse.hpp	/^inline v_int8x16 v_max(const v_int8x16& a, const v_int8x16& b)$/;"	f	namespace:cv
v_max	opencv2/core/hal/intrin_sse.hpp	/^inline v_uint16x8 v_max(const v_uint16x8& a, const v_uint16x8& b)$/;"	f	namespace:cv
v_max	opencv2/core/hal/intrin_sse.hpp	/^inline v_uint32x4 v_max(const v_uint32x4& a, const v_uint32x4& b)$/;"	f	namespace:cv
v_min	opencv2/core/hal/intrin_sse.hpp	/^inline v_int32x4 v_min(const v_int32x4& a, const v_int32x4& b)$/;"	f	namespace:cv
v_min	opencv2/core/hal/intrin_sse.hpp	/^inline v_int8x16 v_min(const v_int8x16& a, const v_int8x16& b)$/;"	f	namespace:cv
v_min	opencv2/core/hal/intrin_sse.hpp	/^inline v_uint16x8 v_min(const v_uint16x8& a, const v_uint16x8& b)$/;"	f	namespace:cv
v_min	opencv2/core/hal/intrin_sse.hpp	/^inline v_uint32x4 v_min(const v_uint32x4& a, const v_uint32x4& b)$/;"	f	namespace:cv
v_minmax	opencv2/core/hal/intrin_cpp.hpp	/^inline void v_minmax( const v_reg<_Tp, n>& a, const v_reg<_Tp, n>& b,$/;"	f	namespace:cv
v_mul_expand	opencv2/core/hal/intrin_cpp.hpp	/^template<typename _Tp, int n> inline void v_mul_expand(const v_reg<_Tp, n>& a, const v_reg<_Tp, n>& b,$/;"	f	namespace:cv
v_mul_expand	opencv2/core/hal/intrin_neon.hpp	/^inline void v_mul_expand(const v_int16x8& a, const v_int16x8& b,$/;"	f	namespace:cv
v_mul_expand	opencv2/core/hal/intrin_neon.hpp	/^inline void v_mul_expand(const v_uint16x8& a, const v_uint16x8& b,$/;"	f	namespace:cv
v_mul_expand	opencv2/core/hal/intrin_neon.hpp	/^inline void v_mul_expand(const v_uint32x4& a, const v_uint32x4& b,$/;"	f	namespace:cv
v_mul_expand	opencv2/core/hal/intrin_sse.hpp	/^inline void v_mul_expand(const v_int16x8& a, const v_int16x8& b,$/;"	f	namespace:cv
v_mul_expand	opencv2/core/hal/intrin_sse.hpp	/^inline void v_mul_expand(const v_uint16x8& a, const v_uint16x8& b,$/;"	f	namespace:cv
v_mul_expand	opencv2/core/hal/intrin_sse.hpp	/^inline void v_mul_expand(const v_uint32x4& a, const v_uint32x4& b,$/;"	f	namespace:cv
v_muladd	opencv2/core/hal/intrin_cpp.hpp	/^inline v_reg<_Tp, n> v_muladd(const v_reg<_Tp, n>& a, const v_reg<_Tp, n>& b,$/;"	f	namespace:cv
v_muladd	opencv2/core/hal/intrin_neon.hpp	/^inline v_float32x4 v_muladd(const v_float32x4& a, const v_float32x4& b, const v_float32x4& c)$/;"	f	namespace:cv
v_muladd	opencv2/core/hal/intrin_neon.hpp	/^inline v_float64x2 v_muladd(const v_float64x2& a, const v_float64x2& b, const v_float64x2& c)$/;"	f	namespace:cv
v_pack	opencv2/core/hal/intrin_sse.hpp	/^inline v_int16x8 v_pack(const v_int32x4& a, const v_int32x4& b)$/;"	f	namespace:cv
v_pack	opencv2/core/hal/intrin_sse.hpp	/^inline v_int32x4 v_pack(const v_int64x2& a, const v_int64x2& b)$/;"	f	namespace:cv
v_pack	opencv2/core/hal/intrin_sse.hpp	/^inline v_int8x16 v_pack(const v_int16x8& a, const v_int16x8& b)$/;"	f	namespace:cv
v_pack	opencv2/core/hal/intrin_sse.hpp	/^inline v_uint16x8 v_pack(const v_uint32x4& a, const v_uint32x4& b)$/;"	f	namespace:cv
v_pack	opencv2/core/hal/intrin_sse.hpp	/^inline v_uint32x4 v_pack(const v_uint64x2& a, const v_uint64x2& b)$/;"	f	namespace:cv
v_pack	opencv2/core/hal/intrin_sse.hpp	/^inline v_uint8x16 v_pack(const v_uint16x8& a, const v_uint16x8& b)$/;"	f	namespace:cv
v_pack_store	opencv2/core/hal/intrin_sse.hpp	/^inline void v_pack_store(int* ptr, const v_int64x2& a)$/;"	f	namespace:cv
v_pack_store	opencv2/core/hal/intrin_sse.hpp	/^inline void v_pack_store(schar* ptr, v_int16x8& a)$/;"	f	namespace:cv
v_pack_store	opencv2/core/hal/intrin_sse.hpp	/^inline void v_pack_store(short* ptr, const v_int32x4& a)$/;"	f	namespace:cv
v_pack_store	opencv2/core/hal/intrin_sse.hpp	/^inline void v_pack_store(uchar* ptr, const v_uint16x8& a)$/;"	f	namespace:cv
v_pack_store	opencv2/core/hal/intrin_sse.hpp	/^inline void v_pack_store(unsigned* ptr, const v_uint64x2& a)$/;"	f	namespace:cv
v_pack_store	opencv2/core/hal/intrin_sse.hpp	/^inline void v_pack_store(ushort* ptr, const v_uint32x4& a)$/;"	f	namespace:cv
v_pack_u	opencv2/core/hal/intrin_sse.hpp	/^inline v_uint16x8 v_pack_u(const v_int32x4& a, const v_int32x4& b)$/;"	f	namespace:cv
v_pack_u	opencv2/core/hal/intrin_sse.hpp	/^inline v_uint8x16 v_pack_u(const v_int16x8& a, const v_int16x8& b)$/;"	f	namespace:cv
v_pack_u_store	opencv2/core/hal/intrin_sse.hpp	/^inline void v_pack_u_store(uchar* ptr, const v_int16x8& a)$/;"	f	namespace:cv
v_pack_u_store	opencv2/core/hal/intrin_sse.hpp	/^inline void v_pack_u_store(ushort* ptr, const v_int32x4& a)$/;"	f	namespace:cv
v_packq_epi32	opencv2/core/hal/intrin_sse.hpp	/^inline __m128i v_packq_epi32(__m128i a)$/;"	f	namespace:cv
v_recombine	opencv2/core/hal/intrin_cpp.hpp	/^inline void v_recombine(const v_reg<_Tp, n>& a, const v_reg<_Tp, n>& b,$/;"	f	namespace:cv
v_reduce_sum	opencv2/core/hal/intrin_cpp.hpp	/^template<typename _Tp, int n> inline typename V_TypeTraits<_Tp>::sum_type v_reduce_sum(const v_reg<_Tp, n>& a)$/;"	f	namespace:cv
v_reg	opencv2/core/hal/intrin_cpp.hpp	/^    explicit v_reg(const _Tp* ptr) { for( int i = 0; i < n; i++ ) s[i] = ptr[i]; }$/;"	f	struct:cv::v_reg
v_reg	opencv2/core/hal/intrin_cpp.hpp	/^    v_reg() {}$/;"	f	struct:cv::v_reg
v_reg	opencv2/core/hal/intrin_cpp.hpp	/^    v_reg(_Tp s0, _Tp s1) { s[0] = s0; s[1] = s1; }$/;"	f	struct:cv::v_reg
v_reg	opencv2/core/hal/intrin_cpp.hpp	/^    v_reg(_Tp s0, _Tp s1, _Tp s2, _Tp s3) { s[0] = s0; s[1] = s1; s[2] = s2; s[3] = s3; }$/;"	f	struct:cv::v_reg
v_reg	opencv2/core/hal/intrin_cpp.hpp	/^    v_reg(_Tp s0, _Tp s1, _Tp s2, _Tp s3,$/;"	f	struct:cv::v_reg
v_reg	opencv2/core/hal/intrin_cpp.hpp	/^    v_reg(const v_reg<_Tp, n> & r)$/;"	f	struct:cv::v_reg
v_reg	opencv2/core/hal/intrin_cpp.hpp	/^template<typename _Tp, int n> struct v_reg$/;"	s	namespace:cv
v_reinterpret_as_f32	opencv2/core/hal/intrin_sse.hpp	/^inline v_float32x4 v_reinterpret_as_f32(const v_float32x4& a) {return a; }$/;"	f	namespace:cv
v_reinterpret_as_f32	opencv2/core/hal/intrin_sse.hpp	/^inline v_float32x4 v_reinterpret_as_f32(const v_float64x2& a) {return v_float32x4(_mm_castpd_ps(a.val)); }$/;"	f	namespace:cv
v_reinterpret_as_f32	opencv2/core/hal/intrin_sse.hpp	/^inline v_float32x4 v_reinterpret_as_f32(const v_int64x2& a)$/;"	f	namespace:cv
v_reinterpret_as_f32	opencv2/core/hal/intrin_sse.hpp	/^inline v_float32x4 v_reinterpret_as_f32(const v_uint64x2& a)$/;"	f	namespace:cv
v_reinterpret_as_f64	opencv2/core/hal/intrin_sse.hpp	/^inline v_float64x2 v_reinterpret_as_f64(const v_float32x4& a) {return v_float64x2(_mm_castps_pd(a.val)); }$/;"	f	namespace:cv
v_reinterpret_as_f64	opencv2/core/hal/intrin_sse.hpp	/^inline v_float64x2 v_reinterpret_as_f64(const v_float64x2& a) {return a; }$/;"	f	namespace:cv
v_reinterpret_as_f64	opencv2/core/hal/intrin_sse.hpp	/^inline v_float64x2 v_reinterpret_as_f64(const v_int64x2& a)$/;"	f	namespace:cv
v_reinterpret_as_f64	opencv2/core/hal/intrin_sse.hpp	/^inline v_float64x2 v_reinterpret_as_f64(const v_uint64x2& a)$/;"	f	namespace:cv
v_reinterpret_as_int	opencv2/core/hal/intrin_cpp.hpp	/^    v_reinterpret_as_int(const v_reg<_Tp, n>& a)$/;"	f	namespace:cv
v_reinterpret_as_s64	opencv2/core/hal/intrin_sse.hpp	/^v_int64x2 v_reinterpret_as_s64(const _Tpvec& a) { return v_int64x2(a.val); }$/;"	f	namespace:cv
v_reinterpret_as_u64	opencv2/core/hal/intrin_sse.hpp	/^v_uint64x2 v_reinterpret_as_u64(const _Tpvec& a) { return v_uint64x2(a.val); }$/;"	f	namespace:cv
v_reinterpret_as_uint	opencv2/core/hal/intrin_cpp.hpp	/^    v_reinterpret_as_uint(const v_reg<_Tp, n>& a)$/;"	f	namespace:cv
v_round	opencv2/core/hal/intrin_cpp.hpp	/^template<int n> inline v_reg<int, n*2> v_round(const v_reg<double, n>& a)$/;"	f	namespace:cv
v_round	opencv2/core/hal/intrin_cpp.hpp	/^template<int n> inline v_reg<int, n> v_round(const v_reg<float, n>& a)$/;"	f	namespace:cv
v_round	opencv2/core/hal/intrin_neon.hpp	/^inline v_int32x4 v_round(const v_float32x4& a)$/;"	f	namespace:cv
v_round	opencv2/core/hal/intrin_neon.hpp	/^inline v_int32x4 v_round(const v_float64x2& a)$/;"	f	namespace:cv
v_round	opencv2/core/hal/intrin_sse.hpp	/^inline v_int32x4 v_round(const v_float32x4& a)$/;"	f	namespace:cv
v_round	opencv2/core/hal/intrin_sse.hpp	/^inline v_int32x4 v_round(const v_float64x2& a)$/;"	f	namespace:cv
v_rshr_pack	opencv2/core/hal/intrin_sse.hpp	/^v_int16x8 v_rshr_pack(const v_int32x4& a, const v_int32x4& b)$/;"	f	namespace:cv
v_rshr_pack	opencv2/core/hal/intrin_sse.hpp	/^v_int32x4 v_rshr_pack(const v_int64x2& a, const v_int64x2& b)$/;"	f	namespace:cv
v_rshr_pack	opencv2/core/hal/intrin_sse.hpp	/^v_int8x16 v_rshr_pack(const v_int16x8& a, const v_int16x8& b)$/;"	f	namespace:cv
v_rshr_pack	opencv2/core/hal/intrin_sse.hpp	/^v_uint16x8 v_rshr_pack(const v_uint32x4& a, const v_uint32x4& b)$/;"	f	namespace:cv
v_rshr_pack	opencv2/core/hal/intrin_sse.hpp	/^v_uint32x4 v_rshr_pack(const v_uint64x2& a, const v_uint64x2& b)$/;"	f	namespace:cv
v_rshr_pack	opencv2/core/hal/intrin_sse.hpp	/^v_uint8x16 v_rshr_pack(const v_uint16x8& a, const v_uint16x8& b)$/;"	f	namespace:cv
v_rshr_pack_store	opencv2/core/hal/intrin_sse.hpp	/^void v_rshr_pack_store(int* ptr, const v_int64x2& a)$/;"	f	namespace:cv
v_rshr_pack_store	opencv2/core/hal/intrin_sse.hpp	/^void v_rshr_pack_store(schar* ptr, const v_int16x8& a)$/;"	f	namespace:cv
v_rshr_pack_store	opencv2/core/hal/intrin_sse.hpp	/^void v_rshr_pack_store(short* ptr, const v_int32x4& a)$/;"	f	namespace:cv
v_rshr_pack_store	opencv2/core/hal/intrin_sse.hpp	/^void v_rshr_pack_store(uchar* ptr, const v_uint16x8& a)$/;"	f	namespace:cv
v_rshr_pack_store	opencv2/core/hal/intrin_sse.hpp	/^void v_rshr_pack_store(unsigned* ptr, const v_uint64x2& a)$/;"	f	namespace:cv
v_rshr_pack_store	opencv2/core/hal/intrin_sse.hpp	/^void v_rshr_pack_store(ushort* ptr, const v_uint32x4& a)$/;"	f	namespace:cv
v_rshr_pack_u	opencv2/core/hal/intrin_sse.hpp	/^v_uint16x8 v_rshr_pack_u(const v_int32x4& a, const v_int32x4& b)$/;"	f	namespace:cv
v_rshr_pack_u	opencv2/core/hal/intrin_sse.hpp	/^v_uint8x16 v_rshr_pack_u(const v_int16x8& a, const v_int16x8& b)$/;"	f	namespace:cv
v_rshr_pack_u_store	opencv2/core/hal/intrin_sse.hpp	/^void v_rshr_pack_u_store(uchar* ptr, const v_int16x8& a)$/;"	f	namespace:cv
v_rshr_pack_u_store	opencv2/core/hal/intrin_sse.hpp	/^void v_rshr_pack_u_store(ushort* ptr, const v_int32x4& a)$/;"	f	namespace:cv
v_select	opencv2/core/hal/intrin_cpp.hpp	/^template<typename _Tp, int n> inline v_reg<_Tp, n> v_select(const v_reg<_Tp, n>& mask,$/;"	f	namespace:cv
v_select_si128	opencv2/core/hal/intrin_sse.hpp	/^inline __m128i v_select_si128(__m128i mask, __m128i a, __m128i b)$/;"	f	namespace:cv
v_setall_s64	opencv2/core/hal/intrin_sse.hpp	/^inline v_int64x2 v_setall_s64(int64 val) { return v_int64x2(val, val); }$/;"	f	namespace:cv
v_setall_u64	opencv2/core/hal/intrin_sse.hpp	/^inline v_uint64x2 v_setall_u64(uint64 val) { return v_uint64x2(val, val); }$/;"	f	namespace:cv
v_setzero_s64	opencv2/core/hal/intrin_sse.hpp	/^inline v_int64x2 v_setzero_s64() { return v_int64x2(_mm_setzero_si128()); }$/;"	f	namespace:cv
v_setzero_u64	opencv2/core/hal/intrin_sse.hpp	/^inline v_uint64x2 v_setzero_u64() { return v_uint64x2(_mm_setzero_si128()); }$/;"	f	namespace:cv
v_sign_epi64	opencv2/core/hal/intrin_sse.hpp	/^inline __m128i v_sign_epi64(__m128i a)$/;"	f	namespace:cv
v_signmask	opencv2/core/hal/intrin_cpp.hpp	/^template<typename _Tp, int n> inline int v_signmask(const v_reg<_Tp, n>& a)$/;"	f	namespace:cv
v_signmask	opencv2/core/hal/intrin_neon.hpp	/^inline int v_signmask(const v_float32x4& a)$/;"	f	namespace:cv
v_signmask	opencv2/core/hal/intrin_neon.hpp	/^inline int v_signmask(const v_float64x2& a)$/;"	f	namespace:cv
v_signmask	opencv2/core/hal/intrin_neon.hpp	/^inline int v_signmask(const v_int16x8& a)$/;"	f	namespace:cv
v_signmask	opencv2/core/hal/intrin_neon.hpp	/^inline int v_signmask(const v_int32x4& a)$/;"	f	namespace:cv
v_signmask	opencv2/core/hal/intrin_neon.hpp	/^inline int v_signmask(const v_int8x16& a)$/;"	f	namespace:cv
v_signmask	opencv2/core/hal/intrin_neon.hpp	/^inline int v_signmask(const v_uint16x8& a)$/;"	f	namespace:cv
v_signmask	opencv2/core/hal/intrin_neon.hpp	/^inline int v_signmask(const v_uint32x4& a)$/;"	f	namespace:cv
v_signmask	opencv2/core/hal/intrin_neon.hpp	/^inline int v_signmask(const v_uint64x2& a)$/;"	f	namespace:cv
v_signmask	opencv2/core/hal/intrin_neon.hpp	/^inline int v_signmask(const v_uint8x16& a)$/;"	f	namespace:cv
v_sqr_magnitude	opencv2/core/hal/intrin_cpp.hpp	/^inline v_reg<_Tp, n> v_sqr_magnitude(const v_reg<_Tp, n>& a, const v_reg<_Tp, n>& b)$/;"	f	namespace:cv
v_sqr_magnitude	opencv2/core/hal/intrin_neon.hpp	/^inline v_float32x4 v_sqr_magnitude(const v_float32x4& a, const v_float32x4& b)$/;"	f	namespace:cv
v_sqr_magnitude	opencv2/core/hal/intrin_neon.hpp	/^inline v_float64x2 v_sqr_magnitude(const v_float64x2& a, const v_float64x2& b)$/;"	f	namespace:cv
v_sqrt	opencv2/core/hal/intrin_neon.hpp	/^inline v_float32x4 v_sqrt(const v_float32x4& x)$/;"	f	namespace:cv
v_sqrt	opencv2/core/hal/intrin_neon.hpp	/^inline v_float64x2 v_sqrt(const v_float64x2& x)$/;"	f	namespace:cv
v_sqrt	opencv2/core/hal/intrin_sse.hpp	/^inline v_float32x4 v_sqrt(const v_float32x4& x)$/;"	f	namespace:cv
v_sqrt	opencv2/core/hal/intrin_sse.hpp	/^inline v_float64x2 v_sqrt(const v_float64x2& x)$/;"	f	namespace:cv
v_srai_epi64	opencv2/core/hal/intrin_sse.hpp	/^inline __m128i v_srai_epi64(__m128i a, int imm)$/;"	f	namespace:cv
v_store	opencv2/core/hal/intrin_cpp.hpp	/^inline void v_store(_Tp* ptr, const v_reg<_Tp, n>& a)$/;"	f	namespace:cv
v_store_aligned	opencv2/core/hal/intrin_cpp.hpp	/^inline void v_store_aligned(_Tp* ptr, const v_reg<_Tp, n>& a)$/;"	f	namespace:cv
v_store_f16	opencv2/core/hal/intrin_neon.hpp	/^inline void v_store_f16(short* ptr, v_float16x4& a)$/;"	f	namespace:cv
v_store_f16	opencv2/core/hal/intrin_sse.hpp	/^inline void v_store_f16(short* ptr, v_float16x4& a)$/;"	f	namespace:cv
v_store_high	opencv2/core/hal/intrin_cpp.hpp	/^inline void v_store_high(_Tp* ptr, const v_reg<_Tp, n>& a)$/;"	f	namespace:cv
v_store_interleave	opencv2/core/hal/intrin_cpp.hpp	/^inline void v_store_interleave( _Tp* ptr, const v_reg<_Tp, n>& a,$/;"	f	namespace:cv
v_store_interleave	opencv2/core/hal/intrin_cpp.hpp	/^template<typename _Tp, int n> inline void v_store_interleave( _Tp* ptr, const v_reg<_Tp, n>& a,$/;"	f	namespace:cv
v_store_interleave	opencv2/core/hal/intrin_sse.hpp	/^inline void v_store_interleave( short* ptr, const v_int16x8& a, const v_int16x8& b )$/;"	f	namespace:cv
v_store_interleave	opencv2/core/hal/intrin_sse.hpp	/^inline void v_store_interleave( uchar* ptr, const v_uint8x16& a, const v_uint8x16& b,$/;"	f	namespace:cv
v_store_interleave	opencv2/core/hal/intrin_sse.hpp	/^inline void v_store_interleave( unsigned* ptr, const v_uint32x4& a, const v_uint32x4& b,$/;"	f	namespace:cv
v_store_interleave	opencv2/core/hal/intrin_sse.hpp	/^inline void v_store_interleave( ushort* ptr, const v_uint16x8& a, const v_uint16x8& b,$/;"	f	namespace:cv
v_store_interleave	opencv2/core/hal/intrin_sse.hpp	/^inline void v_store_interleave( ushort* ptr, const v_uint16x8& a,$/;"	f	namespace:cv
v_store_interleave	opencv2/core/hal/intrin_sse.hpp	/^inline void v_store_interleave(float* ptr, const v_float32x4& a, const v_float32x4& b)$/;"	f	namespace:cv
v_store_interleave	opencv2/core/hal/intrin_sse.hpp	/^inline void v_store_interleave(unsigned* ptr, const v_uint32x4& a, const v_uint32x4& b,$/;"	f	namespace:cv
v_store_low	opencv2/core/hal/intrin_cpp.hpp	/^inline void v_store_low(_Tp* ptr, const v_reg<_Tp, n>& a)$/;"	f	namespace:cv
v_transpose4x4	opencv2/core/hal/intrin_cpp.hpp	/^inline void v_transpose4x4( v_reg<_Tp, 4>& a0, const v_reg<_Tp, 4>& a1,$/;"	f	namespace:cv
v_trunc	opencv2/core/hal/intrin_cpp.hpp	/^template<int n> inline v_reg<int, n*2> v_trunc(const v_reg<double, n>& a)$/;"	f	namespace:cv
v_trunc	opencv2/core/hal/intrin_cpp.hpp	/^template<int n> inline v_reg<int, n> v_trunc(const v_reg<float, n>& a)$/;"	f	namespace:cv
v_trunc	opencv2/core/hal/intrin_neon.hpp	/^inline v_int32x4 v_trunc(const v_float32x4& a)$/;"	f	namespace:cv
v_trunc	opencv2/core/hal/intrin_neon.hpp	/^inline v_int32x4 v_trunc(const v_float64x2& a)$/;"	f	namespace:cv
v_trunc	opencv2/core/hal/intrin_sse.hpp	/^inline v_int32x4 v_trunc(const v_float32x4& a)$/;"	f	namespace:cv
v_trunc	opencv2/core/hal/intrin_sse.hpp	/^inline v_int32x4 v_trunc(const v_float64x2& a)$/;"	f	namespace:cv
v_uint16x8	opencv2/core/hal/intrin_cpp.hpp	/^typedef v_reg<ushort, 8> v_uint16x8;$/;"	t	namespace:cv
v_uint16x8	opencv2/core/hal/intrin_neon.hpp	/^    explicit v_uint16x8(uint16x8_t v) : val(v) {}$/;"	f	struct:cv::v_uint16x8
v_uint16x8	opencv2/core/hal/intrin_neon.hpp	/^    v_uint16x8() {}$/;"	f	struct:cv::v_uint16x8
v_uint16x8	opencv2/core/hal/intrin_neon.hpp	/^    v_uint16x8(ushort v0, ushort v1, ushort v2, ushort v3, ushort v4, ushort v5, ushort v6, ushort v7)$/;"	f	struct:cv::v_uint16x8
v_uint16x8	opencv2/core/hal/intrin_neon.hpp	/^struct v_uint16x8$/;"	s	namespace:cv
v_uint16x8	opencv2/core/hal/intrin_sse.hpp	/^    explicit v_uint16x8(__m128i v) : val(v) {}$/;"	f	struct:cv::v_uint16x8
v_uint16x8	opencv2/core/hal/intrin_sse.hpp	/^    v_uint16x8() {}$/;"	f	struct:cv::v_uint16x8
v_uint16x8	opencv2/core/hal/intrin_sse.hpp	/^    v_uint16x8(ushort v0, ushort v1, ushort v2, ushort v3, ushort v4, ushort v5, ushort v6, ushort v7)$/;"	f	struct:cv::v_uint16x8
v_uint16x8	opencv2/core/hal/intrin_sse.hpp	/^struct v_uint16x8$/;"	s	namespace:cv
v_uint32x4	opencv2/core/hal/intrin_cpp.hpp	/^typedef v_reg<unsigned, 4> v_uint32x4;$/;"	t	namespace:cv
v_uint32x4	opencv2/core/hal/intrin_neon.hpp	/^    explicit v_uint32x4(uint32x4_t v) : val(v) {}$/;"	f	struct:cv::v_uint32x4
v_uint32x4	opencv2/core/hal/intrin_neon.hpp	/^    v_uint32x4() {}$/;"	f	struct:cv::v_uint32x4
v_uint32x4	opencv2/core/hal/intrin_neon.hpp	/^    v_uint32x4(unsigned v0, unsigned v1, unsigned v2, unsigned v3)$/;"	f	struct:cv::v_uint32x4
v_uint32x4	opencv2/core/hal/intrin_neon.hpp	/^struct v_uint32x4$/;"	s	namespace:cv
v_uint32x4	opencv2/core/hal/intrin_sse.hpp	/^    explicit v_uint32x4(__m128i v) : val(v) {}$/;"	f	struct:cv::v_uint32x4
v_uint32x4	opencv2/core/hal/intrin_sse.hpp	/^    v_uint32x4() {}$/;"	f	struct:cv::v_uint32x4
v_uint32x4	opencv2/core/hal/intrin_sse.hpp	/^    v_uint32x4(unsigned v0, unsigned v1, unsigned v2, unsigned v3)$/;"	f	struct:cv::v_uint32x4
v_uint32x4	opencv2/core/hal/intrin_sse.hpp	/^struct v_uint32x4$/;"	s	namespace:cv
v_uint64x2	opencv2/core/hal/intrin_cpp.hpp	/^typedef v_reg<uint64, 2> v_uint64x2;$/;"	t	namespace:cv
v_uint64x2	opencv2/core/hal/intrin_neon.hpp	/^    explicit v_uint64x2(uint64x2_t v) : val(v) {}$/;"	f	struct:cv::v_uint64x2
v_uint64x2	opencv2/core/hal/intrin_neon.hpp	/^    v_uint64x2() {}$/;"	f	struct:cv::v_uint64x2
v_uint64x2	opencv2/core/hal/intrin_neon.hpp	/^    v_uint64x2(unsigned v0, unsigned v1)$/;"	f	struct:cv::v_uint64x2
v_uint64x2	opencv2/core/hal/intrin_neon.hpp	/^struct v_uint64x2$/;"	s	namespace:cv
v_uint64x2	opencv2/core/hal/intrin_sse.hpp	/^    explicit v_uint64x2(__m128i v) : val(v) {}$/;"	f	struct:cv::v_uint64x2
v_uint64x2	opencv2/core/hal/intrin_sse.hpp	/^    v_uint64x2() {}$/;"	f	struct:cv::v_uint64x2
v_uint64x2	opencv2/core/hal/intrin_sse.hpp	/^    v_uint64x2(uint64 v0, uint64 v1)$/;"	f	struct:cv::v_uint64x2
v_uint64x2	opencv2/core/hal/intrin_sse.hpp	/^struct v_uint64x2$/;"	s	namespace:cv
v_uint8x16	opencv2/core/hal/intrin_cpp.hpp	/^typedef v_reg<uchar, 16> v_uint8x16;$/;"	t	namespace:cv
v_uint8x16	opencv2/core/hal/intrin_neon.hpp	/^    explicit v_uint8x16(uint8x16_t v) : val(v) {}$/;"	f	struct:cv::v_uint8x16
v_uint8x16	opencv2/core/hal/intrin_neon.hpp	/^    v_uint8x16() {}$/;"	f	struct:cv::v_uint8x16
v_uint8x16	opencv2/core/hal/intrin_neon.hpp	/^    v_uint8x16(uchar v0, uchar v1, uchar v2, uchar v3, uchar v4, uchar v5, uchar v6, uchar v7,$/;"	f	struct:cv::v_uint8x16
v_uint8x16	opencv2/core/hal/intrin_neon.hpp	/^struct v_uint8x16$/;"	s	namespace:cv
v_uint8x16	opencv2/core/hal/intrin_sse.hpp	/^    explicit v_uint8x16(__m128i v) : val(v) {}$/;"	f	struct:cv::v_uint8x16
v_uint8x16	opencv2/core/hal/intrin_sse.hpp	/^    v_uint8x16() {}$/;"	f	struct:cv::v_uint8x16
v_uint8x16	opencv2/core/hal/intrin_sse.hpp	/^    v_uint8x16(uchar v0, uchar v1, uchar v2, uchar v3, uchar v4, uchar v5, uchar v6, uchar v7,$/;"	f	struct:cv::v_uint8x16
v_uint8x16	opencv2/core/hal/intrin_sse.hpp	/^struct v_uint8x16$/;"	s	namespace:cv
v_zip	opencv2/core/hal/intrin_cpp.hpp	/^template<typename _Tp, int n> inline void v_zip( const v_reg<_Tp, n>& a0, const v_reg<_Tp, n>& a1,$/;"	f	namespace:cv
va_intel	opencv2/core/va_intel.hpp	/^namespace cv { namespace va_intel {$/;"	n	namespace:cv
vabsdiff2	opencv2/core/cuda/simd_functions.hpp	/^    static __device__ __forceinline__ unsigned int vabsdiff2(unsigned int a, unsigned int b)$/;"	f	namespace:cv::cuda::device
vabsdiff2	opencv2/cudev/util/simd_functions.hpp	/^__device__ __forceinline__ uint vabsdiff2(uint a, uint b)$/;"	f	namespace:cv::cudev
vabsdiff4	opencv2/core/cuda/simd_functions.hpp	/^    static __device__ __forceinline__ unsigned int vabsdiff4(unsigned int a, unsigned int b)$/;"	f	namespace:cv::cuda::device
vabsdiff4	opencv2/cudev/util/simd_functions.hpp	/^__device__ __forceinline__ uint vabsdiff4(uint a, uint b)$/;"	f	namespace:cv::cudev
vadd2	opencv2/core/cuda/simd_functions.hpp	/^    static __device__ __forceinline__ unsigned int vadd2(unsigned int a, unsigned int b)$/;"	f	namespace:cv::cuda::device
vadd2	opencv2/cudev/util/simd_functions.hpp	/^__device__ __forceinline__ uint vadd2(uint a, uint b)$/;"	f	namespace:cv::cudev
vadd4	opencv2/core/cuda/simd_functions.hpp	/^    static __device__ __forceinline__ unsigned int vadd4(unsigned int a, unsigned int b)$/;"	f	namespace:cv::cuda::device
vadd4	opencv2/cudev/util/simd_functions.hpp	/^__device__ __forceinline__ uint vadd4(uint a, uint b)$/;"	f	namespace:cv::cudev
val	opencv2/core/base.hpp	/^     template <> struct CV_StaticAssert_failed<true> { enum { val = 1 }; };$/;"	e	enum:cv::CV_StaticAssert_failed::__anon314
val	opencv2/core/cuda/border_interpolate.hpp	/^        D val;$/;"	m	struct:cv::cuda::device::BorderReader
val	opencv2/core/cuda/border_interpolate.hpp	/^        D val;$/;"	m	struct:cv::cuda::device::BrdColConstant
val	opencv2/core/cuda/border_interpolate.hpp	/^        D val;$/;"	m	struct:cv::cuda::device::BrdConstant
val	opencv2/core/cuda/border_interpolate.hpp	/^        D val;$/;"	m	struct:cv::cuda::device::BrdRowConstant
val	opencv2/core/hal/intrin_neon.hpp	/^    float16x4_t val;$/;"	m	struct:cv::v_float16x4
val	opencv2/core/hal/intrin_neon.hpp	/^    float32x4_t val;$/;"	m	struct:cv::v_float32x4
val	opencv2/core/hal/intrin_neon.hpp	/^    float64x2_t val;$/;"	m	struct:cv::v_float64x2
val	opencv2/core/hal/intrin_neon.hpp	/^    int16x8_t val;$/;"	m	struct:cv::v_int16x8
val	opencv2/core/hal/intrin_neon.hpp	/^    int32x4_t val;$/;"	m	struct:cv::v_int32x4
val	opencv2/core/hal/intrin_neon.hpp	/^    int64x2_t val;$/;"	m	struct:cv::v_int64x2
val	opencv2/core/hal/intrin_neon.hpp	/^    int8x16_t val;$/;"	m	struct:cv::v_int8x16
val	opencv2/core/hal/intrin_neon.hpp	/^    uint16x8_t val;$/;"	m	struct:cv::v_uint16x8
val	opencv2/core/hal/intrin_neon.hpp	/^    uint32x4_t val;$/;"	m	struct:cv::v_uint32x4
val	opencv2/core/hal/intrin_neon.hpp	/^    uint64x2_t val;$/;"	m	struct:cv::v_uint64x2
val	opencv2/core/hal/intrin_neon.hpp	/^    uint8x16_t val;$/;"	m	struct:cv::v_uint8x16
val	opencv2/core/hal/intrin_sse.hpp	/^    __m128 val;$/;"	m	struct:cv::v_float32x4
val	opencv2/core/hal/intrin_sse.hpp	/^    __m128d val;$/;"	m	struct:cv::v_float64x2
val	opencv2/core/hal/intrin_sse.hpp	/^    __m128i val;$/;"	m	struct:cv::v_float16x4
val	opencv2/core/hal/intrin_sse.hpp	/^    __m128i val;$/;"	m	struct:cv::v_int16x8
val	opencv2/core/hal/intrin_sse.hpp	/^    __m128i val;$/;"	m	struct:cv::v_int32x4
val	opencv2/core/hal/intrin_sse.hpp	/^    __m128i val;$/;"	m	struct:cv::v_int64x2
val	opencv2/core/hal/intrin_sse.hpp	/^    __m128i val;$/;"	m	struct:cv::v_int8x16
val	opencv2/core/hal/intrin_sse.hpp	/^    __m128i val;$/;"	m	struct:cv::v_uint16x8
val	opencv2/core/hal/intrin_sse.hpp	/^    __m128i val;$/;"	m	struct:cv::v_uint32x4
val	opencv2/core/hal/intrin_sse.hpp	/^    __m128i val;$/;"	m	struct:cv::v_uint64x2
val	opencv2/core/hal/intrin_sse.hpp	/^    __m128i val;$/;"	m	struct:cv::v_uint8x16
val	opencv2/core/matx.hpp	/^    _Tp val[m*n]; \/\/< matrix elements$/;"	m	class:cv::Matx
val	opencv2/core/types_c.h	/^    double val[4];$/;"	m	struct:CvScalar
val	opencv2/cudev/ptr2d/extrapolation.hpp	/^    typename PtrTraits<SrcPtr>::value_type val;$/;"	m	struct:cv::cudev::BrdConstant
val_type	opencv2/cudev/grid/detail/reduce.hpp	/^        typedef typename MakeVec<R, 2>::type val_type;$/;"	t	struct:cv::cudev::grid_reduce_detail::AtomicUnroll
val_type	opencv2/cudev/grid/detail/reduce.hpp	/^        typedef typename MakeVec<R, 3>::type val_type;$/;"	t	struct:cv::cudev::grid_reduce_detail::AtomicUnroll
val_type	opencv2/cudev/grid/detail/reduce.hpp	/^        typedef typename MakeVec<R, 4>::type val_type;$/;"	t	struct:cv::cudev::grid_reduce_detail::AtomicUnroll
validGeometry	opencv2/imgproc.hpp	/^    bool validGeometry;$/;"	m	class:cv::Subdiv2D
valid_entry_status	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^	  valid_entry_status,$/;"	e	enum:__gnu_pbds::detail::PB_DS_GP_HASH_NAME::entry_status
valid_prefix	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      valid_prefix() const$/;"	f	class:__gnu_pbds::detail::pat_trie_base::_Node_citer
valoffset	opencv2/core/types_c.h	/^    int valoffset;$/;"	m	struct:CvSparseMat
vals_	opencv2/flann/random.h	/^    std::vector<int> vals_;$/;"	m	class:cvflann::UniqueRandom
value	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      value() const$/;"	f	struct:__gnu_pbds::detail::pat_trie_base::_Leaf
value	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      value()$/;"	f	struct:__gnu_pbds::detail::pat_trie_base::_Leaf
value	5/ext/pb_ds/detail/type_utils.hpp	/^	    value = 0$/;"	e	enum:__gnu_pbds::detail::is_pair::is_pair_imp::__anon44
value	5/ext/pb_ds/detail/type_utils.hpp	/^	    value = 1$/;"	e	enum:__gnu_pbds::detail::is_pair::is_pair_imp::__anon45
value	5/ext/pb_ds/detail/type_utils.hpp	/^	  value = is_const<T>::value && is_pointer<T>::value$/;"	e	enum:__gnu_pbds::detail::is_const_pointer::__anon41
value	5/ext/pb_ds/detail/type_utils.hpp	/^	  value = is_const<T>::value && is_reference<T>::value$/;"	e	enum:__gnu_pbds::detail::is_const_reference::__anon42
value	5/ext/pb_ds/detail/type_utils.hpp	/^	  value = is_fundamental<typename remove_const<T>::type>::value $/;"	e	enum:__gnu_pbds::detail::is_simple::__anon43
value	5/ext/pb_ds/detail/type_utils.hpp	/^	  value = is_pair_imp<T>::value$/;"	e	enum:__gnu_pbds::detail::is_pair::__anon46
value	cpp_src/locale_facets.h	/^    enum part { none, space, symbol, sign, value };$/;"	e	enum:std::money_base::part
value	cpp_src/stl_function.h	/^      typename _Operation::first_argument_type value;$/;"	m	class:std::binder1st
value	cpp_src/stl_function.h	/^      typename _Operation::second_argument_type value;$/;"	m	class:std::binder2nd
value	opencv2/core/cuda/detail/reduce.hpp	/^            enum { value = ((N != 0) && !(N & (N - 1))) };$/;"	e	enum:cv::cuda::device::reduce_detail::IsPowerOf2::__anon251
value	opencv2/core/cuda/detail/reduce_key_val.hpp	/^            enum { value = ((N != 0) && !(N & (N - 1))) };$/;"	e	enum:cv::cuda::device::reduce_key_val_detail::IsPowerOf2::__anon249
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^            enum { value = 0 };$/;"	e	enum:cv::cuda::device::type_traits_detail::UnConst::__anon240
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^            enum { value = 0 };$/;"	e	enum:cv::cuda::device::type_traits_detail::UnVolatile::__anon243
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^            enum { value = 1 };$/;"	e	enum:cv::cuda::device::type_traits_detail::UnConst::__anon241
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^            enum { value = 1 };$/;"	e	enum:cv::cuda::device::type_traits_detail::UnConst::__anon242
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^            enum { value = 1 };$/;"	e	enum:cv::cuda::device::type_traits_detail::UnVolatile::__anon244
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^            enum { value = 1 };$/;"	e	enum:cv::cuda::device::type_traits_detail::UnVolatile::__anon245
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^            enum { value = false };$/;"	e	enum:cv::cuda::device::type_traits_detail::PointerTraits::__anon237
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^            enum { value = false };$/;"	e	enum:cv::cuda::device::type_traits_detail::ReferenceTraits::__anon235
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^            enum { value = true };$/;"	e	enum:cv::cuda::device::type_traits_detail::PointerTraits::__anon238
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^            enum { value = true };$/;"	e	enum:cv::cuda::device::type_traits_detail::PointerTraits::__anon239
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^            enum { value = true };$/;"	e	enum:cv::cuda::device::type_traits_detail::ReferenceTraits::__anon236
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsFloat<double> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsFloat::__anon193
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsFloat<float> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsFloat::__anon192
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsIntegral<bool> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsIntegral::__anon190
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsIntegral<char> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsIntegral::__anon189
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsSignedIntergral<char1> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsSignedIntergral::__anon176
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsSignedIntergral<int1> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsSignedIntergral::__anon180
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsSignedIntergral<int> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsSignedIntergral::__anon179
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsSignedIntergral<schar> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsSignedIntergral::__anon175
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsSignedIntergral<short1> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsSignedIntergral::__anon178
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsSignedIntergral<short> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsSignedIntergral::__anon177
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsUnsignedIntegral<uchar1> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsUnsignedIntegral::__anon183
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsUnsignedIntegral<uchar> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsUnsignedIntegral::__anon182
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsUnsignedIntegral<uint1> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsUnsignedIntegral::__anon187
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsUnsignedIntegral<uint> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsUnsignedIntegral::__anon186
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsUnsignedIntegral<ushort1> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsUnsignedIntegral::__anon185
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsUnsignedIntegral<ushort> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsUnsignedIntegral::__anon184
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<char1> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsVec::__anon200
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<char2> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsVec::__anon201
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<char3> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsVec::__anon202
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<char4> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsVec::__anon203
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<char8> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsVec::__anon204
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<double1> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsVec::__anon230
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<double2> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsVec::__anon231
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<double3> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsVec::__anon232
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<double4> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsVec::__anon233
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<double8> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsVec::__anon234
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<float1> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsVec::__anon225
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<float2> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsVec::__anon226
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<float3> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsVec::__anon227
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<float4> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsVec::__anon228
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<float8> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsVec::__anon229
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<int1> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsVec::__anon220
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<int2> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsVec::__anon221
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<int3> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsVec::__anon222
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<int4> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsVec::__anon223
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<int8> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsVec::__anon224
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<short1> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsVec::__anon210
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<short2> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsVec::__anon211
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<short3> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsVec::__anon212
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<short4> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsVec::__anon213
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<short8> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsVec::__anon214
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<uchar1> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsVec::__anon195
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<uchar2> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsVec::__anon196
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<uchar3> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsVec::__anon197
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<uchar4> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsVec::__anon198
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<uchar8> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsVec::__anon199
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<uint1> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsVec::__anon215
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<uint2> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsVec::__anon216
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<uint3> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsVec::__anon217
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<uint4> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsVec::__anon218
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<uint8> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsVec::__anon219
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<ushort1> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsVec::__anon205
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<ushort2> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsVec::__anon206
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<ushort3> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsVec::__anon207
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<ushort4> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsVec::__anon208
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <> struct IsVec<ushort8> { enum {value = 1}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsVec::__anon209
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <typename T> struct IsFloat { enum {value = 0}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsFloat::__anon191
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <typename T> struct IsIntegral { enum {value = IsSignedIntergral<T>::value || IsUnsignedIntegral<T>::value}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsIntegral::__anon188
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <typename T> struct IsSignedIntergral { enum {value = 0}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsSignedIntergral::__anon174
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <typename T> struct IsUnsignedIntegral { enum {value = 0}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsUnsignedIntegral::__anon181
value	opencv2/core/cuda/detail/type_traits_detail.hpp	/^        template <typename T> struct IsVec { enum {value = 0}; };$/;"	e	enum:cv::cuda::device::type_traits_detail::IsVec::__anon194
value	opencv2/core/cuda/functional.hpp	/^        enum { value = (sizeof(check(makeF())) == sizeof(Yes)) };$/;"	e	enum:cv::cuda::device::IsBinaryFunction::__anon157
value	opencv2/core/cuda/functional.hpp	/^        enum { value = (sizeof(check(makeF())) == sizeof(Yes)) };$/;"	e	enum:cv::cuda::device::IsUnaryFunction::__anon156
value	opencv2/core/cuda/type_traits.hpp	/^        enum {value = type_traits_detail::IsIntegral<T>::value || type_traits_detail::IsFloat<T>::value ||$/;"	e	enum:cv::cuda::device::IsSimpleParameter::__anon261
value	opencv2/core/mat.inl.hpp	/^_Tp SparseMat::value(const int* idx, size_t* hashval) const$/;"	f	class:cv::SparseMat
value	opencv2/core/mat.inl.hpp	/^_Tp SparseMat::value(int i0, int i1, int i2, size_t* hashval) const$/;"	f	class:cv::SparseMat
value	opencv2/core/mat.inl.hpp	/^_Tp SparseMat::value(int i0, int i1, size_t* hashval) const$/;"	f	class:cv::SparseMat
value	opencv2/core/mat.inl.hpp	/^_Tp SparseMat::value(int i0, size_t* hashval) const$/;"	f	class:cv::SparseMat
value	opencv2/core/mat.inl.hpp	/^_Tp& SparseMat::value(Node* n)$/;"	f	class:cv::SparseMat
value	opencv2/core/mat.inl.hpp	/^_Tp& SparseMatIterator::value() const$/;"	f	class:cv::SparseMatIterator
value	opencv2/core/mat.inl.hpp	/^const _Tp& SparseMat::value(const Node* n) const$/;"	f	class:cv::SparseMat
value	opencv2/core/mat.inl.hpp	/^const _Tp& SparseMatConstIterator::value() const$/;"	f	class:cv::SparseMatConstIterator
value	opencv2/core/traits.hpp	/^        value = DataType<_Tp>::depth,$/;"	e	enum:cv::DataDepth::__anon292
value	opencv2/cudev/functional/functional.hpp	/^    enum { value = (sizeof(check(makeF())) == sizeof(Yes)) };$/;"	e	enum:cv::cudev::IsBinaryFunction::__anon395
value	opencv2/cudev/functional/functional.hpp	/^    enum { value = (sizeof(check(makeF())) == sizeof(Yes)) };$/;"	e	enum:cv::cudev::IsUnaryFunction::__anon394
value	opencv2/cudev/ptr2d/constant.hpp	/^    T value;$/;"	m	struct:cv::cudev::ConstantPtr
value	opencv2/cudev/util/detail/type_traits.hpp	/^        enum { value = 0 };$/;"	e	enum:cv::cudev::type_traits_detail::PointerTraits::__anon460
value	opencv2/cudev/util/detail/type_traits.hpp	/^        enum { value = 0 };$/;"	e	enum:cv::cudev::type_traits_detail::ReferenceTraits::__anon458
value	opencv2/cudev/util/detail/type_traits.hpp	/^        enum { value = 0 };$/;"	e	enum:cv::cudev::type_traits_detail::UnConst::__anon463
value	opencv2/cudev/util/detail/type_traits.hpp	/^        enum { value = 0 };$/;"	e	enum:cv::cudev::type_traits_detail::UnVolatile::__anon466
value	opencv2/cudev/util/detail/type_traits.hpp	/^        enum { value = 1 };$/;"	e	enum:cv::cudev::type_traits_detail::PointerTraits::__anon461
value	opencv2/cudev/util/detail/type_traits.hpp	/^        enum { value = 1 };$/;"	e	enum:cv::cudev::type_traits_detail::PointerTraits::__anon462
value	opencv2/cudev/util/detail/type_traits.hpp	/^        enum { value = 1 };$/;"	e	enum:cv::cudev::type_traits_detail::ReferenceTraits::__anon459
value	opencv2/cudev/util/detail/type_traits.hpp	/^        enum { value = 1 };$/;"	e	enum:cv::cudev::type_traits_detail::UnConst::__anon464
value	opencv2/cudev/util/detail/type_traits.hpp	/^        enum { value = 1 };$/;"	e	enum:cv::cudev::type_traits_detail::UnConst::__anon465
value	opencv2/cudev/util/detail/type_traits.hpp	/^        enum { value = 1 };$/;"	e	enum:cv::cudev::type_traits_detail::UnVolatile::__anon467
value	opencv2/cudev/util/detail/type_traits.hpp	/^        enum { value = 1 };$/;"	e	enum:cv::cudev::type_traits_detail::UnVolatile::__anon468
value	opencv2/cudev/util/detail/type_traits.hpp	/^        enum { value = IsIntegral<T>::value$/;"	e	enum:cv::cudev::type_traits_detail::IsSimpleParameter::__anon469
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsFloat<double> { enum {value = 1}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsFloat::__anon424
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsFloat<float> { enum {value = 1}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsFloat::__anon423
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsIntegral<bool> { enum {value = 1}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsIntegral::__anon421
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsIntegral<char> { enum {value = 1}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsIntegral::__anon420
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsSignedIntergral<int> { enum {value = 1}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsSignedIntergral::__anon414
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsSignedIntergral<schar> { enum {value = 1}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsSignedIntergral::__anon412
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsSignedIntergral<short> { enum {value = 1}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsSignedIntergral::__anon413
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsUnsignedIntegral<uchar> { enum {value = 1}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsUnsignedIntegral::__anon416
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsUnsignedIntegral<uint> { enum {value = 1}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsUnsignedIntegral::__anon418
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsUnsignedIntegral<ushort> { enum {value = 1}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsUnsignedIntegral::__anon417
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<char1> { enum {value = 1}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsVec::__anon430
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<char2> { enum {value = 1}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsVec::__anon431
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<char3> { enum {value = 1}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsVec::__anon432
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<char4> { enum {value = 1}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsVec::__anon433
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<double1> { enum {value = 1}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsVec::__anon454
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<double2> { enum {value = 1}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsVec::__anon455
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<double3> { enum {value = 1}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsVec::__anon456
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<double4> { enum {value = 1}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsVec::__anon457
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<float1> { enum {value = 1}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsVec::__anon450
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<float2> { enum {value = 1}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsVec::__anon451
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<float3> { enum {value = 1}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsVec::__anon452
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<float4> { enum {value = 1}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsVec::__anon453
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<int1> { enum {value = 1}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsVec::__anon446
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<int2> { enum {value = 1}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsVec::__anon447
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<int3> { enum {value = 1}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsVec::__anon448
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<int4> { enum {value = 1}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsVec::__anon449
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<short1> { enum {value = 1}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsVec::__anon438
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<short2> { enum {value = 1}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsVec::__anon439
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<short3> { enum {value = 1}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsVec::__anon440
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<short4> { enum {value = 1}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsVec::__anon441
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<uchar1> { enum {value = 1}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsVec::__anon426
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<uchar2> { enum {value = 1}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsVec::__anon427
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<uchar3> { enum {value = 1}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsVec::__anon428
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<uchar4> { enum {value = 1}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsVec::__anon429
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<uint1> { enum {value = 1}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsVec::__anon442
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<uint2> { enum {value = 1}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsVec::__anon443
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<uint3> { enum {value = 1}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsVec::__anon444
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<uint4> { enum {value = 1}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsVec::__anon445
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<ushort1> { enum {value = 1}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsVec::__anon434
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<ushort2> { enum {value = 1}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsVec::__anon435
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<ushort3> { enum {value = 1}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsVec::__anon436
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <> struct IsVec<ushort4> { enum {value = 1}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsVec::__anon437
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <typename T> struct IsFloat { enum {value = 0}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsFloat::__anon422
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <typename T> struct IsIntegral { enum {value = IsSignedIntergral<T>::value || IsUnsignedIntegral<T>::value}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsIntegral::__anon419
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <typename T> struct IsSignedIntergral { enum {value = 0}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsSignedIntergral::__anon411
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <typename T> struct IsUnsignedIntegral { enum {value = 0}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsUnsignedIntegral::__anon415
value	opencv2/cudev/util/detail/type_traits.hpp	/^    template <typename T> struct IsVec { enum {value = 0}; };$/;"	e	enum:cv::cudev::type_traits_detail::IsVec::__anon425
value	opencv2/cudev/util/type_traits.hpp	/^    enum { value = ((N != 0) && !(N & (N - 1))) };$/;"	e	enum:cv::cudev::IsPowerOf2::__anon483
value	opencv2/cudev/util/type_traits.hpp	/^    enum { value = (1 << (COUNT - 1) < N) ? COUNT : COUNT - 1 };$/;"	e	enum:cv::cudev::Log2::__anon482
value	opencv2/cudev/util/type_traits.hpp	/^    enum { value = 0 };$/;"	e	enum:cv::cudev::TypesEquals::__anon484
value	opencv2/cudev/util/type_traits.hpp	/^    enum { value = 1 };$/;"	e	enum:cv::cudev::TypesEquals::__anon485
value	opencv2/cudev/util/type_traits.hpp	/^    enum { value = Log2<N, (CURRENT_VAL >> 1), COUNT + 1>::VALUE };$/;"	e	enum:cv::cudev::Log2::__anon481
value	opencv2/cudev/util/type_traits.hpp	/^   enum { value = A };$/;"	e	enum:cv::cudev::Int2Type::__anon480
value	opencv2/flann/timer.h	/^    double value;$/;"	m	class:cvflann::StartStopTimer
value	opencv2/imgproc/types_c.h	/^    CvScalar value; \/**<average color of the connected component *\/$/;"	m	struct:CvConnectedComp
value	opencv2/ml.hpp	/^        double value; \/\/!< Value at the node: a class label in case of classification or estimated$/;"	m	class:cv::ml::DTrees::Node
valueOffset	opencv2/core/mat.hpp	/^        int valueOffset;$/;"	m	struct:cv::SparseMat::Hdr
value_allocator	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	/^      typedef typename __rebind_v::other 		value_allocator;$/;"	t	class:__gnu_pbds::detail::binary_heap
value_allocator	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      typedef typename _Alloc::template rebind<non_const_value_type>::other value_allocator;$/;"	t	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
value_comp	cpp_src/stl_map.h	/^      value_comp() const$/;"	f	class:std::map
value_comp	cpp_src/stl_multimap.h	/^      value_comp() const$/;"	f	class:std::multimap
value_comp	cpp_src/stl_multiset.h	/^      value_comp() const$/;"	f	class:std::multiset
value_comp	cpp_src/stl_set.h	/^      value_comp() const$/;"	f	class:std::set
value_compare	cpp_src/stl_map.h	/^	value_compare(_Compare __c)$/;"	f	class:std::map::value_compare
value_compare	cpp_src/stl_map.h	/^      class value_compare$/;"	c	class:std::map
value_compare	cpp_src/stl_multimap.h	/^	value_compare(_Compare __c)$/;"	f	class:std::multimap::value_compare
value_compare	cpp_src/stl_multimap.h	/^      class value_compare$/;"	c	class:std::multimap
value_compare	cpp_src/stl_multiset.h	/^      typedef _Compare value_compare;$/;"	t	class:std::multiset
value_compare	cpp_src/stl_set.h	/^      typedef _Compare value_compare;$/;"	t	class:std::set
value_swap	5/ext/pb_ds/detail/bin_search_tree_/constructors_destructor_fn_imps.hpp	/^value_swap(PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
value_swap	5/ext/pb_ds/detail/binary_heap_/constructors_destructor_fn_imps.hpp	/^value_swap(PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
value_swap	5/ext/pb_ds/detail/left_child_next_sibling_heap_/constructors_destructor_fn_imps.hpp	/^value_swap(PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
value_swap	5/ext/pb_ds/detail/ov_tree_map_/constructors_destructor_fn_imps.hpp	/^value_swap(PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
value_swap	5/ext/pb_ds/detail/pat_trie_/constructors_destructor_fn_imps.hpp	/^value_swap(PB_DS_CLASS_C_DEC& other)$/;"	f	class:PB_DS_CLASS_C_DEC
value_type	5/debug/safe_iterator.h	/^      typedef typename _Traits::value_type		value_type;$/;"	t	class:__gnu_debug::_Safe_iterator
value_type	5/debug/safe_local_iterator.h	/^      typedef typename _Traits::value_type		value_type;$/;"	t	class:__gnu_debug::_Safe_local_iterator
value_type	5/ext/pb_ds/detail/bin_search_tree_/bin_search_tree_.hpp	/^      typedef typename traits_base::value_type 		value_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_BIN_TREE_NAME
value_type	5/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp	/^      typedef Const_Iterator value_type;$/;"	t	class:__gnu_pbds::detail::bin_search_tree_const_node_it_
value_type	5/ext/pb_ds/detail/bin_search_tree_/node_iterators.hpp	/^      typedef Iterator value_type;$/;"	t	class:__gnu_pbds::detail::bin_search_tree_node_it_
value_type	5/ext/pb_ds/detail/bin_search_tree_/point_iterators.hpp	/^      typedef Value_Type 				value_type;$/;"	t	class:__gnu_pbds::detail::bin_search_tree_const_it_
value_type	5/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp	/^      typedef Value_Type 				value_type;$/;"	t	class:__gnu_pbds::detail::binary_heap
value_type	5/ext/pb_ds/detail/binary_heap_/const_iterator.hpp	/^      typedef typename base_type::value_type 		value_type;$/;"	t	class:__gnu_pbds::detail::binary_heap_const_iterator_
value_type	5/ext/pb_ds/detail/binary_heap_/point_const_iterator.hpp	/^      typedef Value_Type value_type;$/;"	t	class:__gnu_pbds::detail::binary_heap_point_const_iterator_
value_type	5/ext/pb_ds/detail/binomial_heap_/binomial_heap_.hpp	/^      typedef Value_Type 				value_type;$/;"	t	class:__gnu_pbds::detail::binomial_heap
value_type	5/ext/pb_ds/detail/binomial_heap_base_/binomial_heap_base_.hpp	/^      typedef Value_Type 				value_type;$/;"	t	class:__gnu_pbds::detail::binomial_heap_base
value_type	5/ext/pb_ds/detail/branch_policy/branch_policy.hpp	/^	typedef typename std::iterator_traits<it_type>::value_type value_type;$/;"	t	struct:__gnu_pbds::detail::branch_policy
value_type	5/ext/pb_ds/detail/branch_policy/branch_policy.hpp	/^       	typedef typename std::iterator_traits<it_type>::value_type value_type;$/;"	t	struct:__gnu_pbds::detail::branch_policy
value_type	5/ext/pb_ds/detail/branch_policy/null_node_metadata.hpp	/^	typedef const_iterator 				value_type;$/;"	t	struct:__gnu_pbds::detail::dumnode_const_iterator
value_type	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef typename traits_base::value_type 	value_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
value_type	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef typename traits_base::value_type value_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
value_type	5/ext/pb_ds/detail/left_child_next_sibling_heap_/const_iterator.hpp	/^      typedef typename base_type::value_type 		value_type;$/;"	t	class:__gnu_pbds::detail::left_child_next_sibling_heap_const_iterator_
value_type	5/ext/pb_ds/detail/left_child_next_sibling_heap_/left_child_next_sibling_heap_.hpp	/^      typedef Value_Type 				value_type;$/;"	t	class:__gnu_pbds::detail::left_child_next_sibling_heap
value_type	5/ext/pb_ds/detail/left_child_next_sibling_heap_/node.hpp	/^      typedef _Value 				value_type;$/;"	t	struct:__gnu_pbds::detail::left_child_next_sibling_heap_node_
value_type	5/ext/pb_ds/detail/left_child_next_sibling_heap_/point_const_iterator.hpp	/^      typedef typename Node::value_type value_type;$/;"	t	class:__gnu_pbds::detail::left_child_next_sibling_heap_node_point_const_iterator_
value_type	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      typedef typename traits_base::value_type value_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_LU_NAME
value_type	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	/^      value_type;$/;"	t	class:__gnu_pbds::detail::ov_tree_node_const_it_
value_type	5/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp	/^      value_type;$/;"	t	class:__gnu_pbds::detail::ov_tree_node_it_
value_type	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      typedef typename traits_base::value_type 		value_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
value_type	5/ext/pb_ds/detail/ov_tree_map_/traits.hpp	/^      value_type;$/;"	t	struct:__gnu_pbds::detail::tree_traits
value_type	5/ext/pb_ds/detail/pairing_heap_/pairing_heap_.hpp	/^      typedef Value_Type 				value_type;$/;"	t	class:__gnu_pbds::detail::pairing_heap
value_type	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^      typedef typename traits_base::value_type 		value_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME
value_type	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	typedef node_pointer 				value_type;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Inode::const_iterator
value_type	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^	typedef node_pointer 				value_type;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Inode::iterator
value_type	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef Iterator 					value_type;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_Node_iter
value_type	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef _CIterator 		       		value_type;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_Node_citer
value_type	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename type_traits::value_type			value_type;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Leaf
value_type	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename type_traits::value_type		value_type;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_CIter
value_type	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename type_traits::value_type		value_type;$/;"	t	class:__gnu_pbds::detail::pat_trie_base::_Iter
value_type	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      typedef typename type_traits::value_type 			value_type;$/;"	t	struct:__gnu_pbds::detail::pat_trie_base::_Inode
value_type	5/ext/pb_ds/detail/rb_tree_map_/node.hpp	/^      typedef Value_Type 		value_type;$/;"	t	struct:__gnu_pbds::detail::rb_tree_node_
value_type	5/ext/pb_ds/detail/rb_tree_map_/rb_tree_.hpp	/^      typedef typename base_type::value_type 		 value_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_RB_TREE_NAME
value_type	5/ext/pb_ds/detail/rc_binomial_heap_/rc_binomial_heap_.hpp	/^      typedef Value_Type 				value_type;$/;"	t	class:__gnu_pbds::detail::rc_binomial_heap
value_type	5/ext/pb_ds/detail/splay_tree_/node.hpp	/^      typedef Value_Type value_type;$/;"	t	struct:__gnu_pbds::detail::splay_tree_node_
value_type	5/ext/pb_ds/detail/splay_tree_/splay_tree_.hpp	/^      typedef typename base_type::value_type 		 value_type;$/;"	t	class:__gnu_pbds::detail::PB_DS_S_TREE_NAME
value_type	5/ext/pb_ds/detail/thin_heap_/thin_heap_.hpp	/^      typedef Value_Type 				value_type;$/;"	t	class:__gnu_pbds::detail::thin_heap
value_type	5/ext/pb_ds/detail/types_traits.hpp	/^	typedef Key 					value_type;$/;"	t	struct:__gnu_pbds::detail::type_base
value_type	5/ext/pb_ds/detail/types_traits.hpp	/^	typedef _Tv 	value_type;$/;"	t	struct:__gnu_pbds::detail::stored_value
value_type	5/ext/pb_ds/detail/types_traits.hpp	/^	typedef typename __rebind_va::value_type 	value_type;$/;"	t	struct:__gnu_pbds::detail::type_base
value_type	5/ext/pb_ds/detail/unordered_iterator/const_iterator.hpp	/^  typedef value_type_ value_type;$/;"	t	class:const_iterator_
value_type	5/ext/pb_ds/detail/unordered_iterator/iterator.hpp	/^  typedef value_type_ value_type;$/;"	t	class:iterator_
value_type	5/ext/pb_ds/detail/unordered_iterator/point_const_iterator.hpp	/^  typedef value_type_ value_type;$/;"	t	class:point_const_iterator_
value_type	5/ext/pb_ds/detail/unordered_iterator/point_iterator.hpp	/^  typedef value_type_ value_type;$/;"	t	class:point_iterator_
value_type	5/ext/pb_ds/priority_queue.hpp	/^    typedef _Tv 					value_type;$/;"	t	class:__gnu_pbds::priority_queue
value_type	5/parallel/iterator.h	/^      typedef void value_type;$/;"	t	class:__gnu_parallel::_IteratorPair
value_type	5/parallel/iterator.h	/^      typedef void value_type;$/;"	t	class:__gnu_parallel::_IteratorTriple
value_type	cpp_src/allocator.h	/^      typedef _Tp        value_type;$/;"	t	class:std::allocator
value_type	cpp_src/allocator.h	/^      typedef void        value_type;$/;"	t	class:std::allocator
value_type	cpp_src/basic_string.h	/^      typedef typename _Traits::char_type		    value_type;$/;"	t	class:std::basic_string
value_type	cpp_src/gslice_array.h	/^      typedef _Tp value_type;$/;"	t	class:std::gslice_array
value_type	cpp_src/indirect_array.h	/^      typedef _Tp value_type;$/;"	t	class:std::indirect_array
value_type	cpp_src/mask_array.h	/^      typedef _Tp value_type;$/;"	t	class:std::mask_array
value_type	cpp_src/slice_array.h	/^      typedef _Tp value_type;$/;"	t	class:std::slice_array
value_type	cpp_src/stl_bvector.h	/^    typedef bool                                         value_type;$/;"	t	class:std::vector
value_type	cpp_src/stl_deque.h	/^      typedef _Tp                                        value_type;$/;"	t	class:std::deque
value_type	cpp_src/stl_deque.h	/^      typedef _Tp                             value_type;$/;"	t	struct:std::_Deque_iterator
value_type	cpp_src/stl_iterator.h	/^      typedef typename iterator_traits<_Iterator>::value_type  value_type;$/;"	t	class:__normal_iterator
value_type	cpp_src/stl_iterator_base_types.h	/^      typedef _Tp                         value_type;$/;"	t	struct:std::iterator_traits
value_type	cpp_src/stl_iterator_base_types.h	/^      typedef _Tp        value_type;$/;"	t	struct:std::iterator
value_type	cpp_src/stl_iterator_base_types.h	/^      typedef typename _Iterator::value_type        value_type;$/;"	t	struct:std::iterator_traits
value_type	cpp_src/stl_list.h	/^      typedef _Tp                                        value_type;$/;"	t	class:std::list
value_type	cpp_src/stl_list.h	/^      typedef _Tp                                value_type;$/;"	t	struct:std::_List_const_iterator
value_type	cpp_src/stl_list.h	/^      typedef _Tp                                value_type;$/;"	t	struct:std::_List_iterator
value_type	cpp_src/stl_map.h	/^      typedef std::pair<const _Key, _Tp>                    value_type;$/;"	t	class:std::map
value_type	cpp_src/stl_multimap.h	/^      typedef std::pair<const _Key, _Tp>                    value_type;$/;"	t	class:std::multimap
value_type	cpp_src/stl_multiset.h	/^      typedef _Key     value_type;$/;"	t	class:std::multiset
value_type	cpp_src/stl_queue.h	/^      typedef typename _Sequence::value_type                value_type;$/;"	t	class:std::priority_queue
value_type	cpp_src/stl_queue.h	/^      typedef typename _Sequence::value_type                value_type;$/;"	t	class:std::queue
value_type	cpp_src/stl_set.h	/^      typedef _Key     value_type;$/;"	t	class:std::set
value_type	cpp_src/stl_stack.h	/^      typedef typename _Sequence::value_type                value_type;$/;"	t	class:std::stack
value_type	cpp_src/stl_tempbuf.h	/^      typedef _Tp         value_type;$/;"	t	class:std::_Temporary_buffer
value_type	cpp_src/stl_tree.h	/^      typedef _Tp        value_type;$/;"	t	struct:std::_Rb_tree_const_iterator
value_type	cpp_src/stl_tree.h	/^      typedef _Tp  value_type;$/;"	t	struct:std::_Rb_tree_iterator
value_type	cpp_src/stl_tree.h	/^      typedef _Val value_type;$/;"	t	class:std::_Rb_tree
value_type	cpp_src/stl_vector.h	/^      typedef _Tp					 value_type;$/;"	t	class:std::vector
value_type	cpp_src/valarray_after.h	/^      typedef _Tp value_type;$/;"	t	class:std::_Expr
value_type	cpp_src/valarray_after.h	/^      typedef _Tp value_type;$/;"	t	class:std::_GBase
value_type	cpp_src/valarray_after.h	/^      typedef _Tp value_type;$/;"	t	struct:std::_IClos
value_type	cpp_src/valarray_after.h	/^      typedef typename _Base::value_type value_type;$/;"	t	struct:std::_GClos
value_type	cpp_src/valarray_after.h	/^      typedef typename _Base::value_type value_type;$/;"	t	struct:std::_IClos
value_type	cpp_src/valarray_after.h	/^      typedef typename _Dom::value_type value_type;$/;"	t	class:std::_GBase
value_type	cpp_src/valarray_after.h	/^      typedef typename _Dom::value_type value_type;$/;"	t	class:std::_IBase
value_type	cpp_src/valarray_before.h	/^      typedef _Tp value_type;$/;"	t	class:std::_SBase
value_type	cpp_src/valarray_before.h	/^      typedef _Tp value_type;$/;"	t	struct:std::_RefFunClos
value_type	cpp_src/valarray_before.h	/^      typedef _Tp value_type;$/;"	t	struct:std::_SClos
value_type	cpp_src/valarray_before.h	/^      typedef _Tp value_type;$/;"	t	struct:std::_ValFunClos
value_type	cpp_src/valarray_before.h	/^      typedef typename _Base::value_type value_type;$/;"	t	struct:std::_BinClos
value_type	cpp_src/valarray_before.h	/^      typedef typename _Base::value_type value_type;$/;"	t	struct:std::_RefFunClos
value_type	cpp_src/valarray_before.h	/^      typedef typename _Base::value_type value_type;$/;"	t	struct:std::_SClos
value_type	cpp_src/valarray_before.h	/^      typedef typename _Base::value_type value_type;$/;"	t	struct:std::_UnClos
value_type	cpp_src/valarray_before.h	/^      typedef typename _Base::value_type value_type;$/;"	t	struct:std::_ValFunClos
value_type	cpp_src/valarray_before.h	/^      typedef typename _Dom::value_type value_type;$/;"	t	class:std::_FunBase
value_type	cpp_src/valarray_before.h	/^      typedef typename _Dom::value_type value_type;$/;"	t	class:std::_SBase
value_type	cpp_src/valarray_before.h	/^      typedef typename __fun<_Oper, _Vt>::result_type value_type;$/;"	t	class:std::_BinBase
value_type	cpp_src/valarray_before.h	/^      typedef typename __fun<_Oper, _Vt>::result_type value_type;$/;"	t	class:std::_BinBase1
value_type	cpp_src/valarray_before.h	/^      typedef typename __fun<_Oper, _Vt>::result_type value_type;$/;"	t	class:std::_BinBase2
value_type	cpp_src/valarray_before.h	/^      typedef typename __fun<_Oper, _Vt>::result_type value_type;$/;"	t	class:std::_UnBase
value_type	opencv2/core/affine.hpp	/^        typedef Affine3<_Tp>                               value_type;$/;"	t	class:cv::DataType
value_type	opencv2/core/cuda/utility.hpp	/^        typedef uchar value_type;$/;"	t	struct:cv::cuda::device::ThrustAllocator
value_type	opencv2/core/cuda/vec_distance.hpp	/^        typedef float value_type;$/;"	t	struct:cv::cuda::device::L1Dist
value_type	opencv2/core/cuda/vec_distance.hpp	/^        typedef float value_type;$/;"	t	struct:cv::cuda::device::L2Dist
value_type	opencv2/core/cuda/vec_distance.hpp	/^        typedef int value_type;$/;"	t	struct:cv::cuda::device::HammingDist
value_type	opencv2/core/cuda/vec_distance.hpp	/^        typedef int value_type;$/;"	t	struct:cv::cuda::device::L1Dist
value_type	opencv2/core/cvstd.hpp	/^    typedef _Tp value_type;$/;"	t	class:cv::Allocator
value_type	opencv2/core/cvstd.hpp	/^    typedef char value_type;$/;"	t	class:cv::String
value_type	opencv2/core/cvstd.inl.hpp	/^    typedef std::complex<_Tp>  value_type;$/;"	t	class:cv::DataType
value_type	opencv2/core/hal/intrin.hpp	/^    typedef double value_type;$/;"	t	struct:cv::V_TypeTraits
value_type	opencv2/core/hal/intrin.hpp	/^    typedef float value_type;$/;"	t	struct:cv::V_TypeTraits
value_type	opencv2/core/hal/intrin.hpp	/^    typedef int value_type;$/;"	t	struct:cv::V_TypeTraits
value_type	opencv2/core/hal/intrin.hpp	/^    typedef int64 value_type;$/;"	t	struct:cv::V_TypeTraits
value_type	opencv2/core/hal/intrin.hpp	/^    typedef schar value_type;$/;"	t	struct:cv::V_TypeTraits
value_type	opencv2/core/hal/intrin.hpp	/^    typedef short value_type;$/;"	t	struct:cv::V_TypeTraits
value_type	opencv2/core/hal/intrin.hpp	/^    typedef uchar value_type;$/;"	t	struct:cv::V_TypeTraits
value_type	opencv2/core/hal/intrin.hpp	/^    typedef uint64 value_type;$/;"	t	struct:cv::V_TypeTraits
value_type	opencv2/core/hal/intrin.hpp	/^    typedef unsigned value_type;$/;"	t	struct:cv::V_TypeTraits
value_type	opencv2/core/hal/intrin.hpp	/^    typedef ushort value_type;$/;"	t	struct:cv::V_TypeTraits
value_type	opencv2/core/mat.hpp	/^    typedef _Tp value_type;$/;"	t	class:cv::MatConstIterator_
value_type	opencv2/core/mat.hpp	/^    typedef _Tp value_type;$/;"	t	class:cv::Mat_
value_type	opencv2/core/mat.hpp	/^    typedef uchar* value_type;$/;"	t	class:cv::MatConstIterator
value_type	opencv2/core/matx.hpp	/^    typedef Matx<_Tp, m, n>                               value_type;$/;"	t	class:cv::DataType
value_type	opencv2/core/matx.hpp	/^    typedef Vec<_Tp, cn>                               value_type;$/;"	t	class:cv::DataType
value_type	opencv2/core/matx.hpp	/^    typedef _Tp                           value_type;$/;"	t	class:cv::Matx
value_type	opencv2/core/matx.hpp	/^    typedef _Tp value_type;$/;"	t	class:cv::Vec
value_type	opencv2/core/traits.hpp	/^    typedef _Tp         value_type;$/;"	t	class:cv::DataType
value_type	opencv2/core/traits.hpp	/^    typedef bool        value_type;$/;"	t	class:cv::DataType
value_type	opencv2/core/traits.hpp	/^    typedef double      value_type;$/;"	t	class:cv::DataType
value_type	opencv2/core/traits.hpp	/^    typedef double value_type;$/;"	t	class:cv::TypeDepth
value_type	opencv2/core/traits.hpp	/^    typedef float       value_type;$/;"	t	class:cv::DataType
value_type	opencv2/core/traits.hpp	/^    typedef float value_type;$/;"	t	class:cv::TypeDepth
value_type	opencv2/core/traits.hpp	/^    typedef int         value_type;$/;"	t	class:cv::DataType
value_type	opencv2/core/traits.hpp	/^    typedef int value_type;$/;"	t	class:cv::TypeDepth
value_type	opencv2/core/traits.hpp	/^    typedef schar       value_type;$/;"	t	class:cv::DataType
value_type	opencv2/core/traits.hpp	/^    typedef schar value_type;$/;"	t	class:cv::TypeDepth
value_type	opencv2/core/traits.hpp	/^    typedef short       value_type;$/;"	t	class:cv::DataType
value_type	opencv2/core/traits.hpp	/^    typedef short value_type;$/;"	t	class:cv::TypeDepth
value_type	opencv2/core/traits.hpp	/^    typedef uchar       value_type;$/;"	t	class:cv::DataType
value_type	opencv2/core/traits.hpp	/^    typedef uchar value_type;$/;"	t	class:cv::TypeDepth
value_type	opencv2/core/traits.hpp	/^    typedef ushort      value_type;$/;"	t	class:cv::DataType
value_type	opencv2/core/traits.hpp	/^    typedef ushort value_type;$/;"	t	class:cv::TypeDepth
value_type	opencv2/core/traits.hpp	/^    typedef void value_type;$/;"	t	class:cv::TypeDepth
value_type	opencv2/core/types.hpp	/^    typedef Complex<_Tp> value_type;$/;"	t	class:cv::DataType
value_type	opencv2/core/types.hpp	/^    typedef DMatch      value_type;$/;"	t	class:cv::DataType
value_type	opencv2/core/types.hpp	/^    typedef KeyPoint      value_type;$/;"	t	class:cv::DataType
value_type	opencv2/core/types.hpp	/^    typedef Moments     value_type;$/;"	t	class:cv::DataType
value_type	opencv2/core/types.hpp	/^    typedef Point3_<_Tp>                               value_type;$/;"	t	class:cv::DataType
value_type	opencv2/core/types.hpp	/^    typedef Point_<_Tp>                               value_type;$/;"	t	class:cv::DataType
value_type	opencv2/core/types.hpp	/^    typedef Range      value_type;$/;"	t	class:cv::DataType
value_type	opencv2/core/types.hpp	/^    typedef Rect_<_Tp>                               value_type;$/;"	t	class:cv::DataType
value_type	opencv2/core/types.hpp	/^    typedef RotatedRect  value_type;$/;"	t	class:cv::DataType
value_type	opencv2/core/types.hpp	/^    typedef Scalar_<_Tp>                               value_type;$/;"	t	class:cv::DataType
value_type	opencv2/core/types.hpp	/^    typedef Size_<_Tp>                               value_type;$/;"	t	class:cv::DataType
value_type	opencv2/core/types.hpp	/^    typedef _Tp value_type;$/;"	t	class:cv::Point3_
value_type	opencv2/core/types.hpp	/^    typedef _Tp value_type;$/;"	t	class:cv::Point_
value_type	opencv2/core/types.hpp	/^    typedef _Tp value_type;$/;"	t	class:cv::Rect_
value_type	opencv2/core/types.hpp	/^    typedef _Tp value_type;$/;"	t	class:cv::Size_
value_type	opencv2/core/utility.hpp	/^    typedef _Tp value_type;$/;"	t	class:cv::AutoBuffer
value_type	opencv2/cudev/block/vec_distance.hpp	/^    typedef float value_type;$/;"	t	struct:cv::cudev::NormL1
value_type	opencv2/cudev/block/vec_distance.hpp	/^    typedef float value_type;$/;"	t	struct:cv::cudev::NormL2
value_type	opencv2/cudev/block/vec_distance.hpp	/^    typedef int value_type;$/;"	t	struct:cv::cudev::NormHamming
value_type	opencv2/cudev/block/vec_distance.hpp	/^    typedef int value_type;$/;"	t	struct:cv::cudev::NormL1
value_type	opencv2/cudev/expr/expr.hpp	/^    typedef typename ptr_type::value_type value_type;$/;"	t	struct:cv::cudev::PtrTraits
value_type	opencv2/cudev/ptr2d/constant.hpp	/^    typedef T   value_type;$/;"	t	struct:cv::cudev::ConstantPtr
value_type	opencv2/cudev/ptr2d/deriv.hpp	/^    typedef typename PtrTraits<SrcPtr>::value_type value_type;$/;"	t	struct:cv::cudev::DerivXPtr
value_type	opencv2/cudev/ptr2d/deriv.hpp	/^    typedef typename PtrTraits<SrcPtr>::value_type value_type;$/;"	t	struct:cv::cudev::DerivYPtr
value_type	opencv2/cudev/ptr2d/deriv.hpp	/^    typedef typename PtrTraits<SrcPtr>::value_type value_type;$/;"	t	struct:cv::cudev::LaplacianPtr
value_type	opencv2/cudev/ptr2d/deriv.hpp	/^    typedef typename PtrTraits<SrcPtr>::value_type value_type;$/;"	t	struct:cv::cudev::ScharrXPtr
value_type	opencv2/cudev/ptr2d/deriv.hpp	/^    typedef typename PtrTraits<SrcPtr>::value_type value_type;$/;"	t	struct:cv::cudev::ScharrYPtr
value_type	opencv2/cudev/ptr2d/deriv.hpp	/^    typedef typename PtrTraits<SrcPtr>::value_type value_type;$/;"	t	struct:cv::cudev::SobelXPtr
value_type	opencv2/cudev/ptr2d/deriv.hpp	/^    typedef typename PtrTraits<SrcPtr>::value_type value_type;$/;"	t	struct:cv::cudev::SobelYPtr
value_type	opencv2/cudev/ptr2d/extrapolation.hpp	/^    typedef typename PtrTraits<SrcPtr>::value_type value_type;$/;"	t	struct:cv::cudev::BrdBase
value_type	opencv2/cudev/ptr2d/extrapolation.hpp	/^    typedef typename PtrTraits<SrcPtr>::value_type value_type;$/;"	t	struct:cv::cudev::BrdConstant
value_type	opencv2/cudev/ptr2d/glob.hpp	/^    typedef T   value_type;$/;"	t	struct:cv::cudev::GlobPtr
value_type	opencv2/cudev/ptr2d/gpumat.hpp	/^    typedef T value_type;$/;"	t	class:cv::cudev::GpuMat_
value_type	opencv2/cudev/ptr2d/interpolation.hpp	/^    typedef typename PtrTraits<SrcPtr>::value_type value_type;$/;"	t	struct:cv::cudev::CommonAreaInterPtr
value_type	opencv2/cudev/ptr2d/interpolation.hpp	/^    typedef typename PtrTraits<SrcPtr>::value_type value_type;$/;"	t	struct:cv::cudev::CubicInterPtr
value_type	opencv2/cudev/ptr2d/interpolation.hpp	/^    typedef typename PtrTraits<SrcPtr>::value_type value_type;$/;"	t	struct:cv::cudev::IntegerAreaInterPtr
value_type	opencv2/cudev/ptr2d/interpolation.hpp	/^    typedef typename PtrTraits<SrcPtr>::value_type value_type;$/;"	t	struct:cv::cudev::LinearInterPtr
value_type	opencv2/cudev/ptr2d/interpolation.hpp	/^    typedef typename PtrTraits<SrcPtr>::value_type value_type;$/;"	t	struct:cv::cudev::NearestInterPtr
value_type	opencv2/cudev/ptr2d/lut.hpp	/^    typedef typename PtrTraits<TablePtr>::value_type value_type;$/;"	t	struct:cv::cudev::LutPtr
value_type	opencv2/cudev/ptr2d/mask.hpp	/^    typedef bool value_type;$/;"	t	struct:cv::cudev::WithOutMask
value_type	opencv2/cudev/ptr2d/mask.hpp	/^    typedef typename PtrTraits<MaskPtr>::value_type value_type;$/;"	t	struct:cv::cudev::SingleMaskChannels
value_type	opencv2/cudev/ptr2d/remap.hpp	/^    typedef typename PtrTraits<SrcPtr>::value_type  value_type;$/;"	t	struct:cv::cudev::RemapPtr2
value_type	opencv2/cudev/ptr2d/remap.hpp	/^    typedef typename PtrTraits<SrcPtr>::value_type value_type;$/;"	t	struct:cv::cudev::RemapPtr1
value_type	opencv2/cudev/ptr2d/resize.hpp	/^    typedef typename PtrTraits<SrcPtr>::value_type value_type;$/;"	t	struct:cv::cudev::ResizePtr
value_type	opencv2/cudev/ptr2d/texture.hpp	/^    typedef T     value_type;$/;"	t	struct:cv::cudev::TexturePtr
value_type	opencv2/cudev/ptr2d/traits.hpp	/^    typedef typename Ptr2D::value_type value_type;$/;"	t	struct:cv::cudev::PtrTraitsBase
value_type	opencv2/cudev/ptr2d/transform.hpp	/^    typedef typename Op::result_type                value_type;$/;"	t	struct:cv::cudev::BinaryTransformPtr
value_type	opencv2/cudev/ptr2d/transform.hpp	/^    typedef typename Op::result_type               value_type;$/;"	t	struct:cv::cudev::UnaryTransformPtr
value_type	opencv2/cudev/ptr2d/warping.hpp	/^    typedef float2 value_type;$/;"	t	struct:cv::cudev::AffineMapPtr
value_type	opencv2/cudev/ptr2d/warping.hpp	/^    typedef float2 value_type;$/;"	t	struct:cv::cudev::PerspectiveMapPtr
value_type	opencv2/cudev/ptr2d/zip.hpp	/^                  typename PtrTraits<Ptr1>::value_type> value_type;$/;"	t	struct:cv::cudev::ZipPtr
value_type	opencv2/cudev/ptr2d/zip.hpp	/^                  typename PtrTraits<Ptr2>::value_type> value_type;$/;"	t	struct:cv::cudev::ZipPtr
value_type	opencv2/cudev/ptr2d/zip.hpp	/^                  typename PtrTraits<Ptr3>::value_type> value_type;$/;"	t	struct:cv::cudev::ZipPtr
value_type	opencv2/cudev/util/vec_traits.hpp	/^    typedef char1      value_type;$/;"	t	class:cv::DataType
value_type	opencv2/cudev/util/vec_traits.hpp	/^    typedef char2      value_type;$/;"	t	class:cv::DataType
value_type	opencv2/cudev/util/vec_traits.hpp	/^    typedef char3      value_type;$/;"	t	class:cv::DataType
value_type	opencv2/cudev/util/vec_traits.hpp	/^    typedef char4      value_type;$/;"	t	class:cv::DataType
value_type	opencv2/cudev/util/vec_traits.hpp	/^    typedef uint         value_type;$/;"	t	class:cv::DataType
value_type_	5/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp	/^      typedef typename traits_base::value_type 	value_type_;$/;"	t	class:__gnu_pbds::detail::PB_DS_CC_HASH_NAME
value_type_	5/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp	/^      typedef typename traits_base::value_type 	value_type_;$/;"	t	class:__gnu_pbds::detail::PB_DS_GP_HASH_NAME
value_type_	5/ext/pb_ds/detail/list_update_map_/lu_map_.hpp	/^      typedef typename traits_base::value_type value_type_;$/;"	t	class:__gnu_pbds::detail::PB_DS_LU_NAME
value_vector	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^      typedef typename value_allocator::pointer 	value_vector;$/;"	t	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME
values	opencv2/core/types_c.h	/^    float *values;$/;"	m	struct:_IplConvKernelFP
values	opencv2/core/types_c.h	/^    int *values;$/;"	m	struct:_IplConvKernel
varIdx	opencv2/ml.hpp	/^        int varIdx; \/\/!< Index of variable on which the split is created.$/;"	m	class:cv::ml::DTrees::Split
var_	opencv2/flann/kdtree_index.h	/^    DistanceType* var_;$/;"	m	class:cvflann::KDTreeIndex
variance	opencv2/flann/kmeans_index.h	/^        DistanceType variance;$/;"	m	struct:cvflann::KMeansIndex::KMeansNode
vavg2	opencv2/core/cuda/simd_functions.hpp	/^    static __device__ __forceinline__ unsigned int vavg2(unsigned int a, unsigned int b)$/;"	f	namespace:cv::cuda::device
vavg2	opencv2/cudev/util/simd_functions.hpp	/^__device__ __forceinline__ uint vavg2(uint a, uint b)$/;"	f	namespace:cv::cudev
vavg4	opencv2/core/cuda/simd_functions.hpp	/^    static __device__ __forceinline__ unsigned int vavg4(unsigned int a, unsigned int b)$/;"	f	namespace:cv::cuda::device
vavg4	opencv2/cudev/util/simd_functions.hpp	/^__device__ __forceinline__ uint vavg4(uint a, uint b)$/;"	f	namespace:cv::cudev
vavrg2	opencv2/core/cuda/simd_functions.hpp	/^    static __device__ __forceinline__ unsigned int vavrg2(unsigned int a, unsigned int b)$/;"	f	namespace:cv::cuda::device
vavrg2	opencv2/cudev/util/simd_functions.hpp	/^__device__ __forceinline__ uint vavrg2(uint a, uint b)$/;"	f	namespace:cv::cudev
vavrg4	opencv2/core/cuda/simd_functions.hpp	/^    static __device__ __forceinline__ unsigned int vavrg4(unsigned int a, unsigned int b)$/;"	f	namespace:cv::cuda::device
vavrg4	opencv2/cudev/util/simd_functions.hpp	/^__device__ __forceinline__ uint vavrg4(uint a, uint b)$/;"	f	namespace:cv::cudev
vcmpeq2	opencv2/core/cuda/simd_functions.hpp	/^    static __device__ __forceinline__ unsigned int vcmpeq2(unsigned int a, unsigned int b)$/;"	f	namespace:cv::cuda::device
vcmpeq2	opencv2/cudev/util/simd_functions.hpp	/^__device__ __forceinline__ uint vcmpeq2(uint a, uint b)$/;"	f	namespace:cv::cudev
vcmpeq4	opencv2/core/cuda/simd_functions.hpp	/^    static __device__ __forceinline__ unsigned int vcmpeq4(unsigned int a, unsigned int b)$/;"	f	namespace:cv::cuda::device
vcmpeq4	opencv2/cudev/util/simd_functions.hpp	/^__device__ __forceinline__ uint vcmpeq4(uint a, uint b)$/;"	f	namespace:cv::cudev
vcmpge2	opencv2/core/cuda/simd_functions.hpp	/^    static __device__ __forceinline__ unsigned int vcmpge2(unsigned int a, unsigned int b)$/;"	f	namespace:cv::cuda::device
vcmpge2	opencv2/cudev/util/simd_functions.hpp	/^__device__ __forceinline__ uint vcmpge2(uint a, uint b)$/;"	f	namespace:cv::cudev
vcmpge4	opencv2/core/cuda/simd_functions.hpp	/^    static __device__ __forceinline__ unsigned int vcmpge4(unsigned int a, unsigned int b)$/;"	f	namespace:cv::cuda::device
vcmpge4	opencv2/cudev/util/simd_functions.hpp	/^__device__ __forceinline__ uint vcmpge4(uint a, uint b)$/;"	f	namespace:cv::cudev
vcmpgt2	opencv2/core/cuda/simd_functions.hpp	/^    static __device__ __forceinline__ unsigned int vcmpgt2(unsigned int a, unsigned int b)$/;"	f	namespace:cv::cuda::device
vcmpgt2	opencv2/cudev/util/simd_functions.hpp	/^__device__ __forceinline__ uint vcmpgt2(uint a, uint b)$/;"	f	namespace:cv::cudev
vcmpgt4	opencv2/core/cuda/simd_functions.hpp	/^    static __device__ __forceinline__ unsigned int vcmpgt4(unsigned int a, unsigned int b)$/;"	f	namespace:cv::cuda::device
vcmpgt4	opencv2/cudev/util/simd_functions.hpp	/^__device__ __forceinline__ uint vcmpgt4(uint a, uint b)$/;"	f	namespace:cv::cudev
vcmple2	opencv2/core/cuda/simd_functions.hpp	/^    static __device__ __forceinline__ unsigned int vcmple2(unsigned int a, unsigned int b)$/;"	f	namespace:cv::cuda::device
vcmple2	opencv2/cudev/util/simd_functions.hpp	/^__device__ __forceinline__ uint vcmple2(uint a, uint b)$/;"	f	namespace:cv::cudev
vcmple4	opencv2/core/cuda/simd_functions.hpp	/^    static __device__ __forceinline__ unsigned int vcmple4(unsigned int a, unsigned int b)$/;"	f	namespace:cv::cuda::device
vcmple4	opencv2/cudev/util/simd_functions.hpp	/^__device__ __forceinline__ uint vcmple4(uint a, uint b)$/;"	f	namespace:cv::cudev
vcmplt2	opencv2/core/cuda/simd_functions.hpp	/^    static __device__ __forceinline__ unsigned int vcmplt2(unsigned int a, unsigned int b)$/;"	f	namespace:cv::cuda::device
vcmplt2	opencv2/cudev/util/simd_functions.hpp	/^__device__ __forceinline__ uint vcmplt2(uint a, uint b)$/;"	f	namespace:cv::cudev
vcmplt4	opencv2/core/cuda/simd_functions.hpp	/^    static __device__ __forceinline__ unsigned int vcmplt4(unsigned int a, unsigned int b)$/;"	f	namespace:cv::cuda::device
vcmplt4	opencv2/cudev/util/simd_functions.hpp	/^__device__ __forceinline__ uint vcmplt4(uint a, uint b)$/;"	f	namespace:cv::cudev
vcmpne2	opencv2/core/cuda/simd_functions.hpp	/^    static __device__ __forceinline__ unsigned int vcmpne2(unsigned int a, unsigned int b)$/;"	f	namespace:cv::cuda::device
vcmpne2	opencv2/cudev/util/simd_functions.hpp	/^__device__ __forceinline__ uint vcmpne2(uint a, uint b)$/;"	f	namespace:cv::cudev
vcmpne4	opencv2/core/cuda/simd_functions.hpp	/^    static __device__ __forceinline__ unsigned int vcmpne4(unsigned int a, unsigned int b)$/;"	f	namespace:cv::cuda::device
vcmpne4	opencv2/cudev/util/simd_functions.hpp	/^__device__ __forceinline__ uint vcmpne4(uint a, uint b)$/;"	f	namespace:cv::cudev
vec1	opencv2/core/cuda/vec_distance.hpp	/^        const T1* vec1;$/;"	m	struct:cv::cuda::device::VecDiffGlobal
vec1Vals	opencv2/core/cuda/vec_distance.hpp	/^        U vec1Vals[MAX_LEN \/ THREAD_DIM];$/;"	m	struct:cv::cuda::device::VecDiffCachedRegister
vec_distance_detail	opencv2/core/cuda/detail/vec_distance_detail.hpp	/^    namespace vec_distance_detail$/;"	n	namespace:cv::cuda::device
vec_math_detail	opencv2/core/cuda/vec_math.hpp	/^namespace vec_math_detail$/;"	n	namespace:cv::cuda::device
vec_math_detail	opencv2/cudev/util/vec_math.hpp	/^namespace vec_math_detail$/;"	n	namespace:cv::cudev
vec_type	opencv2/core/affine.hpp	/^        typedef Vec<channel_type, channels> vec_type;$/;"	t	class:cv::DataType
vec_type	opencv2/core/cuda/vec_traits.hpp	/^    template<> struct TypeVec<bool, 1> { typedef uchar vec_type; };$/;"	t	struct:cv::cuda::device::TypeVec
vec_type	opencv2/core/cuda/vec_traits.hpp	/^    template<> struct TypeVec<bool, 2> { typedef uchar2 vec_type; };$/;"	t	struct:cv::cuda::device::TypeVec
vec_type	opencv2/core/cuda/vec_traits.hpp	/^    template<> struct TypeVec<bool, 3> { typedef uchar3 vec_type; };$/;"	t	struct:cv::cuda::device::TypeVec
vec_type	opencv2/core/cuda/vec_traits.hpp	/^    template<> struct TypeVec<bool, 4> { typedef uchar4 vec_type; };$/;"	t	struct:cv::cuda::device::TypeVec
vec_type	opencv2/core/cuda/vec_traits.hpp	/^    template<> struct TypeVec<bool, 8> { typedef uchar8 vec_type; };$/;"	t	struct:cv::cuda::device::TypeVec
vec_type	opencv2/core/cuda/vec_traits.hpp	/^    template<> struct TypeVec<schar, 1> { typedef schar vec_type; };$/;"	t	struct:cv::cuda::device::TypeVec
vec_type	opencv2/core/cuda/vec_traits.hpp	/^    template<> struct TypeVec<schar, 2> { typedef char2 vec_type; };$/;"	t	struct:cv::cuda::device::TypeVec
vec_type	opencv2/core/cuda/vec_traits.hpp	/^    template<> struct TypeVec<schar, 3> { typedef char3 vec_type; };$/;"	t	struct:cv::cuda::device::TypeVec
vec_type	opencv2/core/cuda/vec_traits.hpp	/^    template<> struct TypeVec<schar, 4> { typedef char4 vec_type; };$/;"	t	struct:cv::cuda::device::TypeVec
vec_type	opencv2/core/cuda/vec_traits.hpp	/^    template<> struct TypeVec<schar, 8> { typedef char8 vec_type; };$/;"	t	struct:cv::cuda::device::TypeVec
vec_type	opencv2/core/cvstd.inl.hpp	/^    typedef Vec<channel_type, channels> vec_type;$/;"	t	class:cv::DataType
vec_type	opencv2/core/matx.hpp	/^    typedef value_type                                    vec_type;$/;"	t	class:cv::DataType
vec_type	opencv2/core/matx.hpp	/^    typedef value_type                                 vec_type;$/;"	t	class:cv::DataType
vec_type	opencv2/core/traits.hpp	/^    typedef value_type  vec_type;$/;"	t	class:cv::DataType
vec_type	opencv2/core/types.hpp	/^    typedef Vec<channel_type, channels> vec_type;$/;"	t	class:cv::DataType
vec_type	opencv2/cudev/util/vec_traits.hpp	/^    typedef value_type   vec_type;$/;"	t	class:cv::DataType
vec_type	opencv2/cudev/util/vec_traits.hpp	/^    typedef value_type vec_type;$/;"	t	class:cv::DataType
veclen	opencv2/flann.hpp	/^        int veclen() const { return nnIndex->veclen(); }$/;"	f	class:cv::flann::GenericIndex
veclen	opencv2/flann.hpp	/^    FLANN_DEPRECATED int veclen() const$/;"	f	class:cv::flann::Index_
veclen	opencv2/flann/autotuned_index.h	/^    virtual size_t veclen() const$/;"	f	class:cvflann::AutotunedIndex
veclen	opencv2/flann/composite_index.h	/^    size_t veclen() const$/;"	f	class:cvflann::CompositeIndex
veclen	opencv2/flann/flann_base.hpp	/^    size_t veclen() const$/;"	f	class:cvflann::Index
veclen	opencv2/flann/hierarchical_clustering_index.h	/^    size_t veclen() const$/;"	f	class:cvflann::HierarchicalClusteringIndex
veclen	opencv2/flann/kdtree_index.h	/^    size_t veclen() const$/;"	f	class:cvflann::KDTreeIndex
veclen	opencv2/flann/kdtree_single_index.h	/^    size_t veclen() const$/;"	f	class:cvflann::KDTreeSingleIndex
veclen	opencv2/flann/kmeans_index.h	/^        const size_t veclen;$/;"	m	class:cvflann::KMeansIndex::KMeansDistanceComputer
veclen	opencv2/flann/kmeans_index.h	/^    size_t veclen() const$/;"	f	class:cvflann::KMeansIndex
veclen	opencv2/flann/linear_index.h	/^    size_t veclen() const$/;"	f	class:cvflann::LinearIndex
veclen	opencv2/flann/lsh_index.h	/^    size_t veclen() const$/;"	f	class:cvflann::LshIndex
veclen_	opencv2/flann/hierarchical_clustering_index.h	/^    size_t veclen_;$/;"	m	class:cvflann::HierarchicalClusteringIndex
veclen_	opencv2/flann/kdtree_index.h	/^    size_t veclen_;$/;"	m	class:cvflann::KDTreeIndex
veclen_	opencv2/flann/kmeans_index.h	/^    size_t veclen_;$/;"	m	class:cvflann::KMeansIndex
vector	cpp_src/stl_bvector.h	/^      vector(_InputIterator __first, _InputIterator __last,$/;"	f	class:std::vector
vector	cpp_src/stl_bvector.h	/^    vector(const allocator_type& __a = allocator_type())$/;"	f	class:std::vector
vector	cpp_src/stl_bvector.h	/^    vector(const vector& __x)$/;"	f	class:std::vector
vector	cpp_src/stl_bvector.h	/^    vector(size_type __n, const bool& __value = bool(), $/;"	f	class:std::vector
vector	cpp_src/stl_bvector.h	/^  class vector<bool, _Alloc> : protected _Bvector_base<_Alloc>$/;"	c	namespace:std
vector	cpp_src/stl_vector.h	/^        vector(_InputIterator __first, _InputIterator __last,$/;"	f	class:std::vector
vector	cpp_src/stl_vector.h	/^      vector(const allocator_type& __a = allocator_type())$/;"	f	class:std::vector
vector	cpp_src/stl_vector.h	/^      vector(const vector& __x)$/;"	f	class:std::vector
vector	cpp_src/stl_vector.h	/^      vector(size_type __n, const value_type& __value = value_type(),$/;"	f	class:std::vector
vector	cpp_src/stl_vector.h	/^    class vector : protected _Vector_base<_Tp, _Alloc>$/;"	c	namespace:std
vector_type	cpp_src/stl_vector.h	/^      typedef vector<_Tp, _Alloc>			 vector_type;$/;"	t	class:std::vector
version	opencv2/core/types_c.h	/^    const char* version;$/;"	m	struct:CvModuleInfo
version	opencv2/flann/saving.h	/^    char version[16];$/;"	m	struct:cvflann::IndexHeader
vertex_	opencv2/core/opengl.hpp	/^    Buffer vertex_;$/;"	m	class:cv::ogl::Arrays
vertical_pass	opencv2/cudev/grid/detail/integral.hpp	/^    __global__ void vertical_pass(GlobPtr<T> integral, const int rows, const int cols)$/;"	f	namespace:cv::cudev::integral_detail
vertical_pass	opencv2/cudev/grid/detail/integral.hpp	/^    __host__ void vertical_pass(const GlobPtr<T>& integral, int rows, int cols, cudaStream_t stream)$/;"	f	namespace:cv::cudev::integral_detail
videoCaptureConnection	opencv2/videoio/cap_ios.h	/^@property (nonatomic, strong) AVCaptureConnection* videoCaptureConnection;$/;"	v
videostab	opencv2/videostab/deblurring.hpp	/^namespace videostab$/;"	n	namespace:cv
videostab	opencv2/videostab/fast_marching.hpp	/^namespace videostab$/;"	n	namespace:cv
videostab	opencv2/videostab/fast_marching_inl.hpp	/^namespace videostab$/;"	n	namespace:cv
videostab	opencv2/videostab/frame_source.hpp	/^namespace videostab$/;"	n	namespace:cv
videostab	opencv2/videostab/global_motion.hpp	/^namespace videostab$/;"	n	namespace:cv
videostab	opencv2/videostab/inpainting.hpp	/^namespace videostab$/;"	n	namespace:cv
videostab	opencv2/videostab/log.hpp	/^namespace videostab$/;"	n	namespace:cv
videostab	opencv2/videostab/motion_core.hpp	/^namespace videostab$/;"	n	namespace:cv
videostab	opencv2/videostab/motion_stabilizing.hpp	/^namespace videostab$/;"	n	namespace:cv
videostab	opencv2/videostab/optical_flow.hpp	/^namespace videostab$/;"	n	namespace:cv
videostab	opencv2/videostab/outlier_rejection.hpp	/^namespace videostab$/;"	n	namespace:cv
videostab	opencv2/videostab/ring_buffer.hpp	/^namespace videostab$/;"	n	namespace:cv
videostab	opencv2/videostab/stabilizer.hpp	/^namespace videostab$/;"	n	namespace:cv
videostab	opencv2/videostab/wobble_suppression.hpp	/^namespace videostab$/;"	n	namespace:cv
vind_	opencv2/flann/kdtree_index.h	/^    std::vector<int> vind_;$/;"	m	class:cvflann::KDTreeIndex
vind_	opencv2/flann/kdtree_single_index.h	/^    std::vector<int> vind_;$/;"	m	class:cvflann::KDTreeSingleIndex
vld1_f16	opencv2/core/hal/intrin_neon.hpp	/^template <typename T> static inline float16x4_t vld1_f16(const T* ptr)$/;"	f	namespace:cv
vmax2	opencv2/core/cuda/simd_functions.hpp	/^    static __device__ __forceinline__ unsigned int vmax2(unsigned int a, unsigned int b)$/;"	f	namespace:cv::cuda::device
vmax2	opencv2/cudev/util/simd_functions.hpp	/^__device__ __forceinline__ uint vmax2(uint a, uint b)$/;"	f	namespace:cv::cudev
vmax4	opencv2/core/cuda/simd_functions.hpp	/^    static __device__ __forceinline__ unsigned int vmax4(unsigned int a, unsigned int b)$/;"	f	namespace:cv::cuda::device
vmax4	opencv2/cudev/util/simd_functions.hpp	/^__device__ __forceinline__ uint vmax4(uint a, uint b)$/;"	f	namespace:cv::cudev
vmin2	opencv2/core/cuda/simd_functions.hpp	/^    static __device__ __forceinline__ unsigned int vmin2(unsigned int a, unsigned int b)$/;"	f	namespace:cv::cuda::device
vmin2	opencv2/cudev/util/simd_functions.hpp	/^__device__ __forceinline__ uint vmin2(uint a, uint b)$/;"	f	namespace:cv::cudev
vmin4	opencv2/core/cuda/simd_functions.hpp	/^    static __device__ __forceinline__ unsigned int vmin4(unsigned int a, unsigned int b)$/;"	f	namespace:cv::cuda::device
vmin4	opencv2/cudev/util/simd_functions.hpp	/^__device__ __forceinline__ uint vmin4(uint a, uint b)$/;"	f	namespace:cv::cudev
vmvnq_s64	opencv2/core/hal/intrin_neon.hpp	/^inline int64x2_t vmvnq_s64(int64x2_t a)$/;"	f	namespace:cv
vmvnq_u64	opencv2/core/hal/intrin_neon.hpp	/^inline uint64x2_t vmvnq_u64(uint64x2_t a)$/;"	f	namespace:cv
vocabulary	opencv2/features2d.hpp	/^    Mat vocabulary;$/;"	m	class:cv::BOWImgDescriptorExtractor
vreinterpret_f16_s16	opencv2/core/hal/intrin_neon.hpp	/^template <typename T> static inline float16x4_t vreinterpret_f16_s16(T a)$/;"	f	namespace:cv
vreinterpret_s16_f16	opencv2/core/hal/intrin_neon.hpp	/^template <typename T> static inline int16x4_t vreinterpret_s16_f16(T a)$/;"	f	namespace:cv
vscale	opencv2/highgui.hpp	/^    float       hscale, vscale;$/;"	m	struct:cv::QtFont
vscale	opencv2/imgproc/imgproc_c.h	/^    float       hscale, vscale;$/;"	m	struct:CvFont
vseteq2	opencv2/core/cuda/simd_functions.hpp	/^    static __device__ __forceinline__ unsigned int vseteq2(unsigned int a, unsigned int b)$/;"	f	namespace:cv::cuda::device
vseteq2	opencv2/cudev/util/simd_functions.hpp	/^__device__ __forceinline__ uint vseteq2(uint a, uint b)$/;"	f	namespace:cv::cudev
vseteq4	opencv2/core/cuda/simd_functions.hpp	/^    static __device__ __forceinline__ unsigned int vseteq4(unsigned int a, unsigned int b)$/;"	f	namespace:cv::cuda::device
vseteq4	opencv2/cudev/util/simd_functions.hpp	/^__device__ __forceinline__ uint vseteq4(uint a, uint b)$/;"	f	namespace:cv::cudev
vsetge2	opencv2/core/cuda/simd_functions.hpp	/^    static __device__ __forceinline__ unsigned int vsetge2(unsigned int a, unsigned int b)$/;"	f	namespace:cv::cuda::device
vsetge2	opencv2/cudev/util/simd_functions.hpp	/^__device__ __forceinline__ uint vsetge2(uint a, uint b)$/;"	f	namespace:cv::cudev
vsetge4	opencv2/core/cuda/simd_functions.hpp	/^    static __device__ __forceinline__ unsigned int vsetge4(unsigned int a, unsigned int b)$/;"	f	namespace:cv::cuda::device
vsetge4	opencv2/cudev/util/simd_functions.hpp	/^__device__ __forceinline__ uint vsetge4(uint a, uint b)$/;"	f	namespace:cv::cudev
vsetgt2	opencv2/core/cuda/simd_functions.hpp	/^    static __device__ __forceinline__ unsigned int vsetgt2(unsigned int a, unsigned int b)$/;"	f	namespace:cv::cuda::device
vsetgt2	opencv2/cudev/util/simd_functions.hpp	/^__device__ __forceinline__ uint vsetgt2(uint a, uint b)$/;"	f	namespace:cv::cudev
vsetgt4	opencv2/core/cuda/simd_functions.hpp	/^    static __device__ __forceinline__ unsigned int vsetgt4(unsigned int a, unsigned int b)$/;"	f	namespace:cv::cuda::device
vsetgt4	opencv2/cudev/util/simd_functions.hpp	/^__device__ __forceinline__ uint vsetgt4(uint a, uint b)$/;"	f	namespace:cv::cudev
vsetle2	opencv2/core/cuda/simd_functions.hpp	/^    static __device__ __forceinline__ unsigned int vsetle2(unsigned int a, unsigned int b)$/;"	f	namespace:cv::cuda::device
vsetle2	opencv2/cudev/util/simd_functions.hpp	/^__device__ __forceinline__ uint vsetle2(uint a, uint b)$/;"	f	namespace:cv::cudev
vsetle4	opencv2/core/cuda/simd_functions.hpp	/^    static __device__ __forceinline__ unsigned int vsetle4(unsigned int a, unsigned int b)$/;"	f	namespace:cv::cuda::device
vsetle4	opencv2/cudev/util/simd_functions.hpp	/^__device__ __forceinline__ uint vsetle4(uint a, uint b)$/;"	f	namespace:cv::cudev
vsetlt2	opencv2/core/cuda/simd_functions.hpp	/^    static __device__ __forceinline__ unsigned int vsetlt2(unsigned int a, unsigned int b)$/;"	f	namespace:cv::cuda::device
vsetlt2	opencv2/cudev/util/simd_functions.hpp	/^__device__ __forceinline__ uint vsetlt2(uint a, uint b)$/;"	f	namespace:cv::cudev
vsetlt4	opencv2/core/cuda/simd_functions.hpp	/^    static __device__ __forceinline__ unsigned int vsetlt4(unsigned int a, unsigned int b)$/;"	f	namespace:cv::cuda::device
vsetlt4	opencv2/cudev/util/simd_functions.hpp	/^__device__ __forceinline__ uint vsetlt4(uint a, uint b)$/;"	f	namespace:cv::cudev
vsetne2	opencv2/core/cuda/simd_functions.hpp	/^    static __device__ __forceinline__ unsigned int vsetne2(unsigned int a, unsigned int b)$/;"	f	namespace:cv::cuda::device
vsetne2	opencv2/cudev/util/simd_functions.hpp	/^__device__ __forceinline__ uint vsetne2(uint a, uint b)$/;"	f	namespace:cv::cudev
vsetne4	opencv2/core/cuda/simd_functions.hpp	/^    static __device__ __forceinline__ unsigned int vsetne4(unsigned int a, unsigned int b)$/;"	f	namespace:cv::cuda::device
vsetne4	opencv2/cudev/util/simd_functions.hpp	/^__device__ __forceinline__ uint vsetne4(uint a, uint b)$/;"	f	namespace:cv::cudev
vst1_f16	opencv2/core/hal/intrin_neon.hpp	/^template <typename T> static inline void vst1_f16(T* ptr, float16x4_t a)$/;"	f	namespace:cv
vsub2	opencv2/core/cuda/simd_functions.hpp	/^    static __device__ __forceinline__ unsigned int vsub2(unsigned int a, unsigned int b)$/;"	f	namespace:cv::cuda::device
vsub2	opencv2/cudev/util/simd_functions.hpp	/^__device__ __forceinline__ uint vsub2(uint a, uint b)$/;"	f	namespace:cv::cudev
vsub4	opencv2/core/cuda/simd_functions.hpp	/^    static __device__ __forceinline__ unsigned int vsub4(unsigned int a, unsigned int b)$/;"	f	namespace:cv::cuda::device
vsub4	opencv2/cudev/util/simd_functions.hpp	/^__device__ __forceinline__ uint vsub4(uint a, uint b)$/;"	f	namespace:cv::cudev
vt	opencv2/core.hpp	/^    Mat u, w, vt;$/;"	m	class:cv::SVD
vtx	opencv2/core/core_c.h	/^    CvGraphVtx* vtx;       \/* current graph vertex (or current edge origin) *\/$/;"	m	struct:CvGraphScanner
vtx	opencv2/imgproc.hpp	/^    std::vector<Vertex> vtx;$/;"	m	class:cv::Subdiv2D
w	opencv2/core.hpp	/^    Mat u, w, vt;$/;"	m	class:cv::SVD
w1_	opencv2/videostab/motion_stabilizing.hpp	/^    float w1_, w2_, w3_, w4_;$/;"	m	class:cv::videostab::LpMotionStabilizer
w2_	opencv2/videostab/motion_stabilizing.hpp	/^    float w1_, w2_, w3_, w4_;$/;"	m	class:cv::videostab::LpMotionStabilizer
w3_	opencv2/videostab/motion_stabilizing.hpp	/^    float w1_, w2_, w3_, w4_;$/;"	m	class:cv::videostab::LpMotionStabilizer
w4_	opencv2/videostab/motion_stabilizing.hpp	/^    float w1_, w2_, w3_, w4_;$/;"	m	class:cv::videostab::LpMotionStabilizer
wSum_	opencv2/videostab/deblurring.hpp	/^    Mat_<float> bSum_, gSum_, rSum_, wSum_;$/;"	m	class:cv::videostab::WeightingDeblurer
w_reg	opencv2/core/hal/intrin.hpp	/^    typedef v_int16x8 w_reg;$/;"	t	struct:cv::V_RegTrait128
w_reg	opencv2/core/hal/intrin.hpp	/^    typedef v_int32x4 w_reg;$/;"	t	struct:cv::V_RegTrait128
w_reg	opencv2/core/hal/intrin.hpp	/^    typedef v_int64x2 w_reg;$/;"	t	struct:cv::V_RegTrait128
w_reg	opencv2/core/hal/intrin.hpp	/^    typedef v_uint16x8 w_reg;$/;"	t	struct:cv::V_RegTrait128
w_reg	opencv2/core/hal/intrin.hpp	/^    typedef v_uint32x4 w_reg;$/;"	t	struct:cv::V_RegTrait128
w_reg	opencv2/core/hal/intrin.hpp	/^    typedef v_uint64x2 w_reg;$/;"	t	struct:cv::V_RegTrait128
w_type	opencv2/core/hal/intrin.hpp	/^    typedef double w_type;$/;"	t	struct:cv::V_TypeTraits
w_type	opencv2/core/hal/intrin.hpp	/^    typedef int w_type;$/;"	t	struct:cv::V_TypeTraits
w_type	opencv2/core/hal/intrin.hpp	/^    typedef int64 w_type;$/;"	t	struct:cv::V_TypeTraits
w_type	opencv2/core/hal/intrin.hpp	/^    typedef short w_type;$/;"	t	struct:cv::V_TypeTraits
w_type	opencv2/core/hal/intrin.hpp	/^    typedef uint64 w_type;$/;"	t	struct:cv::V_TypeTraits
w_type	opencv2/core/hal/intrin.hpp	/^    typedef unsigned w_type;$/;"	t	struct:cv::V_TypeTraits
w_type	opencv2/core/hal/intrin.hpp	/^    typedef ushort w_type;$/;"	t	struct:cv::V_TypeTraits
walkBreadthFirst	opencv2/stitching/detail/util_inl.hpp	/^B Graph::walkBreadthFirst(int from, B body) const$/;"	f	class:cv::detail::Graph
warp	opencv2/stitching/detail/warpers.hpp	/^    Point warp(InputArray src, InputArray K, InputArray R, InputArray T, int interp_mode, int border_mode,$/;"	f	class:cv::detail::PlaneWarperGpu
warp	opencv2/stitching/detail/warpers.hpp	/^    Point warp(InputArray src, InputArray K, InputArray R, int interp_mode, int border_mode,$/;"	f	class:cv::detail::CylindricalWarperGpu
warp	opencv2/stitching/detail/warpers.hpp	/^    Point warp(InputArray src, InputArray K, InputArray R, int interp_mode, int border_mode,$/;"	f	class:cv::detail::PlaneWarperGpu
warp	opencv2/stitching/detail/warpers.hpp	/^    Point warp(InputArray src, InputArray K, InputArray R, int interp_mode, int border_mode,$/;"	f	class:cv::detail::SphericalWarperGpu
warp	opencv2/stitching/detail/warpers_inl.hpp	/^Point RotationWarperBase<P>::warp(InputArray src, InputArray K, InputArray R, int interp_mode, int border_mode,$/;"	f	class:cv::detail::RotationWarperBase
warpAffinePtr	opencv2/cudev/ptr2d/warping.hpp	/^warpAffinePtr(const SrcPtr& src, Size dstSize, const GpuMat_<float>& warpMat)$/;"	f	namespace:cv::cudev
warpAffine_	opencv2/cudev/expr/warping.hpp	/^warpAffine_(const SrcPtr& src, Size dstSize, const GpuMat_<float>& warpMat)$/;"	f	namespace:cv::cudev
warpBackward	opencv2/stitching/detail/warpers_inl.hpp	/^void RotationWarperBase<P>::warpBackward(InputArray src, InputArray K, InputArray R, int interp_mode, int border_mode,$/;"	f	class:cv::detail::RotationWarperBase
warpCopy	opencv2/cudev/warp/warp.hpp	/^__device__ __forceinline__ OutIt warpCopy(InIt beg, InIt end, OutIt out)$/;"	f	namespace:cv::cudev
warpFill	opencv2/cudev/warp/warp.hpp	/^__device__ __forceinline__ void warpFill(It beg, It end, const T& value)$/;"	f	namespace:cv::cudev
warpId	opencv2/cudev/warp/warp.hpp	/^    __device__ __forceinline__ static uint warpId()$/;"	f	struct:cv::cudev::Warp
warpMat	opencv2/cudev/ptr2d/warping.hpp	/^    const float* warpMat;$/;"	m	struct:cv::cudev::AffineMapPtr
warpMat	opencv2/cudev/ptr2d/warping.hpp	/^    const float* warpMat;$/;"	m	struct:cv::cudev::PerspectiveMapPtr
warpPerspectivePtr	opencv2/cudev/ptr2d/warping.hpp	/^warpPerspectivePtr(const SrcPtr& src, Size dstSize, const GpuMat_<float>& warpMat)$/;"	f	namespace:cv::cudev
warpPerspective_	opencv2/cudev/expr/warping.hpp	/^warpPerspective_(const SrcPtr& src, Size dstSize, const GpuMat_<float>& warpMat)$/;"	f	namespace:cv::cudev
warpPoint	opencv2/stitching/detail/warpers_inl.hpp	/^Point2f RotationWarperBase<P>::warpPoint(const Point2f &pt, InputArray K, InputArray R)$/;"	f	class:cv::detail::RotationWarperBase
warpReduce	opencv2/cudev/warp/reduce.hpp	/^__device__ __forceinline__ void warpReduce(const tuple<P0, P1, P2, P3, P4, P5, P6, P7, P8, P9>& smem,$/;"	f	namespace:cv::cudev
warpReduce	opencv2/cudev/warp/reduce.hpp	/^__device__ __forceinline__ void warpReduce(volatile T* smem, T& val, uint tid, const Op& op)$/;"	f	namespace:cv::cudev
warpReduceKeyVal	opencv2/cudev/warp/reduce.hpp	/^__device__ __forceinline__ void warpReduceKeyVal(const tuple<KP0, KP1, KP2, KP3, KP4, KP5, KP6, KP7, KP8, KP9>& skeys,$/;"	f	namespace:cv::cudev
warpReduceKeyVal	opencv2/cudev/warp/reduce.hpp	/^__device__ __forceinline__ void warpReduceKeyVal(volatile K* skeys, K& key, volatile V* svals, V& val, uint tid, const Cmp& cmp)$/;"	f	namespace:cv::cudev
warpReduceKeyVal	opencv2/cudev/warp/reduce.hpp	/^__device__ __forceinline__ void warpReduceKeyVal(volatile K* skeys, K& key,$/;"	f	namespace:cv::cudev
warpRoi	opencv2/stitching/detail/warpers_inl.hpp	/^Rect RotationWarperBase<P>::warpRoi(Size src_size, InputArray K, InputArray R)$/;"	f	class:cv::detail::RotationWarperBase
warpScanExclusive	opencv2/core/cuda/scan.hpp	/^    __device__ __forceinline__ T warpScanExclusive(T idata, volatile T* s_Data, unsigned int tid)$/;"	f	namespace:cv::cuda::device
warpScanExclusive	opencv2/cudev/warp/scan.hpp	/^__device__ __forceinline__ T warpScanExclusive(T data, volatile T* smem, uint tid)$/;"	f	namespace:cv::cudev
warpScanInclusive	opencv2/core/cuda/scan.hpp	/^    __device__ T warpScanInclusive(T idata, volatile T* s_Data, unsigned int tid)$/;"	f	namespace:cv::cuda::device
warpScanInclusive	opencv2/cudev/warp/scan.hpp	/^__device__ T warpScanInclusive(T data, volatile T* smem, uint tid)$/;"	f	namespace:cv::cudev
warpTransform	opencv2/cudev/warp/warp.hpp	/^__device__ __forceinline__ OutIt warpTransform(InIt beg, InIt end, OutIt out, const UnOp& op)$/;"	f	namespace:cv::cudev
warpTransform	opencv2/cudev/warp/warp.hpp	/^__device__ __forceinline__ OutIt warpTransform(InIt1 beg1, InIt1 end1, InIt2 beg2, OutIt out, const BinOp& op)$/;"	f	namespace:cv::cudev
warpYota	opencv2/cudev/warp/warp.hpp	/^__device__ __forceinline__ void warpYota(OutIt beg, OutIt end, T value)$/;"	f	namespace:cv::cudev
warp_log	opencv2/core/cuda/scan.hpp	/^        static const int warp_log         = 5;$/;"	m	struct:cv::cuda::device::WarpScanNoComp
warp_log	opencv2/core/cuda/scan.hpp	/^        static const int warp_log  = 5;$/;"	m	struct:cv::cuda::device::BlockScan
warp_mask	opencv2/core/cuda/scan.hpp	/^        static const int warp_mask        = 31;$/;"	m	struct:cv::cuda::device::WarpScanNoComp
warp_mask	opencv2/core/cuda/scan.hpp	/^        static const int warp_mask = 31;$/;"	m	struct:cv::cuda::device::BlockScan
warp_offset	opencv2/core/cuda/scan.hpp	/^        static const int warp_offset      = 0;$/;"	m	struct:cv::cuda::device::WarpScan
warp_offset	opencv2/core/cuda/scan.hpp	/^        static const int warp_offset      = 16;$/;"	m	struct:cv::cuda::device::WarpScanNoComp
warp_reduce	opencv2/core/cuda/warp_reduce.hpp	/^    __device__ __forceinline__ T warp_reduce(volatile T *ptr , const unsigned int tid = threadIdx.x)$/;"	f	namespace:cv::cuda::device
warp_reduce_detail	opencv2/cudev/warp/detail/reduce.hpp	/^namespace warp_reduce_detail$/;"	n	namespace:cv::cudev
warp_reduce_key_val_detail	opencv2/cudev/warp/detail/reduce_key_val.hpp	/^namespace warp_reduce_key_val_detail$/;"	n	namespace:cv::cudev
warp_smem_stride	opencv2/core/cuda/scan.hpp	/^        static const int warp_smem_stride = 32 + 16 + 1;$/;"	m	struct:cv::cuda::device::WarpScanNoComp
warped_image_scale_	opencv2/stitching.hpp	/^    double warped_image_scale_;$/;"	m	class:cv::Stitcher
warper	opencv2/stitching.hpp	/^    Ptr<WarperCreator> warper() { return warper_; }$/;"	f	class:cv::Stitcher
warper	opencv2/stitching.hpp	/^    const Ptr<WarperCreator> warper() const { return warper_; }$/;"	f	class:cv::Stitcher
warper_	opencv2/stitching.hpp	/^    Ptr<WarperCreator> warper_;$/;"	m	class:cv::Stitcher
wastedMemory	opencv2/flann/allocator.h	/^    int     wastedMemory;$/;"	m	class:cvflann::PooledAllocator
waveCorrectKind	opencv2/stitching.hpp	/^    detail::WaveCorrectKind waveCorrectKind() const { return wave_correct_kind_; }$/;"	f	class:cv::Stitcher
waveCorrection	opencv2/stitching.hpp	/^    CV_WRAP bool waveCorrection() const { return do_wave_correct_; }$/;"	f	class:cv::Stitcher
wave_correct_kind_	opencv2/stitching.hpp	/^    detail::WaveCorrectKind wave_correct_kind_;$/;"	m	class:cv::Stitcher
weight	opencv2/objdetect/objdetect_c.h	/^        float weight;$/;"	m	struct:CvHaarFeature::__anon62
weight	opencv2/stitching/detail/util.hpp	/^    float weight;$/;"	m	struct:cv::detail::GraphEdge
weight1	opencv2/videostab/motion_stabilizing.hpp	/^    float weight1() const { return w1_; }$/;"	f	class:cv::videostab::LpMotionStabilizer
weight2	opencv2/videostab/motion_stabilizing.hpp	/^    float weight2() const { return w2_; }$/;"	f	class:cv::videostab::LpMotionStabilizer
weight3	opencv2/videostab/motion_stabilizing.hpp	/^    float weight3() const { return w3_; }$/;"	f	class:cv::videostab::LpMotionStabilizer
weight4	opencv2/videostab/motion_stabilizing.hpp	/^    float weight4() const { return w4_; }$/;"	f	class:cv::videostab::LpMotionStabilizer
weight_	opencv2/videostab/motion_stabilizing.hpp	/^    std::vector<float> weight_;$/;"	m	class:cv::videostab::GaussianMotionFilter
weight_map_	opencv2/stitching/detail/blenders.hpp	/^    UMat weight_map_;$/;"	m	class:cv::detail::FeatherBlender
weight_type_	opencv2/stitching/detail/blenders.hpp	/^    int weight_type_; \/\/CV_32F or CV_16S$/;"	m	class:cv::detail::MultiBandBlender
weightsPositionsSmoothing	opencv2/objdetect/detection_based_tracker.hpp	/^        std::vector<float> weightsPositionsSmoothing;$/;"	m	class:cv::DetectionBasedTracker
weightsSizesSmoothing	opencv2/objdetect/detection_based_tracker.hpp	/^        std::vector<float> weightsSizesSmoothing;$/;"	m	class:cv::DetectionBasedTracker
widen	cpp_src/locale_facets.h	/^      widen(char __c) const$/;"	f	class:std::__ctype_abstract_base
widen	cpp_src/locale_facets.h	/^      widen(char __c) const$/;"	f	class:std::ctype
widen	cpp_src/locale_facets.h	/^      widen(const char* __lo, const char* __hi, char_type* __to) const$/;"	f	class:std::__ctype_abstract_base
widen	cpp_src/locale_facets.h	/^      widen(const char* __lo, const char* __hi, char_type* __to) const$/;"	f	class:std::ctype
width	cpp_src/ios_base.h	/^    width() const { return _M_width; }$/;"	f	class:std::ios_base
width	cpp_src/ios_base.h	/^    width(streamsize __wide)$/;"	f	class:std::ios_base
width	opencv2/core/cuda/border_interpolate.hpp	/^        int width;$/;"	m	struct:cv::cuda::device::BorderReader
width	opencv2/core/cuda/border_interpolate.hpp	/^        int width;$/;"	m	struct:cv::cuda::device::BrdConstant
width	opencv2/core/cuda/border_interpolate.hpp	/^        int width;$/;"	m	struct:cv::cuda::device::BrdRowConstant
width	opencv2/core/cuda/border_interpolate.hpp	/^        int width;$/;"	m	struct:cv::cuda::device::BrdRowWrap
width	opencv2/core/cuda/border_interpolate.hpp	/^        int width;$/;"	m	struct:cv::cuda::device::BrdWrap
width	opencv2/core/cuda/filters.hpp	/^        int width, haight;$/;"	m	struct:cv::cuda::device::AreaFilter
width	opencv2/core/types.hpp	/^    _Tp width, height; \/\/ the width and the height$/;"	m	class:cv::Size_
width	opencv2/core/types.hpp	/^    _Tp x, y, width, height; \/\/< the top-left corner, as well as width and height of the rectangle$/;"	m	class:cv::Rect_
width	opencv2/core/types_c.h	/^        int width;$/;"	m	union:CvMat::__anon327
width	opencv2/core/types_c.h	/^    float width;$/;"	m	struct:CvSize2D32f
width	opencv2/core/types_c.h	/^    int  width;             \/**< Image width in pixels.                           *\/$/;"	m	struct:_IplImage
width	opencv2/core/types_c.h	/^    int  width;$/;"	m	struct:_IplROI
width	opencv2/core/types_c.h	/^    int width;$/;"	m	struct:CvRect
width	opencv2/core/types_c.h	/^    int width;$/;"	m	struct:CvSize
width	opencv2/cudacodec.hpp	/^    int width;$/;"	m	struct:cv::cudacodec::FormatInfo
width	opencv2/cudalegacy/NCV.hpp	/^    Ncv32s width;      \/\/\/< Rectangle width.$/;"	m	struct:NcvRect32s
width	opencv2/cudalegacy/NCV.hpp	/^    Ncv32s width;  \/\/\/< Rectangle width.$/;"	m	struct:NcvSize32s
width	opencv2/cudalegacy/NCV.hpp	/^    Ncv32u width() const {return this->_width;}$/;"	f	class:NCVMatrix
width	opencv2/cudalegacy/NCV.hpp	/^    Ncv32u width;      \/\/\/< Rectangle width.$/;"	m	struct:NcvRect32u
width	opencv2/cudalegacy/NCV.hpp	/^    Ncv32u width;  \/\/\/< Rectangle width.$/;"	m	struct:NcvSize32u
width	opencv2/cudalegacy/NCV.hpp	/^    Ncv8u width;$/;"	m	struct:NcvRect8u
widthStep	opencv2/core/types_c.h	/^    int  widthStep;         \/**< Size of aligned image row in bytes.    *\/$/;"	m	struct:_IplImage
winSigma	opencv2/objdetect.hpp	/^    CV_PROP double winSigma;$/;"	m	struct:cv::HOGDescriptor
winSize	opencv2/objdetect.hpp	/^    CV_PROP Size winSize;$/;"	m	struct:cv::HOGDescriptor
winSize	opencv2/videostab/optical_flow.hpp	/^    virtual Size winSize() const { return winSize_; }$/;"	f	class:cv::videostab::PyrLkOptFlowEstimatorBase
winSize_	opencv2/videostab/optical_flow.hpp	/^    Size winSize_;$/;"	m	class:cv::videostab::PyrLkOptFlowEstimatorBase
wobbleSuppressor	opencv2/videostab/stabilizer.hpp	/^    Ptr<WobbleSuppressorBase> wobbleSuppressor() const { return wobbleSuppressor_; }$/;"	f	class:cv::videostab::TwoPassStabilizer
wobbleSuppressor_	opencv2/videostab/stabilizer.hpp	/^    Ptr<WobbleSuppressorBase> wobbleSuppressor_;$/;"	m	class:cv::videostab::TwoPassStabilizer
workScale	opencv2/stitching.hpp	/^    CV_WRAP double workScale() const { return work_scale_; }$/;"	f	class:cv::Stitcher
work_elem_type	opencv2/cudev/grid/detail/reduce.hpp	/^        typedef typename VecTraits<work_type>::elem_type work_elem_type;$/;"	t	struct:cv::cudev::grid_reduce_detail::SumReductor
work_scale_	opencv2/stitching.hpp	/^    double work_scale_;$/;"	m	class:cv::Stitcher
work_type	opencv2/core/affine.hpp	/^        typedef Affine3<typename DataType<_Tp>::work_type> work_type;$/;"	t	class:cv::DataType
work_type	opencv2/core/cuda/filters.hpp	/^        typedef typename TypeVec<float, VecTraits<elem_type>::cn>::vec_type work_type;$/;"	t	struct:cv::cuda::device::CubicFilter
work_type	opencv2/core/cvstd.inl.hpp	/^    typedef value_type         work_type;$/;"	t	class:cv::DataType
work_type	opencv2/core/matx.hpp	/^    typedef Matx<typename DataType<_Tp>::work_type, m, n> work_type;$/;"	t	class:cv::DataType
work_type	opencv2/core/matx.hpp	/^    typedef Vec<typename DataType<_Tp>::work_type, cn> work_type;$/;"	t	class:cv::DataType
work_type	opencv2/core/traits.hpp	/^    typedef int         work_type;$/;"	t	class:cv::DataType
work_type	opencv2/core/traits.hpp	/^    typedef value_type  work_type;$/;"	t	class:cv::DataType
work_type	opencv2/core/types.hpp	/^    typedef Point3_<typename DataType<_Tp>::work_type> work_type;$/;"	t	class:cv::DataType
work_type	opencv2/core/types.hpp	/^    typedef Point_<typename DataType<_Tp>::work_type> work_type;$/;"	t	class:cv::DataType
work_type	opencv2/core/types.hpp	/^    typedef Rect_<typename DataType<_Tp>::work_type> work_type;$/;"	t	class:cv::DataType
work_type	opencv2/core/types.hpp	/^    typedef Scalar_<typename DataType<_Tp>::work_type> work_type;$/;"	t	class:cv::DataType
work_type	opencv2/core/types.hpp	/^    typedef Size_<typename DataType<_Tp>::work_type> work_type;$/;"	t	class:cv::DataType
work_type	opencv2/core/types.hpp	/^    typedef double      work_type;$/;"	t	class:cv::DataType
work_type	opencv2/core/types.hpp	/^    typedef float         work_type;$/;"	t	class:cv::DataType
work_type	opencv2/core/types.hpp	/^    typedef int         work_type;$/;"	t	class:cv::DataType
work_type	opencv2/core/types.hpp	/^    typedef value_type   work_type;$/;"	t	class:cv::DataType
work_type	opencv2/core/types.hpp	/^    typedef value_type work_type;$/;"	t	class:cv::DataType
work_type	opencv2/cudev/grid/reduce_to_vec.hpp	/^    typedef T work_type;$/;"	t	struct:cv::cudev::Avg
work_type	opencv2/cudev/grid/reduce_to_vec.hpp	/^    typedef T work_type;$/;"	t	struct:cv::cudev::Max
work_type	opencv2/cudev/grid/reduce_to_vec.hpp	/^    typedef T work_type;$/;"	t	struct:cv::cudev::Min
work_type	opencv2/cudev/grid/reduce_to_vec.hpp	/^    typedef T work_type;$/;"	t	struct:cv::cudev::Sum
work_type	opencv2/cudev/util/vec_traits.hpp	/^    typedef value_type   work_type;$/;"	t	class:cv::DataType
work_type	opencv2/cudev/util/vec_traits.hpp	/^    typedef value_type work_type;$/;"	t	class:cv::DataType
workstealing_chunk_size	5/parallel/settings.h	/^    _SequenceIndex              workstealing_chunk_size;$/;"	m	struct:__gnu_parallel::_Settings
worktype_f	opencv2/core/cuda/detail/color_detail.hpp	/^            typedef float worktype_f;$/;"	t	struct:cv::cuda::device::color_detail::ColorChannel
worstDist	opencv2/flann/result_set.h	/^    DistanceType worstDist() const$/;"	f	class:cvflann::KNNResultSet
worstDist	opencv2/flann/result_set.h	/^    DistanceType worstDist() const$/;"	f	class:cvflann::KNNSimpleResultSet
worstDist	opencv2/flann/result_set.h	/^    DistanceType worstDist() const$/;"	f	class:cvflann::RadiusResultSet
worstDist	opencv2/flann/result_set.h	/^    inline DistanceType worstDist() const$/;"	f	class:cvflann::RadiusUniqueResultSet
worstDist	opencv2/flann/result_set.h	/^    inline DistanceType worstDist() const$/;"	f	class:cvflann::UniqueResultSet
worst_distance_	opencv2/flann/result_set.h	/^    DistanceType worst_distance_;$/;"	m	class:cvflann::KNNResultSet
worst_distance_	opencv2/flann/result_set.h	/^    DistanceType worst_distance_;$/;"	m	class:cvflann::KNNSimpleResultSet
worst_distance_	opencv2/flann/result_set.h	/^    DistanceType worst_distance_;$/;"	m	class:cvflann::UniqueResultSet
write	opencv2/core.hpp	/^    virtual void write(FileStorage& fs) const { (void)fs; }$/;"	f	class:cv::Algorithm
write	opencv2/core/persistence.hpp	/^void write( FileStorage& fs, const String& name, const std::vector< std::vector<_Tp> >& vec )$/;"	f	namespace:cv
write	opencv2/core/persistence.hpp	/^void write( FileStorage& fs, const String& name, const std::vector<_Tp>& vec )$/;"	f	namespace:cv
write	opencv2/core/persistence.hpp	/^void write( FileStorage& fs, const String& value )$/;"	f	namespace:cv
write	opencv2/core/persistence.hpp	/^void write( FileStorage& fs, const double& value )$/;"	f	namespace:cv
write	opencv2/core/persistence.hpp	/^void write( FileStorage& fs, const float& value )$/;"	f	namespace:cv
write	opencv2/core/persistence.hpp	/^void write( FileStorage& fs, const int& value )$/;"	f	namespace:cv
write	opencv2/core/persistence.hpp	/^void write( FileStorage& fs, const std::vector<_Tp>& vec )$/;"	f	namespace:cv
write	opencv2/core/persistence.hpp	/^void write(FileStorage& fs, const Complex<_Tp>& c )$/;"	f	namespace:cv
write	opencv2/core/persistence.hpp	/^void write(FileStorage& fs, const Point3_<_Tp>& pt )$/;"	f	namespace:cv
write	opencv2/core/persistence.hpp	/^void write(FileStorage& fs, const Point_<_Tp>& pt )$/;"	f	namespace:cv
write	opencv2/core/persistence.hpp	/^void write(FileStorage& fs, const Range& r )$/;"	f	namespace:cv
write	opencv2/core/persistence.hpp	/^void write(FileStorage& fs, const Rect_<_Tp>& r )$/;"	f	namespace:cv
write	opencv2/core/persistence.hpp	/^void write(FileStorage& fs, const Scalar_<_Tp>& s )$/;"	f	namespace:cv
write	opencv2/core/persistence.hpp	/^void write(FileStorage& fs, const Size_<_Tp>& sz )$/;"	f	namespace:cv
write	opencv2/core/persistence.hpp	/^void write(FileStorage& fs, const String& name, const Complex<_Tp>& c )$/;"	f	namespace:cv
write	opencv2/core/persistence.hpp	/^void write(FileStorage& fs, const String& name, const Point3_<_Tp>& pt )$/;"	f	namespace:cv
write	opencv2/core/persistence.hpp	/^void write(FileStorage& fs, const String& name, const Point_<_Tp>& pt )$/;"	f	namespace:cv
write	opencv2/core/persistence.hpp	/^void write(FileStorage& fs, const String& name, const Range& r )$/;"	f	namespace:cv
write	opencv2/core/persistence.hpp	/^void write(FileStorage& fs, const String& name, const Rect_<_Tp>& r )$/;"	f	namespace:cv
write	opencv2/core/persistence.hpp	/^void write(FileStorage& fs, const String& name, const Scalar_<_Tp>& s )$/;"	f	namespace:cv
write	opencv2/core/persistence.hpp	/^void write(FileStorage& fs, const String& name, const Size_<_Tp>& sz )$/;"	f	namespace:cv
write	opencv2/core/persistence.hpp	/^void write(FileStorage& fs, const String& name, const Vec<_Tp, cn>& v )$/;"	f	namespace:cv
write	opencv2/core/persistence.hpp	/^void write(FileStorage& fs, const Vec<_Tp, cn>& v )$/;"	f	namespace:cv
write	opencv2/core/persistence.hpp	/^void write(FileStorage& fs, const _Tp& value)$/;"	f	namespace:cv
write	opencv2/core/types_c.h	/^    CvWriteFunc write; \/**< writes object to file storage *\/$/;"	m	struct:CvTypeInfo
write	opencv2/features2d.hpp	/^    CV_WRAP void write( const String& fileName ) const$/;"	f	class:cv::DescriptorMatcher
write_type	opencv2/core/cuda/detail/transform_detail.hpp	/^            typedef typename TypeVec<D, shift>::vec_type write_type;$/;"	t	struct:cv::cuda::device::transform_detail::BinaryReadWriteTraits
write_type	opencv2/core/cuda/detail/transform_detail.hpp	/^            typedef typename TypeVec<D, shift>::vec_type write_type;$/;"	t	struct:cv::cuda::device::transform_detail::UnaryReadWriteTraits
writer	opencv2/core/core_c.h	/^CVAPI(CvSeq*)  cvEndWriteSeq( CvSeqWriter* writer );$/;"	v
writer	opencv2/core/core_c.h	/^CVAPI(void)   cvFlushSeqWriter( CvSeqWriter* writer );$/;"	v
writer	opencv2/core/core_c.h	/^CVAPI(void)  cvCreateSeqBlock( CvSeqWriter* writer );$/;"	v
writer	opencv2/videoio.hpp	/^    Ptr<CvVideoWriter> writer;$/;"	m	class:cv::VideoWriter
writer	opencv2/videoio/videoio_c.h	/^CVAPI(void) cvReleaseVideoWriter( CvVideoWriter** writer );$/;"	v
wscale	opencv2/core/ocl.hpp	/^    int wscale, iwscale;$/;"	m	class:cv::ocl::KernelArg
wstreampos	cpp_src/postypes.h	/^  typedef fpos<mbstate_t> wstreampos;$/;"	t	namespace:std
wstring	cpp_src/stringfwd.h	/^  typedef basic_string<wchar_t> wstring;$/;"	t	namespace:std
x	opencv2/core/types.hpp	/^    _Tp x, y, width, height; \/\/< the top-left corner, as well as width and height of the rectangle$/;"	m	class:cv::Rect_
x	opencv2/core/types.hpp	/^    _Tp x, y, z; \/\/< the point coordinates$/;"	m	class:cv::Point3_
x	opencv2/core/types.hpp	/^    _Tp x, y; \/\/< the point coordinates$/;"	m	class:cv::Point_
x	opencv2/core/types_c.h	/^    double x;$/;"	m	struct:CvPoint2D64f
x	opencv2/core/types_c.h	/^    double x;$/;"	m	struct:CvPoint3D64f
x	opencv2/core/types_c.h	/^    float x;$/;"	m	struct:CvPoint2D32f
x	opencv2/core/types_c.h	/^    float x;$/;"	m	struct:CvPoint3D32f
x	opencv2/core/types_c.h	/^    int x;$/;"	m	struct:CvPoint
x	opencv2/core/types_c.h	/^    int x;$/;"	m	struct:CvRect
x	opencv2/cudalegacy/NCV.hpp	/^    Ncv32s x;          \/\/\/< x-coordinate of upper left corner.$/;"	m	struct:NcvRect32s
x	opencv2/cudalegacy/NCV.hpp	/^    Ncv32s x; \/\/\/< Point X.$/;"	m	struct:NcvPoint2D32s
x	opencv2/cudalegacy/NCV.hpp	/^    Ncv32u x;          \/\/\/< x-coordinate of upper left corner.$/;"	m	struct:NcvRect32u
x	opencv2/cudalegacy/NCV.hpp	/^    Ncv32u x; \/\/\/< Point X.$/;"	m	struct:NcvPoint2D32u
x	opencv2/cudalegacy/NCV.hpp	/^    Ncv8u x;$/;"	m	struct:NcvRect8u
x	opencv2/videostab/fast_marching.hpp	/^        int x, y;$/;"	m	struct:cv::videostab::FastMarchingMethod::DXY
xOffset	opencv2/core/types_c.h	/^    int  xOffset;$/;"	m	struct:_IplROI
xor_masks_	opencv2/flann/lsh_index.h	/^    std::vector<lsh::BucketKey> xor_masks_;$/;"	m	class:cvflann::LshIndex
xyz_shift	opencv2/core/cuda/detail/color_detail.hpp	/^            xyz_shift  = 12,$/;"	e	enum:cv::cuda::device::color_detail::__anon246
xyz_shift	opencv2/cudev/functional/detail/color_cvt.hpp	/^        xyz_shift  = 12,$/;"	e	enum:cv::cudev::color_cvt_detail::__anon396
y	opencv2/core/types.hpp	/^    _Tp x, y, width, height; \/\/< the top-left corner, as well as width and height of the rectangle$/;"	m	class:cv::Rect_
y	opencv2/core/types.hpp	/^    _Tp x, y, z; \/\/< the point coordinates$/;"	m	class:cv::Point3_
y	opencv2/core/types.hpp	/^    _Tp x, y; \/\/< the point coordinates$/;"	m	class:cv::Point_
y	opencv2/core/types_c.h	/^    double y;$/;"	m	struct:CvPoint2D64f
y	opencv2/core/types_c.h	/^    double y;$/;"	m	struct:CvPoint3D64f
y	opencv2/core/types_c.h	/^    float y;$/;"	m	struct:CvPoint2D32f
y	opencv2/core/types_c.h	/^    float y;$/;"	m	struct:CvPoint3D32f
y	opencv2/core/types_c.h	/^    int y;$/;"	m	struct:CvPoint
y	opencv2/core/types_c.h	/^    int y;$/;"	m	struct:CvRect
y	opencv2/cudalegacy/NCV.hpp	/^    Ncv32s y;          \/\/\/< y-coordinate of upper left corner.$/;"	m	struct:NcvRect32s
y	opencv2/cudalegacy/NCV.hpp	/^    Ncv32s y; \/\/\/< Point Y.$/;"	m	struct:NcvPoint2D32s
y	opencv2/cudalegacy/NCV.hpp	/^    Ncv32u y;          \/\/\/< y-coordinate of upper left corner.$/;"	m	struct:NcvRect32u
y	opencv2/cudalegacy/NCV.hpp	/^    Ncv32u y; \/\/\/< Point Y.$/;"	m	struct:NcvPoint2D32u
y	opencv2/cudalegacy/NCV.hpp	/^    Ncv8u y;$/;"	m	struct:NcvRect8u
y	opencv2/videostab/fast_marching.hpp	/^        int x, y;$/;"	m	struct:cv::videostab::FastMarchingMethod::DXY
yOffset	opencv2/core/types_c.h	/^    int  yOffset;$/;"	m	struct:_IplROI
ydm	cpp_src/locale_facets.h	/^    enum dateorder { no_order, dmy, mdy, ymd, ydm };$/;"	e	enum:std::time_base::dateorder
ymd	cpp_src/locale_facets.h	/^    enum dateorder { no_order, dmy, mdy, ymd, ydm };$/;"	e	enum:std::time_base::dateorder
yota	opencv2/core/cuda/block.hpp	/^        static __device__ __forceinline__ void yota(OutIt beg, OutIt end, T value)$/;"	f	struct:cv::cuda::device::Block
yota	opencv2/core/cuda/warp.hpp	/^        static __device__ __forceinline__ void yota(OutIt beg, OutIt end, T value)$/;"	f	struct:cv::cuda::device::Warp
yuv_shift	opencv2/core/cuda/detail/color_detail.hpp	/^            yuv_shift  = 14,$/;"	e	enum:cv::cuda::device::color_detail::__anon246
yuv_shift	opencv2/cudev/functional/detail/color_cvt.hpp	/^        yuv_shift  = 14,$/;"	e	enum:cv::cudev::color_cvt_detail::__anon396
z	opencv2/core/types.hpp	/^    _Tp x, y, z; \/\/< the point coordinates$/;"	m	class:cv::Point3_
z	opencv2/core/types_c.h	/^    double z;$/;"	m	struct:CvPoint3D64f
z	opencv2/core/types_c.h	/^    float z;$/;"	m	struct:CvPoint3D32f
zero	opencv2/core/hal/intrin.hpp	/^    static v_float32x4 zero() { return v_setzero_f32(); }$/;"	f	struct:cv::V_RegTrait128
zero	opencv2/core/hal/intrin.hpp	/^    static v_float64x2 zero() { return v_setzero_f64(); }$/;"	f	struct:cv::V_RegTrait128
zero	opencv2/core/hal/intrin.hpp	/^    static v_int16x8 zero() { return v_setzero_s16(); }$/;"	f	struct:cv::V_RegTrait128
zero	opencv2/core/hal/intrin.hpp	/^    static v_int32x4 zero() { return v_setzero_s32(); }$/;"	f	struct:cv::V_RegTrait128
zero	opencv2/core/hal/intrin.hpp	/^    static v_int64x2 zero() { return v_setzero_s64(); }$/;"	f	struct:cv::V_RegTrait128
zero	opencv2/core/hal/intrin.hpp	/^    static v_int8x16 zero() { return v_setzero_s8(); }$/;"	f	struct:cv::V_RegTrait128
zero	opencv2/core/hal/intrin.hpp	/^    static v_uint16x8 zero() { return v_setzero_u16(); }$/;"	f	struct:cv::V_RegTrait128
zero	opencv2/core/hal/intrin.hpp	/^    static v_uint32x4 zero() { return v_setzero_u32(); }$/;"	f	struct:cv::V_RegTrait128
zero	opencv2/core/hal/intrin.hpp	/^    static v_uint64x2 zero() { return v_setzero_u64(); }$/;"	f	struct:cv::V_RegTrait128
zero	opencv2/core/hal/intrin.hpp	/^    static v_uint8x16 zero() { return v_setzero_u8(); }$/;"	f	struct:cv::V_RegTrait128
zero	opencv2/core/hal/intrin_cpp.hpp	/^    static v_reg<_Tp, n> zero()$/;"	f	struct:cv::v_reg
zeros	opencv2/core/mat.inl.hpp	/^MatExpr Mat_<_Tp>::zeros(Size sz)$/;"	f	class:cv::Mat_
zeros	opencv2/core/mat.inl.hpp	/^MatExpr Mat_<_Tp>::zeros(int rows, int cols)$/;"	f	class:cv::Mat_
zeros	opencv2/core/matx.hpp	/^Matx<_Tp,m,n> Matx<_Tp,m,n>::zeros()$/;"	f	class:cv::Matx
zipPtr	opencv2/cudev/ptr2d/zip.hpp	/^zipPtr(const Ptr0& ptr0, const Ptr1& ptr1)$/;"	f	namespace:cv::cudev
zipPtr	opencv2/cudev/ptr2d/zip.hpp	/^zipPtr(const Ptr0& ptr0, const Ptr1& ptr1, const Ptr2& ptr2)$/;"	f	namespace:cv::cudev
zipPtr	opencv2/cudev/ptr2d/zip.hpp	/^zipPtr(const Ptr0& ptr0, const Ptr1& ptr1, const Ptr2& ptr2, const Ptr3& ptr3)$/;"	f	namespace:cv::cudev
~Allocator	opencv2/core/cuda.hpp	/^        virtual ~Allocator() {}$/;"	f	class:cv::cuda::GpuMat::Allocator
~Allocator	opencv2/core/cvstd.hpp	/^    ~Allocator() {}$/;"	f	class:cv::Allocator
~AutoBuffer	opencv2/core/utility.hpp	/^AutoBuffer<_Tp, fixed_size>::~AutoBuffer()$/;"	f	class:cv::AutoBuffer
~AutoLock	opencv2/core/utility.hpp	/^    ~AutoLock() { mutex->unlock(); }$/;"	f	class:cv::AutoLock
~AutotunedIndex	opencv2/flann/autotuned_index.h	/^    virtual ~AutotunedIndex()$/;"	f	class:cvflann::AutotunedIndex
~BFMatcher	opencv2/features2d.hpp	/^    virtual ~BFMatcher() {}$/;"	f	class:cv::BFMatcher
~Blender	opencv2/stitching/detail/blenders.hpp	/^    virtual ~Blender() {}$/;"	f	class:cv::detail::Blender
~BufferPoolController	opencv2/core/bufferpool.hpp	/^    ~BufferPoolController() { }$/;"	f	class:cv::BufferPoolController
~CompositeIndex	opencv2/flann/composite_index.h	/^    virtual ~CompositeIndex()$/;"	f	class:cvflann::CompositeIndex
~DCT2D	opencv2/core/hal/hal.hpp	/^    virtual ~DCT2D() {}$/;"	f	struct:cv::hal::DCT2D
~DFT1D	opencv2/core/hal/hal.hpp	/^    virtual ~DFT1D() {}$/;"	f	struct:cv::hal::DFT1D
~DFT2D	opencv2/core/hal/hal.hpp	/^    virtual ~DFT2D() {}$/;"	f	struct:cv::hal::DFT2D
~DeblurerBase	opencv2/videostab/deblurring.hpp	/^    virtual ~DeblurerBase() {}$/;"	f	class:cv::videostab::DeblurerBase
~EncoderCallBack	opencv2/cudacodec.hpp	/^    virtual ~EncoderCallBack() {}$/;"	f	class:cv::cudacodec::EncoderCallBack
~Estimator	opencv2/stitching/detail/motion_estimators.hpp	/^    virtual ~Estimator() {}$/;"	f	class:cv::detail::Estimator
~ExposureCompensator	opencv2/stitching/detail/exposure_compensate.hpp	/^    virtual ~ExposureCompensator() {}$/;"	f	class:cv::detail::ExposureCompensator
~FeaturesFinder	opencv2/stitching/detail/matchers.hpp	/^    virtual ~FeaturesFinder() {}$/;"	f	class:cv::detail::FeaturesFinder
~FeaturesMatcher	opencv2/stitching/detail/matchers.hpp	/^    virtual ~FeaturesMatcher() {}$/;"	f	class:cv::detail::FeaturesMatcher
~Filter2D	opencv2/imgproc/hal/hal.hpp	/^    virtual ~Filter2D() {}$/;"	f	struct:cv::hal::Filter2D
~Function	opencv2/core/optim.hpp	/^        virtual ~Function() {}$/;"	f	class:cv::MinProblemSolver::Function
~GenericIndex	opencv2/flann.hpp	/^GenericIndex<Distance>::~GenericIndex()$/;"	f	class:cv::flann::GenericIndex
~GpuMat	opencv2/core/cuda.inl.hpp	/^GpuMat::~GpuMat()$/;"	f	class:cv::cuda::GpuMat
~HOGDescriptor	opencv2/objdetect.hpp	/^    virtual ~HOGDescriptor() {}$/;"	f	struct:cv::HOGDescriptor
~HierarchicalClusteringIndex	opencv2/flann/hierarchical_clustering_index.h	/^    virtual ~HierarchicalClusteringIndex()$/;"	f	class:cvflann::HierarchicalClusteringIndex
~HostMem	opencv2/core/cuda.inl.hpp	/^HostMem::~HostMem()$/;"	f	class:cv::cuda::HostMem
~IDenseOptFlowEstimator	opencv2/videostab/optical_flow.hpp	/^    virtual ~IDenseOptFlowEstimator() {}$/;"	f	class:cv::videostab::IDenseOptFlowEstimator
~IDetector	opencv2/objdetect/detection_based_tracker.hpp	/^                virtual ~IDetector() {}$/;"	f	class:cv::DetectionBasedTracker::IDetector
~IFrameSource	opencv2/videostab/frame_source.hpp	/^    virtual ~IFrameSource() {}$/;"	f	class:cv::videostab::IFrameSource
~ILog	opencv2/videostab/log.hpp	/^    virtual ~ILog() {}$/;"	f	class:cv::videostab::ILog
~IMotionStabilizer	opencv2/videostab/motion_stabilizing.hpp	/^    virtual ~IMotionStabilizer() {}$/;"	f	class:cv::videostab::IMotionStabilizer
~INCVMemAllocator	opencv2/cudalegacy/NCV.hpp	/^inline INCVMemAllocator::~INCVMemAllocator() {}$/;"	f	class:INCVMemAllocator
~IOutlierRejector	opencv2/videostab/outlier_rejection.hpp	/^    virtual ~IOutlierRejector() {}$/;"	f	class:cv::videostab::IOutlierRejector
~ISparseOptFlowEstimator	opencv2/videostab/optical_flow.hpp	/^    virtual ~ISparseOptFlowEstimator() {}$/;"	f	class:cv::videostab::ISparseOptFlowEstimator
~ImageMotionEstimatorBase	opencv2/videostab/global_motion.hpp	/^    virtual ~ImageMotionEstimatorBase() {}$/;"	f	class:cv::videostab::ImageMotionEstimatorBase
~Index	opencv2/flann/flann_base.hpp	/^    ~Index()$/;"	f	class:cvflann::Index
~Index_	opencv2/flann.hpp	/^    FLANN_DEPRECATED ~Index_()$/;"	f	class:cv::flann::Index_
~InpainterBase	opencv2/videostab/inpainting.hpp	/^    virtual ~InpainterBase() {}$/;"	f	class:cv::videostab::InpainterBase
~IppAutoBuffer	opencv2/core/private.hpp	/^    ~IppAutoBuffer() { Release(); }$/;"	f	class:IppAutoBuffer
~KDTreeIndex	opencv2/flann/kdtree_index.h	/^    ~KDTreeIndex()$/;"	f	class:cvflann::KDTreeIndex
~KDTreeSingleIndex	opencv2/flann/kdtree_single_index.h	/^    ~KDTreeSingleIndex()$/;"	f	class:cvflann::KDTreeSingleIndex
~KMeansIndex	opencv2/flann/kmeans_index.h	/^    virtual ~KMeansIndex()$/;"	f	class:cvflann::KMeansIndex
~LineSegmentDetector	opencv2/imgproc.hpp	/^    virtual ~LineSegmentDetector() { }$/;"	f	class:cv::LineSegmentDetector
~Logger	opencv2/flann/logger.h	/^    ~Logger()$/;"	f	class:cvflann::Logger
~MaskGenerator	opencv2/objdetect.hpp	/^        virtual ~MaskGenerator() {}$/;"	f	class:cv::BaseCascadeClassifier::MaskGenerator
~Mat	opencv2/core/mat.inl.hpp	/^Mat::~Mat()$/;"	f	class:cv::Mat
~MatAllocator	opencv2/core/mat.hpp	/^    virtual ~MatAllocator() {}$/;"	f	class:cv::MatAllocator
~Morph	opencv2/imgproc/hal/hal.hpp	/^    virtual ~Morph() {}$/;"	f	struct:cv::hal::Morph
~MotionEstimatorBase	opencv2/videostab/global_motion.hpp	/^    virtual ~MotionEstimatorBase() {}$/;"	f	class:cv::videostab::MotionEstimatorBase
~MotionFilterBase	opencv2/videostab/motion_stabilizing.hpp	/^    virtual ~MotionFilterBase() {}$/;"	f	class:cv::videostab::MotionFilterBase
~NCVMatrix	opencv2/cudalegacy/NCV.hpp	/^    virtual ~NCVMatrix() {}$/;"	f	class:NCVMatrix
~NCVMatrixAlloc	opencv2/cudalegacy/NCV.hpp	/^    ~NCVMatrixAlloc()$/;"	f	class:NCVMatrixAlloc
~NCVVector	opencv2/cudalegacy/NCV.hpp	/^    virtual ~NCVVector() {}$/;"	f	class:NCVVector
~NCVVectorAlloc	opencv2/cudalegacy/NCV.hpp	/^    ~NCVVectorAlloc()$/;"	f	class:NCVVectorAlloc
~NNIndex	opencv2/flann/nn_index.h	/^    virtual ~NNIndex() {}$/;"	f	class:cvflann::NNIndex
~Node	opencv2/core/utility.hpp	/^    ~Node()$/;"	f	class:cv::Node
~NppStStreamHandler	opencv2/cudalegacy/private.hpp	/^        inline ~NppStStreamHandler()$/;"	f	class:cv::cuda::NppStStreamHandler
~PB_DS_BIN_TREE_NAME	5/ext/pb_ds/detail/bin_search_tree_/constructors_destructor_fn_imps.hpp	/^~PB_DS_BIN_TREE_NAME()$/;"	f	class:PB_DS_CLASS_C_DEC
~PB_DS_CC_HASH_NAME	5/ext/pb_ds/detail/cc_hash_table_map_/constructor_destructor_fn_imps.hpp	/^~PB_DS_CC_HASH_NAME()$/;"	f	class:PB_DS_CLASS_C_DEC
~PB_DS_GP_HASH_NAME	5/ext/pb_ds/detail/gp_hash_table_map_/constructor_destructor_fn_imps.hpp	/^~PB_DS_GP_HASH_NAME()$/;"	f	class:PB_DS_CLASS_C_DEC
~PB_DS_LU_NAME	5/ext/pb_ds/detail/list_update_map_/constructor_destructor_fn_imps.hpp	/^~PB_DS_LU_NAME()$/;"	f	class:PB_DS_CLASS_C_DEC
~PB_DS_OV_TREE_NAME	5/ext/pb_ds/detail/ov_tree_map_/constructors_destructor_fn_imps.hpp	/^~PB_DS_OV_TREE_NAME()$/;"	f	class:PB_DS_CLASS_C_DEC
~PB_DS_PAT_TRIE_NAME	5/ext/pb_ds/detail/pat_trie_/constructors_destructor_fn_imps.hpp	/^~PB_DS_PAT_TRIE_NAME()$/;"	f	class:PB_DS_CLASS_C_DEC
~PooledAllocator	opencv2/flann/allocator.h	/^    ~PooledAllocator()$/;"	f	class:cvflann::PooledAllocator
~Ptr	opencv2/core/ptr.inl.hpp	/^Ptr<T>::~Ptr()$/;"	f	class:cv::Ptr
~PtrOwner	opencv2/core/ptr.inl.hpp	/^    virtual ~PtrOwner()$/;"	f	struct:cv::detail::PtrOwner
~PyrLkOptFlowEstimatorBase	opencv2/videostab/optical_flow.hpp	/^    virtual ~PyrLkOptFlowEstimatorBase() {}$/;"	f	class:cv::videostab::PyrLkOptFlowEstimatorBase
~RadiusResultSet	opencv2/flann/result_set.h	/^    ~RadiusResultSet()$/;"	f	class:cvflann::RadiusResultSet
~RawVideoSource	opencv2/cudacodec.hpp	/^    virtual ~RawVideoSource() {}$/;"	f	class:cv::cudacodec::RawVideoSource
~ResultSet	opencv2/flann/result_set.h	/^    virtual ~ResultSet() {}$/;"	f	class:cvflann::ResultSet
~RotationWarper	opencv2/stitching/detail/warpers.hpp	/^    virtual ~RotationWarper() {}$/;"	f	class:cv::detail::RotationWarper
~SeamFinder	opencv2/stitching/detail/seam_finders.hpp	/^    virtual ~SeamFinder() {}$/;"	f	class:cv::detail::SeamFinder
~SepFilter2D	opencv2/imgproc/hal/hal.hpp	/^    virtual ~SepFilter2D() {}$/;"	f	struct:cv::hal::SepFilter2D
~SparseMat	opencv2/core/mat.inl.hpp	/^SparseMat::~SparseMat()$/;"	f	class:cv::SparseMat
~StabilizerBase	opencv2/videostab/stabilizer.hpp	/^    virtual ~StabilizerBase() {}$/;"	f	class:cv::videostab::StabilizerBase
~String	opencv2/core/cvstd.hpp	/^String::~String()$/;"	f	class:cv::String
~TLSData	opencv2/core/utility.hpp	/^    inline ~TLSData()       { release();            } \/\/ Release key and delete associated data$/;"	f	class:cv::TLSData
~Texture	opencv2/cudev/ptr2d/texture.hpp	/^    __host__ ~Texture()$/;"	f	struct:cv::cudev::Texture
~Timelapser	opencv2/stitching/detail/timelapsers.hpp	/^    virtual ~Timelapser() {}$/;"	f	class:cv::detail::Timelapser
~UMatDataAutoLock	opencv2/core/mat.inl.hpp	/^inline UMatDataAutoLock::~UMatDataAutoLock() { u->unlock(); }$/;"	f	class:cv::UMatDataAutoLock
~UntypedMatrix	opencv2/flann/matrix.h	/^    ~UntypedMatrix()$/;"	f	class:cvflann::UntypedMatrix
~VideoReader	opencv2/cudacodec.hpp	/^    virtual ~VideoReader() {}$/;"	f	class:cv::cudacodec::VideoReader
~VideoWriter	opencv2/cudacodec.hpp	/^    virtual ~VideoWriter() {}$/;"	f	class:cv::cudacodec::VideoWriter
~WImage	opencv2/core/wimage.hpp	/^template<typename T> inline WImage<T>::~WImage() {}$/;"	f	class:cv::WImage
~WImageBuffer	opencv2/core/wimage.hpp	/^    ~WImageBuffer() {$/;"	f	class:cv::WImageBuffer
~WImageBufferC	opencv2/core/wimage.hpp	/^    ~WImageBufferC() {$/;"	f	class:cv::WImageBufferC
~WImageC	opencv2/core/wimage.hpp	/^template<typename T, int C> inline WImageC<T, C>::~WImageC() {}$/;"	f	class:cv::WImageC
~WImageViewC	opencv2/core/wimage.hpp	/^    virtual ~WImageViewC() {}$/;"	f	class:cv::WImageViewC
~WarperCreator	opencv2/stitching/warpers.hpp	/^    virtual ~WarperCreator() {}$/;"	f	class:cv::WarperCreator
~WobbleSuppressorBase	opencv2/videostab/wobble_suppression.hpp	/^    virtual ~WobbleSuppressorBase() {}$/;"	f	class:cv::videostab::WobbleSuppressorBase
~_Bvector_base	cpp_src/stl_bvector.h	/^      ~_Bvector_base()$/;"	f	struct:std::_Bvector_base
~_Deque_base	cpp_src/stl_deque.h	/^    ~_Deque_base()$/;"	f	class:std::_Deque_base
~_InputArray	opencv2/core/mat.inl.hpp	/^inline _InputArray::~_InputArray() {}$/;"	f	class:cv::_InputArray
~_Leaf	5/ext/pb_ds/detail/pat_trie_/pat_trie_base.hpp	/^      ~_Leaf() { }$/;"	f	struct:__gnu_pbds::detail::pat_trie_base::_Leaf
~_List_base	cpp_src/stl_list.h	/^      ~_List_base()$/;"	f	class:std::_List_base
~_LoserTreeBase	5/parallel/losertree.h	/^      ~_LoserTreeBase()$/;"	f	class:__gnu_parallel::_LoserTreeBase
~_LoserTreePointerBase	5/parallel/losertree.h	/^      ~_LoserTreePointerBase()$/;"	f	class:__gnu_parallel::_LoserTreePointerBase
~_LoserTreePointerUnguardedBase	5/parallel/losertree.h	/^      ~_LoserTreePointerUnguardedBase()$/;"	f	class:__gnu_parallel::_LoserTreePointerUnguardedBase
~_LoserTreeUnguardedBase	5/parallel/losertree.h	/^      ~_LoserTreeUnguardedBase()$/;"	f	class:__gnu_parallel::_LoserTreeUnguardedBase
~_Rb_tree	cpp_src/stl_tree.h	/^      ~_Rb_tree()$/;"	f	class:std::_Rb_tree
~_RestrictedBoundedConcurrentQueue	5/parallel/queue.h	/^      ~_RestrictedBoundedConcurrentQueue()$/;"	f	class:__gnu_parallel::_RestrictedBoundedConcurrentQueue
~_Safe_iterator_base	5/debug/safe_base.h	/^    ~_Safe_iterator_base() { this->_M_detach(); }$/;"	f	class:__gnu_debug::_Safe_iterator_base
~_Safe_local_iterator_base	5/debug/safe_unordered_base.h	/^    ~_Safe_local_iterator_base() { this->_M_detach(); }$/;"	f	class:__gnu_debug::_Safe_local_iterator_base
~_Safe_sequence_base	5/debug/safe_base.h	/^    ~_Safe_sequence_base()$/;"	f	class:__gnu_debug::_Safe_sequence_base
~_Temporary_buffer	cpp_src/stl_tempbuf.h	/^      ~_Temporary_buffer()$/;"	f	class:std::_Temporary_buffer
~_Vector_base	cpp_src/stl_vector.h	/^      ~_Vector_base()$/;"	f	struct:std::_Vector_base
~__codecvt_abstract_base	cpp_src/codecvt.h	/^      ~__codecvt_abstract_base() { }$/;"	f	class:std::__codecvt_abstract_base
~__ctype_abstract_base	cpp_src/locale_facets.h	/^      ~__ctype_abstract_base() { }$/;"	f	class:std::__ctype_abstract_base
~__moneypunct_cache	cpp_src/locale_facets.h	/^    __moneypunct_cache<_CharT, _Intl>::~__moneypunct_cache()$/;"	f	class:std::__moneypunct_cache
~__numpunct_cache	cpp_src/locale_facets.h	/^    __numpunct_cache<_CharT>::~__numpunct_cache()$/;"	f	class:std::__numpunct_cache
~__reentrance_guard	5/profile/impl/profiler.h	/^    ~__reentrance_guard() { __inside() = false; }$/;"	f	struct:__gnu_profile::__reentrance_guard
~__timepunct_cache	cpp_src/locale_facets.h	/^    __timepunct_cache<_CharT>::~__timepunct_cache()$/;"	f	class:std::__timepunct_cache
~__trace_base	5/profile/impl/profiler_trace.h	/^      ~__trace_base()$/;"	f	class:__gnu_profile::__trace_base
~__trace_container_size	5/profile/impl/profiler_container_size.h	/^    ~__trace_container_size() { }$/;"	f	class:__gnu_profile::__trace_container_size
~__trace_hash_func	5/profile/impl/profiler_hash_func.h	/^    ~__trace_hash_func() {}$/;"	f	class:__gnu_profile::__trace_hash_func
~__trace_list_to_slist	5/profile/impl/profiler_list_to_slist.h	/^    ~__trace_list_to_slist() { }$/;"	f	class:__gnu_profile::__trace_list_to_slist
~__trace_list_to_vector	5/profile/impl/profiler_list_to_vector.h	/^    ~__trace_list_to_vector() { }$/;"	f	class:__gnu_profile::__trace_list_to_vector
~__trace_vector_to_list	5/profile/impl/profiler_vector_to_list.h	/^    ~__trace_vector_to_list() { }$/;"	f	class:__gnu_profile::__trace_vector_to_list
~allocator	cpp_src/allocator.h	/^      ~allocator() throw() { }$/;"	f	class:std::allocator
~any	opencv2/flann/any.h	/^    ~any()$/;"	f	struct:cvflann::any
~base_any_policy	opencv2/flann/any.h	/^    virtual ~base_any_policy() {}$/;"	f	struct:cvflann::anyimpl::base_any_policy
~basic_branch	5/ext/pb_ds/assoc_container.hpp	/^    ~basic_branch() { }$/;"	f	class:__gnu_pbds::basic_branch
~basic_hash_table	5/ext/pb_ds/assoc_container.hpp	/^    ~basic_hash_table() { }$/;"	f	class:__gnu_pbds::basic_hash_table
~basic_ios	cpp_src/basic_ios.h	/^      ~basic_ios() { }$/;"	f	class:std::basic_ios
~basic_string	cpp_src/basic_string.h	/^      ~basic_string()$/;"	f	class:std::basic_string
~binary_heap	5/ext/pb_ds/detail/binary_heap_/constructors_destructor_fn_imps.hpp	/^~binary_heap()$/;"	f	class:PB_DS_CLASS_C_DEC
~binomial_heap	5/ext/pb_ds/detail/binomial_heap_/constructors_destructor_fn_imps.hpp	/^~binomial_heap() { }$/;"	f	class:PB_DS_CLASS_C_DEC
~binomial_heap_base	5/ext/pb_ds/detail/binomial_heap_base_/constructors_destructor_fn_imps.hpp	/^~binomial_heap_base()$/;"	f	class:PB_DS_CLASS_C_DEC
~branch_bag	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^	~branch_bag()$/;"	f	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME::branch_bag
~branch_policy	5/ext/pb_ds/detail/branch_policy/branch_policy.hpp	/^	~branch_policy() { }$/;"	f	struct:__gnu_pbds::detail::branch_policy
~cc_hash_table	5/ext/pb_ds/assoc_container.hpp	/^    ~cc_hash_table() { }$/;"	f	class:__gnu_pbds::cc_hash_table
~codecvt	cpp_src/codecvt.h	/^      ~codecvt() { }$/;"	f	class:std::codecvt
~codecvt_byname	cpp_src/codecvt.h	/^      ~codecvt_byname() { }$/;"	f	class:std::codecvt_byname
~collate	cpp_src/locale_facets.h	/^      ~collate()$/;"	f	class:std::collate
~collate_byname	cpp_src/locale_facets.h	/^      ~collate_byname() { }$/;"	f	class:std::collate_byname
~cond_dealtor	5/ext/pb_ds/detail/cc_hash_table_map_/cond_key_dtor_entry_dealtor.hpp	/^    ~cond_dealtor()$/;"	f	class:__gnu_pbds::detail::cond_dealtor
~cond_dealtor	5/ext/pb_ds/detail/cond_dealtor.hpp	/^	~cond_dealtor()$/;"	f	class:__gnu_pbds::detail::cond_dealtor
~cond_dealtor	5/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp	/^	~cond_dealtor()$/;"	f	class:__gnu_pbds::detail::PB_DS_PAT_TRIE_NAME::cond_dealtor
~cond_dtor	5/ext/pb_ds/detail/ov_tree_map_/ov_tree_map_.hpp	/^	  ~cond_dtor()$/;"	f	class:__gnu_pbds::detail::PB_DS_OV_TREE_NAME::cond_dtor
~ctype_byname	cpp_src/locale_facets.h	/^      ~ctype_byname() { };$/;"	f	class:std::ctype_byname
~debug_map_base	5/ext/pb_ds/detail/debug_map_base.hpp	/^    ~debug_map_base()$/;"	f	class:__gnu_pbds::detail::PB_DS_CLASS_C_DEC
~deque	cpp_src/stl_deque.h	/^      ~deque()$/;"	f	class:std::deque
~gp_hash_table	5/ext/pb_ds/assoc_container.hpp	/^    ~gp_hash_table() { }$/;"	f	class:__gnu_pbds::gp_hash_table
~gslice	cpp_src/gslice.h	/^  gslice::~gslice()$/;"	f	class:std::gslice
~hash_load_check_resize_trigger	5/ext/pb_ds/detail/resize_policy/hash_load_check_resize_trigger_imp.hpp	/^~hash_load_check_resize_trigger() { }$/;"	f	class:PB_DS_CLASS_C_DEC
~hash_standard_resize_policy	5/ext/pb_ds/detail/resize_policy/hash_standard_resize_policy_imp.hpp	/^~hash_standard_resize_policy()$/;"	f	class:PB_DS_CLASS_C_DEC
~left_child_next_sibling_heap	5/ext/pb_ds/detail/left_child_next_sibling_heap_/constructors_destructor_fn_imps.hpp	/^~left_child_next_sibling_heap()$/;"	f	class:PB_DS_CLASS_C_DEC
~list_update	5/ext/pb_ds/assoc_container.hpp	/^    ~list_update() { }$/;"	f	class:__gnu_pbds::list_update
~messages_byname	cpp_src/locale_facets.h	/^      ~messages_byname()$/;"	f	class:std::messages_byname
~money_get	cpp_src/locale_facets.h	/^      ~money_get() { }$/;"	f	class:std::money_get
~money_put	cpp_src/locale_facets.h	/^      ~money_put() { }$/;"	f	class:std::money_put
~moneypunct_byname	cpp_src/locale_facets.h	/^      ~moneypunct_byname() { }$/;"	f	class:std::moneypunct_byname
~num_get	cpp_src/locale_facets.h	/^      virtual ~num_get() { }$/;"	f	class:std::num_get
~num_put	cpp_src/locale_facets.h	/^      ~num_put() { };$/;"	f	class:std::num_put
~numpunct_byname	cpp_src/locale_facets.h	/^      ~numpunct_byname() { }$/;"	f	class:std::numpunct_byname
~pairing_heap	5/ext/pb_ds/detail/pairing_heap_/constructors_destructor_fn_imps.hpp	/^~pairing_heap()$/;"	f	class:PB_DS_CLASS_C_DEC
~priority_queue	5/ext/pb_ds/priority_queue.hpp	/^    ~priority_queue() { }$/;"	f	class:__gnu_pbds::priority_queue
~probe_fn_base	5/ext/pb_ds/detail/hash_fn/probe_fn_base.hpp	/^      ~probe_fn_base() { }$/;"	f	class:__gnu_pbds::detail::probe_fn_base
~rc_binomial_heap	5/ext/pb_ds/detail/rc_binomial_heap_/constructors_destructor_fn_imps.hpp	/^~rc_binomial_heap()$/;"	f	class:PB_DS_CLASS_C_DEC
~thin_heap	5/ext/pb_ds/detail/thin_heap_/constructors_destructor_fn_imps.hpp	/^~thin_heap()$/;"	f	class:PB_DS_CLASS_C_DEC
~time_get	cpp_src/locale_facets.h	/^      ~time_get() { }$/;"	f	class:std::time_get
~time_get_byname	cpp_src/locale_facets.h	/^      ~time_get_byname() { }$/;"	f	class:std::time_get_byname
~time_put	cpp_src/locale_facets.h	/^      ~time_put()$/;"	f	class:std::time_put
~time_put_byname	cpp_src/locale_facets.h	/^      ~time_put_byname() { }$/;"	f	class:std::time_put_byname
~tree	5/ext/pb_ds/assoc_container.hpp	/^    ~tree() { }$/;"	f	class:__gnu_pbds::tree
~tree_order_statistics_node_update	5/ext/pb_ds/detail/tree_policy/order_statistics_imp.hpp	/^~tree_order_statistics_node_update()$/;"	f	class:PB_DS_CLASS_C_DEC
~trie	5/ext/pb_ds/assoc_container.hpp	/^    ~trie() { }$/;"	f	class:__gnu_pbds::trie
~vector	cpp_src/stl_bvector.h	/^    ~vector() { }$/;"	f	class:std::vector
~vector	cpp_src/stl_vector.h	/^      ~vector()$/;"	f	class:std::vector
